// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_1", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var A, C,
  B = {
    DashboardPage$() {
      return new B.DashboardPage(null);
    },
    DashboardPage: function DashboardPage(t0) {
      this.key = t0;
    },
    _DashboardPageState: function _DashboardPageState(t0, t1) {
      var _ = this;
      _.sections = t0;
      _.constitutionType = "";
      _.score = 0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _DashboardPageState__loadData_closure: function _DashboardPageState__loadData_closure(t0) {
      this.$this = t0;
    },
    _DashboardPageState_build_closure: function _DashboardPageState_build_closure(t0) {
      this.$this = t0;
    },
    _DashboardPageState__buildSection_closure0: function _DashboardPageState__buildSection_closure0() {
    },
    _DashboardPageState__buildSection_closure: function _DashboardPageState__buildSection_closure(t0) {
      this.section = t0;
    },
    _CustomAppBar: function _CustomAppBar(t0, t1, t2) {
      this.constitutionType = t0;
      this.score = t1;
      this.key = t2;
    },
    UniversalHealthCard: function UniversalHealthCard(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.title = t0;
      _.line1 = t1;
      _.line2 = t2;
      _.icon = t3;
      _.bottomIcon = t4;
      _.backgroundColor = t5;
      _.iconBackgroundColor = t6;
      _.key = t7;
    },
    HealthCardData: function HealthCardData(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.title = t0;
      _.line1 = t1;
      _.line2 = t2;
      _.icon = t3;
      _.bottomIcon = t4;
      _.backgroundColor = t5;
      _.iconBackgroundColor = t6;
    },
    HealthSection: function HealthSection(t0, t1, t2) {
      this.icon = t0;
      this.title = t1;
      this.cards = t2;
    },
    _CardVariant: function _CardVariant(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Card: function Card(t0, t1, t2, t3, t4) {
      var _ = this;
      _.color = t0;
      _.elevation = t1;
      _.shape = t2;
      _.child = t3;
      _.key = t4;
    },
    _CardDefaultsM3: function _CardDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.context = t0;
      _.___CardDefaultsM3__colors_FI = $;
      _.clipBehavior = t1;
      _.color = t2;
      _.shadowColor = t3;
      _.surfaceTintColor = t4;
      _.elevation = t5;
      _.margin = t6;
      _.shape = t7;
    }
  },
  D, H, F, I, G, E;
  A = holdersList[0];
  C = holdersList[2];
  B = hunkHelpers.updateHolder(holdersList[3], B);
  D = holdersList[13];
  H = holdersList[8];
  F = holdersList[12];
  I = holdersList[14];
  G = holdersList[6];
  E = holdersList[11];
  B.DashboardPage.prototype = {
    createState$0() {
      return new B._DashboardPageState(A._setArrayType([], type$.JSArray_HealthSection), C._StateLifecycle_0);
    }
  };
  B._DashboardPageState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._loadData$0();
    },
    _loadData$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$_loadData$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.setState$1(new B._DashboardPageState__loadData_closure($async$self));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_loadData$0, $async$completer);
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = A._setArrayType([new B._CustomAppBar(_this.constitutionType, _this.score, _null), C.SizedBox_null_20_null_null], type$.JSArray_Widget),
        t2 = _this.sections,
        t3 = A._arrayInstanceType(t2);
      C.JSArray_methods.addAll$1(t1, new A.MappedListIterable(t2, t3._eval$1("Widget(1)")._as(new B._DashboardPageState_build_closure(_this)), t3._eval$1("MappedListIterable<1,Widget>")));
      t1.push(D.SizedBox_null_120_null_null);
      t2 = A.SliverChildListDelegate$(t1, true, true, true);
      t1 = t1.length;
      return H.StyledWidget_withBackground(A.Scaffold$(_null, C.Color_Edl, G.StyledWidget_safeArea(new A.ListView(t2, C.EdgeInsets_16_16_16_16, C.Axis_1, false, _null, _null, C.AlwaysScrollableScrollPhysics_null, _null, false, _null, 0, _null, t1, C.DragStartBehavior_1, C.ScrollViewKeyboardDismissBehavior_0, _null, C.Clip_1, C.HitTestBehavior_1, _null)), _null), D.BackgroundPreset_kqs);
    },
    _buildSection$1(section) {
      var _null = null,
        t1 = A._setArrayType([], type$.JSArray_StatelessWidget),
        t2 = section.icon;
      if (t2 != null)
        t1.push(A.Icon$(t2, _null, _null, 24));
      t1.push(A.Text$(section.title, _null, _null, _null, _null, _null, _null, _null, F.TextStyle_kMo, _null, _null, _null, _null, _null));
      return A.StyledList_toColumn(A._setArrayType([A.StyledList_toRow(t1, C.CrossAxisAlignment_2, C.MainAxisAlignment_0, C.MainAxisSize_1, _null), C.SizedBox_null_8_null_null, new A.SizedBox(_null, 110, A.ListView$separated(new B._DashboardPageState__buildSection_closure(section), 2, _null, _null, C.Axis_0, new B._DashboardPageState__buildSection_closure0(), false), _null), C.SizedBox_null_20_null_null], type$.JSArray_Widget), C.CrossAxisAlignment_0, C.MainAxisAlignment_0, C.MainAxisSize_1);
    },
    set$sections(sections) {
      this.sections = type$.List_HealthSection._as(sections);
    }
  };
  B._CustomAppBar.prototype = {
    build$1(context) {
      var _null = null,
        t1 = type$.JSArray_Widget;
      return G.StyledWidget_toContainer(A.StyledList_toRow(A._setArrayType([A.StyledList_toColumn(A._setArrayType([D.Text_YGo, C.SizedBox_null_8_null_null, A.StyledList_toRow(A._setArrayType([A.Text$(this.constitutionType, _null, _null, _null, _null, _null, _null, _null, D.TextStyle_3kz, _null, _null, _null, _null, _null), E.SizedBox_12_null_null_null, A.Text$("" + this.score + "\u5206", _null, _null, _null, _null, _null, _null, _null, D.TextStyle_wes, _null, _null, _null, _null, _null)], t1), C.CrossAxisAlignment_4, C.MainAxisAlignment_0, C.MainAxisSize_1, C.TextBaseline_0), E.SizedBox_null_4_null_null, D.Text_MX3], t1), C.CrossAxisAlignment_0, C.MainAxisAlignment_0, C.MainAxisSize_1), new A.AvatarButton(55, _null)], t1), C.CrossAxisAlignment_0, C.MainAxisAlignment_3, C.MainAxisSize_1, _null), _null, C.EdgeInsets_20_20_20_20);
    }
  };
  B.UniversalHealthCard.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        ftheme = A.FTheme_of(context),
        t1 = A.BorderRadius$circular(16),
        t2 = A._setArrayType([], type$.JSArray_Widget),
        t3 = _this.icon,
        t4 = t3 != null;
      if (t4 && _this.iconBackgroundColor != null)
        t2.push(G.StyledWidget_toContainer(A.Icon$(t3, ftheme.colors.primaryForeground, _null, 16), A.BoxDecoration$(_null, _null, _null, _null, _this.iconBackgroundColor, _null, _null, C.BoxShape_1), C.EdgeInsets_4_4_4_4));
      if (t4)
        t2.push(C.SizedBox_null_8_null_null);
      t2.push(A.Text$(_this.title, _null, _null, _null, _null, _null, _null, _null, D.TextStyle_K7C, _null, _null, _null, _null, _null));
      t2.push(E.SizedBox_null_4_null_null);
      t2.push(A.Text$(_this.line1, _null, _null, _null, _null, _null, _null, _null, E.TextStyle_yFz, _null, _null, _null, _null, _null));
      t3 = _this.line2;
      t4 = t3 != null;
      if (t4)
        t2.push(D.SizedBox_null_2_null_null);
      if (t4)
        t2.push(A.Text$(t3, _null, _null, _null, _null, _null, _null, _null, E.TextStyle_yFz, _null, _null, _null, _null, _null));
      t3 = _this.bottomIcon;
      if (t3 != null)
        t2.push(A.Align$(E.Alignment_1_1, A.Icon$(t3, _null, _null, 24), _null, _null, _null));
      t2 = A.StyledWidget_padding(A.StyledList_toColumn(t2, C.CrossAxisAlignment_0, C.MainAxisAlignment_0, C.MainAxisSize_1), 12, _null, _null);
      return new B.Card(_this.backgroundColor, 0, new A.RoundedRectangleBorder(t1, C.BorderSide_Ah5), t2, _null);
    }
  };
  B.HealthCardData.prototype = {};
  B.HealthSection.prototype = {};
  B._CardVariant.prototype = {
    _enumToString$0() {
      return "_CardVariant." + this._name;
    }
  };
  B.Card.prototype = {
    build$1(context) {
      var t1, defaults, t2, t3, t4, t5, t6, t7, _this = this, _null = null,
        cardTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.CardTheme);
      cardTheme = cardTheme == null ? _null : cardTheme.get$data(0);
      if (cardTheme == null)
        cardTheme = A.Theme_of(context).cardTheme;
      A.Theme_of(context);
      switch (0) {
        case 0:
          t1 = new B._CardDefaultsM3(context, C.Clip_0, _null, _null, _null, 1, C.EdgeInsets_4_4_4_4, _null);
          break;
      }
      defaults = t1;
      t1 = cardTheme.margin;
      if (t1 == null) {
        t1 = defaults.margin;
        t1.toString;
      }
      t2 = _this.color;
      t3 = cardTheme.shadowColor;
      if (t3 == null)
        t3 = defaults.get$shadowColor(0);
      t4 = cardTheme.surfaceTintColor;
      if (t4 == null)
        t4 = defaults.get$surfaceTintColor();
      t5 = _this.elevation;
      t6 = _this.shape;
      t7 = cardTheme.clipBehavior;
      if (t7 == null) {
        t7 = defaults.clipBehavior;
        t7.toString;
      }
      t2 = A.Material$(C.Duration_200000, true, _null, new A.Semantics(A.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, _this.child, _null), t7, t2, t5, _null, t3, t6, t4, _null, C.MaterialType_1);
      return new A.Semantics(A.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), true, false, false, false, new A.Padding(t1, t2, _null), _null);
    }
  };
  B._CardDefaultsM3.prototype = {
    get$_card$_colors() {
      var t1, _this = this,
        value = _this.___CardDefaultsM3__colors_FI;
      if (value === $) {
        t1 = A.Theme_of(_this.context);
        _this.___CardDefaultsM3__colors_FI !== $ && A.throwLateFieldADI("_colors");
        value = _this.___CardDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$color(_) {
      var t1 = this.get$_card$_colors(),
        t2 = t1._surfaceContainerLow;
      return t2 == null ? t1.surface : t2;
    },
    get$shadowColor(_) {
      var t1 = this.get$_card$_colors()._shadow;
      return t1 == null ? C.Color_vnR : t1;
    },
    get$surfaceTintColor() {
      return C.Color_Edl;
    },
    get$shape(_) {
      return C.RoundedRectangleBorder_HeN;
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["Widget(HealthSection)"]);
  B._DashboardPageState__loadData_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5, _null = null,
        t1 = this.$this;
      t1.constitutionType = "\u9ecf\u6db2\u8d28";
      t1.score = 90;
      type$.MaterialColor._eval$1("ColorSwatch.T")._as(100);
      t2 = F.Map_tFGRR.$index(0, 100);
      t2.toString;
      t3 = C.Map_tFOkc.$index(0, 100);
      t3.toString;
      t4 = type$.JSArray_HealthCardData;
      t3 = A._setArrayType([new B.HealthCardData("\u5fc3\u7387", "60\u6b21/\u5206", _null, C.IconData_57947_MaterialIcons_null_false, _null, t2, C.MaterialColor_nI1), new B.HealthCardData("\u8840\u538b", "120/80", _null, C.IconData_984381_MaterialIcons_null_false, _null, t3, C.MaterialColor_45F)], t4);
      t2 = F.Map_tFZAB.$index(0, 100);
      t2.toString;
      t5 = F.Map_tF6No.$index(0, 100);
      t5.toString;
      t1.set$sections(A._setArrayType([new B.HealthSection(_null, "\u65e5\u5e38\u4f53\u5f81", t3), new B.HealthSection(D.IconData_58851_MaterialIcons_null_false, "\u953b\u70bc", A._setArrayType([new B.HealthCardData("\u81ea\u7531\u8bad\u7ec3", "85\u5206\u949f", "400kcal", _null, D.IconData_58851_MaterialIcons_null_false, t2, _null), new B.HealthCardData("\u8dd1\u6b65", "5\u516c\u91cc", "300kcal", _null, I.IconData_57820_MaterialIcons_null_false, t5, _null)], t4))], type$.JSArray_HealthSection));
    },
    $signature: 0
  };
  B._DashboardPageState_build_closure.prototype = {
    call$1(section) {
      return this.$this._buildSection$1(type$.HealthSection._as(section));
    },
    $signature: typesOffset + 0
  };
  B._DashboardPageState__buildSection_closure0.prototype = {
    call$2(__wc0_formal, __) {
      return E.SizedBox_12_null_null_null;
    },
    $signature: 96
  };
  B._DashboardPageState__buildSection_closure.prototype = {
    call$2(context, index) {
      var card,
        t1 = this.section.cards;
      if (!(index >= 0 && index < 2))
        return A.ioore(t1, index);
      card = t1[index];
      return new A.SizedBox(140, null, new B.UniversalHealthCard(card.title, card.line1, card.line2, card.icon, card.bottomIcon, card.backgroundColor, card.iconBackgroundColor, null), null);
    },
    $signature: 96
  };
  (function inheritance() {
    var _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(B.DashboardPage, A.StatefulWidget);
    _inherit(B._DashboardPageState, A.State);
    _inherit(B._DashboardPageState__loadData_closure, A.Closure0Args);
    _inherit(B._DashboardPageState_build_closure, A.Closure);
    _inheritMany(A.Closure2Args, [B._DashboardPageState__buildSection_closure0, B._DashboardPageState__buildSection_closure]);
    _inheritMany(A.StatelessWidget, [B._CustomAppBar, B.UniversalHealthCard, B.Card]);
    _inheritMany(A.Object, [B.HealthCardData, B.HealthSection]);
    _inherit(B._CardVariant, A._Enum);
    _inherit(B._CardDefaultsM3, A.CardThemeData);
  })();
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"DashboardPage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_DashboardPageState":{"State":["DashboardPage"],"Diagnosticable":[],"State.T":"DashboardPage"},"_CustomAppBar":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"UniversalHealthCard":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_CardVariant":{"Enum":[]},"Card":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_CardDefaultsM3":{"CardThemeData":[],"Diagnosticable":[]}}'));
  var type$ = {
    CardTheme: A.findType("CardTheme"),
    HealthSection: A.findType("HealthSection"),
    JSArray_HealthCardData: A.findType("JSArray<HealthCardData>"),
    JSArray_HealthSection: A.findType("JSArray<HealthSection>"),
    JSArray_StatelessWidget: A.findType("JSArray<StatelessWidget>"),
    JSArray_Widget: A.findType("JSArray<Widget>"),
    List_HealthSection: A.findType("List<HealthSection>"),
    MaterialColor: A.findType("MaterialColor"),
    void: A.findType("~")
  };
  (function constants() {
    D.BackgroundPreset_kqs = new H.BackgroundPreset("assets/images/human.jpg", C.Alignment_0_0);
    D.IconData_58851_MaterialIcons_null_false = new A.IconData(58851, "MaterialIcons", null, false);
    D.SizedBox_null_120_null_null = new A.SizedBox(null, 120, null, null);
    D.SizedBox_null_2_null_null = new A.SizedBox(null, 2, null, null);
    D.TextStyle_3kz = new A.TextStyle(true, null, null, null, null, null, 32, C.FontWeight_6_700, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TextStyle_K7C = new A.TextStyle(true, null, null, null, null, null, 16, C.FontWeight_6_700, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TextStyle_wes = new A.TextStyle(true, null, null, null, null, null, 24, C.FontWeight_5_600, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TextStyle_bPo = new A.TextStyle(true, null, null, null, null, null, 14, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.Text_MX3 = new A.Text("\u70b9\u51fb\u4e86\u89e3\u66f4\u591a", null, D.TextStyle_bPo, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TextStyle_U60 = new A.TextStyle(true, null, null, null, null, null, 16, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.Text_YGo = new A.Text("\u5065\u5eb7\u8bc4\u5206", null, D.TextStyle_U60, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D._CardVariant_0 = new B._CardVariant(0, "elevated");
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_1", e: "endPart", h: h});
})($__dart_deferred_initializers__, "esajytvzJ49uTj+u04GhwhyWSog=");
;