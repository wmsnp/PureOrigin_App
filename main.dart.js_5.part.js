// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_5", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, C, D, I, G, F,
  A = {
    _asyncStarHelper(object, bodyFunctionOrErrorCode, controller) {
      var t1, t2, t3,
        _s10_ = "controller";
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeWithValue$1(null);
        else {
          t1 = controller.___AsyncStarStreamController_controller_A;
          t1 === $ && C.throwLateFieldNI(_s10_);
          t1.close$0(0);
        }
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationFuture;
        if (t1 != null)
          t1._completeError$2(C.unwrapException(object), C.getTraceFromException(object));
        else {
          t1 = C.unwrapException(object);
          t2 = C.getTraceFromException(object);
          t3 = controller.___AsyncStarStreamController_controller_A;
          t3 === $ && C.throwLateFieldNI(_s10_);
          t3.addError$2(t1, t2);
          controller.___AsyncStarStreamController_controller_A.close$0(0);
        }
        return;
      }
      type$.void_Function_int_dynamic._as(bodyFunctionOrErrorCode);
      if (object instanceof A._IterationMarker) {
        if (controller.cancelationFuture != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          t2 = controller.___AsyncStarStreamController_controller_A;
          t2 === $ && C.throwLateFieldNI(_s10_);
          t2.add$1(0, controller.$ti._precomputed1._as(t1));
          C.scheduleMicrotask(new A._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          t1 = controller.$ti._eval$1("Stream<1>")._as(type$.Stream_dynamic._as(object.value));
          t2 = controller.___AsyncStarStreamController_controller_A;
          t2 === $ && C.throwLateFieldNI(_s10_);
          t2.addStream$2$cancelOnError(0, t1, false).then$1$1(0, new A._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode), type$.Null);
          return;
        }
      }
      C._awaitOnObject(object, bodyFunctionOrErrorCode);
    },
    _streamOfController(controller) {
      var t1 = controller.___AsyncStarStreamController_controller_A;
      t1 === $ && C.throwLateFieldNI("controller");
      return new C._ControllerStream(t1, C._instanceType(t1)._eval$1("_ControllerStream<1>"));
    },
    _AsyncStarStreamController$(body, $T) {
      var t1 = new A._AsyncStarStreamController($T._eval$1("_AsyncStarStreamController<0>"));
      t1._AsyncStarStreamController$1(body, $T);
      return t1;
    },
    _makeAsyncStarStreamController(body, $T) {
      return A._AsyncStarStreamController$(body, $T);
    },
    _IterationMarker_yieldStar(values) {
      return new A._IterationMarker(values, 1);
    },
    _IterationMarker_yieldSingle(value) {
      return new A._IterationMarker(value, 0);
    },
    _asyncStarHelper_closure: function _asyncStarHelper_closure(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _asyncStarHelper_closure0: function _asyncStarHelper_closure0(t0, t1) {
      this.controller = t0;
      this.bodyFunction = t1;
    },
    _AsyncStarStreamController: function _AsyncStarStreamController(t0) {
      var _ = this;
      _.___AsyncStarStreamController_controller_A = $;
      _.isSuspended = false;
      _.cancelationFuture = null;
      _.$ti = t0;
    },
    _AsyncStarStreamController__resumeBody: function _AsyncStarStreamController__resumeBody(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController__resumeBody_closure: function _AsyncStarStreamController__resumeBody_closure(t0) {
      this.body = t0;
    },
    _AsyncStarStreamController_closure0: function _AsyncStarStreamController_closure0(t0) {
      this._resumeBody = t0;
    },
    _AsyncStarStreamController_closure1: function _AsyncStarStreamController_closure1(t0, t1) {
      this.$this = t0;
      this._resumeBody = t1;
    },
    _AsyncStarStreamController_closure: function _AsyncStarStreamController_closure(t0, t1) {
      this.$this = t0;
      this.body = t1;
    },
    _AsyncStarStreamController__closure: function _AsyncStarStreamController__closure(t0) {
      this.body = t0;
    },
    _IterationMarker: function _IterationMarker(t0, t1) {
      this.value = t0;
      this.state = t1;
    },
    _Namespace__namespacePointer() {
      throw C.wrapException(C.UnsupportedError$("_Namespace"));
    },
    _checkForErrorResponse(response, message, path) {
      var t1;
      if (type$.List_nullable_Object._is(response) && !J.$eq$(J.$index$asx(response, 0), 0)) {
        t1 = J.getInterceptor$asx(response);
        switch (t1.$index(response, 0)) {
          case 1:
            throw C.wrapException(C.ArgumentError$(message + ": " + path, null));
          case 2:
            throw C.wrapException(A.FileSystemException_FileSystemException$_fromOSError(new A.OSError(C._asString(t1.$index(response, 2)), C._asInt(t1.$index(response, 1))), message, path));
          case 3:
            throw C.wrapException(A.FileSystemException$("File closed", path, null));
          default:
            throw C.wrapException(C.AssertionError$("Unknown error"));
        }
      }
    },
    File_File(path) {
      var t1;
      C.IOOverrides_current();
      C.ArgumentError_checkNotNull(path, "path", type$.String);
      t1 = A.FileSystemEntity__toNullTerminatedUtf8Array(D.C_Utf8Encoder.convert$1(path));
      return new A._File(path, t1);
    },
    FileSystemException$(message, path, osError) {
      return new A.FileSystemException(message, path, osError);
    },
    FileSystemException_FileSystemException$_fromOSError(err, message, path) {
      if ($.$get$Platform_isWindows())
        switch (err.errorCode) {
          case 5:
          case 16:
          case 19:
          case 24:
          case 32:
          case 33:
          case 65:
          case 108:
            return new A.PathAccessException(message, path, err);
          case 80:
          case 183:
            return new A.PathExistsException(message, path, err);
          case 2:
          case 3:
          case 15:
          case 123:
          case 18:
          case 53:
          case 67:
          case 161:
          case 206:
            return new A.PathNotFoundException(message, path, err);
          default:
            return new A.FileSystemException(message, path, err);
        }
      else
        switch (err.errorCode) {
          case 1:
          case 13:
            return new A.PathAccessException(message, path, err);
          case 17:
            return new A.PathExistsException(message, path, err);
          case 2:
            return new A.PathNotFoundException(message, path, err);
          default:
            return new A.FileSystemException(message, path, err);
        }
    },
    _File__namespacePointer() {
      return A._Namespace__namespacePointer();
    },
    _File__dispatchWithNamespace(request, data) {
      D.JSArray_methods.$indexSet(data, 0, A._File__namespacePointer());
    },
    FileSystemEntity__toNullTerminatedUtf8Array(l) {
      var t2, tmp,
        t1 = l.length;
      if (t1 !== 0)
        t2 = !D.NativeUint8List_methods.get$isEmpty(l) && !J.$eq$(D.NativeUint8List_methods.get$last(l), 0);
      else
        t2 = true;
      if (t2) {
        tmp = new Uint8Array(t1 + 1);
        D.NativeUint8List_methods.setRange$3(tmp, 0, t1, l);
        return tmp;
      } else
        return l;
    },
    OSError: function OSError(t0, t1) {
      this.message = t0;
      this.errorCode = t1;
    },
    FileSystemException: function FileSystemException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    PathAccessException: function PathAccessException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    PathExistsException: function PathExistsException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    PathNotFoundException: function PathNotFoundException(t0, t1, t2) {
      this.message = t0;
      this.path = t1;
      this.osError = t2;
    },
    _File: function _File(t0, t1) {
      this._io$_path = t0;
      this._rawPath = t1;
    },
    _File_length_closure: function _File_length_closure(t0) {
      this.$this = t0;
    },
    FileSystemEntity: function FileSystemEntity() {
    },
    Gradient_Gradient$radial(center, radius, colors, colorStops, tileMode, matrix4, focal) {
      var matrix32, t1;
      if (colors.length !== colorStops.length)
        C.throwExpression(C.ArgumentError$('"colors" and "colorStops" arguments must have equal length.', null));
      matrix32 = matrix4 != null ? C.toMatrix32(matrix4) : null;
      if (focal != null)
        t1 = focal.$eq(0, center);
      else
        t1 = true;
      if (t1)
        return $.$get$_renderer().createRadialGradient$6(0, center, radius, colors, colorStops, tileMode, matrix32);
      else {
        C.assertHelper(!center.$eq(0, D.Offset_0_0) || !J.$eq$(focal, D.Offset_0_0));
        return $.$get$_renderer().createConicalGradient$8(focal, 0, center, radius, colors, colorStops, tileMode, matrix32);
      }
    },
    ImageDescriptor_encoded(buffer) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageDescriptor),
        $async$returnValue, descriptor;
      var $async$ImageDescriptor_encoded = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              descriptor = new A.ImageDescriptor();
              descriptor._ui$_data = buffer._ui$_list;
              $async$returnValue = descriptor;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$ImageDescriptor_encoded, $async$completer);
    },
    TextDecoration_TextDecoration$combine(decorations) {
      var t1, mask, _i;
      for (t1 = decorations.length, mask = 0, _i = 0; _i < t1; ++_i)
        mask |= decorations[_i]._mask;
      return new C.TextDecoration(mask);
    },
    ImageDescriptor: function ImageDescriptor() {
      this._ui$_data = null;
    },
    buildCard(context, isSentByMe, theme, description, onTap, title) {
      var t3, t4, t5, t6, t7, _null = null,
        color = A.messageCardColor(isSentByMe, false, false),
        t1 = isSentByMe ? 0 : 12,
        t2 = A.messageCardColor(isSentByMe, true, false);
      t2 = C.BoxDecoration$(_null, _null, C.BorderRadius$circular(12), C._setArrayType([C.BoxShadow$(6, D.BlurStyle_0, $.$get$shadowColor(), B.Offset_0_3, 0)], type$.JSArray_BoxShadow), t2, _null, _null, D.BoxShape_0);
      t3 = C.Icon$(B.IconData_57509_MaterialIcons_null_true, color, _null, _null);
      t4 = theme.typography.bodyMedium;
      t5 = type$.JSArray_Widget;
      t6 = C._setArrayType([C.Text$(title, _null, _null, _null, _null, _null, _null, _null, t4.copyWith$2$color$fontWeight(color, D.FontWeight_6_700), _null, _null, _null, _null, _null)], t5);
      t7 = description.length !== 0;
      if (t7)
        t6.push(F.SizedBox_null_4_null_null);
      if (t7)
        t6.push(C.Text$(description, _null, _null, _null, _null, _null, _null, _null, t4.copyWith$1$color(color), _null, _null, _null, _null, _null));
      return C.GestureDetector$(_null, C.Container$(_null, C.StyledList_toRow(C._setArrayType([t3, F.SizedBox_12_null_null_null, C.StyledList_toColumn(t6, D.CrossAxisAlignment_0, D.MainAxisAlignment_0, D.MainAxisSize_0)], t5), D.CrossAxisAlignment_2, D.MainAxisAlignment_0, D.MainAxisSize_0, _null), D.Clip_0, _null, _null, t2, _null, _null, _null, new C.EdgeInsets(t1, 6, t1, 6), D.EdgeInsets_16_12_16_12, _null, _null, _null), D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, onTap, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    buildUnsupportedCard(context, isSentByMe, theme, text) {
      var _null = null,
        t1 = A.messageCardColor(isSentByMe, true, false);
      t1 = C.BoxDecoration$(_null, _null, C.BorderRadius$circular(12), C._setArrayType([C.BoxShadow$(6, D.BlurStyle_0, $.$get$shadowColor(), B.Offset_0_3, 0)], type$.JSArray_BoxShadow), t1, _null, _null, D.BoxShape_0);
      return C.Container$(_null, C.Text$(text, _null, _null, _null, _null, _null, _null, _null, theme.typography.bodyMedium.copyWith$1$color(A.messageCardColor(isSentByMe, false, false)), _null, _null, _null, _null, _null), D.Clip_0, _null, _null, t1, _null, _null, _null, D.EdgeInsets_12_6_12_6, D.EdgeInsets_16_12_16_12, _null, _null, _null);
    },
    ChatCustomMessage: function ChatCustomMessage(t0, t1, t2, t3) {
      var _ = this;
      _.message = t0;
      _.sessionId = t1;
      _.sendMessage = t2;
      _.key = t3;
    },
    ChatCustomMessageState: function ChatCustomMessageState(t0) {
      var _ = this;
      _._custom_message$_initialized = false;
      _.__ChatCustomMessageState_data_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    ChatCustomMessageState_refresh_closure: function ChatCustomMessageState_refresh_closure(t0) {
      this.$this = t0;
    },
    EventRegistry_builders_closure: function EventRegistry_builders_closure() {
    },
    EventRegistry_builders__closure0: function EventRegistry_builders__closure0() {
    },
    EventRegistry_builders__closure1: function EventRegistry_builders__closure1(t0, t1) {
      this.data = t0;
      this.widget = t1;
    },
    EventRegistry_builders___closure: function EventRegistry_builders___closure(t0, t1) {
      this.data = t0;
      this.widget = t1;
    },
    EventRegistry_builders___closure0: function EventRegistry_builders___closure0(t0) {
      this.widget = t0;
    },
    EventRegistry_builders_closure0: function EventRegistry_builders_closure0() {
    },
    EventRegistry_builders__closure: function EventRegistry_builders__closure(t0, t1) {
      this.widget = t0;
      this.refresh = t1;
    },
    EventRegistry_builders_closure1: function EventRegistry_builders_closure1() {
    },
    QuestionnairePage: function QuestionnairePage(t0, t1) {
      this.questionnaire = t0;
      this.key = t1;
    },
    _QuestionnairePageState: function _QuestionnairePageState(t0, t1, t2) {
      var _ = this;
      _._fC = t0;
      _._questionnaire_page$_controller = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _QuestionnairePageState_initState_closure: function _QuestionnairePageState_initState_closure() {
    },
    _QuestionnairePageState__onReset_closure: function _QuestionnairePageState__onReset_closure() {
    },
    _QuestionnairePageState__onChanged_closure: function _QuestionnairePageState__onChanged_closure(t0) {
      this.qid = t0;
    },
    _QuestionnairePageState_build_closure: function _QuestionnairePageState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _QuestionnairePageState_build__closure: function _QuestionnairePageState_build__closure() {
    },
    _QuestionnairePageState__checkbox_closure: function _QuestionnairePageState__checkbox_closure(t0, t1, t2) {
      this.$this = t0;
      this.qid = t1;
      this.options = t2;
    },
    _QuestionnairePageState__checkbox__closure: function _QuestionnairePageState__checkbox__closure() {
    },
    _QuestionnairePageState__checkbox__closure0: function _QuestionnairePageState__checkbox__closure0(t0, t1) {
      this.$this = t0;
      this.qid = t1;
    },
    _QuestionnairePageState__radio_closure: function _QuestionnairePageState__radio_closure(t0, t1, t2) {
      this.$this = t0;
      this.qid = t1;
      this.options = t2;
    },
    _QuestionnairePageState__radio__closure: function _QuestionnairePageState__radio__closure() {
    },
    _QuestionnairePageState__radio__closure0: function _QuestionnairePageState__radio__closure0(t0, t1) {
      this.$this = t0;
      this.qid = t1;
    },
    _QuestionnairePageState__slider_closure: function _QuestionnairePageState__slider_closure(t0, t1) {
      this.$this = t0;
      this.qid = t1;
    },
    _QuestionnairePageState__input_closure: function _QuestionnairePageState__input_closure(t0, t1) {
      this.$this = t0;
      this.qid = t1;
    },
    SliderController: function SliderController(t0, t1) {
      var _ = this;
      _._change_notifier$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    Slider: function Slider(t0, t1, t2, t3) {
      var _ = this;
      _.options = t0;
      _.controller = t1;
      _.onChanged = t2;
      _.key = t3;
    },
    _SliderState: function _SliderState(t0) {
      this._widget = null;
      this._debugLifecycleState = t0;
      this._framework$_element = null;
    },
    _SliderState_toggleRange_closure: function _SliderState_toggleRange_closure(t0, t1, t2) {
      this.$this = t0;
      this.min = t1;
      this.max = t2;
    },
    _SliderState_build_closure: function _SliderState_build_closure() {
    },
    _SliderState_build_closure0: function _SliderState_build_closure0() {
    },
    _SliderState_build_closure1: function _SliderState_build_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.min = t1;
      _.max = t2;
      _.sTD = t3;
    },
    _SliderState_build__closure: function _SliderState_build__closure(t0, t1, t2) {
      this.$this = t0;
      this.min = t1;
      this.max = t2;
    },
    _SliderState_build__closure0: function _SliderState_build__closure0(t0) {
      this.$this = t0;
    },
    _SliderState_build__closure1: function _SliderState_build__closure1(t0) {
      this.$this = t0;
    },
    GetChatController: function GetChatController(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.cSM = t0;
      _.uSM = t1;
      _.sSM = t2;
      _._messages = t3;
      _._operationController = t4;
      _._get_chat_controller$_storage = t5;
      _._pendingImagePaths = t6;
      _.__GetChatController_dio_F = t7;
      _.ScrollToMessageMixin__scrollToMessageId = t8;
      _.ScrollToMessageMixin__scrollToIndex = t9;
      _.UploadProgressMixin__progressControllers = t10;
    },
    GetChatController_insertMessage_closure: function GetChatController_insertMessage_closure(t0) {
      this.message = t0;
    },
    GetChatController_removeMessage_closure: function GetChatController_removeMessage_closure(t0) {
      this.message = t0;
    },
    GetChatController_updateMessage_closure: function GetChatController_updateMessage_closure(t0) {
      this.oldMessage = t0;
    },
    GetChatController_handleSendMessage_closure: function GetChatController_handleSendMessage_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.streamId = t2;
      _.customs = t3;
    },
    GetChatController_handleSendMessage_closure1: function GetChatController_handleSendMessage_closure1(t0, t1) {
      this.$this = t0;
      this.streamId = t1;
    },
    GetChatController_handleSendMessage_closure0: function GetChatController_handleSendMessage_closure0(t0, t1, t2) {
      this.$this = t0;
      this.streamId = t1;
      this.customs = t2;
    },
    GetChatController_handleSendMessage__closure: function GetChatController_handleSendMessage__closure(t0) {
      this.streamId = t0;
    },
    GetChatController_handleAttachmentTap_closure: function GetChatController_handleAttachmentTap_closure(t0, t1) {
      this.$this = t0;
      this.onUpdate = t1;
    },
    GetChatController_handleAttachmentTap__closure: function GetChatController_handleAttachmentTap__closure(t0, t1, t2) {
      this.$this = t0;
      this.context = t1;
      this.onUpdate = t2;
    },
    GetChatController_removeMessagesAfter_closure: function GetChatController_removeMessagesAfter_closure(t0) {
      this.messageId = t0;
    },
    _GetChatController_Object_UploadProgressMixin: function _GetChatController_Object_UploadProgressMixin() {
    },
    _GetChatController_Object_UploadProgressMixin_ScrollToMessageMixin: function _GetChatController_Object_UploadProgressMixin_ScrollToMessageMixin() {
    },
    ChatPage$() {
      return new A.ChatPage(null);
    },
    __ChatPageState_State_TickerProviderStateMixin_dispose_closure: function __ChatPageState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    ChatPage: function ChatPage(t0) {
      this.key = t0;
    },
    _ChatPageState: function _ChatPageState(t0, t1, t2) {
      var _ = this;
      _.___ChatPageState__hDM_A = _.___ChatPageState__cC_A = $;
      _._chat_page$_initialized = false;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _ChatPageState__initAsync_closure: function _ChatPageState__initAsync_closure() {
    },
    _ChatPageState__initAsync_closure0: function _ChatPageState__initAsync_closure0(t0) {
      this.$this = t0;
    },
    _ChatPageState__switchSession_closure: function _ChatPageState__switchSession_closure(t0, t1) {
      this.$this = t0;
      this.sessionId = t1;
    },
    _ChatPageState__deleteSession_closure: function _ChatPageState__deleteSession_closure() {
    },
    _ChatPageState__deleteSession_closure0: function _ChatPageState__deleteSession_closure0(t0, t1) {
      this.$this = t0;
      this.sessionId = t1;
    },
    _ChatPageState__showSessionSwitchDialog_closure: function _ChatPageState__showSessionSwitchDialog_closure(t0, t1, t2) {
      this.$this = t0;
      this.date = t1;
      this.sessions = t2;
    },
    _ChatPageState__showSessionSwitchDialog__closure0: function _ChatPageState__showSessionSwitchDialog__closure0(t0, t1, t2) {
      this.$this = t0;
      this.setState = t1;
      this.date = t2;
    },
    _ChatPageState__showSessionSwitchDialog___closure: function _ChatPageState__showSessionSwitchDialog___closure(t0, t1) {
      this.$this = t0;
      this.date = t1;
    },
    _ChatPageState__showSessionSwitchDialog__closure: function _ChatPageState__showSessionSwitchDialog__closure(t0, t1, t2) {
      this.$this = t0;
      this.sessions = t1;
      this.setState = t2;
    },
    _ChatPageState__showSessionSwitchDialog___closure1: function _ChatPageState__showSessionSwitchDialog___closure1(t0, t1) {
      this.$this = t0;
      this.session = t1;
    },
    _ChatPageState__showSessionSwitchDialog___closure0: function _ChatPageState__showSessionSwitchDialog___closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.session = t1;
      _.setState = t2;
      _.sessions = t3;
      _.index = t4;
    },
    _ChatPageState__showSessionSwitchDialog____closure: function _ChatPageState__showSessionSwitchDialog____closure(t0, t1) {
      this.sessions = t0;
      this.index = t1;
    },
    _ChatPageState__showCalendarDialog_closure: function _ChatPageState__showCalendarDialog_closure() {
    },
    _ChatPageState__showCalendarDialog_calendar: function _ChatPageState__showCalendarDialog_calendar(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.ftheme = t1;
      _.tileSize = t2;
      _.sessionMap = t3;
    },
    _ChatPageState__showCalendarDialog_calendar_closure1: function _ChatPageState__showCalendarDialog_calendar_closure1(t0, t1) {
      this.$this = t0;
      this.sessionMap = t1;
    },
    _ChatPageState__showCalendarDialog_calendar_closure0: function _ChatPageState__showCalendarDialog_calendar_closure0(t0, t1) {
      this.$this = t0;
      this.sessionMap = t1;
    },
    _ChatPageState__showCalendarDialog_calendar_closure: function _ChatPageState__showCalendarDialog_calendar_closure(t0, t1, t2) {
      this.sessionMap = t0;
      this.scores = t1;
      this.tileSize = t2;
    },
    _ChatPageState__showCalendarDialog_closure0: function _ChatPageState__showCalendarDialog_closure0(t0, t1, t2) {
      this.$this = t0;
      this.calendar = t1;
      this.ftheme = t2;
    },
    _ChatPageState__showCalendarDialog__closure: function _ChatPageState__showCalendarDialog__closure(t0, t1, t2) {
      this._box_0 = t0;
      this.calendar = t1;
      this.ftheme = t2;
    },
    _ChatPageState__showCalendarDialog___closure: function _ChatPageState__showCalendarDialog___closure(t0) {
      this.snapshot = t0;
    },
    _ChatPageState__buildPendingImagesPreview_closure: function _ChatPageState__buildPendingImagesPreview_closure(t0) {
      this.$this = t0;
    },
    _ChatPageState__buildPendingImagesPreview__closure: function _ChatPageState__buildPendingImagesPreview__closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _ChatPageState__buildPendingImagesPreview___closure: function _ChatPageState__buildPendingImagesPreview___closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _ChatPageState_build_closure: function _ChatPageState_build_closure(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_onUpdate: function _ChatPageState_build_onUpdate(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_onUpdate_closure: function _ChatPageState_build_onUpdate_closure() {
    },
    _ChatPageState_build_onError: function _ChatPageState_build_onError() {
    },
    _ChatPageState_build_closure0: function _ChatPageState_build_closure0(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure1: function _ChatPageState_build_closure1(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure2: function _ChatPageState_build_closure2(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure9: function _ChatPageState_build_closure9(t0, t1, t2) {
      this.$this = t0;
      this.onUpdate = t1;
      this.onError = t2;
    },
    _ChatPageState_build_closure11: function _ChatPageState_build_closure11(t0, t1) {
      this.$this = t0;
      this.onUpdate = t1;
    },
    _ChatPageState_build_closure10: function _ChatPageState_build_closure10(t0, t1, t2) {
      this.$this = t0;
      this.onUpdate = t1;
      this.onError = t2;
    },
    _ChatPageState_build_closure7: function _ChatPageState_build_closure7(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure8: function _ChatPageState_build_closure8() {
    },
    _ChatPageState_build_closure3: function _ChatPageState_build_closure3(t0) {
      this.constraints = t0;
    },
    _ChatPageState_build_closure4: function _ChatPageState_build_closure4() {
    },
    _ChatPageState_build_closure5: function _ChatPageState_build_closure5(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure6: function _ChatPageState_build_closure6(t0, t1, t2) {
      this.$this = t0;
      this.onUpdate = t1;
      this.onError = t2;
    },
    _ChatPageState_build__closure: function _ChatPageState_build__closure(t0, t1, t2) {
      this.$this = t0;
      this.onUpdate = t1;
      this.onError = t2;
    },
    __ChatPageState_State_TickerProviderStateMixin: function __ChatPageState_State_TickerProviderStateMixin() {
    },
    debugItems(context, cC) {
      var t1;
      $.$get$Get();
      t1 = $.$get$GetNavigation__getxController()._key;
      t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
      t1.toString;
      t1 = C.FTheme_of(t1).buttonStyles.destructive;
      return C._setArrayType([C.FButton$icon(B.Icon_EYb, new A.debugItems_closure(cC), t1), C.FButton$icon(B.Icon_Kxw, new A.debugItems_closure0(context, cC), t1)], type$.JSArray_Widget);
    },
    _showCalendarDialog(context, cC) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        ftheme, t3, sessionMap, t4, t5, tileSize, t6, t7, t8, calendar, t1, t2;
      var $async$_showCalendarDialog = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$Get();
              t2 = $.$get$GetNavigation__getxController()._key;
              t2 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2);
              t2.toString;
              ftheme = C.FTheme_of(t2);
              t2 = cC.cSM;
              t3 = t2._localStorage;
              sessionMap = C.groupBy(t3.getAllSessionsSync$0(), new A._showCalendarDialog_closure(), type$.SessionInfo, type$.DateTime);
              C.debugCheckHasMediaQuery(context);
              t4 = ftheme.calendarStyle;
              t5 = t4.dayPickerStyle;
              tileSize = Math.min(C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data.size._dx * 0.65 / 7, t5.tileSize);
              t2 = t2.currentSessionId;
              t6 = A.FCalendarController_date(t3.getSessionDate$1(t2.get$value(0)));
              t2 = t3.getSessionDate$1(t2.get$value(0));
              t3 = C.DateTime$(2025, 1, 1, 0, 0, 0, 0, 0);
              t7 = Date.now();
              t8 = Date.now();
              calendar = A.FCalendar$(t6, new A._showCalendarDialog_closure0(sessionMap, tileSize), new C.DateTime(t7, 0, false), t2, B.FCalendarPickerType_0, null, new A._showCalendarDialog_closure1(), t3, t4.copyWith$1$dayPickerStyle(t5.copyWith$1$tileSize(tileSize)), new C.DateTime(t8, 0, false));
              C.ExtensionDialog_dialog(t1, A.FDialog$(C._setArrayType([], type$.JSArray_Widget), calendar, ftheme.dialogStyle.copyWith$1$insetPadding(new C.EdgeInsets(0, 0, 0, 0))), type$.dynamic);
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$_showCalendarDialog, $async$completer);
    },
    debugItems_closure: function debugItems_closure(t0) {
      this.cC = t0;
    },
    debugItems_closure0: function debugItems_closure0(t0, t1) {
      this.context = t0;
      this.cC = t1;
    },
    _showCalendarDialog_closure: function _showCalendarDialog_closure() {
    },
    _showCalendarDialog_closure1: function _showCalendarDialog_closure1() {
    },
    _showCalendarDialog__closure: function _showCalendarDialog__closure(t0) {
      this.day = t0;
    },
    _showCalendarDialog__closure0: function _showCalendarDialog__closure0(t0) {
      this.day = t0;
    },
    _showCalendarDialog__closure1: function _showCalendarDialog__closure1(t0) {
      this.day = t0;
    },
    _showCalendarDialog_closure0: function _showCalendarDialog_closure0(t0, t1) {
      this.sessionMap = t0;
      this.tileSize = t1;
    },
    pickMediaPaths() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.List_String),
        $async$returnValue, t1, $async$temp1;
      var $async$pickMediaPaths = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = J;
              $async$goto = 3;
              return C._asyncAwait($.$get$ImagePickerPlatform__instance().getMultiImageWithOptions$1$options(new C.MultiImagePickerOptions(new C.ImageOptions(null, null, null, true))), $async$pickMediaPaths);
            case 3:
              // returning from await.
              t1 = $async$temp1.map$1$1$ax($async$result, new A.pickMediaPaths_closure(), type$.String);
              $async$returnValue = C.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E"));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$pickMediaPaths, $async$completer);
    },
    pickMediaPaths_closure: function pickMediaPaths_closure() {
    },
    HiveMessageStorage: function HiveMessageStorage() {
    },
    HiveMessageStorage_loadAll_closure: function HiveMessageStorage_loadAll_closure() {
    },
    BlurHash_BlurHash$decode(blurHash) {
      var sizeFlag, numCompX, numCompY, maxAc, components, i, j, t2, t3, t4, t5, g, b, t6, t7, t8,
        t1 = blurHash.length;
      if (t1 < 6)
        throw C.wrapException(A.BlurHashDecodeException$("BlurHash must not be null or '< 6' characters long."));
      sizeFlag = A.decode83(blurHash, 0, 1);
      numCompX = D.JSInt_methods.$mod(sizeFlag, 9) + 1;
      numCompY = D.JSInt_methods._tdivFast$1(sizeFlag, 9) + 1;
      if (t1 !== 4 + 2 * numCompX * numCompY)
        throw C.wrapException(A.BlurHashDecodeException$("Invalid number of components in BlurHash."));
      maxAc = (A.decode83(blurHash, 1, 2) + 1) / 166;
      components = J.JSArray_JSArray$allocateGrowable(numCompY, type$.List_ColorTriplet);
      for (t1 = type$.ColorTriplet, i = 0; i < numCompY; ++i)
        components[i] = C.List_List$filled(numCompX, new A.ColorTriplet(0, 0, 0), false, t1);
      for (j = 0; j < numCompY; ++j)
        for (t1 = j * numCompX, t2 = j === 0, i = 0; i < numCompX; ++i)
          if (i === 0 && t2) {
            t3 = A.decode83(blurHash, 2, 6);
            t4 = A.sRgbToLinear(t3 >>> 16);
            t5 = A.sRgbToLinear(t3 >>> 8 & 255);
            t3 = A.sRgbToLinear(t3 & 255);
            if (!(j < components.length))
              return C.ioore(components, j);
            D.JSArray_methods.$indexSet(components[j], i, new A.ColorTriplet(t4, t5, t3));
          } else {
            t3 = 4 + (i + t1) * 2;
            t3 = A.decode83(blurHash, t3, t3 + 2);
            g = D.JSNumber_methods.$mod(t3 / 19, 19);
            b = D.JSInt_methods.$mod(t3, 19);
            t3 = (t3 / 361 - 9) / 9;
            t4 = Math.pow(Math.abs(t3), 2);
            t3 = J.get$sign$in(t3);
            t5 = (g - 9) / 9;
            t6 = Math.pow(Math.abs(t5), 2);
            t5 = J.get$sign$in(t5);
            t7 = (b - 9) / 9;
            t8 = Math.pow(Math.abs(t7), 2);
            t7 = J.get$sign$in(t7);
            if (!(j < components.length))
              return C.ioore(components, j);
            D.JSArray_methods.$indexSet(components[j], i, new A.ColorTriplet(t4 * t3 * maxAc, t6 * t5 * maxAc, t8 * t7 * maxAc));
          }
      t1 = A._multiplyPunch(components, 1);
      C.assertHelper(t1.length !== 0);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      C.assertHelper(t1[0].length !== 0);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      return new A.BlurHash(t1);
    },
    _multiplyPunch(components, factor) {
      var i, t1, j, t2, t3;
      for (i = 0; i < components.length; ++i) {
        t1 = i !== 0;
        j = 0;
        while (true) {
          if (!(i < components.length))
            return C.ioore(components, i);
          t2 = components[i];
          if (!(j < t2.length))
            break;
          if (t1 && j !== 0) {
            t3 = t2[j];
            D.JSArray_methods.$indexSet(t2, j, new A.ColorTriplet(t3.r * factor, t3.g * factor, t3.b * factor));
          }
          ++j;
        }
      }
      return components;
    },
    _transform0(width, height, components) {
      var pixel, y, t1, x, t2, r, g, b, j, t3, t4, i, basis, t5, color, pixel0,
        pixels = C.List_List$filled(width * height * 4, 0, false, type$.int);
      for (pixel = 0, y = 0; y < height; ++y)
        for (t1 = 3.141592653589793 * y, x = 0; x < width; ++x) {
          for (t2 = 3.141592653589793 * x, r = 0, g = 0, b = 0, j = 0; t3 = components.length, j < t3; ++j) {
            t4 = t1 * j / height;
            i = 0;
            while (true) {
              if (0 >= t3)
                return C.ioore(components, 0);
              if (!(i < components[0].length))
                break;
              basis = Math.cos(t2 * i / width) * Math.cos(t4);
              t3 = components.length;
              if (!(j < t3))
                return C.ioore(components, j);
              t5 = components[j];
              if (!(i < t5.length))
                return C.ioore(t5, i);
              color = t5[i];
              r += color.r * basis;
              g += color.g * basis;
              b += color.b * basis;
              ++i;
            }
          }
          pixel0 = pixel + 1;
          D.JSArray_methods.$indexSet(pixels, pixel, A.linearTosRgb(r));
          pixel = pixel0 + 1;
          D.JSArray_methods.$indexSet(pixels, pixel0, A.linearTosRgb(g));
          pixel0 = pixel + 1;
          D.JSArray_methods.$indexSet(pixels, pixel, A.linearTosRgb(b));
          pixel = pixel0 + 1;
          D.JSArray_methods.$indexSet(pixels, pixel0, 255);
        }
      return new Uint8Array(C._ensureNativeList(pixels));
    },
    BlurHash: function BlurHash(t0) {
      this.components = t0;
    },
    BlurHashDecodeException$(message) {
      return new A.BlurHashDecodeException(message);
    },
    BlurHashDecodeException: function BlurHashDecodeException(t0) {
      this.message = t0;
    },
    sRgbToLinear(value) {
      var v = value / 255;
      if (v <= 0.04045)
        return v / 12.92;
      return Math.pow((v + 0.055) / 1.055, 2.4);
    },
    linearTosRgb(value) {
      var v = D.JSNumber_methods.clamp$2(value, 0, 1);
      if (v <= 0.0031308)
        return D.JSNumber_methods.toInt$0(v * 12.92 * 255 + 0.5);
      return D.JSNumber_methods.toInt$0((1.055 * Math.pow(v, 0.4166666666666667) - 0.055) * 255 + 0.5);
    },
    ColorTriplet: function ColorTriplet(t0, t1, t2) {
      this.r = t0;
      this.g = t1;
      this.b = t2;
    },
    ListDiffDelegate: function ListDiffDelegate() {
    },
    ListDiffDelegate_closure: function ListDiffDelegate_closure(t0) {
      this.T = t0;
    },
    _diagonalComparator(o1, o2) {
      var t1 = type$._Diagonal;
      return t1._as(o1).x - t1._as(o2).x;
    },
    calculateDiff(cb, detectMoves, $T) {
      var t4, t5, $forward, backward, rangePool, range, snake, t6, t7, left, first,
        t1 = cb.oldList,
        oldSize = t1.length,
        t2 = cb.newList,
        newSize = t2.length,
        diagonals = C._setArrayType([], type$.JSArray__Diagonal),
        t3 = type$.JSArray__Range,
        stack = C._setArrayType([], t3);
      D.JSArray_methods.add$1(stack, new A._Range(0, oldSize, 0, newSize));
      t4 = D.JSInt_methods._tdivFast$1(oldSize + newSize + 1, 2) * 2 + 1;
      t5 = D.JSInt_methods._tdivFast$1(t4, 2);
      $forward = new A._CenteredArray(new Int32Array(t4), t5);
      backward = new A._CenteredArray(new Int32Array(t4), t5);
      rangePool = C._setArrayType([], t3);
      for (; t3 = stack.length, t3 !== 0;) {
        if (0 >= t3)
          return C.ioore(stack, -1);
        range = stack.pop();
        snake = A.midPoint(range, cb, $forward, backward);
        if (snake != null) {
          t3 = snake.endX;
          t4 = snake.startX;
          t5 = snake.endY;
          t6 = snake.startY;
          if (Math.min(t3 - t4, t5 - t6) > 0)
            D.JSArray_methods.add$1(diagonals, snake.toDiagonal$0());
          t7 = rangePool.length;
          left = t7 === 0 ? new A._Range(0, 0, 0, 0) : D.JSArray_methods.removeAt$1(rangePool, t7 - 1);
          left.oldListStart = range.oldListStart;
          left.newListStart = range.newListStart;
          left.oldListEnd = t4;
          left.newListEnd = t6;
          D.JSArray_methods.add$1(stack, left);
          range.oldListStart = t3;
          range.newListStart = t5;
          D.JSArray_methods.add$1(stack, range);
        } else
          D.JSArray_methods.add$1(rangePool, range);
      }
      D.JSArray_methods.sort$1(diagonals, A.diffutil_impl___diagonalComparator$closure());
      t3 = $forward.data;
      t4 = backward.data;
      t1 = t1.length;
      t2 = t2.length;
      t5 = new A.DiffResult(diagonals, t3, t4, cb, t1, t2, true, $T._eval$1("DiffResult<0>"));
      if (!D.NativeInt32List_methods.get$isEmpty(t3))
        D.NativeInt32List_methods.fillRange$3(t3, 0, t3.length - 1, 0);
      if (!D.NativeInt32List_methods.get$isEmpty(t4))
        D.NativeInt32List_methods.fillRange$3(t4, 0, t4.length - 1, 0);
      t3 = diagonals.length;
      if (t3 === 0)
        first = null;
      else {
        if (0 >= t3)
          return C.ioore(diagonals, 0);
        first = diagonals[0];
      }
      if (first == null || first.x !== 0 || first.y !== 0)
        D.JSArray_methods.insert$2(diagonals, 0, new A._Diagonal(0, 0, 0));
      D.JSArray_methods.add$1(diagonals, new A._Diagonal(t1, t2, 0));
      t5._findMatchingItems$0();
      return t5;
    },
    midPoint(range, cb, $forward, backward) {
      var max, t4, d, snake,
        t1 = range.oldListEnd,
        t2 = range.oldListStart,
        t3 = t1 - t2;
      if (t3 < 1 || range.newListEnd - range.newListStart < 1)
        return null;
      max = D.JSInt_methods._tdivFast$1(t3 + (range.newListEnd - range.newListStart) + 1, 2);
      t3 = $forward.data;
      t4 = $forward._mid + 1;
      t3.$flags & 2 && C.throwUnsupportedOperation(t3);
      if (!(t4 < t3.length))
        return C.ioore(t3, t4);
      t3[t4] = t2;
      t2 = backward.data;
      t4 = backward._mid + 1;
      t2.$flags & 2 && C.throwUnsupportedOperation(t2);
      if (!(t4 < t2.length))
        return C.ioore(t2, t4);
      t2[t4] = t1;
      for (d = 0; d < max; ++d) {
        snake = A.forwardSnake(range, cb, $forward, backward, d);
        if (snake != null)
          return snake;
        snake = A.backwardSnake(range, cb, $forward, backward, d);
        if (snake != null)
          return snake;
      }
      return null;
    },
    forwardSnake(range, cb, $forward, backward, d) {
      var k, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, k0, t14, t15, startX, x, y, startY, backwardsK,
        t1 = range.oldListEnd - range.oldListStart - (range.newListEnd - range.newListStart),
        checkForSnake = D.JSInt_methods.$mod(Math.abs(t1), 2) === 1;
      for (k = -d, t2 = $forward.data, t3 = $forward._mid, t4 = t2.$flags | 0, t5 = cb.oldList, t6 = cb.newList, t7 = d !== 0, t8 = t2.length, t9 = k + 1, t10 = d - 1, t11 = backward.data, t12 = backward._mid, t13 = t11.length, k0 = k; k0 <= d; k0 += 2) {
        if (k0 !== k)
          if (k0 !== d) {
            t14 = t3 + (k0 + 1);
            if (!(t14 >= 0 && t14 < t8))
              return C.ioore(t2, t14);
            t14 = t2[t14];
            t15 = t3 + (k0 - 1);
            if (!(t15 >= 0 && t15 < t8))
              return C.ioore(t2, t15);
            t15 = t14 > t2[t15];
            t14 = t15;
          } else
            t14 = false;
        else
          t14 = true;
        if (t14) {
          t14 = t3 + (k0 + 1);
          if (!(t14 >= 0 && t14 < t8))
            return C.ioore(t2, t14);
          startX = t2[t14];
          x = startX;
        } else {
          t14 = t3 + (k0 - 1);
          if (!(t14 >= 0 && t14 < t8))
            return C.ioore(t2, t14);
          startX = t2[t14];
          x = startX + 1;
        }
        y = range.newListStart + (x - range.oldListStart) - k0;
        startY = !t7 || x !== startX ? y : y - 1;
        while (true) {
          t14 = false;
          if (x < range.oldListEnd)
            if (y < range.newListEnd) {
              if (!(x >= 0 && x < t5.length))
                return C.ioore(t5, x);
              t14 = t5[x];
              t14 = t14.get$id(t14);
              if (!(y >= 0 && y < t6.length))
                return C.ioore(t6, y);
              t15 = t6[y];
              t15 = t14 === t15.get$id(t15);
              t14 = t15;
            }
          if (!t14)
            break;
          ++x;
          ++y;
        }
        t14 = t3 + k0;
        t4 & 2 && C.throwUnsupportedOperation(t2);
        if (!(t14 >= 0 && t14 < t8))
          return C.ioore(t2, t14);
        t2[t14] = x;
        if (checkForSnake) {
          backwardsK = t1 - k0;
          t14 = false;
          if (backwardsK >= t9)
            if (backwardsK <= t10) {
              t14 = t12 + backwardsK;
              if (!(t14 >= 0 && t14 < t13))
                return C.ioore(t11, t14);
              t14 = t11[t14] <= x;
            }
          if (t14)
            return new A._Snake(startX, startY, x, y, false);
        }
      }
      return null;
    },
    backwardSnake(range, cb, $forward, backward, d) {
      var k, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, k0, t12, t13, startX, x, y, startY, forwardsK,
        t1 = range.oldListEnd - range.oldListStart - (range.newListEnd - range.newListStart),
        checkForSnake = D.JSInt_methods.$mod(t1, 2) === 0;
      for (k = -d, t2 = backward.data, t3 = backward._mid, t4 = t2.$flags | 0, t5 = cb.oldList, t6 = cb.newList, t7 = d !== 0, t8 = t2.length, t9 = $forward.data, t10 = $forward._mid, t11 = t9.length, k0 = k; k0 <= d; k0 += 2) {
        if (k0 !== k)
          if (k0 !== d) {
            t12 = t3 + (k0 + 1);
            if (!(t12 >= 0 && t12 < t8))
              return C.ioore(t2, t12);
            t12 = t2[t12];
            t13 = t3 + (k0 - 1);
            if (!(t13 >= 0 && t13 < t8))
              return C.ioore(t2, t13);
            t13 = t12 < t2[t13];
            t12 = t13;
          } else
            t12 = false;
        else
          t12 = true;
        if (t12) {
          t12 = t3 + (k0 + 1);
          if (!(t12 >= 0 && t12 < t8))
            return C.ioore(t2, t12);
          startX = t2[t12];
          x = startX;
        } else {
          t12 = t3 + (k0 - 1);
          if (!(t12 >= 0 && t12 < t8))
            return C.ioore(t2, t12);
          startX = t2[t12];
          x = startX - 1;
        }
        y = range.newListEnd - (range.oldListEnd - x - k0);
        startY = !t7 || x !== startX ? y : y + 1;
        while (true) {
          t12 = false;
          if (x > range.oldListStart)
            if (y > range.newListStart) {
              t12 = x - 1;
              t13 = y - 1;
              if (!(t12 >= 0 && t12 < t5.length))
                return C.ioore(t5, t12);
              t12 = t5[t12];
              t12 = t12.get$id(t12);
              if (!(t13 >= 0 && t13 < t6.length))
                return C.ioore(t6, t13);
              t13 = t6[t13];
              t13 = t12 === t13.get$id(t13);
              t12 = t13;
            }
          if (!t12)
            break;
          --x;
          --y;
        }
        t12 = t3 + k0;
        t4 & 2 && C.throwUnsupportedOperation(t2);
        if (!(t12 >= 0 && t12 < t8))
          return C.ioore(t2, t12);
        t2[t12] = x;
        if (checkForSnake) {
          forwardsK = t1 - k0;
          t12 = false;
          if (forwardsK >= k)
            if (forwardsK <= d) {
              t12 = t10 + forwardsK;
              if (!(t12 >= 0 && t12 < t11))
                return C.ioore(t9, t12);
              t12 = t9[t12] >= x;
            }
          if (t12)
            return new A._Snake(x, y, startX, startY, true);
        }
      }
      return null;
    },
    _Snake: function _Snake(t0, t1, t2, t3, t4) {
      var _ = this;
      _.startX = t0;
      _.startY = t1;
      _.endX = t2;
      _.endY = t3;
      _.reverse = t4;
    },
    _Diagonal: function _Diagonal(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.size = t2;
    },
    _Range: function _Range(t0, t1, t2, t3) {
      var _ = this;
      _.oldListStart = t0;
      _.oldListEnd = t1;
      _.newListStart = t2;
      _.newListEnd = t3;
    },
    _CenteredArray: function _CenteredArray(t0, t1) {
      this.data = t0;
      this._mid = t1;
    },
    DiffResult: function DiffResult(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._mDiagonals = t0;
      _._mOldItemStatuses = t1;
      _._mNewItemStatuses = t2;
      _._mCallback = t3;
      _._mOldListSize = t4;
      _._mNewListSize = t5;
      _._mDetectMoves = t6;
      _.$ti = t7;
    },
    _PostponedUpdate: function _PostponedUpdate(t0, t1, t2) {
      this.posInOwnerList = t0;
      this.currentPos = t1;
      this.removal = t2;
    },
    DataInsert: function DataInsert(t0, t1, t2) {
      this.position = t0;
      this.data = t1;
      this.$ti = t2;
    },
    DataRemove: function DataRemove(t0, t1, t2) {
      this.position = t0;
      this.data = t1;
      this.$ti = t2;
    },
    DataChange: function DataChange(t0, t1, t2, t3) {
      var _ = this;
      _.position = t0;
      _.oldData = t1;
      _.newData = t2;
      _.$ti = t3;
    },
    DataMove: function DataMove(t0, t1, t2, t3) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.data = t2;
      _.$ti = t3;
    },
    FormData: function FormData(t0, t1) {
      var _ = this;
      _.__FormData__boundary_A = $;
      _.fields = t0;
      _.files = t1;
      _._isFinalized = false;
    },
    FormData__init_closure: function FormData__init_closure(t0) {
      this.$this = t0;
    },
    FormData__headerForFile_closure: function FormData__headerForFile_closure(t0) {
      this._box_0 = t0;
    },
    FormData_finalize_writeLine: function FormData_finalize_writeLine(t0) {
      this.controller = t0;
    },
    FormData_finalize_writeUtf8: function FormData_finalize_writeUtf8(t0) {
      this.controller = t0;
    },
    FormData_finalize_closure: function FormData_finalize_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.writeUtf8 = t1;
      _.controller = t2;
      _.writeLine = t3;
    },
    FormData_finalize_closure0: function FormData_finalize_closure0(t0, t1) {
      this.$this = t0;
      this.writeUtf8 = t1;
    },
    FormData_finalize_closure1: function FormData_finalize_closure1(t0) {
      this.controller = t0;
    },
    writeStreamToSink(stream, sink, $T) {
      var t1 = new C._Future($.Zone__current, type$._Future_void);
      stream.listen$3$onDone$onError($T._eval$1("~(0)")._as(sink.get$add(sink)), new A.writeStreamToSink_closure(new C._AsyncCompleter(t1, type$._AsyncCompleter_void)), sink.get$addError());
      return t1;
    },
    writeStreamToSink_closure: function writeStreamToSink_closure(t0) {
      this.completer = t0;
    },
    _BottomSheetLayoutWithSizeListener: function _BottomSheetLayoutWithSizeListener(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onChildSizeChanged = t0;
      _.animationValue = t1;
      _.isScrollControlled = t2;
      _.scrollControlDisabledMaxHeightRatio = t3;
      _.child = t4;
      _.key = t5;
    },
    _RenderBottomSheetLayoutWithSizeListener: function _RenderBottomSheetLayoutWithSizeListener(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._lastSize = t0;
      _._onChildSizeChanged = t1;
      _._animationValue = t2;
      _._isScrollControlled = t3;
      _._scrollControlDisabledMaxHeightRatio = t4;
      _.RenderObjectWithChildMixin__child = t5;
      _._layoutCacheStorage = t6;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _ModalBottomSheet: function _ModalBottomSheet(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.route = t0;
      _.isScrollControlled = t1;
      _.scrollControlDisabledMaxHeightRatio = t2;
      _.backgroundColor = t3;
      _.elevation = t4;
      _.shape = t5;
      _.clipBehavior = t6;
      _.constraints = t7;
      _.enableDrag = t8;
      _.showDragHandle = t9;
      _.key = t10;
      _.$ti = t11;
    },
    _ModalBottomSheetState: function _ModalBottomSheetState(t0, t1, t2) {
      var _ = this;
      _.animationCurve = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
      _.$ti = t2;
    },
    _ModalBottomSheetState_build_closure0: function _ModalBottomSheetState_build_closure0(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ModalBottomSheetState_build_closure: function _ModalBottomSheetState_build_closure(t0, t1) {
      this.$this = t0;
      this.routeLabel = t1;
    },
    _ModalBottomSheetState_build__closure: function _ModalBottomSheetState_build__closure(t0) {
      this.$this = t0;
    },
    ModalBottomSheetRoute: function ModalBottomSheetRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37) {
      var _ = this;
      _.builder = t0;
      _.capturedThemes = t1;
      _.isScrollControlled = t2;
      _.scrollControlDisabledMaxHeightRatio = t3;
      _.backgroundColor = t4;
      _.elevation = t5;
      _.shape = t6;
      _.clipBehavior = t7;
      _.constraints = t8;
      _.modalBarrierColor = t9;
      _.isDismissible = t10;
      _.enableDrag = t11;
      _.showDragHandle = t12;
      _.transitionAnimationController = t13;
      _.anchorPoint = t14;
      _.useSafeArea = t15;
      _.sheetAnimationStyle = t16;
      _.barrierOnTapHint = t17;
      _._bottom_sheet$_clipDetailsNotifier = t18;
      _.barrierLabel = t19;
      _._bottom_sheet$_animationController = null;
      _.filter = t20;
      _.traversalEdgeBehavior = t21;
      _.receivedTransition = null;
      _._offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t22;
      _._popEntries = t23;
      _._scopeKey = t24;
      _._subtreeKey = t25;
      _._storageBucket = t26;
      _.__ModalRoute__modalBarrier_A = $;
      _._modalScopeCache = null;
      _.__ModalRoute__modalScope_A = $;
      _.LocalHistoryRoute__localHistory = t27;
      _.LocalHistoryRoute__entriesImpliesAppBarDismissal = t28;
      _._transitionCompleter = t29;
      _._performanceModeRequestHandle = null;
      _._popFinalized = false;
      _._routes$_controller = _._animation = null;
      _._secondaryAnimation = t30;
      _.willDisposeAnimationController = true;
      _._trainHoppingListenerRemover = _._result = _._simulation = null;
      _._overlayEntries = t31;
      _._requestFocus = t32;
      _._navigator = null;
      _._settings = t33;
      _._restorationScopeId = t34;
      _._popCompleter = t35;
      _._disposeCompleter = t36;
      _.$ti = t37;
    },
    ModalBottomSheetRoute_buildPage_closure: function ModalBottomSheetRoute_buildPage_closure(t0) {
      this.$this = t0;
    },
    _CheckboxType: function _CheckboxType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Checkbox: function Checkbox(t0, t1, t2) {
      this.value = t0;
      this.onChanged = t1;
      this.key = t2;
    },
    _CheckboxState: function _CheckboxState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _._checkbox$_painter = t0;
      _._previousValue = null;
      _.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _.ToggleableStateMixin___ToggleableStateMixin__position_A = t2;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t3;
      _.ToggleableStateMixin___ToggleableStateMixin__reaction_A = t4;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = t5;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t6;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = t7;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t8;
      _.ToggleableStateMixin__reactionAnimationDuration = t9;
      _.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = t10;
      _.ToggleableStateMixin__downPosition = t11;
      _.ToggleableStateMixin__focused = t12;
      _.ToggleableStateMixin__hovering = t13;
      _.TickerProviderStateMixin__tickers = t14;
      _.TickerProviderStateMixin__tickerModeNotifier = t15;
      _._widget = null;
      _._debugLifecycleState = t16;
      _._framework$_element = null;
    },
    _CheckboxState__widgetFillColor_closure: function _CheckboxState__widgetFillColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxState_build_closure: function _CheckboxState_build_closure(t0, t1) {
      this.$this = t0;
      this.checkboxTheme = t1;
    },
    _CheckboxPainter: function _CheckboxPainter(t0) {
      var _ = this;
      _._isActive = _._toggleable$_isHovered = _._toggleable$_isFocused = _._downPosition = _._splashRadius = _._toggleable$_focusColor = _._toggleable$_hoverColor = _._reactionColor = _._inactiveReactionColor = _._inactiveColor = _._activeColor = _._reactionHoverFade = _._reactionFocusFade = _._reaction = _._toggleable$_position = _._inactiveSide = _._activeSide = _._checkbox$_shape = _._previousValue = _._checkbox$_value = _._checkColor = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _CheckboxDefaultsM3: function _CheckboxDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._checkbox$_theme = t0;
      _._checkbox$_colors = t1;
      _.mouseCursor = t2;
      _.fillColor = t3;
      _.checkColor = t4;
      _.overlayColor = t5;
      _.splashRadius = t6;
      _.materialTapTargetSize = t7;
      _.visualDensity = t8;
      _.shape = t9;
      _.side = t10;
    },
    _CheckboxDefaultsM3_side_closure: function _CheckboxDefaultsM3_side_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM3_fillColor_closure: function _CheckboxDefaultsM3_fillColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM3_checkColor_closure: function _CheckboxDefaultsM3_checkColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM3_overlayColor_closure: function _CheckboxDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    __CheckboxState_State_TickerProviderStateMixin_dispose_closure: function __CheckboxState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __CheckboxState_State_TickerProviderStateMixin: function __CheckboxState_State_TickerProviderStateMixin() {
    },
    __CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin: function __CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin() {
    },
    CircleAvatar: function CircleAvatar(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.backgroundColor = t1;
      _.radius = t2;
      _.key = t3;
    },
    Divider: function Divider(t0) {
      this.key = t0;
    },
    _RadioType: function _RadioType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Radio: function Radio(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.groupValue = t1;
      _.onChanged = t2;
      _.materialTapTargetSize = t3;
      _.key = t4;
      _.$ti = t5;
    },
    _RadioState: function _RadioState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _._radio$_painter = t0;
      _.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _.ToggleableStateMixin___ToggleableStateMixin__position_A = t2;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t3;
      _.ToggleableStateMixin___ToggleableStateMixin__reaction_A = t4;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = t5;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t6;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = t7;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t8;
      _.ToggleableStateMixin__reactionAnimationDuration = t9;
      _.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = t10;
      _.ToggleableStateMixin__downPosition = t11;
      _.ToggleableStateMixin__focused = t12;
      _.ToggleableStateMixin__hovering = t13;
      _.TickerProviderStateMixin__tickers = t14;
      _.TickerProviderStateMixin__tickerModeNotifier = t15;
      _._widget = null;
      _._debugLifecycleState = t16;
      _._framework$_element = null;
      _.$ti = t17;
    },
    _RadioState__widgetFillColor_closure: function _RadioState__widgetFillColor_closure(t0) {
      this.$this = t0;
    },
    _RadioState_build_closure: function _RadioState_build_closure(t0, t1) {
      this.$this = t0;
      this.radioTheme = t1;
    },
    _RadioPainter: function _RadioPainter(t0) {
      var _ = this;
      _._isActive = _._toggleable$_isHovered = _._toggleable$_isFocused = _._downPosition = _._splashRadius = _._toggleable$_focusColor = _._toggleable$_hoverColor = _._reactionColor = _._inactiveReactionColor = _._inactiveColor = _._activeColor = _._reactionHoverFade = _._reactionFocusFade = _._reaction = _._toggleable$_position = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _RadioDefaultsM3: function _RadioDefaultsM3(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.context = t0;
      _.___RadioDefaultsM3__colors_FI = _.___RadioDefaultsM3__theme_FI = $;
      _.mouseCursor = t1;
      _.fillColor = t2;
      _.overlayColor = t3;
      _.splashRadius = t4;
      _.materialTapTargetSize = t5;
      _.visualDensity = t6;
    },
    _RadioDefaultsM3_fillColor_closure: function _RadioDefaultsM3_fillColor_closure(t0) {
      this.$this = t0;
    },
    _RadioDefaultsM3_overlayColor_closure: function _RadioDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    __RadioState_State_TickerProviderStateMixin_dispose_closure: function __RadioState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __RadioState_State_TickerProviderStateMixin: function __RadioState_State_TickerProviderStateMixin() {
    },
    __RadioState_State_TickerProviderStateMixin_ToggleableStateMixin: function __RadioState_State_TickerProviderStateMixin_ToggleableStateMixin() {
    },
    _RenderRangeSlider$(divisions, gestureSettings, hovering, labels, onChangeEnd, onChangeStart, onChanged, platform, screenSize, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, theme, values) {
      var _null = null,
        t1 = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, _null, _null, D._LinearTextScaler_1, D.TextWidthBasis_0),
        t2 = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, _null, _null, D._LinearTextScaler_1, D.TextWidthBasis_0),
        t3 = values.start;
      C.assertHelper(t3 >= 0 && t3 <= 1);
      t3 = values.end;
      C.assertHelper(t3 >= 0 && t3 <= 1);
      t1 = new A._RenderRangeSlider(state, t1, t2, D.Offset_0_0, D.Offset_0_0, values, platform, semanticFormatterCallback, divisions, labels, sliderTheme, theme, textScaleFactor, screenSize, onChanged, onChangeStart, onChangeEnd, textDirection, hovering, false, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._RenderRangeSlider$16$divisions$gestureSettings$hovering$labels$onChangeEnd$onChangeStart$onChanged$platform$screenSize$semanticFormatterCallback$sliderTheme$state$textDirection$textScaleFactor$theme$values(divisions, gestureSettings, hovering, labels, onChangeEnd, onChangeStart, onChanged, platform, screenSize, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, theme, values);
      return t1;
    },
    RangeSlider: function RangeSlider(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.values = t0;
      _.onChanged = t1;
      _.onChangeStart = t2;
      _.onChangeEnd = t3;
      _.min = t4;
      _.max = t5;
      _.divisions = t6;
      _.key = t7;
    },
    _RangeSliderState: function _RangeSliderState(t0, t1, t2, t3) {
      var _ = this;
      _.___RangeSliderState_endPositionController_A = _.___RangeSliderState_startPositionController_A = _.___RangeSliderState_enableController_A = _.___RangeSliderState_valueIndicatorController_A = _.___RangeSliderState_overlayController_A = $;
      _.paintBottomValueIndicator = _.paintTopValueIndicator = _.interactionTimer = null;
      _._range_slider$_hovering = _._range_slider$_dragging = false;
      _._range_slider$_layerLink = t0;
      _.overlayEntry = null;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._widget = null;
      _._debugLifecycleState = t3;
      _._framework$_element = null;
    },
    _RangeSliderState__handleHoverChanged_closure: function _RangeSliderState__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    _RangeSliderState_build_effectiveOverlayColor: function _RangeSliderState_build_effectiveOverlayColor(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.states = t2;
      _.theme = t3;
    },
    _RangeSliderState_build_screenSize: function _RangeSliderState_build_screenSize(t0) {
      this.context = t0;
    },
    _RangeSliderState_showValueIndicator_closure: function _RangeSliderState_showValueIndicator_closure(t0) {
      this.$this = t0;
    },
    _RangeSliderRenderObjectWidget: function _RangeSliderRenderObjectWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.values = t0;
      _.divisions = t1;
      _.labels = t2;
      _.sliderTheme = t3;
      _.textScaleFactor = t4;
      _.screenSize = t5;
      _.onChanged = t6;
      _.onChangeStart = t7;
      _.onChangeEnd = t8;
      _.semanticFormatterCallback = t9;
      _.state = t10;
      _.hovering = t11;
      _.key = t12;
    },
    _RenderRangeSlider: function _RenderRangeSlider(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21) {
      var _ = this;
      _._lastThumbSelection = null;
      _._range_slider$_state = t0;
      _.___RenderRangeSlider__enableAnimation_A = _.___RenderRangeSlider__valueIndicatorAnimation_A = _.___RenderRangeSlider__overlayAnimation_A = $;
      _._startLabelPainter = t1;
      _._endLabelPainter = t2;
      _.___RenderRangeSlider__tap_A = _.___RenderRangeSlider__drag_A = $;
      _._range_slider$_active = false;
      _.___RenderRangeSlider__newValues_A = $;
      _._startThumbCenter = t3;
      _._endThumbCenter = t4;
      _.overlayEndRect = _.overlayStartRect = null;
      _._range_slider$_values = t5;
      _._range_slider$_platform = t6;
      _._range_slider$_semanticFormatterCallback = t7;
      _._range_slider$_divisions = t8;
      _._labels = t9;
      _._range_slider$_sliderTheme = t10;
      _._range_slider$_theme = t11;
      _._range_slider$_textScaleFactor = t12;
      _._range_slider$_screenSize = t13;
      _._range_slider$_onChanged = t14;
      _.onChangeStart = t15;
      _.onChangeEnd = t16;
      _._range_slider$_textDirection = t17;
      _._range_slider$_hovering = t18;
      _._hoveringEndThumb = _._hoveringStartThumb = false;
      _._endSemanticsNode = _._startSemanticsNode = null;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t19;
      _._layoutCacheStorage = t20;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t21;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderRangeSlider_closure: function _RenderRangeSlider_closure(t0) {
      this.$this = t0;
    },
    _RenderRangeSlider__maxSliderPartWidth_closure: function _RenderRangeSlider__maxSliderPartWidth_closure() {
    },
    _RenderRangeSlider__maxSliderPartHeight_closure: function _RenderRangeSlider__maxSliderPartHeight_closure() {
    },
    _RenderRangeSlider__startInteraction_closure: function _RenderRangeSlider__startInteraction_closure(t0) {
      this.$this = t0;
    },
    _ValueIndicatorRenderObjectWidget0: function _ValueIndicatorRenderObjectWidget0(t0, t1) {
      this.state = t0;
      this.key = t1;
    },
    _RenderValueIndicator0: function _RenderValueIndicator0(t0, t1, t2, t3) {
      var _ = this;
      _._range_slider$___RenderValueIndicator__valueIndicatorAnimation_A = $;
      _.___RenderValueIndicator__state_A = t0;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t1;
      _._layoutCacheStorage = t2;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __RangeSliderState_State_TickerProviderStateMixin_dispose_closure: function __RangeSliderState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __RangeSliderState_State_TickerProviderStateMixin: function __RangeSliderState_State_TickerProviderStateMixin() {
    },
    __RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin: function __RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin() {
    },
    __RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin: function __RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin() {
    },
    _TextSpanEditingController$(textSpan) {
      var t1 = textSpan.toPlainText$1$includeSemanticsLabels(false);
      t1 = new A._TextSpanEditingController(textSpan, new C.TextEditingValue(t1, D.TextSelection_kab, D.TextRange_m1_m1), $.$get$ChangeNotifier__emptyListeners());
      C.ChangeNotifier_maybeDispatchObjectCreation(t1);
      return t1;
    },
    SelectableText__defaultContextMenuBuilder(context, editableTextState) {
      type$.BuildContext._as(context);
      return C.AdaptiveTextSelectionToolbar$editableText(type$.EditableTextState._as(editableTextState));
    },
    _TextSpanEditingController: function _TextSpanEditingController(t0, t1, t2) {
      var _ = this;
      _._textSpan = t0;
      _._change_notifier$_value = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _SelectableTextSelectionGestureDetectorBuilder: function _SelectableTextSelectionGestureDetectorBuilder(t0, t1) {
      var _ = this;
      _._selectable_text$_state = t0;
      _.delegate = t1;
      _._shouldShowSelectionToolbar = true;
      _._isShiftPressed = false;
      _._dragStartViewportOffset = _._dragStartScrollOffset = 0;
      _._dragStartSelection = null;
      _._longPressStartedWithoutFocus = false;
    },
    SelectableText: function SelectableText(t0, t1) {
      this.data = t0;
      this.key = t1;
    },
    _SelectableTextState: function _SelectableTextState(t0, t1) {
      var _ = this;
      _.___SelectableTextState__controller_A = $;
      _._selectable_text$_focusNode = null;
      _._selectable_text$_showSelectionHandles = false;
      _.___SelectableTextState_forcePressEnabled_A = _.___SelectableTextState__selectionGestureDetectorBuilder_A = $;
      _.editableTextKey = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _SelectableTextState__onControllerChanged_closure: function _SelectableTextState__onControllerChanged_closure(t0, t1) {
      this.$this = t0;
      this.showSelectionHandles = t1;
    },
    _SelectableTextState__handleSelectionChanged_closure: function _SelectableTextState__handleSelectionChanged_closure(t0, t1) {
      this.$this = t0;
      this.willShowSelectionHandles = t1;
    },
    _SelectableTextState_build_closure: function _SelectableTextState_build_closure(t0) {
      this.$this = t0;
    },
    _RenderSlider$(allowedInteraction, divisions, gestureSettings, hasFocus, hovering, label, onChangeEnd, onChangeStart, onChanged, platform, screenSize, secondaryTrackValue, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, value) {
      var t2, _null = null,
        t1 = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, _null, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      C.assertHelper(value >= 0 && value <= 1);
      if (secondaryTrackValue != null)
        t2 = secondaryTrackValue >= 0 && secondaryTrackValue <= 1;
      else
        t2 = true;
      C.assertHelper(t2);
      t1 = new A._RenderSlider(state, t1, value, secondaryTrackValue, platform, semanticFormatterCallback, divisions, label, sliderTheme, textScaleFactor, screenSize, onChanged, onChangeStart, onChangeEnd, textDirection, hasFocus, hovering, allowedInteraction, false, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._RenderSlider$18$allowedInteraction$divisions$gestureSettings$hasFocus$hovering$label$onChangeEnd$onChangeStart$onChanged$platform$screenSize$secondaryTrackValue$semanticFormatterCallback$sliderTheme$state$textDirection$textScaleFactor$value(allowedInteraction, divisions, gestureSettings, hasFocus, hovering, label, onChangeEnd, onChangeStart, onChanged, platform, screenSize, secondaryTrackValue, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, value);
      return t1;
    },
    _SliderType: function _SliderType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SliderInteraction: function SliderInteraction(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Slider0: function Slider0(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.value = t0;
      _.onChanged = t1;
      _.onChangeStart = t2;
      _.onChangeEnd = t3;
      _.min = t4;
      _.max = t5;
      _.divisions = t6;
      _.key = t7;
    },
    _SliderState0: function _SliderState0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.___SliderState_positionController_A = _.___SliderState_enableController_A = _.___SliderState_valueIndicatorController_A = _.___SliderState_overlayController_A = $;
      _.interactionTimer = null;
      _._renderObjectKey = t0;
      _.___SliderState__actionMap_A = $;
      _.paintValueIndicator = null;
      _._dragging = false;
      _._slider$_focusNode = _._currentChangedValue = null;
      _._slider$_hovering = _._slider$_focused = false;
      _._layerLink = t1;
      _.overlayEntry = null;
      _.TickerProviderStateMixin__tickers = t2;
      _.TickerProviderStateMixin__tickerModeNotifier = t3;
      _._widget = null;
      _._debugLifecycleState = t4;
      _._framework$_element = null;
    },
    _SliderState__handleFocusHighlightChanged_closure: function _SliderState__handleFocusHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _SliderState__handleHoverChanged_closure: function _SliderState__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    _SliderState__buildMaterialSlider_effectiveOverlayColor: function _SliderState__buildMaterialSlider_effectiveOverlayColor(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.states = t2;
      _.defaults = t3;
    },
    _SliderState__buildMaterialSlider_screenSize: function _SliderState__buildMaterialSlider_screenSize(t0) {
      this.context = t0;
    },
    _SliderState__buildMaterialSlider_closure: function _SliderState__buildMaterialSlider_closure(t0) {
      this.$this = t0;
    },
    _SliderState_showValueIndicator_closure: function _SliderState_showValueIndicator_closure(t0) {
      this.$this = t0;
    },
    _SliderRenderObjectWidget: function _SliderRenderObjectWidget(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.value = t0;
      _.secondaryTrackValue = t1;
      _.divisions = t2;
      _.label = t3;
      _.sliderTheme = t4;
      _.textScaleFactor = t5;
      _.screenSize = t6;
      _.onChanged = t7;
      _.onChangeStart = t8;
      _.onChangeEnd = t9;
      _.semanticFormatterCallback = t10;
      _.state = t11;
      _.hasFocus = t12;
      _.hovering = t13;
      _.allowedInteraction = t14;
      _.key = t15;
    },
    _RenderSlider: function _RenderSlider(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20) {
      var _ = this;
      _._slider$_state = t0;
      _.___RenderSlider__enableAnimation_A = _.___RenderSlider__valueIndicatorAnimation_A = _.___RenderSlider__overlayAnimation_A = $;
      _._labelPainter = t1;
      _.___RenderSlider__tap_A = _.___RenderSlider__drag_A = $;
      _._slider$_active = false;
      _._currentDragValue = 0;
      _.overlayRect = null;
      _._slider$_value = t2;
      _._secondaryTrackValue = t3;
      _._platform = t4;
      _._semanticFormatterCallback = t5;
      _._divisions = t6;
      _._label = t7;
      _._sliderTheme = t8;
      _._textScaleFactor = t9;
      _._screenSize = t10;
      _._slider$_onChanged = t11;
      _.onChangeStart = t12;
      _.onChangeEnd = t13;
      _._slider$_textDirection = t14;
      _._slider$_hasFocus = t15;
      _._slider$_hovering = t16;
      _._hoveringThumb = false;
      _._allowedInteraction = t17;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t18;
      _._layoutCacheStorage = t19;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t20;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderSlider_closure: function _RenderSlider_closure(t0) {
      this.$this = t0;
    },
    _RenderSlider__maxSliderPartWidth_closure: function _RenderSlider__maxSliderPartWidth_closure() {
    },
    _RenderSlider__maxSliderPartHeight_closure: function _RenderSlider__maxSliderPartHeight_closure() {
    },
    _RenderSlider__startInteraction_closure: function _RenderSlider__startInteraction_closure(t0) {
      this.$this = t0;
    },
    _AdjustSliderIntent: function _AdjustSliderIntent(t0) {
      this.type = t0;
    },
    _SliderAdjustmentType: function _SliderAdjustmentType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _ValueIndicatorRenderObjectWidget: function _ValueIndicatorRenderObjectWidget(t0, t1) {
      this.state = t0;
      this.key = t1;
    },
    _RenderValueIndicator: function _RenderValueIndicator(t0, t1, t2, t3) {
      var _ = this;
      _.___RenderValueIndicator__valueIndicatorAnimation_A = $;
      _._slider$_state = t0;
      _.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack = t1;
      _._layoutCacheStorage = t2;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _SliderDefaultsM2: function _SliderDefaultsM2(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36) {
      var _ = this;
      _.context = t0;
      _.___SliderDefaultsM2_sliderTheme_FI = _.___SliderDefaultsM2__colors_FI = $;
      _.trackHeight = t1;
      _.activeTrackColor = t2;
      _.inactiveTrackColor = t3;
      _.secondaryActiveTrackColor = t4;
      _.disabledActiveTrackColor = t5;
      _.disabledSecondaryActiveTrackColor = t6;
      _.disabledInactiveTrackColor = t7;
      _.activeTickMarkColor = t8;
      _.inactiveTickMarkColor = t9;
      _.disabledActiveTickMarkColor = t10;
      _.disabledInactiveTickMarkColor = t11;
      _.thumbColor = t12;
      _.overlappingShapeStrokeColor = t13;
      _.disabledThumbColor = t14;
      _.overlayColor = t15;
      _.valueIndicatorColor = t16;
      _.valueIndicatorStrokeColor = t17;
      _.overlayShape = t18;
      _.tickMarkShape = t19;
      _.thumbShape = t20;
      _.trackShape = t21;
      _.valueIndicatorShape = t22;
      _.rangeTickMarkShape = t23;
      _.rangeThumbShape = t24;
      _.rangeTrackShape = t25;
      _.rangeValueIndicatorShape = t26;
      _.showValueIndicator = t27;
      _.valueIndicatorTextStyle = t28;
      _.minThumbSeparation = t29;
      _.thumbSelector = t30;
      _.mouseCursor = t31;
      _.allowedInteraction = t32;
      _.padding = t33;
      _.thumbSize = t34;
      _.trackGap = t35;
      _.year2023 = t36;
    },
    _SliderDefaultsM3Year2023: function _SliderDefaultsM3Year2023(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36) {
      var _ = this;
      _.context = t0;
      _.___SliderDefaultsM3Year2023__colors_FI = $;
      _.trackHeight = t1;
      _.activeTrackColor = t2;
      _.inactiveTrackColor = t3;
      _.secondaryActiveTrackColor = t4;
      _.disabledActiveTrackColor = t5;
      _.disabledSecondaryActiveTrackColor = t6;
      _.disabledInactiveTrackColor = t7;
      _.activeTickMarkColor = t8;
      _.inactiveTickMarkColor = t9;
      _.disabledActiveTickMarkColor = t10;
      _.disabledInactiveTickMarkColor = t11;
      _.thumbColor = t12;
      _.overlappingShapeStrokeColor = t13;
      _.disabledThumbColor = t14;
      _.overlayColor = t15;
      _.valueIndicatorColor = t16;
      _.valueIndicatorStrokeColor = t17;
      _.overlayShape = t18;
      _.tickMarkShape = t19;
      _.thumbShape = t20;
      _.trackShape = t21;
      _.valueIndicatorShape = t22;
      _.rangeTickMarkShape = t23;
      _.rangeThumbShape = t24;
      _.rangeTrackShape = t25;
      _.rangeValueIndicatorShape = t26;
      _.showValueIndicator = t27;
      _.valueIndicatorTextStyle = t28;
      _.minThumbSeparation = t29;
      _.thumbSelector = t30;
      _.mouseCursor = t31;
      _.allowedInteraction = t32;
      _.padding = t33;
      _.thumbSize = t34;
      _.trackGap = t35;
      _.year2023 = t36;
    },
    _SliderDefaultsM3Year2023_overlayColor_closure: function _SliderDefaultsM3Year2023_overlayColor_closure(t0) {
      this.$this = t0;
    },
    __SliderState_State_TickerProviderStateMixin_dispose_closure: function __SliderState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin: function __RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin() {
    },
    __RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0: function __RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0() {
    },
    __SliderState_State_TickerProviderStateMixin: function __SliderState_State_TickerProviderStateMixin() {
    },
    SliderTheme$(child, data) {
      return new A.SliderTheme(data, child, null);
    },
    SliderTheme_of(context) {
      var inheritedTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.SliderTheme);
      return inheritedTheme != null ? inheritedTheme.data : C.Theme_of(context).sliderTheme;
    },
    SliderTheme: function SliderTheme(t0, t1, t2) {
      this.data = t0;
      this.child = t1;
      this.key = t2;
    },
    ShowValueIndicator: function ShowValueIndicator(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Thumb: function Thumb(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SliderComponentShape: function SliderComponentShape() {
    },
    SliderTickMarkShape: function SliderTickMarkShape() {
    },
    SliderTrackShape: function SliderTrackShape() {
    },
    RangeSliderThumbShape: function RangeSliderThumbShape() {
    },
    RangeSliderValueIndicatorShape: function RangeSliderValueIndicatorShape() {
    },
    RangeSliderTickMarkShape: function RangeSliderTickMarkShape() {
    },
    RangeSliderTrackShape: function RangeSliderTrackShape() {
    },
    BaseSliderTrackShape: function BaseSliderTrackShape() {
    },
    RoundedRectSliderTrackShape: function RoundedRectSliderTrackShape() {
    },
    BaseRangeSliderTrackShape: function BaseRangeSliderTrackShape() {
    },
    RoundedRectRangeSliderTrackShape: function RoundedRectRangeSliderTrackShape() {
    },
    RoundSliderTickMarkShape: function RoundSliderTickMarkShape(t0) {
      this.tickMarkRadius = t0;
    },
    RoundRangeSliderTickMarkShape: function RoundRangeSliderTickMarkShape() {
    },
    RoundSliderThumbShape: function RoundSliderThumbShape() {
    },
    RoundSliderThumbShape_paint_closure: function RoundSliderThumbShape_paint_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.canvas = t1;
      _.path = t2;
      _.evaluatedElevation = t3;
    },
    RoundRangeSliderThumbShape: function RoundRangeSliderThumbShape() {
    },
    RoundRangeSliderThumbShape_paint_closure: function RoundRangeSliderThumbShape_paint_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.canvas = t1;
      _.shadowPath = t2;
      _.evaluatedElevation = t3;
    },
    RoundSliderOverlayShape: function RoundSliderOverlayShape() {
    },
    RectangularSliderValueIndicatorShape: function RectangularSliderValueIndicatorShape() {
    },
    RectangularRangeSliderValueIndicatorShape: function RectangularRangeSliderValueIndicatorShape() {
    },
    RangeValues: function RangeValues(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    DropSliderValueIndicatorShape: function DropSliderValueIndicatorShape() {
    },
    RoundedRectSliderValueIndicatorShape: function RoundedRectSliderValueIndicatorShape() {
    },
    _RoundedRectRangeSliderTrackShape_RangeSliderTrackShape_BaseRangeSliderTrackShape: function _RoundedRectRangeSliderTrackShape_RangeSliderTrackShape_BaseRangeSliderTrackShape() {
    },
    _RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape: function _RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape() {
    },
    TextButton_TextButton$icon(icon, label, onPressed, style) {
      var _null = null;
      return new A._TextButtonWithIcon(onPressed, _null, _null, _null, style, D.Clip_0, _null, false, _null, true, _null, new A._TextButtonWithIconChild(label, icon, style, _null, _null), _null);
    },
    _TextButtonWithIcon: function _TextButtonWithIcon(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.onPressed = t0;
      _.onLongPress = t1;
      _.onHover = t2;
      _.onFocusChange = t3;
      _.style = t4;
      _.clipBehavior = t5;
      _.focusNode = t6;
      _.autofocus = t7;
      _.statesController = t8;
      _.isSemanticButton = t9;
      _.tooltip = t10;
      _.child = t11;
      _.key = t12;
    },
    _TextButtonWithIconChild: function _TextButtonWithIconChild(t0, t1, t2, t3, t4) {
      var _ = this;
      _.label = t0;
      _.icon = t1;
      _.buttonStyle = t2;
      _.iconAlignment = t3;
      _.key = t4;
    },
    _httpClient() {
      return type$.JSObject._as(new self.XMLHttpRequest());
    },
    _imgElementFactory() {
      var t1 = type$.JSObject;
      return t1._as(t1._as(self.document).createElement("img"));
    },
    _ForwardingImageStreamCompleter$(task, debugLabel, informationCollector) {
      var t1 = new A._ForwardingImageStreamCompleter(task, C._setArrayType([], type$.JSArray_ImageStreamListener), C._setArrayType([], type$.JSArray_of_void_Function_2_Object_and_nullable_StackTrace), C._setArrayType([], type$.JSArray_of_void_Function));
      t1._ForwardingImageStreamCompleter$3$debugLabel$informationCollector(task, debugLabel, informationCollector);
      return t1;
    },
    NetworkImage: function NetworkImage(t0) {
      this.url = t0;
    },
    NetworkImage__imageStreamInformationCollector_closure: function NetworkImage__imageStreamInformationCollector_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.key = t2;
    },
    NetworkImage__imageStreamInformationCollector__closure: function NetworkImage__imageStreamInformationCollector__closure(t0, t1) {
      this.$this = t0;
      this.key = t1;
    },
    NetworkImage__loadAsync_loadViaDecode: function NetworkImage__loadAsync_loadViaDecode(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.decode = t1;
      _.chunkEvents = t2;
      _.key = t3;
    },
    NetworkImage__loadAsync_loadViaImgElement: function NetworkImage__loadAsync_loadViaImgElement(t0, t1) {
      this.$this = t0;
      this.key = t1;
    },
    NetworkImage__loadAsync_closure: function NetworkImage__loadAsync_closure(t0) {
      this.chunkEvents = t0;
    },
    NetworkImage__fetchImageBytes_closure: function NetworkImage__fetchImageBytes_closure(t0, t1, t2) {
      this.request = t0;
      this.completer = t1;
      this.resolved = t2;
    },
    NetworkImage__fetchImageBytes_closure0: function NetworkImage__fetchImageBytes_closure0(t0, t1, t2) {
      this.completer = t0;
      this.request = t1;
      this.resolved = t2;
    },
    _ForwardingImageStreamCompleter: function _ForwardingImageStreamCompleter(t0, t1, t2, t3) {
      var _ = this;
      _.task = t0;
      _.resolved = false;
      _.___ForwardingImageStreamCompleter_handle_F = _.___ForwardingImageStreamCompleter_completer_F = $;
      _.__network_image_web$_disposed = false;
      _._image_stream$_listeners = t1;
      _._ephemeralErrorListeners = t2;
      _.debugLabel = _._currentError = _._currentImage = null;
      _._addingInitialListeners = _._hadAtLeastOneListener = false;
      _._keepAliveHandles = 0;
      _._image_stream$_disposed = false;
      _._onLastListenerRemovedCallbacks = t3;
    },
    _ForwardingImageStreamCompleter_closure: function _ForwardingImageStreamCompleter_closure(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter__closure: function _ForwardingImageStreamCompleter__closure() {
    },
    _ForwardingImageStreamCompleter__closure0: function _ForwardingImageStreamCompleter__closure0(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter__closure1: function _ForwardingImageStreamCompleter__closure1(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter__closure2: function _ForwardingImageStreamCompleter__closure2(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter_closure0: function _ForwardingImageStreamCompleter_closure0(t0, t1) {
      this.$this = t0;
      this.informationCollector = t1;
    },
    WebImageInfo: function WebImageInfo(t0, t1) {
      this.htmlImage = t0;
      this.debugLabel = t1;
    },
    BorderRadiusDirectional: function BorderRadiusDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.topStart = t0;
      _.topEnd = t1;
      _.bottomStart = t2;
      _.bottomEnd = t3;
    },
    Gradient: function Gradient() {
    },
    LinearGradient: function LinearGradient(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.begin = t0;
      _.end = t1;
      _.tileMode = t2;
      _.colors = t3;
      _.stops = t4;
      _.transform = t5;
    },
    ResizeImage_resizeIfNeeded(cacheWidth, cacheHeight, provider) {
      return provider;
    },
    NetworkImageLoadException$(statusCode, uri) {
      return new A.NetworkImageLoadException("HTTP request failed, statusCode: " + statusCode + ", " + uri.toString$0(0), uri);
    },
    FileImage: function FileImage(t0, t1) {
      this.file = t0;
      this.scale = t1;
    },
    FileImage_loadBuffer_closure: function FileImage_loadBuffer_closure(t0) {
      this.$this = t0;
    },
    FileImage_loadImage_closure: function FileImage_loadImage_closure(t0) {
      this.$this = t0;
    },
    MemoryImage: function MemoryImage(t0) {
      this.bytes = t0;
    },
    NetworkImageLoadException: function NetworkImageLoadException(t0, t1) {
      this._image_provider$_message = t0;
      this.uri = t1;
    },
    OneFrameImageStreamCompleter$(image, informationCollector) {
      var t1 = new A.OneFrameImageStreamCompleter(C._setArrayType([], type$.JSArray_ImageStreamListener), C._setArrayType([], type$.JSArray_of_void_Function_2_Object_and_nullable_StackTrace), C._setArrayType([], type$.JSArray_of_void_Function));
      t1.OneFrameImageStreamCompleter$2$informationCollector(image, informationCollector);
      return t1;
    },
    OneFrameImageStreamCompleter: function OneFrameImageStreamCompleter(t0, t1, t2) {
      var _ = this;
      _._image_stream$_listeners = t0;
      _._ephemeralErrorListeners = t1;
      _.debugLabel = _._currentError = _._currentImage = null;
      _._addingInitialListeners = _._hadAtLeastOneListener = false;
      _._keepAliveHandles = 0;
      _._image_stream$_disposed = false;
      _._onLastListenerRemovedCallbacks = t2;
    },
    OneFrameImageStreamCompleter_closure: function OneFrameImageStreamCompleter_closure(t0, t1) {
      this.$this = t0;
      this.informationCollector = t1;
    },
    OvalBorder$(eccentricity, side) {
      var _s26_ = "The eccentricity argument ";
      if (C.assertTest(eccentricity >= 0))
        C.assertThrow(_s26_ + C.S(eccentricity) + " is not greater than or equal to zero.");
      if (C.assertTest(eccentricity <= 1))
        C.assertThrow(_s26_ + C.S(eccentricity) + " is not less than or equal to one.");
      return new A.OvalBorder(eccentricity, side);
    },
    OvalBorder: function OvalBorder(t0, t1) {
      this.eccentricity = t0;
      this.side = t1;
    },
    ShaderMaskLayer$() {
      var t1 = new A.ShaderMaskLayer(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), C.LayerHandle$(type$.Layer));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Layer_qb8.toString$0(0), "package:flutter/rendering.dart", t1);
      return t1;
    },
    ShaderMaskLayer: function ShaderMaskLayer(t0, t1) {
      var _ = this;
      _._layer$_lastChild = _._layer$_firstChild = _._layer$_blendMode = _._maskRect = _._layer$_shader = null;
      _._layer$_callbacks = t0;
      _._compositionCallbackCount = 0;
      _._layer$_debugDisposed = _._layer$_debugMutationsLocked = false;
      _._parentHandle = t1;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _.debugCreator = _._previousSibling = _._nextSibling = null;
    },
    RenderAspectRatio: function RenderAspectRatio(t0, t1, t2, t3) {
      var _ = this;
      _._aspectRatio = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderAspectRatio__applyAspectRatio_closure: function RenderAspectRatio__applyAspectRatio_closure(t0, t1) {
      this.$this = t0;
      this.constraints = t1;
    },
    RenderShaderMask: function RenderShaderMask(t0, t1, t2, t3, t4) {
      var _ = this;
      _._shaderCallback = t0;
      _._blendMode = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderShaderMask_paint_closure: function RenderShaderMask_paint_closure(t0) {
      this.$this = t0;
    },
    RenderSliverFillViewport$(childManager, viewportFraction) {
      var t1;
      C.assertHelper(viewportFraction > 0);
      t1 = new A.RenderSliverFillViewport(viewportFraction, childManager, C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null, C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderSliverMultiBoxAdaptor$1$childManager(childManager);
      return t1;
    },
    RenderSliverFillViewport: function RenderSliverFillViewport(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._sliver_fill0$_viewportFraction = t0;
      _.__RenderSliverFixedExtentBoxAdaptor__currentLayoutDimensions_A = $;
      _._childManager = t1;
      _._keepAliveBucket = t2;
      _.__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives_A = $;
      _._debugChildIntegrityEnabled = true;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _._geometry = null;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    SliverGridRegularTileLayout$(childCrossAxisExtent, childMainAxisExtent, crossAxisCount, crossAxisStride, mainAxisStride, reverseCrossAxis) {
      C.assertHelper(crossAxisCount > 0);
      C.assertHelper(mainAxisStride >= 0);
      C.assertHelper(crossAxisStride >= 0);
      C.assertHelper(childMainAxisExtent >= 0);
      C.assertHelper(childCrossAxisExtent >= 0);
      return new A.SliverGridRegularTileLayout(crossAxisCount, mainAxisStride, crossAxisStride, childMainAxisExtent, childCrossAxisExtent, reverseCrossAxis);
    },
    SliverGridDelegateWithFixedCrossAxisCount$(crossAxisCount, crossAxisSpacing, mainAxisExtent, mainAxisSpacing) {
      C.assertHelper(crossAxisCount > 0);
      C.assertHelper(mainAxisExtent >= 0);
      return new A.SliverGridDelegateWithFixedCrossAxisCount(crossAxisCount, mainAxisSpacing, crossAxisSpacing, mainAxisExtent);
    },
    RenderSliverGrid$(childManager, gridDelegate) {
      var t1 = new A.RenderSliverGrid(gridDelegate, childManager, C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null, C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.RenderSliverMultiBoxAdaptor$1$childManager(childManager);
      return t1;
    },
    SliverGridGeometry: function SliverGridGeometry(t0, t1, t2, t3) {
      var _ = this;
      _.scrollOffset = t0;
      _.crossAxisOffset = t1;
      _.mainAxisExtent = t2;
      _.crossAxisExtent = t3;
    },
    SliverGridLayout: function SliverGridLayout() {
    },
    SliverGridRegularTileLayout: function SliverGridRegularTileLayout(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.crossAxisCount = t0;
      _.mainAxisStride = t1;
      _.crossAxisStride = t2;
      _.childMainAxisExtent = t3;
      _.childCrossAxisExtent = t4;
      _.reverseCrossAxis = t5;
    },
    SliverGridDelegate: function SliverGridDelegate() {
    },
    SliverGridDelegateWithFixedCrossAxisCount: function SliverGridDelegateWithFixedCrossAxisCount(t0, t1, t2, t3) {
      var _ = this;
      _.crossAxisCount = t0;
      _.mainAxisSpacing = t1;
      _.crossAxisSpacing = t2;
      _.mainAxisExtent = t3;
    },
    SliverGridParentData: function SliverGridParentData(t0, t1, t2) {
      var _ = this;
      _.index = _.crossAxisOffset = null;
      _._keptAlive = false;
      _.KeepAliveParentDataMixin_keepAlive = t0;
      _.ContainerParentDataMixin_previousSibling = t1;
      _.ContainerParentDataMixin_nextSibling = t2;
      _.layoutOffset = null;
    },
    RenderSliverGrid: function RenderSliverGrid(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._gridDelegate = t0;
      _._childManager = t1;
      _._keepAliveBucket = t2;
      _.__RenderSliverMultiBoxAdaptor__debugDanglingKeepAlives_A = $;
      _._debugChildIntegrityEnabled = true;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _._geometry = null;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    TableBorder: function TableBorder(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.top = t0;
      _.right = t1;
      _.bottom = t2;
      _.left = t3;
      _.horizontalInside = t4;
      _.verticalInside = t5;
      _.borderRadius = t6;
    },
    AlignmentGeometryTween: function AlignmentGeometryTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    _AxisSize__convert(size, direction) {
      var t1;
      switch (direction.index) {
        case 0:
          t1 = size;
          break;
        case 1:
          t1 = new C.Size(size._dy, size._dx);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _AxisSize_applyConstraints(_this, constraints, direction) {
      var t1;
      switch (direction.index) {
        case 0:
          t1 = constraints;
          break;
        case 1:
          t1 = constraints.get$flipped();
          break;
        default:
          t1 = null;
      }
      return t1.constrain$1(_this);
    },
    _AxisSize__(_this, other) {
      return new C.Size(_this._dx + other._dx, Math.max(_this._dy, other._dy));
    },
    RenderWrap__getChildSize(child) {
      return child.get$size(0);
    },
    RenderWrap__setChildPosition(offset, child) {
      var t1 = child.parentData;
      t1.toString;
      type$.WrapParentData._as(t1).offset = offset;
    },
    WrapAlignment: function WrapAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    WrapCrossAlignment: function WrapCrossAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _RunMetrics: function _RunMetrics(t0, t1) {
      this.axisSize = t0;
      this.childCount = 1;
      this.leadingChild = t1;
    },
    WrapParentData: function WrapParentData(t0, t1, t2) {
      this.ContainerParentDataMixin_previousSibling = t0;
      this.ContainerParentDataMixin_nextSibling = t1;
      this.offset = t2;
    },
    RenderWrap: function RenderWrap(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _._wrap$_direction = t0;
      _._wrap$_alignment = t1;
      _._wrap$_spacing = t2;
      _._runAlignment = t3;
      _._runSpacing = t4;
      _._wrap$_crossAxisAlignment = t5;
      _._wrap$_textDirection = t6;
      _._wrap$_verticalDirection = t7;
      _._wrap$_clipBehavior = t8;
      _._wrap$_hasVisualOverflow = false;
      _._wrap$_clipRectLayer = t9;
      _.ContainerRenderObjectMixin__childCount = t10;
      _.ContainerRenderObjectMixin__firstChild = t11;
      _.ContainerRenderObjectMixin__lastChild = t12;
      _._layoutCacheStorage = t13;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t14;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderWrap_computeDryBaseline_findHighestBaseline: function RenderWrap_computeDryBaseline_findHighestBaseline(t0, t1, t2) {
      this._box_0 = t0;
      this.childConstraints = t1;
      this.baseline = t2;
    },
    RenderWrap_computeDryBaseline_getChildSize: function RenderWrap_computeDryBaseline_getChildSize(t0) {
      this.childConstraints = t0;
    },
    _RenderWrap_RenderBox_ContainerRenderObjectMixin: function _RenderWrap_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderWrap_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderWrap_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _ActiveItem: function _ActiveItem(t0, t1, t2) {
      this.controller = t0;
      this.removedItemBuilder = t1;
      this.itemIndex = t2;
    },
    SliverAnimatedList: function SliverAnimatedList(t0, t1, t2, t3) {
      var _ = this;
      _.itemBuilder = t0;
      _.findChildIndexCallback = t1;
      _.initialItemCount = t2;
      _.key = t3;
    },
    SliverAnimatedListState: function SliverAnimatedListState(t0, t1, t2, t3, t4) {
      var _ = this;
      _._incomingItems = t0;
      _._outgoingItems = t1;
      _._itemsCount = 0;
      _.TickerProviderStateMixin__tickers = t2;
      _.TickerProviderStateMixin__tickerModeNotifier = t3;
      _._widget = null;
      _._debugLifecycleState = t4;
      _._framework$_element = null;
    },
    _SliverAnimatedMultiBoxAdaptor: function _SliverAnimatedMultiBoxAdaptor() {
    },
    _SliverAnimatedMultiBoxAdaptorState: function _SliverAnimatedMultiBoxAdaptorState() {
    },
    _SliverAnimatedMultiBoxAdaptorState_insertItem_closure: function _SliverAnimatedMultiBoxAdaptorState_insertItem_closure(t0, t1) {
      this.$this = t0;
      this.incomingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_insertItem_closure0: function _SliverAnimatedMultiBoxAdaptorState_insertItem_closure0(t0, t1) {
      this.$this = t0;
      this.incomingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_removeItem_closure: function _SliverAnimatedMultiBoxAdaptorState_removeItem_closure(t0, t1) {
      this.$this = t0;
      this.outgoingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_removeItem_closure0: function _SliverAnimatedMultiBoxAdaptorState_removeItem_closure0(t0, t1) {
      this.$this = t0;
      this.outgoingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_removeItem__closure: function _SliverAnimatedMultiBoxAdaptorState_removeItem__closure(t0) {
      this.$this = t0;
    },
    __SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin_dispose_closure: function __SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin: function __SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin() {
    },
    AsyncSnapshot$_(connectionState, data, error, stackTrace, $T) {
      C.assertHelper(data == null || error == null);
      C.assertHelper(stackTrace == null || error != null);
      return new A.AsyncSnapshot(connectionState, data, error, stackTrace, $T._eval$1("AsyncSnapshot<0>"));
    },
    AsyncSnapshot$nothing($T) {
      return new A.AsyncSnapshot(B.ConnectionState_0, null, null, null, $T._eval$1("AsyncSnapshot<0>"));
    },
    AsyncSnapshot$withData(state, data, $T) {
      return new A.AsyncSnapshot(state, data, null, null, $T._eval$1("AsyncSnapshot<0>"));
    },
    AsyncSnapshot$withError(state, error, stackTrace, $T) {
      return new A.AsyncSnapshot(state, null, error, stackTrace, $T._eval$1("AsyncSnapshot<0>"));
    },
    StreamBuilderBase: function StreamBuilderBase() {
    },
    _StreamBuilderBaseState: function _StreamBuilderBaseState(t0, t1) {
      var _ = this;
      _._async0$_subscription = null;
      _.___StreamBuilderBaseState__summary_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
      _.$ti = t1;
    },
    _StreamBuilderBaseState__subscribe_closure: function _StreamBuilderBaseState__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamBuilderBaseState__subscribe__closure1: function _StreamBuilderBaseState__subscribe__closure1(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _StreamBuilderBaseState__subscribe_closure1: function _StreamBuilderBaseState__subscribe_closure1(t0) {
      this.$this = t0;
    },
    _StreamBuilderBaseState__subscribe__closure: function _StreamBuilderBaseState__subscribe__closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _StreamBuilderBaseState__subscribe_closure0: function _StreamBuilderBaseState__subscribe_closure0(t0) {
      this.$this = t0;
    },
    _StreamBuilderBaseState__subscribe__closure0: function _StreamBuilderBaseState__subscribe__closure0(t0) {
      this.$this = t0;
    },
    ConnectionState: function ConnectionState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AsyncSnapshot: function AsyncSnapshot(t0, t1, t2, t3, t4) {
      var _ = this;
      _.connectionState = t0;
      _.data = t1;
      _.error = t2;
      _.stackTrace = t3;
      _.$ti = t4;
    },
    StreamBuilder: function StreamBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _.stream = t1;
      _.key = t2;
      _.$ti = t3;
    },
    FutureBuilder: function FutureBuilder(t0, t1, t2, t3) {
      var _ = this;
      _.future = t0;
      _.builder = t1;
      _.key = t2;
      _.$ti = t3;
    },
    _FutureBuilderState: function _FutureBuilderState(t0, t1) {
      var _ = this;
      _._activeCallbackIdentity = null;
      _.___FutureBuilderState__snapshot_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
      _.$ti = t1;
    },
    _FutureBuilderState__subscribe_closure: function _FutureBuilderState__subscribe_closure(t0, t1) {
      this.$this = t0;
      this.callbackIdentity = t1;
    },
    _FutureBuilderState__subscribe__closure1: function _FutureBuilderState__subscribe__closure1(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _FutureBuilderState__subscribe_closure0: function _FutureBuilderState__subscribe_closure0(t0, t1) {
      this.$this = t0;
      this.callbackIdentity = t1;
    },
    _FutureBuilderState__subscribe__closure: function _FutureBuilderState__subscribe__closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _FutureBuilderState__subscribe__closure0: function _FutureBuilderState__subscribe__closure0(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Wrap$(alignment, children, clipBehavior, crossAxisAlignment, direction, key, runAlignment, runSpacing, spacing, textDirection, verticalDirection) {
      return new A.Wrap(direction, alignment, spacing, runAlignment, runSpacing, crossAxisAlignment, textDirection, verticalDirection, clipBehavior, children, key);
    },
    ShaderMask: function ShaderMask(t0, t1, t2, t3) {
      var _ = this;
      _.shaderCallback = t0;
      _.blendMode = t1;
      _.child = t2;
      _.key = t3;
    },
    AspectRatio: function AspectRatio(t0, t1, t2) {
      this.aspectRatio = t0;
      this.child = t1;
      this.key = t2;
    },
    Wrap: function Wrap(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.direction = t0;
      _.alignment = t1;
      _.spacing = t2;
      _.runAlignment = t3;
      _.runSpacing = t4;
      _.crossAxisAlignment = t5;
      _.textDirection = t6;
      _.verticalDirection = t7;
      _.clipBehavior = t8;
      _.children = t9;
      _.key = t10;
    },
    precacheImage(provider, context) {
      var listener, t1 = {},
        config = C.createLocalImageConfiguration(context, null),
        t2 = new C._Future($.Zone__current, type$._Future_void),
        completer = new C._AsyncCompleter(t2, type$._AsyncCompleter_void),
        stream = provider.resolve$1(config);
      t1.listener = null;
      listener = new C.ImageStreamListener(new A.precacheImage_closure(t1, completer, stream), null, new A.precacheImage_closure0(t1, completer, stream, null));
      t1.listener = listener;
      stream.addListener$1(0, listener);
      return t2;
    },
    precacheImage_closure: function precacheImage_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.completer = t1;
      this.stream = t2;
    },
    precacheImage__closure: function precacheImage__closure(t0, t1, t2) {
      this._box_0 = t0;
      this.image = t1;
      this.stream = t2;
    },
    precacheImage_closure0: function precacheImage_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.completer = t1;
      _.stream = t2;
      _.onError = t3;
    },
    Matrix4Tween: function Matrix4Tween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedContainer: function AnimatedContainer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.child = t0;
      _.decoration = t1;
      _.foregroundDecoration = t2;
      _.constraints = t3;
      _.curve = t4;
      _.duration = t5;
      _.onEnd = t6;
      _.key = t7;
    },
    _AnimatedContainerState: function _AnimatedContainerState(t0, t1, t2) {
      var _ = this;
      _._transformAlignment = _._implicit_animations$_transform = _._implicit_animations$_margin = _._implicit_animations$_constraints = _._foregroundDecoration = _._implicit_animations$_decoration = _._implicit_animations$_padding = _._implicit_animations$_alignment = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState_controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _AnimatedContainerState_forEachTween_closure: function _AnimatedContainerState_forEachTween_closure() {
    },
    _AnimatedContainerState_forEachTween_closure0: function _AnimatedContainerState_forEachTween_closure0() {
    },
    _AnimatedContainerState_forEachTween_closure1: function _AnimatedContainerState_forEachTween_closure1() {
    },
    _AnimatedContainerState_forEachTween_closure2: function _AnimatedContainerState_forEachTween_closure2() {
    },
    _AnimatedContainerState_forEachTween_closure3: function _AnimatedContainerState_forEachTween_closure3() {
    },
    _AnimatedContainerState_forEachTween_closure4: function _AnimatedContainerState_forEachTween_closure4() {
    },
    _AnimatedContainerState_forEachTween_closure5: function _AnimatedContainerState_forEachTween_closure5() {
    },
    _AnimatedContainerState_forEachTween_closure6: function _AnimatedContainerState_forEachTween_closure6() {
    },
    MediaQuery_withNoTextScaling(child) {
      return new C.Builder(new A.MediaQuery_withNoTextScaling_closure(child), null);
    },
    MediaQuery_withNoTextScaling_closure: function MediaQuery_withNoTextScaling_closure(t0) {
      this.child = t0;
    },
    PageController$(initialPage) {
      var t1 = new A.PageController(initialPage, null, null, C._setArrayType([], type$.JSArray_ScrollPosition), $.$get$ChangeNotifier__emptyListeners());
      C.ChangeNotifier_maybeDispatchObjectCreation(t1);
      return t1;
    },
    PageController: function PageController(t0, t1, t2, t3, t4) {
      var _ = this;
      _.initialPage = t0;
      _.onAttach = t1;
      _.onDetach = t2;
      _._positions = t3;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t4;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    PageMetrics: function PageMetrics(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.viewportFraction = t0;
      _._scroll_metrics$_minScrollExtent = t1;
      _._scroll_metrics$_maxScrollExtent = t2;
      _._scroll_metrics$_pixels = t3;
      _._scroll_metrics$_viewportDimension = t4;
      _.axisDirection = t5;
      _.devicePixelRatio = t6;
    },
    _PagePosition: function _PagePosition(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._pageToUseOnStartup = t0;
      _._cachedPage = null;
      _._viewportFraction = t1;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t2;
      _._currentDrag = null;
      _.physics = t3;
      _.context = t4;
      _.keepScrollOffset = t5;
      _.debugLabel = t6;
      _._maxScrollExtent = _._minScrollExtent = null;
      _._impliedVelocity = 0;
      _._viewportDimension = _._pixels = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._pendingDimensions = false;
      _._scroll_position$_lastMetrics = null;
      _._haveScheduledUpdateNotification = false;
      _._semanticActions = _._lastAxis = null;
      _.isScrollingNotifier = t7;
      _._activity = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t8;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _ForceImplicitScrollPhysics: function _ForceImplicitScrollPhysics(t0, t1) {
      this.allowImplicitScrolling = t0;
      this.parent = t1;
    },
    PageScrollPhysics: function PageScrollPhysics(t0) {
      this.parent = t0;
    },
    PageView: function PageView(t0, t1, t2, t3) {
      var _ = this;
      _.controller = t0;
      _.onPageChanged = t1;
      _.childrenDelegate = t2;
      _.key = t3;
    },
    _PageViewState: function _PageViewState(t0) {
      var _ = this;
      _._lastReportedPage = 0;
      _.___PageViewState__controller_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _PageViewState_build_closure: function _PageViewState_build_closure(t0) {
      this.$this = t0;
    },
    _PageViewState_build_closure0: function _PageViewState_build_closure0(t0, t1) {
      this.$this = t0;
      this.axisDirection = t1;
    },
    NeverScrollableScrollPhysics: function NeverScrollableScrollPhysics(t0) {
      this.parent = t0;
    },
    GridView$(children, gridDelegate, padding) {
      var _null = null,
        t1 = C.SliverChildListDelegate$(children, true, true, true),
        t2 = children.length;
      return new A.GridView(gridDelegate, t1, padding, D.Axis_1, false, _null, _null, D.AlwaysScrollableScrollPhysics_null, _null, false, _null, 0, _null, t2, D.DragStartBehavior_1, D.ScrollViewKeyboardDismissBehavior_0, _null, D.Clip_1, D.HitTestBehavior_1, _null);
    },
    GridView: function GridView(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.gridDelegate = t0;
      _.childrenDelegate = t1;
      _.padding = t2;
      _.scrollDirection = t3;
      _.reverse = t4;
      _.controller = t5;
      _.primary = t6;
      _.physics = t7;
      _.scrollBehavior = t8;
      _.shrinkWrap = t9;
      _.center = t10;
      _.anchor = t11;
      _.cacheExtent = t12;
      _.semanticChildCount = t13;
      _.dragStartBehavior = t14;
      _.keyboardDismissBehavior = t15;
      _.restorationId = t16;
      _.clipBehavior = t17;
      _.hitTestBehavior = t18;
      _.key = t19;
    },
    SliverGrid: function SliverGrid(t0, t1, t2) {
      this.gridDelegate = t0;
      this.delegate = t1;
      this.key = t2;
    },
    SliverFillViewport: function SliverFillViewport(t0, t1, t2, t3) {
      var _ = this;
      _.viewportFraction = t0;
      _.padEnds = t1;
      _.delegate = t2;
      _.key = t3;
    },
    _SliverFillViewportRenderObjectWidget: function _SliverFillViewportRenderObjectWidget(t0, t1, t2) {
      this.viewportFraction = t0;
      this.delegate = t1;
      this.key = t2;
    },
    _SliverFractionalPadding: function _SliverFractionalPadding(t0, t1, t2) {
      this.viewportFraction = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderSliverFractionalPadding: function _RenderSliverFractionalPadding(t0, t1, t2) {
      var _ = this;
      _._lastResolvedConstraints = null;
      _._sliver_fill$_viewportFraction = t0;
      _._sliver_fill$_resolvedPadding = null;
      _.RenderObjectWithChildMixin__child = t1;
      _._geometry = null;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    Spacer: function Spacer(t0) {
      this.key = t0;
    },
    ToggleableStateMixin: function ToggleableStateMixin() {
    },
    ToggleableStateMixin__handleTapDown_closure: function ToggleableStateMixin__handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    ToggleableStateMixin__handleTapEnd_closure: function ToggleableStateMixin__handleTapEnd_closure(t0) {
      this.$this = t0;
    },
    ToggleableStateMixin__handleFocusHighlightChanged_closure: function ToggleableStateMixin__handleFocusHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    ToggleableStateMixin__handleHoverChanged_closure: function ToggleableStateMixin__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    ToggleablePainter: function ToggleablePainter() {
    },
    ChatOperationType: function ChatOperationType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ChatOperation: function ChatOperation(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.type = t0;
      _.oldMessage = t1;
      _.message = t2;
      _.index = t3;
      _.messages = t4;
      _.animated = t5;
    },
    ScrollToMessageMixin: function ScrollToMessageMixin() {
    },
    UploadProgressMixin: function UploadProgressMixin() {
    },
    Builders: function Builders() {
    },
    _$Builders: function _$Builders() {
    },
    _Builders: function _Builders(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.textMessageBuilder = t0;
      _.textStreamMessageBuilder = t1;
      _.imageMessageBuilder = t2;
      _.customMessageBuilder = t3;
      _.composerBuilder = t4;
      _.emptyChatListBuilder = t5;
    },
    _Builders_Object__$Builders: function _Builders_Object__$Builders() {
    },
    TextStreamMessage$(authorId, createdAt, deletedAt, deliveredAt, failedAt, id, metadata, pinned, reactions, replyToMessageId, seenAt, sentAt, $status, streamId, updatedAt) {
      return new A.TextStreamMessage(id, authorId, replyToMessageId, createdAt, deletedAt, failedAt, sentAt, deliveredAt, seenAt, updatedAt, reactions, pinned, metadata, $status, streamId, "textStream");
    },
    TextStreamMessage: function TextStreamMessage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.id = t0;
      _.authorId = t1;
      _.replyToMessageId = t2;
      _.createdAt = t3;
      _.deletedAt = t4;
      _.failedAt = t5;
      _.sentAt = t6;
      _.deliveredAt = t7;
      _.seenAt = t8;
      _.updatedAt = t9;
      _._reactions = t10;
      _.pinned = t11;
      _._metadata = t12;
      _.status = t13;
      _.streamId = t14;
      _.$$type = t15;
    },
    MessageGroupStatus: function MessageGroupStatus(t0) {
      this.isFirst = t0;
    },
    User: function User() {
    },
    _$User: function _$User() {
    },
    _User: function _User(t0, t1) {
      this.id = t0;
      this.name = t1;
    },
    _User_Object__$User: function _User_Object__$User() {
    },
    ChatTheme: function ChatTheme() {
    },
    ChatColors: function ChatColors() {
    },
    ChatTypography: function ChatTypography() {
    },
    _$ChatTheme: function _$ChatTheme() {
    },
    _ChatTheme: function _ChatTheme(t0, t1, t2) {
      this.colors = t0;
      this.typography = t1;
      this.shape = t2;
    },
    _$ChatColors: function _$ChatColors() {
    },
    _ChatColors: function _ChatColors(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.primary = t0;
      _.onPrimary = t1;
      _.surface = t2;
      _.onSurface = t3;
      _.surfaceContainer = t4;
      _.surfaceContainerLow = t5;
      _.surfaceContainerHigh = t6;
    },
    _$ChatTypography: function _$ChatTypography() {
    },
    _ChatTypography: function _ChatTypography(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.bodyLarge = t0;
      _.bodyMedium = t1;
      _.bodySmall = t2;
      _.labelLarge = t3;
      _.labelMedium = t4;
      _.labelSmall = t5;
    },
    _ChatColors_Object__$ChatColors: function _ChatColors_Object__$ChatColors() {
    },
    _ChatTheme_Object__$ChatTheme: function _ChatTheme_Object__$ChatTheme() {
    },
    _ChatTypography_Object__$ChatTypography: function _ChatTypography_Object__$ChatTypography() {
    },
    LinkPreviewPosition: function LinkPreviewPosition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TimeAndStatusPosition: function TimeAndStatusPosition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MessagesGroupingMode: function MessagesGroupingMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    UserCache: function UserCache(t0, t1, t2, t3) {
      var _ = this;
      _._user_cache$_cache = t0;
      _._accessOrder = t1;
      _.maxSize = t2;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    Chat: function Chat(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.currentUserId = t0;
      _.resolveUser = t1;
      _.chatController = t2;
      _.builders = t3;
      _.theme = t4;
      _.onMessageSend = t5;
      _.onMessageLongPress = t6;
      _.onAttachmentTap = t7;
      _.key = t8;
    },
    _ChatState: function _ChatState(t0) {
      var _ = this;
      _.___ChatState__timeFormat_A = _.___ChatState__userCache_F = _.___ChatState__crossCache_F = _.___ChatState__builders_A = _.___ChatState__theme_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _ChatState_build_closure: function _ChatState_build_closure(t0) {
      this.$this = t0;
    },
    _ChatState_build_closure0: function _ChatState_build_closure0() {
    },
    _ChatState_build_closure1: function _ChatState_build_closure1() {
    },
    __ChatState_State_WidgetsBindingObserver: function __ChatState_State_WidgetsBindingObserver() {
    },
    InitialScrollToEndMode: function InitialScrollToEndMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ChatAnimatedList: function ChatAnimatedList(t0, t1) {
      this.itemBuilder = t0;
      this.key = t1;
    },
    _ChatAnimatedListState: function _ChatAnimatedListState(t0, t1, t2, t3, t4) {
      var _ = this;
      _._listKey = t0;
      _.___ChatAnimatedListState__operationsSubscription_F = _.___ChatAnimatedListState__oldListEmptyNotifier_A = _.___ChatAnimatedListState__oldList_A = _.___ChatAnimatedListState__scrollController_F = _.___ChatAnimatedListState__observerController_F = _.___ChatAnimatedListState__chatController_F = $;
      _._operationsQueue = t1;
      _._isProcessingOperations = false;
      _.___ChatAnimatedListState__scrollToBottomAnimation_F = _.___ChatAnimatedListState__scrollToBottomController_F = _.___ChatAnimatedListState__scrollAnimationController_F = $;
      _._scrollToBottomShowTimer = null;
      _._isScrollingToBottom = _._userHasScrolled = false;
      _.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = $;
      _._lastInsertedMessageId = "";
      _._startPaginationShouldTrigger = _._paginationShouldTrigger = false;
      _.TickerProviderStateMixin__tickers = t2;
      _.TickerProviderStateMixin__tickerModeNotifier = t3;
      _._widget = null;
      _._debugLifecycleState = t4;
      _._framework$_element = null;
    },
    _ChatAnimatedListState_initState_closure: function _ChatAnimatedListState_initState_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_onKeyboardHeightChanged_closure: function _ChatAnimatedListState_onKeyboardHeightChanged_closure(t0, t1) {
      this.$this = t0;
      this.height = t1;
    },
    _ChatAnimatedListState_build_closure: function _ChatAnimatedListState_build_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_build_buildSlivers: function _ChatAnimatedListState_build_buildSlivers(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.context = t1;
      _.builders = t2;
      _.sliverAnimatedList = t3;
    },
    _ChatAnimatedListState_build_closure0: function _ChatAnimatedListState_build_closure0(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_build_closure1: function _ChatAnimatedListState_build_closure1(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_build_closure2: function _ChatAnimatedListState_build_closure2(t0) {
      this.builders = t0;
    },
    _ChatAnimatedListState__scrollToEnd_closure: function _ChatAnimatedListState__scrollToEnd_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _ChatAnimatedListState__adjustInitialScrollPosition_closure: function _ChatAnimatedListState__adjustInitialScrollPosition_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__handleScrollToBottom_closure: function _ChatAnimatedListState__handleScrollToBottom_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__handleToggleScrollToBottom_closure: function _ChatAnimatedListState__handleToggleScrollToBottom_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__scrollToMessageId_closure: function _ChatAnimatedListState__scrollToMessageId_closure(t0) {
      this.messageId = t0;
    },
    _ChatAnimatedListState__scrollToIndex_closure: function _ChatAnimatedListState__scrollToIndex_closure(t0) {
      this.offset = t0;
    },
    _ChatAnimatedListState__scrollToIndex_closure0: function _ChatAnimatedListState__scrollToIndex_closure0(t0) {
      this.offset = t0;
    },
    _ChatAnimatedListState__onRemoved_closure: function _ChatAnimatedListState__onRemoved_closure(t0, t1, t2) {
      this.$this = t0;
      this.data = t1;
      this.position = t2;
    },
    _ChatAnimatedListState__onDiffUpdate_closure0: function _ChatAnimatedListState__onDiffUpdate_closure0(t0, t1) {
      this.$this = t0;
      this.animated = t1;
    },
    _ChatAnimatedListState__onDiffUpdate_closure2: function _ChatAnimatedListState__onDiffUpdate_closure2(t0, t1) {
      this.$this = t0;
      this.animated = t1;
    },
    _ChatAnimatedListState__onDiffUpdate_closure: function _ChatAnimatedListState__onDiffUpdate_closure(t0, t1) {
      this.$this = t0;
      this.animated = t1;
    },
    _ChatAnimatedListState__onDiffUpdate_closure1: function _ChatAnimatedListState__onDiffUpdate_closure1(t0, t1) {
      this.$this = t0;
      this.animated = t1;
    },
    __ChatAnimatedListState_State_TickerProviderStateMixin_dispose_closure: function __ChatAnimatedListState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __ChatAnimatedListState_State_TickerProviderStateMixin: function __ChatAnimatedListState_State_TickerProviderStateMixin() {
    },
    SliverSpacing: function SliverSpacing(t0, t1, t2, t3) {
      var _ = this;
      _.bottomPadding = t0;
      _.handleSafeArea = t1;
      _.onKeyboardHeightChanged = t2;
      _.key = t3;
    },
    _SliverSpacingState: function _SliverSpacingState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.KeyboardMixin__keyboardDebounceTimer = t0;
      _.KeyboardMixin__previousKeyboardHeight = t1;
      _.KeyboardMixin__initialSafeArea = t2;
      _.KeyboardMixin__initialized = t3;
      _._widget = null;
      _._debugLifecycleState = t4;
      _._framework$_element = null;
    },
    _SliverSpacingState_build_closure: function _SliverSpacingState_build_closure(t0, t1) {
      this.$this = t0;
      this.safeArea = t1;
    },
    __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure: function __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure(t0, t1, t2) {
      this.$this = t0;
      this.keyboardHeight = t1;
      this.pixelRatio = t2;
    },
    __SliverSpacingState_State_WidgetsBindingObserver: function __SliverSpacingState_State_WidgetsBindingObserver() {
    },
    __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin: function __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin() {
    },
    ChatMessage: function ChatMessage(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.message = t0;
      _.index = t1;
      _.animation = t2;
      _.child = t3;
      _.isRemoved = t4;
      _.groupStatus = t5;
      _.key = t6;
    },
    ChatMessage_build_closure1: function ChatMessage_build_closure1(t0, t1, t2) {
      this.$this = t0;
      this.onMessageTap = t1;
      this.context = t2;
    },
    ChatMessage_build_closure: function ChatMessage_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.onMessageDoubleTap = t1;
      this.context = t2;
    },
    ChatMessage_build_closure0: function ChatMessage_build_closure0(t0, t1, t2) {
      this.$this = t0;
      this.onMessageLongPress = t1;
      this.context = t2;
    },
    _shouldGroupMessages(earlierDate, laterDate, groupingMode, timeoutInSeconds) {
      switch (groupingMode.index) {
        case 0:
          return D.JSInt_methods._tdivFast$1(laterDate.difference$1(earlierDate)._duration, 1000000) < timeoutInSeconds;
        case 1:
          return C.Primitives_getYear(earlierDate) === C.Primitives_getYear(laterDate) && C.Primitives_getMonth(earlierDate) === C.Primitives_getMonth(laterDate) && C.Primitives_getDay(earlierDate) === C.Primitives_getDay(laterDate) && C.Primitives_getHours(earlierDate) === C.Primitives_getHours(laterDate) && C.Primitives_getMinutes(earlierDate) === C.Primitives_getMinutes(laterDate);
        case 2:
          return C.Primitives_getYear(earlierDate) === C.Primitives_getYear(laterDate) && C.Primitives_getMonth(earlierDate) === C.Primitives_getMonth(laterDate) && C.Primitives_getDay(earlierDate) === C.Primitives_getDay(laterDate) && C.Primitives_getHours(earlierDate) === C.Primitives_getHours(laterDate);
        case 3:
          return C.Primitives_getYear(earlierDate) === C.Primitives_getYear(laterDate) && C.Primitives_getMonth(earlierDate) === C.Primitives_getMonth(laterDate) && C.Primitives_getDay(earlierDate) === C.Primitives_getDay(laterDate);
      }
    },
    ChatMessageInternal: function ChatMessageInternal(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.message = t0;
      _.index = t1;
      _.animation = t2;
      _.messagesGroupingMode = t3;
      _.messageGroupingTimeoutInSeconds = t4;
      _.isRemoved = t5;
      _.key = t6;
    },
    _ChatMessageInternalState: function _ChatMessageInternalState(t0) {
      var _ = this;
      _.___ChatMessageInternalState__updatedMessage_A = _.___ChatMessageInternalState__operationsSubscription_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _ChatMessageInternalState_initState_closure: function _ChatMessageInternalState_initState_closure(t0) {
      this.$this = t0;
    },
    _ChatMessageInternalState_initState__closure: function _ChatMessageInternalState_initState__closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    Composer: function Composer(t0, t1, t2) {
      this.topWidget = t0;
      this.hintText = t1;
      this.key = t2;
    },
    _ComposerState: function _ComposerState(t0, t1) {
      var _ = this;
      _._composer$_key = t0;
      _.___ComposerState__hasTextNotifier_F = _.___ComposerState__focusNode_F = _.___ComposerState__textController_F = $;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _ComposerState_initState_closure: function _ComposerState_initState_closure(t0) {
      this.$this = t0;
    },
    _ComposerState_didUpdateWidget_closure: function _ComposerState_didUpdateWidget_closure(t0) {
      this.$this = t0;
    },
    _ComposerState_build_closure: function _ComposerState_build_closure() {
    },
    _ComposerState_build_closure0: function _ComposerState_build_closure0(t0) {
      this.$this = t0;
    },
    _ComposerState_build_closure1: function _ComposerState_build_closure1(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    _ComposerState_build__closure: function _ComposerState_build__closure(t0) {
      this.$this = t0;
    },
    EmptyChatList: function EmptyChatList(t0) {
      this.key = t0;
    },
    _EmptyChatListState: function _EmptyChatListState(t0, t1, t2) {
      var _ = this;
      _.___EmptyChatListState__opacityAnimation_A = _.___EmptyChatListState__controller_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _EmptyChatListState_initState_closure: function _EmptyChatListState_initState_closure(t0) {
      this.$this = t0;
    },
    _EmptyChatListState_build_closure: function _EmptyChatListState_build_closure() {
    },
    __EmptyChatListState_State_SingleTickerProviderStateMixin_dispose_closure: function __EmptyChatListState_State_SingleTickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __EmptyChatListState_State_SingleTickerProviderStateMixin: function __EmptyChatListState_State_SingleTickerProviderStateMixin() {
    },
    ScrollToBottom: function ScrollToBottom(t0, t1, t2) {
      this.animation = t0;
      this.onPressed = t1;
      this.key = t2;
    },
    ScrollToBottom_build_closure0: function ScrollToBottom_build_closure0() {
    },
    ScrollToBottom_build_closure: function ScrollToBottom_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.bottomSafeArea = t1;
      this.theme = t2;
    },
    SimpleTextMessage: function SimpleTextMessage(t0, t1) {
      this.message = t0;
      this.key = t1;
    },
    SimpleTextMessage_build_closure: function SimpleTextMessage_build_closure() {
    },
    TimeAndStatus: function TimeAndStatus(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.time = t0;
      _.status = t1;
      _.showTime = t2;
      _.showStatus = t3;
      _.textStyle = t4;
      _.key = t5;
    },
    ComposerHeightNotifier: function ComposerHeightNotifier(t0) {
      var _ = this;
      _.ChangeNotifier__count = _._composer_height_notifier$_height = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    KeyboardMixin: function KeyboardMixin() {
    },
    LoadMoreNotifier: function LoadMoreNotifier(t0) {
      var _ = this;
      _._isLoadingNewer = _._isLoadingOlder = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    MessageListDiff$(oldList, newList) {
      return new A.MessageListDiff(oldList, newList, new A.ListDiffDelegate_closure(type$.Message));
    },
    MessageListDiff: function MessageListDiff(t0, t1, t2) {
      this.oldList = t0;
      this.newList = t1;
      this.equalityChecker = t2;
    },
    SendButtonVisibilityMode: function SendButtonVisibilityMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    InputClearMode: function InputClearMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AccentRenderConfig: function AccentRenderConfig(t0, t1, t2) {
      this.overChar = t0;
      this.overImageName = t1;
      this.underImageName = t2;
    },
    FontMetrics_fromMap(map) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, exception;
      try {
        map.$index(0, "slant").toString;
        map.$index(0, "space").toString;
        map.$index(0, "stretch").toString;
        map.$index(0, "shrink").toString;
        t1 = map.$index(0, "xHeight");
        t1.toString;
        t2 = map.$index(0, "quad");
        t2.toString;
        map.$index(0, "extraSpace").toString;
        t3 = map.$index(0, "num1");
        t3.toString;
        t4 = map.$index(0, "num2");
        t4.toString;
        t5 = map.$index(0, "num3");
        t5.toString;
        t6 = map.$index(0, "denom1");
        t6.toString;
        t7 = map.$index(0, "denom2");
        t7.toString;
        t8 = map.$index(0, "sup1");
        t8.toString;
        t9 = map.$index(0, "sup2");
        t9.toString;
        t10 = map.$index(0, "sup3");
        t10.toString;
        t11 = map.$index(0, "sub1");
        t11.toString;
        t12 = map.$index(0, "sub2");
        t12.toString;
        t13 = map.$index(0, "supDrop");
        t13.toString;
        t14 = map.$index(0, "subDrop");
        t14.toString;
        map.$index(0, "delim1").toString;
        map.$index(0, "delim2").toString;
        t15 = map.$index(0, "axisHeight");
        t15.toString;
        t16 = map.$index(0, "defaultRuleThickness");
        t16.toString;
        t17 = map.$index(0, "bigOpSpacing1");
        t17.toString;
        t18 = map.$index(0, "bigOpSpacing2");
        t18.toString;
        t19 = map.$index(0, "bigOpSpacing3");
        t19.toString;
        t20 = map.$index(0, "bigOpSpacing4");
        t20.toString;
        t21 = map.$index(0, "bigOpSpacing5");
        t21.toString;
        t22 = map.$index(0, "sqrtRuleThickness");
        t22.toString;
        map.$index(0, "ptPerEm").toString;
        map.$index(0, "doubleRuleSep").toString;
        map.$index(0, "arrayRuleWidth").toString;
        map.$index(0, "fboxsep").toString;
        t23 = map.$index(0, "fboxrule");
        t23.toString;
        return new A.FontMetrics(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23);
      } catch (exception) {
        if (type$.Error._is(C.unwrapException(exception)))
          return null;
        else
          throw exception;
      }
    },
    FontMetrics: function FontMetrics(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.xHeight = t0;
      _.quad = t1;
      _.num1 = t2;
      _.num2 = t3;
      _.num3 = t4;
      _.denom1 = t5;
      _.denom2 = t6;
      _.sup1 = t7;
      _.sup2 = t8;
      _.sup3 = t9;
      _.sub1 = t10;
      _.sub2 = t11;
      _.supDrop = t12;
      _.subDrop = t13;
      _.axisHeight = t14;
      _.defaultRuleThickness = t15;
      _.bigOpSpacing1 = t16;
      _.bigOpSpacing2 = t17;
      _.bigOpSpacing3 = t18;
      _.bigOpSpacing4 = t19;
      _.bigOpSpacing5 = t20;
      _.sqrtRuleThickness = t21;
      _.fboxrule = t22;
    },
    AccentNode$(base, isShifty, isStretchy, label) {
      return new A.AccentNode(base, label, isStretchy, isShifty);
    },
    AccentNode: function AccentNode(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.label = t1;
      _.isStretchy = t2;
      _.isShifty = t3;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    AccentNode_buildWidget_closure: function AccentNode_buildWidget_closure(t0, t1) {
      this._box_0 = t0;
      this.options = t1;
    },
    AccentNode_buildWidget_closure0: function AccentNode_buildWidget_closure0(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    AccentNode_buildWidget_closure1: function AccentNode_buildWidget_closure1(t0) {
      this.skew = t0;
    },
    AccentUnderNode$(base, label) {
      return new A.AccentUnderNode(base, label);
    },
    AccentUnderNode: function AccentUnderNode(t0, t1) {
      var _ = this;
      _.base = t0;
      _.label = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    AccentUnderNode_buildWidget_closure0: function AccentUnderNode_buildWidget_closure0() {
    },
    AccentUnderNode_buildWidget_closure: function AccentUnderNode_buildWidget_closure(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    CursorNode: function CursorNode() {
      this._oldChildBuildResults = this._oldBuildResult = this._oldOptions = null;
    },
    _BaselineDistance: function _BaselineDistance(t0, t1, t2) {
      this.baselineDistance = t0;
      this.child = t1;
      this.key = t2;
    },
    _BaselineDistanceBox: function _BaselineDistanceBox(t0, t1, t2, t3) {
      var _ = this;
      _.baselineDistance = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    EnclosureNode$(backgroundcolor, base, bordercolor, hasBorder, horizontalPadding, notation, verticalPadding) {
      return new A.EnclosureNode(base, hasBorder, bordercolor, backgroundcolor, notation, horizontalPadding, verticalPadding);
    },
    EnclosureNode: function EnclosureNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.base = t0;
      _.hasBorder = t1;
      _.bordercolor = t2;
      _.backgroundcolor = t3;
      _.notation = t4;
      _.horizontalPadding = t5;
      _.verticalPadding = t6;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    EnclosureNode_buildWidget_closure: function EnclosureNode_buildWidget_closure(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    EnclosureNode_buildWidget_closure0: function EnclosureNode_buildWidget_closure0(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    LinePainter: function LinePainter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.startRelativeX = t0;
      _.startRelativeY = t1;
      _.endRelativeX = t2;
      _.endRelativeY = t3;
      _.lineWidth = t4;
      _.color = t5;
      _._repaint = t6;
    },
    HorizontalStrikeDelegate: function HorizontalStrikeDelegate(t0, t1, t2) {
      var _ = this;
      _.ruleThickness = t0;
      _.vShift = t1;
      _.color = t2;
      _.width = _.height = 0;
    },
    EquationArrayNode: function EquationArrayNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.arrayStretch = t0;
      _.addJot = t1;
      _.body = t2;
      _.hlines = t3;
      _.rowSpacings = t4;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    EquationArrayNode_buildWidget_closure: function EquationArrayNode_buildWidget_closure(t0) {
      this.options = t0;
    },
    EquationArrayNode_buildWidget_closure0: function EquationArrayNode_buildWidget_closure0() {
    },
    EquationArrayNode_toJson_closure: function EquationArrayNode_toJson_closure() {
    },
    EquationArrayNode_toJson_closure0: function EquationArrayNode_toJson_closure0() {
    },
    EquationArrayNode_toJson_closure1: function EquationArrayNode_toJson_closure1() {
    },
    FracNode$(barSize, continued, denominator, numerator) {
      return new A.FracNode(numerator, denominator, barSize, continued);
    },
    FracNode: function FracNode(t0, t1, t2, t3) {
      var _ = this;
      _.numerator = t0;
      _.denominator = t1;
      _.barSize = t2;
      _.continued = t3;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _FracPos: function _FracPos(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FracLayoutDelegate: function FracLayoutDelegate(t0, t1) {
      var _ = this;
      _.barSize = t0;
      _.options = t1;
      _.barLength = _.width = _.a = _.height = _.theta = 0;
    },
    FunctionNode$(argument, functionName) {
      return new A.FunctionNode(functionName, argument);
    },
    FunctionNode: function FunctionNode(t0, t1) {
      var _ = this;
      _.functionName = t0;
      _.argument = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    LeftRightNode$(body, leftDelim, middle, rightDelim) {
      C.assertHelper(body.length !== 0);
      C.assertHelper(middle.length === body.length - 1);
      return new A.LeftRightNode(leftDelim, rightDelim, body, middle);
    },
    buildCustomSizedDelimWidget(delim, minDelimiterHeight, options) {
      var axisHeight, sequence, delimConf, t1, _null = null;
      if (delim == null) {
        axisHeight = new A.Measurement(options.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(options);
        return A.ShiftBaseline$(C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, minDelimiterHeight, _null, _null, _null, _null, _null, B.Measurement_83w.toLpUnder$1(options)), axisHeight, 0.5);
      }
      if (B.Set_6NNqz.contains$1(0, delim))
        sequence = B.List_CSY;
      else
        sequence = B.Set_yInQh.contains$1(0, delim) ? B.List_CSY : B.List_LY8;
      delimConf = A.IterableExtension_firstWhereOrNull(sequence, new A.buildCustomSizedDelimWidget_closure(delim, options, minDelimiterHeight), type$.DelimiterConf);
      if (B.Set_6NNqz.contains$1(0, delim))
        delimConf = delimConf == null ? D.JSArray_methods.get$last(sequence) : delimConf;
      if (delimConf != null) {
        axisHeight = new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options);
        t1 = delimConf.font;
        return A.ShiftBaseline$(A.makeChar(delim, t1, A.getCharacterMetrics(delim, t1.get$fontName(), B.Mode_0), options, false), axisHeight, 0.5);
      } else
        return A.makeStackedDelim(delim, minDelimiterHeight, B.Mode_0, options);
    },
    makeStackedDelim(delim, minDelimiterHeight, mode, options) {
      var t4, t5, t6, t7, topHeight, repeatHeight, bottomHeight, t8, t9, middleMetrics, middleHeight, middleFactor, repeatCount, axisHeight, i, _null = null,
        conf = B.Map_TifNQ.$index(0, delim),
        t1 = conf.top,
        t2 = conf.font,
        t3 = A.getCharacterMetrics(t1, t2.get$fontName(), B.Mode_0);
      t3.toString;
      t4 = conf.repeat;
      t5 = A.getCharacterMetrics(t4, t2.get$fontName(), B.Mode_0);
      t5.toString;
      t6 = conf.bottom;
      t7 = A.getCharacterMetrics(t6, t2.get$fontName(), B.Mode_0);
      t7.toString;
      topHeight = new A.Measurement(t3.height + t3.depth, B.Unit_16).toLpUnder$1(options);
      repeatHeight = new A.Measurement(t5.height + t5.depth, B.Unit_16).toLpUnder$1(options);
      bottomHeight = new A.Measurement(t7.height + t7.depth, B.Unit_16).toLpUnder$1(options);
      t8 = conf.middle;
      t9 = t8 != null;
      if (t9) {
        middleMetrics = A.getCharacterMetrics(t8, t2.get$fontName(), B.Mode_0);
        middleHeight = new A.Measurement(middleMetrics.height + middleMetrics.depth, B.Unit_16).toLpUnder$1(options);
        middleFactor = 2;
      } else {
        middleMetrics = _null;
        middleHeight = 0;
        middleFactor = 1;
      }
      repeatCount = D.JSNumber_methods.ceil$0(Math.max(0, (minDelimiterHeight - (topHeight + bottomHeight + middleHeight)) / (repeatHeight * middleFactor)));
      axisHeight = new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options);
      t1 = C._setArrayType([A.makeChar(t1, t2, t3, options, false)], type$.JSArray_Widget);
      for (i = 0; i < repeatCount; ++i)
        t1.push(A.makeChar(t4, t2, t5, options, false));
      if (t9) {
        middleMetrics.toString;
        t1.push(A.makeChar(t8, t2, middleMetrics, options, false));
      }
      if (t9)
        for (i = 0; i < repeatCount; ++i)
          t1.push(A.makeChar(t4, t2, t5, options, false));
      t1.push(A.makeChar(t6, t2, t7, options, false));
      return A.ShiftBaseline$(C.Column$(t1, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), axisHeight, 0.5);
    },
    LeftRightNode: function LeftRightNode(t0, t1, t2, t3) {
      var _ = this;
      _.leftDelim = t0;
      _.rightDelim = t1;
      _.body = t2;
      _.middle = t3;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    LeftRightNode_buildWidget_closure: function LeftRightNode_buildWidget_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.a = t1;
      _.options = t2;
      _.numElements = t3;
      _.childBuildResults = t4;
    },
    LeftRightNode_buildWidget__closure0: function LeftRightNode_buildWidget__closure0(t0, t1) {
      this.a = t0;
      this.options = t1;
    },
    LeftRightNode_buildWidget__closure: function LeftRightNode_buildWidget__closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.index = t1;
      _.numElements = t2;
      _.options = t3;
    },
    LeftRightNode_toJson_closure: function LeftRightNode_toJson_closure() {
    },
    buildCustomSizedDelimWidget_closure: function buildCustomSizedDelimWidget_closure(t0, t1, t2) {
      this.delim = t0;
      this.options = t1;
      this.minDelimiterHeight = t2;
    },
    StackDelimiterConf: function StackDelimiterConf(t0, t1, t2, t3, t4) {
      var _ = this;
      _.top = t0;
      _.middle = t1;
      _.repeat = t2;
      _.bottom = t3;
      _.font = t4;
    },
    MatrixNode$_(arrayStretch, body, cols, columnAligns, hLines, hskipBeforeAndAfter, isSmall, rowSpacings, rows, vLines) {
      var t1 = J.getInterceptor$asx(body);
      C.assertHelper(t1.get$length(body) === rows);
      C.assertHelper(t1.every$1(body, new A.MatrixNode$__closure(cols)));
      C.assertHelper(J.get$length$asx(columnAligns) === cols);
      C.assertHelper(J.get$length$asx(vLines) === cols + 1);
      C.assertHelper(J.get$length$asx(rowSpacings) === rows);
      C.assertHelper(J.get$length$asx(hLines) === rows + 1);
      return new A.MatrixNode(arrayStretch, hskipBeforeAndAfter, isSmall, columnAligns, vLines, rowSpacings, hLines, body, rows, cols);
    },
    MatrixNode_MatrixNode(arrayStretch, body, columnAligns, hLines, hskipBeforeAndAfter, isSmall, rowSpacings, vLines) {
      var t3, t4, cols, sanitizedColumnAligns, sanitizedVLines, t5, rows, sanitizedBody, sanitizedRowSpacing,
        t1 = C._arrayInstanceType(body),
        t2 = A.IterableIntegerExtension_get_maxOrNull(new C.MappedListIterable(body, t1._eval$1("int(1)")._as(new A.MatrixNode_MatrixNode_closure()), t1._eval$1("MappedListIterable<1,int>")));
      if (t2 == null)
        t2 = 0;
      t3 = columnAligns.length;
      t4 = vLines.length;
      cols = Math.max(Math.max(t2, t3), t4 - 1);
      sanitizedColumnAligns = A.ListExtension_extendToByFill(columnAligns, cols, B.MatrixColumnAlign_1, type$.MatrixColumnAlign);
      t4 = type$.MatrixSeparatorStyle;
      sanitizedVLines = A.ListExtension_extendToByFill(vLines, cols + 1, B.MatrixSeparatorStyle_2, t4);
      t3 = body.length;
      t2 = rowSpacings.length;
      t5 = hLines.length;
      rows = Math.max(Math.max(t3, t2), t5 - 1);
      t5 = t1._eval$1("MappedListIterable<1,List<EquationRowNode?>>");
      sanitizedBody = A.ListExtension_extendToByFill(C.List_List$of(new C.MappedListIterable(body, t1._eval$1("List<EquationRowNode?>(1)")._as(new A.MatrixNode_MatrixNode_closure0(cols)), t5), false, t5._eval$1("ListIterable.E")), rows, C.List_List$filled(cols, null, false, type$.nullable_EquationRowNode), type$.List_nullable_EquationRowNode);
      sanitizedRowSpacing = A.ListExtension_extendToByFill(rowSpacings, rows, B.Measurement_0_Unit_0, type$.Measurement);
      return A.MatrixNode$_(arrayStretch, sanitizedBody, cols, sanitizedColumnAligns, A.ListExtension_extendToByFill(hLines, rows + 1, B.MatrixSeparatorStyle_2, t4), hskipBeforeAndAfter, isSmall, sanitizedRowSpacing, rows, sanitizedVLines);
    },
    MatrixSeparatorStyle: function MatrixSeparatorStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MatrixColumnAlign: function MatrixColumnAlign(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MatrixNode: function MatrixNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.arrayStretch = t0;
      _.hskipBeforeAndAfter = t1;
      _.isSmall = t2;
      _.columnAligns = t3;
      _.vLines = t4;
      _.rowSpacings = t5;
      _.hLines = t6;
      _.body = t7;
      _.rows = t8;
      _.cols = t9;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    MatrixNode$__closure: function MatrixNode$__closure(t0) {
      this.cols = t0;
    },
    MatrixNode_MatrixNode_closure: function MatrixNode_MatrixNode_closure() {
    },
    MatrixNode_MatrixNode_closure0: function MatrixNode_MatrixNode_closure0(t0) {
      this.cols = t0;
    },
    MatrixNode_buildWidget_closure: function MatrixNode_buildWidget_closure(t0) {
      this.options = t0;
    },
    MatrixNode_buildWidget_closure0: function MatrixNode_buildWidget_closure0() {
    },
    MatrixNode_computeChildren_closure: function MatrixNode_computeChildren_closure() {
    },
    MatrixNode_toJson_closure: function MatrixNode_toJson_closure() {
    },
    MatrixNode_toJson_closure0: function MatrixNode_toJson_closure0() {
    },
    MatrixNode_toJson_closure1: function MatrixNode_toJson_closure1() {
    },
    MatrixNode_toJson_closure2: function MatrixNode_toJson_closure2() {
    },
    MatrixNode_toJson_closure3: function MatrixNode_toJson_closure3() {
    },
    MatrixNode_toJson_closure4: function MatrixNode_toJson_closure4() {
    },
    MatrixNode_toJson_closure5: function MatrixNode_toJson_closure5() {
    },
    MatrixNode_toJson__closure: function MatrixNode_toJson__closure() {
    },
    MatrixLayoutDelegate: function MatrixLayoutDelegate(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.rows = t0;
      _.cols = t1;
      _.ruleThickness = t2;
      _.arrayskip = t3;
      _.rowSpacings = t4;
      _.hLines = t5;
      _.hskipBeforeAndAfter = t6;
      _.arraycolsep = t7;
      _.vLines = t8;
      _.columnAligns = t9;
      _.hLinePos = t10;
      _.vLinePos = t11;
      _.width = _.totalHeight = 0;
    },
    MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure: function MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.colPos = t1;
      _.colWidths = t2;
      _.childWidths = t3;
    },
    MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure: function MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure(t0, t1) {
      this.childrenBaselines = t0;
      this.childrenHeights = t1;
    },
    MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0: function MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0(t0, t1, t2) {
      this.$this = t0;
      this.rowBaselinePos = t1;
      this.childHeights = t2;
    },
    MultiscriptsNode$(base, sub, sup) {
      return new A.MultiscriptsNode(base, sub, sup);
    },
    MultiscriptsNode: function MultiscriptsNode(t0, t1, t2) {
      var _ = this;
      _.base = t0;
      _.sub = t1;
      _.sup = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    NaryOperatorNode: function NaryOperatorNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.operator = t0;
      _.lowerLimit = t1;
      _.upperLimit = t2;
      _.naryand = t3;
      _.limits = t4;
      _.allowLargeOp = t5;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    OverNode$(above, base, stackRel) {
      return new A.OverNode(base, above, stackRel);
    },
    OverNode: function OverNode(t0, t1, t2) {
      var _ = this;
      _.base = t0;
      _.above = t1;
      _.stackRel = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    PhantomNode: function PhantomNode(t0, t1, t2, t3) {
      var _ = this;
      _.phantomChild = t0;
      _.zeroWidth = t1;
      _.zeroHeight = t2;
      _.zeroDepth = t3;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    RaiseBoxNode: function RaiseBoxNode(t0, t1) {
      var _ = this;
      _.body = t0;
      _.dy = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    SpaceNode$(breakPenalty, fill, height, mode, shift, width) {
      return new A.SpaceNode(height, width, shift, breakPenalty, fill, mode, false);
    },
    SpaceNode$alignerOrSpacer() {
      return new A.SpaceNode(B.Measurement_0_Unit_0, B.Measurement_0_Unit_0, B.Measurement_0_Unit_0, null, true, B.Mode_0, true);
    },
    SpaceNode: function SpaceNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.height = t0;
      _.width = t1;
      _.shift = t2;
      _.breakPenalty = t3;
      _.fill = t4;
      _.mode = t5;
      _.alignerOrSpacer = t6;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    getSqrtAdvanceWidth(minDelimiterHeight, baseWidth, options) {
      var delimOptions,
        delimConf = A.IterableExtension_firstWhereOrNull(B.List_VB3, new A.getSqrtAdvanceWidth_closure(options, minDelimiterHeight), type$.DelimiterConf);
      if (delimConf != null) {
        delimOptions = options.havingStyle$1(delimConf.style);
        if (delimConf.font.get$fontName() === "Main-Regular")
          return new A.Measurement(0.833, B.Unit_16).toLpUnder$1(delimOptions);
        else
          return new A.Measurement(1, B.Unit_16).toLpUnder$1(delimOptions);
      } else
        return new A.Measurement(1.056, B.Unit_16).toLpUnder$1(options);
    },
    sqrtSvg(baseWidth, minDelimiterHeight, options) {
      var t1, t2, delimOptions, viewPortHeight, t3, t4, viewPortWidth, svgPath, t5, viewBoxHeight,
        delimConf = A.IterableExtension_firstWhereOrNull(B.List_VB3, new A.sqrtSvg_closure(options, minDelimiterHeight), type$.DelimiterConf);
      if (delimConf != null) {
        t1 = delimConf.font;
        t2 = B.Map_9JvRE.$index(0, t1.get$fontName());
        t2.toString;
        delimOptions = options.havingStyle$1(delimConf.style);
        viewPortHeight = new A.Measurement(t2 + 0 + 0.08, B.Unit_16).toLpUnder$1(delimOptions);
        t3 = delimOptions.fontSize;
        t4 = options.color;
        if (t1.get$fontName() === "Main-Regular") {
          viewPortWidth = new A.Measurement(0.833, B.Unit_16).toLpUnder$1(delimOptions) + baseWidth;
          t1 = new A.Measurement(viewPortWidth, B.Unit_15).toLpUnder$1(delimOptions);
          svgPath = A.sqrtPath("sqrtMain", 0, 1080);
          t2 = new A.Measurement(options.get$fontMetrics().sqrtRuleThickness + 0, B.Unit_16).toLpUnder$1(delimOptions);
          t5 = new A.Measurement(0.08, B.Unit_16).toLpUnder$1(delimOptions);
          return new A.ResetBaseline(t2, A.MinDimension$(0, A.svgWidgetFromPath(svgPath, new C.Size(viewPortWidth, viewPortHeight), new C.Rect(0, 0, 0 + t1 / t3 * 1000, 1080), t4, D.Alignment_m1_m1, D.BoxFit_0), 0, 0, -t5), null);
        } else {
          viewPortWidth = Math.max(new A.Measurement(1, B.Unit_16).toLpUnder$1(delimOptions) + baseWidth, new A.Measurement(1.02, B.Unit_16).toLpUnder$1(delimOptions) / t3);
          viewBoxHeight = 1080 * t2;
          t2 = new A.Measurement(viewPortWidth, B.Unit_15).toLpUnder$1(delimOptions);
          svgPath = A.sqrtPath("sqrt" + D.JSString_methods.substring$2(t1.get$fontName(), 0, 5), 0, viewBoxHeight);
          t1 = new A.Measurement(options.get$fontMetrics().sqrtRuleThickness + 0, B.Unit_16).toLpUnder$1(delimOptions);
          t5 = new A.Measurement(0.08, B.Unit_16).toLpUnder$1(delimOptions);
          return new A.ResetBaseline(t1, A.MinDimension$(0, A.svgWidgetFromPath(svgPath, new C.Size(viewPortWidth, viewPortHeight), new C.Rect(0, 0, 0 + t2 / t3 * 1000, 0 + viewBoxHeight), t4, D.Alignment_m1_m1, D.BoxFit_2), 0, 0, -t5), null);
        }
      } else {
        t1 = new A.Measurement(0.08, B.Unit_16).toLpUnder$1(options);
        t2 = options.fontSize;
        viewBoxHeight = 1000 * (new A.Measurement(minDelimiterHeight, B.Unit_15).toLpUnder$1(options) / t2) + 0 + 80;
        viewPortWidth = new A.Measurement(1.056, B.Unit_16).toLpUnder$1(options) + baseWidth;
        t3 = new A.Measurement(viewPortWidth, B.Unit_15).toLpUnder$1(options);
        svgPath = A.sqrtPath("sqrtTall", 0, viewBoxHeight);
        t4 = new A.Measurement(options.get$fontMetrics().sqrtRuleThickness + 0, B.Unit_16).toLpUnder$1(options);
        t5 = new A.Measurement(0.08, B.Unit_16).toLpUnder$1(options);
        return new A.ResetBaseline(t4, A.MinDimension$(0, A.svgWidgetFromPath(svgPath, new C.Size(viewPortWidth, minDelimiterHeight + t1), new C.Rect(0, 0, 0 + t3 / t2 * 1000, 0 + viewBoxHeight), options.color, D.Alignment_m1_m1, D.BoxFit_2), 0, 0, -t5), null);
      }
    },
    SqrtNode: function SqrtNode(t0, t1) {
      var _ = this;
      _.index = t0;
      _.base = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    SqrtNode_buildWidget_closure: function SqrtNode_buildWidget_closure(t0) {
      this.options = t0;
    },
    _SqrtPos: function _SqrtPos(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SqrtLayoutDelegate: function SqrtLayoutDelegate(t0, t1) {
      this.options = t0;
      this.baseOptions = t1;
      this.heightAboveBaseline = 0;
    },
    getSqrtAdvanceWidth_closure: function getSqrtAdvanceWidth_closure(t0, t1) {
      this.options = t0;
      this.minDelimiterHeight = t1;
    },
    sqrtSvg_closure: function sqrtSvg_closure(t0, t1) {
      this.options = t0;
      this.minDelimiterHeight = t1;
    },
    StretchyOpNode: function StretchyOpNode(t0, t1, t2) {
      var _ = this;
      _.symbol = t0;
      _.above = t1;
      _.below = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    StretchyOpNode_buildWidget_closure0: function StretchyOpNode_buildWidget_closure0(t0) {
      this.options = t0;
    },
    StretchyOpNode_buildWidget_closure: function StretchyOpNode_buildWidget_closure(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    StyleNode$(children, optionsDiff) {
      return new A.StyleNode(children, optionsDiff);
    },
    StyleNode: function StyleNode(t0, t1) {
      var _ = this;
      _.children = t0;
      _.optionsDiff = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__TransparentNode_rightType_FI = _.__TransparentNode_leftType_FI = _.__TransparentNode_flattenedChildList_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    StyleNode_toJson_closure: function StyleNode_toJson_closure() {
    },
    SymbolNode$(mode, overrideAtomType, overrideFont, symbol, variantForm) {
      C.assertHelper(symbol.length !== 0);
      return new A.SymbolNode(symbol, variantForm, overrideAtomType, overrideFont, mode);
    },
    stringToNode(string, mode) {
      var t1 = type$.MappedListIterable_String_SymbolNode;
      return A.EquationRowNode$(C.List_List$of(new C.MappedListIterable(C._setArrayType(string.split(""), type$.JSArray_String), type$.SymbolNode_Function_String._as(new A.stringToNode_closure(mode)), t1), false, t1._eval$1("ListIterable.E")), null);
    },
    getDefaultAtomTypeForSymbol(symbol, mode, variantForm) {
      var t1, renderConfig,
        symbolRenderConfig = B.Map_LoF1O.$index(0, symbol);
      if (variantForm)
        symbolRenderConfig = symbolRenderConfig == null ? null : symbolRenderConfig.variantForm;
      t1 = mode === B.Mode_0;
      if (t1)
        renderConfig = symbolRenderConfig == null ? null : symbolRenderConfig.math;
      else
        renderConfig = symbolRenderConfig == null ? null : symbolRenderConfig.text;
      if (renderConfig != null) {
        t1 = renderConfig.defaultType;
        return t1 == null ? B.AtomType_0 : t1;
      }
      if (!variantForm && t1) {
        if (B.Map_W7r5a.containsKey$1(0, symbol))
          return B.AtomType_3;
        if (B.Map_uUUqS.containsKey$1(0, symbol)) {
          t1 = $.compactedCompositeSymbolTypes.$index(0, symbol);
          t1.toString;
          return t1;
        }
        if (B.Set_Vj9Rm.contains$1(0, symbol))
          return B.AtomType_3;
      }
      return B.AtomType_0;
    },
    SymbolNode: function SymbolNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.symbol = t0;
      _.variantForm = t1;
      _.__SymbolNode_atomType_FI = $;
      _.overrideAtomType = t2;
      _.overrideFont = t3;
      _.mode = t4;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    SymbolNode_buildWidget_closure: function SymbolNode_buildWidget_closure() {
    },
    stringToNode_closure: function stringToNode_closure(t0) {
      this.mode = t0;
    },
    UnderNode$(base, below) {
      return new A.UnderNode(base, below);
    },
    UnderNode: function UnderNode(t0, t1) {
      var _ = this;
      _.base = t0;
      _.below = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    MathOptions$_(color, fontSize, logicalPpi, mathFontOptions, sizeUnderTextStyle, style, textFontOptions) {
      return new A.MathOptions(style, color, sizeUnderTextStyle, textFontOptions, mathFontOptions, fontSize, logicalPpi);
    },
    MathOptions_MathOptions(color, fontSize, logicalPpi, mathFontOptions, sizeUnderTextStyle, style, textFontOptions) {
      var effectiveFontSize;
      if (fontSize == null)
        effectiveFontSize = 22.139200221392002;
      else
        effectiveFontSize = fontSize;
      return A.MathOptions$_(color, effectiveFontSize, effectiveFontSize * 72.27 / 10, mathFontOptions, sizeUnderTextStyle, style, textFontOptions);
    },
    MathOptions: function MathOptions(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.style = t0;
      _.color = t1;
      _.__MathOptions_size_FI = $;
      _.sizeUnderTextStyle = t2;
      _.textFontOptions = t3;
      _.mathFontOptions = t4;
      _.__MathOptions_fontMetrics_FI = _.__MathOptions_sizeMultiplier_FI = $;
      _.fontSize = t5;
      _.logicalPpi = t6;
    },
    OptionsDiff: function OptionsDiff(t0, t1, t2, t3, t4) {
      var _ = this;
      _.style = t0;
      _.size = t1;
      _.color = t2;
      _.textFontOptions = t3;
      _.mathFontOptions = t4;
    },
    FontOptions: function FontOptions(t0, t1, t2, t3) {
      var _ = this;
      _.fontFamily = t0;
      _.fontWeight = t1;
      _.fontShape = t2;
      _.fallback = t3;
    },
    PartialFontOptions: function PartialFontOptions(t0, t1, t2) {
      this.fontFamily = t0;
      this.fontWeight = t1;
      this.fontShape = t2;
    },
    MeasurementExtOnNum_get_mu(_this) {
      return new A.Measurement(_this, B.Unit_14);
    },
    Unit: function Unit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Measurement: function Measurement(t0, t1) {
      this.value = t0;
      this.unit = t1;
    },
    MathSize: function MathSize(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MathStyleExt_reduce(_this, diff) {
      var t2,
        t1 = diff.index;
      if (!(t1 < 7))
        return C.ioore(B.List_9iU, t1);
      t1 = B.List_9iU[t1];
      t2 = _this.index;
      if (!(t2 < 8))
        return C.ioore(t1, t2);
      t2 = t1[t2];
      if (!(t2 < 8))
        return C.ioore(B.List_c06, t2);
      t2 = B.List_c06[t2];
      return t2;
    },
    MathStyleExtOnSize_underStyle(_this, style) {
      var t2,
        t1 = style.index;
      if (t1 <= 3)
        return _this;
      t2 = _this.index;
      if (!(t2 < 11))
        return C.ioore(B.List_VdS, t2);
      t2 = B.List_VdS[t2];
      t1 = (t1 / 2 | 0) - 1;
      if (!(t1 >= 0 && t1 < 3))
        return C.ioore(t2, t1);
      t1 = t2[t1] - 1;
      if (!(t1 >= 0 && t1 < 11))
        return C.ioore(B.List_1HU, t1);
      return B.List_1HU[t1];
    },
    MathStyle: function MathStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MathStyleDiff: function MathStyleDiff(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SymbolRenderConfig: function SymbolRenderConfig(t0, t1, t2) {
      this.math = t0;
      this.text = t1;
      this.variantForm = t2;
    },
    RenderConfig: function RenderConfig(t0, t1, t2) {
      this.replaceChar = t0;
      this.defaultFont = t1;
      this.defaultType = t2;
    },
    SyntaxNode$($parent, pos, value) {
      return new A.SyntaxNode($parent, value, pos);
    },
    EquationRowNode$(children, overrideType) {
      return new A.EquationRowNode(overrideType, children, B.TextRange_0_m1);
    },
    GreenNodeWrappingExt_wrapWithEquationRow(_this) {
      if (_this instanceof A.EquationRowNode)
        return _this;
      return A.EquationRowNode$(C._setArrayType([_this], type$.JSArray_GreenNode), null);
    },
    GreenNodeWrappingExt_expandEquationRow(_this) {
      if (_this instanceof A.EquationRowNode)
        return _this.children;
      return C._setArrayType([_this], type$.JSArray_GreenNode);
    },
    GreenNodeListWrappingExt_wrapWithEquationRow(_this) {
      var t1 = J.getInterceptor$asx(_this);
      if (t1.get$length(_this) === 1 && t1.$index(_this, 0) instanceof A.EquationRowNode)
        return type$.EquationRowNode._as(t1.$index(_this, 0));
      return A.EquationRowNode$(_this, null);
    },
    _traverseNonSpaceNodes(childTypeList, callback) {
      var t1, prev, _i, child;
      for (t1 = childTypeList.length, prev = null, _i = 0; _i < t1; ++_i) {
        child = childTypeList[_i];
        if (child.leftType === B.AtomType_8 || child.rightType === B.AtomType_8)
          continue;
        callback.call$2(prev, child);
        prev = child;
      }
      if (prev != null)
        callback.call$2(prev, null);
    },
    SyntaxTree: function SyntaxTree(t0) {
      this.greenRoot = t0;
      this.__SyntaxTree_root_FI = $;
    },
    SyntaxNode: function SyntaxNode(t0, t1, t2) {
      var _ = this;
      _.parent = t0;
      _.value = t1;
      _.pos = t2;
      _.__SyntaxNode_children_FI = $;
    },
    GreenNode: function GreenNode() {
    },
    ParentableNode: function ParentableNode() {
    },
    PositionDependentMixin: function PositionDependentMixin() {
    },
    SlotableNode: function SlotableNode() {
    },
    SlotableNode_computeWidth_closure: function SlotableNode_computeWidth_closure(t0) {
      this.$this = t0;
    },
    TransparentNode: function TransparentNode() {
    },
    TransparentNode_computeWidth_closure: function TransparentNode_computeWidth_closure() {
    },
    TransparentNode_computeChildPositions_closure: function TransparentNode_computeChildPositions_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TransparentNode_buildWidget_closure: function TransparentNode_buildWidget_closure() {
    },
    TransparentNode_flattenedChildList_closure: function TransparentNode_flattenedChildList_closure() {
    },
    EquationRowNode: function EquationRowNode(t0, t1, t2) {
      var _ = this;
      _.overrideType = t0;
      _.children = t1;
      _._syntax_tree$_key = null;
      _.__EquationRowNode_caretPositions_FI = _.__EquationRowNode_flattenedChildList_FI = $;
      _.PositionDependentMixin_range = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    EquationRowNode_computeWidth_closure: function EquationRowNode_computeWidth_closure() {
    },
    EquationRowNode_computeChildPositions_closure: function EquationRowNode_computeChildPositions_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    EquationRowNode_flattenedChildList_closure: function EquationRowNode_flattenedChildList_closure() {
    },
    EquationRowNode_computeCaretPositions_closure: function EquationRowNode_computeCaretPositions_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    EquationRowNode_buildWidget_closure: function EquationRowNode_buildWidget_closure() {
    },
    EquationRowNode_buildWidget_closure0: function EquationRowNode_buildWidget_closure0() {
    },
    EquationRowNode_buildWidget_closure1: function EquationRowNode_buildWidget_closure1(t0, t1) {
      this.$this = t0;
      this.flattenedChildOptions = t1;
    },
    EquationRowNode_buildWidget_closure2: function EquationRowNode_buildWidget_closure2() {
    },
    EquationRowNode_buildWidget_closure3: function EquationRowNode_buildWidget_closure3() {
    },
    EquationRowNode_buildWidget_closure4: function EquationRowNode_buildWidget_closure4(t0, t1, t2) {
      this.$this = t0;
      this.lineChildren = t1;
      this.options = t2;
    },
    EquationRowNode_buildWidget__closure1: function EquationRowNode_buildWidget__closure1() {
    },
    EquationRowNode_buildWidget__closure2: function EquationRowNode_buildWidget__closure2(t0) {
      this.$this = t0;
    },
    EquationRowNode_buildWidget__closure0: function EquationRowNode_buildWidget__closure0(t0) {
      this.$this = t0;
    },
    EquationRowNode_buildWidget__closure: function EquationRowNode_buildWidget__closure(t0, t1, t2) {
      this.$this = t0;
      this.lineChildren = t1;
      this.options = t2;
    },
    EquationRowNode_toJson_closure: function EquationRowNode_toJson_closure() {
    },
    _ClipChildrenMixin: function _ClipChildrenMixin() {
    },
    LeafNode: function LeafNode() {
    },
    AtomType: function AtomType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TemporaryNode: function TemporaryNode() {
    },
    BuildResult: function BuildResult(t0, t1, t2, t3, t4) {
      var _ = this;
      _.widget = t0;
      _.options = t1;
      _.italic = t2;
      _.skew = t3;
      _.results = t4;
    },
    _NodeSpacingConf: function _NodeSpacingConf(t0, t1, t2, t3) {
      var _ = this;
      _.leftType = t0;
      _.rightType = t1;
      _.options = t2;
      _.spacingAfter = t3;
    },
    _EquationRowNode_ParentableNode_PositionDependentMixin: function _EquationRowNode_ParentableNode_PositionDependentMixin() {
    },
    _EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin: function _EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin() {
    },
    _TransparentNode_ParentableNode__ClipChildrenMixin: function _TransparentNode_ParentableNode__ClipChildrenMixin() {
    },
    Mode: function Mode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    getCharacterMetrics(character, fontName, mode) {
      var ch, t1, extraCh,
        metricsMapFont = B.Map_uvILB.$index(0, fontName);
      if (metricsMapFont == null)
        throw C.wrapException(C.Exception_Exception("Font metrics not found for font: " + fontName + "."));
      if (0 >= character.length)
        return C.ioore(character, 0);
      ch = character.charCodeAt(0);
      if (metricsMapFont.containsKey$1(0, ch))
        return metricsMapFont.$index(0, ch);
      t1 = B.Map_yfgyh.$index(0, character[0]);
      if (t1 == null)
        extraCh = null;
      else {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        extraCh = t1.charCodeAt(0);
      }
      if (extraCh != null)
        return metricsMapFont.$index(0, ch);
      if (mode === B.Mode_1 && A.supportedCodepoint(ch))
        return metricsMapFont.$index(0, 77);
      return null;
    },
    getGlobalMetrics(size) {
      switch (size.index) {
        case 0:
        case 1:
          return $.$get$scriptscriptFontMetrics();
        case 2:
        case 3:
          return $.$get$scriptFontMetrics();
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
          return $.$get$textFontMetrics();
        default:
          throw C.wrapException(C.ArgumentError$(size, null));
      }
    },
    textFontMetrics_closure: function textFontMetrics_closure() {
    },
    scriptFontMetrics_closure: function scriptFontMetrics_closure() {
    },
    scriptscriptFontMetrics_closure: function scriptscriptFontMetrics_closure() {
    },
    CharacterMetrics: function CharacterMetrics(t0, t1, t2, t3) {
      var _ = this;
      _.depth = t0;
      _.height = t1;
      _.italic = t2;
      _.skew = t3;
    },
    supportedCodepoint(codepoint) {
      return D.JSArray_methods.any$1($.$get$allBlocks(), new A.supportedCodepoint_closure(codepoint));
    },
    allBlocks_closure: function allBlocks_closure() {
    },
    supportedCodepoint_closure: function supportedCodepoint_closure(t0) {
      this.codepoint = t0;
    },
    environments() {
      if ($._environments.__js_helper$_length === 0)
        $.$get$_environmentsEntries().forEach$1(0, new A.environments_closure());
      return $._environments;
    },
    EnvContext: function EnvContext(t0) {
      this.envName = t0;
    },
    EnvSpec: function EnvSpec(t0) {
      this.handler = t0;
    },
    environments_closure: function environments_closure() {
    },
    _casesHandler(parser, context) {
      var body, t1, t2;
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      body = A.parseEqnArray(parser, false, new A._casesHandler_closure(context));
      t1 = context.envName;
      t1 = t1 === "rcases" || t1 === "drcases";
      t2 = type$.JSArray_EquationRowNode;
      if (t1)
        return A.LeftRightNode$(C._setArrayType([A.GreenNodeWrappingExt_wrapWithEquationRow(body)], t2), null, D.List_empty5, "}");
      else
        return A.LeftRightNode$(C._setArrayType([A.GreenNodeWrappingExt_wrapWithEquationRow(body)], t2), "{", D.List_empty5, null);
    },
    _alignedHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      return A.parseEqnArray(parser, true, new A._alignedHandler_closure());
    },
    _alignedAtHandler(parser, context) {
      var cols;
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      cols = C.Primitives_parseInt(J.map$1$1$ax(A.assertNodeType(parser.parseArgNode$2$mode$optional(null, false), type$.EquationRowNode).children, new A._alignedAtHandler_closure(), type$.String).join$1(0, ""), null);
      if (cols == null)
        throw C.wrapException(A.ParseException$("Invalid argument for environment: alignedat", null));
      return A.parseEqnArray(parser, true, new A._alignedAtHandler_closure0(cols));
    },
    parseEqnArray(parser, addJot, concatRow) {
      var stretch, arrayStretch, row, body, rowGaps, hLinesBeforeRow, t6, t7, cellBody, next, t8, rows, _null = null,
        t1 = parser.macroExpander,
        t2 = t1.macros,
        t3 = t2.undefStack,
        t4 = type$.String,
        t5 = t2.$ti._eval$1("1?");
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t2.$set$2(0, "\\\\", A.MacroDefinition$fromString("\\cr"));
      stretch = t1.expandMacroAsText$1("\\arraystretch");
      if (stretch == null)
        arrayStretch = 1;
      else {
        arrayStretch = C.Primitives_parseDouble(stretch);
        if (arrayStretch == null || arrayStretch < 0)
          throw C.wrapException(A.ParseException$("Invalid \\arraystretch: " + stretch, _null));
      }
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t1 = type$.JSArray_EquationRowNode;
      row = C._setArrayType([], t1);
      body = C._setArrayType([row], type$.JSArray_List_EquationRowNode);
      rowGaps = C._setArrayType([], type$.JSArray_Measurement);
      hLinesBeforeRow = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      t6 = type$.MatrixSeparatorStyle;
      t7 = A.IterableExtension_get_lastOrNull(A.getHLines(parser), t6);
      D.JSArray_methods.add$1(hLinesBeforeRow, t7 == null ? B.MatrixSeparatorStyle_2 : t7);
      for (t7 = type$.CrNode; true;) {
        cellBody = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, "\\cr");
        t2.endGroup$0();
        D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
        D.JSArray_methods.add$1(row, A.GreenNodeListWrappingExt_wrapWithEquationRow(cellBody));
        next = parser.fetch$0(0).text;
        if (next === "&")
          parser.nextToken = null;
        else if (next === "\\end") {
          if (hLinesBeforeRow.length < body.length + 1)
            D.JSArray_methods.add$1(hLinesBeforeRow, B.MatrixSeparatorStyle_2);
          break;
        } else if (next === "\\cr") {
          t8 = A.assertNodeType(parser.parseFunction$3(_null, _null, _null), t7).size;
          D.JSArray_methods.add$1(rowGaps, t8 == null ? B.Measurement_0_Unit_0 : t8);
          t8 = A.IterableExtension_get_lastOrNull(A.getHLines(parser), t6);
          D.JSArray_methods.add$1(hLinesBeforeRow, t8 == null ? B.MatrixSeparatorStyle_2 : t8);
          row = C._setArrayType([], t1);
          D.JSArray_methods.add$1(body, row);
        } else
          throw C.wrapException(A.ParseException$("Expected & or \\\\ or \\cr or \\end", parser.nextToken));
      }
      t2.endGroup$0();
      t2.endGroup$0();
      t1 = type$.MappedListIterable_of_List_EquationRowNode_and_EquationRowNode;
      rows = C.List_List$of(new C.MappedListIterable(body, type$.EquationRowNode_Function_List_EquationRowNode._as(concatRow), t1), true, t1._eval$1("ListIterable.E"));
      t1 = rows.length;
      t6 = A.ListExtension_extendToByFill(hLinesBeforeRow, t1 + 1, B.MatrixSeparatorStyle_2, t6);
      return new A.EquationArrayNode(arrayStretch, addJot, rows, t6, A.ListExtension_extendToByFill(rowGaps, t1, B.Measurement_0_Unit_0, type$.Measurement));
    },
    _casesHandler_closure: function _casesHandler_closure(t0) {
      this.context = t0;
    },
    _alignedHandler_closure: function _alignedHandler_closure() {
    },
    _alignedHandler__closure: function _alignedHandler__closure() {
    },
    _alignedAtHandler_closure: function _alignedAtHandler_closure() {
    },
    _alignedAtHandler_closure0: function _alignedAtHandler_closure0(t0) {
      this.cols = t0;
    },
    _alignedAtHandler__closure: function _alignedAtHandler__closure() {
    },
    RegisterFunctionExt_registerFunctions(_this, entries) {
      entries.forEach$1(0, new A.RegisterFunctionExt_registerFunctions_closure(_this));
    },
    FunctionContext: function FunctionContext(t0, t1, t2) {
      this.funcName = t0;
      this.breakOnTokenText = t1;
      this.infixExistingArguments = t2;
    },
    FunctionSpec: function FunctionSpec(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.greediness = t0;
      _.allowedInText = t1;
      _.allowedInMath = t2;
      _.infix = t3;
      _.handler = t4;
      _.$ti = t5;
    },
    RegisterFunctionExt_registerFunctions_closure: function RegisterFunctionExt_registerFunctions_closure(t0) {
      this._this = t0;
    },
    _accentHandler(parser, context) {
      var t1, t2, isStretchy, isShifty;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      t2 = context.funcName;
      isStretchy = !B.Set_H6XGa.contains$1(0, t2);
      isShifty = !isStretchy || B.Set_hM5f1.contains$1(0, t2);
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = B.Map_mBRlU.$index(0, t2);
      t2.toString;
      return A.AccentNode$(t1, isShifty, isStretchy, t2);
    },
    _textAccentHandler(parser, context) {
      var t1, t2, node;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      if (t1 instanceof A.SymbolNode) {
        t2 = B.Map_qW5F6.$index(0, context.funcName);
        t2.toString;
        return t1.withSymbol$1(t1.symbol + t2);
      }
      if (t1 instanceof A.EquationRowNode && J.get$length$asx(t1.children) === 1) {
        node = J.$index$asx(t1.children, 0);
        if (node instanceof A.SymbolNode) {
          t1 = B.Map_qW5F6.$index(0, context.funcName);
          t1.toString;
          return node.withSymbol$1(node.symbol + t1);
        }
      }
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = B.Map_mBRlU.$index(0, context.funcName);
      t2.toString;
      return A.AccentNode$(t1, true, false, t2);
    },
    _accentUnderHandler(parser, context) {
      var t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = B.Map_ROG3o.$index(0, context.funcName);
      t2.toString;
      return A.AccentUnderNode$(t1, t2);
    },
    _throwExceptionHandler(parser, context) {
      type$.TexParser._as(parser);
      throw C.wrapException(A.ParseException$(type$.FunctionContext._as(context).funcName + " valid only within array environment", null));
    },
    _arrowHandler(parser, context) {
      var below, t1, t2, t3, t4;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      below = parser.parseArgNode$2$mode$optional(null, true);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = below == null ? null : A.GreenNodeWrappingExt_wrapWithEquationRow(below);
      t3 = context.funcName;
      t4 = B.Map_i9JgH.$index(0, t3);
      t3 = t4 == null ? t3 : t4;
      return new A.StretchyOpNode(t3, t1, t2);
    },
    _breakHandler(parser, context) {
      var t1;
      type$.TexParser._as(parser);
      t1 = type$.FunctionContext._as(context).funcName === "\\nobreak" ? 10000 : 0;
      return A.SpaceNode$(t1, false, B.Measurement_0_Unit_0, parser.mode, B.Measurement_0_Unit_0, B.Measurement_0_Unit_0);
    },
    _charHandler(parser, context) {
      var number, code, t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      number = J.map$1$1$ax(A.assertNodeType(parser.parseArgNode$2$mode$optional(_null, false), type$.EquationRowNode).children, new A._charHandler_closure(), type$.String).join$1(0, "");
      code = C.Primitives_parseInt(number, _null);
      if (code == null)
        throw C.wrapException(A.ParseException$("\\@char has non-numeric argument " + number, _null));
      t1 = C.Primitives_stringFromCharCode(code);
      return A.SymbolNode$(parser.mode, B.AtomType_0, _null, t1, false);
    },
    _textcolorHandler(parser, context) {
      var t1, t2, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgColor$1$optional(false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(_null, false);
      t2.toString;
      return A.StyleNode$(A.GreenNodeWrappingExt_expandEquationRow(t2), new A.OptionsDiff(_null, _null, t1, _null, _null));
    },
    _colorHandler(parser, context) {
      var color, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      color = parser.parseArgColor$1$optional(false);
      return A.StyleNode$(parser.parseExpression$2$breakOnInfix$breakOnTokenText(true, context.breakOnTokenText), new A.OptionsDiff(_null, _null, color, _null, _null));
    },
    _crHandler(parser, context) {
      var size;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      size = parser.parseArgSize$1$optional(true);
      return new A.CrNode(size);
    },
    _checkDelimiter(delim, context) {
      var t1;
      if (delim instanceof A.SymbolNode)
        if (D.JSArray_methods.any$1($.$get$_delimiterSymbols(), new A._checkDelimiter_closure(delim))) {
          t1 = delim.symbol;
          if (t1 === "<" || t1 === "lt")
            return "\u27e8";
          else if (t1 === ">" || t1 === "gt")
            return "\u27e9";
          else if (t1 === ".")
            return null;
          else
            return t1;
        } else
          throw C.wrapException(A.ParseException$("Invalid delimiter '" + delim.symbol + "' after '" + context.funcName + "'", null));
      else
        throw C.wrapException(A.ParseException$("Invalid delimiter type '" + C.getRuntimeTypeOfDartObject(delim).toString$0(0) + "'", null));
    },
    _delimSizeHandler(parser, context) {
      var t1, delim;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      delim = A._checkDelimiter(t1, context);
      if (delim == null)
        t1 = A.SpaceNode$(null, false, B.Measurement_0_Unit_0, B.Mode_0, B.Measurement_0_Unit_0, B.Measurement_0_Unit_0);
      else {
        t1 = context.funcName;
        t1 = A.SymbolNode$(B.Mode_0, B.Map_PP6Nv.$index(0, t1), new A.FontOptions("Size" + C.S(B.Map_PPymm.$index(0, t1)), D.FontWeight_3_400, D.FontStyle_0, B.List_empty21), delim, false);
      }
      return t1;
    },
    _rightHandler(parser, context) {
      var t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      return new A._LeftRightRightNode(A._checkDelimiter(t1, context));
    },
    _leftHandler(parser, context) {
      var t1, delim, body, right, splittedBody, middles, t2, _i, element, t3, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      delim = A._checkDelimiter(t1, context);
      ++parser.leftrightDepth;
      body = parser.parseExpression$1$breakOnInfix(false);
      --parser.leftrightDepth;
      parser.expect$2$consume("\\right", false);
      right = A.assertNodeType(parser.parseFunction$3(_null, _null, _null), type$._LeftRightRightNode);
      t1 = type$.JSArray_GreenNode;
      splittedBody = C._setArrayType([C._setArrayType([], t1)], type$.JSArray_List_GreenNode);
      middles = C._setArrayType([], type$.JSArray_nullable_String);
      for (t2 = body.length, _i = 0; _i < body.length; body.length === t2 || (0, C.throwConcurrentModificationError)(body), ++_i) {
        element = body[_i];
        if (element instanceof A._MiddleNode) {
          D.JSArray_methods.add$1(splittedBody, C._setArrayType([], t1));
          t3 = element.delim;
          D.JSArray_methods.add$1(middles, t3 === "." ? _null : t3);
        } else
          D.JSArray_methods.add$1(D.JSArray_methods.get$last(splittedBody), element);
      }
      t1 = delim === "." ? _null : delim;
      t2 = right.delim;
      if (t2 === ".")
        t2 = _null;
      t3 = type$.MappedListIterable_of_List_GreenNode_and_EquationRowNode;
      return A.LeftRightNode$(C.List_List$of(new C.MappedListIterable(splittedBody, type$.EquationRowNode_Function_List_GreenNode._as(new A._leftHandler_closure()), t3), false, t3._eval$1("ListIterable.E")), t1, middles, t2);
    },
    _middleHandler(parser, context) {
      var t1, delim, contexts, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      delim = A._checkDelimiter(t1, context);
      if (parser.leftrightDepth <= 0)
        throw C.wrapException(A.ParseException$("\\middle without preceding \\left", null));
      contexts = parser.argParsingContexts.toList$1$growable(0, false);
      t1 = contexts.length;
      t2 = t1 - 2;
      if (!(t2 >= 0))
        return C.ioore(contexts, t2);
      if (contexts[t2].funcName !== "\\left")
        throw C.wrapException(A.ParseException$("\\middle must be within \\left and \\right", null));
      return new A._MiddleNode(delim);
    },
    _colorboxHandler(parser, context) {
      var color, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      color = parser.parseArgColor$1$optional(false);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_1, false);
      t1.toString;
      return A.EnclosureNode$(color, A.GreenNodeWrappingExt_wrapWithEquationRow(t1), null, false, new A.Measurement(0.3, B.Unit_16), D.List_empty, new A.Measurement(0.3, B.Unit_16));
    },
    _fcolorboxHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgColor$1$optional(false);
      t1.toString;
      t2 = parser.parseArgColor$1$optional(false);
      t2.toString;
      t3 = parser.parseArgNode$2$mode$optional(B.Mode_1, false);
      t3.toString;
      return A.EnclosureNode$(t2, A.GreenNodeWrappingExt_wrapWithEquationRow(t3), t1, true, new A.Measurement(0.3, B.Unit_16), D.List_empty, new A.Measurement(0.3, B.Unit_16));
    },
    _fboxHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return A.EnclosureNode$(null, A.GreenNodeWrappingExt_wrapWithEquationRow(parser.parseArgHbox$1$optional(false)), null, true, new A.Measurement(0.3, B.Unit_16), D.List_empty, new A.Measurement(0.3, B.Unit_16));
    },
    _cancelHandler(parser, context) {
      var t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = B.Map_MxbnW.$index(0, context.funcName);
      t2.toString;
      return A.EnclosureNode$(null, A.GreenNodeWrappingExt_wrapWithEquationRow(t1), null, false, new A.Measurement(0.2, B.Unit_16), t2, new A.Measurement(0.2, B.Unit_16));
    },
    _enviromentHandler(parser, context) {
      var nameGroup, envName, result, endNameToken, t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      nameGroup = parser.parseArgNode$2$mode$optional(B.Mode_1, false);
      if (J.any$1$ax(nameGroup.get$children(nameGroup), new A._enviromentHandler_closure()))
        throw C.wrapException(A.ParseException$("Invalid environment name", _null));
      envName = J.map$1$1$ax(nameGroup.get$children(nameGroup), new A._enviromentHandler_closure0(), type$.String).join$0(0);
      if (context.funcName === "\\begin") {
        if (!A.environments().containsKey$1(0, envName))
          throw C.wrapException(A.ParseException$("No such environment: " + envName, _null));
        result = A.environments().$index(0, envName).handler.call$2(parser, new A.EnvContext(envName));
        parser.expect$2$consume("\\end", false);
        endNameToken = parser.nextToken;
        t1 = A.assertNodeType(parser.parseFunction$3(_null, _null, _null), type$._EndEnvironmentNode).name;
        if (t1 !== envName)
          throw C.wrapException(A.ParseException$("Mismatch: \\begin{" + envName + "} matched by \\end{" + t1 + "}", endNameToken));
        return result;
      } else
        return new A._EndEnvironmentNode(envName);
    },
    _fontHandler(parser, context) {
      var t1, func, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(_null, false);
      t1.toString;
      func = context.funcName;
      if (B.Map_qsqNW.containsKey$1(0, func))
        func = B.Map_qsqNW.$index(0, func);
      return A.StyleNode$(A.GreenNodeWrappingExt_expandEquationRow(t1), new A.OptionsDiff(_null, _null, _null, _null, B.Map_0eiXF.$index(0, func)));
    },
    _boldSymbolHandler(parser, context) {
      var t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(_null, false);
      t1.toString;
      return A.StyleNode$(A.GreenNodeWrappingExt_expandEquationRow(t1), new A.OptionsDiff(_null, _null, _null, _null, B.FontOptions_OsF));
    },
    _textFontHandler(parser, context) {
      var _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return A.StyleNode$(parser.parseExpression$2$breakOnInfix$breakOnTokenText(true, context.breakOnTokenText), new A.OptionsDiff(_null, _null, _null, _null, B.Map_0eiXF.$index(0, "\\math" + D.JSString_methods.substring$1(context.funcName, 1))));
    },
    _fracHandler(parser, context) {
      var t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(null, false);
      t2.toString;
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      return A._internalFracHandler(A.GreenNodeWrappingExt_wrapWithEquationRow(t2), context.funcName, t1);
    },
    _internalFracHandler(denom, funcName, numer) {
      var size, t1, res, _null = null,
        hasBarLine = false,
        leftDelim = _null,
        rightDelim = _null;
      switch (funcName) {
        case "\\cfrac":
        case "\\dfrac":
        case "\\frac":
        case "\\tfrac":
          hasBarLine = true;
          break;
        case "\\\\atopfrac":
          break;
        case "\\dbinom":
        case "\\binom":
        case "\\tbinom":
          leftDelim = "(";
          rightDelim = ")";
          break;
        case "\\\\bracefrac":
          leftDelim = "{";
          rightDelim = "}";
          break;
        case "\\\\brackfrac":
          leftDelim = "[";
          rightDelim = "]";
          break;
        default:
          throw C.wrapException(A.ParseException$("Unrecognized genfrac command", _null));
      }
      switch (funcName) {
        case "\\cfrac":
        case "\\dfrac":
        case "\\dbinom":
          size = B.MathStyle_0;
          break;
        case "\\tfrac":
        case "\\tbinom":
          size = B.MathStyle_2;
          break;
        default:
          size = _null;
      }
      t1 = hasBarLine ? _null : B.Measurement_0_Unit_0;
      res = A.FracNode$(t1, funcName === "\\cfrac", denom, numer);
      if (leftDelim != null || rightDelim != null)
        res = A.LeftRightNode$(C._setArrayType([A.GreenNodeWrappingExt_wrapWithEquationRow(res)], type$.JSArray_EquationRowNode), leftDelim, D.List_empty5, rightDelim);
      return size != null ? A.StyleNode$(C._setArrayType([res], type$.JSArray_GreenNode), new A.OptionsDiff(size, _null, _null, _null, _null)) : res;
    },
    _overHandler(parser, context) {
      var replaceWith, denomBody, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      switch (context.funcName) {
        case "\\over":
          replaceWith = "\\frac";
          break;
        case "\\choose":
          replaceWith = "\\binom";
          break;
        case "\\atop":
          replaceWith = "\\\\atopfrac";
          break;
        case "\\brace":
          replaceWith = "\\\\bracefrac";
          break;
        case "\\brack":
          replaceWith = "\\\\brackfrac";
          break;
        default:
          throw C.wrapException(C.ArgumentError$("Unrecognized infix genfrac command", null));
      }
      denomBody = parser.parseExpression$2$breakOnTokenText$infixArgumentMode(context.breakOnTokenText, true);
      t1 = A.GreenNodeListWrappingExt_wrapWithEquationRow(context.infixExistingArguments);
      return A._internalFracHandler(A.GreenNodeListWrappingExt_wrapWithEquationRow(denomBody), replaceWith, t1);
    },
    _genfracHandler(parser, context) {
      var t1, t2, t3, t4, t5, t6, t7, leftDelimNode, rightDelimNode, leftDelim, rightDelim, style, res, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t2.toString;
      t3 = parser.parseArgSize$1$optional(false);
      t3.toString;
      t4 = parser.parseArgNode$2$mode$optional(B.Mode_1, false);
      t4.toString;
      t5 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t5.toString;
      t6 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t6.toString;
      if (t1 instanceof A.EquationRowNode) {
        t1 = t1.children;
        t7 = J.getInterceptor$asx(t1);
        leftDelimNode = t7.get$length(t1) === 1 ? t7.get$first(t1) : _null;
      } else
        leftDelimNode = t1;
      if (t2 instanceof A.EquationRowNode) {
        t1 = t2.children;
        t2 = J.getInterceptor$asx(t1);
        rightDelimNode = t2.get$length(t1) === 1 ? t2.get$first(t1) : _null;
      } else
        rightDelimNode = t2;
      leftDelim = leftDelimNode instanceof A.SymbolNode && leftDelimNode.get$atomType() === B.AtomType_4 ? leftDelimNode.symbol : _null;
      rightDelim = rightDelimNode instanceof A.SymbolNode && rightDelimNode.get$atomType() === B.AtomType_5 ? rightDelimNode.symbol : _null;
      style = J.get$isNotEmpty$asx(A.GreenNodeWrappingExt_expandEquationRow(t4)) ? C.Primitives_parseInt(A.assertNodeType(J.$index$asx(A.GreenNodeWrappingExt_expandEquationRow(t4), 0), type$.SymbolNode).symbol, _null) : _null;
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t5);
      res = A.FracNode$(t3, false, A.GreenNodeWrappingExt_wrapWithEquationRow(t6), t1);
      if (leftDelim != null || rightDelim != null)
        res = A.LeftRightNode$(C._setArrayType([A.GreenNodeWrappingExt_wrapWithEquationRow(res)], type$.JSArray_EquationRowNode), leftDelim, D.List_empty5, rightDelim);
      if (style != null) {
        t1 = C._setArrayType([res], type$.JSArray_GreenNode);
        t2 = D.JSNumber_methods.toInt$0(D.JSInt_methods.clamp$2(style * 2, 0, 6));
        if (!(t2 >= 0 && t2 < 8))
          return C.ioore(B.List_c06, t2);
        res = A.StyleNode$(t1, new A.OptionsDiff(B.List_c06[t2], _null, _null, _null, _null));
      }
      return res;
    },
    _aboveHandler(parser, context) {
      var barSize, denomBody, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      barSize = parser.parseArgSize$1$optional(false);
      denomBody = parser.parseExpression$2$breakOnTokenText$infixArgumentMode(context.breakOnTokenText, true);
      t1 = A.GreenNodeListWrappingExt_wrapWithEquationRow(context.infixExistingArguments);
      return A.FracNode$(barSize, false, A.GreenNodeListWrappingExt_wrapWithEquationRow(denomBody), t1);
    },
    _aboveFracHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t1.toString;
      t2 = parser.parseArgSize$1$optional(false);
      t2.toString;
      t3 = parser.parseArgNode$2$mode$optional(B.Mode_0, false);
      t3.toString;
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      return A.FracNode$(t2, false, A.GreenNodeWrappingExt_wrapWithEquationRow(t3), t1);
    },
    _horizBraceHandler(parser, context) {
      var t1, scripts, res;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      scripts = parser.parseScripts$0();
      if (context.funcName === "\\overbrace") {
        res = A.AccentNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(t1), false, true, "\u23de");
        t1 = scripts.superscript;
        if (t1 != null)
          res = A.OverNode$(t1, A.GreenNodeWrappingExt_wrapWithEquationRow(res), false);
        t1 = scripts.subscript;
        return t1 != null ? A.UnderNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(res), t1) : res;
      } else {
        res = A.AccentUnderNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(t1), "\u23df");
        t1 = scripts.subscript;
        if (t1 != null)
          res = A.UnderNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(res), t1);
        t1 = scripts.superscript;
        return t1 != null ? A.OverNode$(t1, A.GreenNodeWrappingExt_wrapWithEquationRow(res), false) : res;
      }
    },
    _kernHandler(parser, context) {
      var size, t1, t2, muUnit,
        _s15_ = "mathVsTextUnits";
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      size = parser.parseArgSize$1$optional(false);
      if (size == null)
        size = B.Measurement_0_Unit_0;
      t1 = context.funcName;
      if (1 >= t1.length)
        return C.ioore(t1, 1);
      t2 = size.unit;
      muUnit = t2 === B.Unit_14;
      if (t1[1] === "m") {
        if (!muUnit)
          parser.settings.reportNonstrict$2(_s15_, "LaTeX's " + t1 + " supports only mu units, not " + t2.toString$0(0) + " units");
        if (parser.mode !== B.Mode_0)
          parser.settings.reportNonstrict$2(_s15_, "LaTeX's " + t1 + " works only in math mode");
      } else if (muUnit)
        parser.settings.reportNonstrict$2(_s15_, "LaTeX's " + t1 + " doesn't support mu units");
      return A.SpaceNode$(null, false, B.Measurement_0_Unit_0, parser.mode, B.Measurement_0_Unit_0, size);
    },
    _mathLeftHandler(parser, context) {
      var outerMode, t1, $close, body, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      outerMode = parser.mode;
      parser.mode = B.Mode_0;
      t1 = parser.macroExpander;
      t1.mode = B.Mode_0;
      $close = context.funcName === "\\(" ? "\\)" : "$";
      body = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, $close);
      parser.expect$1($close);
      t1.mode = parser.mode = outerMode;
      return A.StyleNode$(body, new A.OptionsDiff(B.MathStyle_2, _null, _null, _null, _null));
    },
    _mathRightHandler(parser, context) {
      type$.TexParser._as(parser);
      throw C.wrapException(A.ParseException$("Mismatched " + type$.FunctionContext._as(context).funcName, null));
    },
    _mclassHandler(parser, context) {
      var t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      return A.EquationRowNode$(A.GreenNodeWrappingExt_expandEquationRow(t1), B.Map_ZC8v1.$index(0, context.funcName));
    },
    _parseNaryOperator(command, parser, context) {
      var t2,
        scriptsResult = parser.parseScripts$1$allowLimits(true),
        t1 = parser.parseAtom$1(context.breakOnTokenText),
        arg = t1 == null ? null : A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t1 = B.Map_MYH09.$index(0, command).symbol;
      t2 = arg == null ? A.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), null) : arg;
      return new A.NaryOperatorNode(t1, scriptsResult.subscript, scriptsResult.superscript, t2, scriptsResult.limits, command !== "\\smallint");
    },
    _parseMathFunction(funcNameBase, parser, context, defaultLimits) {
      var limits, base, t2, functionName,
        scriptsResult = parser.parseScripts$1$allowLimits(true),
        t1 = parser.parseAtom$1(context.breakOnTokenText),
        arg = t1 == null ? null : A.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      if (arg == null)
        arg = A.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), null);
      limits = scriptsResult.limits;
      if (limits == null)
        limits = defaultLimits;
      base = A.GreenNodeWrappingExt_wrapWithEquationRow(funcNameBase);
      t1 = scriptsResult.subscript;
      t2 = t1 == null;
      if (t2 && scriptsResult.superscript == null)
        return A.FunctionNode$(arg, base);
      if (limits) {
        functionName = !t2 ? A.GreenNodeWrappingExt_wrapWithEquationRow(A.UnderNode$(base, t1)) : base;
        t1 = scriptsResult.superscript;
        return A.FunctionNode$(arg, A.GreenNodeWrappingExt_wrapWithEquationRow(t1 != null ? A.GreenNodeWrappingExt_wrapWithEquationRow(A.OverNode$(t1, functionName, false)) : functionName));
      } else
        return A.FunctionNode$(arg, A.GreenNodeWrappingExt_wrapWithEquationRow(A.MultiscriptsNode$(base, t1, scriptsResult.superscript)));
    },
    _bigOpHandler(parser, context) {
      var fName, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      fName = context.funcName;
      if (fName.length === 1) {
        t1 = B.Map_xHZD8.$index(0, fName);
        t1.toString;
        fName = t1;
      }
      return A._parseNaryOperator(fName, parser, context);
    },
    _mathFunctionHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return A._parseMathFunction(A.stringToNode(D.JSString_methods.substring$1(context.funcName, 1), B.Mode_1), parser, context, false);
    },
    _mathLimitsHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return A._parseMathFunction(A.stringToNode(D.JSString_methods.substring$1(context.funcName, 1), B.Mode_1), parser, context, true);
    },
    _integralHandler(parser, context) {
      var fName, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      fName = context.funcName;
      if (fName.length === 1) {
        t1 = B.Map_zBg4B.$index(0, fName);
        t1.toString;
        fName = t1;
      }
      return A._parseNaryOperator(fName, parser, context);
    },
    _operatorNameHandler(parser, context) {
      var t1, t2, scripts, body, $name, t3, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(_null, false);
      t1.toString;
      t2 = context.funcName;
      scripts = parser.parseScripts$1$allowLimits(t2 === "\\operatorname*");
      body = parser.parseGroup$5$consumeSpaces$greediness$mode$optional(t2, true, 1, _null, false);
      if (body == null)
        body = A.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null);
      $name = A.StyleNode$(A.GreenNodeWrappingExt_expandEquationRow(t1), new A.OptionsDiff(_null, _null, _null, _null, B.FontOptions_EtN));
      t1 = scripts.subscript;
      t2 = t1 == null;
      if (!(t2 && scripts.superscript == null))
        if (scripts.limits === true) {
          t3 = scripts.superscript;
          if (t3 != null)
            $name = A.OverNode$(t3, A.GreenNodeWrappingExt_wrapWithEquationRow($name), false);
          if (!t2)
            $name = A.UnderNode$(A.GreenNodeWrappingExt_wrapWithEquationRow($name), t1);
        } else
          $name = A.MultiscriptsNode$(A.GreenNodeWrappingExt_wrapWithEquationRow($name), t1, scripts.superscript);
      t1 = A.GreenNodeWrappingExt_wrapWithEquationRow($name);
      return A.FunctionNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(body), t1);
    },
    _phantomHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = context.funcName;
      t3 = t2 === "\\hphantom";
      return new A.PhantomNode(A.GreenNodeWrappingExt_wrapWithEquationRow(t1), t2 === "\\vphantom", t3, t3);
    },
    _raiseBoxHandler(parser, context) {
      var dy;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      dy = parser.parseArgSize$1$optional(false);
      if (dy == null)
        dy = B.Measurement_0_Unit_0;
      return new A.RaiseBoxNode(A.GreenNodeWrappingExt_wrapWithEquationRow(parser.parseArgHbox$1$optional(false)), dy);
    },
    _ruleHandler(parser, context) {
      var shift, width, height;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      shift = parser.parseArgSize$1$optional(true);
      if (shift == null)
        shift = B.Measurement_0_Unit_0;
      width = parser.parseArgSize$1$optional(false);
      if (width == null)
        width = B.Measurement_0_Unit_0;
      height = parser.parseArgSize$1$optional(false);
      return A.SpaceNode$(null, true, height == null ? B.Measurement_0_Unit_0 : height, B.Mode_0, shift, width);
    },
    _sizingHandler(parser, context) {
      var body, t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      body = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, context.breakOnTokenText);
      t1 = D.JSArray_methods.indexOf$1(B.List_RJL, context.funcName);
      if (!(t1 >= 0 && t1 < 11))
        return C.ioore(B.List_1HU, t1);
      return A.StyleNode$(body, new A.OptionsDiff(_null, B.List_1HU[t1], _null, _null, _null));
    },
    _sqrtHandler(parser, context) {
      var index, t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      index = parser.parseArgNode$2$mode$optional(null, true);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = index == null ? null : A.GreenNodeWrappingExt_wrapWithEquationRow(index);
      return new A.SqrtNode(t2, A.GreenNodeWrappingExt_wrapWithEquationRow(t1));
    },
    _stylingHandler(parser, context) {
      var t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = context.funcName;
      return A.StyleNode$(parser.parseExpression$2$breakOnInfix$breakOnTokenText(true, context.breakOnTokenText), new A.OptionsDiff(B.Map_MRjU2.$index(0, D.JSString_methods.substring$2(t1, 1, t1.length - 5)), _null, _null, _null, _null));
    },
    _textHandler(parser, context) {
      var t1, fontOptions, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(B.Mode_1, false);
      t1.toString;
      fontOptions = B.Map_sPadR.$index(0, context.funcName);
      if (fontOptions == null)
        return t1;
      return A.StyleNode$(A.GreenNodeWrappingExt_expandEquationRow(t1), new A.OptionsDiff(_null, _null, _null, fontOptions, _null));
    },
    _underOverHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(null, false);
      t2.toString;
      t3 = context.funcName;
      if (t3 === "\\underset")
        return A.UnderNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(t2), A.GreenNodeWrappingExt_wrapWithEquationRow(t1));
      else {
        t2 = A.GreenNodeWrappingExt_wrapWithEquationRow(t2);
        return A.OverNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(t1), t2, t3 === "\\stackrel");
      }
    },
    _charHandler_closure: function _charHandler_closure() {
    },
    CrNode: function CrNode(t0) {
      var _ = this;
      _.size = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _delimiterSymbols_closure: function _delimiterSymbols_closure() {
    },
    _checkDelimiter_closure: function _checkDelimiter_closure(t0) {
      this.delim = t0;
    },
    _LeftRightRightNode: function _LeftRightRightNode(t0) {
      var _ = this;
      _.delim = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _leftHandler_closure: function _leftHandler_closure() {
    },
    _MiddleNode: function _MiddleNode(t0) {
      var _ = this;
      _.delim = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _enviromentHandler_closure: function _enviromentHandler_closure() {
    },
    _enviromentHandler_closure0: function _enviromentHandler_closure0() {
    },
    _EndEnvironmentNode: function _EndEnvironmentNode(t0) {
      var _ = this;
      _.name = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    Lexer$(input, settings) {
      var t1 = C.LinkedHashMap_LinkedHashMap$_literal(["%", 14], type$.String, type$.int),
        t2 = $.$get$Lexer_tokenRegex().allMatches$1(0, input);
      return new A.Lexer(input, settings, t1, new C._AllMatchesIterator(t2._re, t2.__js_helper$_string, t2.__js_helper$_start));
    },
    Lexer: function Lexer(t0, t1, t2, t3) {
      var _ = this;
      _.input = t0;
      _.settings = t1;
      _.catCodes = t2;
      _.pos = 0;
      _.it = t3;
    },
    MacroExpander: function MacroExpander(t0, t1, t2, t3, t4) {
      var _ = this;
      _.settings = t0;
      _.mode = t1;
      _.expansionCount = 0;
      _.stack = t2;
      _.lexer = t3;
      _.macros = t4;
    },
    MacroExpander_consumeArgs_closure: function MacroExpander_consumeArgs_closure(t0) {
      this.$this = t0;
    },
    MacroExpander_expandMacroAsText_closure: function MacroExpander_expandMacroAsText_closure() {
    },
    MacroDefinition$(expand, unexpandable) {
      return new A.MacroDefinition(expand, false);
    },
    MacroDefinition$fromString(output) {
      return new A.MacroDefinition(new A.MacroDefinition$fromString_closure(output), false);
    },
    MacroDefinition$fromCtxString(expand) {
      return new A.MacroDefinition(new A.MacroDefinition$fromCtxString_closure(expand), false);
    },
    MacroDefinition$fromMacroExpansion(output) {
      return new A.MacroDefinition(new A.MacroDefinition$fromMacroExpansion_closure(output), false);
    },
    MacroExpansion_fromString(expansion, context) {
      var t1, stripped, numArgs0, bodyLexer, tokens, tok, numArgs = 0;
      if (D.JSString_methods.contains$1(expansion, "#")) {
        t1 = $.$get$MacroExpansion__strippedRegex();
        stripped = C.stringReplaceAllUnchecked(expansion, t1, "");
        while (true) {
          numArgs0 = numArgs + 1;
          if (!C.stringContainsUnchecked(stripped, "#" + numArgs0, 0))
            break;
          numArgs = numArgs0;
        }
      }
      bodyLexer = A.Lexer$(expansion, context.settings);
      tokens = C._setArrayType([], type$.JSArray_Token);
      tok = bodyLexer.lex$0();
      for (; tok.text !== "EOF";) {
        D.JSArray_methods.add$1(tokens, tok);
        tok = bodyLexer.lex$0();
      }
      t1 = type$.ReversedListIterable_Token;
      return new A.MacroExpansion(C.List_List$of(new C.ReversedListIterable(tokens, t1), true, t1._eval$1("ListIterable.E")), numArgs);
    },
    newcommand(context, existsOK, nonexistsOK) {
      var arg, $name, exists, token, argText, numArgs, _null = null,
        t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = arg.length;
      if (t1 !== 1)
        throw C.wrapException(A.ParseException$("\\newcommand's first argument must be a macro name", _null));
      if (0 >= t1)
        return C.ioore(arg, 0);
      $name = arg[0].text;
      exists = context.isDefined$1($name);
      if (exists && !existsOK)
        throw C.wrapException(A.ParseException$("\\newcommand{" + $name + "} attempting to redefine " + $name + "; use \\renewcommand", _null));
      if (!exists && !nonexistsOK)
        throw C.wrapException(A.ParseException$("\\renewcommand{" + $name + "} when command " + $name + " does not yet exist; use \\newcommand", _null));
      t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = arg.length;
      if (t1 === 1) {
        if (0 >= t1)
          return C.ioore(arg, 0);
        t1 = arg[0].text === "[";
      } else
        t1 = false;
      if (t1) {
        token = context.expandNextToken$0();
        argText = "";
        while (true) {
          t1 = token.text;
          if (!(t1 !== "]" && t1 !== "EOF"))
            break;
          argText += t1;
          token = context.expandNextToken$0();
        }
        t1 = C.RegExp_RegExp("^\\s*[0-9]+\\s*$", true, false, false, false);
        if (!t1._nativeRegExp.test(argText))
          throw C.wrapException(A.ParseException$("Invalid number of arguments: " + argText, _null));
        numArgs = C.int_parse(argText, _null);
        t1 = context.consumeArgs$1(1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        arg = t1[0];
      } else
        numArgs = 0;
      context.macros.$set$2(0, $name, A.MacroDefinition$fromMacroExpansion(new A.MacroExpansion(arg, numArgs)));
      return "";
    },
    MacroDefinition: function MacroDefinition(t0, t1) {
      this.expand = t0;
      this.unexpandable = t1;
    },
    MacroDefinition$fromString_closure: function MacroDefinition$fromString_closure(t0) {
      this.output = t0;
    },
    MacroDefinition$fromCtxString_closure: function MacroDefinition$fromCtxString_closure(t0) {
      this.expand = t0;
    },
    MacroDefinition$fromMacroExpansion_closure: function MacroDefinition$fromMacroExpansion_closure(t0) {
      this.output = t0;
    },
    MacroExpansion: function MacroExpansion(t0, t1) {
      this.tokens = t0;
      this.numArgs = t1;
    },
    builtinMacros_closure: function builtinMacros_closure() {
    },
    builtinMacros_closure0: function builtinMacros_closure0() {
    },
    builtinMacros_closure1: function builtinMacros_closure1() {
    },
    builtinMacros_closure2: function builtinMacros_closure2() {
    },
    builtinMacros_closure3: function builtinMacros_closure3() {
    },
    builtinMacros_closure4: function builtinMacros_closure4() {
    },
    builtinMacros_closure5: function builtinMacros_closure5() {
    },
    builtinMacros_closure6: function builtinMacros_closure6() {
    },
    builtinMacros_closure7: function builtinMacros_closure7() {
    },
    builtinMacros_closure8: function builtinMacros_closure8() {
    },
    builtinMacros_closure9: function builtinMacros_closure9() {
    },
    builtinMacros__closure0: function builtinMacros__closure0() {
    },
    builtinMacros_closure10: function builtinMacros_closure10() {
    },
    builtinMacros__closure: function builtinMacros__closure() {
    },
    builtinMacros_closure11: function builtinMacros_closure11() {
    },
    builtinMacros_closure12: function builtinMacros_closure12() {
    },
    builtinMacros_closure13: function builtinMacros_closure13() {
    },
    Namespace: function Namespace(t0, t1, t2, t3) {
      var _ = this;
      _.current = t0;
      _.builtins = t1;
      _.undefStack = t2;
      _.$ti = t3;
    },
    Namespace_endGroup_closure: function Namespace_endGroup_closure(t0) {
      this.$this = t0;
    },
    ParseException$(message, token) {
      var t1 = new A.ParseException(message, token);
      t1.ParseException$2(message, token);
      return t1;
    },
    ParseException: function ParseException(t0, t1) {
      this.message = t0;
      this.token = t1;
    },
    ParseException_closure: function ParseException_closure() {
    },
    assertNodeType(node, $T) {
      if ($T._is(node))
        return node;
      throw C.wrapException(A.ParseException$("Expected node of type " + C.createRuntimeType($T).toString$0(0) + ", but got node of type " + J.get$runtimeType$(node).toString$0(0), null));
    },
    TexParser: function TexParser(t0, t1, t2, t3) {
      var _ = this;
      _.settings = t0;
      _.mode = t1;
      _.leftrightDepth = 0;
      _.macroExpander = t2;
      _.nextToken = null;
      _.argParsingContexts = t3;
    },
    TexParser__parseSymbol_closure: function TexParser__parseSymbol_closure() {
    },
    ArgumentParsingContext: function ArgumentParsingContext(t0, t1) {
      var _ = this;
      _.funcName = t0;
      _.currArgNum = -1;
      _.funcData = t1;
      _._optional = true;
    },
    ScriptsParsingResults: function ScriptsParsingResults(t0, t1, t2) {
      this.subscript = t0;
      this.superscript = t1;
      this.limits = t2;
    },
    Strict: function Strict(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TexParserSettings: function TexParserSettings(t0) {
      this.strict = t0;
    },
    SourceLocation$0(lexer, start, end) {
      return new A.SourceLocation0(lexer, start, end);
    },
    SourceLocation_range(first, second) {
      var t2,
        t1 = first.loc;
      if (t1 != null) {
        t2 = second.loc;
        t2 = t2 == null || t1.lexer !== t2.lexer;
      } else
        t2 = true;
      if (t2)
        return null;
      else
        return new A.SourceLocation0(t1.lexer, t1.start, second.loc.end);
    },
    SourceLocation0: function SourceLocation0(t0, t1, t2) {
      this.lexer = t0;
      this.start = t1;
      this.end = t2;
    },
    TexSymbolConfig: function TexSymbolConfig(t0, t1, t2) {
      this.symbol = t0;
      this.variantForm = t1;
      this.type = t2;
    },
    Token$(text, loc) {
      return new A.Token(text, loc);
    },
    Token_range(startToken, endToken, text) {
      return new A.Token(text, A.SourceLocation_range(startToken, endToken));
    },
    Token: function Token(t0, t1) {
      this.text = t0;
      this.loc = t1;
      this.noexpand = false;
    },
    CustomLayoutId$(child, id, $T) {
      return new A.CustomLayoutId(id, child, new C.ValueKey(id, $T._eval$1("ValueKey<0>")), $T._eval$1("CustomLayoutId<0>"));
    },
    CustomLayoutDelegate: function CustomLayoutDelegate() {
    },
    CustomLayoutParentData: function CustomLayoutParentData(t0, t1, t2, t3) {
      var _ = this;
      _.id = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
      _.$ti = t3;
    },
    CustomLayoutId: function CustomLayoutId(t0, t1, t2, t3) {
      var _ = this;
      _.id = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    CustomLayout: function CustomLayout(t0, t1, t2, t3) {
      var _ = this;
      _.delegate = t0;
      _.children = t1;
      _.key = t2;
      _.$ti = t3;
    },
    RenderCustomLayout: function RenderCustomLayout(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._custom_layout0$_delegate = t0;
      _.ContainerRenderObjectMixin__childCount = t1;
      _.ContainerRenderObjectMixin__firstChild = t2;
      _.ContainerRenderObjectMixin__lastChild = t3;
      _._layoutCacheStorage = t4;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _.$ti = t6;
    },
    RenderCustomLayout_childrenTable_closure: function RenderCustomLayout_childrenTable_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.childParentData = t1;
      this.res = t2;
    },
    RenderCustomLayout_computeMinIntrinsicWidth_closure: function RenderCustomLayout_computeMinIntrinsicWidth_closure() {
    },
    RenderCustomLayout_computeMaxIntrinsicWidth_closure: function RenderCustomLayout_computeMaxIntrinsicWidth_closure() {
    },
    RenderCustomLayout_computeMinIntrinsicHeight_closure: function RenderCustomLayout_computeMinIntrinsicHeight_closure() {
    },
    RenderCustomLayout_computeMaxIntrinsicHeight_closure: function RenderCustomLayout_computeMaxIntrinsicHeight_closure() {
    },
    AxisConfiguration: function AxisConfiguration(t0, t1, t2) {
      this.size = t0;
      this.offsetTable = t1;
      this.$ti = t2;
    },
    IntrinsicLayoutDelegate: function IntrinsicLayoutDelegate() {
    },
    IntrinsicLayoutDelegate_getIntrinsicSize_closure: function IntrinsicLayoutDelegate_getIntrinsicSize_closure(t0, t1) {
      this.$this = t0;
      this.childSize = t1;
    },
    IntrinsicLayoutDelegate_getIntrinsicSize_closure0: function IntrinsicLayoutDelegate_getIntrinsicSize_closure0(t0, t1) {
      this.$this = t0;
      this.childSize = t1;
    },
    IntrinsicLayoutDelegate_computeLayout_closure: function IntrinsicLayoutDelegate_computeLayout_closure(t0) {
      this.$this = t0;
    },
    IntrinsicLayoutDelegate_computeLayout_closure0: function IntrinsicLayoutDelegate_computeLayout_closure0(t0) {
      this.$this = t0;
    },
    IntrinsicLayoutDelegate_computeLayout_closure1: function IntrinsicLayoutDelegate_computeLayout_closure1(t0, t1) {
      this.$this = t0;
      this.dry = t1;
    },
    IntrinsicLayoutDelegate_computeLayout_closure2: function IntrinsicLayoutDelegate_computeLayout_closure2(t0, t1, t2) {
      this.$this = t0;
      this.hconf = t1;
      this.vconf = t2;
    },
    _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin: function _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    RenderEqnArray$(arrayskip, hlines, jotSize, rowSpacings, ruleThickness) {
      var i, _null = null,
        t1 = C._setArrayType([], type$.JSArray_double),
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      t1 = new A.RenderEqnArray(ruleThickness, jotSize, arrayskip, hlines, rowSpacings, t1, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    EqnArrayParentData: function EqnArrayParentData(t0, t1, t2) {
      this.ContainerParentDataMixin_previousSibling = t0;
      this.ContainerParentDataMixin_nextSibling = t1;
      this.offset = t2;
    },
    EqnArray: function EqnArray(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.ruleThickness = t0;
      _.jotSize = t1;
      _.arrayskip = t2;
      _.hlines = t3;
      _.rowSpacings = t4;
      _.children = t5;
      _.key = t6;
    },
    RenderEqnArray: function RenderEqnArray(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _._ruleThickness = t0;
      _._jotSize = t1;
      _._arrayskip = t2;
      _._hlines = t3;
      _._rowSpacings = t4;
      _.hlinePos = t5;
      _.width = 0;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t6;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t7;
      _.ContainerRenderObjectMixin__childCount = t8;
      _.ContainerRenderObjectMixin__firstChild = t9;
      _.ContainerRenderObjectMixin__lastChild = t10;
      _._layoutCacheStorage = t11;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t12;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderEqnArray__computeLayout_closure: function RenderEqnArray__computeLayout_closure() {
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure(t0) {
      this.$this = t0;
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    LayoutBuilderPreserveBaseline: function LayoutBuilderPreserveBaseline(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    _RenderLayoutBuilderPreserveBaseline: function _RenderLayoutBuilderPreserveBaseline(t0, t1, t2, t3) {
      var _ = this;
      _.RenderConstrainedLayoutBuilder__callback = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderLayoutBuilderPreserveBaseline__debugThrowIfNotCheckingIntrinsics_closure: function _RenderLayoutBuilderPreserveBaseline__debugThrowIfNotCheckingIntrinsics_closure() {
    },
    __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin: function __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin() {
    },
    __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder: function __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder() {
    },
    LineElement$(alignerOrSpacer, canBreakBefore, child, customCrossSize, trailingMargin) {
      return new A.LineElement(false, customCrossSize, trailingMargin, alignerOrSpacer, child, null);
    },
    Line$(children, key) {
      return new A.Line(children, key);
    },
    RenderLine$(children, crossAxisAlignment, minDepth, minHeight, textBaseline, textDirection) {
      var i, t1, _null = null,
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      t1 = new A.RenderLine(crossAxisAlignment, minDepth, minHeight, textBaseline, textDirection, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, children);
      return t1;
    },
    LineParentData: function LineParentData(t0, t1, t2) {
      var _ = this;
      _.canBreakBefore = false;
      _.customCrossSize = null;
      _.trailingMargin = 0;
      _.alignerOrSpacer = false;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    LineElement: function LineElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.canBreakBefore = t0;
      _.customCrossSize = t1;
      _.trailingMargin = t2;
      _.alignerOrSpacer = t3;
      _.child = t4;
      _.key = t5;
    },
    Line: function Line(t0, t1) {
      this.children = t0;
      this.key = t1;
    },
    RenderLine: function RenderLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._line$_crossAxisAlignment = t0;
      _._line$_minDepth = t1;
      _._line$_minHeight = t2;
      _._line$_textBaseline = t3;
      _._line$_textDirection = t4;
      _._line$_overflow = null;
      _.maxHeightAboveBaseline = 0;
      _.__RenderLine_caretOffsets_A = $;
      _.alignColWidth = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t5;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t6;
      _.ContainerRenderObjectMixin__childCount = t7;
      _.ContainerRenderObjectMixin__firstChild = t8;
      _.ContainerRenderObjectMixin__lastChild = t9;
      _._layoutCacheStorage = t10;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t11;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderLine_computeMinIntrinsicWidth_closure: function RenderLine_computeMinIntrinsicWidth_closure() {
    },
    RenderLine_computeMaxIntrinsicWidth_closure: function RenderLine_computeMaxIntrinsicWidth_closure() {
    },
    RenderLine_computeMinIntrinsicHeight_closure: function RenderLine_computeMinIntrinsicHeight_closure() {
    },
    RenderLine_computeMaxIntrinsicHeight_closure: function RenderLine_computeMaxIntrinsicHeight_closure() {
    },
    RenderLine_paint_closure: function RenderLine_paint_closure(t0, t1, t2) {
      this.$this = t0;
      this.context = t1;
      this.offset = t2;
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure: function _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure(t0) {
      this.$this = t0;
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin: function _RenderLine_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    RenderEditableLine$(crossAxisAlignment, cursorBlinkOpacityController, cursorColor, cursorHeight, cursorOffset, cursorRadius, cursorWidth, devicePixelRatio, endHandleLayerLink, hintingColor, minDepth, minHeight, node, paintCursorAboveText, preferredLineHeight, selection, selectionColor, showCursor, startHandleLayerLink, textBaseline, textDirection) {
      var i, t1, _null = null,
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      t1 = new A.RenderEditableLine(cursorBlinkOpacityController, cursorColor, cursorOffset, cursorRadius, cursorWidth, cursorHeight, devicePixelRatio, hintingColor, paintCursorAboveText, preferredLineHeight, selection, selectionColor, showCursor, startHandleLayerLink, endHandleLayerLink, crossAxisAlignment, minDepth, minHeight, textBaseline, textDirection, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    EditableLine: function EditableLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.cursorBlinkOpacityController = t0;
      _.cursorColor = t1;
      _.cursorOffset = t2;
      _.cursorRadius = t3;
      _.cursorWidth = t4;
      _.cursorHeight = t5;
      _.devicePixelRatio = t6;
      _.hintingColor = t7;
      _.node = t8;
      _.paintCursorAboveText = t9;
      _.preferredLineHeight = t10;
      _.selection = t11;
      _.selectionColor = t12;
      _.showCursor = t13;
      _.startHandleLayerLink = t14;
      _.endHandleLayerLink = t15;
      _.children = t16;
      _.key = t17;
    },
    RenderEditableLine: function RenderEditableLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _._line_editable$_cursorBlinkOpacityController = t0;
      _._cursorColor = t1;
      _._line_editable$_cursorOffset = t2;
      _._line_editable$_cursorRadius = t3;
      _._line_editable$_cursorWidth = t4;
      _._line_editable$_cursorHeight = t5;
      _._line_editable$_devicePixelRatio = t6;
      _._hintingColor = t7;
      _._paintCursorAboveText = t8;
      _.preferredLineHeight = t9;
      _._line_editable$_selection = t10;
      _._line_editable$_selectionColor = t11;
      _._line_editable$_showCursor = t12;
      _._line_editable$_startHandleLayerLink = t13;
      _._line_editable$_endHandleLayerLink = t14;
      _._line$_crossAxisAlignment = t15;
      _._line$_minDepth = t16;
      _._line$_minHeight = t17;
      _._line$_textBaseline = t18;
      _._line$_textDirection = t19;
      _._line$_overflow = null;
      _.maxHeightAboveBaseline = 0;
      _.__RenderLine_caretOffsets_A = $;
      _.alignColWidth = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t20;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t21;
      _.ContainerRenderObjectMixin__childCount = t22;
      _.ContainerRenderObjectMixin__firstChild = t23;
      _.ContainerRenderObjectMixin__lastChild = t24;
      _._layoutCacheStorage = t25;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t26;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    MinDimension$(bottomPadding, child, minDepth, minHeight, topPadding) {
      return new A.MinDimension(minHeight, minDepth, topPadding, bottomPadding, child, null);
    },
    MinDimension: function MinDimension(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.minHeight = t0;
      _.minDepth = t1;
      _.topPadding = t2;
      _.bottomPadding = t3;
      _.child = t4;
      _.key = t5;
    },
    RenderMinDimension: function RenderMinDimension(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._minHeight = t0;
      _._minDepth = t1;
      _._topPadding = t2;
      _._bottomPadding = t3;
      _.distanceToBaseline = 0;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    Multiscripts$(alignPostscripts, baseResult, isBaseCharacterBox, presubResult, presupResult, subResult, supResult) {
      return new A.Multiscripts(false, isBaseCharacterBox, baseResult, subResult, supResult, presubResult, presupResult, null);
    },
    calculateUV(base, isBaseCharacterBox, sub, sup) {
      var t3, r, v, t4, t5, q, u, hx, dx, theta, hy, psi,
        t1 = base.options,
        metrics = t1.get$fontMetrics(),
        h = base.baseline,
        t2 = sub != null;
      if (t2) {
        t3 = sub.options;
        r = new A.Measurement(t3.get$fontMetrics().subDrop, B.Unit_16).toLpUnder$1(t3);
        v = isBaseCharacterBox ? 0 : base.fullHeight - h + r;
      } else
        v = 0;
      t3 = sup == null;
      t4 = !t3;
      if (t4) {
        t5 = sup.options;
        q = new A.Measurement(t5.get$fontMetrics().supDrop, B.Unit_16).toLpUnder$1(t5);
        u = isBaseCharacterBox ? 0 : h - q;
      } else
        u = 0;
      if (t3 && t2) {
        hx = sub.baseline;
        v = Math.max(v, Math.max(new A.Measurement(metrics.sub1, B.Unit_16).toLpUnder$1(t1), hx - 0.8 * new A.Measurement(metrics.xHeight, B.Unit_16).toLpUnder$1(t1)));
      } else if (t4) {
        dx = sup.fullHeight - sup.baseline;
        t3 = t1.style;
        if (t3 === B.MathStyle_0)
          t3 = metrics.sup1;
        else
          t3 = (t3.index & 1) === 0 ? metrics.sup3 : metrics.sup2;
        t4 = metrics.xHeight;
        u = Math.max(u, Math.max(new A.Measurement(t3, B.Unit_16).toLpUnder$1(t1), dx + 0.25 * new A.Measurement(t4, B.Unit_16).toLpUnder$1(t1)));
        if (t2) {
          v = Math.max(v, new A.Measurement(metrics.sub2, B.Unit_16).toLpUnder$1(t1));
          theta = new A.Measurement(metrics.defaultRuleThickness, B.Unit_16).toLpUnder$1(t1);
          hy = sub.baseline;
          t2 = u - dx;
          t3 = 4 * theta;
          if (t2 - (hy - v) < t3) {
            v = t3 - u + dx + hy;
            psi = 0.8 * new A.Measurement(t4, B.Unit_16).toLpUnder$1(t1) - t2;
            if (psi > 0) {
              u += psi;
              v -= psi;
            }
          }
        }
      }
      return new A.Tuple2(u, v, type$.Tuple2_double_double);
    },
    _ScriptPos: function _ScriptPos(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Multiscripts: function Multiscripts(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.alignPostscripts = t0;
      _.isBaseCharacterBox = t1;
      _.baseResult = t2;
      _.subResult = t3;
      _.supResult = t4;
      _.presubResult = t5;
      _.presupResult = t6;
      _.key = t7;
    },
    MultiscriptsLayoutDelegate: function MultiscriptsLayoutDelegate(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.alignPostscripts = t0;
      _.italic = t1;
      _.isBaseCharacterBox = t2;
      _.baseOptions = t3;
      _.subOptions = t4;
      _.supOptions = t5;
      _.presubOptions = t6;
      _.presupOptions = t7;
      _.baselineDistance = 0;
    },
    _ScriptUvConf: function _ScriptUvConf(t0, t1, t2) {
      this.fullHeight = t0;
      this.baseline = t1;
      this.options = t2;
    },
    ResetBaseline: function ResetBaseline(t0, t1, t2) {
      this.height = t0;
      this.child = t1;
      this.key = t2;
    },
    RenderResetBaseline: function RenderResetBaseline(t0, t1, t2, t3) {
      var _ = this;
      _._reset_baseline$_height = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    ResetDimension$(child, depth, height, horizontalAlignment, width) {
      return new A.ResetDimension(height, depth, width, horizontalAlignment, child, null);
    },
    ResetDimension: function ResetDimension(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.height = t0;
      _.depth = t1;
      _.width = t2;
      _.horizontalAlignment = t3;
      _.child = t4;
      _.key = t5;
    },
    RenderResetDimension: function RenderResetDimension(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._layoutHeight = t0;
      _._layoutDepth = t1;
      _._layoutWidth = t2;
      _._horizontalAlignment = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    ShiftBaseline$(child, offset, relativePos) {
      return new A.ShiftBaseline(relativePos, offset, child, null);
    },
    ShiftBaseline: function ShiftBaseline(t0, t1, t2, t3) {
      var _ = this;
      _.relativePos = t0;
      _.offset = t1;
      _.child = t2;
      _.key = t3;
    },
    RenderShiftBaseline: function RenderShiftBaseline(t0, t1, t2, t3, t4) {
      var _ = this;
      _._relativePos = t0;
      _._shift_baseline$_offset = t1;
      _._shift_baseline$_height = 0;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    VListElement$(child, customCrossSize, hShift, trailingMargin) {
      return new A.VListElement(customCrossSize, trailingMargin, hShift, child, null);
    },
    VList$(baselineReferenceWidgetIndex, children) {
      return new A.VList(baselineReferenceWidgetIndex, children, null);
    },
    RenderRelativeWidthColumn$(baselineReferenceWidgetIndex, crossAxisAlignment, textBaseline, textDirection) {
      var i, t1, _null = null,
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      t1 = new A.RenderRelativeWidthColumn(textBaseline, baselineReferenceWidgetIndex, crossAxisAlignment, textDirection, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    VListParentData: function VListParentData(t0, t1, t2) {
      var _ = this;
      _.customCrossSize = null;
      _.hShift = _.trailingMargin = 0;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    VListElement: function VListElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.customCrossSize = t0;
      _.trailingMargin = t1;
      _.hShift = t2;
      _.child = t3;
      _.key = t4;
    },
    VList: function VList(t0, t1, t2) {
      this.baselineReferenceWidgetIndex = t0;
      this.children = t1;
      this.key = t2;
    },
    RenderRelativeWidthColumn: function RenderRelativeWidthColumn(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._vlist$_textBaseline = t0;
      _._baselineReferenceWidgetIndex = t1;
      _._vlist$_crossAxisAlignment = t2;
      _._vlist$_textDirection = t3;
      _.distanceToBaseline = _._vlist$_overflow = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t4;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t5;
      _.ContainerRenderObjectMixin__childCount = t6;
      _.ContainerRenderObjectMixin__firstChild = t7;
      _.ContainerRenderObjectMixin__lastChild = t8;
      _._layoutCacheStorage = t9;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t10;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure: function RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure() {
    },
    RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure: function RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure() {
    },
    RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure: function RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure() {
    },
    RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure: function RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure() {
    },
    RenderRelativeWidthColumn_paint_closure: function RenderRelativeWidthColumn_paint_closure(t0, t1, t2) {
      this.$this = t0;
      this.context = t1;
      this.offset = t2;
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure(t0) {
      this.$this = t0;
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    getHeightForDelim(delim, fontName, options, style) {
      var char, metrics,
        t1 = B.Map_LoF1O.$index(0, delim);
      if (t1 == null)
        char = null;
      else {
        t1 = t1.math;
        t1 = t1 == null ? null : t1.replaceChar;
        char = t1;
      }
      metrics = A.getCharacterMetrics(char == null ? delim : char, fontName, B.Mode_0);
      if (metrics == null)
        throw C.wrapException(C.StateError$("Illegal delimiter char " + delim + "(" + A.unicodeLiteral(delim) + ") appeared in AST"));
      return new A.Measurement(metrics.height + metrics.depth, B.Unit_16).toLpUnder$1(options.havingStyle$1(style));
    },
    DelimiterConf: function DelimiterConf(t0, t1) {
      this.font = t0;
      this.style = t1;
    },
    strechySvgSpan($name, width, options) {
      var effCharNum, pathName, viewBoxWidth, viewBoxHeight, height, imgIndex, t1, t2, data, numSvgChildren, actualWidth, t3, aligns, widths, _list, index, t4, t5;
      if (B.Set_SjXog.contains$1(0, $name)) {
        effCharNum = D.JSNumber_methods.ceil$0(width / new A.Measurement(1, B.Unit_16).toLpUnder$1(options));
        if (effCharNum > 5)
          if ($name === "widehat" || $name === "widecheck") {
            pathName = $name + "4";
            viewBoxWidth = 2364;
            viewBoxHeight = 420;
            height = 0.42;
          } else {
            viewBoxWidth = 2340;
            viewBoxHeight = 312;
            pathName = "tilde4";
            height = 0.34;
          }
        else {
          if (!(effCharNum >= 0))
            return C.ioore(B.List_J9A, effCharNum);
          imgIndex = B.List_J9A[effCharNum];
          t1 = $name === "widehat" || $name === "widecheck";
          t2 = "" + imgIndex;
          if (t1) {
            if (!(imgIndex < 5))
              return C.ioore(B.List_Sn5, imgIndex);
            viewBoxWidth = B.List_Sn5[imgIndex];
            viewBoxHeight = B.List_3PE[imgIndex];
            height = B.List_PIO[imgIndex];
            pathName = $name + t2;
          } else {
            if (!(imgIndex < 5))
              return C.ioore(B.List_cuD, imgIndex);
            viewBoxWidth = B.List_cuD[imgIndex];
            viewBoxHeight = B.List_b7O[imgIndex];
            height = B.List_F26[imgIndex];
            pathName = "tilde" + t2;
          }
        }
        height = new A.Measurement(height, B.Unit_16).toLpUnder$1(options);
        t1 = B.Map_I87FN.$index(0, pathName);
        t1.toString;
        return A.svgWidgetFromPath(t1, new C.Size(width, height), new C.Rect(0, 0, viewBoxWidth, viewBoxHeight), options.color, D.Alignment_m1_m1, D.BoxFit_0);
      } else {
        data = B.Map_B3hpY.$index(0, $name);
        if (data == null)
          throw C.wrapException(C.ArgumentError$value($name, "name", "Invalid stretchy svg name"));
        t1 = data.viewBoxHeight;
        height = new A.Measurement(t1 / 1000, B.Unit_16).toLpUnder$1(options);
        t2 = data.paths;
        numSvgChildren = t2.length;
        actualWidth = Math.max(width, new A.Measurement(data.minWidth, B.Unit_16).toLpUnder$1(options));
        switch (numSvgChildren) {
          case 1:
            t3 = data.align;
            t3.toString;
            aligns = C._setArrayType([t3], type$.JSArray_Alignment);
            widths = C._setArrayType([actualWidth], type$.JSArray_double);
            break;
          case 2:
            t3 = actualWidth / 2;
            widths = C._setArrayType([t3, t3], type$.JSArray_double);
            aligns = B.List_eKf;
            break;
          case 3:
            t3 = actualWidth / 4;
            widths = C._setArrayType([t3, actualWidth / 2, t3], type$.JSArray_double);
            aligns = B.List_UOF;
            break;
          default:
            throw C.wrapException(C.StateError$("Bug inside stretchy svg code"));
        }
        _list = J.JSArray_JSArray$allocateFixed(numSvgChildren, type$.Widget);
        for (t3 = options.color, index = 0; index < numSvgChildren; ++index) {
          t4 = B.Map_I87FN.$index(0, t2[index]);
          t4.toString;
          if (!(index < widths.length))
            return C.ioore(widths, index);
          t5 = widths[index];
          if (!(index < aligns.length))
            return C.ioore(aligns, index);
          _list[index] = A.svgWidgetFromPath(t4, new C.Size(t5, height), new C.Rect(0, 0, 400000, t1), t3, aligns[index], D.BoxFit_2);
        }
        return C.Row$(_list, D.CrossAxisAlignment_0, null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, null, null, D.VerticalDirection_1);
      }
    },
    _KatexImagesData: function _KatexImagesData(t0, t1, t2, t3) {
      var _ = this;
      _.paths = t0;
      _.minWidth = t1;
      _.viewBoxHeight = t2;
      _.align = t3;
    },
    makeDecoratedEqualSymbol(symbol, type, mode, options) {
      var decoratorSymbols, decoratorSize, t1, t2, decorator, _null = null,
        decoratorFont = _null;
      switch (symbol) {
        case "\u2259":
          decoratorSymbols = C._setArrayType(["\u2227"], type$.JSArray_String);
          decoratorSize = B.MathSize_0;
          break;
        case "\u225a":
          decoratorSymbols = C._setArrayType(["\u2228"], type$.JSArray_String);
          decoratorSize = B.MathSize_0;
          break;
        case "\u225b":
          decoratorSymbols = C._setArrayType(["\u22c6"], type$.JSArray_String);
          decoratorSize = B.MathSize_2;
          break;
        case "\u225d":
          decoratorSymbols = C._setArrayType(["d", "e", "f"], type$.JSArray_String);
          decoratorFont = B.FontOptions_EtN;
          decoratorSize = B.MathSize_0;
          break;
        case "\u225e":
          decoratorSymbols = C._setArrayType(["m"], type$.JSArray_String);
          decoratorFont = B.FontOptions_EtN;
          decoratorSize = B.MathSize_0;
          break;
        case "\u225f":
          decoratorSymbols = C._setArrayType(["?"], type$.JSArray_String);
          decoratorSize = B.MathSize_0;
          break;
        default:
          throw C.wrapException(C.ArgumentError$value(A.unicodeLiteral(symbol), "symbol", "Not a decorator character"));
      }
      t1 = C._arrayInstanceType(decoratorSymbols);
      t2 = t1._eval$1("MappedListIterable<1,SymbolNode>");
      decorator = A.StyleNode$(C.List_List$of(new C.MappedListIterable(decoratorSymbols, t1._eval$1("SymbolNode(1)")._as(new A.makeDecoratedEqualSymbol_closure(mode)), t2), false, t2._eval$1("ListIterable.E")), new A.OptionsDiff(_null, decoratorSize, _null, _null, decoratorFont));
      t2 = A.GreenNodeWrappingExt_wrapWithEquationRow(A.SymbolNode$(mode, type, _null, "=", false));
      return A.SyntaxNode$(_null, 0, A.OverNode$(A.GreenNodeWrappingExt_wrapWithEquationRow(decorator), t2, false)).buildWidget$1(options);
    },
    makeDecoratedEqualSymbol_closure: function makeDecoratedEqualSymbol_closure(t0) {
      this.mode = t0;
    },
    makeBaseSymbol(atomType, mode, options, overrideFont, symbol, variantForm) {
      var t1, t2, t3, renderConfig, char, _box_0, useMathFont, font, charMetrics, t4, _i, fallback, t5, postfix, italic, defaultFont, characterMetrics, chars, res1, res2, widget1, widget2, _null = null,
        symbolRenderConfig = B.Map_LoF1O.$index(0, symbol);
      if (symbolRenderConfig != null) {
        if (variantForm)
          symbolRenderConfig = symbolRenderConfig.variantForm;
        t1 = mode === B.Mode_0;
        if (t1) {
          t2 = symbolRenderConfig == null;
          t3 = t2 ? _null : symbolRenderConfig.math;
          if (t3 == null) {
            t2 = t2 ? _null : symbolRenderConfig.text;
            renderConfig = t2;
          } else
            renderConfig = t3;
        } else {
          t2 = symbolRenderConfig == null;
          t3 = t2 ? _null : symbolRenderConfig.text;
          if (t3 == null) {
            t2 = t2 ? _null : symbolRenderConfig.math;
            renderConfig = t2;
          } else
            renderConfig = t3;
        }
        t2 = renderConfig == null;
        char = t2 ? _null : renderConfig.replaceChar;
        if (char == null)
          char = symbol;
        if (atomType === B.AtomType_0) {
          if (0 >= symbol.length)
            return C.ioore(symbol, 0);
          t3 = symbol.charCodeAt(0) !== 55349;
        } else
          t3 = false;
        if (t3) {
          _box_0 = {};
          if (!t1)
            useMathFont = mode === B.Mode_1 && options.mathFontOptions != null;
          else
            useMathFont = true;
          if (overrideFont == null)
            font = useMathFont ? options.mathFontOptions : options.textFontOptions;
          else
            font = overrideFont;
          _box_0.font = font;
          if (font != null) {
            charMetrics = A.getCharacterMetrics(char, font.get$fontName(), mode);
            if (charMetrics == null) {
              for (t3 = font.fallback, t4 = t3.length, _i = 0; _i < t4; ++_i) {
                fallback = t3[_i];
                t5 = fallback.fontWeight === D.FontWeight_6_700 ? "Bold" : "";
                postfix = t5 + (fallback.fontShape === B.FontStyle_1 ? "Italic" : "");
                t5 = postfix.length === 0 ? "Regular" : postfix;
                charMetrics = A.getCharacterMetrics(char, fallback.fontFamily + "-" + t5, mode);
                if (charMetrics != null) {
                  _box_0.font = fallback;
                  break;
                }
              }
              _box_0.font.toString;
            }
            if (charMetrics != null) {
              italic = new A.Measurement(charMetrics.italic, B.Unit_16).toLpUnder$1(options);
              t2 = new A.Measurement(charMetrics.skew, B.Unit_16).toLpUnder$1(options);
              return new A.BuildResult(A.makeChar(symbol, _box_0.font, charMetrics, options, t1), options, italic, t2, _null);
            } else if (B.Map_jLcbb.containsKey$1(0, symbol) && _box_0.font.fontFamily === "Typewriter") {
              t1 = type$.MappedListIterable_String_Widget;
              return new A.BuildResult(C.Row$(C.List_List$of(new C.MappedListIterable(C._setArrayType(B.Map_jLcbb.$index(0, symbol).split(""), type$.JSArray_String), type$.Widget_Function_String._as(new A.makeBaseSymbol_closure(_box_0, mode, options)), t1), false, t1._eval$1("ListIterable.E")), D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, D.TextBaseline_0, _null, D.VerticalDirection_1), options, 0, 0, _null);
            }
          }
        }
        defaultFont = t2 ? _null : renderConfig.defaultFont;
        if (defaultFont == null)
          defaultFont = B.FontOptions_EtN;
        t2 = t2 ? _null : renderConfig.replaceChar;
        if (t2 == null)
          t2 = symbol;
        characterMetrics = A.getCharacterMetrics(t2, defaultFont.get$fontName(), B.Mode_0);
        t2 = characterMetrics == null;
        italic = t2 ? _null : new A.Measurement(characterMetrics.italic, B.Unit_16).toLpUnder$1(options);
        if (italic == null)
          italic = 0;
        t1 = A.makeChar(char, defaultFont, characterMetrics, options, t1);
        t2 = t2 ? _null : new A.Measurement(characterMetrics.skew, B.Unit_16).toLpUnder$1(options);
        return new A.BuildResult(t1, options, italic, t2 == null ? 0 : t2, _null);
      } else {
        t1 = mode === B.Mode_0;
        if (t1 && !variantForm)
          if (B.Map_W7r5a.containsKey$1(0, symbol)) {
            chars = B.Map_W7r5a.$index(0, symbol);
            t1 = chars[0];
            t2 = chars[1];
            res1 = A.makeBaseSymbol(atomType, mode, options, _null, t1, false);
            res2 = A.makeBaseSymbol(atomType, mode, options, _null, t2, false);
            return new A.BuildResult(C.Row$(C._setArrayType([A.ResetDimension$(res1.widget, _null, _null, D.CrossAxisAlignment_0, 0), res2.widget], type$.JSArray_Widget), D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, D.TextBaseline_0, _null, D.VerticalDirection_1), options, res2.italic, 0, _null);
          } else if (B.Map_uUUqS.containsKey$1(0, symbol)) {
            t1 = B.Map_uUUqS.$index(0, symbol);
            t1.toString;
            t2 = $.$get$compactedCompositeSymbolSpacings().$index(0, symbol);
            t2.toString;
            t3 = t1[0];
            t1 = t1[1];
            res1 = A.makeBaseSymbol(atomType, mode, options, _null, t3, false);
            res2 = A.makeBaseSymbol(atomType, mode, options, _null, t1, false);
            widget1 = res1.widget;
            widget1 = t3 !== ":" ? widget1 : A.ShiftBaseline$(widget1, new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options), 0.5);
            widget2 = res2.widget;
            widget2 = t1 !== ":" ? widget2 : A.ShiftBaseline$(widget2, new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options), 0.5);
            return new A.BuildResult(A.Line$(C._setArrayType([A.LineElement$(false, false, widget1, _null, t2.toLpUnder$1(options)), widget2], type$.JSArray_Widget), _null), options, res2.italic, 0, _null);
          } else if (B.Set_Vj9Rm.contains$1(0, symbol))
            return A.makeDecoratedEqualSymbol(symbol, atomType, mode, options);
      }
      return new A.BuildResult(A.makeChar(symbol, B.FontOptions_EtN, _null, options, t1), options, 0, 0, _null);
    },
    makeChar(character, font, characterMetrics, options, needItalic) {
      var italic, _null = null,
        t1 = characterMetrics == null,
        t2 = t1 ? _null : new A.Measurement(characterMetrics.height, B.Unit_16).toLpUnder$1(options),
        t3 = t1 ? _null : new A.Measurement(characterMetrics.depth, B.Unit_16).toLpUnder$1(options),
        t4 = font.fontFamily,
        t5 = font.fontWeight,
        t6 = font.fontShape,
        charWidget = A.ResetDimension$(C.RichText$(_null, _null, _null, D.TextOverflow_3, _null, _null, false, _null, C.TextSpan$(_null, C.TextStyle$(_null, _null, options.color, _null, _null, _null, _null, _null, "packages/flutter_math_fork/KaTeX_" + t4, _null, _null, new A.Measurement(1, B.Unit_16).toLpUnder$1(options), t6, _null, t5, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), character), D.TextAlign_4, _null, _null, D._LinearTextScaler_1, D.TextWidthBasis_0), t3, t2, D.CrossAxisAlignment_2, _null);
      if (needItalic) {
        italic = t1 ? _null : new A.Measurement(characterMetrics.italic, B.Unit_16).toLpUnder$1(options);
        return new C.Padding(new C.EdgeInsets(0, 0, italic == null ? 0 : italic, 0), charWidget, _null);
      }
      return charWidget;
    },
    makeBaseSymbol_closure: function makeBaseSymbol_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.mode = t1;
      this.options = t2;
    },
    unicodeLiteral(str) {
      return new C.MappedListIterable(C._setArrayType(str.split(""), type$.JSArray_String), type$.String_Function_String._as(new A.unicodeLiteral_closure(false)), type$.MappedListIterable_String_String).join$0(0);
    },
    unicodeLiteral_closure: function unicodeLiteral_closure(t0) {
      this.escape = t0;
    },
    BuildException: function BuildException(t0) {
      this.message = t0;
    },
    Math_Math$tex(expression, mathStyle, onErrorFallback, options, settings, textScaleFactor, textStyle) {
      var e, e0, t1, t2, t3, t4, t5, parse, exception, ast = null, parseError = null;
      try {
        t1 = C.ListQueue$(null, type$.ArgumentParsingContext);
        t2 = C._setArrayType([], type$.JSArray_Token);
        t3 = $.$get$builtinMacros();
        t4 = C._setArrayType([], type$.JSArray_Map_of_String_and_nullable_MacroDefinition);
        t5 = type$.String;
        t3 = new A.Namespace(C.LinkedHashMap_LinkedHashMap$from(B.Map_empty9, t5, type$.MacroDefinition), t3, t4, type$.Namespace_MacroDefinition);
        t1 = new A.TexParser(settings, B.Mode_0, new A.MacroExpander(settings, B.Mode_0, t2, A.Lexer$(expression, settings), t3), t1);
        D.JSArray_methods.add$1(t4, C.LinkedHashMap_LinkedHashMap$_empty(t5, type$.nullable_MacroDefinition));
        parse = t1.parseExpression$1$breakOnInfix(false);
        t1.expect$1("EOF");
        t3.endGroup$0();
        ast = new A.SyntaxTree(A.GreenNodeListWrappingExt_wrapWithEquationRow(parse));
      } catch (exception) {
        t1 = C.unwrapException(exception);
        if (t1 instanceof A.ParseException) {
          e = t1;
          parseError = e;
        } else {
          e0 = t1;
          parseError = A.ParseException$("Unsanitized parse exception detected: " + C.S(e0) + string$.x2ePleas, null);
        }
      }
      t1 = ast;
      t2 = parseError;
      C.assertHelper(t1 != null || t2 != null);
      return new A.Math(t1, mathStyle, onErrorFallback, options, t2, textScaleFactor, textStyle, null);
    },
    Math_defaultOnErrorFallback(error) {
      var t1 = error.get$messageWithType();
      return new A.SelectableText(t1, null);
    },
    Math: function Math(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.ast = t0;
      _.mathStyle = t1;
      _.onErrorFallback = t2;
      _.options = t3;
      _.parseError = t4;
      _.textScaleFactor = t5;
      _.textStyle = t6;
      _.key = t7;
    },
    FlutterMathMode: function FlutterMathMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Cache0: function Cache0(t0, t1) {
      this._cache$_pending = t0;
      this._cache$_cache = t1;
    },
    Cache_putIfAbsent_closure: function Cache_putIfAbsent_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.key = t2;
    },
    SvgTheme: function SvgTheme() {
    },
    SvgLoader: function SvgLoader() {
    },
    SvgLoader__load_closure: function SvgLoader__load_closure(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    SvgLoader__load__closure: function SvgLoader__load__closure(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    SvgLoader_loadBytes_closure: function SvgLoader_loadBytes_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    SvgCacheKey: function SvgCacheKey(t0, t1, t2) {
      this.theme = t0;
      this.keyData = t1;
      this.colorMapper = t2;
    },
    SvgStringLoader: function SvgStringLoader(t0, t1, t2) {
      this._svg = t0;
      this.theme = t1;
      this.colorMapper = t2;
    },
    Svg: function Svg(t0) {
      this.cache = t0;
    },
    SvgPicture: function SvgPicture(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.fit = t2;
      _.alignment = t3;
      _.bytesLoader = t4;
      _.colorFilter = t5;
      _.key = t6;
    },
    FlyerChatImageMessage: function FlyerChatImageMessage(t0, t1, t2) {
      this.message = t0;
      this.customImageProvider = t1;
      this.key = t2;
    },
    _FlyerChatImageMessageState: function _FlyerChatImageMessageState(t0, t1, t2) {
      var _ = this;
      _.___FlyerChatImageMessageState__aspectRatio_A = _.___FlyerChatImageMessageState__imageProvider_A = _.___FlyerChatImageMessageState__chatController_F = $;
      _._placeholderProvider = null;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _FlyerChatImageMessageState_initState_closure: function _FlyerChatImageMessageState_initState_closure(t0) {
      this.$this = t0;
    },
    _FlyerChatImageMessageState_didUpdateWidget_closure: function _FlyerChatImageMessageState_didUpdateWidget_closure(t0, t1) {
      this.$this = t0;
      this.newImage = t1;
    },
    _FlyerChatImageMessageState_build_closure: function _FlyerChatImageMessageState_build_closure() {
    },
    _FlyerChatImageMessageState__buildStack_closure0: function _FlyerChatImageMessageState__buildStack_closure0(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    _FlyerChatImageMessageState__buildStack_closure: function _FlyerChatImageMessageState__buildStack_closure(t0) {
      this.$this = t0;
    },
    _FlyerChatImageMessageState__buildStack_closure1: function _FlyerChatImageMessageState__buildStack_closure1(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    TimeAndStatus0: function TimeAndStatus0(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.time = t0;
      _.status = t1;
      _.showTime = t2;
      _.showStatus = t3;
      _.backgroundColor = t4;
      _.textStyle = t5;
      _.key = t6;
    },
    __FlyerChatImageMessageState_State_TickerProviderStateMixin_dispose_closure: function __FlyerChatImageMessageState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __FlyerChatImageMessageState_State_TickerProviderStateMixin: function __FlyerChatImageMessageState_State_TickerProviderStateMixin() {
    },
    getImageDimensions(provider) {
      var t1 = new C._Future($.Zone__current, type$._Future_Record_2_double_and_double),
        completer = new C._AsyncCompleter(t1, type$._AsyncCompleter_Record_2_double_and_double);
      new C.SynchronousFuture(provider, type$.SynchronousFuture_NetworkImage_2).then$1$1(0, new A.getImageDimensions_closure(provider, completer), type$.Null).catchError$1(new A.getImageDimensions_closure0(completer));
      return t1;
    },
    getImageDimensions_closure: function getImageDimensions_closure(t0, t1) {
      this.provider = t0;
      this.completer = t1;
    },
    getImageDimensions__closure: function getImageDimensions__closure(t0) {
      this.completer = t0;
    },
    getImageDimensions__closure0: function getImageDimensions__closure0(t0) {
      this.completer = t0;
    },
    getImageDimensions__closure1: function getImageDimensions__closure1(t0, t1) {
      this.stream = t0;
      this.listener = t1;
    },
    getImageDimensions_closure0: function getImageDimensions_closure0(t0) {
      this.completer = t0;
    },
    FlyerChatTextMessage: function FlyerChatTextMessage(t0, t1, t2) {
      this.message = t0;
      this.constraints = t1;
      this.key = t2;
    },
    FlyerChatTextMessage_build_closure: function FlyerChatTextMessage_build_closure() {
    },
    TimeAndStatus2: function TimeAndStatus2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.time = t0;
      _.status = t1;
      _.showTime = t2;
      _.showStatus = t3;
      _.textStyle = t4;
      _.key = t5;
    },
    TextStreamMessageMode: function TextStreamMessageMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FlyerChatTextStreamMessage: function FlyerChatTextStreamMessage(t0, t1, t2, t3, t4) {
      var _ = this;
      _.message = t0;
      _.streamState = t1;
      _.showStatus = t2;
      _.mode = t3;
      _.key = t4;
    },
    _FlyerChatTextStreamMessageState: function _FlyerChatTextStreamMessageState(t0, t1, t2, t3) {
      var _ = this;
      _._segments = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._widget = null;
      _._debugLifecycleState = t3;
      _._framework$_element = null;
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure() {
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0(t0, t1) {
      this.$this = t0;
      this.newText = t1;
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1() {
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2() {
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure(t0) {
      this.$this = t0;
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure() {
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.controller = t1;
      _.listener = t2;
      _.newSegment = t3;
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1(t0, t1) {
      this.$this = t0;
      this.newSegment = t1;
    },
    _FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure: function _FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure(t0, t1) {
      this.$this = t0;
      this.completedSegment = t1;
    },
    _FlyerChatTextStreamMessageState_build_closure: function _FlyerChatTextStreamMessageState_build_closure() {
    },
    _FlyerChatTextStreamMessageState__buildTextContent_closure: function _FlyerChatTextStreamMessageState__buildTextContent_closure() {
    },
    _FlyerChatTextStreamMessageState__buildTextContent_closure0: function _FlyerChatTextStreamMessageState__buildTextContent_closure0(t0) {
      this.paragraphStyle = t0;
    },
    TimeAndStatus1: function TimeAndStatus1(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.time = t0;
      _.status = t1;
      _.showTime = t2;
      _.showStatus = t3;
      _.textStyle = t4;
      _.key = t5;
    },
    __FlyerChatTextStreamMessageState_State_TickerProviderStateMixin_dispose_closure: function __FlyerChatTextStreamMessageState_State_TickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __FlyerChatTextStreamMessageState_State_TickerProviderStateMixin: function __FlyerChatTextStreamMessageState_State_TickerProviderStateMixin() {
    },
    TextSegment: function TextSegment() {
    },
    StaticSegment: function StaticSegment(t0) {
      this.text = t0;
    },
    AnimatingSegment: function AnimatingSegment(t0, t1, t2) {
      this.controller = t0;
      this.fadeAnimation = t1;
      this.text = t2;
    },
    FValueNotifier: function FValueNotifier() {
    },
    FCalendar_defaultDayBuilder(__wc0_formal, data, child) {
      return child;
    },
    FCalendar$(controller, dayBuilder, end, initialMonth, initialType, onLongPress, onPress, start, style, today) {
      var t2, t3,
        t1 = initialMonth;
      t1 = A.LocalDate$_(A.DateTimes_truncate(C.DateTime$utc(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0), B.DateUnit_1));
      t2 = C.DateTime$utc(C.Primitives_getYear(start), C.Primitives_getMonth(start), C.Primitives_getDay(start), 0, 0, 0, 0, 0);
      t3 = C.DateTime$utc(C.Primitives_getYear(end), C.Primitives_getMonth(end), C.Primitives_getDay(end), 0, 0, 0, 0, 0);
      type$.LocalDate._eval$1("Orderable.T")._as(new A.LocalDate(t3));
      if (C.assertTest(D.JSInt_methods.compareTo$1(1000 * t2._core$_value + t2._microsecond, 1000 * t3._core$_value + t3._microsecond) < 0))
        C.assertThrow("end date must be greater than start date");
      return new A.FCalendar(style, controller, dayBuilder, start, end, today, onPress, onLongPress, initialType, t1, null);
    },
    FCalendar: function FCalendar(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.style = t0;
      _.controller = t1;
      _.dayBuilder = t2;
      _.start = t3;
      _.end = t4;
      _.today = t5;
      _.onPress = t6;
      _.onLongPress = t7;
      _._initialType = t8;
      _._initialMonth = t9;
      _.key = t10;
    },
    _State1: function _State1(t0) {
      var _ = this;
      _.___State__month_A = _.___State__type_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _State_build_closure0: function _State_build_closure0(t0, t1) {
      this.$this = t0;
      this.style = t1;
    },
    _State_build_closure1: function _State_build_closure1(t0, t1) {
      this.$this = t0;
      this.style = t1;
    },
    _State_build__closure2: function _State_build__closure2(t0) {
      this.$this = t0;
    },
    _State_build__closure3: function _State_build__closure3(t0) {
      this.$this = t0;
    },
    _State_build__closure0: function _State_build__closure0(t0) {
      this.$this = t0;
    },
    _State_build__closure1: function _State_build__closure1(t0) {
      this.$this = t0;
    },
    _State_build__closure: function _State_build__closure(t0) {
      this.$this = t0;
    },
    _true(__wc0_formal) {
      type$.DateTime._as(__wc0_formal);
      return true;
    },
    FCalendarController_date(initialSelection) {
      var t1;
      initialSelection = C.DateTime$utc(C.Primitives_getYear(initialSelection), C.Primitives_getMonth(initialSelection), C.Primitives_getDay(initialSelection), 0, 0, 0, 0, 0);
      t1 = new A._AutoDateController(A.calendar_controller___true$closure(), C._setArrayType([], type$.JSArray_of_void_Function_nullable_DateTime), initialSelection, $.$get$ChangeNotifier__emptyListeners());
      C.ChangeNotifier_maybeDispatchObjectCreation(t1);
      return t1;
    },
    FCalendarController: function FCalendarController() {
    },
    _AutoDateController: function _AutoDateController(t0, t1, t2, t3) {
      var _ = this;
      _._selectable = t0;
      _._notifiers$_listeners = t1;
      _._change_notifier$_value = t2;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    DayPicker: function DayPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.style = t0;
      _.localization = t1;
      _.dayBuilder = t2;
      _.month = t3;
      _.today = t4;
      _.focused = t5;
      _.selectable = t6;
      _.selected = t7;
      _.onPress = t8;
      _.onLongPress = t9;
      _.key = t10;
    },
    _DayPickerState: function _DayPickerState(t0, t1) {
      var _ = this;
      _._days = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    _GridDelegate: function _GridDelegate(t0) {
      this.tileSize = t0;
    },
    PagedDayPicker$(dayBuilder, end, initial, onLongPress, onMonthChange, onPress, selectable, selected, start, style, today) {
      return new A.PagedDayPicker(selected, onMonthChange, onPress, onLongPress, dayBuilder, style, start, end, today, initial, new A.PagedPicker_closure(start, end, selectable), null);
    },
    PagedDayPicker: function PagedDayPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.selected = t0;
      _.onMonthChange = t1;
      _.onPress = t2;
      _.onLongPress = t3;
      _.dayBuilder = t4;
      _.style = t5;
      _.start = t6;
      _.end = t7;
      _.today = t8;
      _.initial = t9;
      _.selectable = t10;
      _.key = t11;
    },
    _PagedDayPickerState: function _PagedDayPickerState(t0) {
      var _ = this;
      _._gridFocused = false;
      _.focusedDate = null;
      _.__PagedPickerState__focusNode_A = _.__PagedPickerState__actions_A = _.__PagedPickerState__key_A = _.__PagedPickerState__controller_A = _.__PagedPickerState_textDirection_A = _.__PagedPickerState_current_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _PagedDayPickerState_buildItem_closure: function _PagedDayPickerState_buildItem_closure(t0) {
      this.$this = t0;
    },
    _PagedDayPickerState_buildItem__closure: function _PagedDayPickerState_buildItem__closure(t0, t1) {
      this.$this = t0;
      this.date = t1;
    },
    _PagedDayPickerState_onPageChange_closure: function _PagedDayPickerState_onPageChange_closure(t0, t1) {
      this.$this = t0;
      this.page = t1;
    },
    _PagedDayPickerState_onGridFocusChange_closure: function _PagedDayPickerState_onGridFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    MonthPicker: function MonthPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.yearMonthStyle = t0;
      _.dayStyle = t1;
      _.currentYear = t2;
      _.start = t3;
      _.end = t4;
      _.today = t5;
      _.focused = t6;
      _.onPress = t7;
      _.key = t8;
    },
    _MonthPickerState: function _MonthPickerState(t0) {
      var _ = this;
      _.___MonthPickerState__months_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _MonthPickerState_build_closure: function _MonthPickerState_build_closure(t0) {
      this.context = t0;
    },
    PagedMonthPicker$(end, initial, onPress, start, style, today) {
      return new A.PagedMonthPicker(onPress, style, start, end, today, initial, new A.PagedPicker_closure(start, end, null), null);
    },
    PagedMonthPicker: function PagedMonthPicker(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPress = t0;
      _.style = t1;
      _.start = t2;
      _.end = t3;
      _.today = t4;
      _.initial = t5;
      _.selectable = t6;
      _.key = t7;
    },
    _PagedMonthPickerState: function _PagedMonthPickerState(t0) {
      var _ = this;
      _.focusedDate = null;
      _.__PagedPickerState__focusNode_A = _.__PagedPickerState__actions_A = _.__PagedPickerState__key_A = _.__PagedPickerState__controller_A = _.__PagedPickerState_textDirection_A = _.__PagedPickerState_current_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _PagedMonthPickerState_onGridFocusChange_closure: function _PagedMonthPickerState_onGridFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    Entry_Entry$day(current, date, dayBuilder, focusNode, localizations, onLongPress, onPress, selectable, selected, style, today) {
      var canSelect = selectable.call$1(date),
        isSelected = selected.call$1(date),
        entryStyle = current ? style.current : style.enclosing,
        t1 = new A.Entry_Entry$day_builder(isSelected, selected, date, entryStyle, dayBuilder, style, current, today, canSelect);
      return canSelect ? A._SelectableEntry$(t1, date, focusNode, onLongPress, onPress, isSelected, C.DateFormat$yMMMMd(null).format$1(date._native), entryStyle) : new A._UnselectableEntry(isSelected, entryStyle, t1, null);
    },
    Entry_Entry$yearMonth(current, date, focusNode, format, onPress, selectable, style) {
      var t1 = new A.Entry_Entry$yearMonth_builder(style, format, date, selectable, current);
      return selectable ? A._SelectableEntry$(t1, date, focusNode, null, onPress, true, format.call$1(date), style) : new A._UnselectableEntry(false, style, t1, null);
    },
    _SelectableEntry$(builder, date, focusNode, onLongPress, onPress, selected, semanticsLabel, style) {
      return new A._SelectableEntry(focusNode, date, semanticsLabel, selected, onPress, onLongPress, style, builder, null);
    },
    Entry0: function Entry0() {
    },
    Entry_Entry$day_builder: function Entry_Entry$day_builder(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.isSelected = t0;
      _.selected = t1;
      _.date = t2;
      _.entryStyle = t3;
      _.dayBuilder = t4;
      _.style = t5;
      _.current = t6;
      _.today = t7;
      _.canSelect = t8;
    },
    Entry_Entry$yearMonth_builder: function Entry_Entry$yearMonth_builder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.style = t0;
      _.format = t1;
      _.date = t2;
      _.selectable = t3;
      _.current = t4;
    },
    _SelectableEntry: function _SelectableEntry(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.focusNode = t0;
      _.date = t1;
      _.semanticsLabel = t2;
      _.selected = t3;
      _.onPress = t4;
      _.onLongPress = t5;
      _.style = t6;
      _.builder = t7;
      _.key = t8;
    },
    _SelectableEntry_build_closure0: function _SelectableEntry_build_closure0(t0) {
      this.$this = t0;
    },
    _SelectableEntry_build_closure: function _SelectableEntry_build_closure(t0) {
      this.$this = t0;
    },
    _UnselectableEntry: function _UnselectableEntry(t0, t1, t2, t3) {
      var _ = this;
      _.selected = t0;
      _.style = t1;
      _.builder = t2;
      _.key = t3;
    },
    EntryContent: function EntryContent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.style = t0;
      _.borderRadius = t1;
      _.text = t2;
      _.states = t3;
      _.current = t4;
      _.key = t5;
    },
    FCalendarPickerType: function FCalendarPickerType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Header: function Header(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.type = t1;
      _.month = t2;
      _.key = t3;
    },
    _HeaderState: function _HeaderState(t0, t1, t2) {
      var _ = this;
      _.___HeaderState__controller_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _HeaderState_build_closure0: function _HeaderState_build_closure0(t0) {
      this.$this = t0;
    },
    _HeaderState_build_closure: function _HeaderState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    Navigation: function Navigation(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.onPrevious = t1;
      _.onNext = t2;
      _.key = t3;
    },
    __HeaderState_State_SingleTickerProviderStateMixin_dispose_closure: function __HeaderState_State_SingleTickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __HeaderState_State_SingleTickerProviderStateMixin: function __HeaderState_State_SingleTickerProviderStateMixin() {
    },
    PagedPicker: function PagedPicker() {
    },
    PagedPicker_closure: function PagedPicker_closure(t0, t1, t2) {
      this.start = t0;
      this.end = t1;
      this.selectable = t2;
    },
    PagedPickerState: function PagedPickerState() {
    },
    PagedPickerState__onDirectionFocus_closure: function PagedPickerState__onDirectionFocus_closure(t0, t1) {
      this.$this = t0;
      this.intent = t1;
    },
    PagedYearPicker$(end, initial, onPress, start, style, today) {
      return new A.PagedYearPicker(onPress, style, start, end, today, initial, new A.PagedPicker_closure(start, end, null), null);
    },
    PagedYearPicker: function PagedYearPicker(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPress = t0;
      _.style = t1;
      _.start = t2;
      _.end = t3;
      _.today = t4;
      _.initial = t5;
      _.selectable = t6;
      _.key = t7;
    },
    _PagedYearPickerState: function _PagedYearPickerState(t0) {
      var _ = this;
      _.focusedDate = null;
      _.__PagedPickerState__focusNode_A = _.__PagedPickerState__actions_A = _.__PagedPickerState__key_A = _.__PagedPickerState__controller_A = _.__PagedPickerState_textDirection_A = _.__PagedPickerState_current_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _PagedYearPickerState_onGridFocusChange_closure: function _PagedYearPickerState_onGridFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _PagedYearPickerState_onPageChange_closure: function _PagedYearPickerState_onPageChange_closure(t0, t1) {
      this.$this = t0;
      this.page = t1;
    },
    YearPicker: function YearPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.yearMonthStyle = t0;
      _.dayStyle = t1;
      _.startYear = t2;
      _.start = t3;
      _.end = t4;
      _.today = t5;
      _.focused = t6;
      _.onPress = t7;
      _.key = t8;
    },
    _YearPickerState: function _YearPickerState(t0) {
      var _ = this;
      _.___YearPickerState__years_A = $;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _YearPickerState_build_closure: function _YearPickerState_build_closure(t0) {
      this.context = t0;
    },
    YearMonthPicker: function YearMonthPicker(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.style = t0;
      _.start = t1;
      _.end = t2;
      _.today = t3;
      _.month = t4;
      _.type = t5;
      _.key = t6;
    },
    _YearMonthPickerState: function _YearMonthPickerState(t0) {
      var _ = this;
      _._year = true;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _YearMonthPickerState_build_closure: function _YearMonthPickerState_build_closure(t0) {
      this.$this = t0;
    },
    _YearMonthPickerState_build__closure: function _YearMonthPickerState_build__closure(t0) {
      this.$this = t0;
    },
    _YearMonthPickerState_build_closure0: function _YearMonthPickerState_build_closure0(t0) {
      this.$this = t0;
    },
    FDialog$(actions, body, style) {
      var t1;
      switch (1) {
        case 1:
          t1 = new A.FDialog_closure(null, body, actions);
          break;
      }
      return new A.FDialog(style, t1, null);
    },
    FDialog: function FDialog(t0, t1, t2) {
      this.style = t0;
      this.builder = t1;
      this.key = t2;
    },
    FDialog_closure: function FDialog_closure(t0, t1, t2) {
      this.title = t0;
      this.body = t1;
      this.actions = t2;
    },
    Content2: function Content2() {
    },
    VerticalContent: function VerticalContent(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.style = t0;
      _.alignment = t1;
      _.title = t2;
      _.titleTextAlign = t3;
      _.body = t4;
      _.bodyTextAlign = t5;
      _.actions = t6;
      _.key = t7;
    },
    _FRootHeader: function _FRootHeader(t0, t1, t2) {
      this.suffixes = t0;
      this.title = t1;
      this.key = t2;
    },
    _FRootHeader_build_closure: function _FRootHeader_build_closure(t0) {
      this.style = t0;
    },
    CodeField: function CodeField(t0, t1, t2) {
      this.name = t0;
      this.codes = t1;
      this.key = t2;
    },
    _CodeFieldState: function _CodeFieldState(t0) {
      var _ = this;
      _._copied = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _CodeFieldState_build_closure: function _CodeFieldState_build_closure(t0) {
      this.$this = t0;
    },
    _CodeFieldState_build__closure: function _CodeFieldState_build__closure(t0) {
      this.$this = t0;
    },
    _CodeFieldState_build___closure: function _CodeFieldState_build___closure(t0) {
      this.$this = t0;
    },
    _CodeFieldState_build__closure0: function _CodeFieldState_build__closure0(t0) {
      this.$this = t0;
    },
    CustomDivider: function CustomDivider(t0, t1, t2) {
      this.color = t0;
      this.height = t1;
      this.key = t2;
    },
    RenderDivider: function RenderDivider(t0, t1, t2, t3, t4) {
      var _ = this;
      _._custom_divider$_color = t0;
      _._custom_divider$_height = t1;
      _._custom_divider$_width = t2;
      _._layoutCacheStorage = t3;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomImageError: function CustomImageError(t0) {
      this.key = t0;
    },
    RenderCustomImageError: function RenderCustomImageError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._iconColor = t0;
      _._outlineColor = t1;
      _._custom_error_image$_backgroundColor = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._layoutCacheStorage = t4;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomImageLoading: function CustomImageLoading(t0, t1) {
      this.progress = t0;
      this.key = t1;
    },
    RenderCustomImageLoading: function RenderCustomImageLoading(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._iconColor = t0;
      _._outlineColor = t1;
      _._custom_error_image$_backgroundColor = t2;
      _._progress = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomRb: function CustomRb(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.value = t1;
      _.textDirection = t2;
      _.key = t3;
    },
    CustomRb_build_closure: function CustomRb_build_closure() {
    },
    CustomCb: function CustomCb(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.value = t1;
      _.textDirection = t2;
      _.key = t3;
    },
    CustomCb_build_closure: function CustomCb_build_closure() {
    },
    BlockQuoteWidget: function BlockQuoteWidget(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.direction = t1;
      _.color = t2;
      _.width = t3;
      _.key = t4;
    },
    BlockQuotePainter: function BlockQuotePainter(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _.direction = t1;
      _.width = t2;
      _._repaint = t3;
    },
    LinkButton: function LinkButton(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.text = t0;
      _.child = t1;
      _.onPressed = t2;
      _.config = t3;
      _.color = t4;
      _.hoverColor = t5;
      _.key = t6;
    },
    _LinkButtonState: function _LinkButtonState(t0) {
      var _ = this;
      _._link_button$_isHovering = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _LinkButtonState_build_closure2: function _LinkButtonState_build_closure2(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure3: function _LinkButtonState_build_closure3(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure0: function _LinkButtonState_build_closure0(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure1: function _LinkButtonState_build_closure1(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure: function _LinkButtonState_build_closure(t0) {
      this.$this = t0;
    },
    _LinkButtonState__handleHover_closure: function _LinkButtonState__handleHover_closure(t0, t1) {
      this.$this = t0;
      this.hover = t1;
    },
    _LinkButtonState__handlePress_closure: function _LinkButtonState__handlePress_closure() {
    },
    GptMarkdownConfig$(codeBuilder, components, followLinkColor, highlightBuilder, imageBuilder, inlineComponents, latexBuilder, latexWorkaround, linkBuilder, maxLines, onLinkTap, orderedListBuilder, overflow, sourceTagBuilder, style, tableBuilder, textAlign, textDirection, textScaler, unOrderedListBuilder) {
      return new A.GptMarkdownConfig(textDirection, style, textAlign, textScaler, onLinkTap, latexWorkaround, latexBuilder, sourceTagBuilder, false, codeBuilder, orderedListBuilder, unOrderedListBuilder, maxLines, overflow, highlightBuilder, linkBuilder, imageBuilder, components, inlineComponents, tableBuilder);
    },
    GptMarkdownConfig: function GptMarkdownConfig(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.textDirection = t0;
      _.style = t1;
      _.textAlign = t2;
      _.textScaler = t3;
      _.onLinkTap = t4;
      _.latexWorkaround = t5;
      _.latexBuilder = t6;
      _.sourceTagBuilder = t7;
      _.followLinkColor = t8;
      _.codeBuilder = t9;
      _.orderedListBuilder = t10;
      _.unOrderedListBuilder = t11;
      _.maxLines = t12;
      _.overflow = t13;
      _.highlightBuilder = t14;
      _.linkBuilder = t15;
      _.imageBuilder = t16;
      _.components = t17;
      _.inlineComponents = t18;
      _.tableBuilder = t19;
    },
    SelectableAdapter: function SelectableAdapter(t0, t1, t2) {
      this.child = t0;
      this.selectedText = t1;
      this.key = t2;
    },
    _SelectableAdapter: function _SelectableAdapter(t0, t1, t2, t3) {
      var _ = this;
      _.registrar = t0;
      _.selectedText = t1;
      _.child = t2;
      _.key = t3;
    },
    _RenderSelectableAdapter: function _RenderSelectableAdapter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._selectable_adapter$_geometry = t0;
      _._selectable_adapter$_selectionColor = t1;
      _._endHandle = _._startHandle = _._selectable_adapter$_end = _._selectable_adapter$_start = null;
      _.SelectionRegistrant__registrar = t2;
      _.SelectionRegistrant__subscribedToSelectionRegistrar = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __RenderSelectableAdapter_RenderProxyBox_Selectable: function __RenderSelectableAdapter_RenderProxyBox_Selectable() {
    },
    __RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant: function __RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant() {
    },
    UnorderedListView$(bulletColor, bulletSize, child, padding, spacing, textDirection) {
      return new A.UnorderedListView(bulletSize, spacing, padding, textDirection, bulletColor, child, null);
    },
    UnorderedListView: function UnorderedListView(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.bulletSize = t0;
      _.spacing = t1;
      _.padding = t2;
      _.textDirection = t3;
      _.bulletColor = t4;
      _.child = t5;
      _.key = t6;
    },
    OrderedListView: function OrderedListView(t0, t1, t2, t3, t4) {
      var _ = this;
      _.no = t0;
      _._unordered_ordered_list$_style = t1;
      _.textDirection = t2;
      _.child = t3;
      _.key = t4;
    },
    GptMarkdown$(data, onLinkTap, style) {
      return new A.GptMarkdown(data, style, onLinkTap, null);
    },
    MarkdownComponent_generate(context, text, config, includeGlobalComponents) {
      var components, spans, t1;
      if (includeGlobalComponents)
        components = C._setArrayType([new A.CodeBlockMd(), new A.LatexMathMultiLine(), new A.NewLines(), new A.BlockQuote(), new A.TableMd(), new A.HTag(), new A.UnOrderedList(), new A.OrderedList(), new A.RadioButtonMd(), new A.CheckBoxMd(), new A.HrLine(), new A.IndentMd()], type$.JSArray_MarkdownComponent);
      else
        components = $.$get$MarkdownComponent_inlineComponents();
      spans = C._setArrayType([], type$.JSArray_InlineSpan);
      t1 = C._arrayInstanceType(components);
      C.stringReplaceAllFuncUnchecked(text, C.RegExp_RegExp(new C.MappedListIterable(components, t1._eval$1("String(1)")._as(new A.MarkdownComponent_generate_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "|"), true, true, true, false), type$.nullable_String_Function_Match._as(new A.MarkdownComponent_generate_closure0(components, spans, context, config)), type$.nullable_String_Function_String._as(new A.MarkdownComponent_generate_closure1(includeGlobalComponents, context, config, spans)));
      return spans;
    },
    LatexMathMultiLine$() {
      return new A.LatexMathMultiLine();
    },
    TableMd$() {
      return new A.TableMd();
    },
    GptMarkdownTheme_of(context) {
      var themeData, t1, t2, t3, t4,
        theme = C.Theme_of(context),
        provider = context.dependOnInheritedWidgetOfExactType$1$0(type$.GptMarkdownTheme);
      if (provider != null)
        return provider.gptThemeData;
      themeData = type$.nullable_GptMarkdownThemeData._as(theme.extensions.$index(0, C.createRuntimeType(type$.GptMarkdownThemeData)));
      if (themeData != null)
        return themeData;
      t1 = theme.textTheme;
      t2 = theme.colorScheme;
      t3 = t2._onSurfaceVariant;
      if (t3 == null)
        t3 = t2.onSurface;
      t3 = C.Color$fromARGB(50, t3.toARGB32$0() >>> 16 & 255, t3.toARGB32$0() >>> 8 & 255, t3.toARGB32$0() & 255);
      t4 = t2._outline;
      if (t4 == null) {
        t4 = t2._onBackground;
        t2 = t4 == null ? t2.onSurface : t4;
      } else
        t2 = t4;
      return new A.GptMarkdownThemeData(t3, t1.headlineLarge, t1.headlineMedium, t1.headlineSmall, t1.titleLarge, t1.titleMedium, t1.titleSmall, 1, t2, D.MaterialColor_45F, D.MaterialColor_nI1);
    },
    GptMarkdown: function GptMarkdown(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.style = t1;
      _.onLinkTap = t2;
      _.key = t3;
    },
    MarkdownComponent: function MarkdownComponent() {
    },
    MarkdownComponent_generate_closure: function MarkdownComponent_generate_closure() {
    },
    MarkdownComponent_generate_closure0: function MarkdownComponent_generate_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.components = t0;
      _.spans = t1;
      _.context = t2;
      _.config = t3;
    },
    MarkdownComponent_generate_closure1: function MarkdownComponent_generate_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.includeGlobalComponents = t0;
      _.context = t1;
      _.config = t2;
      _.spans = t3;
    },
    InlineMd: function InlineMd() {
    },
    BlockMd: function BlockMd() {
    },
    IndentMd: function IndentMd() {
    },
    HTag: function HTag() {
    },
    NewLines: function NewLines() {
    },
    HrLine: function HrLine() {
    },
    CheckBoxMd: function CheckBoxMd() {
    },
    RadioButtonMd: function RadioButtonMd() {
    },
    BlockQuote: function BlockQuote() {
    },
    UnOrderedList: function UnOrderedList() {
    },
    OrderedList: function OrderedList() {
    },
    HighlightedText: function HighlightedText() {
    },
    BoldMd: function BoldMd() {
    },
    StrikeMd: function StrikeMd() {
    },
    ItalicMd: function ItalicMd() {
    },
    LatexMathMultiLine: function LatexMathMultiLine() {
    },
    LatexMathMultiLine_build_closure: function LatexMathMultiLine_build_closure() {
    },
    LatexMathMultiLine_build_closure0: function LatexMathMultiLine_build_closure0(t0, t1, t2) {
      this.config = t0;
      this.workaround = t1;
      this.mathText = t2;
    },
    LatexMathMultiLine_build__closure: function LatexMathMultiLine_build__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.workaround = t0;
      _.mathText = t1;
      _.config = t2;
      _.textStyle = t3;
      _.context = t4;
    },
    LatexMath: function LatexMath() {
    },
    LatexMath_span_closure: function LatexMath_span_closure() {
    },
    LatexMath_span_closure0: function LatexMath_span_closure0(t0, t1, t2) {
      this.config = t0;
      this.workaround = t1;
      this.mathText = t2;
    },
    LatexMath_span__closure: function LatexMath_span__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.workaround = t0;
      _.mathText = t1;
      _.config = t2;
      _.textStyle = t3;
      _.context = t4;
    },
    SourceTag: function SourceTag() {
    },
    ATagMd: function ATagMd() {
    },
    ATagMd_span_closure: function ATagMd_span_closure(t0, t1, t2) {
      this.config = t0;
      this.url = t1;
      this.linkText = t2;
    },
    ImageMd: function ImageMd() {
    },
    ImageMd_span_closure0: function ImageMd_span_closure0() {
    },
    ImageMd_span_closure: function ImageMd_span_closure() {
    },
    TableMd: function TableMd() {
    },
    TableMd_build_closure: function TableMd_build_closure() {
    },
    TableMd_build__closure0: function TableMd_build__closure0() {
    },
    TableMd_build_closure0: function TableMd_build_closure0(t0) {
      this.separatorRow = t0;
    },
    TableMd_build_closure1: function TableMd_build_closure1(t0) {
      this.hasHeader = t0;
    },
    TableMd_build_closure2: function TableMd_build_closure2(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.hasHeader = t1;
      _.context = t2;
      _.config = t3;
    },
    TableMd_build__closure: function TableMd_build__closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.entry = t1;
      _.context = t2;
      _.config = t3;
    },
    CodeBlockMd: function CodeBlockMd() {
    },
    UnderLineMd: function UnderLineMd() {
    },
    MdWidget: function MdWidget(t0, t1, t2, t3, t4) {
      var _ = this;
      _.exp = t0;
      _.context = t1;
      _.includeGlobalComponents = t2;
      _.config = t3;
      _.key = t4;
    },
    _MdWidgetState: function _MdWidgetState(t0, t1) {
      var _ = this;
      _.list = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    CustomTableColumnWidth: function CustomTableColumnWidth() {
    },
    GptMarkdownThemeData: function GptMarkdownThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.highlightColor = t0;
      _.h1 = t1;
      _.h2 = t2;
      _.h3 = t3;
      _.h4 = t4;
      _.h5 = t5;
      _.h6 = t6;
      _.hrLineThickness = t7;
      _.hrLineColor = t8;
      _.linkColor = t9;
      _.linkHoverColor = t10;
    },
    GptMarkdownTheme: function GptMarkdownTheme(t0, t1, t2) {
      this.gptThemeData = t0;
      this.child = t1;
      this.key = t2;
    },
    ChannelIterator: function ChannelIterator(t0) {
      this.index = -1;
      this.color = t0;
    },
    ChannelOrder: function ChannelOrder(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ColorFloat16: function ColorFloat16(t0) {
      this.data = t0;
    },
    ColorFloat32: function ColorFloat32(t0) {
      this.data = t0;
    },
    ColorFloat64: function ColorFloat64(t0) {
      this.data = t0;
    },
    ColorInt16: function ColorInt16(t0) {
      this.data = t0;
    },
    ColorInt32: function ColorInt32(t0) {
      this.data = t0;
    },
    ColorInt8: function ColorInt8(t0) {
      this.data = t0;
    },
    ColorUint1: function ColorUint1(t0, t1) {
      this.length = t0;
      this.__ColorUint1_data_A = t1;
    },
    ColorUint16: function ColorUint16(t0) {
      this.data = t0;
    },
    ColorUint2: function ColorUint2(t0, t1) {
      this.length = t0;
      this.__ColorUint2_data_A = t1;
    },
    ColorUint32: function ColorUint32(t0) {
      this.data = t0;
    },
    ColorUint4: function ColorUint4(t0, t1) {
      this.length = t0;
      this.data = t1;
    },
    ColorUint8: function ColorUint8(t0) {
      this.data = t0;
    },
    ConstColorUint8: function ConstColorUint8(t0) {
      this.data = t0;
    },
    ConstColorRgb8: function ConstColorRgb8(t0) {
      this.data = t0;
    },
    convertFormatValue(value, from, to) {
      var t1;
      if (from === to)
        return value;
      switch (from.index) {
        case 0:
          if (value === 0)
            t1 = 0;
          else {
            t1 = B.Map_vw3Ow.$index(0, to);
            t1.toString;
          }
          return t1;
        case 1:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return value;
            case 2:
              return value * 5;
            case 3:
              return value * 75;
            case 4:
              return value * 21845;
            case 5:
              return value * 1431655765;
            case 6:
              return value * 42;
            case 7:
              return value * 10922;
            case 8:
              return value * 715827882;
            case 9:
            case 10:
            case 11:
              return value / 3;
          }
          break;
        case 2:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 1);
            case 2:
              return value;
            case 3:
              return value * 17;
            case 4:
              return value * 4369;
            case 5:
              return value * 286331153;
            case 6:
              return value * 8;
            case 7:
              return value * 2184;
            case 8:
              return value * 143165576;
            case 9:
            case 10:
            case 11:
              return value / 3;
          }
          break;
        case 3:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 6);
            case 2:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 4);
            case 3:
              return value;
            case 4:
              return value * 257;
            case 5:
              return value * 16843009;
            case 6:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 1);
            case 7:
              return value * 128;
            case 8:
              return value * 8421504;
            case 9:
            case 10:
            case 11:
              return value / 255;
          }
          break;
        case 4:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 14);
            case 2:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 12);
            case 3:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 8);
            case 4:
              return value;
            case 5:
              return C._asInt(value) << 8 >>> 0;
            case 6:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 9);
            case 7:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 1);
            case 8:
              return value * 524296;
            case 9:
            case 10:
            case 11:
              return value / 65535;
          }
          break;
        case 5:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 30);
            case 2:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 28);
            case 3:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 24);
            case 4:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 16);
            case 5:
              return value;
            case 6:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 25);
            case 7:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 17);
            case 8:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 1);
            case 9:
            case 10:
            case 11:
              return value / 4294967295;
          }
          break;
        case 6:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 5);
            case 2:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 3);
            case 3:
              return value <= 0 ? 0 : C._asInt(value) << 1 >>> 0;
            case 4:
              return value <= 0 ? 0 : C._asInt(value) * 516;
            case 5:
              return value <= 0 ? 0 : C._asInt(value) * 33818640;
            case 6:
              return value;
            case 7:
              return value * 258;
            case 8:
              return value * 16909320;
            case 9:
            case 10:
            case 11:
              return value / 127;
          }
          break;
        case 7:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 15);
            case 2:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 11);
            case 3:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 7);
            case 4:
              return value <= 0 ? 0 : C._asInt(value) << 1 >>> 0;
            case 5:
              return value <= 0 ? 0 : C._asInt(value) * 131076;
            case 6:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 8);
            case 7:
              return value;
            case 8:
              return C._asInt(value) * 65538;
            case 9:
            case 10:
            case 11:
              return value / 32767;
          }
          break;
        case 8:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 29);
            case 2:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 27);
            case 3:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 23);
            case 4:
              return value <= 0 ? 0 : D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 16);
            case 5:
              return value <= 0 ? 0 : C._asInt(value) << 1 >>> 0;
            case 6:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 24);
            case 7:
              return D.JSInt_methods._shrOtherPositive$1(C._asInt(value), 16);
            case 8:
              return value;
            case 9:
            case 10:
            case 11:
              return value / 2147483647;
          }
          break;
        case 9:
        case 10:
        case 11:
          switch (to.index) {
            case 0:
              return value === 0 ? 0 : 1;
            case 1:
              return D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(value, 0, 1) * 3);
            case 2:
              return D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(value, 0, 1) * 15);
            case 3:
              return D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(value, 0, 1) * 255);
            case 4:
              return D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(value, 0, 1) * 65535);
            case 5:
              return D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(value, 0, 1) * 4294967295);
            case 6:
              return D.JSNumber_methods.toInt$0(value < 0 ? D.JSNumber_methods.clamp$2(value, -1, 1) * 128 : D.JSNumber_methods.clamp$2(value, -1, 1) * 127);
            case 7:
              return D.JSNumber_methods.toInt$0(value < 0 ? D.JSNumber_methods.clamp$2(value, -1, 1) * 32768 : D.JSNumber_methods.clamp$2(value, -1, 1) * 32767);
            case 8:
              return D.JSNumber_methods.toInt$0(value < 0 ? D.JSNumber_methods.clamp$2(value, -1, 1) * 2147483648 : D.JSNumber_methods.clamp$2(value, -1, 1) * 2147483647);
            case 9:
            case 10:
            case 11:
              return value;
          }
          break;
      }
    },
    Format: function Format(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ExifData: function ExifData(t0) {
      this.directories = t0;
    },
    ExifTag$($name, type, count) {
      return new A.ExifTag($name, type);
    },
    ExifTag: function ExifTag(t0, t1) {
      this.name = t0;
      this.type = t1;
    },
    IfdContainer: function IfdContainer(t0) {
      this.directories = t0;
    },
    IfdDirectory: function IfdDirectory(t0, t1) {
      this.data = t0;
      this.sub = t1;
    },
    IfdValueType: function IfdValueType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    IfdValue: function IfdValue() {
    },
    IfdValueLong: function IfdValueLong(t0) {
      this.value = t0;
    },
    Encoder: function Encoder() {
    },
    JpegChroma: function JpegChroma(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    JpegEncoder: function JpegEncoder(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._yTable = t0;
      _._uvTable = t1;
      _._fdtblY = t2;
      _._fdtblUv = t3;
      _._uvdcHuffman = _._ydcHuffman = null;
      _.__JpegEncoder__uvacHuffman_A = _.__JpegEncoder__yacHuffman_A = $;
      _._bitCode = t4;
      _._category = t5;
      _._outputfDCTQuant = t6;
      _._du = t7;
      _._rgbYuvTable = t8;
      _._currentQuality = null;
      _._byteNew = 0;
      _._bytePos = 7;
    },
    FrameType: function FrameType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Image0: function Image0() {
      this._exif = this.data = null;
      this.__Image_frames_AI = $;
    },
    ImageData1: function ImageData1() {
    },
    ImageDataFloat16: function ImageDataFloat16(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataFloat32: function ImageDataFloat32(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataFloat64: function ImageDataFloat64(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataInt16: function ImageDataInt16(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataInt32: function ImageDataInt32(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataInt8: function ImageDataInt8(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataUint1: function ImageDataUint1(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__ImageDataUint1_data_F = $;
      _.rowStride = t0;
      _.palette = t1;
      _.width = t2;
      _.height = t3;
      _.numChannels = t4;
    },
    ImageDataUint16: function ImageDataUint16(t0, t1, t2, t3, t4) {
      var _ = this;
      _.data = t0;
      _.palette = t1;
      _.width = t2;
      _.height = t3;
      _.numChannels = t4;
    },
    ImageDataUint2: function ImageDataUint2(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__ImageDataUint2_data_F = $;
      _.rowStride = t0;
      _.palette = t1;
      _.width = t2;
      _.height = t3;
      _.numChannels = t4;
    },
    ImageDataUint32: function ImageDataUint32(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.width = t1;
      _.height = t2;
      _.numChannels = t3;
    },
    ImageDataUint4: function ImageDataUint4(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__ImageDataUint4_data_F = $;
      _.rowStride = t0;
      _.palette = t1;
      _.width = t2;
      _.height = t3;
      _.numChannels = t4;
    },
    ImageDataUint8: function ImageDataUint8(t0, t1, t2, t3, t4) {
      var _ = this;
      _.data = t0;
      _.palette = t1;
      _.width = t2;
      _.height = t3;
      _.numChannels = t4;
    },
    PixelFloat16$imageData(image) {
      return new A.PixelFloat16(-1, 0, -image.numChannels, image);
    },
    PixelFloat16: function PixelFloat16(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_float16$_x = t0;
      _._pixel_float16$_y = t1;
      _._pixel_float16$_index = t2;
      _.image = t3;
    },
    PixelFloat32$imageData(image) {
      return new A.PixelFloat32(-1, 0, -image.numChannels, image);
    },
    PixelFloat32: function PixelFloat32(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_float32$_x = t0;
      _._pixel_float32$_y = t1;
      _._pixel_float32$_index = t2;
      _.image = t3;
    },
    PixelFloat64$imageData(image) {
      return new A.PixelFloat64(-1, 0, -image.numChannels, image);
    },
    PixelFloat64: function PixelFloat64(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_float64$_x = t0;
      _._pixel_float64$_y = t1;
      _._pixel_float64$_index = t2;
      _.image = t3;
    },
    PixelInt16$imageData(image) {
      return new A.PixelInt16(-1, 0, -image.numChannels, image);
    },
    PixelInt16: function PixelInt16(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_int16$_x = t0;
      _._pixel_int16$_y = t1;
      _._pixel_int16$_index = t2;
      _.image = t3;
    },
    PixelInt32$imageData(image) {
      return new A.PixelInt32(-1, 0, -image.numChannels, image);
    },
    PixelInt32: function PixelInt32(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_int32$_x = t0;
      _._pixel_int32$_y = t1;
      _._pixel_int32$_index = t2;
      _.image = t3;
    },
    PixelInt8$imageData(image) {
      return new A.PixelInt8(-1, 0, -image.numChannels, image);
    },
    PixelInt8: function PixelInt8(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_int8$_x = t0;
      _._pixel_int8$_y = t1;
      _._pixel_int8$_index = t2;
      _.image = t3;
    },
    PixelUint1$imageData(image) {
      return new A.PixelUint1(-1, 0, 0, -1, 0, image);
    },
    PixelUint1: function PixelUint1(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pixel_uint1$_x = t0;
      _._pixel_uint1$_y = t1;
      _._pixel_uint1$_index = t2;
      _._pixel_uint1$_bitIndex = t3;
      _._pixel_uint1$_rowOffset = t4;
      _.image = t5;
    },
    PixelUint16$imageData(image) {
      return new A.PixelUint16(-1, 0, -image.numChannels, image);
    },
    PixelUint16: function PixelUint16(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_uint16$_x = t0;
      _._pixel_uint16$_y = t1;
      _._pixel_uint16$_index = t2;
      _.image = t3;
    },
    PixelUint2$imageData(image) {
      return new A.PixelUint2(-1, 0, 0, -2, 0, image);
    },
    PixelUint2: function PixelUint2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pixel_uint2$_x = t0;
      _._pixel_uint2$_y = t1;
      _._pixel_uint2$_index = t2;
      _._pixel_uint2$_bitIndex = t3;
      _._rowOffset = t4;
      _.image = t5;
    },
    PixelUint32$imageData(image) {
      return new A.PixelUint32(-1, 0, -image.numChannels, image);
    },
    PixelUint32: function PixelUint32(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_uint32$_x = t0;
      _._pixel_uint32$_y = t1;
      _._pixel_uint32$_index = t2;
      _.image = t3;
    },
    PixelUint4$imageData(image) {
      return new A.PixelUint4(-1, 0, 0, -(image.numChannels << 2 >>> 0), image);
    },
    PixelUint4: function PixelUint4(t0, t1, t2, t3, t4) {
      var _ = this;
      _._pixel_uint4$_x = t0;
      _._pixel_uint4$_y = t1;
      _._pixel_uint4$_index = t2;
      _._bitIndex = t3;
      _.image = t4;
    },
    PixelUint8$imageData(image) {
      return new A.PixelUint8(-1, 0, -image.numChannels, image);
    },
    PixelUint8: function PixelUint8(t0, t1, t2, t3) {
      var _ = this;
      _._pixel_uint8$_x = t0;
      _._pixel_uint8$_y = t1;
      _._pixel_uint8$_index = t2;
      _.image = t3;
    },
    PixelUndefined: function PixelUndefined() {
    },
    ImageException: function ImageException(t0) {
      this.message = t0;
    },
    OutputBuffer$(bigEndian) {
      return new A.OutputBuffer(bigEndian, new Uint8Array(8192));
    },
    OutputBuffer: function OutputBuffer(t0, t1) {
      this.length = 0;
      this.bigEndian = t0;
      this._output_buffer$_buffer = t1;
    },
    SingleChildStatelessElement$(widget) {
      var t1 = new A.SingleChildStatelessElement(null, widget, D._ElementLifecycle_0, C.HashSet_HashSet(type$.Element));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Element_rqC.toString$0(0), "package:flutter/widgets.dart", t1);
      return t1;
    },
    SingleChildStatefulElement$(widget) {
      var t1 = new A.SingleChildStatefulElement(null, widget.createState$0(), widget, D._ElementLifecycle_0, C.HashSet_HashSet(type$.Element));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Element_rqC.toString$0(0), "package:flutter/widgets.dart", t1);
      t1.StatefulElement$1(widget);
      return t1;
    },
    Nested: function Nested() {
    },
    _NestedElement: function _NestedElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.nodes = t0;
      _.SingleChildWidgetElementMixin__parent = t1;
      _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t2;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    },
    _NestedHook: function _NestedHook(t0, t1, t2, t3) {
      var _ = this;
      _.wrappedWidget = t0;
      _.injectedChild = t1;
      _.owner = t2;
      _.key = t3;
    },
    _NestedHookElement: function _NestedHookElement(t0, t1, t2) {
      var _ = this;
      _._framework$_child = _._wrappedChild = _._injectedChild = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t0;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t1;
      _._debugForgottenChildrenWithGlobalKey = t2;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    },
    _NestedHookElement_injectedChild_closure: function _NestedHookElement_injectedChild_closure() {
    },
    SingleChildWidgetElementMixin: function SingleChildWidgetElementMixin() {
    },
    _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure: function _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure(t0) {
      this.$this = t0;
    },
    _SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure: function _SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure(t0) {
      this.$this = t0;
    },
    __NestedElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure: function __NestedElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure(t0) {
      this.$this = t0;
    },
    SingleChildStatelessWidget: function SingleChildStatelessWidget() {
    },
    SingleChildStatelessElement: function SingleChildStatelessElement(t0, t1, t2, t3) {
      var _ = this;
      _.SingleChildWidgetElementMixin__parent = t0;
      _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    },
    SingleChildStatefulWidget: function SingleChildStatefulWidget() {
    },
    SingleChildState: function SingleChildState() {
    },
    SingleChildStatefulElement: function SingleChildStatefulElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.SingleChildWidgetElementMixin__parent = t0;
      _._framework$_state = t1;
      _._didChangeDependencies = false;
      _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t2;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t3;
      _._debugForgottenChildrenWithGlobalKey = t4;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
    },
    SingleChildBuilder: function SingleChildBuilder(t0, t1, t2) {
      this.builder = t0;
      this._nested$_child = t1;
      this.key = t2;
    },
    _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin: function _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin() {
    },
    _SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin: function _SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin() {
    },
    __NestedElement_StatelessElement_SingleChildWidgetElementMixin: function __NestedElement_StatelessElement_SingleChildWidgetElementMixin() {
    },
    isCubicCommand(command) {
      return command === B.SvgPathSegType_6 || command === B.SvgPathSegType_7 || command === B.SvgPathSegType_16 || command === B.SvgPathSegType_17;
    },
    isQuadraticCommand(command) {
      return command === B.SvgPathSegType_8 || command === B.SvgPathSegType_9 || command === B.SvgPathSegType_18 || command === B.SvgPathSegType_19;
    },
    PathSegmentData$() {
      return new A.PathSegmentData(B.SvgPathSegType_0, B._PathOffset_0_0, B._PathOffset_0_0, B._PathOffset_0_0);
    },
    _PathOffset: function _PathOffset(t0, t1) {
      this.dx = t0;
      this.dy = t1;
    },
    SvgPathStringSource: function SvgPathStringSource(t0, t1, t2) {
      var _ = this;
      _._path_parsing$_string = t0;
      _._previousCommand = t1;
      _._idx = 0;
      _._path_parsing$_length = t2;
    },
    PathSegmentData: function PathSegmentData(t0, t1, t2, t3) {
      var _ = this;
      _.command = t0;
      _.targetPoint = t1;
      _.point1 = t2;
      _.point2 = t3;
      _.arcLarge = _.arcSweep = false;
    },
    SvgPathNormalizer: function SvgPathNormalizer(t0, t1, t2, t3) {
      var _ = this;
      _._currentPoint = t0;
      _._subPathPoint = t1;
      _._controlPoint = t2;
      _._lastCommand = t3;
    },
    SvgPathSegType: function SvgPathSegType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Context1: function Context1(t0, t1) {
      this.buffer = t0;
      this.position = t1;
    },
    ParserException: function ParserException(t0) {
      this.failure = t0;
    },
    Parser: function Parser() {
    },
    Result: function Result() {
    },
    Success: function Success(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.buffer = t1;
      _.position = t2;
      _.$ti = t3;
    },
    Failure: function Failure(t0, t1, t2) {
      this.message = t0;
      this.buffer = t1;
      this.position = t2;
    },
    Token_lineAndColumnOf(buffer, position) {
      var t1, line, offset, t2, offset0;
      for (t1 = new A.MatchesIterable(new A.TokenParser($.$get$Token__newlineParser(), type$.TokenParser_String), buffer, 0, false, type$.MatchesIterable_Token_String).get$iterator(0), line = 1, offset = 0; t1.moveNext$0(); offset = offset0) {
        t2 = t1.__MatchesIterator_current_A;
        t2 === $ && C.throwLateFieldNI("current");
        offset0 = t2.stop;
        if (position < offset0)
          return C._setArrayType([line, position - offset + 1], type$.JSArray_int);
        ++line;
      }
      return C._setArrayType([line, position - offset + 1], type$.JSArray_int);
    },
    Token_positionString(buffer, position) {
      var lineAndColumn = A.Token_lineAndColumnOf(buffer, position);
      return "" + lineAndColumn[0] + ":" + lineAndColumn[1];
    },
    Token0: function Token0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.buffer = t1;
      _.start = t2;
      _.stop = t3;
      _.$ti = t4;
    },
    _throwUnsupported() {
      return C.throwExpression(C.UnsupportedError$("Unsupported operation on parser reference"));
    },
    ReferenceParser: function ReferenceParser(t0, t1, t2) {
      this.$function = t0;
      this.$arguments = t1;
      this.$ti = t2;
    },
    MatchesIterable: function MatchesIterable(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parser = t0;
      _.input = t1;
      _.start = t2;
      _.overlapping = t3;
      _.$ti = t4;
    },
    MatchesIterator: function MatchesIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parser = t0;
      _.input = t1;
      _.overlapping = t2;
      _.start = t3;
      _.__MatchesIterator_current_A = $;
      _.$ti = t4;
    },
    FlattenParser: function FlattenParser(t0, t1) {
      this.message = t0;
      this.delegate = t1;
    },
    MapParserExtension_map(_this, callback, hasSideEffects, $R, $S) {
      return new A.MapParser(callback, false, _this, $R._eval$1("@<0>")._bind$1($S)._eval$1("MapParser<1,2>"));
    },
    MapParser: function MapParser(t0, t1, t2, t3) {
      var _ = this;
      _.callback = t0;
      _.hasSideEffects = t1;
      _.delegate = t2;
      _.$ti = t3;
    },
    TokenParser: function TokenParser(t0, t1) {
      this.delegate = t0;
      this.$ti = t1;
    },
    char(char, message) {
      var t1 = A.toCharCode(char),
        t2 = type$.CodeUnits;
      t2 = new C.MappedListIterable(new C.CodeUnits(char), t2._eval$1("String(ListBase.E)")._as(A.code___toFormattedChar$closure()), t2._eval$1("MappedListIterable<ListBase.E,String>")).join$0(0);
      return new A.SingleCharacterParser(new A.SingleCharPredicate(t1), '"' + t2 + '" expected');
    },
    SingleCharPredicate: function SingleCharPredicate(t0) {
      this.value = t0;
    },
    ConstantCharPredicate: function ConstantCharPredicate(t0) {
      this.constant = t0;
    },
    LookupCharPredicate: function LookupCharPredicate(t0, t1, t2) {
      this.start = t0;
      this.stop = t1;
      this.bits = t2;
    },
    NotCharacterPredicate: function NotCharacterPredicate(t0) {
      this.predicate = t0;
    },
    optimizedRanges(ranges) {
      var mergedRanges, t1, _i, thisRange, lastRange, t2, t3, matchingCount,
        sortedRanges = C.List_List$of(type$.Iterable_RangeCharPredicate._as(ranges), false, type$.RangeCharPredicate);
      D.JSArray_methods.sort$1(sortedRanges, new A.optimizedRanges_closure());
      mergedRanges = C._setArrayType([], type$.JSArray_RangeCharPredicate);
      for (t1 = sortedRanges.length, _i = 0; _i < t1; ++_i) {
        thisRange = sortedRanges[_i];
        if (mergedRanges.length === 0)
          D.JSArray_methods.add$1(mergedRanges, thisRange);
        else {
          lastRange = D.JSArray_methods.get$last(mergedRanges);
          if (lastRange.stop + 1 >= thisRange.start) {
            t2 = lastRange.start;
            t3 = thisRange.stop;
            if (C.assertTest(t2 <= t3))
              C.assertThrow("Invalid range character range: " + t2 + "-" + t3);
            D.JSArray_methods.$indexSet(mergedRanges, mergedRanges.length - 1, new A.RangeCharPredicate(t2, t3));
          } else
            D.JSArray_methods.add$1(mergedRanges, thisRange);
        }
      }
      matchingCount = D.JSArray_methods.fold$1$2(mergedRanges, 0, new A.optimizedRanges_closure0(), type$.int);
      if (matchingCount === 0)
        return B.ConstantCharPredicate_false;
      else if (matchingCount - 1 === 65535)
        return B.ConstantCharPredicate_true;
      else {
        t1 = mergedRanges.length;
        if (t1 === 1) {
          if (0 >= t1)
            return C.ioore(mergedRanges, 0);
          t1 = mergedRanges[0];
          t2 = t1.start;
          return t2 === t1.stop ? new A.SingleCharPredicate(t2) : t1;
        } else {
          t1 = D.JSArray_methods.get$first(mergedRanges);
          t2 = D.JSArray_methods.get$last(mergedRanges);
          t3 = D.JSInt_methods._shrOtherPositive$1(D.JSArray_methods.get$last(mergedRanges).stop - D.JSArray_methods.get$first(mergedRanges).start + 1 + 31, 5);
          t1 = new A.LookupCharPredicate(t1.start, t2.stop, new Uint32Array(t3));
          t1.LookupCharPredicate$1(mergedRanges);
          return t1;
        }
      }
    },
    optimizedRanges_closure: function optimizedRanges_closure() {
    },
    optimizedRanges_closure0: function optimizedRanges_closure0() {
    },
    pattern(element, message) {
      var t2,
        t1 = $.$get$_pattern().parseOn$1(new A.Context1(element, 0));
      t1 = t1.get$value(t1);
      if (message == null) {
        t2 = type$.CodeUnits;
        t2 = "[" + new C.MappedListIterable(new C.CodeUnits(element), t2._eval$1("String(ListBase.E)")._as(A.code___toFormattedChar$closure()), t2._eval$1("MappedListIterable<ListBase.E,String>")).join$0(0) + "] expected";
      } else
        t2 = message;
      return new A.SingleCharacterParser(t1, t2);
    },
    _single_closure: function _single_closure() {
    },
    _range_closure: function _range_closure() {
    },
    _pattern_closure: function _pattern_closure() {
    },
    CharacterPredicate: function CharacterPredicate() {
    },
    RangeCharPredicate: function RangeCharPredicate(t0, t1) {
      this.start = t0;
      this.stop = t1;
    },
    WhitespaceCharPredicate: function WhitespaceCharPredicate() {
    },
    ChoiceIterableExtension_toChoiceParser(_this, failureJoiner, $R) {
      var t1;
      if (C.assertTest(_this.length !== 0))
        C.assertThrow("Choice parser cannot be empty");
      t1 = failureJoiner == null ? A.failure_joiner__selectLast$closure() : failureJoiner;
      return new A.ChoiceParser(t1, C.List_List$of(_this, false, $R._eval$1("Parser<0>")), $R._eval$1("ChoiceParser<0>"));
    },
    ChoiceParser$(children, failureJoiner, $R) {
      var t1;
      if (C.assertTest(children.length !== 0))
        C.assertThrow("Choice parser cannot be empty");
      t1 = failureJoiner == null ? A.failure_joiner__selectLast$closure() : failureJoiner;
      return new A.ChoiceParser(t1, C.List_List$of(children, false, $R._eval$1("Parser<0>")), $R._eval$1("ChoiceParser<0>"));
    },
    ChoiceParser: function ChoiceParser(t0, t1, t2) {
      this.failureJoiner = t0;
      this.children = t1;
      this.$ti = t2;
    },
    DelegateParser: function DelegateParser() {
    },
    seq2(parser1, parser2, R1, R2) {
      return new A.SequenceParser2(parser1, parser2, R1._eval$1("@<0>")._bind$1(R2)._eval$1("SequenceParser2<1,2>"));
    },
    SequenceParser2$(parser1, parser2, R1, R2) {
      return new A.SequenceParser2(parser1, parser2, R1._eval$1("@<0>")._bind$1(R2)._eval$1("SequenceParser2<1,2>"));
    },
    RecordParserExtension2_map2(_this, callback, T1, T2, $R) {
      return A.MapParserExtension_map(_this, new A.RecordParserExtension2_map2_closure(callback, T1, T2, $R), false, T1._eval$1("@<0>")._bind$1(T2)._eval$1("+(1,2)"), $R);
    },
    SequenceParser2: function SequenceParser2(t0, t1, t2) {
      this.parser1 = t0;
      this.parser2 = t1;
      this.$ti = t2;
    },
    RecordParserExtension2_map2_closure: function RecordParserExtension2_map2_closure(t0, t1, t2, t3) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.R = t3;
    },
    seq3(parser1, parser2, parser3, R1, R2, R3) {
      return new A.SequenceParser3(parser1, parser2, parser3, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._eval$1("SequenceParser3<1,2,3>"));
    },
    SequenceParser3$(parser1, parser2, parser3, R1, R2, R3) {
      return new A.SequenceParser3(parser1, parser2, parser3, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._eval$1("SequenceParser3<1,2,3>"));
    },
    RecordParserExtension3_map3(_this, callback, T1, T2, T3, $R) {
      return A.MapParserExtension_map(_this, new A.RecordParserExtension3_map3_closure(callback, T1, T2, T3, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._eval$1("+(1,2,3)"), $R);
    },
    SequenceParser3: function SequenceParser3(t0, t1, t2, t3) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.$ti = t3;
    },
    RecordParserExtension3_map3_closure: function RecordParserExtension3_map3_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.R = t4;
    },
    seq4(parser1, parser2, parser3, parser4, R1, R2, R3, R4) {
      return new A.SequenceParser4(parser1, parser2, parser3, parser4, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._bind$1(R4)._eval$1("SequenceParser4<1,2,3,4>"));
    },
    RecordParserExtension4_map4(_this, callback, T1, T2, T3, T4, $R) {
      return A.MapParserExtension_map(_this, new A.RecordParserExtension4_map4_closure(callback, T1, T2, T3, T4, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._bind$1(T4)._eval$1("+(1,2,3,4)"), $R);
    },
    SequenceParser4: function SequenceParser4(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.parser4 = t3;
      _.$ti = t4;
    },
    RecordParserExtension4_map4_closure: function RecordParserExtension4_map4_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.T4 = t4;
      _.R = t5;
    },
    seq5(parser1, parser2, parser3, parser4, parser5, R1, R2, R3, R4, R5) {
      return new A.SequenceParser5(parser1, parser2, parser3, parser4, parser5, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._bind$1(R4)._bind$1(R5)._eval$1("SequenceParser5<1,2,3,4,5>"));
    },
    RecordParserExtension5_map5(_this, callback, T1, T2, T3, T4, T5, $R) {
      return A.MapParserExtension_map(_this, new A.RecordParserExtension5_map5_closure(callback, T1, T2, T3, T4, T5, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._bind$1(T4)._bind$1(T5)._eval$1("+(1,2,3,4,5)"), $R);
    },
    SequenceParser5: function SequenceParser5(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.parser4 = t3;
      _.parser5 = t4;
      _.$ti = t5;
    },
    RecordParserExtension5_map5_closure: function RecordParserExtension5_map5_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.T4 = t4;
      _.T5 = t5;
      _.R = t6;
    },
    RecordParserExtension8_map8(_this, callback, T1, T2, T3, T4, T5, T6, T7, T8, $R) {
      return A.MapParserExtension_map(_this, new A.RecordParserExtension8_map8_closure(callback, T1, T2, T3, T4, T5, T6, T7, T8, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._bind$1(T4)._bind$1(T5)._bind$1(T6)._bind$1(T7)._bind$1(T8)._eval$1("+(1,2,3,4,5,6,7,8)"), $R);
    },
    SequenceParser8: function SequenceParser8(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.parser4 = t3;
      _.parser5 = t4;
      _.parser6 = t5;
      _.parser7 = t6;
      _.parser8 = t7;
      _.$ti = t8;
    },
    RecordParserExtension8_map8_closure: function RecordParserExtension8_map8_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.T4 = t4;
      _.T5 = t5;
      _.T6 = t6;
      _.T7 = t7;
      _.T8 = t8;
      _.R = t9;
    },
    ListParser: function ListParser() {
    },
    OptionalParserExtension_optional(_this, $R) {
      return new A.OptionalParser(null, _this, $R._eval$1("OptionalParser<0?>"));
    },
    OptionalParser: function OptionalParser(t0, t1, t2) {
      this.otherwise = t0;
      this.delegate = t1;
      this.$ti = t2;
    },
    SkipParser: function SkipParser(t0, t1, t2, t3) {
      var _ = this;
      _.before = t0;
      _.after = t1;
      _.delegate = t2;
      _.$ti = t3;
    },
    EpsilonParser: function EpsilonParser(t0, t1) {
      this.result = t0;
      this.$ti = t1;
    },
    NewlineParser: function NewlineParser(t0) {
      this.message = t0;
    },
    any() {
      return new A.AnyCharacterParser("input expected");
    },
    AnyCharacterParser: function AnyCharacterParser(t0) {
      this.message = t0;
    },
    SingleCharacterParser: function SingleCharacterParser(t0, t1) {
      this.predicate = t0;
      this.message = t1;
    },
    PredicateParser: function PredicateParser(t0, t1, t2) {
      this.length = t0;
      this.predicate = t1;
      this.message = t2;
    },
    PredicateStringExtension_toParser(_this) {
      var t1 = _this.length;
      if (t1 === 0)
        return new A.EpsilonParser(_this, type$.EpsilonParser_String);
      else if (t1 === 1) {
        t1 = A.char(_this, null);
        return t1;
      } else {
        t1 = A.string(_this, null);
        return t1;
      }
    },
    string(element, message) {
      var t1 = element.length;
      if (C.assertTest(t1 > 0))
        C.assertThrow("length must be positive");
      return new A.PredicateParser(t1, new A.string_closure(element), '"' + element + '" expected');
    },
    string_closure: function string_closure(t0) {
      this.element = t0;
    },
    RepeatingCharacterParserExtension_repeatString(_this, min, max, message) {
      return A.RepeatingCharacterParser$(_this.predicate, message, min, max);
    },
    RepeatingCharacterParser$(predicate, message, min, max) {
      if (C.assertTest(min <= max))
        C.assertThrow("max must be at least " + min + ", but got " + max);
      return new A.RepeatingCharacterParser(predicate, message, min, max);
    },
    RepeatingCharacterParser: function RepeatingCharacterParser(t0, t1, t2, t3) {
      var _ = this;
      _.predicate = t0;
      _.message = t1;
      _.min = t2;
      _.max = t3;
    },
    LazyRepeatingParser$(parser, limit, min, max, $R) {
      if (C.assertTest(min <= max))
        C.assertThrow("max must be at least " + min + ", but got " + max);
      return new A.LazyRepeatingParser(limit, min, max, parser, $R._eval$1("LazyRepeatingParser<0>"));
    },
    LazyRepeatingParser: function LazyRepeatingParser(t0, t1, t2, t3, t4) {
      var _ = this;
      _.limit = t0;
      _.min = t1;
      _.max = t2;
      _.delegate = t3;
      _.$ti = t4;
    },
    LimitedRepeatingParser: function LimitedRepeatingParser() {
    },
    PossessiveRepeatingParserExtension_star(_this, $R) {
      return A.PossessiveRepeatingParserExtension_repeat(_this, 0, 9007199254740991, $R);
    },
    PossessiveRepeatingParserExtension_repeat(_this, min, max, $R) {
      if (C.assertTest(min <= max))
        C.assertThrow("max must be at least " + min + ", but got " + max);
      return new A.PossessiveRepeatingParser(min, max, _this, $R._eval$1("PossessiveRepeatingParser<0>"));
    },
    PossessiveRepeatingParser: function PossessiveRepeatingParser(t0, t1, t2, t3) {
      var _ = this;
      _.min = t0;
      _.max = t1;
      _.delegate = t2;
      _.$ti = t3;
    },
    RepeatingParser: function RepeatingParser() {
    },
    ChangeNotifierProvider$(create, $T) {
      var _null = null;
      return new A.ChangeNotifierProvider(new A._CreateInheritedProvider(create, _null, _null, _null, A.listenable_provider_ListenableProvider__startListening$closure(), A.change_notifier_provider_ChangeNotifierProvider__dispose$closure(), $T._eval$1("_CreateInheritedProvider<0>")), _null, _null, _null, _null, $T._eval$1("ChangeNotifierProvider<0>"));
    },
    ChangeNotifierProvider__dispose(context, notifier) {
      type$.nullable_ChangeNotifier._as(notifier);
      if (notifier != null)
        notifier.dispose$0();
    },
    ChangeNotifierProvider: function ChangeNotifierProvider(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._provider$_delegate = t0;
      _._lazy = t1;
      _.builder = t2;
      _._nested$_child = t3;
      _.key = t4;
      _.$ti = t5;
    },
    Consumer: function Consumer(t0, t1, t2, t3) {
      var _ = this;
      _.builder = t0;
      _._nested$_child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    ListenableProvider__startListening(e, value) {
      type$.InheritedContext_nullable_Listenable._as(e);
      type$.nullable_Listenable._as(value);
      if (value != null)
        value.addListener$1(0, e.get$markNeedsNotifyDependents());
      return new A.ListenableProvider__startListening_closure(value, e);
    },
    ListenableProvider: function ListenableProvider() {
    },
    ListenableProvider__startListening_closure: function ListenableProvider__startListening_closure(t0, t1) {
      this.value = t0;
      this.e = t1;
    },
    debugPostEvent(eventKind, $event) {
      C.postEvent(eventKind, $event, "Extension");
    },
    SelectContext_select(_this, selector, $T, $R) {
      var inheritedElement, value, selected, t1, value0;
      if (C.assertTest(!(_this.get$widget() instanceof C.SliverMultiBoxAdaptorWidget)))
        C.assertThrow("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ");
      if (C.assertTest(_this.get$widget() instanceof C.LayoutBuilder || _this._debugDoingBuild))
        C.assertThrow("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n");
      inheritedElement = A.Provider__inheritedElementOf(_this, $T);
      try {
        t1 = inheritedElement;
        if (t1 == null)
          value0 = null;
        else {
          t1 = t1.get$_delegateState();
          value0 = t1.get$value(t1);
        }
        value = value0;
        if (!$T._is(value)) {
          t1 = A.ProviderNullException$(C.createRuntimeType($T), C.getRuntimeTypeOfDartObject(_this.get$widget()));
          throw C.wrapException(t1);
        }
        C.assertHelper(new A.SelectContext_select_closure().call$0());
        selected = selector.call$1(value);
        if (inheritedElement != null)
          _this.dependOnInheritedElement$2$aspect(inheritedElement, new A.SelectContext_select_closure0($T, _this, selector, selected));
        else
          _this.dependOnInheritedWidgetOfExactType$1$0($T._eval$1("_InheritedProviderScope<0?>"));
        return selected;
      } finally {
        C.assertHelper(new A.SelectContext_select_closure1().call$0());
      }
    },
    MultiProvider$(child, providers) {
      var t1 = A.MultiProvider__collapseProviders(providers);
      C.assertHelper(t1.length !== 0);
      return new A.MultiProvider(t1, child, null);
    },
    MultiProvider__collapseProviders(providers) {
      var i, t1, provider, builder, _box_0 = {};
      _box_0.previous = null;
      for (i = 0, t1 = null; i < providers.length; ++i, t1 = builder) {
        provider = providers[i];
        builder = t1 == null ? new A.MultiProvider__collapseProviders_closure(provider) : new A.MultiProvider__collapseProviders_closure0(t1, provider);
        _box_0.previous = builder;
      }
      t1 = C._setArrayType([], type$.JSArray_SingleChildWidget);
      if (_box_0.previous != null)
        t1.push(new A.SingleChildBuilder(new A.MultiProvider__collapseProviders_closure1(_box_0), null, null));
      if (i < providers.length)
        D.JSArray_methods.addAll$1(t1, D.JSArray_methods.sublist$1(providers, i));
      return t1;
    },
    Provider$value(child, value, $T) {
      var _null = null;
      C.assertHelper(new A.Provider$value_closure(value, $T).call$0());
      return new A.Provider(new A._ValueInheritedProvider(value, _null, _null, $T._eval$1("_ValueInheritedProvider<0>")), _null, _null, child, _null, $T._eval$1("Provider<0>"));
    },
    Provider_of(context, listen, $T) {
      var inheritedElement, value, t1;
      if (C.assertTest(context._framework$_owner._debugBuilding || !listen || $.debugIsInInheritedProviderUpdate))
        C.assertThrow("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + C.createRuntimeType($T).toString$0(0) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + context.toString$0(0) + "\n");
      inheritedElement = A.Provider__inheritedElementOf(context, $T);
      if (listen)
        context.dependOnInheritedWidgetOfExactType$1$0($T._eval$1("_InheritedProviderScope<0?>"));
      if (inheritedElement == null)
        value = null;
      else {
        t1 = inheritedElement.get$_delegateState();
        value = t1.get$value(t1);
      }
      if ($.$get$_isSoundMode()) {
        if (!$T._is(value))
          throw C.wrapException(A.ProviderNullException$(C.createRuntimeType($T), C.getRuntimeTypeOfDartObject(context.get$widget())));
        return value;
      }
      return value == null ? $T._as(value) : value;
    },
    Provider__inheritedElementOf(context, $T) {
      var inheritedElement;
      if (C.assertTest(!$._debugIsSelecting))
        C.assertThrow("Cannot call context.read/watch/select inside the callback of a context.select");
      if (C.assertTest(C.createRuntimeType($T) !== D.Type_dynamic_wn9))
        C.assertThrow("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n");
      inheritedElement = $T._eval$1("_InheritedProviderScopeElement<0?>?")._as(context.getElementForInheritedWidgetOfExactType$1$0($T._eval$1("_InheritedProviderScope<0?>")));
      if (inheritedElement == null && !$T._is(null))
        throw C.wrapException(new A.ProviderNotFoundException(C.createRuntimeType($T), C.getRuntimeTypeOfDartObject(context.get$widget())));
      return inheritedElement;
    },
    ProviderNullException$(valueType, widgetType) {
      return new A.ProviderNullException(valueType, widgetType);
    },
    ProviderNode: function ProviderNode(t0, t1) {
      this.type = t0;
      this._provider$_element = t1;
    },
    ProviderBinding: function ProviderBinding(t0) {
      this._providerDetails = t0;
    },
    InheritedProvider: function InheritedProvider() {
    },
    _InheritedProviderElement: function _InheritedProviderElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.SingleChildWidgetElementMixin__parent = t0;
      _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t4;
    },
    _InheritedProviderElement_debugFillProperties_closure: function _InheritedProviderElement_debugFillProperties_closure(t0) {
      this.properties = t0;
    },
    SelectContext_select_closure: function SelectContext_select_closure() {
    },
    SelectContext_select_closure0: function SelectContext_select_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.T = t0;
      _._this = t1;
      _.selector = t2;
      _.selected = t3;
    },
    SelectContext_select_closure1: function SelectContext_select_closure1() {
    },
    _InheritedProviderScope: function _InheritedProviderScope(t0, t1, t2, t3, t4) {
      var _ = this;
      _.owner = t0;
      _.debugType = t1;
      _.child = t2;
      _.key = t3;
      _.$ti = t4;
    },
    _Dependency: function _Dependency(t0, t1) {
      var _ = this;
      _.shouldClearMutationScheduled = _.shouldClearSelectors = false;
      _.selectors = t0;
      _.$ti = t1;
    },
    _InheritedProviderScopeElement: function _InheritedProviderScopeElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _._debugInheritLocked = _._shouldNotifyDependents = false;
      _._isNotifyDependentsEnabled = true;
      _._isBuildFromExternalSources = _._updatedShouldNotify = false;
      _.___InheritedProviderScopeElement__debugId_A = _.___InheritedProviderScopeElement__delegateState_FI = $;
      _._dependents = t0;
      _._framework$_child = null;
      _._debugDoingBuild = false;
      _._slot = _._notificationTree = _._framework$_parent = null;
      _.__Element__depth_A = $;
      _._widget = t1;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t2;
      _._debugForgottenChildrenWithGlobalKey = t3;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._debugBuiltOnce = _._inDirtyList = false;
      _.$ti = t4;
    },
    _InheritedProviderScopeElement_getElementForInheritedWidgetOfExactType_closure: function _InheritedProviderScopeElement_getElementForInheritedWidgetOfExactType_closure(t0, t1) {
      this._box_0 = t0;
      this.InheritedWidgetType = t1;
    },
    _InheritedProviderScopeElement_updateDependencies_closure: function _InheritedProviderScopeElement_updateDependencies_closure(t0) {
      this.selectorDependency = t0;
    },
    _InheritedProviderScopeElement_notifyDependent_closure: function _InheritedProviderScopeElement_notifyDependent_closure() {
    },
    _InheritedProviderScopeElement_notifyDependent_closure0: function _InheritedProviderScopeElement_notifyDependent_closure0() {
    },
    _InheritedProviderScopeElement_update_closure: function _InheritedProviderScopeElement_update_closure(t0, t1) {
      this.$this = t0;
      this.newWidget = t1;
    },
    _InheritedProviderScopeElement__debugSetInheritedLock_closure: function _InheritedProviderScopeElement__debugSetInheritedLock_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _InheritedProviderScopeElement_dependOnInheritedElement_closure: function _InheritedProviderScopeElement_dependOnInheritedElement_closure(t0) {
      this.$this = t0;
    },
    _Delegate: function _Delegate() {
    },
    _DelegateState: function _DelegateState() {
    },
    _CreateInheritedProvider: function _CreateInheritedProvider(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.create = t0;
      _.update = t1;
      _._updateShouldNotify = t2;
      _.debugCheckInvalidValueType = t3;
      _.startListening = t4;
      _.dispose = t5;
      _.$ti = t6;
    },
    _CreateInheritedProviderState: function _CreateInheritedProviderState(t0) {
      var _ = this;
      _._provider$_removeListener = null;
      _._didInitValue = false;
      _.element = _._initError = _._previousWidget = _._provider$_value = null;
      _.$ti = t0;
    },
    _CreateInheritedProviderState_value_closure: function _CreateInheritedProviderState_value_closure(t0) {
      this._box_0 = t0;
    },
    _CreateInheritedProviderState_value_closure0: function _CreateInheritedProviderState_value_closure0() {
    },
    _CreateInheritedProviderState_value_closure1: function _CreateInheritedProviderState_value_closure1(t0) {
      this._box_0 = t0;
    },
    _CreateInheritedProviderState_value_closure2: function _CreateInheritedProviderState_value_closure2(t0) {
      this.$this = t0;
    },
    _CreateInheritedProviderState_value_closure3: function _CreateInheritedProviderState_value_closure3() {
    },
    _CreateInheritedProviderState_value_closure4: function _CreateInheritedProviderState_value_closure4(t0) {
      this._box_0 = t0;
    },
    _CreateInheritedProviderState_value_closure5: function _CreateInheritedProviderState_value_closure5(t0) {
      this.$this = t0;
    },
    _CreateInheritedProviderState_build_closure: function _CreateInheritedProviderState_build_closure(t0) {
      this._box_0 = t0;
    },
    _CreateInheritedProviderState_build_closure0: function _CreateInheritedProviderState_build_closure0() {
    },
    _CreateInheritedProviderState_build_closure1: function _CreateInheritedProviderState_build_closure1(t0) {
      this._box_0 = t0;
    },
    _CreateInheritedProviderState_build_closure2: function _CreateInheritedProviderState_build_closure2(t0) {
      this.$this = t0;
    },
    _ValueInheritedProvider: function _ValueInheritedProvider(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _._updateShouldNotify = t1;
      _.startListening = t2;
      _.$ti = t3;
    },
    _ValueInheritedProviderState: function _ValueInheritedProviderState(t0) {
      this.element = this._provider$_removeListener = null;
      this.$ti = t0;
    },
    MultiProvider: function MultiProvider(t0, t1, t2) {
      this._nested$_children = t0;
      this._nested$_child = t1;
      this.key = t2;
    },
    MultiProvider__collapseProviders_closure: function MultiProvider__collapseProviders_closure(t0) {
      this.provider = t0;
    },
    MultiProvider__collapseProviders_closure0: function MultiProvider__collapseProviders_closure0(t0, t1) {
      this.p = t0;
      this.provider = t1;
    },
    MultiProvider__collapseProviders_closure1: function MultiProvider__collapseProviders_closure1(t0) {
      this._box_0 = t0;
    },
    Provider: function Provider(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._provider$_delegate = t0;
      _._lazy = t1;
      _.builder = t2;
      _._nested$_child = t3;
      _.key = t4;
      _.$ti = t5;
    },
    Provider$value_closure: function Provider$value_closure(t0, t1) {
      this.value = t0;
      this.T = t1;
    },
    Provider_debugCheckInvalidValueType_closure: function Provider_debugCheckInvalidValueType_closure() {
    },
    Provider_debugCheckInvalidValueType__closure: function Provider_debugCheckInvalidValueType__closure(t0, t1) {
      this.value = t0;
      this.T = t1;
    },
    ProviderNullException: function ProviderNullException(t0, t1) {
      this.valueType = t0;
      this.widgetType = t1;
    },
    ProviderNotFoundException: function ProviderNotFoundException(t0, t1) {
      this.valueType = t0;
      this.widgetType = t1;
    },
    ProxyProvider$(child, create, update, $T, $R) {
      var _null = null;
      return new A.ProxyProvider(new A._CreateInheritedProvider(create, new A.ProxyProvider_closure(update, $R, $T), _null, new A.ProxyProvider0_closure($R), _null, _null, $R._eval$1("_CreateInheritedProvider<0>")), _null, _null, child, _null, $T._eval$1("@<0>")._bind$1($R)._eval$1("ProxyProvider<1,2>"));
    },
    ProxyProvider0: function ProxyProvider0() {
    },
    ProxyProvider0_closure: function ProxyProvider0_closure(t0) {
      this.R = t0;
    },
    ProxyProvider: function ProxyProvider(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._provider$_delegate = t0;
      _._lazy = t1;
      _.builder = t2;
      _._nested$_child = t3;
      _.key = t4;
      _.$ti = t5;
    },
    ProxyProvider_closure: function ProxyProvider_closure(t0, t1, t2) {
      this.update = t0;
      this.R = t1;
      this.T = t2;
    },
    Selector2$(builder, selector, $A, $B, $S) {
      return new A.Selector2(builder, new A.Selector2_closure(selector, $S, $A, $B), null, null, null, $A._eval$1("@<0>")._bind$1($B)._bind$1($S)._eval$1("Selector2<1,2,3>"));
    },
    Selector0: function Selector0() {
    },
    _Selector0State: function _Selector0State(t0, t1) {
      var _ = this;
      _._widget = _.oldWidget = _.cache = _.value = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
      _.$ti = t1;
    },
    _Selector0State_buildWithChild_closure: function _Selector0State_buildWithChild_closure(t0, t1, t2) {
      this.$this = t0;
      this.selected = t1;
      this.child = t2;
    },
    Selector2: function Selector2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.builder = t0;
      _.selector = t1;
      _._shouldRebuild = t2;
      _._nested$_child = t3;
      _.key = t4;
      _.$ti = t5;
    },
    Selector2_closure: function Selector2_closure(t0, t1, t2, t3) {
      var _ = this;
      _.selector = t0;
      _.S = t1;
      _.A = t2;
      _.B = t3;
    },
    ObserveDisplayingChildModel: function ObserveDisplayingChildModel() {
    },
    ObserveDisplayingChildModelMixin: function ObserveDisplayingChildModelMixin() {
    },
    ObserveModel: function ObserveModel() {
    },
    ObserveScrollChildModel: function ObserveScrollChildModel(t0, t1) {
      this.size = t0;
      this.layoutOffset = t1;
    },
    ObservePrepareScrollToIndexModel: function ObservePrepareScrollToIndexModel(t0) {
      this.calculateTargetLayoutOffset = t0;
    },
    ObserverHandleContextsResultModel: function ObserverHandleContextsResultModel(t0, t1, t2) {
      this.changeResultModel = t0;
      this.changeResultMap = t1;
      this.$ti = t2;
    },
    ObserverIndexPositionModel: function ObserverIndexPositionModel(t0) {
      this.index = t0;
    },
    ObserverController: function ObserverController() {
    },
    ObserverControllerForNotification: function ObserverControllerForNotification() {
    },
    ObserverControllerForInfo: function ObserverControllerForInfo() {
    },
    ObserverControllerForScroll: function ObserverControllerForScroll() {
    },
    ObserverControllerForScroll__handleScrollToIndex_closure: function ObserverControllerForScroll__handleScrollToIndex_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.obj = t2;
      _.ctx = t3;
      _.completer = t4;
      _.index = t5;
      _.alignment = t6;
      _.padding = t7;
      _.duration = t8;
      _.curve = t9;
      _.offset = t10;
      _.onPrepareScrollToIndex = t11;
    },
    ObserverControllerForScroll__handleScrollToIndex_closure0: function ObserverControllerForScroll__handleScrollToIndex_closure0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.obj = t2;
      _.ctx = t3;
      _.completer = t4;
      _.index = t5;
      _.alignment = t6;
      _.padding = t7;
      _.duration = t8;
      _.curve = t9;
      _.offset = t10;
      _.onPrepareScrollToIndex = t11;
    },
    ObserverControllerForScroll__handleScrollEnd_closure: function ObserverControllerForScroll__handleScrollEnd_closure(t0, t1, t2) {
      this.$this = t0;
      this.completer = t1;
      this.context = t2;
    },
    CommonOnceObserveNotificationResult: function CommonOnceObserveNotificationResult() {
    },
    ObserverAutoTriggerObserveType: function ObserverAutoTriggerObserveType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserverTriggerOnObserveType: function ObserverTriggerOnObserveType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserverRenderSliverType: function ObserverRenderSliverType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserverWidgetState$($C, $M, $N, $T) {
      return new A.ObserverWidgetState(C._setArrayType([], type$.JSArray_BuildContext), C.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, $M), new C.LinkedList($M._eval$1("LinkedList<ObserverListenerEntry<0>>")), D._StateLifecycle_0, $C._eval$1("@<0>")._bind$1($M)._bind$1($N)._bind$1($T)._eval$1("ObserverWidgetState<1,2,3,4>"));
    },
    ObserverWidget: function ObserverWidget() {
    },
    ObserverWidgetState: function ObserverWidgetState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.targetSliverContexts = t0;
      _.lastResultMap = t1;
      _.innerCanHandleObserve = true;
      _.scopeContext = null;
      _.innerListeners = t2;
      _._widget = null;
      _._debugLifecycleState = t3;
      _._framework$_element = null;
      _.$ti = t4;
    },
    ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure: function ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure() {
    },
    ObserverWidgetState__debugAssertNotDisposed_closure: function ObserverWidgetState__debugAssertNotDisposed_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetState_build_closure: function ObserverWidgetState_build_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetState_build_closure0: function ObserverWidgetState_build_closure0(t0) {
      this.$this = t0;
    },
    ObserverWidgetState_build__closure: function ObserverWidgetState_build__closure(t0, t1) {
      this.$this = t0;
      this.isIgnoreInnerCanHandleObserve = t1;
    },
    ObserverWidgetState__setupSliverController_closure: function ObserverWidgetState__setupSliverController_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetState__setupSliverController_closure0: function ObserverWidgetState__setupSliverController_closure0(t0) {
      this.$this = t0;
    },
    ObserverWidgetState__setupSliverController_closure1: function ObserverWidgetState__setupSliverController_closure1(t0, t1, t2) {
      this.$this = t0;
      this.sliverController = t1;
      this.isInitState = t2;
    },
    ObserverWidgetState_fetchTargetSliverContexts_visitor: function ObserverWidgetState_fetchTargetSliverContexts_visitor(t0, t1) {
      this.$this = t0;
      this._ctxs = t1;
    },
    ObserverWidgetState__notifyListeners_closure: function ObserverWidgetState__notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetScope: function ObserverWidgetScope(t0, t1, t2, t3, t4) {
      var _ = this;
      _.observerWidgetState = t0;
      _.onCreateElement = t1;
      _.child = t2;
      _.key = t3;
      _.$ti = t4;
    },
    ObserverWidgetTagManager: function ObserverWidgetTagManager(t0, t1, t2) {
      this._tagMap = t0;
      this.child = t1;
      this.key = t2;
    },
    ObserverWidgetObserveResultType: function ObserverWidgetObserveResultType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GridViewObserveDisplayingChildModel$(index, renderObject, sliverGrid, viewport) {
      return new A.GridViewObserveDisplayingChildModel(index, renderObject);
    },
    GridViewObserveDisplayingChildModel: function GridViewObserveDisplayingChildModel(t0, t1) {
      this.index = t0;
      this.renderObject = t1;
    },
    _GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin: function _GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin() {
    },
    GridViewObserveModel$(displayingChildModelList, displayingChildModelMap, firstGroupChildList, sliverGrid, viewport, visible) {
      return new A.GridViewObserveModel(firstGroupChildList, displayingChildModelList, displayingChildModelMap, displayingChildModelList);
    },
    GridViewObserveModel: function GridViewObserveModel(t0, t1, t2, t3) {
      var _ = this;
      _.firstGroupChildList = t0;
      _.displayingChildModelList = t1;
      _.displayingChildModelMap = t2;
      _.innerDisplayingChildModelList = t3;
    },
    ListViewObserveDisplayingChildModel$(index, renderObject, sliverList, viewport) {
      return new A.ListViewObserveDisplayingChildModel(index, renderObject);
    },
    ListViewObserveDisplayingChildModel: function ListViewObserveDisplayingChildModel(t0, t1) {
      this.index = t0;
      this.renderObject = t1;
    },
    _ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin: function _ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin() {
    },
    ListViewObserveModel$(displayingChildModelList, displayingChildModelMap, firstChild, sliverList, viewport, visible) {
      return new A.ListViewObserveModel(firstChild, displayingChildModelList, displayingChildModelMap, displayingChildModelList);
    },
    ListViewObserveModel: function ListViewObserveModel(t0, t1, t2, t3) {
      var _ = this;
      _.firstChild = t0;
      _.displayingChildModelList = t1;
      _.displayingChildModelMap = t2;
      _.innerDisplayingChildModelList = t3;
    },
    ObserverScrollNotification: function ObserverScrollNotification() {
    },
    ObserverScrollStartNotification: function ObserverScrollStartNotification() {
    },
    ObserverScrollInterruptionNotification: function ObserverScrollInterruptionNotification() {
    },
    ObserverScrollDecisionNotification: function ObserverScrollDecisionNotification() {
    },
    ObserverScrollEndNotification: function ObserverScrollEndNotification() {
    },
    SliverObserverHandleContextsResultModel: function SliverObserverHandleContextsResultModel(t0, t1, t2, t3) {
      var _ = this;
      _.observeViewportResultModel = t0;
      _.changeResultModel = t1;
      _.changeResultMap = t2;
      _.$ti = t3;
    },
    SliverViewportObserveDisplayingChildModel: function SliverViewportObserveDisplayingChildModel(t0, t1) {
      this.sliverContext = t0;
      this.sliver = t1;
    },
    SliverViewportObserveModel: function SliverViewportObserveModel(t0, t1, t2) {
      this.viewport = t0;
      this.firstChild = t1;
      this.displayingChildModelList = t2;
    },
    SliverObserverController: function SliverObserverController(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.ObserverControllerForNotification_innerDispatchOnceObserveCompleter = t0;
      _.ObserverControllerForScroll_cacheJumpIndexOffset = t1;
      _.ObserverControllerForScroll_initialIndexModel = t2;
      _.ObserverControllerForScroll_initialIndexModelBlock = t3;
      _.controller = t4;
      _.indexOffsetMap = t5;
      _.sliverContexts = t6;
      _.innerIsHandlingScroll = false;
      _.innerNeedOnceObserveCallBack = null;
    },
    _SliverObserverController_ObserverController_ObserverControllerForInfo: function _SliverObserverController_ObserverController_ObserverControllerForInfo() {
    },
    _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll: function _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll() {
    },
    _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification: function _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification() {
    },
    ScrollViewOnceObserveNotificationResult: function ScrollViewOnceObserveNotificationResult(t0, t1) {
      this.type = t0;
      this.observeResult = t1;
    },
    SliverViewObserver: function SliverViewObserver(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.controller = t0;
      _.child = t1;
      _.tag = t2;
      _.sliverController = t3;
      _.sliverContexts = t4;
      _.onObserveAll = t5;
      _.onObserve = t6;
      _.leadingOffset = t7;
      _.dynamicLeadingOffset = t8;
      _.toNextOverPercent = t9;
      _.scrollNotificationPredicate = t10;
      _.autoTriggerObserveTypes = t11;
      _.triggerOnObserveType = t12;
      _.customHandleObserve = t13;
      _.key = t14;
    },
    MixViewObserverState: function MixViewObserverState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.lastViewportObserveResultModel = null;
      _.innerSliverListeners = t0;
      _.targetSliverContexts = t1;
      _.lastResultMap = t2;
      _.innerCanHandleObserve = true;
      _.scopeContext = null;
      _.innerListeners = t3;
      _._widget = null;
      _._debugLifecycleState = t4;
      _._framework$_element = null;
    },
    MixViewObserverState__debugAssertNotDisposed_closure: function MixViewObserverState__debugAssertNotDisposed_closure(t0) {
      this.$this = t0;
    },
    MixViewObserverState_handleObserveViewport_closure: function MixViewObserverState_handleObserveViewport_closure() {
    },
    MixViewObserverState__notifySliverListeners_closure: function MixViewObserverState__notifySliverListeners_closure(t0) {
      this.$this = t0;
    },
    ShimmerDirection: function ShimmerDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Shimmer: function Shimmer(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.period = t1;
      _.gradient = t2;
      _.key = t3;
    },
    _ShimmerState: function _ShimmerState(t0, t1, t2) {
      var _ = this;
      _.___ShimmerState__controller_A = $;
      _._shimmer$_count = 0;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _ShimmerState_initState_closure: function _ShimmerState_initState_closure(t0) {
      this.$this = t0;
    },
    _ShimmerState_build_closure: function _ShimmerState_build_closure(t0) {
      this.$this = t0;
    },
    _Shimmer: function _Shimmer(t0, t1, t2, t3, t4) {
      var _ = this;
      _.percent = t0;
      _.direction = t1;
      _.gradient = t2;
      _.child = t3;
      _.key = t4;
    },
    _ShimmerFilter: function _ShimmerFilter(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._shimmer$_direction = t0;
      _._gradient = t1;
      _._percent = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._layoutCacheStorage = t4;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __ShimmerState_State_SingleTickerProviderStateMixin_dispose_closure: function __ShimmerState_State_SingleTickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __ShimmerState_State_SingleTickerProviderStateMixin: function __ShimmerState_State_SingleTickerProviderStateMixin() {
    },
    StyledList_toStack(_this, alignment) {
      return new C.Stack(alignment, null, D.StackFit_0, D.Clip_1, _this, null);
    },
    StyledWidget_positioned(_this, bottom, right, $top) {
      var _null = null,
        t1 = C.Positioned$(bottom, _this, _null, _null, _null, right, $top, _null);
      return t1;
    },
    StyledWidget_gestures(_this, onTap) {
      var _null = null;
      return C.GestureDetector$(_null, _this, D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.StyledWidget_gestures_closure(onTap, _null), new A.StyledWidget_gestures_closure0(_null, _null), new A.StyledWidget_gestures_closure1(_null, _null), _null, _null, _null, _null, _null, _null);
    },
    StyledWidget_gestures_closure1: function StyledWidget_gestures_closure1(t0, t1) {
      this.onTapDown = t0;
      this.onTapChange = t1;
    },
    StyledWidget_gestures_closure0: function StyledWidget_gestures_closure0(t0, t1) {
      this.onTapCancel = t0;
      this.onTapChange = t1;
    },
    StyledWidget_gestures_closure: function StyledWidget_gestures_closure(t0, t1) {
      this.onTap = t0;
      this.onTapChange = t1;
    },
    Orderable: function Orderable() {
    },
    LocalDate$_(_native) {
      var t1,
        _s85_ = ". Should be 0. Please file an issue at https://github.com/forus-labs/cauldron/issues.";
      if (C.assertTest(_native.isUtc))
        C.assertThrow(_native.toString$0(0) + " is in local timezone. Should be UTC. Please file an issue at https://github.com/forus-labs/cauldron/issues.");
      if (C.assertTest(C.Primitives_getHours(_native) === 0))
        C.assertThrow("Hour is " + C.Primitives_getHours(_native) + _s85_);
      if (C.assertTest(C.Primitives_getMinutes(_native) === 0))
        C.assertThrow("Minute is " + C.Primitives_getMinutes(_native) + _s85_);
      if (C.assertTest(C.Primitives_getSeconds(_native) === 0))
        C.assertThrow("Second is " + C.Primitives_getSeconds(_native) + _s85_);
      if (C.assertTest(C.Primitives_getMilliseconds(_native) === 0))
        C.assertThrow("Millisecond is " + C.Primitives_getMilliseconds(_native) + _s85_);
      t1 = _native._microsecond;
      if (C.assertTest(t1 === 0))
        C.assertThrow("Microsecond is " + t1 + _s85_);
      return new A.LocalDate(_native);
    },
    Date: function Date() {
    },
    LocalDate: function LocalDate(t0) {
      this._date$_string = null;
      this._native = t0;
    },
    _LocalDate_Date_Orderable: function _LocalDate_Date_Orderable() {
    },
    DateTimes_plus(_this, days, months, years) {
      return A.DateTimeCopyWith_copyWith(_this, C.Primitives_getDay(_this) + days, C.Primitives_getHours(_this), _this._microsecond, C.Primitives_getMilliseconds(_this), C.Primitives_getMinutes(_this), C.Primitives_getMonth(_this) + months, C.Primitives_getSeconds(_this), C.Primitives_getYear(_this) + years);
    },
    DateTimes_minus(_this, days, months, years) {
      return A.DateTimeCopyWith_copyWith(_this, C.Primitives_getDay(_this) - days, C.Primitives_getHours(_this), _this._microsecond, C.Primitives_getMilliseconds(_this), C.Primitives_getMinutes(_this), C.Primitives_getMonth(_this) - months, C.Primitives_getSeconds(_this), C.Primitives_getYear(_this) - years);
    },
    DateTimes_truncate(_this, to) {
      return A.DateTimes__adjust(_this, to, new A.DateTimes_truncate_closure());
    },
    DateTimes__adjust(_this, unit, apply) {
      var t1, _null = null;
      switch (unit) {
        case B.DateUnit_0:
          t1 = A.DateTimeCopyWith_copyWith(_this, 1, 0, 0, 0, 0, 1, 0, apply.call$1(C.Primitives_getYear(_this)));
          break;
        case B.DateUnit_1:
          t1 = A.DateTimeCopyWith_copyWith(_this, 1, 0, 0, 0, 0, apply.call$1(C.Primitives_getMonth(_this)), 0, _null);
          break;
        case B.DateUnit_2:
          t1 = A.DateTimeCopyWith_copyWith(_this, apply.call$1(C.Primitives_getDay(_this)), 0, 0, 0, 0, _null, 0, _null);
          break;
        case B.TimeUnit_0:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, apply.call$1(C.Primitives_getHours(_this)), 0, 0, 0, _null, 0, _null);
          break;
        case B.TimeUnit_1:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, 0, 0, apply.call$1(C.Primitives_getMinutes(_this)), _null, 0, _null);
          break;
        case B.TimeUnit_2:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, 0, 0, _null, _null, apply.call$1(C.Primitives_getSeconds(_this)), _null);
          break;
        case B.TimeUnit_3:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, 0, apply.call$1(C.Primitives_getMilliseconds(_this)), _null, _null, _null, _null);
          break;
        case B.TimeUnit_4:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, apply.call$1(_this._microsecond), _null, _null, _null, _null, _null);
          break;
        default:
          t1 = _null;
      }
      return t1;
    },
    DateTimes_truncate_closure: function DateTimes_truncate_closure() {
    },
    Period: function Period(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.years = t0;
      _.months = t1;
      _.days = t2;
      _.hours = t3;
      _.minutes = t4;
      _.seconds = t5;
      _.milliseconds = t6;
      _.microseconds = t7;
    },
    DateUnit: function DateUnit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TimeUnit: function TimeUnit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDCheckbox$(backgroundColor, cardMode, checkBoxLeftSpace, contentDirection, customContentBuilder, customIconBuilder, customSpace, disableColor, enable, id, insetSpacing, key, selectColor, showDivider, size, spacing, style, subTitle, subTitleColor, subTitleFont, subTitleMaxLine, title, titleColor, titleFont, titleMaxLine) {
      return new A.TDCheckbox(id, title, titleFont, subTitle, subTitleFont, true, titleMaxLine, subTitleMaxLine, insetSpacing, spacing, style, size, false, showDivider, contentDirection, customIconBuilder, customContentBuilder, backgroundColor, selectColor, disableColor, titleColor, subTitleColor, checkBoxLeftSpace, customSpace, key);
    },
    TDCheckboxStyle: function TDCheckboxStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDContentDirection: function TDContentDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDCheckBoxSize: function TDCheckBoxSize(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDCheckbox: function TDCheckbox(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.titleFont = t2;
      _.subTitle = t3;
      _.subTitleFont = t4;
      _.enable = t5;
      _.titleMaxLine = t6;
      _.subTitleMaxLine = t7;
      _.insetSpacing = t8;
      _.spacing = t9;
      _.style = t10;
      _.size = t11;
      _.cardMode = t12;
      _.showDivider = t13;
      _.contentDirection = t14;
      _.customIconBuilder = t15;
      _.customContentBuilder = t16;
      _.backgroundColor = t17;
      _.selectColor = t18;
      _.disableColor = t19;
      _.titleColor = t20;
      _.subTitleColor = t21;
      _.checkBoxLeftSpace = t22;
      _.customSpace = t23;
      _.key = t24;
    },
    TDCheckboxState: function TDCheckboxState(t0) {
      var _ = this;
      _.canNotCancel = _._pressed = _.checked = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    TDCheckboxState_build_closure1: function TDCheckboxState_build_closure1(t0) {
      this.$this = t0;
    },
    TDCheckboxState_build_closure2: function TDCheckboxState_build_closure2(t0) {
      this.$this = t0;
    },
    TDCheckboxState_build_closure0: function TDCheckboxState_build_closure0(t0) {
      this.$this = t0;
    },
    TDCheckboxState_build_closure: function TDCheckboxState_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.id = t1;
      this.groupState = t2;
    },
    TDCheckboxState__pressState_closure: function TDCheckboxState__pressState_closure() {
    },
    TDCheckboxState_onValueChange_closure: function TDCheckboxState_onValueChange_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.value = t1;
      _.groupState = t2;
      _.id = t3;
    },
    RadioCornerIcon: function RadioCornerIcon(t0, t1, t2, t3) {
      var _ = this;
      _.length = t0;
      _.radius = t1;
      _.selectColor = t2;
      _.key = t3;
    },
    RadioCorner: function RadioCorner(t0, t1, t2, t3) {
      var _ = this;
      _.length = t0;
      _.radius = t1;
      _.fillColor = t2;
      _._repaint = t3;
    },
    TDCheckboxGroupContainer$(direction, directionalTdCheckboxes, onCheckBoxGroupChange, selectIds) {
      var t2, t3, t4, t5, t6, _null = null, t1 = {};
      t1.selectIds = selectIds;
      C.assertHelper(new A.TDCheckboxGroupContainer_closure(direction, directionalTdCheckboxes, _null, false).call$0());
      t2 = D.Clip_0;
      t3 = _null;
      t4 = _null;
      if (direction === D.Axis_1)
        t5 = C.ListView$separated(new A.TDCheckboxGroupContainer_closure0(false, directionalTdCheckboxes), directionalTdCheckboxes.length, D.EdgeInsets_0_0_0_0, B.NeverScrollableScrollPhysics_null, D.Axis_1, new A.TDCheckboxGroupContainer_closure1(false), true);
      else {
        t5 = C._arrayInstanceType(directionalTdCheckboxes);
        t6 = t5._eval$1("MappedListIterable<1,Expanded>");
        t6 = C.Row$(C.List_List$of(new C.MappedListIterable(directionalTdCheckboxes, t5._eval$1("Expanded(1)")._as(new A.TDCheckboxGroupContainer_closure2()), t6), true, t6._eval$1("ListIterable.E")), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1);
        t5 = C.Container$(_null, t6, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      return new A.TDCheckboxGroupContainer(C.Container$(_null, t5, t2, _null, _null, t3, _null, _null, _null, t4, _null, _null, _null, _null), new A.TDCheckboxGroupContainer_closure3(t1, onCheckBoxGroupChange), _null, _null, selectIds, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    TDCheckboxGroup: function TDCheckboxGroup() {
    },
    TDCheckboxGroupState: function TDCheckboxGroupState(t0, t1) {
      var _ = this;
      _.checkBoxStates = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    TDCheckboxGroupState__syncCheckState_closure: function TDCheckboxGroupState__syncCheckState_closure(t0) {
      this.$this = t0;
    },
    TDCheckboxGroupState_toggle_closure: function TDCheckboxGroupState_toggle_closure() {
    },
    TDCheckboxGroupState_toggle_closure0: function TDCheckboxGroupState_toggle_closure0() {
    },
    TDCheckboxGroupState__notifyChange_closure: function TDCheckboxGroupState__notifyChange_closure() {
    },
    TDCheckboxGroupInherited: function TDCheckboxGroupInherited(t0, t1, t2) {
      this.state = t0;
      this.child = t1;
      this.key = t2;
    },
    TDCheckboxGroupContainer: function TDCheckboxGroupContainer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.child = t0;
      _.onChangeGroup = t1;
      _.controller = t2;
      _.maxChecked = t3;
      _.checkedIds = t4;
      _.onOverloadChecked = t5;
      _.titleMaxLine = t6;
      _.customContentBuilder = t7;
      _.spacing = t8;
      _.style = t9;
      _.contentDirection = t10;
      _.customIconBuilder = t11;
      _.key = t12;
    },
    TDCheckboxGroupContainer_closure: function TDCheckboxGroupContainer_closure(t0, t1, t2, t3) {
      var _ = this;
      _.direction = t0;
      _.directionalTdCheckboxes = t1;
      _.child = t2;
      _.cardMode = t3;
    },
    TDCheckboxGroupContainer__closure: function TDCheckboxGroupContainer__closure() {
    },
    TDCheckboxGroupContainer__closure0: function TDCheckboxGroupContainer__closure0(t0, t1) {
      this._box_0 = t0;
      this.tips = t1;
    },
    TDCheckboxGroupContainer_closure0: function TDCheckboxGroupContainer_closure0(t0, t1) {
      this.cardMode = t0;
      this.directionalTdCheckboxes = t1;
    },
    TDCheckboxGroupContainer_closure1: function TDCheckboxGroupContainer_closure1(t0) {
      this.cardMode = t0;
    },
    TDCheckboxGroupContainer_closure2: function TDCheckboxGroupContainer_closure2() {
    },
    TDCheckboxGroupContainer_closure3: function TDCheckboxGroupContainer_closure3(t0, t1) {
      this._box_1 = t0;
      this.onCheckBoxGroupChange = t1;
    },
    TDCheckboxGroupContainerState: function TDCheckboxGroupContainerState(t0, t1) {
      var _ = this;
      _.checkBoxStates = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    TDConfirmDialog: function TDConfirmDialog(t0, t1, t2, t3, t4) {
      var _ = this;
      _.title = t0;
      _.contentWidget = t1;
      _.buttonText = t2;
      _.action = t3;
      _.key = t4;
    },
    TDConfirmDialog__buildButton_closure: function TDConfirmDialog__buildButton_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    TDConfirmDialog_build_closure: function TDConfirmDialog_build_closure(t0) {
      this.$this = t0;
    },
    TDForm: function TDForm(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.items = t0;
      _.data = t1;
      _.isHorizontal = t2;
      _.labelWidth = t3;
      _.rules = t4;
      _.onSubmit = t5;
      _.btnGroup = t6;
      _.formController = t7;
      _.key = t8;
    },
    _TDFormState: function _TDFormState(t0, t1, t2) {
      var _ = this;
      _._formItems = t0;
      _._formData = t1;
      _._isReset = _._isValidate = false;
      _._upDataCount = 1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _TDFormState_initState_closure: function _TDFormState_initState_closure(t0) {
      this.$this = t0;
    },
    _TDFormState_onReset_closure: function _TDFormState_onReset_closure(t0) {
      this.$this = t0;
    },
    _TDFormState_onSubmit_closure: function _TDFormState_onSubmit_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _TDFormState_onSubmit_closure0: function _TDFormState_onSubmit_closure0(t0) {
      this.$this = t0;
    },
    _TDFormState_build_closure: function _TDFormState_build_closure() {
    },
    _TDFormState_build_closure0: function _TDFormState_build_closure0(t0) {
      this.$this = t0;
    },
    _TDFormState_build_closure1: function _TDFormState_build_closure1(t0) {
      this.$this = t0;
    },
    FormController: function FormController(t0, t1) {
      var _ = this;
      _.eventType = "";
      _.formData = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.ChangeNotifier__creationDispatched = _.ChangeNotifier__debugDisposed = false;
    },
    _FormController_Object_ChangeNotifier: function _FormController_Object_ChangeNotifier() {
    },
    TDFormInherited: function TDFormInherited(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.formData = t0;
      _.labelWidth = t1;
      _.isHorizontal = t2;
      _.isValidate = t3;
      _.rules = t4;
      _.formShowErrorMessage = t5;
      _.requiredMark = t6;
      _.formContentAlign = t7;
      _.onFormDataChange = t8;
      _.isReset = t9;
      _.updataCount = t10;
      _.child = t11;
      _.key = t12;
    },
    TDFormItem$(child, hintText, label, type) {
      return new A.TDFormItem(label, type, child, hintText, null);
    },
    TDFormItemType: function TDFormItemType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDFormItem: function TDFormItem(t0, t1, t2, t3, t4) {
      var _ = this;
      _.label = t0;
      _.type = t1;
      _.child = t2;
      _.hintText = t3;
      _.key = t4;
    },
    _TDFormItemState: function _TDFormItemState(t0) {
      var _ = this;
      _._widget = _.errorMessage = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _TDFormItemState_startValidation_closure: function _TDFormItemState_startValidation_closure(t0) {
      this.$this = t0;
    },
    _TDFormItemState__buildSelectRow_closure: function _TDFormItemState__buildSelectRow_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    TDInputView$(autofocus, contentPadding, controller, cursorColor, focusNode, hintText, hintTextStyle, inputAction, inputDecoration, inputFormatters, inputType, isCollapsed, maxLength, maxLines, obscureText, onChanged, onEditingComplete, onSubmitted, onTapOutside, readOnly, textAlign, textInputBackgroundColor, textStyle) {
      return new A.TDInputView(false, hintText, inputType, onChanged, inputFormatters, controller, maxLines, maxLength, focusNode, false, false, onEditingComplete, onSubmitted, inputDecoration, textStyle, hintTextStyle, textInputBackgroundColor, cursorColor, contentPadding, isCollapsed, textAlign, inputAction, onTapOutside, null);
    },
    TDInputView: function TDInputView(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.readOnly = t0;
      _.hintText = t1;
      _.inputType = t2;
      _.onChanged = t3;
      _.inputFormatters = t4;
      _.controller = t5;
      _.maxLines = t6;
      _.maxLength = t7;
      _.focusNode = t8;
      _.autofocus = t9;
      _.obscureText = t10;
      _.onEditingComplete = t11;
      _.onSubmitted = t12;
      _.inputDecoration = t13;
      _.textStyle = t14;
      _.hintTextStyle = t15;
      _.textInputBackgroundColor = t16;
      _.cursorColor = t17;
      _.contentPadding = t18;
      _.isCollapsed = t19;
      _.textAlign = t20;
      _.inputAction = t21;
      _.onTapOutside = t22;
      _.key = t23;
    },
    TDInputType: function TDInputType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDInputSize: function TDInputSize(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDInput: function TDInput(t0, t1, t2, t3, t4) {
      var _ = this;
      _.onChanged = t0;
      _.controller = t1;
      _.inputDecoration = t2;
      _.spacer = t3;
      _._leftLabelWidth = 0;
      _.key = t4;
    },
    TDInput_buildNormalInput_closure: function TDInput_buildNormalInput_closure(t0) {
      this.$this = t0;
    },
    TDInputSpacer: function TDInputSpacer() {
      var _ = this;
      _.additionInfoSpace = _.rightSpace = _.inputRightSpace = _.labelInputSpace = _.iconLabelSpace = null;
    },
    TDRadio$(id, showDivider, subTitle, title) {
      var _null = null;
      return new A.TDRadio(id, title, _null, subTitle, _null, true, 1, 1, _null, _null, _null, B.TDCheckBoxSize_1, false, false, B.TDContentDirection_1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    TDRadioGroup$(direction, directionalTdRadios, onRadioGroupChange, selectId) {
      var t1, t2, t3, t4, t5, _null = null;
      C.assertHelper(new A.TDRadioGroup_closure(direction, directionalTdRadios, _null, false).call$0());
      t1 = D.Clip_0;
      t2 = _null;
      t3 = _null;
      if (direction === D.Axis_1)
        t4 = C.ListView$separated(new A.TDRadioGroup_closure0(false, directionalTdRadios), directionalTdRadios.length, D.EdgeInsets_0_0_0_0, B.NeverScrollableScrollPhysics_null, D.Axis_1, new A.TDRadioGroup_closure1(false), true);
      else {
        t4 = C._arrayInstanceType(directionalTdRadios);
        t5 = t4._eval$1("MappedListIterable<1,Expanded>");
        t5 = C._setArrayType([C.Row$(C.List_List$of(new C.MappedListIterable(directionalTdRadios, t4._eval$1("Expanded(1)")._as(new A.TDRadioGroup_closure2()), t5), true, t5._eval$1("ListIterable.E")), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1)], type$.JSArray_Widget);
        t4 = C.Column$(t5, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
        t4 = C.Container$(_null, t4, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      t3 = C.Container$(_null, t4, t1, _null, _null, t2, _null, _null, _null, t3, _null, _null, _null, _null);
      t1 = selectId != null ? C._setArrayType([selectId], type$.JSArray_String) : _null;
      return new A.TDRadioGroup(t3, new A.TDRadioGroup_closure3(onRadioGroupChange), _null, 1, t1, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    TDRadioStyle: function TDRadioStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDRadio: function TDRadio(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _.id = t0;
      _.title = t1;
      _.titleFont = t2;
      _.subTitle = t3;
      _.subTitleFont = t4;
      _.enable = t5;
      _.titleMaxLine = t6;
      _.subTitleMaxLine = t7;
      _.insetSpacing = t8;
      _.spacing = t9;
      _.style = t10;
      _.size = t11;
      _.cardMode = t12;
      _.showDivider = t13;
      _.contentDirection = t14;
      _.customIconBuilder = t15;
      _.customContentBuilder = t16;
      _.backgroundColor = t17;
      _.selectColor = t18;
      _.disableColor = t19;
      _.titleColor = t20;
      _.subTitleColor = t21;
      _.checkBoxLeftSpace = t22;
      _.customSpace = t23;
      _.key = t24;
    },
    TDRadioState: function TDRadioState(t0) {
      var _ = this;
      _.canNotCancel = _._pressed = _.checked = false;
      _._widget = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    TDRadioGroup: function TDRadioGroup(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.child = t0;
      _.onChangeGroup = t1;
      _.controller = t2;
      _.maxChecked = t3;
      _.checkedIds = t4;
      _.onOverloadChecked = t5;
      _.titleMaxLine = t6;
      _.customContentBuilder = t7;
      _.spacing = t8;
      _.style = t9;
      _.contentDirection = t10;
      _.customIconBuilder = t11;
      _.key = t12;
    },
    TDRadioGroup_closure: function TDRadioGroup_closure(t0, t1, t2, t3) {
      var _ = this;
      _.direction = t0;
      _.directionalTdRadios = t1;
      _.child = t2;
      _.cardMode = t3;
    },
    TDRadioGroup__closure: function TDRadioGroup__closure() {
    },
    TDRadioGroup__closure0: function TDRadioGroup__closure0(t0, t1) {
      this._box_0 = t0;
      this.tips = t1;
    },
    TDRadioGroup_closure0: function TDRadioGroup_closure0(t0, t1) {
      this.cardMode = t0;
      this.directionalTdRadios = t1;
    },
    TDRadioGroup_closure1: function TDRadioGroup_closure1(t0) {
      this.cardMode = t0;
    },
    TDRadioGroup_closure2: function TDRadioGroup_closure2() {
    },
    TDRadioGroup_closure3: function TDRadioGroup_closure3(t0) {
      this.onRadioGroupChange = t0;
    },
    TDRadioGroupState: function TDRadioGroupState(t0, t1) {
      var _ = this;
      _.checkBoxStates = t0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    TDRadioGroupState_toggle_closure: function TDRadioGroupState_toggle_closure(t0) {
      this.$this = t0;
    },
    TDSkeleton_TDSkeleton(animation, theme) {
      var t1, t2, i, _null = null;
      switch (theme.index) {
        case 0:
          return A.TDSkeleton$fromRowCol(animation, 0, _null, A.TDSkeletonRowCol$(B.List_ZUH));
        case 1:
          return A.TDSkeleton$fromRowCol(animation, 0, _null, A.TDSkeletonRowCol$(B.List_JGW));
        case 2:
          return A.TDSkeleton$fromRowCol(animation, 0, _null, A.TDSkeletonRowCol$(B.List_xWd));
        case 3:
          t1 = C._setArrayType([], type$.JSArray_List_TDSkeletonRowColObj);
          for (t2 = type$.JSArray_TDSkeletonRowColObj, i = 0; i < 3; ++i)
            t1.push(C._setArrayType([B.TDSkeletonRowColObj_msG], t2));
          t1.push(B.List_GbC);
          return A.TDSkeleton$fromRowCol(animation, 0, _null, A.TDSkeletonRowCol$(t1));
      }
    },
    TDSkeleton$fromRowCol(animation, delay, key, rowCol) {
      return new A.TDSkeleton(animation, delay, rowCol, key);
    },
    TDSkeletonAnimation: function TDSkeletonAnimation(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDSkeletonTheme: function TDSkeletonTheme(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDSkeleton: function TDSkeleton(t0, t1, t2, t3) {
      var _ = this;
      _.animation = t0;
      _.delay = t1;
      _.rowCol = t2;
      _.key = t3;
    },
    _TDSkeletonState: function _TDSkeletonState(t0, t1, t2) {
      var _ = this;
      _.___TDSkeletonState__animation_F = _.___TDSkeletonState__controller_F = $;
      _._isLoading = true;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _TDSkeletonState_initState_closure: function _TDSkeletonState_initState_closure(t0) {
      this.$this = t0;
    },
    _TDSkeletonState_initState__closure1: function _TDSkeletonState_initState__closure1() {
    },
    _TDSkeletonState_initState_closure0: function _TDSkeletonState_initState_closure0(t0) {
      this.$this = t0;
    },
    _TDSkeletonState_initState__closure0: function _TDSkeletonState_initState__closure0() {
    },
    _TDSkeletonState_initState_closure1: function _TDSkeletonState_initState_closure1(t0) {
      this.$this = t0;
    },
    _TDSkeletonState_initState__closure: function _TDSkeletonState_initState__closure(t0) {
      this.$this = t0;
    },
    _TDSkeletonState__buildObj_closure: function _TDSkeletonState__buildObj_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState__buildObj__closure: function _TDSkeletonState__buildObj__closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState_build_closure: function _TDSkeletonState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState_build_closure0: function _TDSkeletonState_build_closure0(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState_build_closure1: function _TDSkeletonState_build_closure1() {
    },
    _TDSkeletonState_build__closure: function _TDSkeletonState_build__closure() {
    },
    __TDSkeletonState_State_SingleTickerProviderStateMixin_dispose_closure: function __TDSkeletonState_State_SingleTickerProviderStateMixin_dispose_closure(t0) {
      this.$this = t0;
    },
    __TDSkeletonState_State_SingleTickerProviderStateMixin: function __TDSkeletonState_State_SingleTickerProviderStateMixin() {
    },
    TDSkeletonRowColStyle__defaultRowSpacing(context) {
      var t1 = C.TDTheme_of(type$.BuildContext._as(context)).__TDThemeData_spacerMap_A;
      t1 === $ && C.throwLateFieldNI("spacerMap");
      t1 = t1.$index(0, "spacer16");
      return t1 == null ? 16 : t1;
    },
    TDSkeletonRowCol$(objects) {
      C.assertHelper(objects.length !== 0 && D.JSArray_methods.every$1(objects, new A.TDSkeletonRowCol_closure()));
      return new A.TDSkeletonRowCol(objects);
    },
    TDSkeletonRowColObjStyle__defaultBackground(context) {
      return A.TDColors_get_grayColor1(C.TDTheme_of(type$.BuildContext._as(context)));
    },
    TDSkeletonRowColObjStyle__transparentBackground(context) {
      type$.BuildContext._as(context);
      return D.Color_Edl;
    },
    TDSkeletonRowColObjStyle__circleBorderRadius(context) {
      var t1 = C.TDTheme_of(type$.BuildContext._as(context)).__TDThemeData_radiusMap_A;
      t1 === $ && C.throwLateFieldNI("radiusMap");
      t1 = t1.$index(0, "radiusCircle");
      return t1 == null ? 9999 : t1;
    },
    TDSkeletonRowColObjStyle__rectBorderRadius(context) {
      return C.TDRadius_get_radiusDefault(C.TDTheme_of(type$.BuildContext._as(context)));
    },
    TDSkeletonRowColObjStyle__textBorderRadius(context) {
      var t1 = C.TDTheme_of(type$.BuildContext._as(context)).__TDThemeData_radiusMap_A;
      t1 === $ && C.throwLateFieldNI("radiusMap");
      t1 = t1.$index(0, "radiusSmall");
      return t1 == null ? 3 : t1;
    },
    TDSkeletonRowColStyle: function TDSkeletonRowColStyle() {
    },
    TDSkeletonRowCol: function TDSkeletonRowCol(t0) {
      this.objects = t0;
    },
    TDSkeletonRowCol_closure: function TDSkeletonRowCol_closure() {
    },
    TDSkeletonRowCol_visualHeight_closure: function TDSkeletonRowCol_visualHeight_closure() {
    },
    TDSkeletonRowCol_visualHeight__closure: function TDSkeletonRowCol_visualHeight__closure() {
    },
    TDSkeletonRowCol_visualHeight_closure0: function TDSkeletonRowCol_visualHeight_closure0() {
    },
    TDSkeletonRowColObjStyle: function TDSkeletonRowColObjStyle(t0, t1) {
      this.background = t0;
      this.borderRadius = t1;
    },
    TDSkeletonRowColObj: function TDSkeletonRowColObj(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.flex = t2;
      _.style = t3;
    },
    TDSlider: function TDSlider(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.leftLabel = t1;
      _.rightLabel = t2;
      _.onChanged = t3;
      _.sliderThemeData = t4;
      _.key = t5;
    },
    TDSliderState: function TDSliderState(t0, t1) {
      var _ = this;
      _._sliderKey = t0;
      _.value = 0;
      _._widget = null;
      _._debugLifecycleState = t1;
      _._framework$_element = null;
    },
    TDSliderState_build_closure1: function TDSliderState_build_closure1(t0, t1) {
      this.$this = t0;
      this.tdSliderThemeData = t1;
    },
    TDSliderState_build_closure0: function TDSliderState_build_closure0(t0) {
      this.$this = t0;
    },
    TDSliderState_build_closure: function TDSliderState_build_closure(t0) {
      this.$this = t0;
    },
    TDSliderState_build__closure: function TDSliderState_build__closure(t0, t1) {
      this.$this = t0;
      this.slideValue = t1;
    },
    TDRangeSlider: function TDRangeSlider(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.leftLabel = t1;
      _.rightLabel = t2;
      _.onChanged = t3;
      _.sliderThemeData = t4;
      _.key = t5;
    },
    _TDRangeSliderState: function _TDRangeSliderState(t0, t1, t2) {
      var _ = this;
      _.rangeValues = t0;
      _._sliderRangeKey = t1;
      _._widget = null;
      _._debugLifecycleState = t2;
      _._framework$_element = null;
    },
    _TDRangeSliderState_build_closure1: function _TDRangeSliderState_build_closure1(t0, t1) {
      this.$this = t0;
      this.tdSliderThemeData = t1;
    },
    _TDRangeSliderState_build_closure0: function _TDRangeSliderState_build_closure0(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDRangeSliderState_build_closure: function _TDRangeSliderState_build_closure(t0) {
      this.$this = t0;
    },
    _TDRangeSliderState_build__closure: function _TDRangeSliderState_build__closure(t0, t1) {
      this.$this = t0;
      this.slideValue = t1;
    },
    TDSliderThemeData$(divisions, max, min, scaleFormatter, showScaleValue, showThumbValue) {
      var _null = null,
        t1 = C.TextStyle$(_null, _null, C.TDColors_get_fontGyColor1(C.TDTheme_of(_null)), _null, _null, _null, _null, _null, _null, _null, _null, 14, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null),
        t2 = C.TextStyle$(_null, _null, C.TDColors_get_fontGyColor4(C.TDTheme_of(_null)), _null, _null, _null, _null, _null, _null, _null, _null, 14, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null),
        t3 = C.TextStyle$(_null, _null, C.TDColors_get_fontGyColor1(C.TDTheme_of(_null)), _null, _null, _null, _null, _null, _null, _null, _null, 14, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null),
        t4 = C.TextStyle$(_null, _null, C.TDColors_get_fontGyColor4(C.TDTheme_of(_null)), _null, _null, _null, _null, _null, _null, _null, _null, 14, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null);
      return new A.TDSliderThemeData(showThumbValue, t3, t4, showScaleValue, scaleFormatter, t1, t2, divisions, min, max, new A.SliderMeasureData());
    },
    TDSliderThemeData: function TDSliderThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.showThumbValue = t0;
      _.thumbTextStyle = t1;
      _.disabledThumbTextStyle = t2;
      _.showScaleValue = t3;
      _.scaleFormatter = t4;
      _.scaleTextStyle = t5;
      _.disabledScaleTextStyle = t6;
      _.divisions = t7;
      _.min = t8;
      _.max = t9;
      _.sliderMeasureData = t10;
      _._sliderThemeData = null;
    },
    SliderMeasureData: function SliderMeasureData() {
      var _ = this;
      _.endRangeThumbTextRect = _.startRangeThumbTextRect = _.thumbTextRect = _.trackerRect = null;
    },
    TDRoundedRectSliderTrackShape: function TDRoundedRectSliderTrackShape(t0) {
      this.themeData = t0;
    },
    TDRoundSliderThumbShape: function TDRoundSliderThumbShape(t0) {
      this.themeData = t0;
    },
    TDNoOverlayShape: function TDNoOverlayShape() {
    },
    TDRoundSliderTickMarkShape: function TDRoundSliderTickMarkShape(t0) {
      this.themeData = t0;
    },
    TDBaseRangeSliderTrackShape: function TDBaseRangeSliderTrackShape() {
    },
    TDRoundedRectRangeSliderTrackShape: function TDRoundedRectRangeSliderTrackShape(t0) {
      this.themeData = t0;
    },
    TDRoundRangeSliderThumbShape: function TDRoundRangeSliderThumbShape(t0) {
      this.themeData = t0;
    },
    TDRoundRangeSliderTickMarkShape: function TDRoundRangeSliderTickMarkShape(t0) {
      this.themeData = t0;
    },
    _TDRoundedRectRangeSliderTrackShape_RangeSliderTrackShape_TDBaseRangeSliderTrackShape: function _TDRoundedRectRangeSliderTrackShape_RangeSliderTrackShape_TDBaseRangeSliderTrackShape() {
    },
    _TDRoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape: function _TDRoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape() {
    },
    MapExt_count(_this, test, $K, $V) {
      var t1 = {};
      t1.count = 0;
      _this.forEach$1(0, new A.MapExt_count_closure(t1, test, $K, $V));
      return t1.count;
    },
    MapExt_where(_this, test, $K, $V) {
      var r = C.LinkedHashMap_LinkedHashMap$_empty($K, $V);
      _this.forEach$1(0, new A.MapExt_where_closure(test, r, $K, $V));
      return r;
    },
    MapExt_count_closure: function MapExt_count_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.test = t1;
      _.K = t2;
      _.V = t3;
    },
    MapExt_where_closure: function MapExt_where_closure(t0, t1, t2, t3) {
      var _ = this;
      _.test = t0;
      _.r = t1;
      _.K = t2;
      _.V = t3;
    },
    ByteWriter: function ByteWriter(t0, t1) {
      this.data = t0;
      this.endian = t1;
      this.i = 0;
    },
    Channel$(nx, ny) {
      var t1 = new A.Channel(nx, ny);
      t1.Channel$2(nx, ny);
      return t1;
    },
    Channel: function Channel(t0, t1) {
      this.nx = t0;
      this.ny = t1;
      this.__Channel_ac_A = $;
    },
    Image1: function Image1(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.rgba = t2;
    },
    Tuple2: function Tuple2(t0, t1, t2) {
      this.item1 = t0;
      this.item2 = t1;
      this.$ti = t2;
    },
    Tuple3: function Tuple3(t0, t1, t2, t3) {
      var _ = this;
      _.item1 = t0;
      _.item2 = t1;
      _.item3 = t2;
      _.$ti = t3;
    },
    RenderWebVectorGraphic: function RenderWebVectorGraphic(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._html_render_vector_graphics$_assetKey = t0;
      _._html_render_vector_graphics$_pictureInfo = t1;
      _._html_render_vector_graphics$_colorFilter = t2;
      _._html_render_vector_graphics$_opacityValue = 1;
      _._html_render_vector_graphics$_opacity = t3;
      _._transformLayer = t4;
      _._html_render_vector_graphics$_opacityHandle = t5;
      _._filterLayer = t6;
      _._html_render_vector_graphics$_transform = t7;
      _._layoutCacheStorage = t8;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t9;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderWebVectorGraphic_paint_closure: function RenderWebVectorGraphic_paint_closure(t0) {
      this.$this = t0;
    },
    RenderWebVectorGraphic_paint__closure: function RenderWebVectorGraphic_paint__closure(t0) {
      this.$this = t0;
    },
    RenderWebVectorGraphic_paint___closure: function RenderWebVectorGraphic_paint___closure(t0) {
      this.$this = t0;
    },
    decodeVectorGraphics(data, clipViewbox, loader, locale, textDirection) {
      var process, e, s, t1, exception, _null = null, onError = null;
      try {
        t1 = {};
        t1.useZone = false;
        C.assertHelper(new A.decodeVectorGraphics_closure(t1, textDirection, locale).call$0());
        process = new A.decodeVectorGraphics_process(loader, locale, textDirection, clipViewbox, onError, data);
        t1 = t1.useZone;
        if (!t1) {
          t1 = process.call$0();
          return t1;
        }
        t1 = $.Zone__current.fork$1$specification(new C._ZoneSpecification(_null, _null, _null, _null, _null, _null, _null, _null, new A.decodeVectorGraphics_closure0(), new A.decodeVectorGraphics_closure1(), new A.decodeVectorGraphics_closure2(), _null, _null)).run$1$1(process, type$.Future_PictureInfo);
        return t1;
      } catch (exception) {
        e = C.unwrapException(exception);
        s = C.getTraceFromException(exception);
        t1 = $._pendingDecodes.remove$1(0, loader);
        if (t1 != null)
          t1.completeError$2(e, s);
        throw C.wrapException(new A.VectorGraphicsDecodeException(loader, e));
      }
    },
    FlutterVectorGraphicsListener$_(_id, _pictureFactory, _recorder, _canvas, _locale, _textDirection, _clipViewbox, onError) {
      var t1 = type$.int;
      return new A.FlutterVectorGraphicsListener(_id, _pictureFactory, _locale, _textDirection, _clipViewbox, _recorder, _canvas, C._setArrayType([], type$.JSArray_Paint), C._setArrayType([], type$.JSArray_Path_2), C._setArrayType([], type$.JSArray_Shader), C._setArrayType([], type$.JSArray__TextConfig), C._setArrayType([], type$.JSArray__TextPosition), C._setArrayType([], type$.JSArray_Future_void), C.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Image), C.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PatternState), D.Size_0_0);
    },
    PictureInfo: function PictureInfo(t0, t1) {
      this.picture = t0;
      this.size = t1;
    },
    decodeVectorGraphics_closure: function decodeVectorGraphics_closure(t0, t1, t2) {
      this._box_1 = t0;
      this.textDirection = t1;
      this.locale = t2;
    },
    decodeVectorGraphics_process: function decodeVectorGraphics_process(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.loader = t0;
      _.locale = t1;
      _.textDirection = t2;
      _.clipViewbox = t3;
      _.onError = t4;
      _.data = t5;
    },
    decodeVectorGraphics_process_closure: function decodeVectorGraphics_process_closure(t0) {
      this.loader = t0;
    },
    decodeVectorGraphics_process_closure0: function decodeVectorGraphics_process_closure0(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.data = t1;
      _.listener = t2;
      _.loader = t3;
    },
    decodeVectorGraphics_process__closure: function decodeVectorGraphics_process__closure(t0) {
      this.loader = t0;
    },
    decodeVectorGraphics_closure0: function decodeVectorGraphics_closure0() {
    },
    decodeVectorGraphics_closure1: function decodeVectorGraphics_closure1() {
    },
    decodeVectorGraphics_closure2: function decodeVectorGraphics_closure2() {
    },
    _PatternConfig: function _PatternConfig(t0, t1, t2, t3) {
      var _ = this;
      _._patternId = t0;
      _._listener0$_width = t1;
      _._listener0$_height = t2;
      _._listener0$_transform = t3;
    },
    _PatternState: function _PatternState() {
      this.recorder = this.shader = this.canvas = null;
    },
    _DefaultPictureFactory: function _DefaultPictureFactory() {
    },
    FlutterVectorGraphicsListener: function FlutterVectorGraphicsListener(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._listener0$_id = t0;
      _._pictureFactory = t1;
      _._listener0$_locale = t2;
      _._listener0$_textDirection = t3;
      _._clipViewbox = t4;
      _._recorder = t5;
      _._listener0$_canvas = t6;
      _._paints = t7;
      _._paths = t8;
      _._shaders = t9;
      _._textConfig = t10;
      _._textPositions = t11;
      _._listener0$_pendingImages = t12;
      _._images = t13;
      _._patterns = t14;
      _._currentPath = null;
      _._listener0$_size = t15;
      _._done = false;
      _._accumulatedTextPositionX = null;
      _._textPositionY = 0;
      _._currentPattern = _._textTransform = null;
    },
    FlutterVectorGraphicsListener_onDrawText_draw: function FlutterVectorGraphicsListener_onDrawText_draw(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.patternId = t2;
      _.textConfig = t3;
      _.dx = t4;
      _.dy = t5;
    },
    FlutterVectorGraphicsListener_onImage_closure: function FlutterVectorGraphicsListener_onImage_closure(t0) {
      this.data = t0;
    },
    FlutterVectorGraphicsListener_onImage__closure: function FlutterVectorGraphicsListener_onImage__closure() {
    },
    FlutterVectorGraphicsListener_onImage_closure0: function FlutterVectorGraphicsListener_onImage_closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.cacheCompleter = t1;
      _.listener = t2;
      _.imageId = t3;
      _.completer = t4;
    },
    FlutterVectorGraphicsListener_onImage_closure1: function FlutterVectorGraphicsListener_onImage_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.completer = t0;
      _.cacheCompleter = t1;
      _.listener = t2;
      _.onError = t3;
    },
    _TextPosition: function _TextPosition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.x = t0;
      _.y = t1;
      _.dx = t2;
      _.dy = t3;
      _.reset = t4;
      _.transform = t5;
    },
    _TextConfig: function _TextConfig(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.text = t0;
      _.fontFamily = t1;
      _.fontSize = t2;
      _.xAnchorMultiplier = t3;
      _.fontWeight = t4;
      _.decoration = t5;
      _.decorationStyle = t6;
      _.decorationColor = t7;
    },
    VectorGraphicsDecodeException: function VectorGraphicsDecodeException(t0, t1) {
      this.source = t0;
      this.originalException = t1;
    },
    BytesLoader: function BytesLoader() {
    },
    RasterKey: function RasterKey(t0, t1, t2) {
      this.assetKey = t0;
      this.width = t1;
      this.height = t2;
    },
    RasterData: function RasterData(t0, t1, t2) {
      this._render_vector_graphic$_image = t0;
      this.key = t1;
      this.count = t2;
    },
    RenderVectorGraphic: function RenderVectorGraphic(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._assetKey = t0;
      _._render_vector_graphic$_pictureInfo = t1;
      _._render_vector_graphic$_colorFilter = t2;
      _._render_vector_graphic$_devicePixelRatio = t3;
      _._opacityValue = 1;
      _._render_vector_graphic$_opacity = t4;
      _._render_vector_graphic$_scale = t5;
      _._rasterData = null;
      _._layoutCacheStorage = t6;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderPictureVectorGraphic: function RenderPictureVectorGraphic(t0, t1, t2, t3, t4) {
      var _ = this;
      _._render_vector_graphic$_pictureInfo = t0;
      _._render_vector_graphic$_colorFilter = t1;
      _._opacityValue = 1;
      _._render_vector_graphic$_opacity = t2;
      _._layoutCacheStorage = t3;
      _._computingThisDryBaseline = _._computingThisDryLayout = false;
      _._box$_size = null;
      _._debugActivePointers = 0;
      _._debugDisposed = false;
      _.parentData = null;
      _._depth = 0;
      _.debugCreator = _._object$_parent = null;
      _._debugDoingThisLayout = _._debugDoingThisResize = false;
      _._debugCanParentUseSize = null;
      _._debugMutationsLocked = false;
      _._object$_owner = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _._debugDoingThisPaint = false;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderingStrategy: function RenderingStrategy(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    VectorGraphic: function VectorGraphic(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.loader = t0;
      _.width = t1;
      _.height = t2;
      _.fit = t3;
      _.alignment = t4;
      _.matchTextDirection = t5;
      _.semanticsLabel = t6;
      _.excludeFromSemantics = t7;
      _.clipBehavior = t8;
      _.placeholderBuilder = t9;
      _.errorBuilder = t10;
      _.transitionDuration = t11;
      _.colorFilter = t12;
      _.opacity = t13;
      _.strategy = t14;
      _.clipViewbox = t15;
      _.key = t16;
    },
    _PictureData: function _PictureData(t0, t1, t2) {
      this.pictureInfo = t0;
      this.key = t1;
      this.count = t2;
    },
    _PictureKey: function _PictureKey(t0, t1, t2, t3) {
      var _ = this;
      _.cacheKey = t0;
      _.locale = t1;
      _.textDirection = t2;
      _.clipViewbox = t3;
    },
    _VectorGraphicWidgetState: function _VectorGraphicWidgetState(t0) {
      var _ = this;
      _._widget = _.textDirection = _.locale = _._stackTrace = _._vector_graphics$_error = _._pictureInfo = null;
      _._debugLifecycleState = t0;
      _._framework$_element = null;
    },
    _VectorGraphicWidgetState__loadPicture_closure: function _VectorGraphicWidgetState__loadPicture_closure(t0, t1) {
      this.key = t0;
      this.loader = t1;
    },
    _VectorGraphicWidgetState__loadPicture_closure0: function _VectorGraphicWidgetState__loadPicture_closure0(t0) {
      this.key = t0;
    },
    _VectorGraphicWidgetState__loadPicture_closure1: function _VectorGraphicWidgetState__loadPicture_closure1(t0) {
      this.key = t0;
    },
    _VectorGraphicWidgetState__handleError_closure: function _VectorGraphicWidgetState__handleError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _VectorGraphicWidgetState__loadAssetBytes_closure: function _VectorGraphicWidgetState__loadAssetBytes_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _VectorGraphicWidgetState__loadAssetBytes_closure0: function _VectorGraphicWidgetState__loadAssetBytes_closure0(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _RawVectorGraphicWidget: function _RawVectorGraphicWidget(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.pictureInfo = t0;
      _.colorFilter = t1;
      _.scale = t2;
      _.opacity = t3;
      _.assetKey = t4;
      _.child = t5;
      _.key = t6;
    },
    _RawWebVectorGraphicWidget: function _RawWebVectorGraphicWidget(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.pictureInfo = t0;
      _.colorFilter = t1;
      _.opacity = t2;
      _.assetKey = t3;
      _.child = t4;
      _.key = t5;
    },
    _RawPictureVectorGraphicWidget: function _RawPictureVectorGraphicWidget(t0, t1, t2, t3, t4) {
      var _ = this;
      _.pictureInfo = t0;
      _.colorFilter = t1;
      _.opacity = t2;
      _.child = t3;
      _.key = t4;
    },
    DecodeResponse: function DecodeResponse(t0, t1) {
      this.complete = t0;
      this._vector_graphics_codec$_buffer = t1;
    },
    VectorGraphicsCodec: function VectorGraphicsCodec() {
    },
    VectorGraphicsCodecListener: function VectorGraphicsCodecListener() {
    },
    _CurrentSection: function _CurrentSection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    VectorGraphicsBuffer: function VectorGraphicsBuffer(t0, t1, t2) {
      var _ = this;
      _._vector_graphics_codec$_buffer = t0;
      _._vector_graphics_codec$_isDone = false;
      _._vector_graphics_codec$_eightBytes = t1;
      _.__VectorGraphicsBuffer__eightBytesAsList_A = $;
      _._nextPatternId = _._nextImageId = _._nextTextPositionId = _._nextTextId = _._nextShaderId = _._nextPathId = _._nextPaintId = 0;
      _._addedCommandTag = false;
      _._decodePhase = t2;
    },
    _ReadBuffer: function _ReadBuffer(t0) {
      this.data = t0;
      this._vector_graphics_codec$_position = 0;
    },
    DrawCommandBuilder: function DrawCommandBuilder(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._draw_command_builder$_paints = t0;
      _._draw_command_builder$_paths = t1;
      _._draw_command_builder$_text = t2;
      _._draw_command_builder$_images = t3;
      _._drawImages = t4;
      _._vertices = t5;
      _._commands = t6;
      _._draw_command_builder$_patterns = t7;
      _._patternData = t8;
      _._draw_command_builder$_textPositions = t9;
    },
    DrawCommandBuilder__getOrGenerateId_closure: function DrawCommandBuilder__getOrGenerateId_closure(t0) {
      this.map = t0;
    },
    Point_lerp(a, b, t) {
      return new A.Point(A.lerpDouble0(a.x, b.x, t), A.lerpDouble0(a.y, b.y, t));
    },
    Point_distance(a, b) {
      var x = a.x - b.x,
        y = a.y - b.y;
      return Math.sqrt(x * x + y * y);
    },
    Point: function Point(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    Rect0: function Rect0(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    ImageData: function ImageData(t0, t1) {
      this.data = t0;
      this.format = t1;
    },
    DrawImageData: function DrawImageData(t0, t1, t2) {
      this.id = t0;
      this.rect = t1;
      this.transform = t2;
    },
    AffineMatrix$(a, b, c, d, e, f, m4_10) {
      return new A.AffineMatrix(a, b, c, d, e, f, m4_10 == null ? a : m4_10);
    },
    _transformRect(transform, rect) {
      var t1, t2, wx, t3, hx, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, ury, t4, llx, lly, lrx, lry,
        x = rect.left,
        y = rect.top,
        w = rect.right - x,
        h = rect.bottom - y;
      if (C.assertTest(isFinite(w) && isFinite(h)))
        C.assertThrow("(" + C.S(w) + ", " + C.S(h) + ")");
      t1 = transform.length;
      if (0 >= t1)
        return C.ioore(transform, 0);
      t2 = transform[0];
      wx = t2 * w;
      if (4 >= t1)
        return C.ioore(transform, 4);
      t3 = transform[4];
      hx = t3 * h;
      if (12 >= t1)
        return C.ioore(transform, 12);
      rx = t2 * x + t3 * y + transform[12];
      t3 = transform[1];
      wy = t3 * w;
      t2 = transform[5];
      hy = t2 * h;
      if (13 >= t1)
        return C.ioore(transform, 13);
      ry = t3 * x + t2 * y + transform[13];
      t2 = transform[3];
      t3 = false;
      if (t2 === 0)
        if (transform[7] === 0) {
          if (15 >= t1)
            return C.ioore(transform, 15);
          t3 = transform[15] === 1;
        }
      if (t3) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return new A.Rect0(left, $top, right, bottom);
      } else {
        t3 = transform[7];
        hw = t3 * h;
        if (15 >= t1)
          return C.ioore(transform, 15);
        rw = t2 * x + t3 * y + transform[15];
        ulx = rx / rw;
        uly = ry / rw;
        t3 = rx + wx;
        t2 = rw + t2 * w;
        urx = t3 / t2;
        t1 = ry + wy;
        ury = t1 / t2;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t2 += hw;
        lrx = (t3 + hx) / t2;
        lry = (t1 + hy) / t2;
        return new A.Rect0(A._min4(ulx, urx, llx, lrx), A._min4(uly, ury, lly, lry), A._max4(ulx, urx, llx, lrx), A._max4(uly, ury, lly, lry));
      }
    },
    _min4(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    _max4(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    AffineMatrix: function AffineMatrix(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
      _.e = t4;
      _.f = t5;
      _._m4_10 = t6;
    },
    CubicToCommand_subdivide(start, control1, control2, end, t) {
      var ab = A.Point_lerp(start, control1, t),
        bc = A.Point_lerp(control1, control2, t),
        cd = A.Point_lerp(control2, end, t),
        abc = A.Point_lerp(ab, bc, t),
        bcd = A.Point_lerp(bc, cd, t);
      return C._setArrayType([start, ab, abc, A.Point_lerp(abc, bcd, t), bcd, cd, end], type$.JSArray_Point);
    },
    Path$(commands, fillType) {
      var t1 = C._setArrayType([], type$.JSArray_PathCommand);
      D.JSArray_methods.addAll$1(t1, commands);
      return new A.Path(t1, fillType);
    },
    parseSvgPathData(svg, type) {
      var parser, t1, pathBuilder, normalizer, t2, t3;
      if (svg === "")
        return A.Path$(B.List_empty25, type == null ? B.PathFillType_00 : type);
      parser = new A.SvgPathStringSource(svg, B.SvgPathSegType_0, svg.length);
      parser._skipOptionalSvgSpaces$0();
      t1 = C._setArrayType([], type$.JSArray_PathCommand);
      pathBuilder = new A.PathBuilder(t1, type == null ? B.PathFillType_00 : type);
      normalizer = new A.SvgPathNormalizer(B._PathOffset_0_0, B._PathOffset_0_0, B._PathOffset_0_0, B.SvgPathSegType_0);
      for (t1 = parser.parseSegments$0(), t2 = t1.$ti, t1 = new C._SyncStarIterator(t1._outerHelper(), t2._eval$1("_SyncStarIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._async$_current;
        normalizer.emitSegment$2(t3 == null ? t2._as(t3) : t3, pathBuilder);
      }
      return pathBuilder.toPath$0();
    },
    _CircularIntervalList$(_vals) {
      C.assertHelper(_vals.length !== 0);
      C.assertHelper(!D.JSArray_methods.every$1(_vals, new A._CircularIntervalList_closure()));
      return new A._CircularIntervalList(_vals);
    },
    _PathDasher$(intervals) {
      var t1 = C._setArrayType([], type$.JSArray_PathCommand);
      C.assertHelper(!D.JSArray_methods.every$1(intervals, new A._PathDasher_closure()));
      return new A._PathDasher(A._CircularIntervalList$(intervals), B.Point_0_0, B.Point_0_0, t1);
    },
    PathFillType0: function PathFillType0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PathCommandType: function PathCommandType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PathCommand: function PathCommand() {
    },
    LineToCommand: function LineToCommand(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.type = t2;
    },
    MoveToCommand: function MoveToCommand(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.type = t2;
    },
    CubicToCommand: function CubicToCommand(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.x1 = t0;
      _.y1 = t1;
      _.x2 = t2;
      _.y2 = t3;
      _.x3 = t4;
      _.y3 = t5;
      _.type = t6;
    },
    CubicToCommand_computeLength_compute: function CubicToCommand_computeLength_compute() {
    },
    CloseCommand: function CloseCommand(t0) {
      this.type = t0;
    },
    PathBuilder: function PathBuilder(t0, t1) {
      this._path$_commands = t0;
      this.__PathBuilder_fillType_A = t1;
    },
    Path: function Path(t0, t1) {
      this._path$_commands = t0;
      this.fillType = t1;
    },
    _CircularIntervalList: function _CircularIntervalList(t0) {
      this._vals = t0;
      this._path$_idx = 0;
    },
    _CircularIntervalList_closure: function _CircularIntervalList_closure() {
    },
    _PathDasher: function _PathDasher(t0, t1, t2, t3) {
      var _ = this;
      _._path$_intervals = t0;
      _.___PathDasher_length_A = $;
      _.currentPoint = t1;
      _.currentSubpathPoint = t2;
      _.___PathDasher_draw_A = $;
      _._dashedCommands = t3;
    },
    _PathDasher_closure: function _PathDasher_closure() {
    },
    PatternData: function PatternData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.x = t0;
      _.y = t1;
      _.width = t2;
      _.height = t3;
      _.transform = t4;
    },
    ImageSizeData_ImageSizeData$fromBytes(bytes) {
      var t2, t3, t4,
        t1 = bytes.length;
      if (t1 === 0)
        throw C.wrapException(C.ArgumentError$("bytes was empty", null));
      t2 = bytes.byteLength;
      t3 = false;
      if (t2 > 20) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 137) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 80) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            if (bytes[2] === 78) {
              if (3 >= t1)
                return C.ioore(bytes, 3);
              if (bytes[3] === 71) {
                if (4 >= t1)
                  return C.ioore(bytes, 4);
                if (bytes[4] === 13) {
                  if (5 >= t1)
                    return C.ioore(bytes, 5);
                  if (bytes[5] === 10) {
                    if (6 >= t1)
                      return C.ioore(bytes, 6);
                    if (bytes[6] === 26) {
                      if (7 >= t1)
                        return C.ioore(bytes, 7);
                      t3 = bytes[7] === 10;
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (t3) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new A.PngImageSizeData(t1.getUint32(16, false), t1.getUint32(20, false));
      }
      t3 = false;
      if (t2 > 8) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 71) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 73) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            if (bytes[2] === 70) {
              if (3 >= t1)
                return C.ioore(bytes, 3);
              if (bytes[3] === 56) {
                if (4 >= t1)
                  return C.ioore(bytes, 4);
                t4 = bytes[4];
                if (t4 === 55 || t4 === 57) {
                  if (5 >= t1)
                    return C.ioore(bytes, 5);
                  t3 = bytes[5] === 97;
                }
              }
            }
          }
        }
      }
      if (t3) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new A.GifImageSizeData(t1.getUint16(6, true), t1.getUint16(8, true));
      }
      t3 = false;
      if (t2 > 12) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 255) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 216) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            t3 = bytes[2] === 255;
          }
        }
      }
      if (t3)
        return A.JpegImageSizeData_JpegImageSizeData$_fromBytes(J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes)));
      t3 = false;
      if (t2 > 28) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 82) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 73) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            if (bytes[2] === 70) {
              if (3 >= t1)
                return C.ioore(bytes, 3);
              if (bytes[3] === 70) {
                if (8 >= t1)
                  return C.ioore(bytes, 8);
                if (bytes[8] === 87) {
                  if (9 >= t1)
                    return C.ioore(bytes, 9);
                  if (bytes[9] === 69) {
                    if (10 >= t1)
                      return C.ioore(bytes, 10);
                    if (bytes[10] === 66) {
                      if (11 >= t1)
                        return C.ioore(bytes, 11);
                      t3 = bytes[11] === 80;
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (t3) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new A.WebPImageSizeData(t1.getUint16(26, true), t1.getUint16(28, true));
      }
      t3 = false;
      if (t2 > 22) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 66) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          t1 = bytes[1] === 77;
        } else
          t1 = t3;
      } else
        t1 = t3;
      if (t1) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        t2 = t1.getInt32(18, true);
        t1 = t1.getInt32(22, true);
        C.assertHelper(t2 >= 0);
        C.assertHelper(t1 >= 0);
        return new A.BmpImageSizeData(t2, t1);
      }
      throw C.wrapException(C.ArgumentError$("unknown image type", null));
    },
    JpegImageSizeData_JpegImageSizeData$_fromBytes(data) {
      var t1,
        index = 4 + data.getUint16(4, false);
      for (; index < data.byteLength;) {
        if (data.getUint8(index) !== 255)
          throw C.wrapException(C.StateError$("Invalid JPEG file"));
        if (D.JSArray_methods.contains$1(B.List_192_193_194, data.getUint8(index + 1))) {
          t1 = data.getUint16(index + 5, false);
          return new A.JpegImageSizeData(data.getUint16(index + 7, false), t1);
        }
        index += 2;
        index += data.getUint16(index, false);
      }
      throw C.wrapException(C.StateError$("Invalid JPEG"));
    },
    ImageFormat: function ImageFormat(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ImageSizeData: function ImageSizeData() {
    },
    PngImageSizeData: function PngImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    GifImageSizeData: function GifImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    JpegImageSizeData: function JpegImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    WebPImageSizeData: function WebPImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    BmpImageSizeData: function BmpImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    Color$fromRGBO0(r, g, b, opacity) {
      return new A.Color0(((D.JSNumber_methods._tdivFast$1(opacity * 255, 1) & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color$fromARGB0(a, r, g, b) {
      return new A.Color0(((a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color0: function Color0(t0) {
      this.value = t0;
    },
    Gradient0: function Gradient0() {
    },
    LinearGradient0: function LinearGradient0(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.id = t2;
      _.colors = t3;
      _.offsets = t4;
      _.tileMode = t5;
      _.unitMode = t6;
      _.transform = t7;
    },
    GradientUnitMode: function GradientUnitMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RadialGradient: function RadialGradient(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.center = t0;
      _.radius = t1;
      _.focalPoint = t2;
      _.id = t3;
      _.colors = t4;
      _.offsets = t5;
      _.tileMode = t6;
      _.unitMode = t7;
      _.transform = t8;
    },
    Paint: function Paint(t0, t1, t2) {
      this.blendMode = t0;
      this.stroke = t1;
      this.fill = t2;
    },
    Stroke: function Stroke(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.color = t0;
      _.shader = t1;
      _.cap = t2;
      _.join = t3;
      _.miterLimit = t4;
      _.width = t5;
    },
    Fill: function Fill(t0, t1) {
      this.color = t0;
      this.shader = t1;
    },
    BlendMode0: function BlendMode0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PaintingStyle0: function PaintingStyle0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    StrokeCap0: function StrokeCap0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    StrokeJoin0: function StrokeJoin0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TileMode0: function TileMode0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextPosition0: function TextPosition0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.x = t0;
      _.dx = t1;
      _.y = t2;
      _.dy = t3;
      _.reset = t4;
      _.transform = t5;
    },
    TextConfig: function TextConfig(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.text = t0;
      _.xAnchorMultiplier = t1;
      _.fontSize = t2;
      _.fontFamily = t3;
      _.fontWeight = t4;
      _.decoration = t5;
      _.decorationStyle = t6;
      _.decorationColor = t7;
    },
    FontWeight0: function FontWeight0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextDecorationStyle0: function TextDecorationStyle0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextDecoration0: function TextDecoration0(t0) {
      this.mask = t0;
    },
    ViewportNode$(attributes, children, height, transform, width) {
      var t1 = children == null ? C._setArrayType([], type$.JSArray_Node) : children;
      return new A.ViewportNode(width, height, t1, attributes, transform);
    },
    ParentNode$(attributes, children, precalculatedTransform) {
      var t1 = children == null ? C._setArrayType([], type$.JSArray_Node) : children;
      return new A.ParentNode(t1, attributes, precalculatedTransform == null ? attributes.transform : precalculatedTransform);
    },
    TextPositionNode$(attributes, reset) {
      var t1 = C._setArrayType([], type$.JSArray_Node);
      return new A.TextPositionNode(reset, t1, attributes, attributes.transform);
    },
    SaveLayerNode$(attributes, children, paint) {
      return new A.SaveLayerNode(paint, children, attributes, B.AffineMatrix_qrl);
    },
    PathNode$(path, attributes) {
      return new A.PathNode(path, attributes, attributes.transform);
    },
    DeferredNode$(attributes, refId, resolver) {
      return new A.DeferredNode(refId, resolver, attributes, attributes.transform);
    },
    TextNode$(text, attributes) {
      return new A.TextNode(text, attributes, attributes.transform);
    },
    ImageNode$(data, format, attributes) {
      return new A.ImageNode(data, format, attributes, attributes.transform);
    },
    Node0: function Node0() {
    },
    _EmptyNode: function _EmptyNode() {
    },
    TransformableNode: function TransformableNode() {
    },
    AttributedNode: function AttributedNode() {
    },
    ViewportNode: function ViewportNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _._node$_children = t2;
      _.attributes = t3;
      _.transform = t4;
    },
    ParentNode: function ParentNode(t0, t1, t2) {
      this._node$_children = t0;
      this.attributes = t1;
      this.transform = t2;
    },
    TextPositionNode: function TextPositionNode(t0, t1, t2, t3) {
      var _ = this;
      _.reset = t0;
      _._node$_children = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    SaveLayerNode: function SaveLayerNode(t0, t1, t2, t3) {
      var _ = this;
      _.paint = t0;
      _._node$_children = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    ClipNode: function ClipNode(t0, t1, t2, t3) {
      var _ = this;
      _.resolver = t0;
      _.clipId = t1;
      _.child = t2;
      _.transform = t3;
    },
    MaskNode: function MaskNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.maskId = t0;
      _.child = t1;
      _.blendMode = t2;
      _.resolver = t3;
      _.transform = t4;
    },
    PathNode: function PathNode(t0, t1, t2) {
      this.path = t0;
      this.attributes = t1;
      this.transform = t2;
    },
    DeferredNode: function DeferredNode(t0, t1, t2, t3) {
      var _ = this;
      _.refId = t0;
      _.resolver = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    TextNode: function TextNode(t0, t1, t2) {
      this.text = t0;
      this.attributes = t1;
      this.transform = t2;
    },
    ImageNode: function ImageNode(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.format = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    PatternNode: function PatternNode(t0, t1, t2, t3) {
      var _ = this;
      _.patternId = t0;
      _.child = t1;
      _.resolver = t2;
      _.transform = t3;
    },
    _Elements_svg(parserState, warningsAsErrors) {
      var t1, t2,
        viewBox = parserState._parseViewBox$0();
      if (parserState._parser$_root != null) {
        t1 = parserState._parentDrawables;
        t1._collection$_add$1(0, t1.$ti._precomputed1._as(new A._SvgGroupTuple("svg", A.ViewportNode$(parserState._currentAttributes, null, viewBox.height, viewBox.transform, viewBox.width))));
        return;
      }
      t1 = A.ViewportNode$(parserState._currentAttributes, null, viewBox.height, viewBox.transform, viewBox.width);
      parserState._parser$_root = t1;
      t2 = parserState._currentStartElement;
      t2.toString;
      parserState.addGroup$2(t2, t1);
      return;
    },
    _Elements_g(parserState, warningsAsErrors) {
      var $parent, group, t2, t3,
        t1 = parserState._currentStartElement;
      t1 = t1 == null ? null : t1.isSelfClosing;
      if (t1 === true)
        return;
      t1 = parserState._parentDrawables;
      C.assertHelper(!t1.get$isEmpty(0));
      $parent = t1.get$last(0).drawable;
      t1 = parserState._currentAttributes;
      group = A.ParentNode$(t1, null, null);
      t2 = parserState._definitions;
      t3 = t2.get$getDrawable();
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(group, t1.clipPathId, t2.get$getClipPath(), parserState.attribute$1("mask"), t3, t2.getPattern$1(parserState), t3);
      t3 = parserState._currentStartElement;
      t3.toString;
      parserState.addGroup$2(t3, group);
      return;
    },
    _Elements_textOrTspan(parserState, warningsAsErrors) {
      var $parent, element, group, t2,
        t1 = parserState._currentStartElement;
      t1 = t1 == null ? null : t1.isSelfClosing;
      if (t1 === true)
        return;
      t1 = parserState._parentDrawables;
      C.assertHelper(!t1.get$isEmpty(0));
      $parent = t1.get$last(0).drawable;
      element = parserState._currentStartElement;
      group = A.TextPositionNode$(parserState._currentAttributes, element.get$localName(0) === "text");
      t1 = parserState._definitions;
      t2 = t1.get$getDrawable();
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(group, parserState._currentAttributes.clipPathId, t1.get$getClipPath(), parserState.attribute$1("mask"), t2, t1.getPattern$1(parserState), t2);
      parserState.addGroup$2(element, group);
      return;
    },
    _Elements_symbol(parserState, warningsAsErrors) {
      var group = A.ParentNode$(parserState._currentAttributes, null, null),
        t1 = parserState._currentStartElement;
      t1.toString;
      parserState.addGroup$2(t1, group);
      return;
    },
    _Elements_pattern(parserState, warningsAsErrors) {
      var rawHeight, patternWidth, patternHeight, viewBox, t1, rawX, rawY, group, _null = null,
        attributes = parserState._currentAttributes,
        rawWidth = parserState.attribute$1("width");
      if (rawWidth == null)
        rawWidth = "";
      rawHeight = parserState.attribute$1("height");
      if (rawHeight == null)
        rawHeight = "";
      patternWidth = A.parsePatternUnitToDouble(rawWidth, "width", parserState._parser$_root);
      patternHeight = A.parsePatternUnitToDouble(rawHeight, "height", parserState._parser$_root);
      if (patternWidth == null || patternHeight == null) {
        viewBox = parserState._parseViewBox$0();
        patternWidth = viewBox.width;
        patternHeight = viewBox.height;
      }
      t1 = attributes.raw;
      rawX = t1.$index(0, "x");
      rawY = t1.$index(0, "y");
      parserState.patternIds.add$1(0, "url(#" + C.S(parserState._currentAttributes.id) + ")");
      group = A.ParentNode$(A.SvgAttributes$_(attributes.blendMode, attributes.clipPathId, attributes.clipRule, attributes.color, _null, _null, attributes.fill, attributes.fillRule, attributes.fontFamily, attributes.fontSize, attributes.fontWeight, patternHeight, attributes.href, attributes.id, t1, attributes.stroke, _null, _null, _null, _null, attributes.transform, patternWidth, A.DoubleOrPercentage_fromString(rawX), A.DoubleOrPercentage_fromString(rawY)), _null, _null);
      t1 = parserState._currentStartElement;
      t1.toString;
      parserState.addGroup$2(t1, group);
      return;
    },
    _Elements_use(parserState, warningsAsErrors) {
      var $parent, xlinkHref, t2, t3, group,
        t1 = parserState._parentDrawables;
      C.assertHelper(!t1.get$isEmpty(0));
      $parent = t1.get$last(0).drawable;
      xlinkHref = parserState._currentAttributes.href;
      if (xlinkHref == null || xlinkHref.length === 0)
        return;
      t1 = A.parseTransform(parserState.attribute$1("transform"));
      if (t1 == null)
        t1 = B.AffineMatrix_qrl;
      t2 = parserState.theme;
      t3 = A.parseDoubleWithUnits(parserState.attribute$2$def("x", "0"), t2, false);
      t3.toString;
      t2 = A.parseDoubleWithUnits(parserState.attribute$2$def("y", "0"), t2, false);
      t2.toString;
      group = A.ParentNode$(B.SvgAttributes_781, null, t1.translated$2(t3, t2));
      t2 = parserState._definitions;
      t3 = t2.get$getDrawable();
      t1 = t2.get$getClipPath();
      group.addChild$4$clipResolver$maskResolver$patternResolver(A.DeferredNode$(parserState._currentAttributes, "url(" + C.S(xlinkHref) + ")", t3), t1, t3, t3);
      if ("#" + C.S(parserState._currentAttributes.id) !== xlinkHref)
        parserState.checkForIri$1(group);
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(group, parserState._currentAttributes.clipPathId, t1, parserState.attribute$1("mask"), t3, t2.getPattern$1(parserState), t3);
      return;
    },
    _Elements_parseStops(parserState, colors, offsets) {
      var t1, t2, t3, rawOpacity, stopColor, t4, rawOffset,
        _s10_ = "stop-color";
      for (t1 = parserState._readSubtree$0(), t2 = t1.$ti, t1 = new C._SyncStarIterator(t1._outerHelper(), t2._eval$1("_SyncStarIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._async$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 instanceof A.XmlEndElementEvent)
          continue;
        if (t3 instanceof A.XmlStartElementEvent) {
          rawOpacity = parserState._currentAttributes.raw.$index(0, "stop-opacity");
          if (rawOpacity == null)
            rawOpacity = "1";
          t3 = parserState._currentAttributes.raw.$index(0, _s10_);
          if (t3 == null)
            t3 = null;
          stopColor = parserState.parseColor$3$attributeName$id(t3, _s10_, parserState._currentAttributes.id);
          if (stopColor == null)
            stopColor = B.Color_4278190080;
          t3 = A.parseDouble(rawOpacity, false);
          t3.toString;
          t4 = stopColor.value;
          D.JSArray_methods.add$1(colors, A.Color$fromRGBO0(t4 >>> 16 & 255, t4 >>> 8 & 255, t4 & 255, t3));
          rawOffset = parserState._currentAttributes.raw.$index(0, "offset");
          D.JSArray_methods.add$1(offsets, A.parseDecimalOrPercentage(rawOffset == null ? "0%" : rawOffset));
        }
      }
      return;
    },
    _Elements_radialGradient(parserState, warningsAsErrors) {
      var offsets, colors, cx, cy, r, fx, fy, t2,
        unitMode = parserState.parseGradientUnitMode$0(),
        rawCx = parserState.attribute$2$def("cx", "50%"),
        rawCy = parserState.attribute$2$def("cy", "50%"),
        rawR = parserState.attribute$2$def("r", "50%"),
        rawFx = parserState.attribute$2$def("fx", rawCx),
        rawFy = parserState.attribute$2$def("fy", rawCy),
        spreadMethod = parserState.parseTileMode$0(),
        t1 = parserState._currentAttributes,
        originalTransform = A.parseTransform(parserState.attribute$1("gradientTransform"));
      if (!parserState._currentStartElement.isSelfClosing) {
        offsets = C._setArrayType([], type$.JSArray_double);
        colors = C._setArrayType([], type$.JSArray_Color_2);
        A._Elements_parseStops(parserState, colors, offsets);
      } else {
        offsets = null;
        colors = null;
      }
      rawCx.toString;
      cx = A.parseDecimalOrPercentage(rawCx);
      rawCy.toString;
      cy = A.parseDecimalOrPercentage(rawCy);
      rawR.toString;
      r = A.parseDecimalOrPercentage(rawR);
      rawFx.toString;
      fx = A.parseDecimalOrPercentage(rawFx);
      rawFy.toString;
      fy = A.parseDecimalOrPercentage(rawFy);
      t2 = fx !== cx || fy !== cy ? new A.Point(fx, fy) : null;
      parserState._definitions.addGradient$2(new A.RadialGradient(new A.Point(cx, cy), r, t2, "url(#" + C.S(t1.id) + ")", colors, offsets, spreadMethod, unitMode, originalTransform), parserState._currentAttributes.href);
      return;
    },
    _Elements_linearGradient(parserState, warningsAsErrors) {
      var t2, t3, t4, t5, originalTransform, spreadMethod, offsets, colors,
        unitMode = parserState.parseGradientUnitMode$0(),
        t1 = parserState.attribute$2$def("x1", "0%");
      t1.toString;
      t2 = parserState.attribute$2$def("x2", "100%");
      t2.toString;
      t3 = parserState.attribute$2$def("y1", "0%");
      t3.toString;
      t4 = parserState.attribute$2$def("y2", "0%");
      t4.toString;
      t5 = parserState._currentAttributes;
      originalTransform = A.parseTransform(parserState.attribute$1("gradientTransform"));
      spreadMethod = parserState.parseTileMode$0();
      if (!parserState._currentStartElement.isSelfClosing) {
        offsets = C._setArrayType([], type$.JSArray_double);
        colors = C._setArrayType([], type$.JSArray_Color_2);
        A._Elements_parseStops(parserState, colors, offsets);
      } else {
        offsets = null;
        colors = null;
      }
      parserState._definitions.addGradient$2(new A.LinearGradient0(new A.Point(A.parseDecimalOrPercentage(t1), A.parseDecimalOrPercentage(t3)), new A.Point(A.parseDecimalOrPercentage(t2), A.parseDecimalOrPercentage(t4)), "url(#" + C.S(t5.id) + ")", colors, offsets, spreadMethod, unitMode, originalTransform), parserState._currentAttributes.href);
      return;
    },
    _Elements_clipPath(parserState, warningsAsErrors) {
      var t2, t3, t4, t5, t6, t7, t8, pathFn, t9, t10,
        t1 = parserState._currentAttributes,
        pathNodes = C._setArrayType([], type$.JSArray_Node);
      for (t2 = parserState._readSubtree$0(), t3 = t2.$ti, t2 = new C._SyncStarIterator(t2._outerHelper(), t3._eval$1("_SyncStarIterator<1>")), t3 = t3._precomputed1, t4 = parserState._definitions, t5 = t4.get$getDrawable(), t6 = type$.JSArray_PathCommand, t7 = parserState._parentDrawables; t2.moveNext$0();) {
        t8 = t2._async$_current;
        if (t8 == null)
          t8 = t3._as(t8);
        if (t8 instanceof A.XmlEndElementEvent)
          continue;
        if (t8 instanceof A.XmlStartElementEvent) {
          t8 = t8.name;
          pathFn = B.Map_BvFKH.$index(0, t8);
          if (pathFn != null) {
            t8 = pathFn.call$1(parserState);
            t8.toString;
            C.assertHelper(!t7.get$isEmpty(0));
            t9 = t7.get$last(0).drawable;
            t8 = parserState.applyTransformIfNeeded$2(t8, t9.transform)._path$_commands;
            t8 = C._setArrayType(t8.slice(0), C._arrayInstanceType(t8));
            t9 = parserState._currentAttributes.clipRule;
            if (t9 == null)
              t9 = B.PathFillType_00;
            t10 = C._setArrayType([], t6);
            D.JSArray_methods.addAll$1(t10, t8);
            t8 = parserState._currentAttributes;
            D.JSArray_methods.add$1(pathNodes, new A.PathNode(new A.Path(t10, t9), t8, t8.transform));
          } else if (t8 === "use") {
            t8 = parserState._currentAttributes;
            D.JSArray_methods.add$1(pathNodes, new A.DeferredNode("url(" + C.S(t8.href) + ")", t5, t8, t8.transform));
          }
        }
      }
      t4.addClipPath$2("url(#" + C.S(t1.id) + ")", pathNodes);
      return;
    },
    _Elements_image(parserState, warningsAsErrors) {
      var semiColonLocation, t1, t2, t3, mimeType, format, image,
        xlinkHref = parserState._currentAttributes.href;
      if (xlinkHref == null)
        return;
      if (D.JSString_methods.startsWith$1(xlinkHref, "data:")) {
        semiColonLocation = D.JSString_methods.indexOf$1(xlinkHref, ";") + 1;
        t1 = D.JSString_methods.indexOf$2(xlinkHref, ",", semiColonLocation);
        t2 = D.JSString_methods.substring$2(xlinkHref, D.JSString_methods.indexOf$1(xlinkHref, "/") + 1, semiColonLocation - 1);
        t3 = $.$get$_whitespacePattern();
        mimeType = C.stringReplaceAllUnchecked(t2, t3, "").toLowerCase();
        format = B.Map_rXDqg.$index(0, mimeType);
        if (format == null) {
          C.print("Warning: Unsupported image format " + mimeType);
          return;
        }
        t1 = D.JSString_methods.substring$1(xlinkHref, t1 + 1);
        image = A.ImageNode$(D.C_Base64Decoder.convert$1(C.stringReplaceAllUnchecked(t1, t3, "")), format, parserState._currentAttributes);
        t1 = parserState._parentDrawables;
        C.assertHelper(!t1.get$isEmpty(0));
        t2 = parserState._definitions;
        t3 = t2.get$getDrawable();
        t1.get$last(0).drawable.addChild$4$clipResolver$maskResolver$patternResolver(image, t2.get$getClipPath(), t3, t3);
        parserState.checkForIri$1(image);
        return;
      }
      return;
    },
    _Paths_circle(parserState) {
      var t3, t4, t5,
        t1 = parserState.theme,
        t2 = A.parseDoubleWithUnits(parserState.attribute$2$def("cx", "0"), t1, false);
      t2.toString;
      t3 = A.parseDoubleWithUnits(parserState.attribute$2$def("cy", "0"), t1, false);
      t3.toString;
      t1 = A.parseDoubleWithUnits(parserState.attribute$2$def("r", "0"), t1, false);
      t1.toString;
      t4 = parserState._currentAttributes.fillRule;
      t5 = C._setArrayType([], type$.JSArray_PathCommand);
      return new A.PathBuilder(t5, t4 == null ? B.PathFillType_00 : t4).addOval$1(new A.Rect0(t2 - t1, t3 - t1, t2 + t1, t3 + t1)).toPath$0();
    },
    _Paths_path(parserState) {
      var t1 = parserState.attribute$2$def("d", "");
      t1.toString;
      return A.parseSvgPathData(t1, parserState._currentAttributes.fillRule);
    },
    _Paths_rect(parserState) {
      var t3, t4, t5, rxRaw, ryRaw, t6, t7, t8,
        t1 = parserState.theme,
        t2 = A.parseDoubleWithUnits(parserState.attribute$2$def("x", "0"), t1, false);
      t2.toString;
      t3 = A.parseDoubleWithUnits(parserState.attribute$2$def("y", "0"), t1, false);
      t3.toString;
      t4 = A.parseDoubleWithUnits(parserState.attribute$2$def("width", "0"), t1, false);
      t4.toString;
      t5 = A.parseDoubleWithUnits(parserState.attribute$2$def("height", "0"), t1, false);
      t5.toString;
      rxRaw = parserState.attribute$1("rx");
      ryRaw = parserState.attribute$1("ry");
      if (rxRaw == null)
        rxRaw = ryRaw;
      if (ryRaw == null)
        ryRaw = rxRaw;
      if (rxRaw != null && rxRaw !== "") {
        t6 = A.parseDoubleWithUnits(rxRaw, t1, false);
        t6.toString;
        t1 = A.parseDoubleWithUnits(ryRaw, t1, false);
        t1.toString;
        t7 = parserState._currentAttributes.fillRule;
        t8 = C._setArrayType([], type$.JSArray_PathCommand);
        return new A.PathBuilder(t8, t7 == null ? B.PathFillType_00 : t7).addRRect$3(new A.Rect0(t2, t3, t2 + t4, t3 + t5), t6, t1).toPath$0();
      }
      t1 = parserState._currentAttributes.fillRule;
      t6 = C._setArrayType([], type$.JSArray_PathCommand);
      return new A.PathBuilder(t6, t1 == null ? B.PathFillType_00 : t1).addRect$1(new A.Rect0(t2, t3, t2 + t4, t3 + t5)).toPath$0();
    },
    _Paths_polygon(parserState) {
      return A._Paths_parsePathFromPoints(parserState, true);
    },
    _Paths_polyline(parserState) {
      return A._Paths_parsePathFromPoints(parserState, false);
    },
    _Paths_parsePathFromPoints(parserState, $close) {
      var t2,
        t1 = parserState.attribute$2$def("points", "");
      t1.toString;
      if (t1 === "")
        return null;
      t2 = $close ? "z" : "";
      return A.parseSvgPathData("M" + t1 + t2, parserState._currentAttributes.fillRule);
    },
    _Paths_ellipse(parserState) {
      var t3, t4, t5, t6,
        t1 = parserState.theme,
        t2 = A.parseDoubleWithUnits(parserState.attribute$2$def("cx", "0"), t1, false);
      t2.toString;
      t3 = A.parseDoubleWithUnits(parserState.attribute$2$def("cy", "0"), t1, false);
      t3.toString;
      t4 = A.parseDoubleWithUnits(parserState.attribute$2$def("rx", "0"), t1, false);
      t4.toString;
      t1 = A.parseDoubleWithUnits(parserState.attribute$2$def("ry", "0"), t1, false);
      t1.toString;
      t2 -= t4;
      t3 -= t1;
      t5 = parserState._currentAttributes.fillRule;
      t6 = C._setArrayType([], type$.JSArray_PathCommand);
      return new A.PathBuilder(t6, t5 == null ? B.PathFillType_00 : t5).addOval$1(new A.Rect0(t2, t3, t2 + t4 * 2, t3 + t1 * 2)).toPath$0();
    },
    _Paths_line(parserState) {
      var t3, t4, t5, t6,
        t1 = parserState.theme,
        t2 = A.parseDoubleWithUnits(parserState.attribute$2$def("x1", "0"), t1, false);
      t2.toString;
      t3 = A.parseDoubleWithUnits(parserState.attribute$2$def("x2", "0"), t1, false);
      t3.toString;
      t4 = A.parseDoubleWithUnits(parserState.attribute$2$def("y1", "0"), t1, false);
      t4.toString;
      t1 = A.parseDoubleWithUnits(parserState.attribute$2$def("y2", "0"), t1, false);
      t1.toString;
      t5 = parserState._currentAttributes.fillRule;
      t6 = C._setArrayType([], type$.JSArray_PathCommand);
      if (t5 == null)
        t5 = B.PathFillType_00;
      D.JSArray_methods.add$1(t6, new A.MoveToCommand(t2, t4, B.PathCommandType_0));
      D.JSArray_methods.add$1(t6, new A.LineToCommand(t3, t1, B.PathCommandType_1));
      return new A.PathBuilder(t6, t5).toPath$0();
    },
    SvgAttributes$_(blendMode, clipPathId, clipRule, color, dx, dy, fill, fillRule, fontFamily, fontSize, fontWeight, height, href, id, raw, stroke, textAnchorMultiplier, textDecoration, textDecorationColor, textDecorationStyle, transform, width, x, y) {
      return new A.SvgAttributes(raw, id, href, color, stroke, fill, transform, fillRule, clipRule, clipPathId, blendMode, fontFamily, fontWeight, fontSize, textDecoration, textDecorationStyle, textDecorationColor, width, height, x, textAnchorMultiplier, y, dx, dy);
    },
    DoubleOrPercentage_fromString(raw) {
      var t1;
      if (raw == null || raw === "")
        return null;
      if (A.isPercentage(raw))
        return new A.DoubleOrPercentage(A.parsePercentage(raw, 1), true);
      t1 = A.parseDouble(raw, false);
      t1.toString;
      return new A.DoubleOrPercentage(t1, false);
    },
    _SvgGroupTuple: function _SvgGroupTuple(t0, t1) {
      this.name = t0;
      this.drawable = t1;
    },
    SvgParser: function SvgParser(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.theme = t0;
      _._colorMapper = t1;
      _._eventIterator = t2;
      _._parser$_key = t3;
      _._warningsAsErrors = t4;
      _._definitions = t5;
      _._parentDrawables = t6;
      _.enableOverdrawOptimizer = _.enableClippingOptimizer = _.enableMaskingOptimizer = true;
      _.patternIds = t7;
      _._parser$_root = null;
      _._currentAttributes = t8;
      _._currentStartElement = null;
      _.depth = 0;
      _._lastEndElementEvent = null;
      _._lastTextEndedWithSpace = false;
    },
    SvgParser__parseTree_closure: function SvgParser__parseTree_closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    SvgParser__parseRawWidthHeight_closure: function SvgParser__parseRawWidthHeight_closure(t0) {
      this.raw = t0;
    },
    SvgParser__parseColor_closure: function SvgParser__parseColor_closure() {
    },
    SvgParser__parseColor_closure0: function SvgParser__parseColor_closure0() {
    },
    SvgParser__parseColor_closure1: function SvgParser__parseColor_closure1() {
    },
    SvgParser__parseColor_closure2: function SvgParser__parseColor_closure2(t0) {
      this.saturation = t0;
    },
    SvgParser__parseColor_closure3: function SvgParser__parseColor_closure3(t0) {
      this.luminance = t0;
    },
    SvgParser__parseColor_closure4: function SvgParser__parseColor_closure4(t0) {
      this.luminance = t0;
    },
    SvgParser__parseColor_closure5: function SvgParser__parseColor_closure5() {
    },
    SvgParser__parseColor_closure6: function SvgParser__parseColor_closure6() {
    },
    _Resolver: function _Resolver(t0, t1, t2, t3) {
      var _ = this;
      _._drawables = t0;
      _._parser$_shaders = t1;
      _._clips = t2;
      _._sealed = false;
      _._deferredShaders = t3;
    },
    _Resolver_getClipPath_extractPathsFromNode: function _Resolver_getClipPath_extractPathsFromNode(t0, t1) {
      this._box_0 = t0;
      this.pathBuilders = t1;
    },
    _Resolver_getClipPath_closure: function _Resolver_getClipPath_closure() {
    },
    _Resolver_addDeferredGradient_closure: function _Resolver_addDeferredGradient_closure() {
    },
    _Resolver_addClipPath_closure: function _Resolver_addClipPath_closure(t0) {
      this.pathNodes = t0;
    },
    _Resolver_addDrawable_closure: function _Resolver_addDrawable_closure(t0) {
      this.drawable = t0;
    },
    _Viewport: function _Viewport(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.transform = t2;
    },
    SvgAttributes: function SvgAttributes(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.raw = t0;
      _.id = t1;
      _.href = t2;
      _.color = t3;
      _.stroke = t4;
      _.fill = t5;
      _.transform = t6;
      _.fillRule = t7;
      _.clipRule = t8;
      _.clipPathId = t9;
      _.blendMode = t10;
      _.fontFamily = t11;
      _.fontWeight = t12;
      _.fontSize = t13;
      _.textDecoration = t14;
      _.textDecorationStyle = t15;
      _.textDecorationColor = t16;
      _.width = t17;
      _.height = t18;
      _.x = t19;
      _.textAnchorMultiplier = t20;
      _.y = t21;
      _.dx = t22;
      _.dy = t23;
    },
    SvgAttributes_heritable_closure: function SvgAttributes_heritable_closure() {
    },
    DoubleOrPercentage: function DoubleOrPercentage(t0, t1) {
      this._parser$_value = t0;
      this._isPercentage = t1;
    },
    SvgStrokeAttributes: function SvgStrokeAttributes(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._definitions = t0;
      _.color = t1;
      _.shaderId = t2;
      _.join = t3;
      _.cap = t4;
      _.miterLimit = t5;
      _.width = t6;
      _.dashArray = t7;
      _.dashOffset = t8;
      _.hasPattern = t9;
      _.opacity = t10;
    },
    SvgFillAttributes: function SvgFillAttributes(t0, t1, t2, t3, t4) {
      var _ = this;
      _._definitions = t0;
      _.color = t1;
      _.opacity = t2;
      _.shaderId = t3;
      _.hasPattern = t4;
    },
    ColorOrNone: function ColorOrNone(t0, t1) {
      this.isNone = t0;
      this.color = t1;
    },
    ResolvingVisitor: function ResolvingVisitor() {
      this.__ResolvingVisitor__bounds_A = $;
    },
    ResolvedTextPositionNode: function ResolvedTextPositionNode(t0, t1) {
      this.textPosition = t0;
      this.children = t1;
    },
    ResolvedTextNode: function ResolvedTextNode(t0, t1) {
      this.textConfig = t0;
      this.paint = t1;
    },
    ResolvedPathNode: function ResolvedPathNode(t0, t1, t2) {
      this.paint = t0;
      this.bounds = t1;
      this.path = t2;
    },
    ResolvedClipNode: function ResolvedClipNode(t0, t1) {
      this.clips = t0;
      this.child = t1;
    },
    ResolvedMaskNode: function ResolvedMaskNode(t0, t1, t2) {
      this.mask = t0;
      this.child = t1;
      this.blendMode = t2;
    },
    ResolvedImageNode: function ResolvedImageNode(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.format = t1;
      _.rect = t2;
      _.transform = t3;
    },
    ResolvedPatternNode: function ResolvedPatternNode(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.child = t0;
      _.pattern = t1;
      _.x = t2;
      _.y = t3;
      _.width = t4;
      _.height = t5;
      _.id = t6;
      _.transform = t7;
    },
    SvgTheme0: function SvgTheme0(t0, t1, t2) {
      this.currentColor = t0;
      this.fontSize = t1;
      this.xHeight = t2;
    },
    Visitor: function Visitor() {
    },
    ErrorOnUnResolvedNode: function ErrorOnUnResolvedNode() {
    },
    CommandBuilderVisitor: function CommandBuilderVisitor(t0) {
      var _ = this;
      _._builder = t0;
      _.__CommandBuilderVisitor__height_A = _.__CommandBuilderVisitor__width_A = $;
      _.currentPatternId = null;
    },
    CommandBuilderVisitor_visitResolvedTextPositionNode_closure: function CommandBuilderVisitor_visitResolvedTextPositionNode_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode: function _CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode() {
    },
    VectorInstructions: function VectorInstructions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.paints = t2;
      _.paths = t3;
      _.vertices = t4;
      _.text = t5;
      _.images = t6;
      _.drawImages = t7;
      _.patternData = t8;
      _.textPositions = t9;
      _.commands = t10;
    },
    DrawCommandType: function DrawCommandType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DrawCommand: function DrawCommand(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.debugString = t0;
      _.type = t1;
      _.objectId = t2;
      _.paintId = t3;
      _.patternId = t4;
      _.patternDataId = t5;
    },
    Matrix41: function Matrix41(t0) {
      this._vector_math$_m4storage = t0;
    },
    Vector40: function Vector40(t0) {
      this._vector_math$_v4storage = t0;
    },
    Quaternion_Quaternion$identity() {
      var t1 = new Float64Array(4);
      t1[3] = 1;
      return new A.Quaternion(t1);
    },
    Quaternion: function Quaternion(t0) {
      this._qStorage = t0;
    },
    DtdExternalId: function DtdExternalId(t0, t1, t2, t3) {
      var _ = this;
      _.publicId = t0;
      _.publicIdType = t1;
      _.systemId = t2;
      _.systemIdType = t3;
    },
    _textReplace(match) {
      var t1 = match.group$1(0);
      t1.toString;
      switch (t1) {
        case "<":
          return "&lt;";
        case "&":
          return "&amp;";
        case "]]>":
          return "]]&gt;";
        default:
          return A._asNumericCharacterReferences(t1);
      }
    },
    _singeQuoteAttributeReplace(match) {
      var t1 = match.group$1(0);
      t1.toString;
      switch (t1) {
        case "'":
          return "&apos;";
        case "&":
          return "&amp;";
        case "<":
          return "&lt;";
        default:
          return A._asNumericCharacterReferences(t1);
      }
    },
    _doubleQuoteAttributeReplace(match) {
      var t1 = match.group$1(0);
      t1.toString;
      switch (t1) {
        case '"':
          return "&quot;";
        case "&":
          return "&amp;";
        case "<":
          return "&lt;";
        default:
          return A._asNumericCharacterReferences(t1);
      }
    },
    _asNumericCharacterReferences(toEscape) {
      var t1 = type$.Runes;
      return C.MappedIterable_MappedIterable(new C.Runes(toEscape), t1._eval$1("String(Iterable.E)")._as(new A._asNumericCharacterReferences_closure()), t1._eval$1("Iterable.E"), type$.String).join$0(0);
    },
    XmlDefaultEntityMapping: function XmlDefaultEntityMapping() {
    },
    _asNumericCharacterReferences_closure: function _asNumericCharacterReferences_closure() {
    },
    XmlEntityMapping: function XmlEntityMapping() {
    },
    XmlAttributeType: function XmlAttributeType(t0, t1, t2) {
      this.token = t0;
      this.index = t1;
      this._name = t2;
    },
    XmlNodeType: function XmlNodeType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    XmlException: function XmlException() {
    },
    XmlFormatException: function XmlFormatException() {
    },
    XmlParserException$(message, buffer, position) {
      return new A.XmlParserException(buffer, position, $, $, $, message);
    },
    XmlParserException: function XmlParserException(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.buffer = t0;
      _.position = t1;
      _.XmlFormatException___XmlFormatException_line_FI = t2;
      _.XmlFormatException___XmlFormatException_column_FI = t3;
      _.XmlFormatException___XmlFormatException__lineAndColumn_FI = t4;
      _.message = t5;
    },
    _XmlParserException_XmlException_XmlFormatException: function _XmlParserException_XmlException_XmlFormatException() {
    },
    XmlCache: function XmlCache(t0, t1, t2, t3) {
      var _ = this;
      _._loader = t0;
      _._maxSize = t1;
      _._cache0$_values = t2;
      _.$ti = t3;
    },
    XmlCharacterDataParser$(_stopper, _minLength) {
      if (C.assertTest(_stopper.length === 1))
        C.assertThrow("Invalid stopper character: " + _stopper);
      return new A.XmlCharacterDataParser(_stopper, _minLength);
    },
    XmlCharacterDataParser: function XmlCharacterDataParser(t0, t1) {
      this._stopper = t0;
      this._character_data_parser$_minLength = t1;
    },
    XmlAnnotator: function XmlAnnotator(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.validateNesting = t0;
      _.validateDocument = t1;
      _.withBuffer = t2;
      _.withLocation = t3;
      _.withParent = t4;
      _._roots = t5;
      _._parents = t6;
    },
    XmlHasBuffer: function XmlHasBuffer() {
    },
    XmlHasLocation: function XmlHasLocation() {
    },
    XmlHasParent: function XmlHasParent() {
    },
    XmlEventEncoder: function XmlEventEncoder(t0) {
      this.entityMapping = t0;
    },
    _XmlEventEncoderSink: function _XmlEventEncoderSink(t0, t1) {
      this.sink = t0;
      this.entityMapping = t1;
    },
    __XmlEventEncoderSink_Object_XmlEventVisitor: function __XmlEventEncoderSink_Object_XmlEventVisitor() {
    },
    XmlEvent: function XmlEvent() {
    },
    _XmlEvent_Object_XmlHasParent: function _XmlEvent_Object_XmlHasParent() {
    },
    _XmlEvent_Object_XmlHasParent_XmlHasLocation: function _XmlEvent_Object_XmlHasParent_XmlHasLocation() {
    },
    _XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer: function _XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer() {
    },
    XmlCDATAEvent: function XmlCDATAEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    XmlCommentEvent: function XmlCommentEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    XmlDeclarationEvent: function XmlDeclarationEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.attributes = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    XmlDoctypeEvent: function XmlDoctypeEvent(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.name = t0;
      _.externalId = t1;
      _.internalSubset = t2;
      _.XmlHasBuffer__buffer = t3;
      _.XmlHasLocation__start = t4;
      _.XmlHasLocation__stop = t5;
      _.XmlHasParent__parent = t6;
    },
    XmlEndElementEvent: function XmlEndElementEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.name = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    _XmlEndElementEvent_XmlEvent_XmlNamed: function _XmlEndElementEvent_XmlEvent_XmlNamed() {
    },
    XmlProcessingEvent: function XmlProcessingEvent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.target = t0;
      _.value = t1;
      _.XmlHasBuffer__buffer = t2;
      _.XmlHasLocation__start = t3;
      _.XmlHasLocation__stop = t4;
      _.XmlHasParent__parent = t5;
    },
    XmlStartElementEvent: function XmlStartElementEvent(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.name = t0;
      _.attributes = t1;
      _.isSelfClosing = t2;
      _.XmlHasBuffer__buffer = t3;
      _.XmlHasLocation__start = t4;
      _.XmlHasLocation__stop = t5;
      _.XmlHasParent__parent = t6;
    },
    _XmlStartElementEvent_XmlEvent_XmlNamed: function _XmlStartElementEvent_XmlEvent_XmlNamed() {
    },
    XmlRawTextEvent: function XmlRawTextEvent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.raw = t0;
      _.entityMapping = t1;
      _.__XmlRawTextEvent_value_FI = $;
      _.XmlHasBuffer__buffer = t2;
      _.XmlHasLocation__start = t3;
      _.XmlHasLocation__stop = t4;
      _.XmlHasParent__parent = t5;
    },
    XmlEventIterable: function XmlEventIterable(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.input = t0;
      _.entityMapping = t1;
      _.validateNesting = t2;
      _.validateDocument = t3;
      _.withBuffer = t4;
      _.withLocation = t5;
      _.withParent = t6;
    },
    XmlEventIterator: function XmlEventIterator(t0, t1, t2) {
      var _ = this;
      _._eventParser = t0;
      _._annotator = t1;
      _._iterator$_context = t2;
      _._iterator$_current = null;
    },
    XmlEventParser: function XmlEventParser(t0) {
      this.entityMapping = t0;
    },
    XmlEventParser_characterData_closure: function XmlEventParser_characterData_closure(t0) {
      this.$this = t0;
    },
    XmlEventParser_startElement_closure: function XmlEventParser_startElement_closure() {
    },
    XmlEventParser_attribute_closure: function XmlEventParser_attribute_closure(t0) {
      this.$this = t0;
    },
    XmlEventParser_attributeAssignment_closure: function XmlEventParser_attributeAssignment_closure() {
    },
    XmlEventParser_attributeValueDoubleQuote_closure: function XmlEventParser_attributeValueDoubleQuote_closure() {
    },
    XmlEventParser_attributeValueSingleQuote_closure: function XmlEventParser_attributeValueSingleQuote_closure() {
    },
    XmlEventParser_attributeValueNoQuote_closure: function XmlEventParser_attributeValueNoQuote_closure() {
    },
    XmlEventParser_endElement_closure: function XmlEventParser_endElement_closure() {
    },
    XmlEventParser_comment_closure: function XmlEventParser_comment_closure() {
    },
    XmlEventParser_cdata_closure: function XmlEventParser_cdata_closure() {
    },
    XmlEventParser_declaration_closure: function XmlEventParser_declaration_closure() {
    },
    XmlEventParser_processing_closure: function XmlEventParser_processing_closure() {
    },
    XmlEventParser_processing_closure0: function XmlEventParser_processing_closure0() {
    },
    XmlEventParser_doctype_closure: function XmlEventParser_doctype_closure() {
    },
    XmlEventParser_doctypeExternalIdSystem_closure: function XmlEventParser_doctypeExternalIdSystem_closure() {
    },
    XmlEventParser_doctypeExternalIdPublic_closure: function XmlEventParser_doctypeExternalIdPublic_closure() {
    },
    XmlEventParser_doctypeIntSubset_closure: function XmlEventParser_doctypeIntSubset_closure() {
    },
    eventParserCache_closure: function eventParserCache_closure() {
    },
    ConversionSink: function ConversionSink(t0, t1) {
      this.callback = t0;
      this.$ti = t1;
    },
    XmlEventAttribute: function XmlEventAttribute(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.value = t1;
      _.attributeType = t2;
      _.XmlHasParent__parent = t3;
    },
    _XmlEventAttribute_Object_XmlNamed: function _XmlEventAttribute_Object_XmlNamed() {
    },
    _XmlEventAttribute_Object_XmlNamed_XmlHasParent: function _XmlEventAttribute_Object_XmlNamed_XmlHasParent() {
    },
    XmlNamed: function XmlNamed() {
    },
    XmlEventVisitor: function XmlEventVisitor() {
    },
    MultipartFile_fromFile(filePath) {
      return A.multipartFileFromPath(filePath, null, null, null);
    },
    DateTime___new_tearOff(year, month, day, hour, minute, second, millisecond, microsecond) {
      return C.DateTime$(year, month, day, hour, minute, second, millisecond, microsecond);
    },
    DateTime___utc_tearOff(year, month, day, hour, minute, second, millisecond, microsecond) {
      return C.DateTime$utc(year, month, day, hour, minute, second, millisecond, microsecond);
    },
    DateTimeCopyWith_copyWith(_this, day, hour, microsecond, millisecond, minute, month, second, year) {
      var t1 = _this.isUtc ? A.core_DateTime___utc_tearOff$closure() : A.core_DateTime___new_tearOff$closure(),
        t2 = year == null ? C.Primitives_getYear(_this) : year,
        t3 = month == null ? C.Primitives_getMonth(_this) : month,
        t4 = day == null ? C.Primitives_getDay(_this) : day,
        t5 = hour == null ? C.Primitives_getHours(_this) : hour,
        t6 = minute == null ? C.Primitives_getMinutes(_this) : minute,
        t7 = second == null ? C.Primitives_getSeconds(_this) : second,
        t8 = millisecond == null ? C.Primitives_getMilliseconds(_this) : millisecond;
      return t1.call$8(t2, t3, t4, t5, t6, t7, t8, microsecond);
    },
    Uint32List_Uint32List$view(buffer) {
      return J.asUint32List$2$x(buffer, 0, null);
    },
    StyledWidget_toMaterial(_this) {
      var _null = null;
      return C.Material$(D.Duration_200000, true, _null, _this, D.Clip_0, _null, 0, _null, _null, _null, _null, _null, D.MaterialType_0);
    },
    messageCardColor(isSentByMe, isContainer, isError) {
      var t1, _0_1, _0_3, _0_5, _0_4, t2, _0_7, _0_4_isSet, _0_8, _null = null;
      if (isError) {
        if (isContainer) {
          t1 = D.Map_tFKwC.$index(0, type$.MaterialColor._eval$1("ColorSwatch.T")._as(400));
          t1.toString;
        } else
          t1 = D.Color_wst;
        return t1;
      }
      t1 = isSentByMe;
      _0_1 = t1;
      _0_3 = _0_1;
      C.boolConversionCheck(t1);
      _0_5 = _null;
      _0_4 = _null;
      if (t1) {
        t2 = isContainer;
        _0_4 = t2;
        _0_5 = _0_4;
        C.boolConversionCheck(t2);
      } else
        t2 = false;
      if (t2)
        return D.Color_vnR;
      C.boolConversionCheck(_0_3);
      _0_7 = _null;
      if (_0_3) {
        if (t1) {
          t2 = _0_4;
          _0_4_isSet = t1;
        } else {
          t2 = isContainer;
          _0_4 = t2;
          _0_4_isSet = true;
        }
        _0_7 = false === t2;
        t2 = _0_7;
        C.boolConversionCheck(t2);
      } else {
        _0_4_isSet = t1;
        t2 = false;
      }
      if (t2)
        return D.Color_wst;
      _0_8 = false === _0_1;
      t2 = _0_8;
      if (C.boolConversionCheck(t2)) {
        if (t1)
          t1 = _0_5;
        else {
          if (_0_4_isSet)
            t1 = _0_4;
          else {
            t1 = isContainer;
            _0_4 = t1;
            _0_4_isSet = true;
          }
          _0_5 = true === t1;
          t1 = _0_5;
        }
        C.boolConversionCheck(t1);
      } else
        t1 = false;
      if (t1)
        return D.Color_wst;
      if (C.boolConversionCheck(_0_8)) {
        if (_0_3)
          t1 = _0_7;
        else {
          _0_7 = false === (_0_4_isSet ? _0_4 : isContainer);
          t1 = _0_7;
        }
        C.boolConversionCheck(t1);
      } else
        t1 = false;
      if (t1)
        return D.Color_vnR;
    },
    colorForScore(score) {
      switch (score) {
        case 1:
          return D.MaterialColor_nI1;
        case 2:
          return I.MaterialColor_VpP;
        case 3:
          return B.MaterialColor_gyN;
        case 4:
          return B.MaterialColor_7bM;
        case 5:
          return H.MaterialColor_vIZ;
        default:
          return D.Color_Edl;
      }
    },
    decode83(text, from, to) {
      var i, result, index,
        t1 = text.length;
      C.assertHelper(to <= t1);
      for (i = from, result = 0; i < to; ++i) {
        if (!(i < t1))
          return C.ioore(text, i);
        index = B.Map_4Rm2t.$index(0, text[i]);
        if (index == null)
          throw C.wrapException(A.BlurHashDecodeException$("Invalid BlurHash encoding: invalid character " + C.S(index)));
        result = result * 83 + index;
      }
      return result;
    },
    IterableExtension_firstWhereOrNull(_this, test, $T) {
      var t1, _i, element;
      for (t1 = _this.length, _i = 0; _i < t1; ++_i) {
        element = _this[_i];
        if (C.boolConversionCheck(test.call$1(element)))
          return element;
      }
      return null;
    },
    IterableExtension_get_lastOrNull(_this, $T) {
      if (_this.length === 0)
        return null;
      return D.JSArray_methods.get$last(_this);
    },
    IterableNullableExtension_whereNotNull(_this, $T) {
      return new C._SyncStarIterable(A.IterableNullableExtension_whereNotNull$body(_this, $T), $T._eval$1("_SyncStarIterable<0>"));
    },
    IterableNullableExtension_whereNotNull$body($async$_this, $async$$T) {
      return function() {
        var _this = $async$_this,
          $T = $async$$T;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, element;
        return function $async$IterableNullableExtension_whereNotNull($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(_this);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                element = t1.get$current(t1);
                $async$goto = element != null ? 4 : 5;
                break;
              case 4:
                // then
                $async$goto = 6;
                return $async$iterator._async$_current = element, 1;
              case 6:
                // after yield
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    IterableIntegerExtension_get_maxOrNull(_this) {
      var value, newValue,
        t1 = _this.$ti,
        iterator = new C.ListIterator(_this, _this.get$length(0), t1._eval$1("ListIterator<ListIterable.E>"));
      if (iterator.moveNext$0()) {
        value = iterator.__internal$_current;
        if (value == null)
          value = t1._eval$1("ListIterable.E")._as(value);
        for (t1 = t1._eval$1("ListIterable.E"); iterator.moveNext$0();) {
          newValue = iterator.__internal$_current;
          if (newValue == null)
            newValue = t1._as(newValue);
          if (newValue > value)
            value = newValue;
        }
        return value;
      }
      return null;
    },
    IterableIntegerExtension_get_sum(_this) {
      var t1, t2, result, t3;
      for (t1 = _this.$ti, t2 = new C.ListIterator(_this, _this.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"), result = 0; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        result += t3 == null ? t1._as(t3) : t3;
      }
      return result;
    },
    IterableDoubleExtension_get_maxOrNull(_this) {
      var value, newValue,
        t1 = _this.$ti,
        iterator = new C.ListIterator(_this, _this.get$length(0), t1._eval$1("ListIterator<ListIterable.E>"));
      if (iterator.moveNext$0()) {
        value = iterator.__internal$_current;
        if (value == null)
          value = t1._eval$1("ListIterable.E")._as(value);
        if (isNaN(value))
          return value;
        for (t1 = t1._eval$1("ListIterable.E"); iterator.moveNext$0();) {
          newValue = iterator.__internal$_current;
          if (newValue == null)
            newValue = t1._as(newValue);
          if (isNaN(newValue))
            return newValue;
          if (newValue > value)
            value = newValue;
        }
        return value;
      }
      return null;
    },
    IterableDoubleExtension_get_sum(_this) {
      var t1, result, _i;
      for (t1 = _this.length, result = 0, _i = 0; _i < t1; ++_i)
        result += _this[_i];
      return result;
    },
    ListExtensions_mapIndexed(_this, convert, $E, $R) {
      return new C._SyncStarIterable(A.ListExtensions_mapIndexed$body(_this, convert, $E, $R), $R._eval$1("_SyncStarIterable<0>"));
    },
    ListExtensions_mapIndexed$body($async$_this, $async$convert, $async$$E, $async$$R) {
      return function() {
        var _this = $async$_this,
          convert = $async$convert,
          $E = $async$$E,
          $R = $async$$R;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], index;
        return function $async$ListExtensions_mapIndexed($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                index = 0;
              case 2:
                // for condition
                if (!(index < _this.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return $async$iterator._async$_current = convert.call$2(index, _this[index]), 1;
              case 5:
                // after yield
              case 3:
                // for update
                ++index;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    multipartFileFromPath(filePath, contentType, filename, headers) {
      return C.throwExpression($.$get$_err());
    },
    binarySearch(sortedList, value, $T) {
      var min, mid, comp,
        max = sortedList.length;
      for (min = 0; min < max;) {
        mid = min + D.JSInt_methods._shrOtherPositive$1(max - min, 1);
        if (!(mid >= 0 && mid < sortedList.length))
          return C.ioore(sortedList, mid);
        comp = J.compareTo$1$ns(sortedList[mid], value);
        if (comp === 0)
          return mid;
        if (comp < 0)
          min = mid + 1;
        else
          max = mid;
      }
      return -1;
    },
    PopupMenuItem$(child, value, $T) {
      return new E.PopupMenuItem(value, child, null, $T._eval$1("PopupMenuItem<0>"));
    },
    Visibility$(child, maintainState, replacement, visible) {
      return new C.Visibility(child, replacement, visible, maintainState, false, false, false, false, null);
    },
    getIconForStatus($status) {
      switch ($status.index) {
        case 0:
          return B.IconData_57686_MaterialIcons_null_false;
        case 1:
          return D.IconData_57912_MaterialIcons_null_false;
        case 2:
          return B.IconData_57847_MaterialIcons_null_false;
        case 3:
          return B.IconData_61284_MaterialIcons_null_false;
        case 4:
          return B.IconData_57686_MaterialIcons_null_false;
      }
    },
    getSpacingSize(left, right, style) {
      var t1;
      if (style.index >= 4) {
        t1 = B.Map_xSVzb.$index(0, left);
        t1 = t1 == null ? null : t1.$index(0, right);
      } else {
        t1 = B.Map_xSiqr.$index(0, left);
        t1 = t1 == null ? null : t1.$index(0, right);
      }
      return t1 == null ? B.Measurement_0_Unit_0 : t1;
    },
    getHLines(parser) {
      var next, next0,
        hlineInfo = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      parser.consumeSpaces$0();
      next = parser.fetch$0(0).text;
      while (true) {
        if (!(next === "\\hline" || next === "\\hdashline"))
          break;
        parser.nextToken = null;
        D.JSArray_methods.add$1(hlineInfo, next === "\\hdashline" ? B.MatrixSeparatorStyle_1 : B.MatrixSeparatorStyle_0);
        parser.consumeSpaces$0();
        next0 = parser.fetch$0(0).text;
        next = next0;
      }
      return hlineInfo;
    },
    parseArray(parser, arrayStretch, colAligns, hskipBeforeAndAfter, isSmall, separators, style) {
      var stretch, row, body, rowGaps, hLinesBeforeRow, t6, t7, cellBody, next, t8, _null = null,
        t1 = parser.macroExpander,
        t2 = t1.macros,
        t3 = t2.undefStack,
        t4 = type$.String,
        t5 = t2.$ti._eval$1("1?");
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t2.$set$2(0, "\\\\", A.MacroDefinition$fromString("\\cr"));
      if (arrayStretch == null) {
        stretch = t1.expandMacroAsText$1("\\arraystretch");
        if (stretch == null)
          arrayStretch = 1;
        else {
          arrayStretch = C.Primitives_parseDouble(stretch);
          if (arrayStretch == null || arrayStretch < 0)
            throw C.wrapException(A.ParseException$("Invalid \\arraystretch: " + stretch, _null));
        }
      }
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t1 = type$.JSArray_EquationRowNode;
      row = C._setArrayType([], t1);
      body = C._setArrayType([row], type$.JSArray_List_EquationRowNode);
      rowGaps = C._setArrayType([], type$.JSArray_Measurement);
      hLinesBeforeRow = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      t6 = type$.MatrixSeparatorStyle;
      t7 = A.IterableExtension_get_lastOrNull(A.getHLines(parser), t6);
      D.JSArray_methods.add$1(hLinesBeforeRow, t7 == null ? B.MatrixSeparatorStyle_2 : t7);
      for (t7 = type$.CrNode; true;) {
        cellBody = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, "\\cr");
        t2.endGroup$0();
        D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
        D.JSArray_methods.add$1(row, A.GreenNodeWrappingExt_wrapWithEquationRow(A.StyleNode$(cellBody, new A.OptionsDiff(style, _null, _null, _null, _null))));
        next = parser.fetch$0(0).text;
        if (next === "&")
          parser.nextToken = null;
        else if (next === "\\end") {
          if (row.length === 1 && cellBody.length === 0) {
            if (0 >= body.length)
              return C.ioore(body, -1);
            body.pop();
          }
          if (hLinesBeforeRow.length < body.length + 1)
            D.JSArray_methods.add$1(hLinesBeforeRow, B.MatrixSeparatorStyle_2);
          break;
        } else if (next === "\\cr") {
          t8 = A.assertNodeType(parser.parseFunction$3(_null, _null, _null), t7).size;
          D.JSArray_methods.add$1(rowGaps, t8 == null ? B.Measurement_0_Unit_0 : t8);
          t8 = A.IterableExtension_get_lastOrNull(A.getHLines(parser), t6);
          D.JSArray_methods.add$1(hLinesBeforeRow, t8 == null ? B.MatrixSeparatorStyle_2 : t8);
          row = C._setArrayType([], t1);
          D.JSArray_methods.add$1(body, row);
        } else
          throw C.wrapException(A.ParseException$("Expected & or \\\\ or \\cr or \\end", parser.nextToken));
      }
      t2.endGroup$0();
      t2.endGroup$0();
      return A.MatrixNode_MatrixNode(arrayStretch, body, colAligns, hLinesBeforeRow, hskipBeforeAndAfter, isSmall, rowGaps, separators);
    },
    _arrayHandler(parser, context) {
      var symArg, colalign, separators, aligns, t1, t2, alignSpecified, lastIsSeparator, ca, t3;
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      symArg = parser.parseArgNode$2$mode$optional(null, false);
      colalign = symArg instanceof A.SymbolNode ? C._setArrayType([symArg], type$.JSArray_SymbolNode) : A.assertNodeType(symArg, type$.EquationRowNode).children;
      separators = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      aligns = C._setArrayType([], type$.JSArray_MatrixColumnAlign);
      for (t1 = J.get$iterator$ax(colalign), t2 = type$.SymbolNode, alignSpecified = true, lastIsSeparator = false; t1.moveNext$0();) {
        ca = A.assertNodeType(t1.get$current(t1), t2).symbol;
        switch (ca) {
          case "l":
          case "c":
          case "r":
            t3 = B.Map_38VCd.$index(0, ca);
            t3.toString;
            D.JSArray_methods.add$1(aligns, t3);
            if (alignSpecified)
              D.JSArray_methods.add$1(separators, B.MatrixSeparatorStyle_2);
            alignSpecified = true;
            lastIsSeparator = false;
            break;
          case "|":
          case ":":
            if (alignSpecified) {
              t3 = B.Map_a0fCI.$index(0, ca);
              t3.toString;
              D.JSArray_methods.add$1(separators, t3);
            }
            alignSpecified = false;
            lastIsSeparator = true;
            break;
          default:
            throw C.wrapException(A.ParseException$("Unknown column alignment: " + ca, null));
        }
      }
      if (!lastIsSeparator)
        D.JSArray_methods.add$1(separators, B.MatrixSeparatorStyle_2);
      return A.parseArray(parser, null, aligns, true, false, separators, D.JSString_methods.substring$2(context.envName, 0, 1) === "d" ? B.MathStyle_0 : B.MathStyle_2);
    },
    _matrixHandler(parser, context) {
      var t1, delimiters, res, t2;
      type$.TexParser._as(parser);
      t1 = type$.EnvContext._as(context).envName;
      delimiters = B.Map_z9QPz.$index(0, t1);
      res = A.parseArray(parser, null, B.List_empty29, false, false, B.List_empty28, D.JSString_methods.substring$2(t1, 0, 1) === "d" ? B.MathStyle_0 : B.MathStyle_2);
      if (delimiters == null)
        t1 = res;
      else {
        t1 = delimiters[0];
        t2 = delimiters[1];
        t2 = A.LeftRightNode$(C._setArrayType([A.GreenNodeListWrappingExt_wrapWithEquationRow(C._setArrayType([res], type$.JSArray_MatrixNode))], type$.JSArray_EquationRowNode), t1, D.List_empty5, t2);
        t1 = t2;
      }
      return t1;
    },
    _smallMatrixHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      return A.parseArray(parser, 0.5, B.List_empty29, false, true, B.List_empty28, B.MathStyle_4);
    },
    _subArrayHandler(parser, context) {
      var symArg, colalign, aligns, t1, t2, ca, t3, res, _null = null,
        _s38_ = "{subarray} can contain only one column";
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      symArg = parser.parseArgNode$2$mode$optional(_null, false);
      colalign = symArg instanceof A.SymbolNode ? C._setArrayType([symArg], type$.JSArray_SymbolNode) : A.assertNodeType(symArg, type$.EquationRowNode).children;
      aligns = C._setArrayType([], type$.JSArray_MatrixColumnAlign);
      for (t1 = J.get$iterator$ax(colalign), t2 = type$.SymbolNode; t1.moveNext$0();) {
        ca = A.assertNodeType(t1.get$current(t1), t2).symbol;
        t3 = ca === "l";
        if (t3 || ca === "c")
          D.JSArray_methods.add$1(aligns, t3 ? B.MatrixColumnAlign_0 : B.MatrixColumnAlign_1);
        else
          throw C.wrapException(A.ParseException$("Unknown column alignment: " + ca, _null));
      }
      if (aligns.length > 1)
        throw C.wrapException(A.ParseException$(_s38_, _null));
      res = A.parseArray(parser, 0.5, aligns, false, false, B.List_empty28, B.MathStyle_4);
      if (J.get$length$asx(J.$index$asx(res.body, 0)) > 1)
        throw C.wrapException(A.ParseException$(_s38_, _null));
      return res;
    },
    _cursorHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return new A.CursorNode();
    },
    _notHandler(parser, context) {
      var t1, node, remappedSymbol;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      node = A.assertNodeType(t1, type$.SymbolNode);
      remappedSymbol = B.Map_z17bk.$index(0, node.symbol);
      if (node.mode !== B.Mode_0 || node.variantForm || remappedSymbol == null)
        throw C.wrapException(A.ParseException$("\\not has to be followed by a combinable character", null));
      return node.withSymbol$1(remappedSymbol);
    },
    staticSvg($name, options, needBaseline) {
      var width, height, viewPortWidth, viewPortHeight, t1, svgWidget,
        dimen = B.Map_RARog.$index(0, $name);
      if (dimen == null)
        throw C.wrapException(C.ArgumentError$value($name, "name", "Invalid static svg name"));
      width = dimen[0];
      height = dimen[1];
      viewPortWidth = new A.Measurement(width, B.Unit_16).toLpUnder$1(options);
      viewPortHeight = new A.Measurement(height, B.Unit_16).toLpUnder$1(options);
      t1 = B.Map_I87FN.$index(0, $name);
      t1.toString;
      svgWidget = A.svgWidgetFromPath(t1, new C.Size(viewPortWidth, viewPortHeight), new C.Rect(0, 0, 0 + 1000 * width, 0 + 1000 * height), options.color, D.Alignment_m1_m1, D.BoxFit_0);
      if (needBaseline)
        return new A.ResetBaseline(viewPortHeight, svgWidget, null);
      return svgWidget;
    },
    sqrtPath(size, extraViniculum, viewBoxHeight) {
      var t1, path;
      extraViniculum = 1000 * extraViniculum;
      switch (size) {
        case "sqrtMain":
          t1 = "" + (40 + extraViniculum);
          path = "M95," + (622 + extraViniculum + 80) + "\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl" + C.S(extraViniculum / 2.075) + " -" + extraViniculum + "\nc5.3,-9.3,12,-14,20,-14\nH400000v" + t1 + "H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM" + (834 + extraViniculum) + " 80h400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize1":
          t1 = "" + (40 + extraViniculum);
          path = "M263," + (601 + extraViniculum + 80) + "c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl" + C.S(extraViniculum / 2.084) + " -" + extraViniculum + "\nc4.7,-7.3,11,-11,19,-11\nH40000v" + t1 + "H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM" + (1001 + extraViniculum) + " 80h400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize2":
          t1 = "" + (40 + extraViniculum);
          path = "M983 " + (10 + extraViniculum + 80) + "\nl" + C.S(extraViniculum / 3.13) + " -" + extraViniculum + "\nc4,-6.7,10,-10,18,-10 H400000v" + t1 + "\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM" + (1001 + extraViniculum) + " 80h400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize3":
          t1 = "" + (40 + extraViniculum);
          path = "M424," + (2398 + extraViniculum + 80) + "\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl" + C.S(extraViniculum / 4.223) + " -" + extraViniculum + "c4,-6.7,10,-10,18,-10 H400000\nv" + t1 + "H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M" + (1001 + extraViniculum) + " 80\nh400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize4":
          t1 = "" + (40 + extraViniculum);
          path = "M473," + (2713 + extraViniculum + 80) + "\nc339.3,-1799.3,509.3,-2700,510,-2702 l" + C.S(extraViniculum / 5.298) + " -" + extraViniculum + "\nc3.3,-7.3,9.3,-11,18,-11 H400000v" + t1 + "H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM" + (1001 + extraViniculum) + " 80h400000v" + t1 + "H1017.7z";
          break;
        case "sqrtTall":
          t1 = "" + (40 + extraViniculum);
          path = "M702 " + (extraViniculum + 80) + "H400000" + t1 + "\nH742v" + C.S(viewBoxHeight - 54 - 80 - extraViniculum) + "l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v" + t1 + "H742z";
          break;
        default:
          path = "";
      }
      return path;
    },
    svgWidgetFromPath(path, viewPort, viewBox, color, align, fit) {
      var meetOrSlice, preserveAspectRatio, t1, t2, t3, t4, t5, t6, t7, _null = null,
        alignment = $.$get$_alignmentToString().$index(0, align);
      C.assertHelper(fit !== D.BoxFit_5 && fit !== D.BoxFit_4 && fit !== D.BoxFit_3 && fit !== D.BoxFit_6);
      meetOrSlice = fit === D.BoxFit_1 ? "meet" : "slice";
      preserveAspectRatio = fit === D.BoxFit_0 ? "none" : C.S(alignment) + " " + meetOrSlice;
      t1 = viewPort._dx;
      t2 = viewPort._dy;
      t3 = viewBox.left;
      t4 = viewBox.top;
      t5 = color.get$red();
      t6 = color.get$green();
      t7 = color.get$blue();
      return C.Container$(_null, new A.SvgPicture(t1, t2, fit, align, new A.SvgStringLoader('<svg xmlns="http://www.w3.org/2000/svg" width="' + C.S(t1) + '" height="' + C.S(t2) + '" preserveAspectRatio="' + preserveAspectRatio + '" viewBox="' + C.S(t3) + " " + C.S(t4) + " " + C.S(viewBox.right - t3) + " " + C.S(viewBox.bottom - t4) + '" ><path fill="rgb(' + t5 + "," + t6 + "," + t7 + ')" d="' + path + '"></path></svg>', _null, _null), _null, _null), D.Clip_0, _null, _null, _null, _null, t2, _null, _null, _null, _null, _null, t1);
    },
    RenderBoxLayout_getLayoutSize(_this, constraints, dry) {
      var boxSize;
      if (dry)
        boxSize = _this._computeIntrinsics$2$3(D.C__DryLayout, constraints, _this.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      else {
        _this.layout$2$parentUsesSize(constraints, true);
        boxSize = _this.get$size(0);
      }
      return boxSize;
    },
    NumIterableExtension_get_max(_this, $T) {
      var value, newValue,
        t1 = C._arrayInstanceType(_this),
        iterator = new J.ArrayIterator(_this, _this.length, t1._eval$1("ArrayIterator<1>"));
      if (iterator.moveNext$0()) {
        value = iterator.__interceptors$_current;
        if (value == null)
          value = t1._precomputed1._as(value);
        for (t1 = t1._precomputed1; iterator.moveNext$0();) {
          newValue = iterator.__interceptors$_current;
          if (newValue == null)
            newValue = t1._as(newValue);
          if (J.compareTo$1$ns(value, newValue) < 0)
            value = newValue;
        }
        return value;
      }
      throw C.wrapException(C.StateError$("No element"));
    },
    ListExtension_extendToByFill(_this, desiredLength, fill, $T) {
      var _list, index,
        t1 = J.getInterceptor$asx(_this);
      if (t1.get$length(_this) >= desiredLength)
        t1 = _this;
      else {
        _list = J.JSArray_JSArray$allocateFixed(desiredLength, $T);
        for (index = 0; index < desiredLength; ++index)
          _list[index] = index < t1.get$length(_this) ? t1.$index(_this, index) : fill;
        t1 = _list;
      }
      return t1;
    },
    NumListSearchExt_slotFor(_this, value, $T) {
      var left, i, element,
        right = _this.length;
      for (left = -1, i = 0; i < right; ++i) {
        element = _this[i];
        if (element < value)
          left = i;
        else if (element === value)
          return i;
        else if (element > value) {
          right = i;
          break;
        }
      }
      return (left + right) / 2;
    },
    IntExt_clampInt(_this, lowerLimit, upperLimit) {
      C.assertHelper(upperLimit >= lowerLimit);
      if (_this.$lt(0, lowerLimit))
        return lowerLimit;
      if (_this.$gt(0, upperLimit))
        return upperLimit;
      return _this;
    },
    _testCompute(callback, message, debugLabel, $Q, $R) {
      var result;
      $R._eval$1("@<0>")._bind$1($Q)._eval$1("1/(2)")._as(callback);
      $Q._as(message);
      J.toString$0$($.BindingBase__debugInitializedType);
      result = callback.call$1(message);
      if ($R._eval$1("Future<0>")._is(result))
        return result;
      return new C.SynchronousFuture(result, $R._eval$1("SynchronousFuture<0>"));
    },
    FDateTimeLocalizations_get_firstDayOfWeek(_this) {
      var t1 = _this.localeName;
      return t1 === "" ? 7 : C.DateFormat$yMMMMd(t1).get$dateSymbols().FIRSTDAYOFWEEK + 1;
    },
    _convertColor(c, c2, a) {
      var cl, g, ci, l, v,
        numChannels = c2.get$length(c2),
        format = c2.get$format(),
        t1 = c.get$palette(),
        fromFormat = t1 == null ? null : t1.get$format();
      if (fromFormat == null)
        fromFormat = c.get$format();
      cl = c.get$length(c);
      if (numChannels === 1) {
        g = c.get$length(c) > 2 ? c.get$luminance() : c.$index(0, 0);
        c2.$indexSet(0, 0, A.convertFormatValue(C._isInt(c.$index(0, 0)) ? D.JSNumber_methods.floor$0(g) : g, fromFormat, format));
      } else if (numChannels <= cl)
        for (ci = 0; ci < numChannels; ++ci)
          c2.$indexSet(0, ci, A.convertFormatValue(c.$index(0, ci), fromFormat, format));
      else if (cl === 2) {
        l = A.convertFormatValue(c.$index(0, 0), fromFormat, format);
        if (numChannels === 3) {
          c2.$indexSet(0, 0, l);
          c2.$indexSet(0, 1, l);
          c2.$indexSet(0, 2, l);
        } else {
          a = A.convertFormatValue(c.$index(0, 1), fromFormat, format);
          c2.$indexSet(0, 0, l);
          c2.$indexSet(0, 1, l);
          c2.$indexSet(0, 2, l);
          c2.$indexSet(0, 3, a);
        }
      } else {
        for (ci = 0; ci < cl; ++ci)
          c2.$indexSet(0, ci, A.convertFormatValue(c.$index(0, ci), fromFormat, format));
        v = cl === 1 ? c2.$index(0, 0) : 0;
        for (ci = cl; ci < numChannels; ++ci)
          c2.$indexSet(0, ci, ci === 3 ? a : v);
      }
      return c2;
    },
    convertColor(c, alpha, format, numChannels) {
      var c2, _null = null,
        t1 = c.get$palette(),
        fromFormat = t1 == null ? _null : t1.get$format();
      if (fromFormat == null)
        fromFormat = c.get$format();
      numChannels = c.get$length(c);
      if (format === fromFormat && numChannels === c.get$length(c)) {
        t1 = c.clone$0(0);
        return t1;
      }
      switch (format.index) {
        case 3:
          c2 = new A.ColorUint8(new Uint8Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 0:
          return A._convertColor(c, new A.ColorUint1(numChannels, 0), 0);
        case 1:
          return A._convertColor(c, new A.ColorUint2(numChannels, 0), 0);
        case 2:
          t1 = numChannels < 3 ? 1 : 2;
          c2 = new A.ColorUint4(numChannels, new Uint8Array(t1));
          return A._convertColor(c, c2, 0);
        case 4:
          c2 = new A.ColorUint16(new Uint16Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 5:
          c2 = new A.ColorUint32(new Uint32Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 6:
          c2 = new A.ColorInt8(new Int8Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 7:
          c2 = new A.ColorInt16(new Int16Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 8:
          c2 = new A.ColorInt32(new Int32Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 9:
          c2 = new A.ColorFloat16(new Uint16Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 10:
          c2 = new A.ColorFloat32(new Float32Array(numChannels));
          return A._convertColor(c, c2, 0);
        case 11:
          c2 = new A.ColorFloat64(new Float64Array(numChannels));
          return A._convertColor(c, c2, 0);
      }
    },
    getLuminance(c) {
      return 0.299 * c.get$r(c) + 0.587 * c.get$g() + 0.114 * c.get$b(c);
    },
    Float16_doubleToFloat16(n) {
      var xI, e, m,
        t1 = $.$get$__float32();
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = n;
      t1 = $.$get$__float32ToUint32();
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      xI = t1[0];
      if (n === 0)
        return xI >>> 16;
      if ($.Float16__toFloatFloat32Data == null)
        A.Float16__initialize();
      e = xI >>> 23 & 511;
      t1 = $.Float16____eLut._readField$0();
      if (!(e < t1.length))
        return C.ioore(t1, e);
      e = t1[e];
      if (e !== 0) {
        m = xI & 8388607;
        return e + (m + 4095 + (m >>> 13 & 1) >>> 13);
      }
      return A.Float16__convert(xI);
    },
    Float16__convert(i) {
      var t, t1,
        s = i >>> 16 & 32768,
        e = (i >>> 23 & 255) - 112,
        m = i & 8388607;
      if (e <= 0) {
        if (e < -10)
          return s;
        m |= 8388608;
        t = 14 - e;
        return (s | D.JSInt_methods.$shr(m + (D.JSInt_methods.$shl(1, t - 1) - 1) + (D.JSInt_methods._shrReceiverPositive$1(m, t) & 1), t)) >>> 0;
      } else if (e === 143)
        if (m === 0)
          return s | 31744;
        else {
          m = m >>> 13;
          t1 = m === 0 ? 1 : 0;
          return s | m | t1 | 31744;
        }
      else {
        m = m + 4095 + (m >>> 13 & 1);
        if ((m & 8388608) !== 0) {
          ++e;
          m = 0;
        }
        if (e > 30)
          return s | 31744;
        return (s | e << 10 | m >>> 13) >>> 0;
      }
    },
    Float16__initialize() {
      var floatUint32Data, i, e, t2, t3,
        t1 = $.Float16__toFloatFloat32Data;
      if (t1 != null)
        return t1;
      floatUint32Data = new Uint32Array(65536);
      $.Float16__toFloatFloat32Data = J.asFloat32List$2$x(D.NativeUint32List_methods.get$buffer(floatUint32Data), 0, null);
      t1 = new Uint16Array(512);
      $.Float16____eLut._value = t1;
      for (i = 0; i < 256; ++i) {
        e = (i & 255) - 112;
        if (e <= 0 || e >= 30) {
          t1[i] = 0;
          t2 = (i | 256) >>> 0;
          if (!(t2 < 512))
            return C.ioore(t1, t2);
          t1[t2] = 0;
        } else {
          t2 = e << 10 >>> 0;
          t1[i] = t2;
          t3 = (i | 256) >>> 0;
          if (!(t3 < 512))
            return C.ioore(t1, t3);
          t1[t3] = (t2 | 32768) >>> 0;
        }
      }
      for (i = 0; i < 65536; ++i)
        floatUint32Data[i] = A.Float16__halfToFloat(i);
      t1 = $.Float16__toFloatFloat32Data;
      t1.toString;
      return t1;
    },
    Float16__halfToFloat(y) {
      var t1,
        s = y >>> 15 & 1,
        e = y >>> 10 & 31,
        m = y & 1023;
      if (e === 0)
        if (m === 0)
          return s << 31 >>> 0;
        else {
          for (; (m & 1024) === 0;) {
            m = m << 1;
            --e;
          }
          ++e;
          m &= 4294966271;
        }
      else if (e === 31) {
        t1 = s << 31;
        if (m === 0)
          return (t1 | 2139095040) >>> 0;
        else
          return (t1 | m << 13 | 2139095040) >>> 0;
      }
      return (s << 31 | e + 112 << 23 | m << 13) >>> 0;
    },
    resolve(parser, $R) {
      var todo, seen, t2, $parent, t3, _i, child, referenced,
        t1 = type$.Parser_dynamic,
        mapping = C.LinkedHashMap_LinkedHashMap$_empty(type$.ResolvableParser_dynamic, t1);
      parser = A._dereference(parser, mapping, $R);
      todo = C._setArrayType([parser], type$.JSArray_Parser_dynamic);
      seen = C.LinkedHashSet_LinkedHashSet$_literal([parser], t1);
      for (t1 = type$.dynamic; t2 = todo.length, t2 !== 0;) {
        if (0 >= t2)
          return C.ioore(todo, -1);
        $parent = todo.pop();
        for (t2 = $parent.get$children($parent), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
          child = t2[_i];
          if (child instanceof A.ReferenceParser) {
            referenced = A._dereference(child, mapping, t1);
            $parent.replace$2(0, child, referenced);
            child = referenced;
          }
          if (seen.add$1(0, child))
            D.JSArray_methods.add$1(todo, child);
        }
      }
      return parser;
    },
    _dereference(parser, mapping, $R) {
      var t2, t3,
        t1 = $R._eval$1("ResolvableParser<0>"),
        references = C.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (; t1._is(parser);) {
        if (mapping.containsKey$1(0, parser))
          return $R._eval$1("Parser<0>")._as(mapping.$index(0, parser));
        else if (!references.add$1(0, parser))
          throw C.wrapException(C.StateError$("Recursive references detected: " + references.toString$0(0)));
        parser = parser.$ti._eval$1("Parser<1>")._as(C.Primitives_applyFunction(parser.$function, parser.$arguments, null));
      }
      for (t1 = C._LinkedHashSetIterator$(references, references._collection$_modifications, references.$ti._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        mapping.$indexSet(0, t3 == null ? t2._as(t3) : t3, parser);
      }
      return parser;
    },
    toCharCode(char) {
      var t1 = char.length;
      if (C.assertTest(t1 === 1))
        C.assertThrow('"' + char + '" is not a valid character');
      if (0 >= t1)
        return C.ioore(char, 0);
      return char.charCodeAt(0);
    },
    _toFormattedChar(code) {
      C._asInt(code);
      switch (code) {
        case 8:
          return "\\b";
        case 9:
          return "\\t";
        case 10:
          return "\\n";
        case 11:
          return "\\v";
        case 12:
          return "\\f";
        case 13:
          return "\\r";
        case 34:
          return '\\"';
        case 39:
          return "\\'";
        case 92:
          return "\\\\";
      }
      if (code < 32)
        return "\\x" + D.JSString_methods.padLeft$2(D.JSInt_methods.toRadixString$1(code, 16), 2, "0");
      return C.Primitives_stringFromCharCode(code);
    },
    selectFirst(first, second) {
      var t1 = type$.Failure;
      t1._as(first);
      t1._as(second);
      return first;
    },
    selectLast(first, second) {
      var t1 = type$.Failure;
      t1._as(first);
      return t1._as(second);
    },
    selectFarthest(first, second) {
      var t1 = type$.Failure;
      t1._as(first);
      t1._as(second);
      return first.position <= second.position ? second : first;
    },
    ListViewObserver_isSupportRenderSliverType(obj) {
      var objRuntimeTypeStr;
      if (obj == null)
        return false;
      if (obj instanceof C.RenderSliverList || obj instanceof C.RenderSliverFixedExtentList)
        return true;
      objRuntimeTypeStr = C._rtiToString(C.getRuntimeTypeOfDartObject(obj)._rti, null);
      return D.JSArray_methods.contains$1(C._setArrayType(["RenderSliverVariedExtentList"], type$.JSArray_String), objRuntimeTypeStr);
    },
    ObserverCore_handleListObserve(context, customOverlap, fetchLeadingOffset, toNextOverPercent) {
      var viewport, t1, scrollDirection, firstChild, offset, overlap, rawScrollViewOffset, scrollViewOffset, index, isNotFound, t2, t3, targetFirstChild, t4, nextChild, firstDisplayingChildIndex, firstDisplayingChildModel, displayingChildModelMap, displayingChildModelList, showingChildrenMaxOffset, displayingChild, displayingChildIndex, displayingChildModel, _null = null,
        _obj = A.ObserverUtils_findRenderObject(context);
      if (!(_obj instanceof C.RenderSliverMultiBoxAdaptor))
        return _null;
      viewport = A.ObserverUtils_findViewport(_obj);
      if (viewport == null)
        return _null;
      if (viewport.get$debugNeedsPaint())
        return _null;
      t1 = _obj._geometry;
      t1 = t1 == null ? _null : t1.visible;
      if (t1 !== true || type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent < 1e-10)
        return A.ListViewObserveModel$(C._setArrayType([], type$.JSArray_ListViewObserveDisplayingChildModel), C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ListViewObserveDisplayingChildModel), _null, _obj, viewport, false);
      t1 = type$.SliverConstraints;
      scrollDirection = C.axisDirectionToAxis(t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).axisDirection);
      firstChild = _obj.ContainerRenderObjectMixin__firstChild;
      if (firstChild == null)
        return _null;
      offset = fetchLeadingOffset.call$0();
      if (offset == null)
        offset = 0;
      overlap = t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).overlap;
      rawScrollViewOffset = t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).scrollOffset + overlap;
      scrollViewOffset = rawScrollViewOffset + offset;
      index = type$.SliverMultiBoxAdaptorParentData._as(firstChild.parentData).index;
      if (index == null)
        index = 0;
      t2 = C._instanceType(_obj);
      t3 = t2._eval$1("ContainerRenderObjectMixin.0");
      t2 = t2._eval$1("ContainerRenderObjectMixin.1");
      targetFirstChild = firstChild;
      while (true) {
        isNotFound = true;
        if (!!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetFirstChild, toNextOverPercent)) {
          isNotFound = false;
          break;
        }
        ++index;
        t3._as(targetFirstChild);
        C.assertHelper(targetFirstChild.get$parent(targetFirstChild) === _obj);
        t4 = targetFirstChild.parentData;
        t4.toString;
        nextChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
        if (nextChild == null)
          break;
        if (!(nextChild instanceof C.RenderIndexedSemantics)) {
          t3._as(nextChild);
          C.assertHelper(nextChild.get$parent(nextChild) === _obj);
          t4 = nextChild.parentData;
          t4.toString;
          nextChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
        }
        if (nextChild == null)
          break;
        targetFirstChild = nextChild;
      }
      if (isNotFound)
        return A.ListViewObserveModel$(C._setArrayType([], type$.JSArray_ListViewObserveDisplayingChildModel), C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ListViewObserveDisplayingChildModel), _null, _obj, viewport, false);
      if (!(targetFirstChild instanceof C.RenderIndexedSemantics))
        return _null;
      firstDisplayingChildIndex = targetFirstChild._proxy_box$_index;
      firstDisplayingChildModel = A.ListViewObserveDisplayingChildModel$(firstDisplayingChildIndex, targetFirstChild, _obj, viewport);
      displayingChildModelMap = C.LinkedHashMap_LinkedHashMap$_literal([firstDisplayingChildIndex, firstDisplayingChildModel], type$.int, type$.ListViewObserveDisplayingChildModel);
      displayingChildModelList = C._setArrayType([firstDisplayingChildModel], type$.JSArray_ListViewObserveDisplayingChildModel);
      showingChildrenMaxOffset = rawScrollViewOffset + t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent - overlap;
      displayingChild = _obj.childAfter$1(targetFirstChild);
      for (; A.ObserverUtils_isDisplayingChildInSliver(scrollDirection, scrollViewOffset, showingChildrenMaxOffset, displayingChild, toNextOverPercent);) {
        if (displayingChild == null)
          break;
        if (!(displayingChild instanceof C.RenderIndexedSemantics)) {
          t3._as(displayingChild);
          C.assertHelper(displayingChild.get$parent(displayingChild) === _obj);
          t1 = displayingChild.parentData;
          t1.toString;
          displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
          continue;
        }
        displayingChildIndex = displayingChild._proxy_box$_index;
        displayingChildModel = new A.ListViewObserveDisplayingChildModel(displayingChildIndex, displayingChild);
        D.JSArray_methods.add$1(displayingChildModelList, displayingChildModel);
        displayingChildModelMap.$indexSet(0, displayingChildIndex, displayingChildModel);
        t3._as(displayingChild);
        C.assertHelper(displayingChild.get$parent(0) === _obj);
        t1 = displayingChild.parentData;
        t1.toString;
        displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      }
      return A.ListViewObserveModel$(displayingChildModelList, displayingChildModelMap, firstDisplayingChildModel, _obj, viewport, true);
    },
    ObserverCore_handleGridObserve(context, customOverlap, fetchLeadingOffset, toNextOverPercent) {
      var viewport, t1, t2, scrollDirection, firstChild, offset, overlap, rawScrollViewOffset, scrollViewOffset, isNotFound, t3, targetFirstChild, t4, nextChild, firstDisplayingChildIndex, firstModel, displayingChildModelMap, firstGroupChildModelList, showingChildrenMaxOffset, targetChild, lastFirstGroupChildWidget, targetChildIndex, displayingChildModel, showingChildModelList, displayingChild, displayingChildIndex, _null = null,
        _obj = A.ObserverUtils_findRenderObject(context);
      if (!(_obj instanceof C.RenderSliverMultiBoxAdaptor))
        return _null;
      viewport = A.ObserverUtils_findViewport(_obj);
      if (viewport == null)
        return _null;
      if (viewport.get$debugNeedsPaint())
        return _null;
      t1 = _obj._geometry;
      t1 = t1 == null ? _null : t1.visible;
      if (t1 !== true || type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent < 1e-10) {
        t1 = type$.JSArray_GridViewObserveDisplayingChildModel;
        t2 = C._setArrayType([], t1);
        return A.GridViewObserveModel$(C._setArrayType([], t1), C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.GridViewObserveDisplayingChildModel), t2, _obj, viewport, false);
      }
      t1 = type$.SliverConstraints;
      scrollDirection = C.axisDirectionToAxis(t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).axisDirection);
      firstChild = _obj.ContainerRenderObjectMixin__firstChild;
      if (firstChild == null)
        return _null;
      offset = fetchLeadingOffset.call$0();
      if (offset == null)
        offset = 0;
      overlap = t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).overlap;
      rawScrollViewOffset = t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).scrollOffset + overlap;
      scrollViewOffset = rawScrollViewOffset + offset;
      t2 = C._instanceType(_obj);
      t3 = t2._eval$1("ContainerRenderObjectMixin.0");
      t2 = t2._eval$1("ContainerRenderObjectMixin.1");
      targetFirstChild = firstChild;
      while (true) {
        if (!!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetFirstChild, toNextOverPercent)) {
          isNotFound = false;
          break;
        }
        t3._as(targetFirstChild);
        C.assertHelper(targetFirstChild.get$parent(targetFirstChild) === _obj);
        t4 = targetFirstChild.parentData;
        t4.toString;
        nextChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
        if (nextChild == null) {
          isNotFound = true;
          break;
        }
        targetFirstChild = nextChild;
      }
      if (isNotFound) {
        t1 = type$.JSArray_GridViewObserveDisplayingChildModel;
        t2 = C._setArrayType([], t1);
        return A.GridViewObserveModel$(C._setArrayType([], t1), C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.GridViewObserveDisplayingChildModel), t2, _obj, viewport, false);
      }
      if (!(targetFirstChild instanceof C.RenderIndexedSemantics))
        return _null;
      firstDisplayingChildIndex = targetFirstChild._proxy_box$_index;
      firstModel = A.GridViewObserveDisplayingChildModel$(firstDisplayingChildIndex, targetFirstChild, _obj, viewport);
      t4 = type$.GridViewObserveDisplayingChildModel;
      displayingChildModelMap = C.LinkedHashMap_LinkedHashMap$_literal([firstDisplayingChildIndex, firstModel], type$.int, t4);
      firstGroupChildModelList = C._setArrayType([firstModel], type$.JSArray_GridViewObserveDisplayingChildModel);
      showingChildrenMaxOffset = rawScrollViewOffset + t1._as(C.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent - overlap;
      targetChild = _obj.childAfter$1(targetFirstChild);
      for (lastFirstGroupChildWidget = targetFirstChild; targetChild != null; targetChild = nextChild) {
        if (A.ObserverUtils_isReachOffsetWidgetInSliver(scrollDirection, Math.max(scrollViewOffset, firstModel.get$layoutOffset()), targetChild, toNextOverPercent)) {
          if (!(targetChild instanceof C.RenderIndexedSemantics))
            break;
          targetChildIndex = targetChild._proxy_box$_index;
          displayingChildModel = new A.GridViewObserveDisplayingChildModel(targetChildIndex, targetChild);
          D.JSArray_methods.add$1(firstGroupChildModelList, displayingChildModel);
          displayingChildModelMap.$indexSet(0, targetChildIndex, displayingChildModel);
          lastFirstGroupChildWidget = targetChild;
        }
        t3._as(targetChild);
        C.assertHelper(targetChild.get$parent(targetChild) === _obj);
        t1 = targetChild.parentData;
        t1.toString;
        nextChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
        if (nextChild == null)
          break;
      }
      showingChildModelList = C.List_List$from(firstGroupChildModelList, true, t4);
      displayingChild = _obj.childAfter$1(lastFirstGroupChildWidget);
      for (; displayingChild != null;) {
        if (A.ObserverUtils_isDisplayingChildInSliver(scrollDirection, scrollViewOffset, showingChildrenMaxOffset, displayingChild, toNextOverPercent)) {
          if (!(displayingChild instanceof C.RenderIndexedSemantics))
            continue;
          displayingChildIndex = displayingChild._proxy_box$_index;
          displayingChildModel = new A.GridViewObserveDisplayingChildModel(displayingChildIndex, displayingChild);
          D.JSArray_methods.add$1(showingChildModelList, displayingChildModel);
          displayingChildModelMap.$indexSet(0, displayingChildIndex, displayingChildModel);
        }
        t3._as(displayingChild);
        C.assertHelper(displayingChild.get$parent(displayingChild) === _obj);
        t1 = displayingChild.parentData;
        t1.toString;
        displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      }
      return A.GridViewObserveModel$(showingChildModelList, displayingChildModelMap, firstGroupChildModelList, _obj, viewport, true);
    },
    ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent) {
      var targetFirstChildSize, parentData, targetFirstChildOffset, exception, t1;
      if (targetChild._box$_size == null)
        return false;
      parentData = targetChild.parentData;
      if (!(parentData instanceof C.SliverMultiBoxAdaptorParentData))
        return false;
      targetFirstChildOffset = parentData.layoutOffset;
      if (targetFirstChildOffset == null)
        targetFirstChildOffset = 0;
      targetFirstChildSize = null;
      try {
        targetFirstChildSize = scrollDirection === D.Axis_1 ? targetChild.get$size(0)._dy : targetChild.get$size(0)._dx;
      } catch (exception) {
        return false;
      }
      t1 = targetFirstChildSize;
      if (typeof t1 !== "number")
        return t1.$mul();
      return scrollViewOffset < t1 * toNextOverPercent + targetFirstChildOffset;
    },
    ObserverUtils_isReachOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent) {
      var parentData, targetFirstChildOffset;
      if (!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent))
        return false;
      parentData = targetChild.parentData;
      if (!(parentData instanceof C.SliverMultiBoxAdaptorParentData))
        return false;
      targetFirstChildOffset = parentData.layoutOffset;
      return scrollViewOffset >= (targetFirstChildOffset == null ? 0 : targetFirstChildOffset);
    },
    ObserverUtils_isDisplayingChildInSliver(scrollDirection, scrollViewOffset, showingChildrenMaxOffset, targetChild, toNextOverPercent) {
      var parentData, targetChildLayoutOffset;
      if (targetChild == null)
        return false;
      if (!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent))
        return false;
      parentData = targetChild.parentData;
      if (!(parentData instanceof C.SliverMultiBoxAdaptorParentData))
        return false;
      targetChildLayoutOffset = parentData.layoutOffset;
      return (targetChildLayoutOffset == null ? 0 : targetChildLayoutOffset) < showingChildrenMaxOffset;
    },
    ObserverUtils_findViewport(obj) {
      var currentCycleCount,
        $parent = obj.get$parent(obj);
      if (!($parent instanceof C.RenderObject))
        return null;
      currentCycleCount = 1;
      while (true) {
        if (!($parent != null && currentCycleCount <= 10))
          break;
        if ($parent instanceof C.RenderViewportBase)
          return $parent;
        $parent = $parent.get$parent($parent);
        ++currentCycleCount;
      }
      return null;
    },
    ObserverUtils_isBelowOffsetSliverInViewport(sliver, viewportPixels) {
      var t1 = type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(sliver)),
        t2 = sliver._geometry,
        size = t2 == null ? null : t2.maxPaintExtent;
      if (size == null)
        size = 0;
      return viewportPixels <= t1.precedingScrollExtent + size;
    },
    ObserverUtils_isDisplayingSliverInViewport(sliver, viewportBottomOffset, viewportPixels) {
      var t1 = sliver._geometry;
      t1 = t1 == null ? null : t1.visible;
      if (t1 !== true)
        return false;
      if (!A.ObserverUtils_isBelowOffsetSliverInViewport(sliver, viewportPixels))
        return false;
      return type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(sliver)).precedingScrollExtent < viewportBottomOffset;
    },
    ObserverUtils_findRenderObject(context) {
      var exception,
        t1 = context._widget;
      if (t1 == null)
        return null;
      try {
        t1 = context.findRenderObject$0();
        return t1;
      } catch (exception) {
        return null;
      }
    },
    Dates_leapYear(year) {
      var t1;
      if (D.JSInt_methods.$mod(year, 4) === 0)
        t1 = D.JSInt_methods.$mod(year, 100) !== 0 || D.JSInt_methods.$mod(year, 400) === 0;
      else
        t1 = false;
      return t1;
    },
    TDDivider$(margin) {
      var _null = null;
      return new C.TDDivider(_null, margin, _null, _null, _null);
    },
    TDColors_get_grayColor1(_this) {
      var t1 = _this.__TDThemeData_colorMap_A;
      t1 === $ && C.throwLateFieldNI("colorMap");
      t1 = t1.$index(0, "grayColor1");
      return t1 == null ? B.Color_p2H : t1;
    },
    rgbaToBmp(image) {
      var t4, i, t5, t6, t7,
        t1 = image.width,
        t2 = image.height,
        rgbSize = t1 * t2 * 4,
        fileSize = rgbSize + 54,
        t3 = new DataView(new ArrayBuffer(fileSize)),
        out = new A.ByteWriter(t3, D.C_Endian);
      out.writeUint16$1(19778);
      out.writeUint32$1(fileSize);
      out.writeUint32$1(0);
      out.writeUint32$1(54);
      out.writeUint32$1(40);
      out.writeUint32$1(t1);
      out.writeUint32$1(-t2);
      out.writeUint16$1(1);
      out.writeUint16$1(32);
      out.writeUint32$1(0);
      out.writeUint32$1(rgbSize);
      out.writeUint32$1(0);
      out.writeUint32$1(0);
      out.writeUint32$1(0);
      out.writeUint32$1(0);
      for (t1 = image.rgba, t2 = t1.length, t4 = t2 / 4 | 0, i = 0; i < t4; ++i) {
        t5 = i * 4;
        t6 = t5 + 2;
        if (!(t6 < t2))
          return C.ioore(t1, t6);
        t6 = t1[t6];
        t3.setUint8(out.i, t6);
        t6 = ++out.i;
        t7 = t5 + 1;
        if (!(t7 < t2))
          return C.ioore(t1, t7);
        t3.setUint8(t6, t1[t7]);
        t7 = ++out.i;
        if (!(t5 < t2))
          return C.ioore(t1, t5);
        t3.setUint8(t7, t1[t5]);
        t7 = ++out.i;
        t5 += 3;
        if (!(t5 < t2))
          return C.ioore(t1, t5);
        t3.setUint8(t7, t1[t5]);
        ++out.i;
      }
      return J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(t3));
    },
    thumbHashToRGBA(hash) {
      var t2, t3, header24, header16, lDc, pDc, qDc, hasAlpha, isLandscape, lx, ly, aDc, acStart, lChannel, pChannel, qChannel, acIndex, aChannel, aAc, t4, ratio, w, h, t5, rgba, cxStop, cyStop, fx, fy, t6, t7, t8, t9, y, i, t10, x, t11, cx, cy, l, j, fy2, t12, q, p, f, a, t13, b, r, _s2_ = "ac",
        t1 = hash.length;
      if (0 >= t1)
        return C.ioore(hash, 0);
      t2 = hash[0];
      if (1 >= t1)
        return C.ioore(hash, 1);
      t3 = hash[1];
      if (2 >= t1)
        return C.ioore(hash, 2);
      header24 = t2 & 255 | (t3 & 255) << 8 | (hash[2] & 255) << 16;
      if (3 >= t1)
        return C.ioore(hash, 3);
      t3 = hash[3];
      if (4 >= t1)
        return C.ioore(hash, 4);
      header16 = t3 & 255 | (hash[4] & 255) << 8;
      lDc = (header24 & 63) / 63;
      pDc = (header24 >>> 6 & 63) / 31.5 - 1;
      qDc = (header24 >>> 12 & 63) / 31.5 - 1;
      hasAlpha = header24 >>> 23 !== 0;
      isLandscape = header16 >>> 15 !== 0;
      if (isLandscape)
        t2 = hasAlpha ? 5 : 7;
      else
        t2 = header16 & 7;
      lx = Math.max(3, t2);
      if (isLandscape)
        t2 = header16 & 7;
      else
        t2 = hasAlpha ? 5 : 7;
      ly = Math.max(3, t2);
      if (hasAlpha) {
        if (5 >= t1)
          return C.ioore(hash, 5);
        aDc = (hash[5] & 15) / 15;
      } else
        aDc = 1;
      if (5 >= t1)
        return C.ioore(hash, 5);
      t1 = hash[5];
      acStart = hasAlpha ? 6 : 5;
      lChannel = A.Channel$(lx, ly);
      pChannel = A.Channel$(3, 3);
      qChannel = A.Channel$(3, 3);
      acIndex = qChannel.decode$4(0, hash, acStart, pChannel.decode$4(0, hash, acStart, lChannel.decode$4(0, hash, acStart, 0, (header24 >>> 18 & 31) / 31), (header16 >>> 3 & 63) / 63 * 1.25), (header16 >>> 9 & 63) / 63 * 1.25);
      if (hasAlpha) {
        aChannel = A.Channel$(5, 5);
        aChannel.decode$4(0, hash, acStart, acIndex, (t1 >>> 4 & 15) / 15);
      } else
        aChannel = null;
      t1 = lChannel.__Channel_ac_A;
      t1 === $ && C.throwLateFieldNI(_s2_);
      t2 = pChannel.__Channel_ac_A;
      t2 === $ && C.throwLateFieldNI(_s2_);
      t3 = qChannel.__Channel_ac_A;
      t3 === $ && C.throwLateFieldNI(_s2_);
      if (aChannel == null)
        aAc = null;
      else {
        t4 = aChannel.__Channel_ac_A;
        t4 === $ && C.throwLateFieldNI(_s2_);
        aAc = t4;
      }
      ratio = A.thumbHashToApproximateAspectRatio(hash);
      t4 = ratio > 1;
      w = D.JSNumber_methods.round$0(t4 ? 32 : 32 * ratio);
      h = D.JSNumber_methods.round$0(t4 ? 32 / ratio : 32);
      t5 = w * h * 4;
      rgba = new Uint8Array(t5);
      t4 = hasAlpha ? 5 : 3;
      cxStop = Math.max(lx, t4);
      t4 = hasAlpha ? 5 : 3;
      cyStop = Math.max(ly, t4);
      t4 = type$.double;
      fx = C.List_List$filled(cxStop, 0, false, t4);
      fy = C.List_List$filled(cyStop, 0, false, t4);
      for (t4 = t2.length, t6 = t3.length, t7 = t1.length, t8 = 3.141592653589793 / h, t9 = 3.141592653589793 / w, y = 0, i = 0; y < h; ++y)
        for (t10 = t8 * (y + 0.5), x = 0; x < w; ++x, i += 4) {
          for (t11 = t9 * (x + 0.5), cx = 0; cx < cxStop; ++cx)
            D.JSArray_methods.$indexSet(fx, cx, Math.cos(t11 * cx));
          for (cy = 0; cy < cyStop; ++cy)
            D.JSArray_methods.$indexSet(fy, cy, Math.cos(t10 * cy));
          for (l = lDc, cy = 0, j = 0; cy < ly; ++cy) {
            if (!(cy < cyStop))
              return C.ioore(fy, cy);
            fy2 = fy[cy] * 2;
            cx = cy > 0 ? 0 : 1;
            t11 = lx * (ly - cy);
            for (; cx * ly < t11; ++cx, ++j) {
              if (!(j >= 0 && j < t7))
                return C.ioore(t1, j);
              t12 = t1[j];
              if (!(cx < cxStop))
                return C.ioore(fx, cx);
              l += t12 * fx[cx] * fy2;
            }
          }
          for (q = qDc, p = pDc, cy = 0, j = 0; cy < 3; ++cy) {
            if (!(cy < cyStop))
              return C.ioore(fy, cy);
            fy2 = fy[cy] * 2;
            cx = cy > 0 ? 0 : 1;
            t11 = 3 - cy;
            for (; cx < t11; ++cx, ++j) {
              if (!(cx < cxStop))
                return C.ioore(fx, cx);
              f = fx[cx] * fy2;
              if (!(j >= 0 && j < t4))
                return C.ioore(t2, j);
              p += t2[j] * f;
              if (!(j < t6))
                return C.ioore(t3, j);
              q += t3[j] * f;
            }
          }
          if (aAc != null)
            for (t11 = aAc.length, a = aDc, cy = 0, j = 0; cy < 5; ++cy) {
              if (!(cy < cyStop))
                return C.ioore(fy, cy);
              fy2 = fy[cy] * 2;
              cx = cy > 0 ? 0 : 1;
              t12 = 5 - cy;
              for (; cx < t12; ++cx, ++j) {
                if (!(j >= 0 && j < t11))
                  return C.ioore(aAc, j);
                t13 = aAc[j];
                if (!(cx < cxStop))
                  return C.ioore(fx, cx);
                a += t13 * fx[cx] * fy2;
              }
            }
          else
            a = aDc;
          b = l - 0.6666666666666666 * p;
          r = (3 * l - b + q) / 2;
          t11 = D.JSNumber_methods.round$0(Math.max(0, 255 * Math.min(1, r)));
          if (!(i >= 0 && i < t5))
            return C.ioore(rgba, i);
          rgba[i] = t11;
          t11 = i + 1;
          t12 = D.JSNumber_methods.round$0(Math.max(0, 255 * Math.min(1, r - q)));
          if (!(t11 < t5))
            return C.ioore(rgba, t11);
          rgba[t11] = t12;
          t12 = i + 2;
          t11 = D.JSNumber_methods.round$0(Math.max(0, 255 * Math.min(1, b)));
          if (!(t12 < t5))
            return C.ioore(rgba, t12);
          rgba[t12] = t11;
          t11 = i + 3;
          t12 = D.JSNumber_methods.round$0(Math.max(0, 255 * Math.min(1, a)));
          if (!(t11 < t5))
            return C.ioore(rgba, t11);
          rgba[t11] = t12;
        }
      return new A.Image1(w, h, rgba);
    },
    thumbHashToApproximateAspectRatio(hash) {
      var header, hasAlpha, isLandscape, lx, ly,
        t1 = hash.length;
      if (3 >= t1)
        return C.ioore(hash, 3);
      header = hash[3];
      hasAlpha = (hash[2] & 128) !== 0;
      if (4 >= t1)
        return C.ioore(hash, 4);
      isLandscape = (hash[4] & 128) !== 0;
      if (isLandscape)
        lx = hasAlpha ? 5 : 7;
      else
        lx = header & 7;
      if (isLandscape)
        ly = header & 7;
      else
        ly = hasAlpha ? 5 : 7;
      return lx / ly;
    },
    useHtmlRenderObject() {
      var picture, image, recorder, exception,
        t1 = $._cachedUseHtmlRenderObject;
      if (t1 != null)
        return t1;
      t1 = $.$get$_renderer();
      recorder = t1.createPictureRecorder$0();
      t1.createCanvas$2(recorder, null);
      picture = recorder.endRecording$0();
      image = null;
      try {
        image = picture.toImageSync$2(1, 1);
        $._cachedUseHtmlRenderObject = false;
      } catch (exception) {
        if (type$.UnsupportedError._is(C.unwrapException(exception)))
          $._cachedUseHtmlRenderObject = true;
        else
          throw exception;
      } finally {
        t1 = image;
        if (t1 != null)
          t1.dispose$0();
        picture.dispose$0();
      }
      t1 = $._cachedUseHtmlRenderObject;
      t1.toString;
      return t1;
    },
    toDouble(byteData) {
      var o, outE, outM,
        bits = byteData.getUint16(0, false) & 65535,
        s = bits & 32768,
        e = bits >>> 10 & 31,
        m = bits & 1023;
      if (e === 0) {
        if (m !== 0) {
          byteData.$flags & 2 && C.throwUnsupportedOperation(byteData, 11);
          byteData.setUint32(0, 1056964608 + m, false);
          o = byteData.getFloat32(0, false) - $.$get$FP32_DENORMAL_FLOAT().getFloat32(0, false);
          return s === 0 ? o : -o;
        }
        outE = 0;
        outM = 0;
      } else {
        outM = m << 13;
        if (e === 31) {
          if (outM !== 0)
            outM |= 4194304;
          outE = 255;
        } else
          outE = e - 15 + 127;
      }
      byteData.$flags & 2 && C.throwUnsupportedOperation(byteData, 11);
      byteData.setUint32(0, (s << 16 | outE << 23 | outM) >>> 0, false);
      return byteData.getFloat32(0, false);
    },
    parseDouble(rawDouble, tryParse) {
      if (rawDouble == null)
        return null;
      rawDouble = D.JSString_methods.trim$0(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(rawDouble, "rem", ""), "em", ""), "ex", ""), "px", ""), "pt", ""));
      if (tryParse)
        return C.Primitives_parseDouble(rawDouble);
      return C.double_parse(rawDouble);
    },
    parseDoubleWithUnits(rawDouble, theme, tryParse) {
      var unit, value, _null = null,
        t1 = rawDouble == null,
        t2 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "pt");
      if (t2 === true)
        unit = 1.3333333333333333;
      else {
        t2 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "rem");
        if (t2 === true)
          unit = theme.fontSize;
        else {
          t2 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "em");
          if (t2 === true)
            unit = theme.fontSize;
          else {
            t1 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "ex");
            unit = t1 === true ? theme.xHeight : 1;
          }
        }
      }
      value = A.parseDouble(rawDouble, tryParse);
      return value != null ? value * unit : _null;
    },
    _parseTransformParams(params) {
      var t1, current, i, char, isSeparator, isExponent, t2,
        result = C._setArrayType([], type$.JSArray_double);
      for (t1 = params.length, current = "", i = 0; i < t1; ++i) {
        char = params[i];
        isSeparator = char === " " || char === "-" || char === ",";
        isExponent = i > 0 && params[i - 1].toLowerCase() === "e";
        if (isSeparator && !isExponent) {
          if (current !== "") {
            t2 = A.parseDouble(current, false);
            t2.toString;
            D.JSArray_methods.add$1(result, t2);
          }
          current = char === "-" ? "-" : "";
        } else {
          if (char === ".")
            if (C.stringContainsUnchecked(current, ".", 0)) {
              t2 = A.parseDouble(current, false);
              t2.toString;
              D.JSArray_methods.add$1(result, t2);
              current = "";
            }
          current += char;
        }
      }
      if (current.length !== 0) {
        t1 = A.parseDouble(current, false);
        t1.toString;
        D.JSArray_methods.add$1(result, t1);
      }
      return result;
    },
    parseTransform(transform) {
      var t1, t2, matches, result, t3, t4, command, params, transformer;
      if (transform == null || transform === "")
        return null;
      t1 = $.$get$_transformValidator();
      C._asString(transform);
      if (!t1._nativeRegExp.test(transform))
        throw C.wrapException(C.StateError$("illegal or unsupported transform: " + transform));
      t1 = $.$get$_transformCommand().allMatches$1(0, transform);
      t1 = C.List_List$of(t1, true, C._instanceType(t1)._eval$1("Iterable.E"));
      t2 = C._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      matches = new C.ReversedListIterable(t1, t2);
      for (t1 = new C.ListIterator(matches, matches.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"), result = B.AffineMatrix_qrl; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t4 = t3.group$1(1);
        t4.toString;
        command = D.JSString_methods.trim$0(t4);
        t3 = t3.group$1(2);
        t3.toString;
        params = A._parseTransformParams(D.JSString_methods.trim$0(t3));
        transformer = B.Map_uCfR4.$index(0, command);
        if (transformer == null)
          throw C.wrapException(C.StateError$("Unsupported transform: " + command));
        result = transformer.call$2(params, result);
      }
      return result;
    },
    _parseSvgMatrix(params, current) {
      var t1, a, b, c, d, e;
      type$.List_double._as(params);
      C.assertHelper(params.length !== 0);
      C.assertHelper(params.length === 6);
      t1 = params.length;
      if (0 >= t1)
        return C.ioore(params, 0);
      a = params[0];
      if (1 >= t1)
        return C.ioore(params, 1);
      b = params[1];
      if (2 >= t1)
        return C.ioore(params, 2);
      c = params[2];
      if (3 >= t1)
        return C.ioore(params, 3);
      d = params[3];
      if (4 >= t1)
        return C.ioore(params, 4);
      e = params[4];
      if (5 >= t1)
        return C.ioore(params, 5);
      return A.AffineMatrix$(a, b, c, d, e, params[5], 1).multiplied$1(current);
    },
    _parseSvgSkewX(params, current) {
      type$.List_double._as(params);
      C.assertHelper(params.length !== 0);
      return A.AffineMatrix$(1, 0, Math.tan(D.JSArray_methods.get$first(params)), 1, 0, 0, null).multiplied$1(current);
    },
    _parseSvgSkewY(params, current) {
      type$.List_double._as(params);
      C.assertHelper(params.length !== 0);
      return A.AffineMatrix$(1, Math.tan(D.JSArray_methods.get$first(params)), 0, 1, 0, 0, null).multiplied$1(current);
    },
    _parseSvgTranslate(params, current) {
      var y;
      type$.List_double._as(params);
      C.assertHelper(params.length !== 0);
      C.assertHelper(params.length <= 2);
      y = params.length < 2 ? 0 : params[1];
      return A.AffineMatrix$(1, 0, 0, 1, D.JSArray_methods.get$first(params), y, null).multiplied$1(current);
    },
    _parseSvgScale(params, current) {
      var t1, x;
      type$.List_double._as(params);
      C.assertHelper(params.length !== 0);
      C.assertHelper(params.length <= 2);
      t1 = params.length;
      if (0 >= t1)
        return C.ioore(params, 0);
      x = params[0];
      return A.AffineMatrix$(x, 0, 0, t1 < 2 ? x : params[1], 0, 0, null).multiplied$1(current);
    },
    _parseSvgRotate(params, current) {
      var rotate, t1, x, y;
      type$.List_double._as(params);
      C.assertHelper(params.length <= 3);
      if (0 >= params.length)
        return C.ioore(params, 0);
      rotate = B.AffineMatrix_qrl.rotated$1(params[0] * 3.141592653589793 / 180);
      t1 = params.length;
      if (t1 > 1) {
        x = params[1];
        if (t1 === 3) {
          if (2 >= t1)
            return C.ioore(params, 2);
          y = params[2];
        } else
          y = x;
        return A.AffineMatrix$(1, 0, 0, 1, x, y, null).multiplied$1(rotate).translated$2(-x, -y).multiplied$1(current);
      } else
        return rotate.multiplied$1(current);
    },
    parseRawFillRule(rawFillRule) {
      if (rawFillRule === "inherit" || rawFillRule == null)
        return null;
      return rawFillRule !== "evenodd" ? B.PathFillType_00 : B.PathFillType_10;
    },
    parseDecimalOrPercentage(val) {
      var t1;
      if (A.isPercentage(val))
        return A.parsePercentage(val, 1);
      else {
        t1 = A.parseDouble(val, false);
        t1.toString;
        return t1;
      }
    },
    parsePercentage(val, multiplier) {
      var t1 = A.parseDouble(D.JSString_methods.substring$2(val, 0, val.length - 1), false);
      t1.toString;
      return t1 / 100 * multiplier;
    },
    isPercentage(val) {
      var t1 = D.JSString_methods.endsWith$1(val, "%");
      return t1;
    },
    parsePatternUnitToDouble(rawValue, mode, viewBox) {
      var viewBoxValue, t1, value;
      if (viewBox != null)
        if (mode === "width")
          viewBoxValue = viewBox.width;
        else
          viewBoxValue = mode === "height" ? viewBox.height : null;
      else
        viewBoxValue = null;
      if (D.JSString_methods.contains$1(rawValue, "%")) {
        t1 = C.double_parse(D.JSString_methods.substring$2(rawValue, 0, rawValue.length - 1));
        viewBoxValue.toString;
        value = t1 / 100 * viewBoxValue;
      } else if (D.JSString_methods.startsWith$1(rawValue, "0.")) {
        t1 = C.double_parse(rawValue);
        viewBoxValue.toString;
        value = t1 * viewBoxValue;
      } else
        value = rawValue.length !== 0 ? C.double_parse(rawValue) : null;
      return value;
    },
    listEquals1(a, b, $T) {
      var index, t1;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      if (a === b)
        return true;
      for (index = 0; index < a.length; ++index) {
        t1 = a[index];
        if (!(index < b.length))
          return C.ioore(b, index);
        if (!J.$eq$(t1, b[index]))
          return false;
      }
      return true;
    },
    lerpDouble0(a, b, t) {
      C.assertHelper(isFinite(a));
      C.assertHelper(isFinite(b));
      C.assertHelper(t <= 1);
      C.assertHelper(t >= 0);
      return (1 - t) * a + t * b;
    },
    _encodeMatrix(matrix) {
      if (matrix == null || matrix.$eq(0, B.AffineMatrix_qrl))
        return null;
      return matrix.toMatrix4$0();
    },
    _encodeShader(shader, shaderIds, codec, buffer) {
      var t1, t2, t3, t4, t5, _i, shaderId, t6, t7, t8, t9, t10;
      if (shader == null)
        return;
      if (shader instanceof A.LinearGradient0) {
        t1 = shader.from;
        t2 = shader.to;
        t3 = C._setArrayType([], type$.JSArray_int);
        for (t4 = shader.colors, t5 = t4.length, _i = 0; _i < t4.length; t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i)
          t3.push(t4[_i].value);
        t3 = new Int32Array(C._ensureNativeList(t3));
        t4 = shader.offsets;
        t4.toString;
        t4 = new Float32Array(C._ensureNativeList(t4));
        t5 = shader.tileMode.index;
        buffer._checkPhase$1(B._CurrentSection_2);
        shaderId = buffer._nextShaderId++;
        C.assertHelper(shaderId < 65535);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 39);
        buffer._putUint16$1(shaderId);
        buffer._putFloat32$1(t1.x);
        buffer._putFloat32$1(t1.y);
        buffer._putFloat32$1(t2.x);
        buffer._putFloat32$1(t2.y);
        buffer._putUint16$1(t3.length);
        buffer._putInt32List$1(t3);
        buffer._putUint16$1(t4.length);
        buffer._putFloat32List$1(t4);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t5);
      } else if (shader instanceof A.RadialGradient) {
        t1 = shader.center;
        t2 = shader.radius;
        t3 = shader.focalPoint;
        t4 = t3 == null;
        t5 = t4 ? null : t3.x;
        t3 = t4 ? null : t3.y;
        t4 = C._setArrayType([], type$.JSArray_int);
        for (t6 = shader.colors, t7 = t6.length, _i = 0; _i < t6.length; t6.length === t7 || (0, C.throwConcurrentModificationError)(t6), ++_i)
          t4.push(t6[_i].value);
        t4 = new Int32Array(C._ensureNativeList(t4));
        t6 = shader.offsets;
        t6.toString;
        t6 = new Float32Array(C._ensureNativeList(t6));
        t7 = shader.tileMode.index;
        t8 = A._encodeMatrix(shader.transform);
        t9 = t5 == null;
        if (!(t9 && t3 == null))
          t10 = !t9 && t3 != null;
        else
          t10 = true;
        C.assertHelper(t10);
        C.assertHelper(t8 == null || t8.length === 16);
        buffer._checkPhase$1(B._CurrentSection_2);
        shaderId = buffer._nextShaderId++;
        C.assertHelper(shaderId < 65535);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 40);
        buffer._putUint16$1(shaderId);
        buffer._putFloat32$1(t1.x);
        buffer._putFloat32$1(t1.y);
        buffer._putFloat32$1(t2);
        t1 = !t9 && t3 != null;
        t2 = !buffer._vector_graphics_codec$_isDone;
        if (t1) {
          C.assertHelper(t2);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 1);
          buffer._putFloat32$1(t5);
          buffer._putFloat32$1(t3);
        } else {
          C.assertHelper(t2);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 0);
        }
        buffer._putUint16$1(t4.length);
        buffer._putInt32List$1(t4);
        buffer._putUint16$1(t6.length);
        buffer._putFloat32List$1(t6);
        buffer._writeTransform$1(t8);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t7);
      } else {
        C.assertHelper(false);
        throw C.wrapException(C.StateError$("illegal shader type: " + shader.toString$0(0)));
      }
      shaderIds.$indexSet(0, shader, shaderId);
    },
    _encodeInstructions(instructions, useHalfPrecisionControlPoints) {
      var fillIds, strokeIds, shaderIds, t4, t5, _i, data, t6, t7, t8, t9, t10, t11, paint, nextPaintId, fill, stroke, shaderId, t12, t13, t14, pathIds, nextPathId, path, controlPointTypes, controlPoints, _i0, command, t15, t16, position, textConfig, encoded, vertices, patternData, drawImageData, result, _null = null, _65535 = 65535,
        t1 = type$.JSArray_int,
        t2 = C._setArrayType([], t1),
        t3 = new DataView(new ArrayBuffer(8)),
        buffer = new A.VectorGraphicsBuffer(t2, t3, B._CurrentSection_0);
      buffer.__VectorGraphicsBuffer__eightBytesAsList_A = J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(t3));
      buffer._putUint32$1(8924514);
      C.assertHelper(!buffer._vector_graphics_codec$_isDone);
      D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 1);
      if (buffer._decodePhase.index !== 0)
        C.throwExpression(C.StateError$("Size already written"));
      buffer._decodePhase = B._CurrentSection_1;
      C.assertHelper(!buffer._vector_graphics_codec$_isDone);
      D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 41);
      buffer._putFloat32$1(instructions.width);
      buffer._putFloat32$1(instructions.height);
      t2 = type$.int;
      fillIds = C.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      strokeIds = C.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      shaderIds = C.LinkedHashMap_LinkedHashMap$_empty(type$.Gradient_2, t2);
      for (t4 = instructions.images, t5 = t4.length, _i = 0; _i < t4.length; t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i) {
        data = t4[_i];
        t6 = data.format;
        t7 = data.data;
        buffer._checkPhase$1(B._CurrentSection_1);
        C.assertHelper(buffer._nextImageId < 65535);
        C.assertHelper(D.JSArray_methods.contains$1(B.List_OKH, t6));
        t8 = buffer._nextImageId++;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 46);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint16(0, t8, true);
        t8 = buffer._vector_graphics_codec$_buffer;
        t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t10 = C.instanceType(t9);
        t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
        t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t8, t11);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t6);
        t6 = t7.length;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint32(0, t6, true);
        t11 = buffer._vector_graphics_codec$_buffer;
        t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t9 = C.instanceType(t8);
        t10 = new C.SubListIterable(t8, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
        t10.SubListIterable$3(t8, 0, 4, t9._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t11, t10);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(t7), t7.byteOffset, t6));
      }
      for (t4 = instructions.paints, t5 = t4.length, _i = 0; t6 = t4.length, _i < t6; t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i) {
        paint = t4[_i];
        t6 = paint.fill;
        A._encodeShader(t6 == null ? _null : t6.shader, shaderIds, B.C_VectorGraphicsCodec, buffer);
        t6 = paint.stroke;
        A._encodeShader(t6 == null ? _null : t6.shader, shaderIds, B.C_VectorGraphicsCodec, buffer);
      }
      for (nextPaintId = 0, _i = 0; _i < t4.length; t4.length === t6 || (0, C.throwConcurrentModificationError)(t4), ++_i) {
        paint = t4[_i];
        fill = paint.fill;
        stroke = paint.stroke;
        if (fill != null) {
          shaderId = shaderIds.$index(0, fill.shader);
          t5 = fill.color;
          buffer._checkPhase$1(B._CurrentSection_3);
          t7 = buffer._nextPaintId++;
          C.assertHelper(t7 < 65535);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 28);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint32(0, t5.value, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t9 = C.instanceType(t8);
          t10 = new C.SubListIterable(t8, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
          t10.SubListIterable$3(t8, 0, 4, t9._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t10);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, paint.blendMode.index);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint16(0, t7, true);
          t10 = buffer._vector_graphics_codec$_buffer;
          t5 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t8 = C.instanceType(t5);
          t9 = new C.SubListIterable(t5, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
          t9.SubListIterable$3(t5, 0, 2, t8._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t10, t9);
          t5 = shaderId == null ? _65535 : shaderId;
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint16(0, t5, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t9 = C.instanceType(t8);
          t10 = new C.SubListIterable(t8, 0, 2, t9._eval$1("SubListIterable<ListBase.E>"));
          t10.SubListIterable$3(t8, 0, 2, t9._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t10);
          fillIds.$indexSet(0, nextPaintId, t7);
        }
        if (stroke != null) {
          shaderId = shaderIds.$index(0, stroke.shader);
          t5 = stroke.color;
          t7 = stroke.cap;
          t7 = t7 == null ? _null : t7.index;
          if (t7 == null)
            t7 = 0;
          t8 = stroke.join;
          t8 = t8 == null ? _null : t8.index;
          if (t8 == null)
            t8 = 0;
          t9 = stroke.miterLimit;
          if (t9 == null)
            t9 = 4;
          t10 = stroke.width;
          if (t10 == null)
            t10 = 1;
          buffer._checkPhase$1(B._CurrentSection_3);
          t11 = buffer._nextPaintId++;
          C.assertHelper(t11 < 65535);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 29);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint32(0, t5.value, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t12 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t13 = C.instanceType(t12);
          t14 = new C.SubListIterable(t12, 0, 4, t13._eval$1("SubListIterable<ListBase.E>"));
          t14.SubListIterable$3(t12, 0, 4, t13._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t14);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t7);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t8);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, paint.blendMode.index);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setFloat32(0, t9, true);
          t9 = buffer._vector_graphics_codec$_buffer;
          t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t5 = C.instanceType(t8);
          t7 = new C.SubListIterable(t8, 0, 4, t5._eval$1("SubListIterable<ListBase.E>"));
          t7.SubListIterable$3(t8, 0, 4, t5._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t9, t7);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setFloat32(0, t10, true);
          t10 = buffer._vector_graphics_codec$_buffer;
          t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t5 = C.instanceType(t7);
          t8 = new C.SubListIterable(t7, 0, 4, t5._eval$1("SubListIterable<ListBase.E>"));
          t8.SubListIterable$3(t7, 0, 4, t5._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t10, t8);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint16(0, t11, true);
          t8 = buffer._vector_graphics_codec$_buffer;
          t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t5 = C.instanceType(t10);
          t7 = new C.SubListIterable(t10, 0, 2, t5._eval$1("SubListIterable<ListBase.E>"));
          t7.SubListIterable$3(t10, 0, 2, t5._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t8, t7);
          t5 = shaderId == null ? _65535 : shaderId;
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint16(0, t5, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t8 = C.instanceType(t7);
          t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
          t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t9);
          strokeIds.$indexSet(0, nextPaintId, t11);
        }
        ++nextPaintId;
      }
      pathIds = C.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      for (t2 = instructions.paths, t4 = t2.length, t5 = type$.CubicToCommand, t6 = type$.JSArray_double, t7 = type$.LineToCommand, t8 = type$.MoveToCommand, nextPathId = 0, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        path = t2[_i];
        controlPointTypes = C._setArrayType([], t1);
        controlPoints = C._setArrayType([], t6);
        for (t9 = path._path$_commands, t10 = t9.length, _i0 = 0; _i0 < t9.length; t9.length === t10 || (0, C.throwConcurrentModificationError)(t9), ++_i0) {
          command = t9[_i0];
          switch (command.type.index) {
            case 0:
              t8._as(command);
              D.JSArray_methods.add$1(controlPointTypes, 0);
              D.JSArray_methods.addAll$1(controlPoints, C._setArrayType([command.x, command.y], t6));
              break;
            case 1:
              t7._as(command);
              D.JSArray_methods.add$1(controlPointTypes, 1);
              D.JSArray_methods.addAll$1(controlPoints, C._setArrayType([command.x, command.y], t6));
              break;
            case 2:
              t5._as(command);
              D.JSArray_methods.add$1(controlPointTypes, 2);
              D.JSArray_methods.addAll$1(controlPoints, C._setArrayType([command.x1, command.y1, command.x2, command.y2, command.x3, command.y3], t6));
              break;
            case 3:
              D.JSArray_methods.add$1(controlPointTypes, 3);
              break;
          }
        }
        t9 = new Uint8Array(C._ensureNativeList(controlPointTypes));
        t10 = new Float32Array(C._ensureNativeList(controlPoints));
        buffer._checkPhase$1(B._CurrentSection_4);
        C.assertHelper(buffer._nextPathId < 65535);
        t11 = buffer._nextPathId++;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 27);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, path.fillType.index);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint16(0, t11, true);
        t12 = buffer._vector_graphics_codec$_buffer;
        t13 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t14 = C.instanceType(t13);
        t15 = new C.SubListIterable(t13, 0, 2, t14._eval$1("SubListIterable<ListBase.E>"));
        t15.SubListIterable$3(t13, 0, 2, t14._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t12, t15);
        t15 = t9.length;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint32(0, t15, true);
        t12 = buffer._vector_graphics_codec$_buffer;
        t14 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t13 = C.instanceType(t14);
        t16 = new C.SubListIterable(t14, 0, 4, t13._eval$1("SubListIterable<ListBase.E>"));
        t16.SubListIterable$3(t14, 0, 4, t13._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t12, t16);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(t9), t9.byteOffset, t15));
        t15 = t10.length;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint32(0, t15, true);
        t9 = buffer._vector_graphics_codec$_buffer;
        t16 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t12 = C.instanceType(t16);
        t13 = new C.SubListIterable(t16, 0, 4, t12._eval$1("SubListIterable<ListBase.E>"));
        t13.SubListIterable$3(t16, 0, 4, t12._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t9, t13);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        buffer._vector_graphics_codec$_alignTo$1(4);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat32List_methods.get$buffer(t10), t10.byteOffset, 4 * t15));
        pathIds.$indexSet(0, nextPathId, t11);
        ++nextPathId;
      }
      for (t2 = instructions.textPositions, t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        position = t2[_i];
        t5 = position.x;
        t6 = position.y;
        t7 = position.dx;
        t8 = position.dy;
        t9 = position.transform;
        t9 = t9 == null ? _null : t9.toMatrix4$0();
        buffer._checkPhase$1(B._CurrentSection_5);
        t10 = buffer._nextTextPositionId++;
        C.assertHelper(t10 < 65535);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 50);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint16(0, t10, true);
        t10 = buffer._vector_graphics_codec$_buffer;
        t11 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t12 = C.instanceType(t11);
        t13 = new C.SubListIterable(t11, 0, 2, t12._eval$1("SubListIterable<ListBase.E>"));
        t13.SubListIterable$3(t11, 0, 2, t12._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t10, t13);
        if (t5 == null)
          t5 = 0 / 0;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setFloat32(0, t5, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t11 = C.instanceType(t10);
        t12 = new C.SubListIterable(t10, 0, 4, t11._eval$1("SubListIterable<ListBase.E>"));
        t12.SubListIterable$3(t10, 0, 4, t11._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t12);
        t5 = t6 == null ? 0 / 0 : t6;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setFloat32(0, t5, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t10 = C.instanceType(t6);
        t11 = new C.SubListIterable(t6, 0, 4, t10._eval$1("SubListIterable<ListBase.E>"));
        t11.SubListIterable$3(t6, 0, 4, t10._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t11);
        t5 = t7 == null ? 0 / 0 : t7;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setFloat32(0, t5, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t7 = C.instanceType(t6);
        t10 = new C.SubListIterable(t6, 0, 4, t7._eval$1("SubListIterable<ListBase.E>"));
        t10.SubListIterable$3(t6, 0, 4, t7._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t10);
        t5 = t8 == null ? 0 / 0 : t8;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setFloat32(0, t5, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t7 = C.instanceType(t6);
        t8 = new C.SubListIterable(t6, 0, 4, t7._eval$1("SubListIterable<ListBase.E>"));
        t8.SubListIterable$3(t6, 0, 4, t7._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t8);
        t5 = position.reset ? 1 : 0;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t5);
        t5 = !buffer._vector_graphics_codec$_isDone;
        if (t9 != null) {
          t6 = t9.length;
          C.assertHelper(t5);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t6);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          buffer._vector_graphics_codec$_alignTo$1(8);
          D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(t9), t9.byteOffset, 8 * t6));
        } else {
          C.assertHelper(t5);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 0);
        }
      }
      for (t2 = instructions.text, t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        textConfig = t2[_i];
        t5 = textConfig.fontFamily;
        buffer._checkPhase$1(B._CurrentSection_6);
        t6 = buffer._nextTextId++;
        C.assertHelper(t6 < 65535);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 45);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint16(0, t6, true);
        t6 = buffer._vector_graphics_codec$_buffer;
        t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t8 = C.instanceType(t7);
        t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
        t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t6, t9);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setFloat32(0, textConfig.xAnchorMultiplier, true);
        t9 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t7 = C.instanceType(t6);
        t8 = new C.SubListIterable(t6, 0, 4, t7._eval$1("SubListIterable<ListBase.E>"));
        t8.SubListIterable$3(t6, 0, 4, t7._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t9, t8);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setFloat32(0, textConfig.fontSize, true);
        t8 = buffer._vector_graphics_codec$_buffer;
        t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t6 = C.instanceType(t9);
        t7 = new C.SubListIterable(t9, 0, 4, t6._eval$1("SubListIterable<ListBase.E>"));
        t7.SubListIterable$3(t9, 0, 4, t6._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t8, t7);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, textConfig.fontWeight.index);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, textConfig.decoration.mask);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, textConfig.decorationStyle.index);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint32(0, textConfig.decorationColor.value, true);
        t7 = buffer._vector_graphics_codec$_buffer;
        t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t6 = C.instanceType(t8);
        t9 = new C.SubListIterable(t8, 0, 4, t6._eval$1("SubListIterable<ListBase.E>"));
        t9.SubListIterable$3(t8, 0, 4, t6._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t7, t9);
        if (t5 != null) {
          encoded = D.C_Utf8Encoder.convert$1(t5);
          t5 = encoded.length;
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint16(0, t5, true);
          t6 = buffer._vector_graphics_codec$_buffer;
          t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t8 = C.instanceType(t7);
          t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
          t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t6, t9);
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(encoded), encoded.byteOffset, t5));
        } else {
          C.assertHelper(!buffer._vector_graphics_codec$_isDone);
          t3.setUint16(0, 0, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t7 = C.instanceType(t6);
          t8 = new C.SubListIterable(t6, 0, 2, t7._eval$1("SubListIterable<ListBase.E>"));
          t8.SubListIterable$3(t6, 0, 2, t7._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t8);
        }
        encoded = D.C_Utf8Encoder.convert$1(textConfig.text);
        t5 = encoded.length;
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        t3.setUint16(0, t5, true);
        t6 = buffer._vector_graphics_codec$_buffer;
        t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t8 = C.instanceType(t7);
        t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
        t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t6, t9);
        C.assertHelper(!buffer._vector_graphics_codec$_isDone);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(encoded), encoded.byteOffset, t5));
      }
      for (t2 = instructions.commands, t4 = t2.length, t5 = instructions.drawImages, t6 = instructions.patternData, t7 = instructions.vertices, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        command = t2[_i];
        switch (command.type.index) {
          case 0:
            t8 = command.paintId;
            if (fillIds.containsKey$1(0, t8)) {
              t9 = pathIds.$index(0, command.objectId);
              t9.toString;
              t10 = fillIds.$index(0, t8);
              t10.toString;
              B.C_VectorGraphicsCodec.writeDrawPath$4(buffer, t9, t10, command.patternId);
            }
            if (strokeIds.containsKey$1(0, t8)) {
              t9 = pathIds.$index(0, command.objectId);
              t9.toString;
              t8 = strokeIds.$index(0, t8);
              t8.toString;
              B.C_VectorGraphicsCodec.writeDrawPath$4(buffer, t9, t8, command.patternId);
            }
            break;
          case 1:
            t8 = command.objectId;
            t8.toString;
            if (!(t8 >= 0 && t8 < t7.length))
              return C.ioore(t7, t8);
            vertices = t7[t8];
            t8 = fillIds.$index(0, command.paintId);
            t8.toString;
            t9 = vertices.get$vertices();
            t10 = vertices.get$indices();
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 31);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t11 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t12 = C.instanceType(t11);
            t13 = new C.SubListIterable(t11, 0, 2, t12._eval$1("SubListIterable<ListBase.E>"));
            t13.SubListIterable$3(t11, 0, 2, t12._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t13);
            t13 = t9.get$length(t9);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t13, true);
            t13 = buffer._vector_graphics_codec$_buffer;
            t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t11 = C.instanceType(t8);
            t12 = new C.SubListIterable(t8, 0, 2, t11._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t8, 0, 2, t11._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t13, t12);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            buffer._vector_graphics_codec$_alignTo$1(4);
            D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, t9.get$buffer(t9).asUint8List$2(0, t9.byteOffset, 4 * t9.get$length(t9)));
            t8 = t10.get$length(t10);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t11 = C.instanceType(t9);
            t12 = new C.SubListIterable(t9, 0, 2, t11._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t9, 0, 2, t11._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t12);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            buffer._vector_graphics_codec$_alignTo$1(2);
            D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, t10.get$buffer(t10).asUint8List$2(0, t10.byteOffset, 2 * t10.get$length(t10)));
            break;
          case 2:
            t8 = fillIds.$index(0, command.paintId);
            t8.toString;
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 37);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 3:
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 38);
            break;
          case 4:
            t8 = pathIds.$index(0, command.objectId);
            t8.toString;
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 42);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 5:
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 43);
            break;
          case 8:
            t8 = command.patternDataId;
            t8.toString;
            if (!(t8 >= 0 && t8 < t6.length))
              return C.ioore(t6, t8);
            patternData = t6[t8];
            t8 = patternData.transform.toMatrix4$0();
            buffer._checkPhase$1(B._CurrentSection_7);
            C.assertHelper(buffer._nextPatternId < 65535);
            t9 = buffer._nextPatternId++;
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 49);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t9, true);
            t9 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t11 = C.instanceType(t10);
            t12 = new C.SubListIterable(t10, 0, 2, t11._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t10, 0, 2, t11._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t9, t12);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, patternData.x, true);
            t12 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 4, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 4, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t12, t11);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, patternData.y, true);
            t11 = buffer._vector_graphics_codec$_buffer;
            t12 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t12);
            t10 = new C.SubListIterable(t12, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t10.SubListIterable$3(t12, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t11, t10);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, patternData.width, true);
            t10 = buffer._vector_graphics_codec$_buffer;
            t11 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t11);
            t12 = new C.SubListIterable(t11, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t11, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t10, t12);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, patternData.height, true);
            t12 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t10);
            t11 = new C.SubListIterable(t10, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t10, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t12, t11);
            t9 = t8.length;
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t9);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            buffer._vector_graphics_codec$_alignTo$1(8);
            D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(t8), t8.byteOffset, 8 * t9));
            break;
          case 9:
            t8 = command.objectId;
            t8.toString;
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 51);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 6:
            t8 = command.objectId;
            t8.toString;
            t9 = command.paintId;
            t10 = fillIds.$index(0, t9);
            t9 = strokeIds.$index(0, t9);
            t11 = command.patternId;
            t12 = t10 == null;
            C.assertHelper(!t12 || t9 != null);
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 44);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t13 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t14 = C.instanceType(t13);
            t15 = new C.SubListIterable(t13, 0, 2, t14._eval$1("SubListIterable<ListBase.E>"));
            t15.SubListIterable$3(t13, 0, 2, t14._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t15);
            t8 = t12 ? _65535 : t10;
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t12 = C.instanceType(t10);
            t13 = new C.SubListIterable(t10, 0, 2, t12._eval$1("SubListIterable<ListBase.E>"));
            t13.SubListIterable$3(t10, 0, 2, t12._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t13);
            t8 = t9 == null ? _65535 : t9;
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t12 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t12);
            t8 = t11 == null ? _65535 : t11;
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 7:
            t8 = command.objectId;
            t8.toString;
            if (!(t8 >= 0 && t8 < t5.length))
              return C.ioore(t5, t8);
            drawImageData = t5[t8];
            t8 = drawImageData.rect;
            t9 = t8.left;
            t10 = t8.top;
            t11 = t8.right - t9;
            t8 = t8.bottom - t10;
            t12 = drawImageData.transform;
            t12 = t12 == null ? _null : t12.toMatrix4$0();
            buffer._checkPhase$1(B._CurrentSection_7);
            buffer._addCommandsTag$0();
            C.assertHelper(t11 > 0 && t8 > 0);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 47);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setUint16(0, drawImageData.id, true);
            t13 = buffer._vector_graphics_codec$_buffer;
            t14 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t15 = C.instanceType(t14);
            t16 = new C.SubListIterable(t14, 0, 2, t15._eval$1("SubListIterable<ListBase.E>"));
            t16.SubListIterable$3(t14, 0, 2, t15._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t13, t16);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, t9, true);
            t9 = buffer._vector_graphics_codec$_buffer;
            t16 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t13 = C.instanceType(t16);
            t14 = new C.SubListIterable(t16, 0, 4, t13._eval$1("SubListIterable<ListBase.E>"));
            t14.SubListIterable$3(t16, 0, 4, t13._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t9, t14);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, t10, true);
            t10 = buffer._vector_graphics_codec$_buffer;
            t14 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t14);
            t13 = new C.SubListIterable(t14, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t13.SubListIterable$3(t14, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t10, t13);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, t11, true);
            t11 = buffer._vector_graphics_codec$_buffer;
            t13 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t13);
            t10 = new C.SubListIterable(t13, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t10.SubListIterable$3(t13, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t11, t10);
            C.assertHelper(!buffer._vector_graphics_codec$_isDone);
            t3.setFloat32(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t10);
            t11 = new C.SubListIterable(t10, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t10, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            t8 = !buffer._vector_graphics_codec$_isDone;
            if (t12 != null) {
              t9 = t12.length;
              C.assertHelper(t8);
              D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t9);
              C.assertHelper(!buffer._vector_graphics_codec$_isDone);
              buffer._vector_graphics_codec$_alignTo$1(8);
              D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(t12), t12.byteOffset, 8 * t9));
            } else {
              C.assertHelper(t8);
              D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 0);
            }
            break;
        }
      }
      if (buffer._vector_graphics_codec$_isDone)
        C.throwExpression(C.StateError$("done() must not be called more than once on the same VectorGraphicsBuffer."));
      result = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(new Uint8Array(C._ensureNativeList(buffer._vector_graphics_codec$_buffer))));
      buffer.set$_vector_graphics_codec$_buffer(C._setArrayType([], t1));
      buffer._vector_graphics_codec$_isDone = true;
      return J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(result));
    }
  },
  B, E, H;
  J = holdersList[1];
  C = holdersList[0];
  D = holdersList[2];
  I = holdersList[12];
  G = holdersList[6];
  F = holdersList[11];
  A = hunkHelpers.updateHolder(holdersList[4], A);
  B = holdersList[9];
  E = holdersList[7];
  H = holdersList[10];
  A._AsyncStarStreamController.prototype = {
    _AsyncStarStreamController$1(body, $T) {
      var _this = this,
        t1 = new A._AsyncStarStreamController__resumeBody(body);
      _this.set$___AsyncStarStreamController_controller_A(_this.$ti._eval$1("StreamController<1>")._as(C.StreamController_StreamController(new A._AsyncStarStreamController_closure(_this, body), new A._AsyncStarStreamController_closure0(t1), new A._AsyncStarStreamController_closure1(_this, t1), false, $T)));
    },
    set$___AsyncStarStreamController_controller_A(___AsyncStarStreamController_controller_A) {
      this.___AsyncStarStreamController_controller_A = this.$ti._eval$1("StreamController<1>")._as(___AsyncStarStreamController_controller_A);
    }
  };
  A._IterationMarker.prototype = {
    toString$0(_) {
      return "IterationMarker(" + this.state + ", " + C.S(this.value) + ")";
    }
  };
  A.OSError.prototype = {
    toString$0(_) {
      var t1 = "" + "OS Error",
        t2 = this.message;
      if (t2.length !== 0) {
        t1 = t1 + ": " + t2;
        t2 = this.errorCode;
        if (t2 !== -1)
          t1 = t1 + ", errno = " + D.JSInt_methods.toString$0(t2);
      } else {
        t2 = this.errorCode;
        if (t2 !== -1)
          t1 = t1 + ": errno = " + D.JSInt_methods.toString$0(t2);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isException: 1
  };
  A.FileSystemException.prototype = {
    _toStringHelper$1(className) {
      var _this = this,
        t1 = "" + className,
        t2 = _this.message;
      if (t2.length !== 0) {
        t1 = t1 + (": " + t2) + (", path = '" + _this.path + "'");
        t2 = _this.osError;
        if (t2 != null)
          t1 += " (" + t2.toString$0(0) + ")";
      } else {
        t2 = _this.osError;
        if (t2 != null)
          t1 = t1 + (": " + t2.toString$0(0)) + (", path = '" + _this.path + "'");
        else
          t1 += ": " + _this.path;
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0(_) {
      return this._toStringHelper$1("FileSystemException");
    },
    $isException: 1
  };
  A.PathAccessException.prototype = {
    toString$0(_) {
      return this._toStringHelper$1("PathAccessException");
    }
  };
  A.PathExistsException.prototype = {
    toString$0(_) {
      return this._toStringHelper$1("PathExistsException");
    }
  };
  A.PathNotFoundException.prototype = {
    toString$0(_) {
      return this._toStringHelper$1("PathNotFoundException");
    }
  };
  A._File.prototype = {
    length$0(_) {
      return A._File__dispatchWithNamespace(12, [null, this._rawPath]).then$1$1(0, new A._File_length_closure(this), type$.int);
    },
    toString$0(_) {
      return "File: '" + this._io$_path + "'";
    },
    $isFile0: 1
  };
  A.FileSystemEntity.prototype = {};
  A.ImageDescriptor.prototype = {
    instantiateCodec$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$self = this, t1;
      var $async$instantiateCodec$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._ui$_data;
              if (t1 == null)
                throw C.wrapException(C.StateError$("Object is disposed"));
              t1 = $.$get$_renderer().instantiateImageCodec$4$allowUpscaling$targetHeight$targetWidth(t1, false, null, null);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$instantiateCodec$0, $async$completer);
    }
  };
  A.ChatCustomMessage.prototype = {
    createState$0() {
      return new A.ChatCustomMessageState(D._StateLifecycle_0);
    }
  };
  A.ChatCustomMessageState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.refresh$0(0);
    },
    refresh$0(_) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, initializer, exception, metadata0, metadata, $async$exception;
      var $async$refresh$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              metadata0 = $async$self._widget.message.get$metadata(0);
              metadata = metadata0 == null ? C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic) : metadata0;
              if (!J.containsKey$1$x(metadata, "event")) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$handler = 4;
              initializer = $.$get$EventRegistry_initializers().$index(0, J.$index$asx(metadata, "event"));
              if (initializer == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 7;
              return C._asyncAwait(initializer.call$2($async$self.get$context(0), metadata), $async$refresh$0);
            case 7:
              // returning from await.
              $async$self.__ChatCustomMessageState_data_A = $async$result;
              $async$self.setState$1(new A.ChatCustomMessageState_refresh_closure($async$self));
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$refresh$0, $async$completer);
    },
    build$1(context) {
      var metadata, builder, chatTheme, userId, t1, isSentByMe, t2, _this = this;
      if (!_this._custom_message$_initialized)
        return D.SizedBox_null_null_null_null;
      metadata = _this._widget.message.get$metadata(0);
      if (metadata == null)
        metadata = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      builder = $.$get$EventRegistry_builders().$index(0, J.$index$asx(metadata, "event"));
      chatTheme = A.Provider_of(context, false, type$.ChatTheme);
      userId = A.Provider_of(context, false, type$.String);
      t1 = _this._widget;
      isSentByMe = userId === t1.message.authorId;
      if (builder == null)
        return A.buildUnsupportedCard(context, isSentByMe, chatTheme, "\u6682\u4e0d\u652f\u6301\u7684\u6d88\u606f\u7c7b\u578b");
      t2 = _this.__ChatCustomMessageState_data_A;
      t2 === $ && C.throwLateFieldNI("data");
      return builder.call$6(context, t2, t1, _this.get$refresh(_this), isSentByMe, chatTheme);
    }
  };
  A.QuestionnairePage.prototype = {
    createState$0() {
      var t1 = type$.String,
        t2 = type$.dynamic;
      return new A._QuestionnairePageState(new A.FormController(C.LinkedHashMap_LinkedHashMap$_empty(t1, t2), $.$get$ChangeNotifier__emptyListeners()), C.LinkedHashMap_LinkedHashMap$_empty(t1, t2), D._StateLifecycle_0);
    }
  };
  A._QuestionnairePageState.prototype = {
    initState$0() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10,
        _s31_ = "package:flutter/foundation.dart";
      this.super$State$initState();
      for (t1 = J.get$iterator$ax(this._widget.questionnaire.questions), t2 = this._questionnaire_page$_controller, t3 = type$.List_dynamic, t4 = type$.JSArray_String, t5 = type$.Iterable_dynamic, t6 = type$.String; t1.moveNext$0();) {
        t7 = t1.get$current(t1);
        t8 = t7.type;
        t9 = t7.id;
        switch (t8) {
          case "text":
            t7 = t7.answer;
            t7 = C._asStringQ(t7 == null ? "" : t7);
            t7 = new C.TextEditingController(new C.TextEditingValue(t7, D.TextSelection_kab, D.TextRange_m1_m1), $.$get$ChangeNotifier__emptyListeners());
            $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_ChangeNotifier_ozy.toString$0(0), _s31_, t7);
            t7.ChangeNotifier__creationDispatched = true;
            t2.$indexSet(0, t9, t7);
            break;
          case "single":
            t7 = t7.answer;
            t2.$indexSet(0, t9, t7 == null ? "" : t7);
            break;
          case "multi":
            t7 = t7.answer;
            t2.$indexSet(0, t9, t7 != null ? C.List_List$from(t5._as(J.map$1$ax(t7, new A._QuestionnairePageState_initState_closure())), true, t6) : C._setArrayType([], t4));
            break;
          case "number":
            t8 = t7.answer;
            if (t8 == null) {
              t7 = t7.options;
              t8 = J.getInterceptor$asx(t7);
              t7 = t8.get$isNotEmpty(t7) ? C.double_parse(t8.get$first(t7)) : 0;
              t7 = new A.SliderController(t7, $.$get$ChangeNotifier__emptyListeners());
              $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_ChangeNotifier_ozy.toString$0(0), _s31_, t7);
              t7.ChangeNotifier__creationDispatched = true;
              t2.$indexSet(0, t9, t7);
            } else {
              t10 = J.getInterceptor$(t8);
              t7 = t3._is(t8) ? new A.RangeValues(C._asDouble(t10.$index(t8, 0)), C._asDouble(J.$index$asx(t7.answer, 1))) : C.double_parse(t10.toString$0(t8));
              t7 = new A.SliderController(t7, $.$get$ChangeNotifier__emptyListeners());
              $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_ChangeNotifier_ozy.toString$0(0), _s31_, t7);
              t7.ChangeNotifier__creationDispatched = true;
            }
            t2.$indexSet(0, t9, t7);
            break;
          default:
            t2.$indexSet(0, t9, "");
            break;
        }
      }
    },
    _onSubmit$2(data, isValid) {
      return this._onSubmit$body$_QuestionnairePageState(type$.Map_String_dynamic._as(data), isValid);
    },
    _onSubmit$body$_QuestionnairePageState(data, isValid) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, exception;
      var $async$_onSubmit$2 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              try {
                C.GetNavigation_back($.$get$Get(), C.CustomMessage$(null, "user", null, null, null, null, new C.Uuid().v4$0(), C.LinkedHashMap_LinkedHashMap$_literal(["event", "questionnaire", "data", $async$self._widget.questionnaire.toJson$0()], type$.String, type$.dynamic), null, null, null, null, null, null, null), type$.CustomMessage);
              } catch (exception) {
                C.showError("\u63d0\u4ea4\u5931\u8d25\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5");
              }
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$_onSubmit$2, $async$completer);
    },
    _onReset$0() {
      var t2, t3, t4, t5, t6, _this = this,
        t1 = _this._fC;
      t1.set$formData(0, type$.Map_String_dynamic._as(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic)));
      t1.eventType = "reset";
      t1.notifyListeners$0();
      for (t1 = J.get$iterator$ax(_this._widget.questionnaire.questions), t2 = _this._questionnaire_page$_controller, t3 = type$.JSArray_String; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        t5 = t4.type;
        t6 = t4.id;
        switch (t5) {
          case "text":
            t4 = t2.$index(0, t6);
            if (t4 != null)
              J.clear$0$ax(t4);
            break;
          case "single":
            t2.$indexSet(0, t6, "");
            break;
          case "multi":
            t2.$indexSet(0, t6, C._setArrayType([], t3));
            break;
          case "number":
            t5 = t2.$index(0, t6);
            if (t5 != null) {
              t4 = t4.options;
              t6 = J.getInterceptor$asx(t4);
              J.clear$1$ax(t5, t6.get$isNotEmpty(t4) ? C.double_parse(t6.get$first(t4)) : 0);
            }
            break;
          default:
            t2.$indexSet(0, t6, "");
            break;
        }
      }
      _this.setState$1(new A._QuestionnairePageState__onReset_closure());
    },
    _onChanged$2(qid, value) {
      this._fC.formData.$indexSet(0, qid, value);
      J.firstWhere$1$ax(this._widget.questionnaire.questions, new A._QuestionnairePageState__onChanged_closure(qid)).answer = value;
    },
    build$1(context) {
      var t2, t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = C.AppBar$(_null, _null, _null, C.Text$(_this._widget.questionnaire.title, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      C.debugCheckHasMediaQuery(context);
      t2 = type$.MediaQuery;
      t3 = C.InheritedModel_inheritFrom(context, _null, t2).data;
      t4 = _this._fC;
      t5 = t4.formData;
      t6 = J.map$1$1$ax(_this._widget.questionnaire.questions, new A._QuestionnairePageState_build_closure(_this, context), type$.TDFormItem);
      t6 = C.List_List$of(t6, true, t6.$ti._eval$1("ListIterable.E"));
      t7 = type$.JSArray_Widget;
      t7 = C._setArrayType([G.StyledWidget_toContainer(C.StyledList_toRow(C._setArrayType([C.Expanded$(C.TDButton$(_null, false, _null, _this.get$_onReset(), D.TDButtonSize_0, _null, "\u91cd\u7f6e", _null, D.TDButtonTheme_3, D.TDButtonType_0, _null), 1, _null), B.SizedBox_20_null_null_null, C.Expanded$(C.TDButton$(_null, false, _null, t4.get$submit(t4), D.TDButtonSize_0, _null, "\u63d0\u4ea4", _null, D.TDButtonTheme_1, D.TDButtonType_0, _null), 1, _null)], t7), D.CrossAxisAlignment_2, D.MainAxisAlignment_0, D.MainAxisSize_1, _null), _null, D.EdgeInsets_16_0_16_0)], t7);
      C.debugCheckHasMediaQuery(context);
      return C.Scaffold$(t1, _null, C.SingleChildScrollView$(A.StyledWidget_toMaterial(new C.SizedBox(Math.min(400, C.InheritedModel_inheritFrom(context, _null, t2).data.size._dx * 0.9), _null, new A.TDForm(t6, t5, false, t3.size._dx * 0.9, B.Map_empty8, _this.get$_onSubmit(), t7, t4, _null), _null)), _null, D.DragStartBehavior_1, D.EdgeInsets_16_16_16_16, _null, D.Axis_1), _null);
    },
    _checkbox$3(context, options, qid) {
      return new C.LayoutBuilder(new A._QuestionnairePageState__checkbox_closure(this, qid, options), null);
    },
    _radio$3(context, options, qid) {
      return new C.LayoutBuilder(new A._QuestionnairePageState__radio_closure(this, qid, options), null);
    },
    _slider$3(context, options, qid) {
      return new A.Slider(type$.List_double._as(options), type$.SliderController._as(this._questionnaire_page$_controller.$index(0, qid)), new A._QuestionnairePageState__slider_closure(this, qid), null);
    },
    _questionnaire_page$_input$3(context, hint, qid) {
      var _null = null,
        t1 = type$.nullable_TextEditingController._as(this._questionnaire_page$_controller.$index(0, qid)),
        t2 = C.InputDecoration$(_null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, hint, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null),
        t3 = new A.TDInputSpacer();
      t3.iconLabelSpace = 4;
      t3.additionInfoSpace = t3.rightSpace = t3.inputRightSpace = t3.labelInputSpace = 16;
      return new A.TDInput(new A._QuestionnairePageState__input_closure(this, qid), t1, t2, t3, _null);
    }
  };
  A.SliderController.prototype = {
    clear$1(_, min) {
      this.set$value(0, min);
      return min;
    }
  };
  A.Slider.prototype = {
    createState$0() {
      return new A._SliderState(D._StateLifecycle_0);
    },
    onChanged$1(arg0) {
      return this.onChanged.call$1(arg0);
    }
  };
  A._SliderState.prototype = {
    toggleRange$2(min, max) {
      return this.setState$1(new A._SliderState_toggleRange_closure(this, min, max));
    },
    build$1(context) {
      var min, max, divisions, sTD, _null = null,
        t1 = this._widget.options,
        t2 = t1.length;
      if (0 >= t2)
        return C.ioore(t1, 0);
      min = t1[0];
      if (1 >= t2)
        return C.ioore(t1, 1);
      max = t1[1];
      if (t2 === 3) {
        if (2 >= t2)
          return C.ioore(t1, 2);
        divisions = D.JSNumber_methods.round$0(t1[2]);
      } else
        divisions = _null;
      sTD = divisions == null ? A.TDSliderThemeData$(_null, max, min, new A._SliderState_build_closure(), false, true) : A.TDSliderThemeData$(divisions, max, min, new A._SliderState_build_closure0(), true, false);
      return new C.ValueListenableBuilder(this._widget.controller, new A._SliderState_build_closure1(this, min, max, sTD), _null, _null, type$.ValueListenableBuilder_dynamic);
    }
  };
  A.GetChatController.prototype = {
    insertMessage$1(message) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$insertMessage$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
              if (D.JSArray_methods.any$1(t1, new A.GetChatController_insertMessage_closure(message))) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = !(message instanceof A.TextStreamMessage) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return C._asyncAwait($async$self._get_chat_controller$_storage.insert$2(0, $async$self.cSM.currentSessionId.get$value(0), message), $async$insertMessage$1);
            case 5:
              // returning from await.
            case 4:
              // join
              D.JSArray_methods.add$1(t1, message);
              $async$self._operationController.add$1(0, new A.ChatOperation(B.ChatOperationType_0, null, message, t1.length - 1, null, true));
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$insertMessage$1, $async$completer);
    },
    removeMessage$1(message) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, t1, index;
      var $async$removeMessage$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
              index = D.JSArray_methods.indexWhere$1(t1, new A.GetChatController_removeMessage_closure(message));
              if (index === -1) {
                // goto return
                $async$goto = 1;
                break;
              }
              D.JSArray_methods.removeAt$1(t1, index);
              $async$self._operationController.add$1(0, new A.ChatOperation(B.ChatOperationType_3, null, message, index, null, true));
              t1 = $async$self.cSM;
              t2 = t1.currentSessionId;
              t1.removeMessage$3(t2.get$value(0), message.get$id(message), $async$self.uSM.get$currentToken());
              $async$self._get_chat_controller$_storage.delete$2(0, t2.get$value(0), message.get$id(message));
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$removeMessage$1, $async$completer);
    },
    updateMessage$2(oldMessage, newMessage) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, actualOld, t1, index;
      var $async$updateMessage$2 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
              index = D.JSArray_methods.indexWhere$1(t1, new A.GetChatController_updateMessage_closure(oldMessage));
              if (index !== -1) {
                if (!(index >= 0 && index < t1.length)) {
                  $async$returnValue = C.ioore(t1, index);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                actualOld = t1[index];
                if (actualOld.$eq(0, newMessage)) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                D.JSArray_methods.$indexSet(t1, index, newMessage);
                $async$self._operationController.add$1(0, new A.ChatOperation(B.ChatOperationType_2, actualOld, newMessage, index, null, true));
              }
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$updateMessage$2, $async$completer);
    },
    setMessages$1(messages) {
      return this.setMessages$body$GetChatController(type$.List_Message._as(messages));
    },
    setMessages$body$GetChatController(messages) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, ids, uniqueMessages;
      var $async$setMessages$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              ids = C.LinkedHashSet_LinkedHashSet$_empty(type$.String);
              uniqueMessages = C._setArrayType([], type$.JSArray_Message);
              for (t1 = J.get$iterator$ax(messages); t1.moveNext$0();) {
                t2 = t1.get$current(t1);
                if (ids.add$1(0, t2.get$id(t2)))
                  D.JSArray_methods.add$1(uniqueMessages, t2);
              }
              t1 = $async$self._messages;
              D.JSArray_methods.clear$0(t1);
              D.JSArray_methods.addAll$1(t1, uniqueMessages);
              $async$self._operationController.add$1(0, new A.ChatOperation(B.ChatOperationType_4, null, null, null, t1, true));
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$setMessages$1, $async$completer);
    },
    handleSendMessage$3(msg, onUpdate, onError) {
      return this.handleSendMessage$body$GetChatController(msg, type$.void_Function._as(onUpdate), type$.dynamic_Function_String._as(onError));
    },
    handleSendMessage$body$GetChatController(msg, onUpdate, onError) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, customs, t1, path, stream, e, t2, t3, _i, path0, t4, t5, exception, _box_0, streamId, text, $async$exception, $async$temp1, $async$temp2;
      var $async$handleSendMessage$3 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              streamId = D.C_Uuid.v4$0();
              text = "";
              _box_0.accumulatedText = "";
              $async$goto = typeof msg == "string" ? 3 : 5;
              break;
            case 3:
              // then
              text = msg;
              t2 = D.JSString_methods.trim$0(msg).length === 0;
              if (t2 && $async$self._pendingImagePaths.length === 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = !t2 ? 6 : 7;
              break;
            case 6:
              // then
              t2 = D.C_Uuid.v4$0();
              $async$goto = 8;
              return C._asyncAwait($async$self.insertMessage$1(C.TextMessage$(null, "user", new C.DateTime(Date.now(), 0, false).toUtc$0(), null, null, null, null, t2, null, null, null, null, null, null, null, null, msg, null)), $async$handleSendMessage$3);
            case 8:
              // returning from await.
            case 7:
              // join
              t2 = $async$self._pendingImagePaths, t3 = t2.length, _i = 0;
            case 9:
              // for condition
              if (!(_i < t2.length)) {
                // goto after for
                $async$goto = 11;
                break;
              }
              path0 = t2[_i];
              t4 = D.C_Uuid.v4$0();
              t5 = new C.DateTime(Date.now(), 0, false).toUtc$0();
              $async$goto = 12;
              return C._asyncAwait($async$self.insertMessage$1(new C.ImageMessage(t4, "user", null, t5, null, null, null, null, null, null, null, null, null, null, path0, null, null, null, null, null, null, null, "image")), $async$handleSendMessage$3);
            case 12:
              // returning from await.
            case 10:
              // for update
              t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i;
              // goto for condition
              $async$goto = 9;
              break;
            case 11:
              // after for
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = msg instanceof C.CustomMessage ? 13 : 14;
              break;
            case 13:
              // then
              text = "<CUSTOM_MESSAGE>" + D.C_JsonCodec.encode$2$toEncodable(msg.get$metadata(0), null);
              $async$goto = 15;
              return C._asyncAwait($async$self.insertMessage$1(msg), $async$handleSendMessage$3);
            case 15:
              // returning from await.
            case 14:
              // join
            case 4:
              // join
              $async$goto = 16;
              return C._asyncAwait($async$self.insertMessage$1(A.TextStreamMessage$("server", new C.DateTime(Date.now(), 0, false).toUtc$0(), null, null, null, streamId, null, null, null, null, null, null, null, streamId, null)), $async$handleSendMessage$3);
            case 16:
              // returning from await.
              customs = C._setArrayType([], type$.JSArray_Map_String_dynamic);
              $async$handler = 18;
              t2 = text;
              t3 = $async$self.cSM.currentSessionId.get$value(0);
              t1 = C._setArrayType([], type$.JSArray_MultipartFile);
              t4 = $async$self._pendingImagePaths, t5 = t4.length, _i = 0;
            case 21:
              // for condition
              if (!(_i < t4.length)) {
                // goto after for
                $async$goto = 23;
                break;
              }
              path = t4[_i];
              $async$temp1 = J;
              $async$temp2 = t1;
              $async$goto = 24;
              return C._asyncAwait(A.MultipartFile_fromFile(path), $async$handleSendMessage$3);
            case 24:
              // returning from await.
              $async$temp1.add$1$ax($async$temp2, $async$result);
            case 22:
              // for update
              t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i;
              // goto for condition
              $async$goto = 21;
              break;
            case 23:
              // after for
              stream = $async$self.sendMessageStream$3$images$query$sessionId(t1, t2, t3);
              D.JSArray_methods.clear$0(t4);
              onUpdate.call$0();
              stream.listen$3$onDone$onError(new A.GetChatController_handleSendMessage_closure(_box_0, $async$self, streamId, customs), new A.GetChatController_handleSendMessage_closure0($async$self, streamId, customs), new A.GetChatController_handleSendMessage_closure1($async$self, streamId));
              $async$handler = 2;
              // goto after finally
              $async$goto = 20;
              break;
            case 18:
              // catch
              $async$handler = 17;
              $async$exception = $async$errorStack.pop();
              e = C.unwrapException($async$exception);
              onError.call$1(J.toString$0$(e));
              // goto after finally
              $async$goto = 20;
              break;
            case 17:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 20:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$handleSendMessage$3, $async$completer);
    },
    handleAttachmentTap$2(context, onUpdate) {
      return this.handleAttachmentTap$body$GetChatController(context, type$.void_Function._as(onUpdate));
    },
    handleAttachmentTap$body$GetChatController(context, onUpdate) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, $navigator, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t1;
      var $async$handleAttachmentTap$2 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.dynamic;
              C.debugCheckHasMediaQuery(context);
              C.debugCheckHasMaterialLocalizations(context);
              $navigator = C.Navigator_of(context, false);
              C.debugCheckHasMaterialLocalizations(context);
              t2 = C.Localizations_of(context, D.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
              t2.toString;
              t3 = C.InheritedTheme_capture(context, $navigator.get$context(0));
              t4 = t2.get$scrimLabel();
              t2 = t2.scrimOnTapHint$1(t2.get$bottomSheetLabel());
              t5 = C.Theme_of(context);
              t6 = C.ValueNotifier$(D.EdgeInsets_0_0_0_0, type$.EdgeInsets);
              t7 = C._setArrayType([], type$.JSArray_of_Future_bool_Function);
              t8 = $.Zone__current;
              t9 = type$._Future_dynamic;
              t10 = type$._AsyncCompleter_dynamic;
              t11 = C.ProxyAnimation$(D.C__AlwaysDismissedAnimation);
              t12 = C._setArrayType([], type$.JSArray_OverlayEntry);
              t13 = C.ValueNotifier$(null, type$.nullable_String);
              t14 = $.Zone__current;
              t2 = new A.ModalBottomSheetRoute(new A.GetChatController_handleAttachmentTap_closure($async$self, onUpdate), t3, false, 0.5625, null, null, null, D.Clip_1, null, t5.bottomSheetTheme.modalBarrierColor, true, true, null, null, null, false, null, t2, t6, t4, null, null, t7, C.LinkedHashSet_LinkedHashSet$_empty(type$.PopEntry_nullable_Object), new C.LabeledGlobalKey(null, type$.LabeledGlobalKey__ModalScopeState_dynamic), new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), new C.PageStorageBucket(), null, 0, new C._AsyncCompleter(new C._Future(t8, t9), t10), t11, t12, null, D.RouteSettings_null_null, t13, new C._AsyncCompleter(new C._Future(t14, t9), t10), new C._AsyncCompleter(new C._Future(t14, t9), t10), type$.ModalBottomSheetRoute_dynamic);
              t2.Route$2$requestFocus$settings(null, null, t1);
              $async$goto = 2;
              return C._asyncAwait($navigator.push$1$1(t2, t1), $async$handleAttachmentTap$2);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$handleAttachmentTap$2, $async$completer);
    },
    sendMessageStream$3$images$query$sessionId(images, query, sessionId) {
      return this.sendMessageStream$body$GetChatController(type$.List_MultipartFile._as(images), query, sessionId);
    },
    sendMessageStream$body$GetChatController(images, query, sessionId) {
      var $async$sendMessageStream$3$images$query$sessionId = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
              t1.$indexSet(0, "session_id", sessionId);
              t1.$indexSet(0, "query", query);
              t2 = C._setArrayType([], type$.JSArray_MapEntry_String_String);
              t3 = type$.JSArray_MapEntry_String_MultipartFile;
              t4 = C._setArrayType([], t3);
              formData = new A.FormData(t2, t4);
              formData._form_data$_init$2$fromMap$listFormat(t1, D.ListFormat_4);
              t3 = C._setArrayType([], t3);
              for (t1 = images.length, t2 = type$.MapEntry_String_MultipartFile, _i = 0; _i < images.length; images.length === t1 || (0, C.throwConcurrentModificationError)(images), ++_i)
                t3.push(new C.MapEntry("images", images[_i], t2));
              D.JSArray_methods.addAll$1(t4, t3);
              t1 = $async$self.__GetChatController_dio_F;
              t1 === $ && C.throwLateFieldNI("dio");
              $async$goto = 3;
              return A._asyncStarHelper(t1.post$1$3$data$options("/chat/send", formData, C.Options$(null, null, D.ResponseType_1), type$.ResponseBody), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 3:
              // returning from await.
              response = $async$result;
              if (response.statusCode !== 200 || response.data == null)
                throw C.wrapException(C.Exception_Exception("\u8bf7\u6c42\u5931\u8d25: " + C.S(response.statusCode)));
              t1 = response.data.stream;
              t2 = C._instanceType(t1)._eval$1("CastStream<Stream.T,List<int>>");
              t1 = new C._StreamIterator(C.checkNotNullable(t2._eval$1("StreamTransformer<Stream.T,String>")._as(D.Utf8Decoder_false).bind$1(new C.CastStream(t1, t2)), "stream", type$.Object), type$._StreamIterator_String);
              $async$handler = 4;
              t2 = type$.Map_String_dynamic;
            case 7:
              // for condition
              $async$temp1 = C;
              $async$goto = 9;
              return A._asyncStarHelper(t1.moveNext$0(), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 9:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto after for
                $async$goto = 8;
                break;
              }
              chunk = t1.get$current(0);
              t3 = J.split$1$s(chunk, "\n"), t4 = t3.length, _i = 0;
            case 10:
              // for condition
              if (!(_i < t3.length)) {
                // goto after for
                $async$goto = 12;
                break;
              }
              line = t3[_i];
              if (J.trim$0$s(line).length === 0) {
                // goto for update
                $async$goto = 11;
                break;
              }
              $async$handler = 14;
              $async$goto = 17;
              $async$nextWhenCanceled = [1, 5];
              return A._asyncStarHelper(A._IterationMarker_yieldSingle(t2._as(D.C_JsonCodec.decode$1(0, line))), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 17:
              // after yield
              $async$handler = 4;
              // goto after finally
              $async$goto = 16;
              break;
            case 14:
              // catch
              $async$handler = 13;
              $async$exception = $async$errorStack.pop();
              t2 = C.Exception_Exception("\u89e3\u6790\u5931\u8d25: " + C.S(line));
              throw C.wrapException(t2);
              // goto after finally
              $async$goto = 16;
              break;
            case 13:
              // uncaught
              // goto uncaught
              $async$goto = 4;
              break;
            case 16:
              // after finally
            case 11:
              // for update
              t3.length === t4 || (0, C.throwConcurrentModificationError)(t3), ++_i;
              // goto for condition
              $async$goto = 10;
              break;
            case 12:
              // after for
              // goto for condition
              $async$goto = 7;
              break;
            case 8:
              // after for
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              $async$goto = 18;
              return A._asyncStarHelper(t1.cancel$0(0), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 18:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return A._asyncStarHelper($async$errorStack.at(-1), 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = A._makeAsyncStarStreamController($async$sendMessageStream$3$images$query$sessionId, type$.Map_String_dynamic),
        $async$nextWhenCanceled, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, response, chunk, line, t2, t3, t4, formData, _i, exception, t1, $async$exception, $async$temp1;
      return A._streamOfController($async$controller);
    },
    removeMessagesAfter$1(messageId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, removedMessages, t2, t3, _i, t4, t5, msg, t6, t7, t1, index;
      var $async$removeMessagesAfter$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
              index = D.JSArray_methods.indexWhere$1(t1, new A.GetChatController_removeMessagesAfter_closure(messageId));
              if (index === -1) {
                // goto return
                $async$goto = 1;
                break;
              }
              removedMessages = D.JSArray_methods.sublist$1(t1, index);
              D.JSArray_methods.removeRange$2(t1, index, t1.length);
              for (t1 = removedMessages.length, t2 = $async$self._operationController, t3 = C._instanceType(t2)._precomputed1, _i = 0; t4 = removedMessages.length, _i < t4; removedMessages.length === t1 || (0, C.throwConcurrentModificationError)(removedMessages), ++_i) {
                t4 = t3._as(new A.ChatOperation(B.ChatOperationType_3, null, removedMessages[_i], index, null, true));
                if (!t2.get$_mayAddEvent())
                  C.throwExpression(t2._addEventError$0());
                t2._sendData$1(t4);
              }
              for (t1 = $async$self.uSM.session, t2 = $async$self.cSM, t3 = t2.currentSessionId, _i = 0; t5 = removedMessages.length, _i < t5; removedMessages.length === t4 || (0, C.throwConcurrentModificationError)(removedMessages), ++_i) {
                msg = removedMessages[_i];
                t5 = $.RxInterface_proxy;
                if (t5 != null)
                  t5.addListener$1(0, t3.NotifyManager_subject);
                t5 = t3.RxObjectMixin___RxObjectMixin__value_A;
                t5 === $ && C.throwLateFieldNI("_value");
                t6 = msg.get$id(msg);
                t7 = $.RxInterface_proxy;
                if (t7 != null)
                  t7.addListener$1(0, t1.NotifyManager_subject);
                t7 = t1.RxObjectMixin___RxObjectMixin__value_A;
                t7 === $ && C.throwLateFieldNI("_value");
                t7 = t7 == null ? null : t7.token;
                t2.removeMessage$3(t5, t6, t7 == null ? "" : t7);
              }
              t1 = $async$self._get_chat_controller$_storage, _i = 0;
            case 3:
              // for condition
              if (!(_i < removedMessages.length)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              msg = removedMessages[_i];
              t2 = $.RxInterface_proxy;
              if (t2 != null)
                t2.addListener$1(0, t3.NotifyManager_subject);
              t2 = t3.RxObjectMixin___RxObjectMixin__value_A;
              t2 === $ && C.throwLateFieldNI("_value");
              $async$goto = 6;
              return C._asyncAwait(t1.delete$2(0, t2, msg.get$id(msg)), $async$removeMessagesAfter$1);
            case 6:
              // returning from await.
            case 4:
              // for update
              removedMessages.length === t5 || (0, C.throwConcurrentModificationError)(removedMessages), ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$removeMessagesAfter$1, $async$completer);
    },
    resendMessage$3(failedMessage, onUpdate, onError) {
      return this.resendMessage$body$GetChatController(failedMessage, type$.void_Function._as(onUpdate), type$.dynamic_Function_String._as(onError));
    },
    resendMessage$body$GetChatController(failedMessage, onUpdate, onError) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$resendMessage$3 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return C._asyncAwait($async$self.removeMessagesAfter$1(failedMessage.get$id(failedMessage)), $async$resendMessage$3);
            case 2:
              // returning from await.
              $async$goto = failedMessage instanceof C.TextMessage ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return C._asyncAwait($async$self.handleSendMessage$3(failedMessage.text, onUpdate, onError), $async$resendMessage$3);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = failedMessage instanceof C.ImageMessage ? 7 : 9;
              break;
            case 7:
              // then
              onError.call$1("\u8fd8\u6ca1\u6709\u652f\u6301\u56fe\u7247\uff0c\u4e0d\u8981\u6363\u4e71");
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              $async$goto = failedMessage instanceof C.CustomMessage ? 10 : 11;
              break;
            case 10:
              // then
              $async$goto = 12;
              return C._asyncAwait($async$self.handleSendMessage$3(failedMessage, onUpdate, onError), $async$resendMessage$3);
            case 12:
              // returning from await.
            case 11:
              // join
            case 8:
              // join
            case 4:
              // join
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$resendMessage$3, $async$completer);
    },
    loadMessagesFromStorage$1(context) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, sessionId, serverMessages, newMessages, index, rmsg, msg, id, e, t1, t2, t3, t4, t5, t6, t7, t8, t9, exception, $async$exception;
      var $async$loadMessagesFromStorage$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                $async$handler = 4;
                t1 = $async$self.cSM;
                sessionId = t1.currentSessionId.get$value(0);
                t2 = $async$self._get_chat_controller$_storage;
                $async$goto = 8;
                return C._asyncAwait(t2.loadAll$1(sessionId), $async$loadMessagesFromStorage$1);
              case 8:
                // returning from await.
                $async$goto = 7;
                return C._asyncAwait($async$self.setMessages$1($async$result), $async$loadMessagesFromStorage$1);
              case 7:
                // returning from await.
                t3 = $async$self.uSM;
                $async$goto = 9;
                return C._asyncAwait(t1.sessionConversation$2(sessionId, t3.get$currentToken()), $async$loadMessagesFromStorage$1);
              case 9:
                // returning from await.
                serverMessages = $async$result;
                $async$goto = 10;
                return C._asyncAwait(t2.clear$1(0, sessionId), $async$loadMessagesFromStorage$1);
              case 10:
                // returning from await.
                $async$goto = J.get$isEmpty$asx(serverMessages) ? 11 : 12;
                break;
              case 11:
                // then
                $async$goto = 13;
                return C._asyncAwait($async$self.setMessages$1(C._setArrayType([], type$.JSArray_Message)), $async$loadMessagesFromStorage$1);
              case 13:
                // returning from await.
                t1 = $async$result;
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              case 12:
                // join
                newMessages = C._setArrayType([], type$.JSArray_Message);
                index = 0;
                t1 = J.get$iterator$ax(serverMessages), t4 = type$.nullable_Map_String_dynamic, t5 = $async$self.__GetChatController_dio_F, t3 = t3.session;
              case 15:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 16;
                  break;
                }
                rmsg = t1.get$current(t1);
                if (rmsg.text.length === 0) {
                  // goto for condition
                  $async$goto = 15;
                  break;
                }
                msg = null;
                id = rmsg.id + "_" + C.S(index);
                t6 = index;
                if (typeof t6 !== "number") {
                  $async$returnValue = t6.$add();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                index = t6 + 1;
                switch (rmsg.messageType) {
                  case "text":
                    t6 = rmsg.authorId;
                    t7 = rmsg.createdAt;
                    t8 = rmsg.text;
                    if (0 >= t8.length) {
                      $async$returnValue = C.ioore(t8, 0);
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    t8 = t8[0];
                    msg = new C.TextMessage(id, t6, null, t7, null, null, null, null, null, null, null, null, null, null, null, t8, null, "text");
                    break;
                  case "image":
                    t6 = rmsg.createdAt;
                    t5 === $ && C.throwLateFieldNI("dio");
                    t7 = t5.DioMixin___DioMixin_options_A;
                    t7 === $ && C.throwLateFieldNI("options");
                    t7 = t7.OptionsMixin___OptionsMixin__baseUrl_A;
                    t7 === $ && C.throwLateFieldNI("_baseUrl");
                    t8 = $.RxInterface_proxy;
                    if (t8 != null)
                      t8.addListener$1(0, t3.NotifyManager_subject);
                    t8 = t3.RxObjectMixin___RxObjectMixin__value_A;
                    t8 === $ && C.throwLateFieldNI("_value");
                    t8 = t8 == null ? null : t8.userId;
                    if (t8 == null)
                      t8 = "";
                    t9 = rmsg.text;
                    if (0 >= t9.length) {
                      $async$returnValue = C.ioore(t9, 0);
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    t9 = t9[0];
                    msg = new C.ImageMessage(id, "user", null, t6, null, null, null, null, null, null, null, null, null, null, t7 + "/chat/resources/image?filename=user_" + t8 + "/" + t9, null, null, null, null, null, null, null, "image");
                    break;
                  case "custom":
                  case "artifact":
                  case "func":
                  case "error":
                    t6 = rmsg.authorId;
                    t7 = rmsg.createdAt;
                    t8 = rmsg.text;
                    if (0 >= t8.length) {
                      $async$returnValue = C.ioore(t8, 0);
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    t8 = t4._as(D.C_JsonCodec.decode$1(0, t8[0]));
                    msg = new C.CustomMessage(id, t6, null, t7, null, null, null, null, null, null, null, null, t8, null, "custom");
                    break;
                  default:
                    // goto for condition
                    $async$goto = 15;
                    break $async$outer;
                }
                J.add$1$ax(newMessages, msg);
                $async$goto = 17;
                return C._asyncAwait(t2.insert$2(0, sessionId, msg), $async$loadMessagesFromStorage$1);
              case 17:
                // returning from await.
                // goto for condition
                $async$goto = 15;
                break;
              case 16:
                // after for
              case 14:
                // break $label0$0
                $async$goto = 18;
                return C._asyncAwait($async$self.setMessages$1(newMessages), $async$loadMessagesFromStorage$1);
              case 18:
                // returning from await.
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$errorStack.pop();
                e = C.unwrapException($async$exception);
                C.showError(e);
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return C._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
            }
      });
      return C._asyncStartSync($async$loadMessagesFromStorage$1, $async$completer);
    },
    $isChatController: 1
  };
  A._GetChatController_Object_UploadProgressMixin.prototype = {};
  A._GetChatController_Object_UploadProgressMixin_ScrollToMessageMixin.prototype = {};
  A.ChatPage.prototype = {
    createState$0() {
      return new A._ChatPageState(null, null, D._StateLifecycle_0);
    }
  };
  A._ChatPageState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._chat_page$_initAsync$0();
    },
    dispose$0() {
      var t1 = this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      t1._operationController.close$0(0);
      t1.disposeUploadProgress$0();
      t1.set$_scrollToMessageId(null);
      t1.set$_scroll_to_message_mixin$_scrollToIndex(null);
      this.super$__ChatPageState_State_TickerProviderStateMixin$dispose();
    },
    _chat_page$_initAsync$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, userSessionController, chatSessionController, e, t1, t2, t3, t4, exception, t5, t6, t7, todaySessions, $async$exception;
      var $async$_chat_page$_initAsync$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.$get$Get();
              t1 = type$.UserSessionController;
              t2 = $.GetInstance__getInstance;
              userSessionController = (t2 == null ? $.GetInstance__getInstance = D.C_GetInstance : t2).find$1$1$tag(0, null, t1);
              t2 = type$.ChatSessionController;
              t3 = $.GetInstance__getInstance;
              chatSessionController = (t3 == null ? $.GetInstance__getInstance = D.C_GetInstance : t3).find$1$1$tag(0, null, t2);
              t3 = type$.HealthDataController;
              t4 = $.GetInstance__getInstance;
              $async$self.___ChatPageState__hDM_A = t3._as((t4 == null ? $.GetInstance__getInstance = D.C_GetInstance : t4).find$1$1$tag(0, null, t3));
              $async$handler = 3;
              $async$goto = 6;
              return C._asyncAwait(chatSessionController.init$1(userSessionController.get$currentToken()), $async$_chat_page$_initAsync$0);
            case 6:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              e = C.unwrapException($async$exception);
              $.$get$Get();
              t3 = $.$get$GetNavigation__getxController()._key;
              if (C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t3) != null)
                C.showError(e);
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              t3 = $.GetInstance__getInstance;
              t2 = (t3 == null ? $.GetInstance__getInstance = D.C_GetInstance : t3).find$1$1$tag(0, null, t2);
              t3 = $.GetInstance__getInstance;
              t1 = (t3 == null ? $.GetInstance__getInstance = D.C_GetInstance : t3).find$1$1$tag(0, null, t1);
              t3 = $.GetInstance__getInstance;
              if (t3 == null)
                t3 = $.GetInstance__getInstance = D.C_GetInstance;
              t3 = t3.find$1$1$tag(0, null, type$.StreamStateController);
              t4 = C._setArrayType([], type$.JSArray_Message);
              t5 = C.StreamController_StreamController$broadcast(false, type$.ChatOperation);
              t6 = C._setArrayType([], type$.JSArray_String);
              t7 = $.$get$HttpManager__instance().__HttpManager_dio_F;
              t7 === $ && C.throwLateFieldNI("dio");
              $async$self.___ChatPageState__cC_A = new A.GetChatController(t2, t1, t3, t4, t5, new A.HiveMessageStorage(), t6, t7, null, null, C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.StreamController_double));
              t1 = $.$get$GetNavigation__getxController()._key;
              t2 = type$.WidgetsBinding;
              $async$goto = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null ? 7 : 8;
              break;
            case 7:
              // then
              t1 = $async$self.___ChatPageState__cC_A;
              t3 = $.$get$GetNavigation__getxController()._key;
              t3 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t3);
              t3.toString;
              $async$goto = 9;
              return C._asyncAwait(t1.loadMessagesFromStorage$1(t3), $async$_chat_page$_initAsync$0);
            case 9:
              // returning from await.
            case 8:
              // join
              t1 = $async$self.___ChatPageState__cC_A.cSM._localStorage.getAllSessionsSync$0();
              t2 = C._arrayInstanceType(t1);
              t3 = t2._eval$1("WhereIterable<1>");
              todaySessions = C.List_List$of(new C.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A._ChatPageState__initAsync_closure()), t3), true, t3._eval$1("Iterable.E"));
              if (todaySessions.length !== 0)
                $async$self._switchSession$1(D.JSArray_methods.get$first(todaySessions).sessionId);
              $async$self.setState$1(new A._ChatPageState__initAsync_closure0($async$self));
              // implicit return
              return C._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$_chat_page$_initAsync$0, $async$completer);
    },
    _switchSession$1(sessionId) {
      return this.setState$1(new A._ChatPageState__switchSession_closure(this, sessionId));
    },
    _createSession$1(_, date) {
      return this._createSession$body$_ChatPageState(0, date);
    },
    _createSession$body$_ChatPageState(_, date) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, token, newSessionId, exception, t1, $async$exception;
      var $async$_createSession$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.___ChatPageState__cC_A;
              t1 === $ && C.throwLateFieldNI("_cC");
              token = t1.uSM.get$currentToken();
              $async$handler = 3;
              $async$goto = 6;
              return C._asyncAwait($async$self.___ChatPageState__cC_A.cSM.sessionCreate$2(token, date), $async$_createSession$1);
            case 6:
              // returning from await.
              newSessionId = $async$result;
              $async$goto = 7;
              return C._asyncAwait($async$self.___ChatPageState__cC_A.cSM.init$1(token), $async$_createSession$1);
            case 7:
              // returning from await.
              $async$self._switchSession$1(newSessionId);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              $.$get$Get();
              t1 = $.$get$GetNavigation__getxController()._key;
              if (C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null)
                C.showError("\u521b\u5efa\u4f1a\u8bdd\u5931\u8d25");
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return C._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$_createSession$1, $async$completer);
    },
    _deleteSession$1(sessionId) {
      return C.ExtensionDialog_dialog($.$get$Get(), C.TDAlertDialog$("\u786e\u5b9a\u8981\u5220\u9664\u8be5\u4f1a\u8bdd\u5417\uff1f", new A._ChatPageState__deleteSession_closure(), new A._ChatPageState__deleteSession_closure0(this, sessionId), "\u786e\u8ba4\u5220\u9664\uff1f"), type$.bool);
    },
    _showSessionSwitchDialog$3(context, sessions, date) {
      type$.List_SessionInfo._as(sessions);
      return C.ExtensionDialog_dialog($.$get$Get(), new C.StatefulBuilder(new A._ChatPageState__showSessionSwitchDialog_closure(this, date, sessions), null), type$.void);
    },
    _showCalendarDialog$1(sessions) {
      return this._showCalendarDialog$body$_ChatPageState(type$.List_SessionInfo._as(sessions));
    },
    _showCalendarDialog$body$_ChatPageState(sessions) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, ftheme, sessionMap, t1, t2, t3;
      var $async$_showCalendarDialog$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$Get();
              t2 = $.$get$GetNavigation__getxController()._key;
              t3 = type$.WidgetsBinding;
              t2 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t3).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2);
              t2.toString;
              ftheme = C.FTheme_of(t2);
              sessionMap = C.groupBy(sessions, new A._ChatPageState__showCalendarDialog_closure(), type$.SessionInfo, type$.DateTime);
              t2 = $.$get$GetNavigation__getxController()._key;
              t2 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t3).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2);
              t2.toString;
              C.debugCheckHasMediaQuery(t2);
              C.ExtensionDialog_dialog(t1, new C.StatefulBuilder(new A._ChatPageState__showCalendarDialog_closure0($async$self, new A._ChatPageState__showCalendarDialog_calendar($async$self, ftheme, Math.min(C.InheritedModel_inheritFrom(t2, null, type$.MediaQuery).data.size._dx * 0.65 / 7, ftheme.calendarStyle.dayPickerStyle.tileSize), sessionMap), ftheme), null), type$.dynamic);
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$_showCalendarDialog$1, $async$completer);
    },
    _buildPendingImagesPreview$0() {
      var t2, _null = null,
        t1 = this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      t2 = type$.String;
      if (C.List_List$unmodifiable(t1._pendingImagePaths, t2).length !== 0)
        return new C.SizedBox(_null, 80, E.ListView$builder(_null, _null, new A._ChatPageState__buildPendingImagesPreview_closure(this), C.List_List$unmodifiable(this.___ChatPageState__cC_A._pendingImagePaths, t2).length, _null, _null, D.Axis_0, false), _null);
      else
        return D.SizedBox_0_0_null_null;
    },
    build$1(context) {
      var t1, t2, i, size, isWide, cd, calendar, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _this = this, _null = null;
      if (_this._chat_page$_initialized) {
        t1 = _this.___ChatPageState__cC_A;
        t1 === $ && C.throwLateFieldNI("_cC");
        t1 = J.get$length$asx(t1.cSM.currentSessionId.get$value(0)) === 0;
      } else
        t1 = true;
      if (t1) {
        t1 = C._setArrayType([], type$.JSArray_TDSkeleton);
        for (t2 = type$.MediaQuery, i = 0; C.debugCheckHasMediaQuery(context), i < D.JSNumber_methods.ceil$0(C.InheritedModel_inheritFrom(context, _null, t2).data.size._dy / 200); ++i)
          t1.push(A.TDSkeleton_TDSkeleton(B.TDSkeletonAnimation_1, B.TDSkeletonTheme_3));
        return C.StyledWidget_padding(C.StyledList_toColumn(t1, D.CrossAxisAlignment_2, D.MainAxisAlignment_3, D.MainAxisSize_1), _null, 40, 40);
      }
      C.debugCheckHasMediaQuery(context);
      size = C.InheritedModel_inheritFrom(context, _null, type$.MediaQuery).data.size;
      t1 = size._dx;
      isWide = t1 > size._dy;
      t1 = isWide ? t1 * 0.6 : t1 * 0.9;
      t2 = _this.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      t2 = t2.cSM;
      cd = t2._localStorage.getSessionDate$1(t2.currentSessionId.get$value(0));
      calendar = C.FButton$icon(B.Icon_5Oy, new A._ChatPageState_build_closure(_this), D.Variant_3);
      t2 = new A._ChatPageState_build_onUpdate(_this);
      t3 = new A._ChatPageState_build_onError();
      t4 = isWide ? C.Text$("" + C.Primitives_getYear(cd) + "\u5e74" + C.Primitives_getMonth(cd) + "\u6708" + C.Primitives_getDay(cd) + "\u65e5", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null) : C.StyledList_toRow(C._setArrayType([calendar, new C.SizedBox(16, _null, _null, _null), C.Text$("" + C.Primitives_getMonth(cd) + "\u6708" + C.Primitives_getDay(cd) + "\u65e5", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null)], type$.JSArray_Widget), D.CrossAxisAlignment_1, D.MainAxisAlignment_0, D.MainAxisSize_1, _null);
      if (!isWide)
        t5 = C._setArrayType([], type$.JSArray_Widget);
      else {
        t5 = C.List_List$of(A.debugItems(context, _this.___ChatPageState__cC_A), true, type$.Widget);
        t5.push(C.FButton$icon(B.Icon_qkB, new A._ChatPageState_build_closure0(_this), D.Variant_3));
        t5.push(C.FButton$icon(B.Icon_Qoy, new A._ChatPageState_build_closure1(_this), D.Variant_3));
        t5.push(calendar);
      }
      $.$get$Get();
      t6 = $.$get$GetNavigation__getxController()._key;
      t6 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t6);
      t6.toString;
      t6 = C.Theme_of(t6);
      t7 = t6.colorScheme;
      t8 = t7.surface;
      t9 = t7._surfaceContainerLow;
      if (t9 == null)
        t9 = t8;
      t10 = t7._surfaceContainer;
      if (t10 == null)
        t10 = t8;
      t11 = t7._surfaceContainerHigh;
      if (t11 == null)
        t11 = t8;
      t6 = t6.textTheme;
      t12 = t6.bodyLarge;
      t12.toString;
      t13 = t6.bodyMedium;
      t13.toString;
      t14 = t6.bodySmall;
      t14.toString;
      t15 = t6.labelLarge;
      t15.toString;
      t16 = t6.labelMedium;
      t16.toString;
      t6 = t6.labelSmall;
      t6.toString;
      return C.FScaffold$(A.StyledWidget_toMaterial(new A.Chat("user", new A._ChatPageState_build_closure2(_this), _this.___ChatPageState__cC_A, new A._Builders(new A._ChatPageState_build_closure3(new C.BoxConstraints(0, t1, 0, 1 / 0)), new A._ChatPageState_build_closure4(), new A._ChatPageState_build_closure5(_this), new A._ChatPageState_build_closure6(_this, t2, t3), new A._ChatPageState_build_closure7(_this), new A._ChatPageState_build_closure8()), new A._ChatTheme(new A._ChatColors(t7.primary, t7.onPrimary, t8, t7.onSurface, t10, t9, t11), new A._ChatTypography(t12, t13, t14, t15, t16, t6), D.BorderRadius_UYD), new A._ChatPageState_build_closure9(_this, t2, t3), new A._ChatPageState_build_closure10(_this, t2, t3), new A._ChatPageState_build_closure11(_this, t2), _null)), new A._FRootHeader(t5, t4, _null));
    },
    $isTickerProvider: 1
  };
  A.__ChatPageState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__ChatPageState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.HiveMessageStorage.prototype = {
    _getBox$1(sessionId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Box_dynamic),
        $async$returnValue, boxName, t1;
      var $async$_getBox$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              boxName = "chat_" + sessionId;
              t1 = $.$get$Hive();
              $async$goto = !t1._boxes.containsKey$1(0, boxName.toLowerCase()) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return C._asyncAwait(t1.openBox$1$1(boxName, type$.dynamic), $async$_getBox$1);
            case 5:
              // returning from await.
            case 4:
              // join
              $async$returnValue = type$.Box_dynamic._as(t1._getBoxInternal$1$2(boxName, false, type$.dynamic));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_getBox$1, $async$completer);
    },
    insert$2(_, sessionId, message) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$insert$2 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return C._asyncAwait($async$self._getBox$1(sessionId), $async$insert$2);
            case 3:
              // returning from await.
              t1 = $async$result;
              t2 = C._instanceType(t1)._precomputed1;
              $async$returnValue = t1.putAll$1(C.LinkedHashMap_LinkedHashMap$_literal([message.get$id(message), t2._as(message)], type$.dynamic, t2));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$insert$2, $async$completer);
    },
    delete$2(_, sessionId, messageId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$delete$2 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return C._asyncAwait($async$self._getBox$1(sessionId), $async$delete$2);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.deleteAll$1([messageId]);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$delete$2, $async$completer);
    },
    clear$1(_, sessionId) {
      return this.clear$body$HiveMessageStorage(0, C._asString(sessionId));
    },
    clear$body$HiveMessageStorage(_, sessionId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$clear$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = J;
              $async$goto = 3;
              return C._asyncAwait($async$self._getBox$1(sessionId), $async$clear$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.clear$0$ax($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$clear$1, $async$completer);
    },
    loadAll$1(sessionId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.List_Message),
        $async$returnValue, $async$self = this, messages, t1;
      var $async$loadAll$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return C._asyncAwait($async$self._getBox$1(sessionId), $async$loadAll$1);
            case 3:
              // returning from await.
              t1 = $async$result;
              if (!t1._box_base_impl$_open)
                C.throwExpression(C.HiveError$("Box has already been closed."));
              t1 = t1.__BoxBaseImpl_keystore_A;
              t1 === $ && C.throwLateFieldNI("keystore");
              t1 = t1.getValues$0();
              messages = C.List_List$of(t1, true, C._instanceType(t1)._eval$1("Iterable.E"));
              if (D.JSArray_methods.every$1(messages, new A.HiveMessageStorage_loadAll_closure())) {
                $async$returnValue = new C.CastList(messages, C._arrayInstanceType(messages)._eval$1("CastList<1,Message>"));
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = C._setArrayType([], type$.JSArray_Message);
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$loadAll$1, $async$completer);
    }
  };
  A.BlurHash.prototype = {};
  A.BlurHashDecodeException.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.ColorTriplet.prototype = {
    $add(_, other) {
      type$.ColorTriplet._as(other);
      return new A.ColorTriplet(this.r + other.r, this.g + other.g, this.b + other.b);
    },
    $sub(_, other) {
      type$.ColorTriplet._as(other);
      return new A.ColorTriplet(this.r - other.r, this.g - other.g, this.b - other.b);
    },
    $mul(_, scalar) {
      return new A.ColorTriplet(this.r * scalar, this.g * scalar, this.b * scalar);
    },
    toString$0(_) {
      return "ColorTriplet(" + C.S(this.r) + ", " + C.S(this.g) + ", " + C.S(this.b) + ")";
    }
  };
  A.ListDiffDelegate.prototype = {$isDiffDelegate: 1, $isIndexableItemDiffDelegate: 1};
  A._Snake.prototype = {
    diagonalSize$0() {
      var _this = this;
      return Math.min(_this.endX - _this.startX, _this.endY - _this.startY);
    },
    toDiagonal$0() {
      var _this = this,
        t1 = _this.startY,
        t2 = _this.endY - t1,
        t3 = _this.startX,
        t4 = _this.endX - t3;
      if (t2 !== t4)
        if (_this.reverse)
          return new A._Diagonal(t3, t1, _this.diagonalSize$0());
        else if (t2 > t4)
          return new A._Diagonal(t3, t1 + 1, _this.diagonalSize$0());
        else
          return new A._Diagonal(t3 + 1, t1, _this.diagonalSize$0());
      else
        return new A._Diagonal(t3, t1, t4);
    }
  };
  A._Diagonal.prototype = {};
  A._Range.prototype = {};
  A._CenteredArray.prototype = {
    $index(_, index) {
      var t1 = this.data,
        t2 = this._mid + C._asInt(index);
      if (!(t2 >= 0 && t2 < t1.length))
        return C.ioore(t1, t2);
      return t1[t2];
    },
    $indexSet(_, index, value) {
      var t1, t2;
      C._asInt(index);
      C._asInt(value);
      t1 = this.data;
      t2 = this._mid + index;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      if (!(t2 >= 0 && t2 < t1.length))
        return C.ioore(t1, t2);
      t1[t2] = value;
    }
  };
  A.DiffResult.prototype = {
    _findMatchingItems$0() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _i, diagonal, t10, t11, t12, offset, posX, posY, t13, changeFlag, _this = this;
      for (t1 = _this._mDiagonals, t2 = t1.length, t3 = _this._mOldItemStatuses, t4 = t3.$flags | 0, t5 = _this._mNewItemStatuses, t6 = t5.$flags | 0, t7 = _this._mCallback, t8 = t7.oldList, t9 = t7.newList, t7 = t7.equalityChecker, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        diagonal = t1[_i];
        for (t10 = diagonal.size, t11 = diagonal.x, t12 = diagonal.y, offset = 0; offset < t10; ++offset) {
          posX = t11 + offset;
          posY = t12 + offset;
          if (!(posX >= 0 && posX < t8.length))
            return C.ioore(t8, posX);
          t13 = t8[posX];
          if (!(posY >= 0 && posY < t9.length))
            return C.ioore(t9, posY);
          changeFlag = t7.call$2(t13, t9[posY]) ? 1 : 2;
          t4 & 2 && C.throwUnsupportedOperation(t3);
          if (!(posX < t3.length))
            return C.ioore(t3, posX);
          t3[posX] = (posY << 4 | changeFlag) >>> 0;
          t6 & 2 && C.throwUnsupportedOperation(t5);
          if (!(posY < t5.length))
            return C.ioore(t5, posY);
          t5[posY] = (posX << 4 | changeFlag) >>> 0;
        }
      }
      _this._findMoveMatches$0();
    },
    _findMoveMatches$0() {
      var t1, t2, t3, t4, posX, _i, diagonal, t5;
      for (t1 = this._mDiagonals, t2 = t1.length, t3 = this._mOldItemStatuses, t4 = t3.length, posX = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        diagonal = t1[_i];
        for (t5 = diagonal.x; posX < t5;) {
          if (!(posX >= 0 && posX < t4))
            return C.ioore(t3, posX);
          if (t3[posX] === 0)
            this._findMatchingAddition$1(posX);
          ++posX;
        }
        posX = t5 + diagonal.size;
      }
    },
    _findMatchingAddition$1(posX) {
      var t2, t3, t4, t5, t6, posY, i, diagonal, t7, t8, t9, changeFlag, _this = this,
        t1 = _this._mDiagonals,
        diagonalsSize = t1.length;
      for (t2 = _this._mNewItemStatuses, t3 = t2.length, t4 = _this._mCallback, t5 = t4.oldList, t6 = t4.newList, posY = 0, i = 0; i < diagonalsSize; ++i) {
        if (!(i < t1.length))
          return C.ioore(t1, i);
        diagonal = t1[i];
        for (t7 = diagonal.y; posY < t7;) {
          if (!(posY >= 0 && posY < t3))
            return C.ioore(t2, posY);
          if (t2[posY] === 0) {
            if (!(posX >= 0 && posX < t5.length))
              return C.ioore(t5, posX);
            t8 = t5[posX];
            t8 = t8.get$id(t8);
            if (!(posY < t6.length))
              return C.ioore(t6, posY);
            t9 = t6[posY];
            if (t8 === t9.get$id(t9)) {
              if (!(posX < t5.length))
                return C.ioore(t5, posX);
              t1 = t5[posX];
              if (!(posY < t6.length))
                return C.ioore(t6, posY);
              changeFlag = t4.equalityChecker.call$2(t1, t6[posY]) ? 8 : 4;
              t1 = _this._mOldItemStatuses;
              t1.$flags & 2 && C.throwUnsupportedOperation(t1);
              if (!(posX < t1.length))
                return C.ioore(t1, posX);
              t1[posX] = (posY << 4 | changeFlag) >>> 0;
              t2.$flags & 2 && C.throwUnsupportedOperation(t2);
              t2[posY] = (posX << 4 | changeFlag) >>> 0;
              return;
            }
          }
          ++posY;
        }
        posY = t7 + diagonal.size;
      }
    },
    getUpdatesWithData$0() {
      var updates, currentListSize, postponedUpdates, posY, t2, diagonalIndex, t3, t4, t5, t6, t7, t8, t9, t10, t11, posX, diagonal, posX0, t12, endX, posY0, endY, $status, item, newPos, postponedUpdate, t13, oldPos, i, _this = this,
        delegate = _this._mCallback,
        t1 = _this.$ti;
      if (!t1._eval$1("IndexableItemDiffDelegate<1>")._is(delegate))
        throw C.wrapException(C.Exception_Exception(delegate.toString$0(0) + " is not a IndexableItemDiffDelegate<" + C.createRuntimeType(t1._precomputed1).toString$0(0) + ">. call getUpdates() instead or implement IndexableItemDiffDelegate in your DiffDelegate "));
      updates = C._setArrayType([], t1._eval$1("JSArray<DataDiffUpdate<1>>"));
      currentListSize = _this._mOldListSize;
      postponedUpdates = C._setArrayType([], type$.JSArray__PostponedUpdate);
      posY = _this._mNewListSize;
      for (t2 = _this._mDiagonals, diagonalIndex = t2.length - 1, t3 = _this._mOldItemStatuses, t4 = t3.length, t5 = delegate.oldList, t6 = delegate.newList, t7 = t1._eval$1("DataChange<1>"), t8 = t1._eval$1("DataInsert<1>"), t9 = _this._mNewItemStatuses, t10 = t9.length, t11 = t1._eval$1("DataMove<1>"), t1 = t1._eval$1("DataRemove<1>"), posX = currentListSize; diagonalIndex >= 0; --diagonalIndex, posY = posY0, posX = posX0) {
        if (!(diagonalIndex < t2.length))
          return C.ioore(t2, diagonalIndex);
        diagonal = t2[diagonalIndex];
        posX0 = diagonal.x;
        t12 = diagonal.size;
        endX = posX0 + t12;
        posY0 = diagonal.y;
        endY = posY0 + t12;
        for (; posX > endX;) {
          --posX;
          if (!(posX >= 0 && posX < t4))
            return C.ioore(t3, posX);
          $status = t3[posX];
          if (!(posX < t5.length))
            return C.ioore(t5, posX);
          item = t5[posX];
          if (($status & 12) !== 0) {
            newPos = D.JSInt_methods._shrOtherPositive$1($status, 4);
            postponedUpdate = _this.getPostponedUpdate$3(postponedUpdates, newPos, false);
            if (postponedUpdate != null) {
              t13 = currentListSize - postponedUpdate.currentPos - 1;
              D.JSArray_methods.add$1(updates, new A.DataMove(posX, t13, item, t11));
              if (($status & 4) !== 0) {
                if (!(newPos < t6.length))
                  return C.ioore(t6, newPos);
                D.JSArray_methods.add$1(updates, new A.DataChange(t13, item, t6[newPos], t7));
              }
            } else
              D.JSArray_methods.add$1(postponedUpdates, new A._PostponedUpdate(posX, currentListSize - posX - 1, true));
          } else {
            D.JSArray_methods.add$1(updates, new A.DataRemove(posX, item, t1));
            --currentListSize;
          }
        }
        for (; posY > endY;) {
          --posY;
          if (!(posY >= 0 && posY < t10))
            return C.ioore(t9, posY);
          $status = t9[posY];
          if (!(posY < t6.length))
            return C.ioore(t6, posY);
          item = t6[posY];
          if (($status & 12) !== 0) {
            oldPos = D.JSInt_methods._shrOtherPositive$1($status, 4);
            postponedUpdate = _this.getPostponedUpdate$3(postponedUpdates, oldPos, true);
            if (postponedUpdate == null)
              D.JSArray_methods.add$1(postponedUpdates, new A._PostponedUpdate(posY, currentListSize - posX, false));
            else {
              D.JSArray_methods.add$1(updates, new A.DataMove(currentListSize - postponedUpdate.currentPos - 1, posX, item, t11));
              if (($status & 4) !== 0) {
                if (!(oldPos < t5.length))
                  return C.ioore(t5, oldPos);
                D.JSArray_methods.add$1(updates, new A.DataChange(posX, t5[oldPos], item, t7));
              }
            }
          } else {
            D.JSArray_methods.add$1(updates, new A.DataInsert(posX, item, t8));
            ++currentListSize;
          }
        }
        for (posY = posY0, posX = posX0, i = 0; i < t12; ++i) {
          if (!(posX >= 0 && posX < t4))
            return C.ioore(t3, posX);
          if ((t3[posX] & 15) === 2) {
            if (!(posX < t5.length))
              return C.ioore(t5, posX);
            t13 = t5[posX];
            if (!(posY >= 0 && posY < t6.length))
              return C.ioore(t6, posY);
            D.JSArray_methods.add$1(updates, new A.DataChange(posX, t13, t6[posY], t7));
          }
          ++posX;
          ++posY;
        }
      }
      return updates;
    },
    getPostponedUpdate$3(postponedUpdates, posInList, removal) {
      var postponedUpdate, t1, i, update;
      type$.List__PostponedUpdate._as(postponedUpdates);
      t1 = postponedUpdates.length;
      i = 0;
      while (true) {
        if (!(i < t1)) {
          postponedUpdate = null;
          break;
        }
        update = postponedUpdates[i];
        if (update.posInOwnerList === posInList && update.removal === removal) {
          D.JSArray_methods.removeAt$1(postponedUpdates, i);
          postponedUpdate = update;
          break;
        }
        ++i;
      }
      for (; i < postponedUpdates.length;) {
        update = postponedUpdates[i];
        t1 = update.currentPos;
        if (removal)
          update.currentPos = t1 - 1;
        else
          update.currentPos = t1 + 1;
        ++i;
      }
      return postponedUpdate;
    }
  };
  A._PostponedUpdate.prototype = {};
  A.DataInsert.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataInsert && C.getRuntimeTypeOfDartObject(_this) === C.getRuntimeTypeOfDartObject(other) && _this.position === other.position && J.$eq$(_this.data, other.data);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (D.JSInt_methods.get$hashCode(this.position) ^ J.get$hashCode$(this.data)) >>> 0;
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var t1 = this.$ti._bind$1($S);
      t1._eval$1("1(int,2)")._as(insert);
      t1._eval$1("1(int,2)?")._as(remove);
      t1._eval$1("1(int,2,2)")._as(change);
      t1._eval$1("1(int,int,2)?")._as(move);
      return insert.call$2(this.position, this.data);
    },
    toString$0(_) {
      return "Insert{position: " + this.position + ", data: " + C.S(this.data) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.DataRemove.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataRemove && C.getRuntimeTypeOfDartObject(_this) === C.getRuntimeTypeOfDartObject(other) && _this.position === other.position && J.$eq$(_this.data, other.data);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (D.JSInt_methods.get$hashCode(this.position) ^ J.get$hashCode$(this.data)) >>> 0;
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var t1 = this.$ti._bind$1($S);
      t1._eval$1("1(int,2)?")._as(insert);
      t1._eval$1("1(int,2)")._as(remove);
      t1._eval$1("1(int,2,2)?")._as(change);
      t1._eval$1("1(int,int,2)?")._as(move);
      return remove.call$2(this.position, this.data);
    },
    toString$0(_) {
      return "Remove{position: " + this.position + ", data: " + C.S(this.data) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.DataChange.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataChange && C.getRuntimeTypeOfDartObject(_this) === C.getRuntimeTypeOfDartObject(other) && _this.position === other.position && J.$eq$(_this.oldData, other.oldData) && J.$eq$(_this.newData, other.newData);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (D.JSInt_methods.get$hashCode(this.position) ^ J.get$hashCode$(this.newData)) >>> 0;
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var _this = this,
        t1 = _this.$ti._bind$1($S),
        t2 = t1._eval$1("1(int,2)");
      t2._as(insert);
      t2._as(remove);
      t1._eval$1("1(int,2,2)")._as(change);
      t1._eval$1("1(int,int,2)")._as(move);
      return change.call$3(_this.position, _this.oldData, _this.newData);
    },
    toString$0(_) {
      return "Change{position: " + this.position + ", old data: " + C.S(this.oldData) + ", new data: " + C.S(this.newData) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.DataMove.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataMove && C.getRuntimeTypeOfDartObject(_this) === C.getRuntimeTypeOfDartObject(other) && _this.from === other.from && _this.to === other.to && J.$eq$(_this.data, other.data);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return D.JSInt_methods.get$hashCode(this.from) ^ D.JSInt_methods.get$hashCode(this.to);
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var _this = this,
        t1 = _this.$ti._bind$1($S),
        t2 = t1._eval$1("1(int,2)?");
      t2._as(insert);
      t2._as(remove);
      t1._eval$1("1(int,2,2)?")._as(change);
      return t1._eval$1("1(int,int,2)")._as(move).call$3(_this.from, _this.to, _this.data);
    },
    toString$0(_) {
      return "Move{from: " + this.from + ", to: " + this.to + ", data: " + C.S(this.data) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.FormData.prototype = {
    _form_data$_init$2$fromMap$listFormat(fromMap, listFormat) {
      type$.nullable_Map_String_dynamic._as(fromMap);
      this.__FormData__boundary_A = "--dio-boundary-" + D.JSString_methods.padLeft$2(D.JSInt_methods.toString$0($.$get$_random().nextInt$1(4294967296)), 10, "0");
      C.encodeMap(fromMap, new A.FormData__init_closure(this), false, false, listFormat);
    },
    get$boundary() {
      var t1 = this.__FormData__boundary_A;
      t1 === $ && C.throwLateFieldNI("_boundary");
      return t1;
    },
    _headerForFile$1(entry) {
      var file, header, t1 = {};
      type$.MapEntry_String_MultipartFile._as(entry);
      file = entry.value;
      header = 'content-disposition: form-data; name="' + C.S(this._browserEncode$1(entry.key)) + '"';
      t1.header = header;
      file.get$filename(file);
      header = header + '; filename="' + C.S(this._browserEncode$1(file.get$filename(file))) + '"';
      t1.header = header;
      t1.header = header + "\r\ncontent-type: " + C.S(file.get$contentType(file));
      file.get$headers(file);
      file.get$headers(file).forEach$1(0, new A.FormData__headerForFile_closure(t1));
      return t1.header + "\r\n\r\n";
    },
    _browserEncode$1(value) {
      var t1 = C.RegExp_RegExp("\\r\\n|\\r|\\n", true, false, false, false);
      t1 = C.stringReplaceAllUnchecked(value, t1, "%0D%0A");
      t1 = C.stringReplaceAllUnchecked(t1, '"', "%22");
      return t1;
    },
    get$length(_) {
      var t1, t2, $length, _i, entry, t3, t4, t5, t6, file, _this = this,
        _s9_ = "_boundary";
      for (t1 = _this.fields, t2 = t1.length, $length = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        t3 = _this.__FormData__boundary_A;
        t3 === $ && C.throwLateFieldNI(_s9_);
        t4 = C._asString(entry.key);
        t5 = C._asString(entry.value);
        t6 = C.RegExp_RegExp("\\r\\n|\\r|\\n", true, false, false, false);
        t4 = C.stringReplaceAllUnchecked(t4, t6, "%0D%0A");
        t4 = C.stringReplaceAllUnchecked(t4, '"', "%22");
        $length += 2 + t3.length + 2 + D.C_Utf8Encoder.convert$1('content-disposition: form-data; name="' + C.S(t4) + '"\r\n\r\n').length + D.C_Utf8Encoder.convert$1(t5).length + 2;
      }
      for (t1 = _this.files, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        file = t1[_i];
        t3 = _this.__FormData__boundary_A;
        t3 === $ && C.throwLateFieldNI(_s9_);
        $length += D.JSInt_methods.$add(2 + t3.length + 2 + D.C_Utf8Encoder.convert$1(_this._headerForFile$1(file)).length, J.get$length$asx(file.value)) + 2;
      }
      t1 = _this.__FormData__boundary_A;
      t1 === $ && C.throwLateFieldNI(_s9_);
      return $length + 2 + t1.length + 4;
    },
    finalize$0() {
      var controller, writeLine, writeUtf8, t1, t2, _i, entry, t3, t4, t5, _this = this, _null = null;
      if (_this._isFinalized)
        throw C.wrapException(C.StateError$("The FormData has already been finalized. This typically means you are using the same FormData in repeated requests."));
      _this._isFinalized = true;
      controller = C.StreamController_StreamController(_null, _null, _null, false, type$.Uint8List);
      writeLine = new A.FormData_finalize_writeLine(controller);
      writeUtf8 = new A.FormData_finalize_writeUtf8(controller);
      for (t1 = _this.fields, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        t3 = _this.__FormData__boundary_A;
        t3 === $ && C.throwLateFieldNI("_boundary");
        writeUtf8.call$1("--" + t3 + "\r\n");
        t3 = C._asString(entry.key);
        t4 = C._asString(entry.value);
        t5 = C.RegExp_RegExp("\\r\\n|\\r|\\n", true, false, false, false);
        t3 = C.stringReplaceAllUnchecked(t3, t5, "%0D%0A");
        t3 = C.stringReplaceAllUnchecked(t3, '"', "%22");
        writeUtf8.call$1('content-disposition: form-data; name="' + C.S(t3) + '"\r\n\r\n');
        writeUtf8.call$1(t4);
        writeLine.call$0();
      }
      C.Future_Future(new A.FormData_finalize_closure(_this, writeUtf8, controller, writeLine), type$.void).then$1$1(0, new A.FormData_finalize_closure0(_this, writeUtf8), type$.Null).whenComplete$1(new A.FormData_finalize_closure1(controller));
      return new C._ControllerStream(controller, C._instanceType(controller)._eval$1("_ControllerStream<1>"));
    }
  };
  A._BottomSheetLayoutWithSizeListener.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderBottomSheetLayoutWithSizeListener(D.Size_0_0, this.onChildSizeChanged, this.animationValue, false, this.scrollControlDisabledMaxHeightRatio, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderBottomSheetLayoutWithSizeListener._as(renderObject);
      renderObject.set$onChildSizeChanged(this.onChildSizeChanged);
      renderObject.set$animationValue(this.animationValue);
      renderObject.set$isScrollControlled(false);
      renderObject.set$scrollControlDisabledMaxHeightRatio(this.scrollControlDisabledMaxHeightRatio);
    }
  };
  A._RenderBottomSheetLayoutWithSizeListener.prototype = {
    set$onChildSizeChanged(newCallback) {
      type$.void_Function_Size._as(newCallback);
      if (J.$eq$(this._onChildSizeChanged, newCallback))
        return;
      this.set$_onChildSizeChanged(newCallback);
      this.markNeedsLayout$0();
    },
    set$animationValue(newValue) {
      if (this._animationValue === newValue)
        return;
      this._animationValue = newValue;
      this.markNeedsLayout$0();
    },
    set$isScrollControlled(newValue) {
      return;
    },
    set$scrollControlDisabledMaxHeightRatio(newValue) {
      if (this._scrollControlDisabledMaxHeightRatio === newValue)
        return;
      this._scrollControlDisabledMaxHeightRatio = newValue;
      this.markNeedsLayout$0();
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      C._asDouble(width);
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      C._asDouble(width);
      return 0;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(constraints.constrainWidth$0(), constraints.constrainHeight$0());
    },
    computeDryBaseline$2(constraints, baseline) {
      var child, childConstraints, result, childSize,
        t1 = type$.BoxConstraints;
      t1._as(constraints);
      type$.TextBaseline._as(baseline);
      child = this.RenderObjectWithChildMixin__child;
      if (child == null)
        return null;
      childConstraints = this._getConstraintsForChild$1(constraints);
      result = child.getDryBaseline$2(childConstraints, baseline);
      if (result == null)
        return null;
      childSize = childConstraints.minWidth >= childConstraints.maxWidth && childConstraints.minHeight >= childConstraints.maxHeight ? new C.Size(childConstraints.constrainWidth$1(0), childConstraints.constrainHeight$1(0)) : child._computeIntrinsics$2$3(D.C__DryLayout, childConstraints, child.get$_computeDryLayout(), t1, type$.Size);
      return result + this._getPositionForChild$2(new C.Size(constraints.constrainWidth$0(), constraints.constrainHeight$0()), childSize)._dy;
    },
    _getConstraintsForChild$1(constraints) {
      var t1 = constraints.maxWidth,
        t2 = this._scrollControlDisabledMaxHeightRatio;
      return new C.BoxConstraints(t1, t1, 0, constraints.maxHeight * t2);
    },
    _getPositionForChild$2(size, childSize) {
      return new C.Offset(0, size._dy - childSize._dy * this._animationValue);
    },
    performLayout$0() {
      var child, childConstraints, childSize, _this = this,
        t1 = type$.BoxConstraints,
        t2 = t1._as(C.RenderObject.prototype.get$constraints.call(_this));
      _this.set$size(0, new C.Size(t2.constrainWidth$0(), t2.constrainHeight$0()));
      child = _this.RenderObjectWithChildMixin__child;
      if (child == null)
        return;
      childConstraints = _this._getConstraintsForChild$1(t1._as(C.RenderObject.prototype.get$constraints.call(_this)));
      C.assertHelper(childConstraints.debugAssertIsValid$1$isAppliedConstraint(true));
      t1 = childConstraints.minWidth >= childConstraints.maxWidth;
      child.layout$2$parentUsesSize(childConstraints, !(t1 && childConstraints.minHeight >= childConstraints.maxHeight));
      t2 = child.parentData;
      t2.toString;
      type$.BoxParentData._as(t2);
      childSize = t1 && childConstraints.minHeight >= childConstraints.maxHeight ? new C.Size(childConstraints.constrainWidth$1(0), childConstraints.constrainHeight$1(0)) : child.get$size(0);
      t2.offset = _this._getPositionForChild$2(_this.get$size(0), childSize);
      if (!_this._lastSize.$eq(0, childSize)) {
        _this._lastSize = childSize;
        _this._onChildSizeChanged.call$1(childSize);
      }
    },
    set$_onChildSizeChanged(_onChildSizeChanged) {
      this._onChildSizeChanged = type$.void_Function_Size._as(_onChildSizeChanged);
    }
  };
  A._ModalBottomSheet.prototype = {
    createState$0() {
      return new A._ModalBottomSheetState(B.Cubic_C8c, D._StateLifecycle_0, this.$ti._eval$1("_ModalBottomSheetState<1>"));
    }
  };
  A._ModalBottomSheetState.prototype = {
    _getRouteLabel$1(localizations) {
      switch (C.Theme_of(this.get$context(0)).platform.index) {
        case 2:
        case 4:
          return "";
        case 0:
        case 1:
        case 3:
        case 5:
          return localizations.get$dialogLabel();
      }
    },
    handleDragStart$1(details) {
      this.set$animationCurve(D.C__Linear);
    },
    handleDragEnd$2$isClosing(details, isClosing) {
      this.set$animationCurve(new C.Split(this._widget.route._animationProxy.get$value(0), B.Cubic_C8c));
    },
    handleDragEnd$1(details) {
      return this.handleDragEnd$2$isClosing(details, null);
    },
    build$1(context) {
      var t1, routeLabel, t2, t3, t4, t5, t6, t7, _this = this;
      C.debugCheckHasMediaQuery(context);
      C.debugCheckHasMaterialLocalizations(context);
      C.debugCheckHasMaterialLocalizations(context);
      t1 = C.Localizations_of(context, D.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
      t1.toString;
      routeLabel = _this._getRouteLabel$1(t1);
      t1 = _this._widget;
      t2 = t1.route;
      t3 = t2._animationProxy;
      t3.toString;
      t4 = t2._bottom_sheet$_animationController;
      t5 = t1.backgroundColor;
      t6 = t1.elevation;
      t7 = t1.shape;
      return C.AnimatedBuilder$(t3, new A._ModalBottomSheetState_build_closure(_this, routeLabel), C.BottomSheet$(t4, t5, t2.builder, t1.clipBehavior, t1.constraints, t6, true, new A._ModalBottomSheetState_build_closure0(_this, context), _this.get$handleDragEnd(), _this.get$handleDragStart(), t7, t1.showDragHandle));
    },
    set$animationCurve(animationCurve) {
      this.animationCurve = type$.ParametricCurve_double._as(animationCurve);
    }
  };
  A.ModalBottomSheetRoute.prototype = {
    dispose$0() {
      this._bottom_sheet$_clipDetailsNotifier.dispose$0();
      this.super$TransitionRoute$dispose();
    },
    _didChangeBarrierSemanticsClip$1(newClipDetails) {
      var t1 = this._bottom_sheet$_clipDetailsNotifier;
      if (J.$eq$(t1._change_notifier$_value, newClipDetails))
        return false;
      t1.set$value(0, newClipDetails);
      return true;
    },
    get$transitionDuration(_) {
      return D.Duration_250000;
    },
    get$reverseTransitionDuration() {
      return D.Duration_200000;
    },
    get$barrierDismissible() {
      return true;
    },
    get$barrierColor() {
      var t1 = this.modalBarrierColor;
      return t1 == null ? D.Color_NzJ : t1;
    },
    createAnimationController$0() {
      var t1, _this = this;
      C.assertHelper(_this._bottom_sheet$_animationController == null);
      t1 = _this._navigator;
      t1.toString;
      t1 = C.BottomSheet_createAnimationController(t1, _this.sheetAnimationStyle);
      _this._bottom_sheet$_animationController = t1;
      return t1;
    },
    buildPage$3(context, animation, secondaryAnimation) {
      var bottomSheet,
        t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      bottomSheet = C.MediaQuery$removePadding(new C.DisplayFeatureSubScreen(this.anchorPoint, new C.Builder(new A.ModalBottomSheetRoute_buildPage_closure(this), null), null), context, false, false, false, true);
      t1 = new C._CaptureAll(this.capturedThemes._themes, bottomSheet, null);
      return t1;
    },
    buildModalBarrier$0() {
      var t3, t4, _this = this,
        t1 = _this.modalBarrierColor,
        t2 = t1 == null;
      if ((t2 ? D.Color_NzJ : t1).a !== 0 && !_this._offstage) {
        t3 = t2 ? D.Color_NzJ : t1;
        C.assertHelper(!t3.$eq(0, (t2 ? D.Color_NzJ : t1).withValues$1$alpha(0)));
        t3 = _this._animationProxy;
        t3.toString;
        t4 = (t2 ? D.Color_NzJ : t1).withValues$1$alpha(0);
        if (t2)
          t1 = D.Color_NzJ;
        return C.AnimatedModalBarrier$(true, _this._bottom_sheet$_clipDetailsNotifier, t3.drive$1$1(new C._ChainedEvaluation(type$.Animatable_double._as(new C.CurveTween(D.Cubic_glB)), new C.ColorTween(t4, t1), type$.ColorTween._eval$1("_ChainedEvaluation<Animatable.T>")), type$.nullable_Color), true, _this.barrierLabel, _this.barrierOnTapHint);
      } else
        return C.ModalBarrier$(true, _this._bottom_sheet$_clipDetailsNotifier, null, true, null, _this.barrierLabel, _this.barrierOnTapHint);
    },
    get$barrierLabel() {
      return this.barrierLabel;
    }
  };
  A._CheckboxType.prototype = {
    _enumToString$0() {
      return "_CheckboxType." + this._name;
    }
  };
  A.Checkbox.prototype = {
    createState$0() {
      return new A._CheckboxState(new A._CheckboxPainter($.$get$ChangeNotifier__emptyListeners()), $, $, $, $, $, $, $, $, D.Duration_100000, $, null, false, false, null, null, D._StateLifecycle_0);
    }
  };
  A._CheckboxState.prototype = {
    initState$0() {
      this.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$initState();
      this._previousValue = this._widget.value;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.Checkbox._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.value;
      if (t1 !== _this._widget.value) {
        _this._previousValue = t1;
        _this.animateToValue$0();
      }
    },
    dispose$0() {
      this._checkbox$_painter.dispose$0();
      this.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose();
    },
    get$onChanged() {
      return this._widget.onChanged;
    },
    get$tristate() {
      this._widget.toString;
      return false;
    },
    get$value(_) {
      return this._widget.value;
    },
    get$_widgetFillColor() {
      return new C._WidgetStatePropertyWith(new A._CheckboxState__widgetFillColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    _resolveSide$2(side, states) {
      type$.Set_WidgetState._as(states);
      if (side instanceof C._WidgetStateBorderSide)
        return C.WidgetStateProperty_resolveAs(side, states, type$.nullable_BorderSide);
      if (!states.contains$1(0, D.WidgetState_4))
        return side;
      return null;
    },
    build$1(context) {
      var checkboxTheme, defaults, effectiveMaterialTapTargetSize, effectiveVisualDensity, t1, size, activeStates, inactiveStates, t2, activeColor, t3, effectiveActiveColor, inactiveColor, t4, effectiveInactiveColor, activeSide, inactiveSide, focusedStates, t5, effectiveFocusOverlayColor, hoveredStates, effectiveHoverOverlayColor, effectiveActivePressedOverlayColor, effectiveInactivePressedOverlayColor, checkStates, effectiveCheckColor, effectiveSplashRadius, _this = this, _null = null;
      _this._widget.toString;
      switch (0) {
        case 0:
          break;
      }
      C.debugCheckHasMaterial(context);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CheckboxTheme);
      checkboxTheme = C.Theme_of(context).checkboxTheme;
      C.Theme_of(context);
      defaults = new A._CheckboxDefaultsM3(C.Theme_of(context), C.Theme_of(context).colorScheme, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      _this._widget.toString;
      effectiveMaterialTapTargetSize = defaults.get$materialTapTargetSize();
      _this._widget.toString;
      effectiveVisualDensity = defaults.get$visualDensity();
      switch (effectiveMaterialTapTargetSize.index) {
        case 0:
          t1 = D.Size_48_48;
          break;
        case 1:
          t1 = D.Size_40_40;
          break;
        default:
          t1 = _null;
      }
      size = t1.$add(0, new C.Offset(effectiveVisualDensity.horizontal, effectiveVisualDensity.vertical).$mul(0, 4));
      activeStates = _this.get$states();
      activeStates.add$1(0, D.WidgetState_4);
      inactiveStates = _this.get$states();
      inactiveStates.remove$1(0, D.WidgetState_4);
      _this._widget.toString;
      t1 = _this.get$_widgetFillColor();
      t2 = type$.Set_WidgetState;
      t2._as(activeStates);
      activeColor = t1._resolve.call$1(activeStates);
      if (activeColor == null) {
        t1 = checkboxTheme.fillColor;
        activeColor = t1 == null ? _null : t1.resolve$1(activeStates);
      }
      t1 = activeColor == null;
      if (t1) {
        t3 = defaults.get$fillColor()._resolve.call$1(activeStates);
        t3.toString;
        effectiveActiveColor = t3;
      } else
        effectiveActiveColor = activeColor;
      _this._widget.toString;
      t3 = _this.get$_widgetFillColor();
      t2._as(inactiveStates);
      inactiveColor = t3._resolve.call$1(inactiveStates);
      if (inactiveColor == null) {
        t3 = checkboxTheme.fillColor;
        inactiveColor = t3 == null ? _null : t3.resolve$1(inactiveStates);
      }
      t3 = inactiveColor == null;
      if (t3) {
        t4 = defaults.get$fillColor()._resolve.call$1(inactiveStates);
        t4.toString;
        effectiveInactiveColor = t4;
      } else
        effectiveInactiveColor = inactiveColor;
      _this._widget.toString;
      t4 = _this._resolveSide$2(_null, activeStates);
      activeSide = t4 == null ? _this._resolveSide$2(checkboxTheme.side, activeStates) : t4;
      if (activeSide == null) {
        t4 = _this._resolveSide$2(defaults.get$side(), activeStates);
        t4.toString;
        activeSide = t4;
      }
      _this._widget.toString;
      t4 = _this._resolveSide$2(_null, inactiveStates);
      inactiveSide = t4 == null ? _this._resolveSide$2(checkboxTheme.side, inactiveStates) : t4;
      if (inactiveSide == null) {
        t4 = _this._resolveSide$2(defaults.get$side(), inactiveStates);
        t4.toString;
        inactiveSide = t4;
      }
      focusedStates = _this.get$states();
      focusedStates.add$1(0, D.WidgetState_1);
      _this._widget.toString;
      t4 = checkboxTheme.overlayColor;
      t5 = t4 == null ? _null : t4.resolve$1(focusedStates);
      effectiveFocusOverlayColor = t5;
      if (effectiveFocusOverlayColor == null) {
        t5 = defaults.get$overlayColor()._resolve.call$1(t2._as(focusedStates));
        t5.toString;
        effectiveFocusOverlayColor = t5;
      }
      hoveredStates = _this.get$states();
      hoveredStates.add$1(0, D.WidgetState_0);
      _this._widget.toString;
      t5 = t4 == null ? _null : t4.resolve$1(hoveredStates);
      effectiveHoverOverlayColor = t5;
      if (effectiveHoverOverlayColor == null) {
        t2 = defaults.get$overlayColor()._resolve.call$1(t2._as(hoveredStates));
        t2.toString;
        effectiveHoverOverlayColor = t2;
      }
      activeStates.add$1(0, D.WidgetState_2);
      _this._widget.toString;
      t2 = t4 == null ? _null : t4.resolve$1(activeStates);
      if (t2 == null) {
        t1 = t1 ? _null : activeColor.withAlpha$1(31);
        effectiveActivePressedOverlayColor = t1;
      } else
        effectiveActivePressedOverlayColor = t2;
      if (effectiveActivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(activeStates);
        t1.toString;
        effectiveActivePressedOverlayColor = t1;
      }
      inactiveStates.add$1(0, D.WidgetState_2);
      _this._widget.toString;
      t1 = t4 == null ? _null : t4.resolve$1(inactiveStates);
      if (t1 == null) {
        t1 = t3 ? _null : inactiveColor.withAlpha$1(31);
        effectiveInactivePressedOverlayColor = t1;
      } else
        effectiveInactivePressedOverlayColor = t1;
      if (effectiveInactivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(inactiveStates);
        t1.toString;
        effectiveInactivePressedOverlayColor = t1;
      }
      if (_this.ToggleableStateMixin__downPosition != null) {
        effectiveHoverOverlayColor = _this.get$states().contains$1(0, D.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
        effectiveFocusOverlayColor = _this.get$states().contains$1(0, D.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
      }
      _this._widget.toString;
      checkStates = _this.get$states();
      _this._widget.toString;
      t1 = checkboxTheme.checkColor;
      t1 = t1 == null ? _null : t1.resolve$1(checkStates);
      effectiveCheckColor = t1;
      if (effectiveCheckColor == null) {
        t1 = defaults.get$checkColor().resolve$1(checkStates);
        t1.toString;
        effectiveCheckColor = t1;
      }
      _this._widget.toString;
      effectiveSplashRadius = checkboxTheme.splashRadius;
      if (effectiveSplashRadius == null)
        effectiveSplashRadius = defaults.get$splashRadius();
      t1 = _this._widget.value;
      t2 = _this._checkbox$_painter;
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t3 === $ && C.throwLateFieldNI("_position");
      t2.set$position(0, t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t3 === $ && C.throwLateFieldNI("_reaction");
      t2.set$reaction(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t2.set$reactionFocusFade(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t2.set$reactionHoverFade(t3);
      t2.set$inactiveReactionColor(effectiveInactivePressedOverlayColor);
      t2.set$reactionColor(effectiveActivePressedOverlayColor);
      t2.set$hoverColor(effectiveHoverOverlayColor);
      t2.set$focusColor(effectiveFocusOverlayColor);
      t2.set$splashRadius(effectiveSplashRadius);
      t2.set$downPosition(_this.ToggleableStateMixin__downPosition);
      t2.set$isFocused(_this.get$states().contains$1(0, D.WidgetState_1));
      t2.set$isHovered(_this.get$states().contains$1(0, D.WidgetState_0));
      t2.set$activeColor(effectiveActiveColor);
      t2.set$inactiveColor(effectiveInactiveColor);
      t2.set$checkColor(effectiveCheckColor);
      t2.set$value(0, _this._widget.value);
      t2.set$previousValue(_this._previousValue);
      _this._widget.toString;
      t3 = checkboxTheme.shape;
      t2.set$shape(0, t3 == null ? defaults.get$shape(0) : t3);
      t2.set$activeSide(activeSide);
      t2.set$inactiveSide(inactiveSide);
      t2 = _this.buildToggleable$5$autofocus$focusNode$mouseCursor$painter$size(false, _null, new C._WidgetStatePropertyWith(new A._CheckboxState_build_closure(_this, checkboxTheme), type$._WidgetStatePropertyWith_MouseCursor), t2, size);
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t2, _null);
    },
    $isTickerProvider: 1
  };
  A._CheckboxPainter.prototype = {
    set$checkColor(value) {
      if (J.$eq$(this._checkColor, value))
        return;
      this._checkColor = value;
      this.notifyListeners$0();
    },
    set$value(_, value) {
      if (this._checkbox$_value === value)
        return;
      this._checkbox$_value = value;
      this.notifyListeners$0();
    },
    set$previousValue(value) {
      if (this._previousValue == value)
        return;
      this._previousValue = value;
      this.notifyListeners$0();
    },
    set$shape(_, value) {
      if (J.$eq$(this._checkbox$_shape, value))
        return;
      this._checkbox$_shape = value;
      this.notifyListeners$0();
    },
    set$activeSide(value) {
      if (J.$eq$(this._activeSide, value))
        return;
      this._activeSide = value;
      this.notifyListeners$0();
    },
    set$inactiveSide(value) {
      if (J.$eq$(this._inactiveSide, value))
        return;
      this._inactiveSide = value;
      this.notifyListeners$0();
    },
    _outerRectAt$2(origin, t) {
      var inset = 1 - Math.abs(t - 0.5) * 2,
        size = 18 - inset * 2,
        t1 = origin._dx + inset,
        t2 = origin._dy + inset;
      return new C.Rect(t1, t2, t1 + size, t2 + size);
    },
    _colorAt$1(t) {
      var t2,
        t1 = this._activeColor;
      if (t >= 0.25)
        t1.toString;
      else {
        t2 = this._inactiveColor;
        t2.toString;
        t1.toString;
        t1 = C.Color_lerp(t2, t1, t * 4);
        t1.toString;
      }
      return t1;
    },
    _drawBox$4(canvas, outer, paint, side) {
      canvas.drawPath$2(this._checkbox$_shape.getOuterPath$1(outer), paint);
      this._checkbox$_shape.copyWith$1$side(side).paint$2(canvas, outer);
    },
    _drawCheck$4(canvas, origin, t, paint) {
      var path, t1, t2, t3, t4, t5;
      C.assertHelper(t >= 0 && t <= 1);
      path = $.$get$_renderer().createPath$0();
      t1 = origin._dx;
      t2 = origin._dy;
      t3 = t1 + 2.6999999999999997;
      t4 = t2 + 8.1;
      if (t < 0.5) {
        t5 = C.Offset_lerp(B.Offset_5ck, B.Offset_FK3, t * 2);
        t5.toString;
        path.moveTo$2(0, t3, t4);
        path.lineTo$2(0, t1 + t5._dx, t2 + t5._dy);
      } else {
        t5 = C.Offset_lerp(B.Offset_FK3, B.Offset_R50, (t - 0.5) * 2);
        t5.toString;
        path.moveTo$2(0, t3, t4);
        path.lineTo$2(0, t1 + 7.2, t2 + 12.6);
        path.lineTo$2(0, t1 + t5._dx, t2 + t5._dy);
      }
      canvas.drawPath$2(path, paint);
    },
    _drawDash$4(canvas, origin, t, paint) {
      var t1, t2;
      C.assertHelper(t >= 0 && t <= 1);
      t1 = C.Offset_lerp(B.Offset_5tR, B.Offset_9_9, 1 - t);
      t1.toString;
      t2 = C.Offset_lerp(B.Offset_9_9, B.Offset_ATs, t);
      t2.toString;
      canvas.drawLine$3(origin.$add(0, t1), origin.$add(0, t2), paint);
    },
    paint$2(canvas, size) {
      var t1, strokePaint, t2, origin, _0_0, t, outer, paint, tShrink, tExpand, _this = this;
      _this.paintRadialReaction$2$canvas$origin(canvas, size.center$1(D.Offset_0_0));
      t1 = $.$get$_renderer();
      strokePaint = t1.createPaint$0();
      t2 = _this._checkColor;
      t2.toString;
      strokePaint.set$color(0, t2);
      strokePaint.set$style(0, D.PaintingStyle_1);
      strokePaint.set$strokeWidth(2);
      origin = type$.Offset._as(size.$div(0, 2).$sub(0, B.Size_18_18.$div(0, 2)));
      t2 = _this._toggleable$_position.parent;
      _0_0 = t2.get$status(t2);
      $label0$0: {
        if (D.AnimationStatus_1 === _0_0 || D.AnimationStatus_3 === _0_0) {
          t2 = _this._toggleable$_position.get$value(0);
          break $label0$0;
        }
        if (D.AnimationStatus_2 === _0_0 || D.AnimationStatus_0 === _0_0) {
          t2 = 1 - _this._toggleable$_position.get$value(0);
          break $label0$0;
        }
        t2 = null;
      }
      if (_this._previousValue === false || _this._checkbox$_value === false) {
        t = _this._checkbox$_value === false ? 1 - t2 : t2;
        outer = _this._outerRectAt$2(origin, t);
        paint = t1.createPaint$0();
        paint.set$color(0, _this._colorAt$1(t));
        t1 = _this._activeSide;
        if (t <= 0.5) {
          t2 = _this._inactiveSide;
          t2.toString;
          t1.toString;
          _this._drawBox$4(canvas, outer, paint, C.BorderSide_lerp(t2, t1, t));
        } else {
          t1.toString;
          _this._drawBox$4(canvas, outer, paint, t1);
          tShrink = (t - 0.5) * 2;
          if (_this._previousValue == null || _this._checkbox$_value == null)
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
        }
      } else {
        outer = _this._outerRectAt$2(origin, 1);
        paint = t1.createPaint$0();
        paint.set$color(0, _this._colorAt$1(1));
        t1 = _this._activeSide;
        t1.toString;
        _this._drawBox$4(canvas, outer, paint, t1);
        if (t2 <= 0.5) {
          tShrink = 1 - t2 * 2;
          t1 = _this._previousValue;
          if (t1 === true)
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
        } else {
          tExpand = (t2 - 0.5) * 2;
          t1 = _this._checkbox$_value;
          if (t1 === true)
            _this._drawCheck$4(canvas, origin, tExpand, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tExpand, strokePaint);
        }
      }
    }
  };
  A._CheckboxDefaultsM3.prototype = {
    get$side() {
      return C._WidgetStateBorderSide$(new A._CheckboxDefaultsM3_side_closure(this));
    },
    get$fillColor() {
      return new C._WidgetStatePropertyWith(new A._CheckboxDefaultsM3_fillColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$checkColor() {
      return new C._WidgetStatePropertyWith(new A._CheckboxDefaultsM3_checkColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$overlayColor() {
      return new C._WidgetStatePropertyWith(new A._CheckboxDefaultsM3_overlayColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$splashRadius() {
      return 20;
    },
    get$materialTapTargetSize() {
      return this._checkbox$_theme.materialTapTargetSize;
    },
    get$visualDensity() {
      return this._checkbox$_theme.visualDensity;
    },
    get$shape(_) {
      return D.RoundedRectangleBorder_oPN;
    }
  };
  A.__CheckboxState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__CheckboxState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = C.AnimationController$(_null, D.Duration_200000, _null, !_this._widget.value ? 0 : 1, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__position_A = C.CurvedAnimation$(D.Cubic_Pa6, t1, D.Cubic_ts0);
      t1 = C.AnimationController$(_null, _this.ToggleableStateMixin__reactionAnimationDuration, _null, _null, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A = C.CurvedAnimation$(D.Cubic_Dkk, t1, _null);
      t1 = C.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = C.CurvedAnimation$(D.Cubic_Dkk, t1, _null);
      t1 = C.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = C.CurvedAnimation$(D.Cubic_Dkk, t1, _null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      t1 === $ && C.throwLateFieldNI("_positionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t1 === $ && C.throwLateFieldNI("_position");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && C.throwLateFieldNI("_reactionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t1 === $ && C.throwLateFieldNI("_reaction");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t1.dispose$0();
      _this.super$__CheckboxState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.CircleAvatar.prototype = {
    get$_minDiameter() {
      var t1 = this.radius;
      return 2 * t1;
    },
    get$_maxDiameter() {
      var t1 = this.radius;
      return 2 * t1;
    },
    build$1(context) {
      var theme, effectiveForegroundColor, t1, t2, textStyle, effectiveBackgroundColor, minDiameter, maxDiameter, t3, t4, _this = this, _null = null;
      C.debugCheckHasMediaQuery(context);
      theme = C.Theme_of(context);
      effectiveForegroundColor = _null;
      t1 = theme.colorScheme;
      t2 = t1._onPrimaryContainer;
      t1 = t2 == null ? t1.onPrimary : t2;
      effectiveForegroundColor = t1;
      textStyle = theme.textTheme.titleMedium.copyWith$1$color(effectiveForegroundColor);
      effectiveBackgroundColor = _this.backgroundColor;
      if (effectiveForegroundColor == null) {
        switch (C.ThemeData_estimateBrightnessForColor(effectiveBackgroundColor).index) {
          case 0:
            t1 = textStyle.copyWith$1$color(theme.primaryColorLight);
            break;
          case 1:
            t1 = textStyle.copyWith$1$color(theme.primaryColorDark);
            break;
          default:
            t1 = _null;
        }
        textStyle = t1;
      }
      minDiameter = _this.get$_minDiameter();
      maxDiameter = _this.get$_maxDiameter();
      t1 = new C.BoxConstraints(minDiameter, maxDiameter, minDiameter, maxDiameter);
      t2 = C.BoxDecoration$(_null, _null, _null, _null, effectiveBackgroundColor, _null, _null, D.BoxShape_1);
      t3 = theme.iconTheme.copyWith$1$color(textStyle.color);
      t3 = C.Center$(A.MediaQuery_withNoTextScaling(C.IconTheme$(C.DefaultTextStyle$(_this.child, _null, _null, D.TextOverflow_0, true, textStyle, _null, _null, D.TextWidthBasis_0), t3, _null)), _null, _null, _null);
      t2.debugAssertIsValid$0();
      t4 = t1.debugAssertIsValid$0();
      C.assertHelper(t4);
      return new A.AnimatedContainer(t3, t2, _null, t1, D.C__Linear, D.Duration_200000, _null, _null);
    }
  };
  A.Divider.prototype = {
    build$1(context) {
      var dividerTheme, defaults, height, thickness, t1, indent, endIndent, _null = null;
      C.Theme_of(context);
      dividerTheme = C.DividerTheme_of(context);
      defaults = C._DividerDefaultsM3$(context);
      height = 1;
      thickness = dividerTheme.thickness;
      if (thickness == null) {
        t1 = defaults.thickness;
        t1.toString;
        thickness = t1;
      }
      indent = dividerTheme.indent;
      if (indent == null) {
        t1 = defaults.indent;
        t1.toString;
        indent = t1;
      }
      endIndent = dividerTheme.endIndent;
      if (endIndent == null) {
        t1 = defaults.endIndent;
        t1.toString;
        endIndent = t1;
      }
      return new C.SizedBox(_null, height, C.Center$(C.Container$(_null, _null, D.Clip_0, _null, _null, C.BoxDecoration$(_null, new C.Border(D.BorderSide_Ah5, D.BorderSide_Ah5, C.Divider_createBorderSide(context, _null, thickness), D.BorderSide_Ah5), _null, _null, _null, _null, _null, D.BoxShape_0), _null, thickness, _null, new C.EdgeInsetsDirectional(indent, 0, endIndent, 0), _null, _null, _null, _null), _null, _null, _null), _null);
    }
  };
  A._RadioType.prototype = {
    _enumToString$0() {
      return "_RadioType." + this._name;
    }
  };
  A.Radio.prototype = {
    createState$0() {
      return new A._RadioState(new A._RadioPainter($.$get$ChangeNotifier__emptyListeners()), $, $, $, $, $, $, $, $, D.Duration_100000, $, null, false, false, null, null, D._StateLifecycle_0, this.$ti._eval$1("_RadioState<1>"));
    }
  };
  A._RadioState.prototype = {
    _radio$_handleChanged$1(selected) {
      var t1, _this = this;
      if (selected == null) {
        _this.$ti._eval$1("~(1?)?")._as(_this._widget.onChanged).call$1(null);
        return;
      }
      if (selected) {
        t1 = _this._widget;
        _this.$ti._eval$1("~(1?)?")._as(t1.onChanged).call$1(t1.value);
      }
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      _this.$ti._eval$1("Radio<1>")._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.value !== oldWidget.value)
        _this.animateToValue$0();
    },
    dispose$0() {
      this._radio$_painter.dispose$0();
      this.super$__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose();
    },
    get$onChanged() {
      this.$ti._eval$1("~(1?)?")._as(this._widget.onChanged);
      return this.get$_radio$_handleChanged();
    },
    get$tristate() {
      this._widget.toString;
      return false;
    },
    get$value(_) {
      return this._widget.value;
    },
    get$_radio$_widgetFillColor() {
      return new C._WidgetStatePropertyWith(new A._RadioState__widgetFillColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    build$1(context) {
      var radioTheme, defaults, effectiveMaterialTapTargetSize, effectiveVisualDensity, t1, size, activeStates, inactiveStates, t2, activeColor, t3, effectiveActiveColor, inactiveColor, t4, effectiveInactiveColor, focusedStates, t5, effectiveFocusOverlayColor, hoveredStates, effectiveHoverOverlayColor, effectiveActivePressedOverlayColor, effectiveInactivePressedOverlayColor, accessibilitySelected, _this = this, _null = null;
      C.debugCheckHasMaterial(context);
      _this._widget.toString;
      switch (0) {
        case 0:
          break;
      }
      context.dependOnInheritedWidgetOfExactType$1$0(type$.RadioTheme);
      radioTheme = C.Theme_of(context).radioTheme;
      C.Theme_of(context);
      defaults = new A._RadioDefaultsM3(context, _null, _null, _null, _null, _null, _null);
      effectiveMaterialTapTargetSize = _this._widget.materialTapTargetSize;
      effectiveVisualDensity = defaults.get$visualDensity();
      switch (effectiveMaterialTapTargetSize.index) {
        case 0:
          t1 = D.Size_48_48;
          break;
        case 1:
          t1 = D.Size_40_40;
          break;
        default:
          t1 = _null;
      }
      size = t1.$add(0, new C.Offset(effectiveVisualDensity.horizontal, effectiveVisualDensity.vertical).$mul(0, 4));
      activeStates = _this.get$states();
      activeStates.add$1(0, D.WidgetState_4);
      inactiveStates = _this.get$states();
      inactiveStates.remove$1(0, D.WidgetState_4);
      _this._widget.toString;
      t1 = _this.get$_radio$_widgetFillColor();
      t2 = type$.Set_WidgetState;
      t2._as(activeStates);
      activeColor = t1._resolve.call$1(activeStates);
      if (activeColor == null) {
        t1 = radioTheme.fillColor;
        activeColor = t1 == null ? _null : t1.resolve$1(activeStates);
      }
      t1 = activeColor == null;
      if (t1) {
        t3 = defaults.get$fillColor()._resolve.call$1(activeStates);
        t3.toString;
        effectiveActiveColor = t3;
      } else
        effectiveActiveColor = activeColor;
      _this._widget.toString;
      t3 = _this.get$_radio$_widgetFillColor();
      t2._as(inactiveStates);
      inactiveColor = t3._resolve.call$1(inactiveStates);
      if (inactiveColor == null) {
        t3 = radioTheme.fillColor;
        inactiveColor = t3 == null ? _null : t3.resolve$1(inactiveStates);
      }
      t3 = inactiveColor == null;
      if (t3) {
        t4 = defaults.get$fillColor()._resolve.call$1(inactiveStates);
        t4.toString;
        effectiveInactiveColor = t4;
      } else
        effectiveInactiveColor = inactiveColor;
      focusedStates = _this.get$states();
      focusedStates.add$1(0, D.WidgetState_1);
      _this._widget.toString;
      t4 = radioTheme.overlayColor;
      t5 = t4 == null ? _null : t4.resolve$1(focusedStates);
      effectiveFocusOverlayColor = t5;
      if (effectiveFocusOverlayColor == null) {
        t5 = defaults.get$overlayColor()._resolve.call$1(t2._as(focusedStates));
        t5.toString;
        effectiveFocusOverlayColor = t5;
      }
      hoveredStates = _this.get$states();
      hoveredStates.add$1(0, D.WidgetState_0);
      _this._widget.toString;
      t5 = t4 == null ? _null : t4.resolve$1(hoveredStates);
      effectiveHoverOverlayColor = t5;
      if (effectiveHoverOverlayColor == null) {
        t2 = defaults.get$overlayColor()._resolve.call$1(t2._as(hoveredStates));
        t2.toString;
        effectiveHoverOverlayColor = t2;
      }
      activeStates.add$1(0, D.WidgetState_2);
      _this._widget.toString;
      t2 = t4 == null ? _null : t4.resolve$1(activeStates);
      if (t2 == null) {
        t1 = t1 ? _null : activeColor.withAlpha$1(31);
        effectiveActivePressedOverlayColor = t1;
      } else
        effectiveActivePressedOverlayColor = t2;
      if (effectiveActivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(activeStates);
        t1.toString;
        effectiveActivePressedOverlayColor = t1;
      }
      inactiveStates.add$1(0, D.WidgetState_2);
      _this._widget.toString;
      t1 = t4 == null ? _null : t4.resolve$1(inactiveStates);
      if (t1 == null) {
        t1 = t3 ? _null : inactiveColor.withAlpha$1(31);
        effectiveInactivePressedOverlayColor = t1;
      } else
        effectiveInactivePressedOverlayColor = t1;
      if (effectiveInactivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(inactiveStates);
        t1.toString;
        effectiveInactivePressedOverlayColor = t1;
      }
      if (_this.ToggleableStateMixin__downPosition != null) {
        effectiveHoverOverlayColor = _this.get$states().contains$1(0, D.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
        effectiveFocusOverlayColor = _this.get$states().contains$1(0, D.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
      }
      accessibilitySelected = _null;
      switch (C.defaultTargetPlatform().index) {
        case 0:
        case 1:
        case 3:
        case 5:
          break;
        case 2:
        case 4:
          accessibilitySelected = _this._widget.value;
          break;
      }
      t1 = _this._widget.value;
      t2 = _this._radio$_painter;
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t3 === $ && C.throwLateFieldNI("_position");
      t2.set$position(0, t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t3 === $ && C.throwLateFieldNI("_reaction");
      t2.set$reaction(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t2.set$reactionFocusFade(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t2.set$reactionHoverFade(t3);
      t2.set$inactiveReactionColor(effectiveInactivePressedOverlayColor);
      t2.set$reactionColor(effectiveActivePressedOverlayColor);
      t2.set$hoverColor(effectiveHoverOverlayColor);
      t2.set$focusColor(effectiveFocusOverlayColor);
      _this._widget.toString;
      t3 = radioTheme.splashRadius;
      t2.set$splashRadius(t3 == null ? 20 : t3);
      t2.set$downPosition(_this.ToggleableStateMixin__downPosition);
      t2.set$isFocused(_this.get$states().contains$1(0, D.WidgetState_1));
      t2.set$isHovered(_this.get$states().contains$1(0, D.WidgetState_0));
      t2.set$activeColor(effectiveActiveColor);
      t2.set$inactiveColor(effectiveInactiveColor);
      t2 = _this.buildToggleable$5$autofocus$focusNode$mouseCursor$painter$size(false, _null, new C._WidgetStatePropertyWith(new A._RadioState_build_closure(_this, radioTheme), type$._WidgetStatePropertyWith_MouseCursor), t2, size);
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, accessibilitySelected, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t2, _null);
    },
    $isTickerProvider: 1
  };
  A._RadioPainter.prototype = {
    paint$2(canvas, size) {
      var center, paint, t1, t2, _this = this;
      _this.paintRadialReaction$2$canvas$origin(canvas, size.center$1(D.Offset_0_0));
      center = new C.Rect(0, 0, 0 + size._dx, 0 + size._dy).get$center();
      paint = $.$get$_renderer().createPaint$0();
      t1 = _this._inactiveColor;
      t1.toString;
      t2 = _this._activeColor;
      t2.toString;
      t2 = C.Color_lerp(t1, t2, _this._toggleable$_position.get$value(0));
      t2.toString;
      paint.set$color(0, t2);
      paint.set$style(0, D.PaintingStyle_1);
      paint.set$strokeWidth(2);
      canvas.drawCircle$3(center, 8, paint);
      if (_this._toggleable$_position.get$status(0) !== D.AnimationStatus_0) {
        paint.set$style(0, D.PaintingStyle_0);
        canvas.drawCircle$3(center, 4.5 * _this._toggleable$_position.get$value(0), paint);
      }
    }
  };
  A._RadioDefaultsM3.prototype = {
    get$_radio$_theme() {
      var result, _this = this,
        value = _this.___RadioDefaultsM3__theme_FI;
      if (value === $) {
        result = C.Theme_of(_this.context);
        _this.___RadioDefaultsM3__theme_FI !== $ && C.throwLateFieldADI("_theme");
        _this.___RadioDefaultsM3__theme_FI = result;
        value = result;
      }
      return value;
    },
    get$_radio$_colors() {
      var t1, _this = this,
        value = _this.___RadioDefaultsM3__colors_FI;
      if (value === $) {
        t1 = _this.get$_radio$_theme();
        _this.___RadioDefaultsM3__colors_FI !== $ && C.throwLateFieldADI("_colors");
        value = _this.___RadioDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$fillColor() {
      return new C._WidgetStatePropertyWith(new A._RadioDefaultsM3_fillColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$overlayColor() {
      return new C._WidgetStatePropertyWith(new A._RadioDefaultsM3_overlayColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$materialTapTargetSize() {
      return this.get$_radio$_theme().materialTapTargetSize;
    },
    get$visualDensity() {
      return this.get$_radio$_theme().visualDensity;
    }
  };
  A.__RadioState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__RadioState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = C.AnimationController$(_null, D.Duration_200000, _null, !_this._widget.value ? 0 : 1, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__position_A = C.CurvedAnimation$(D.Cubic_Pa6, t1, D.Cubic_ts0);
      t1 = C.AnimationController$(_null, _this.ToggleableStateMixin__reactionAnimationDuration, _null, _null, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A = C.CurvedAnimation$(D.Cubic_Dkk, t1, _null);
      t1 = C.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = C.CurvedAnimation$(D.Cubic_Dkk, t1, _null);
      t1 = C.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = C.CurvedAnimation$(D.Cubic_Dkk, t1, _null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      t1 === $ && C.throwLateFieldNI("_positionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t1 === $ && C.throwLateFieldNI("_position");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && C.throwLateFieldNI("_reactionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t1 === $ && C.throwLateFieldNI("_reaction");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t1.dispose$0();
      _this.super$__RadioState_State_TickerProviderStateMixin$dispose();
    }
  };
  A.RangeSlider.prototype = {
    createState$0() {
      return new A._RangeSliderState(new C.LayerLink(), null, null, D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      t1 = _this.values;
      properties.add$1(0, C.DoubleProperty$("valueStart", t1.start, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("valueEnd", t1.end, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      t1 = type$.void_Function_RangeValues;
      properties.add$1(0, C.ObjectFlagProperty$("onChanged", _this.onChanged, "disabled", _null, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onChangeStart", _this.onChangeStart, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onChangeEnd", _this.onChangeEnd, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.DoubleProperty$("min", _this.min, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("max", _this.max, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.IntProperty$("divisions", _this.divisions, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, C.StringProperty$("labelStart", _null, D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.StringProperty$("labelEnd", _null, D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.ColorProperty$("activeColor", _null, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, C.ColorProperty$("inactiveColor", _null, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, C.ObjectFlagProperty$has("semanticFormatterCallback", _null, D.DiagnosticLevel_3, type$.void_Function_double));
    }
  };
  A._RangeSliderState.prototype = {
    _range_slider$_handleHoverChanged$1(hovering) {
      if (hovering !== this._range_slider$_hovering)
        this.setState$1(new A._RangeSliderState__handleHoverChanged_closure(this, hovering));
    },
    initState$0() {
      var _this = this, _null = null;
      _this.super$State$initState();
      _this.___RangeSliderState_overlayController_A = C.AnimationController$(_null, D.Duration_100000, _null, _null, _this);
      _this.___RangeSliderState_valueIndicatorController_A = C.AnimationController$(_null, D.Duration_100000, _null, _null, _this);
      _this.___RangeSliderState_enableController_A = C.AnimationController$(_null, D.Duration_75000, _null, _this._widget.onChanged != null ? 1 : 0, _this);
      _this.___RangeSliderState_startPositionController_A = C.AnimationController$(_null, D.Duration_0, _null, _this._unlerp$1(_this._widget.values.start), _this);
      _this.___RangeSliderState_endPositionController_A = C.AnimationController$(_null, D.Duration_0, _null, _this._unlerp$1(_this._widget.values.end), _this);
    },
    didUpdateWidget$1(oldWidget) {
      var t1, isEnabled, _this = this,
        _s16_ = "enableController";
      type$.RangeSlider._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.onChanged;
      if (J.$eq$(t1, _this._widget.onChanged))
        return;
      isEnabled = _this._widget.onChanged != null;
      if (t1 != null !== isEnabled) {
        t1 = _this.___RangeSliderState_enableController_A;
        if (isEnabled) {
          t1 === $ && C.throwLateFieldNI(_s16_);
          t1.forward$0(0);
        } else {
          t1 === $ && C.throwLateFieldNI(_s16_);
          t1.reverse$0(0);
        }
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this.interactionTimer;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this.___RangeSliderState_overlayController_A;
      t1 === $ && C.throwLateFieldNI("overlayController");
      t1.dispose$0();
      t1 = _this.___RangeSliderState_valueIndicatorController_A;
      t1 === $ && C.throwLateFieldNI("valueIndicatorController");
      t1.dispose$0();
      t1 = _this.___RangeSliderState_enableController_A;
      t1 === $ && C.throwLateFieldNI("enableController");
      t1.dispose$0();
      t1 = _this.___RangeSliderState_startPositionController_A;
      t1 === $ && C.throwLateFieldNI("startPositionController");
      t1.dispose$0();
      t1 = _this.___RangeSliderState_endPositionController_A;
      t1 === $ && C.throwLateFieldNI("endPositionController");
      t1.dispose$0();
      t1 = _this.overlayEntry;
      if (t1 != null)
        t1.remove$0(0);
      t1 = _this.overlayEntry;
      if (t1 != null)
        t1.dispose$0();
      _this.overlayEntry = null;
      _this.super$__RangeSliderState_State_TickerProviderStateMixin$dispose();
    },
    _range_slider$_handleChanged$1(values) {
      var lerpValues, _this = this;
      type$.RangeValues._as(values);
      C.assertHelper(_this._widget.onChanged != null);
      lerpValues = _this._lerpRangeValues$1(values);
      if (!lerpValues.$eq(0, _this._widget.values))
        _this._widget.onChanged.call$1(lerpValues);
    },
    _lerpRangeValues$1(values) {
      var t3,
        t1 = this._widget,
        t2 = t1.min;
      t1 = t1.max;
      t3 = C.lerpDouble(t2, t1, values.start);
      t3.toString;
      t1 = C.lerpDouble(t2, t1, values.end);
      t1.toString;
      return new A.RangeValues(t3, t1);
    },
    _unlerp$1(value) {
      var t1, t2;
      C.assertHelper(value <= this._widget.max);
      C.assertHelper(value >= this._widget.min);
      t1 = this._widget;
      t2 = t1.max;
      t1 = t1.min;
      return t2 > t1 ? (value - t1) / (t2 - t1) : 0;
    },
    _defaultRangeThumbSelector$6(textDirection, values, tapValue, thumbSize, trackSize, dx) {
      var t1, touchRadius, t2, inStartTouchTarget, t3, inEndTouchTarget, _0_1, towardsEnd, _0_2, towardsStart, _null = null;
      type$.TextDirection._as(textDirection);
      type$.RangeValues._as(values);
      C._asDouble(tapValue);
      t1 = type$.Size;
      t1._as(thumbSize);
      t1._as(trackSize);
      C._asDouble(dx);
      touchRadius = Math.max(thumbSize._dx, 48) / 2;
      t1 = values.start;
      t2 = trackSize._dx;
      inStartTouchTarget = Math.abs(tapValue - t1) * t2 < touchRadius;
      t3 = values.end;
      inEndTouchTarget = Math.abs(tapValue - t3) * t2 < touchRadius;
      if (inStartTouchTarget && inEndTouchTarget) {
        switch (textDirection.index) {
          case 1:
            t1 = new C._Record_2(dx < 0, dx > 0);
            break;
          case 0:
            t1 = new C._Record_2(dx > 0, dx < 0);
            break;
          default:
            t1 = _null;
        }
        _0_1 = t1._0;
        towardsEnd = _null;
        _0_2 = t1._1;
        towardsEnd = _0_2;
        towardsStart = _0_1;
        if (C.boolConversionCheck(towardsStart))
          return B.Thumb_0;
        if (C.boolConversionCheck(towardsEnd))
          return B.Thumb_1;
      } else {
        if (tapValue < t1 || inStartTouchTarget)
          return B.Thumb_0;
        if (tapValue > t3 || inEndTouchTarget)
          return B.Thumb_1;
      }
      return _null;
    },
    build$1(context) {
      var theme, sliderTheme, t2, valueIndicatorShape, valueIndicatorColor, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, effectiveMouseCursor, fontSize, fontSizeToScale, _this = this, _null = null, t1 = {};
      C.debugCheckHasMaterial(context);
      C.debugCheckHasMediaQuery(context);
      theme = C.Theme_of(context);
      sliderTheme = t1.sliderTheme = A.SliderTheme_of(context);
      t2 = C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (_this._widget.onChanged == null)
        t2.add$1(0, D.WidgetState_6);
      if (_this._range_slider$_hovering)
        t2.add$1(0, D.WidgetState_0);
      if (_this._range_slider$_dragging)
        t2.add$1(0, D.WidgetState_3);
      valueIndicatorShape = sliderTheme.rangeValueIndicatorShape;
      if (valueIndicatorShape == null)
        valueIndicatorShape = B.C_RectangularRangeSliderValueIndicatorShape;
      valueIndicatorColor = sliderTheme.valueIndicatorColor;
      if (valueIndicatorColor == null) {
        t3 = theme.colorScheme;
        valueIndicatorColor = C.Color_alphaBlend(t3.onSurface.withOpacity$1(0.6), t3.surface.withOpacity$1(0.9));
      }
      t3 = sliderTheme.trackHeight;
      if (t3 == null)
        t3 = 4;
      _this._widget.toString;
      t4 = sliderTheme.activeTrackColor;
      if (t4 == null)
        t4 = theme.colorScheme.primary;
      t5 = sliderTheme.inactiveTrackColor;
      if (t5 == null)
        t5 = theme.colorScheme.primary.withOpacity$1(0.24);
      t6 = t1.sliderTheme.disabledActiveTrackColor;
      if (t6 == null)
        t6 = theme.colorScheme.onSurface.withOpacity$1(0.32);
      t7 = t1.sliderTheme.disabledInactiveTrackColor;
      if (t7 == null)
        t7 = theme.colorScheme.onSurface.withOpacity$1(0.12);
      _this._widget.toString;
      t8 = t1.sliderTheme.activeTickMarkColor;
      if (t8 == null)
        t8 = theme.colorScheme.onPrimary.withOpacity$1(0.54);
      _this._widget.toString;
      t9 = t1.sliderTheme.inactiveTickMarkColor;
      if (t9 == null)
        t9 = theme.colorScheme.primary.withOpacity$1(0.54);
      t10 = t1.sliderTheme.disabledActiveTickMarkColor;
      if (t10 == null)
        t10 = theme.colorScheme.onPrimary.withOpacity$1(0.12);
      t11 = t1.sliderTheme.disabledInactiveTickMarkColor;
      if (t11 == null)
        t11 = theme.colorScheme.onSurface.withOpacity$1(0.12);
      _this._widget.toString;
      t12 = t1.sliderTheme;
      t13 = t12.thumbColor;
      if (t13 == null)
        t13 = theme.colorScheme.primary;
      t14 = t12.overlappingShapeStrokeColor;
      if (t14 == null)
        t14 = theme.colorScheme.surface;
      t12 = t12.disabledThumbColor;
      if (t12 == null) {
        t12 = theme.colorScheme;
        t12 = C.Color_alphaBlend(t12.onSurface.withOpacity$1(0.38), t12.surface);
      }
      t15 = new A._RangeSliderState_build_effectiveOverlayColor(t1, _this, t2, theme).call$0();
      t16 = t1.sliderTheme;
      t17 = t16.rangeTrackShape;
      if (t17 == null)
        t17 = B.C_RoundedRectRangeSliderTrackShape;
      t18 = t16.rangeTickMarkShape;
      if (t18 == null)
        t18 = B.C_RoundRangeSliderTickMarkShape;
      t19 = t16.rangeThumbShape;
      if (t19 == null)
        t19 = B.C_RoundRangeSliderThumbShape;
      t20 = t16.overlayShape;
      if (t20 == null)
        t20 = B.C_RoundSliderOverlayShape;
      t21 = t16.showValueIndicator;
      if (t21 == null)
        t21 = B.ShowValueIndicator_0;
      t16 = t16.valueIndicatorTextStyle;
      if (t16 == null)
        t16 = theme.textTheme.bodyLarge.copyWith$1$color(theme.colorScheme.onPrimary);
      t22 = t1.sliderTheme;
      t23 = t22.minThumbSeparation;
      if (t23 == null)
        t23 = 8;
      t22 = t22.thumbSelector;
      t1.sliderTheme = sliderTheme.copyWith$23$activeTickMarkColor$activeTrackColor$disabledActiveTickMarkColor$disabledActiveTrackColor$disabledInactiveTickMarkColor$disabledInactiveTrackColor$disabledThumbColor$inactiveTickMarkColor$inactiveTrackColor$minThumbSeparation$overlappingShapeStrokeColor$overlayColor$overlayShape$rangeThumbShape$rangeTickMarkShape$rangeTrackShape$rangeValueIndicatorShape$showValueIndicator$thumbColor$thumbSelector$trackHeight$valueIndicatorColor$valueIndicatorTextStyle(t8, t4, t10, t6, t11, t7, t12, t9, t5, t23, t14, t15, t20, t19, t18, t17, valueIndicatorShape, t21, t13, t22 == null ? _this.get$_defaultRangeThumbSelector() : t22, t3, valueIndicatorColor, t16);
      _this._widget.toString;
      effectiveMouseCursor = C.WidgetStateMouseCursor__clickable(type$.Set_WidgetState._as(t2));
      effectiveMouseCursor = effectiveMouseCursor;
      t2 = t1.sliderTheme.valueIndicatorTextStyle;
      fontSize = t2 == null ? _null : t2.fontSize;
      if (fontSize == null)
        fontSize = 14;
      fontSizeToScale = fontSize === 0 ? 14 : fontSize;
      t2 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      t2 = t2 == null ? _null : t2.get$textScaler();
      t2 = (t2 == null ? D._LinearTextScaler_1 : t2).scale$1(0, fontSizeToScale);
      t3 = _this._widget;
      t4 = t3.onChanged;
      t3 = t3.values;
      t5 = _this._unlerp$1(t3.start);
      t3 = _this._unlerp$1(t3.end);
      t6 = _this._widget.divisions;
      t1 = t1.sliderTheme;
      t7 = new A._RangeSliderState_build_screenSize(context).call$0();
      t8 = _this._widget;
      t8 = t8.onChanged != null && t8.max > t8.min ? _this.get$_range_slider$_handleChanged() : _null;
      return C.FocusableActionDetector$(_null, false, new C.CompositedTransformTarget(_this._range_slider$_layerLink, new A._RangeSliderRenderObjectWidget(new A.RangeValues(t5, t3), t6, _null, t1, t2 / fontSizeToScale, t7, t8, _null, _null, _null, _this, _this._range_slider$_hovering, _null), _null), t4 != null, _null, false, effectiveMouseCursor, _null, _null, _this.get$_range_slider$_handleHoverChanged(), _null);
    },
    showValueIndicator$0() {
      var t1, t2, _this = this;
      if (_this.overlayEntry == null) {
        _this.overlayEntry = C.OverlayEntry$(new A._RangeSliderState_showValueIndicator_closure(_this), false, false);
        t1 = _this.get$context(0);
        t2 = _this._widget;
        t2.toString;
        t2 = C.Overlay_of(t1, t2, false);
        t1 = _this.overlayEntry;
        t1.toString;
        t2.insert$1(0, t1);
      }
    },
    $isTickerProvider: 1
  };
  A._RangeSliderRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.Theme_of(context),
        t2 = C.Directionality_of(context),
        t3 = C.Theme_of(context);
      C.debugCheckHasMediaQuery(context);
      return A._RenderRangeSlider$(_this.divisions, C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_18, type$.MediaQuery).data.gestureSettings, _this.hovering, _this.labels, _this.onChangeEnd, _this.onChangeStart, _this.onChanged, t3.platform, _this.screenSize, _this.semanticFormatterCallback, _this.sliderTheme, _this.state, t2, _this.textScaleFactor, t1, _this.values);
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2, _this = this;
      type$._RenderRangeSlider._as(renderObject);
      renderObject.set$divisions(_this.divisions);
      renderObject.set$values(0, _this.values);
      renderObject.set$labels(0, _this.labels);
      renderObject.set$sliderTheme(_this.sliderTheme);
      renderObject.set$theme(C.Theme_of(context));
      renderObject.set$textScaleFactor(_this.textScaleFactor);
      renderObject.set$screenSize(_this.screenSize);
      renderObject.set$onChanged(_this.onChanged);
      renderObject.set$onChangeStart(_this.onChangeStart);
      renderObject.set$onChangeEnd(_this.onChangeEnd);
      renderObject.set$textDirection(C.Directionality_of(context));
      renderObject.set$semanticFormatterCallback(_this.semanticFormatterCallback);
      renderObject.set$platform(0, C.Theme_of(context).platform);
      renderObject.set$hovering(_this.hovering);
      C.debugCheckHasMediaQuery(context);
      t1 = C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_18, type$.MediaQuery).data.gestureSettings;
      t2 = renderObject.___RenderRangeSlider__drag_A;
      t2 === $ && C.throwLateFieldNI("_drag");
      t2.gestureSettings = t1;
      t2 = renderObject.___RenderRangeSlider__tap_A;
      t2 === $ && C.throwLateFieldNI("_tap");
      t2.gestureSettings = t1;
    }
  };
  A._RenderRangeSlider.prototype = {
    _RenderRangeSlider$16$divisions$gestureSettings$hovering$labels$onChangeEnd$onChangeStart$onChanged$platform$screenSize$semanticFormatterCallback$sliderTheme$state$textDirection$textScaleFactor$theme$values(divisions, gestureSettings, hovering, labels, onChangeEnd, onChangeStart, onChanged, platform, screenSize, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, theme, values) {
      var team, t1, t2, _this = this, _null = null;
      _this._range_slider$_updateLabelPainter$1(B.Thumb_0);
      _this._range_slider$_updateLabelPainter$1(B.Thumb_1);
      team = new C.GestureArenaTeam(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._CombiningGestureArenaMember));
      t1 = C.HorizontalDragGestureRecognizer$(_null, _null);
      t1.set$team(team);
      t1.set$onStart(0, _this.get$_range_slider$_handleDragStart());
      t1.set$onUpdate(_this.get$_range_slider$_handleDragUpdate());
      t1.set$onEnd(0, _this.get$_range_slider$_handleDragEnd());
      t1.set$onCancel(0, _this.get$_range_slider$_handleDragCancel());
      t1.gestureSettings = gestureSettings;
      _this.___RenderRangeSlider__drag_A = t1;
      t1 = C.TapGestureRecognizer$(_null, _null);
      t1.set$team(team);
      t1.set$onTapDown(_this.get$_range_slider$_handleTapDown());
      t1.set$onTapUp(_this.get$_range_slider$_handleTapUp());
      t1.gestureSettings = gestureSettings;
      _this.___RenderRangeSlider__tap_A = t1;
      t1 = _this._range_slider$_state;
      t2 = t1.___RangeSliderState_overlayController_A;
      t2 === $ && C.throwLateFieldNI("overlayController");
      _this.___RenderRangeSlider__overlayAnimation_A = C.CurvedAnimation$(D.Cubic_Dkk, t2, _null);
      t2 = t1.___RangeSliderState_valueIndicatorController_A;
      t2 === $ && C.throwLateFieldNI("valueIndicatorController");
      t2 = C.CurvedAnimation$(D.Cubic_Dkk, t2, _null);
      t2.parent.addStatusListener$1(type$.void_Function_AnimationStatus._as(new A._RenderRangeSlider_closure(_this)));
      _this.___RenderRangeSlider__valueIndicatorAnimation_A = t2;
      t1 = t1.___RangeSliderState_enableController_A;
      t1 === $ && C.throwLateFieldNI("enableController");
      _this.___RenderRangeSlider__enableAnimation_A = C.CurvedAnimation$(D.Cubic_fC5, t1, _null);
    },
    get$_maxSliderPartWidth() {
      var t1 = this.get$_sliderPartSizes(),
        t2 = C._arrayInstanceType(t1);
      return new C.MappedListIterable(t1, t2._eval$1("double(1)")._as(new A._RenderRangeSlider__maxSliderPartWidth_closure()), t2._eval$1("MappedListIterable<1,double>")).reduce$1(0, D.CONSTANT1);
    },
    get$_maxSliderPartHeight() {
      var t1 = this.get$_sliderPartSizes(),
        t2 = C._arrayInstanceType(t1);
      return new C.MappedListIterable(t1, t2._eval$1("double(1)")._as(new A._RenderRangeSlider__maxSliderPartHeight_closure()), t2._eval$1("MappedListIterable<1,double>")).reduce$1(0, D.CONSTANT1);
    },
    get$_sliderPartSizes() {
      var t2, t3, t4, _this = this,
        t1 = _this._range_slider$_sliderTheme.overlayShape;
      t1.toString;
      t2 = _this._range_slider$_onChanged;
      t3 = _this._range_slider$_divisions;
      t3 = t3 != null && t3 > 0;
      t3 = t1.getPreferredSize$2(t2 != null, t3);
      t2 = _this._range_slider$_sliderTheme.rangeThumbShape;
      t2.toString;
      t1 = _this._range_slider$_onChanged;
      t4 = _this._range_slider$_divisions;
      t4 = t4 != null && t4 > 0;
      t4 = t2.getPreferredSize$2(t1 != null, t4);
      t1 = _this._range_slider$_sliderTheme;
      return C._setArrayType([t3, t4, t1.rangeTickMarkShape.getPreferredSize$2$isEnabled$sliderTheme(_this._range_slider$_onChanged != null, t1)], type$.JSArray_Size);
    },
    get$_range_slider$_trackRect() {
      var t1 = this._range_slider$_sliderTheme;
      return t1.rangeTrackShape.getPreferredRect$3$isDiscrete$parentBox$sliderTheme(false, this, t1);
    },
    get$_minThumbSeparationValue() {
      var t2,
        t1 = this._range_slider$_divisions;
      if (t1 != null && t1 > 0)
        t1 = 0;
      else {
        t1 = this._range_slider$_sliderTheme.minThumbSeparation;
        t1.toString;
        t2 = this.get$_range_slider$_trackRect();
        t2 = t1 / (t2.right - t2.left);
        t1 = t2;
      }
      return t1;
    },
    set$values(_, newValues) {
      var t2, convertedValues, t3, t4, startDistance, endDistance, _this = this,
        _s23_ = "startPositionController",
        _s21_ = "endPositionController",
        t1 = newValues.start;
      C.assertHelper(t1 >= 0 && t1 <= 1);
      t2 = newValues.end;
      C.assertHelper(t2 >= 0 && t2 <= 1);
      C.assertHelper(t1 <= t2);
      t1 = _this._range_slider$_divisions;
      convertedValues = t1 != null && t1 > 0 ? _this._discretizeRangeValues$1(newValues) : newValues;
      if (convertedValues.$eq(0, _this._range_slider$_values))
        return;
      _this._range_slider$_values = convertedValues;
      t1 = _this._range_slider$_divisions;
      t1 = t1 != null && t1 > 0;
      t2 = _this._range_slider$_state;
      t3 = convertedValues.start;
      t4 = t2.___RangeSliderState_startPositionController_A;
      if (t1) {
        t4 === $ && C.throwLateFieldNI(_s23_);
        t1 = t4.__AnimationController__value_A;
        t1 === $ && C.throwLateFieldNI("_value");
        startDistance = Math.abs(t3 - t1);
        t4.duration = startDistance !== 0 ? new C.Duration(D.JSNumber_methods.round$0(75000 * (1 / startDistance))) : D.Duration_0;
        t4.animateTo$2$curve(t3, D.Cubic_fC5);
        t1 = _this._range_slider$_values.end;
        t2 = t2.___RangeSliderState_endPositionController_A;
        t2 === $ && C.throwLateFieldNI(_s21_);
        t3 = t2.__AnimationController__value_A;
        t3 === $ && C.throwLateFieldNI("_value");
        endDistance = Math.abs(t1 - t3);
        t2.duration = endDistance !== 0 ? new C.Duration(D.JSNumber_methods.round$0(75000 * (1 / endDistance))) : D.Duration_0;
        t2.animateTo$2$curve(t1, D.Cubic_fC5);
      } else {
        t4 === $ && C.throwLateFieldNI(_s23_);
        t4.set$value(0, t3);
        t1 = t2.___RangeSliderState_endPositionController_A;
        t1 === $ && C.throwLateFieldNI(_s21_);
        t1.set$value(0, convertedValues.end);
      }
      _this.markNeedsSemanticsUpdate$0();
    },
    set$platform(_, value) {
      if (this._range_slider$_platform === value)
        return;
      this._range_slider$_platform = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$semanticFormatterCallback(value) {
      return;
    },
    set$divisions(value) {
      if (value == this._range_slider$_divisions)
        return;
      this._range_slider$_divisions = value;
      this.markNeedsPaint$0();
    },
    set$labels(_, labels) {
      return;
    },
    set$sliderTheme(value) {
      if (value.$eq(0, this._range_slider$_sliderTheme))
        return;
      this._range_slider$_sliderTheme = value;
      this.markNeedsPaint$0();
    },
    set$theme(value) {
      if (value.$eq(0, this._range_slider$_theme))
        return;
      this._range_slider$_theme = value;
      this.markNeedsPaint$0();
    },
    set$textScaleFactor(value) {
      var _this = this;
      if (value === _this._range_slider$_textScaleFactor)
        return;
      _this._range_slider$_textScaleFactor = value;
      _this._range_slider$_updateLabelPainter$1(B.Thumb_0);
      _this._range_slider$_updateLabelPainter$1(B.Thumb_1);
    },
    set$screenSize(value) {
      if (value.$eq(0, this._range_slider$_screenSize))
        return;
      this._range_slider$_screenSize = value;
      this.markNeedsPaint$0();
    },
    set$onChanged(value) {
      var t1, _this = this;
      type$.nullable_void_Function_RangeValues._as(value);
      if (J.$eq$(value, _this._range_slider$_onChanged))
        return;
      t1 = _this._range_slider$_onChanged;
      _this.set$_range_slider$_onChanged(value);
      if (t1 != null !== (_this._range_slider$_onChanged != null)) {
        _this.markNeedsPaint$0();
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    set$textDirection(value) {
      var _this = this;
      if (value === _this._range_slider$_textDirection)
        return;
      _this._range_slider$_textDirection = value;
      _this._range_slider$_updateLabelPainter$1(B.Thumb_0);
      _this._range_slider$_updateLabelPainter$1(B.Thumb_1);
    },
    set$hovering(value) {
      if (value === this._range_slider$_hovering)
        return;
      this._range_slider$_hovering = value;
      this._range_slider$_updateForHover$1(value);
    },
    set$hoveringStartThumb(value) {
      var _this = this;
      if (value === _this._hoveringStartThumb)
        return;
      _this._hoveringStartThumb = value;
      _this._range_slider$_updateForHover$1(_this._range_slider$_hovering);
    },
    set$hoveringEndThumb(value) {
      var _this = this;
      if (value === _this._hoveringEndThumb)
        return;
      _this._hoveringEndThumb = value;
      _this._range_slider$_updateForHover$1(_this._range_slider$_hovering);
    },
    _range_slider$_updateForHover$1(hovered) {
      var t1, t2,
        _s17_ = "overlayController";
      if (hovered)
        t1 = this._hoveringStartThumb || this._hoveringEndThumb;
      else
        t1 = false;
      t2 = this._range_slider$_state.___RangeSliderState_overlayController_A;
      if (t1) {
        t2 === $ && C.throwLateFieldNI(_s17_);
        t2.forward$0(0);
      } else {
        t2 === $ && C.throwLateFieldNI(_s17_);
        t2.reverse$0(0);
      }
    },
    get$showValueIndicator() {
      switch (this._range_slider$_sliderTheme.showValueIndicator.index) {
        case 0:
          var t1 = this._range_slider$_divisions;
          t1 = t1 != null && t1 > 0;
          break;
        case 1:
          t1 = this._range_slider$_divisions;
          t1 = !(t1 != null && t1 > 0);
          break;
        case 2:
          t1 = true;
          break;
        case 3:
          t1 = false;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_thumbSize() {
      var t2, t3,
        t1 = this._range_slider$_sliderTheme.rangeThumbShape;
      t1.toString;
      t2 = this._range_slider$_onChanged;
      t3 = this._range_slider$_divisions;
      t3 = t3 != null && t3 > 0;
      return t1.getPreferredSize$2(t2 != null, t3);
    },
    get$_range_slider$_adjustmentUnit() {
      switch (this._range_slider$_platform.index) {
        case 2:
          return 0.1;
        case 0:
        case 1:
        case 3:
        case 4:
        case 5:
          return 0.05;
      }
    },
    _range_slider$_updateLabelPainter$1(thumb) {
      return;
    },
    systemFontsDidChange$0() {
      var _this = this;
      _this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      _this._startLabelPainter.markNeedsLayout$0();
      _this._endLabelPainter.markNeedsLayout$0();
      _this._range_slider$_updateLabelPainter$1(B.Thumb_0);
      _this._range_slider$_updateLabelPainter$1(B.Thumb_1);
    },
    attach$1(owner) {
      var t1, t2, t3, _this = this;
      _this.super$__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach(owner);
      t1 = _this.___RenderRangeSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.addListener$1(0, t2);
      t1 = _this.___RenderRangeSlider__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.parent.addListener$1(0, t2);
      t1 = _this.___RenderRangeSlider__enableAnimation_A;
      t1 === $ && C.throwLateFieldNI("_enableAnimation");
      t1.parent.addListener$1(0, t2);
      t1 = _this._range_slider$_state;
      t3 = t1.___RangeSliderState_startPositionController_A;
      t3 === $ && C.throwLateFieldNI("startPositionController");
      t3.didRegisterListener$0();
      t3.AnimationLocalListenersMixin__listeners.add$1(0, t2);
      t1 = t1.___RangeSliderState_endPositionController_A;
      t1 === $ && C.throwLateFieldNI("endPositionController");
      t1.didRegisterListener$0();
      t1.AnimationLocalListenersMixin__listeners.add$1(0, t2);
    },
    detach$0(_) {
      var t2, t3, _this = this,
        t1 = _this.___RenderRangeSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.removeListener$1(0, t2);
      t1 = _this.___RenderRangeSlider__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.parent.removeListener$1(0, t2);
      t1 = _this.___RenderRangeSlider__enableAnimation_A;
      t1 === $ && C.throwLateFieldNI("_enableAnimation");
      t1.parent.removeListener$1(0, t2);
      t1 = _this._range_slider$_state;
      t3 = t1.___RangeSliderState_startPositionController_A;
      t3 === $ && C.throwLateFieldNI("startPositionController");
      t3.removeListener$1(0, t2);
      t1 = t1.___RangeSliderState_endPositionController_A;
      t1 === $ && C.throwLateFieldNI("endPositionController");
      t1.removeListener$1(0, t2);
      _this.super$__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach(0);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___RenderRangeSlider__drag_A;
      t1 === $ && C.throwLateFieldNI("_drag");
      t1._velocityTrackers.clear$0(0);
      t1.super$OneSequenceGestureRecognizer$dispose();
      t1 = _this.___RenderRangeSlider__tap_A;
      t1 === $ && C.throwLateFieldNI("_tap");
      t1._stopTimer$0();
      t1.super$OneSequenceGestureRecognizer$dispose();
      _this._startLabelPainter.dispose$0();
      _this._endLabelPainter.dispose$0();
      t1 = _this.___RenderRangeSlider__enableAnimation_A;
      t1 === $ && C.throwLateFieldNI("_enableAnimation");
      t1.dispose$0();
      t1 = _this.___RenderRangeSlider__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.dispose$0();
      t1 = _this.___RenderRangeSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      t1.dispose$0();
      _this.super$RenderObject$dispose();
    },
    _range_slider$_getValueFromVisualPosition$1(visualPosition) {
      var t1;
      switch (this._range_slider$_textDirection.index) {
        case 0:
          t1 = 1 - visualPosition;
          break;
        case 1:
          t1 = visualPosition;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _getValueFromGlobalPosition$1(globalPosition) {
      var _this = this,
        t1 = _this.globalToLocal$1(globalPosition),
        t2 = _this.get$_range_slider$_trackRect(),
        t3 = _this.get$_range_slider$_trackRect();
      return _this._range_slider$_getValueFromVisualPosition$1((t1._dx - t2.left) / (t3.right - t3.left));
    },
    _range_slider$_discretize$1(value) {
      var result = C.clampDouble(value, 0, 1),
        t1 = this._range_slider$_divisions;
      if (t1 != null && t1 > 0) {
        t1.toString;
        result = D.JSNumber_methods.round$0(result * t1) / t1;
      }
      return result;
    },
    _discretizeRangeValues$1(values) {
      return new A.RangeValues(this._range_slider$_discretize$1(values.start), this._range_slider$_discretize$1(values.end));
    },
    _range_slider$_startInteraction$1(globalPosition) {
      var t1, tapValue, t2, currentValues, t3, _this = this;
      if (_this._range_slider$_active)
        return;
      t1 = _this._range_slider$_state;
      t1.showValueIndicator$0();
      tapValue = C.clampDouble(_this._getValueFromGlobalPosition$1(globalPosition), 0, 1);
      t2 = _this._range_slider$_sliderTheme.thumbSelector;
      t2.toString;
      _this.set$_lastThumbSelection(t2.call$6(_this._range_slider$_textDirection, _this._range_slider$_values, tapValue, _this.get$_thumbSize(), _this.get$size(0), 0));
      if (_this._lastThumbSelection != null) {
        _this._range_slider$_active = true;
        currentValues = _this._discretizeRangeValues$1(_this._range_slider$_values);
        t2 = _this._lastThumbSelection;
        switch (t2.index) {
          case 0:
            t3 = new A.RangeValues(tapValue, currentValues.end);
            break;
          case 1:
            t3 = new A.RangeValues(currentValues.start, tapValue);
            break;
          default:
            t3 = null;
        }
        _this.___RenderRangeSlider__newValues_A = type$.RangeValues._as(t3);
        _this._range_slider$_updateLabelPainter$1(t2);
        t2 = _this.onChangeStart;
        if (t2 != null)
          t2.call$1(currentValues);
        t2 = _this._range_slider$_onChanged;
        t2.toString;
        t2.call$1(_this._discretizeRangeValues$1(_this.___RenderRangeSlider__newValues_A));
        t2 = t1.___RangeSliderState_overlayController_A;
        t2 === $ && C.throwLateFieldNI("overlayController");
        t2.forward$0(0);
        if (_this.get$showValueIndicator()) {
          t2 = t1.___RangeSliderState_valueIndicatorController_A;
          t2 === $ && C.throwLateFieldNI("valueIndicatorController");
          t2.forward$0(0);
          t2 = t1.interactionTimer;
          if (t2 != null)
            t2.cancel$0(0);
          t1.interactionTimer = C.Timer_Timer(new C.Duration(D.JSNumber_methods.round$0(500000 * $._timeDilation)), new A._RenderRangeSlider__startInteraction_closure(_this));
        }
      }
    },
    _range_slider$_handleDragUpdate$1(details) {
      var dragValue, t2, shouldCallOnChangeStart, currentValues, currentDragValue, _this = this,
        t1 = _this._range_slider$_state;
      if (t1._framework$_element == null)
        return;
      dragValue = _this._getValueFromGlobalPosition$1(details.globalPosition);
      if (_this._lastThumbSelection == null) {
        t2 = _this._range_slider$_sliderTheme.thumbSelector;
        t2.toString;
        _this.set$_lastThumbSelection(t2.call$6(_this._range_slider$_textDirection, _this._range_slider$_values, dragValue, _this.get$_thumbSize(), _this.get$size(0), details.delta._dx));
        shouldCallOnChangeStart = _this._lastThumbSelection != null;
        if (shouldCallOnChangeStart) {
          _this._range_slider$_active = true;
          t2 = t1.___RangeSliderState_overlayController_A;
          t2 === $ && C.throwLateFieldNI("overlayController");
          t2.forward$0(0);
          if (_this.get$showValueIndicator()) {
            t1 = t1.___RangeSliderState_valueIndicatorController_A;
            t1 === $ && C.throwLateFieldNI("valueIndicatorController");
            t1.forward$0(0);
          }
        }
      } else
        shouldCallOnChangeStart = false;
      if (_this._range_slider$_onChanged != null && _this._lastThumbSelection != null) {
        currentValues = _this._discretizeRangeValues$1(_this._range_slider$_values);
        t1 = _this.onChangeStart;
        if (t1 != null && shouldCallOnChangeStart)
          t1.call$1(currentValues);
        currentDragValue = _this._range_slider$_discretize$1(dragValue);
        switch (_this._lastThumbSelection.index) {
          case 0:
            t1 = currentValues.end;
            t1 = new A.RangeValues(Math.min(currentDragValue, t1 - _this.get$_minThumbSeparationValue()), t1);
            break;
          case 1:
            t1 = currentValues.start;
            t1 = new A.RangeValues(t1, Math.max(currentDragValue, t1 + _this.get$_minThumbSeparationValue()));
            break;
          default:
            t1 = null;
        }
        type$.RangeValues._as(t1);
        _this.___RenderRangeSlider__newValues_A = t1;
        _this._range_slider$_onChanged.call$1(t1);
      }
    },
    _range_slider$_endInteraction$0() {
      var t2, discreteValues, _this = this,
        t1 = _this._range_slider$_state;
      if (t1._framework$_element == null)
        return;
      if (_this.get$showValueIndicator() && t1.interactionTimer == null) {
        t2 = t1.___RangeSliderState_valueIndicatorController_A;
        t2 === $ && C.throwLateFieldNI("valueIndicatorController");
        t2.reverse$0(0);
      }
      if (_this._range_slider$_active && t1._framework$_element != null && _this._lastThumbSelection != null) {
        t2 = _this.___RenderRangeSlider__newValues_A;
        t2 === $ && C.throwLateFieldNI("_newValues");
        discreteValues = _this._discretizeRangeValues$1(t2);
        t2 = _this.onChangeEnd;
        if (t2 != null)
          t2.call$1(discreteValues);
        _this._range_slider$_active = false;
      }
      t1 = t1.___RangeSliderState_overlayController_A;
      t1 === $ && C.throwLateFieldNI("overlayController");
      t1.reverse$0(0);
    },
    _range_slider$_handleDragStart$1(details) {
      this._range_slider$_startInteraction$1(details.globalPosition);
    },
    _range_slider$_handleDragEnd$1(details) {
      this._range_slider$_endInteraction$0();
    },
    _range_slider$_handleDragCancel$0() {
      this._range_slider$_endInteraction$0();
    },
    _range_slider$_handleTapDown$1(details) {
      this._range_slider$_startInteraction$1(details.globalPosition);
    },
    _range_slider$_handleTapUp$1(details) {
      this._range_slider$_endInteraction$0();
    },
    hitTestSelf$1(position) {
      return true;
    },
    handleEvent$2($event, entry) {
      var t1, _this = this;
      _this.debugHandleEvent$2($event, type$.HitTestEntry_HitTestTarget._as(entry));
      if (type$.PointerDownEvent._is($event) && _this._range_slider$_onChanged != null) {
        t1 = _this.___RenderRangeSlider__drag_A;
        t1 === $ && C.throwLateFieldNI("_drag");
        t1.addPointer$1($event);
        t1 = _this.___RenderRangeSlider__tap_A;
        t1 === $ && C.throwLateFieldNI("_tap");
        t1.addPointer$1($event);
      }
      if (_this._range_slider$_onChanged != null) {
        t1 = _this.overlayStartRect;
        if (t1 != null)
          _this.set$hoveringStartThumb(t1.contains$1(0, $event.get$localPosition()));
        t1 = _this.overlayEndRect;
        if (t1 != null)
          _this.set$hoveringEndThumb(t1.contains$1(0, $event.get$localPosition()));
      }
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 144 + this.get$_maxSliderPartWidth();
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 144 + this.get$_maxSliderPartWidth();
    },
    computeMinIntrinsicHeight$1(width) {
      var t1;
      C._asDouble(width);
      t1 = this._range_slider$_sliderTheme.trackHeight;
      t1.toString;
      return Math.max(t1, this.get$_maxSliderPartHeight());
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1;
      C._asDouble(width);
      t1 = this._range_slider$_sliderTheme.trackHeight;
      t1.toString;
      return Math.max(t1, this.get$_maxSliderPartHeight());
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      var t2,
        t1 = constraints.maxWidth;
      t1 = t1 < 1 / 0 ? t1 : 144 + this.get$_maxSliderPartWidth();
      t2 = constraints.maxHeight;
      if (!(t2 < 1 / 0)) {
        t2 = this._range_slider$_sliderTheme.trackHeight;
        t2.toString;
        t2 = Math.max(t2, this.get$_maxSliderPartHeight());
      }
      return new C.Size(t1, t2);
    },
    paint$2(context, offset) {
      var t3, _0_1, endVisualPosition, _0_2, t4, t5, trackRect, padding, thumbYOffset, t6, t7, t8, startThumbPosition, endThumbPosition, thumbPadding, overlaySize, t9, t10, t11, startThumbSelected, endThumbSelected, resolvedscreenSize, adjustedTrackWidth, dy, i, topThumbCenter, topThumbCenter0, isLastThumbStart, bottomThumb, topThumb, bottomThumbCenter, topThumbCenter1, _this = this,
        t1 = _this._range_slider$_state,
        t2 = t1.___RangeSliderState_startPositionController_A;
      t2 === $ && C.throwLateFieldNI("startPositionController");
      t2 = t2.__AnimationController__value_A;
      t2 === $ && C.throwLateFieldNI("_value");
      t1 = t1.___RangeSliderState_endPositionController_A;
      t1 === $ && C.throwLateFieldNI("endPositionController");
      t1 = t1.__AnimationController__value_A;
      t1 === $ && C.throwLateFieldNI("_value");
      switch (_this._range_slider$_textDirection.index) {
        case 0:
          t3 = new C._Record_2(1 - t2, 1 - t1);
          break;
        case 1:
          t3 = new C._Record_2(t2, t1);
          break;
        default:
          t3 = null;
      }
      _0_1 = t3._0;
      endVisualPosition = null;
      _0_2 = t3._1;
      endVisualPosition = _0_2;
      t3 = _this._range_slider$_sliderTheme;
      t4 = t3.rangeTrackShape;
      t4.toString;
      t5 = _this._range_slider$_divisions;
      trackRect = t4.getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(t5 != null && t5 > 0, offset, _this, t3);
      t3 = _this._range_slider$_divisions;
      padding = t3 != null && t3 > 0 || _this._range_slider$_sliderTheme.rangeTrackShape.get$isRounded() ? trackRect.bottom - trackRect.top : 0;
      thumbYOffset = trackRect.get$center()._dy;
      t3 = _this._range_slider$_divisions;
      t4 = t3 != null;
      t5 = t4 && t3 > 0;
      t6 = trackRect.left;
      t7 = trackRect.right;
      t8 = t7 - t6;
      if (t5) {
        if (typeof _0_1 !== "number")
          return _0_1.$mul();
        startThumbPosition = t6 + _0_1 * (t8 - padding) + padding / 2;
      } else {
        if (typeof _0_1 !== "number")
          return _0_1.$mul();
        startThumbPosition = t6 + _0_1 * t8;
      }
      t5 = t4 && t3 > 0;
      t8 = t7 - t6;
      if (t5) {
        if (typeof endVisualPosition !== "number")
          return endVisualPosition.$mul();
        endThumbPosition = t6 + endVisualPosition * (t8 - padding) + padding / 2;
      } else {
        if (typeof endVisualPosition !== "number")
          return endVisualPosition.$mul();
        endThumbPosition = t6 + endVisualPosition * t8;
      }
      t5 = _this._range_slider$_sliderTheme.rangeThumbShape;
      t5.toString;
      t8 = _this._range_slider$_onChanged;
      t3 = t4 && t3 > 0;
      thumbPadding = padding > t5.getPreferredSize$2(t8 != null, t3)._dx / 2 ? padding / 2 : 0;
      t3 = t6 + thumbPadding;
      t4 = t7 - thumbPadding;
      t5 = _this._startThumbCenter = new C.Offset(C.clampDouble(startThumbPosition, t3, t4), thumbYOffset);
      t4 = _this._endThumbCenter = new C.Offset(C.clampDouble(endThumbPosition, t3, t4), thumbYOffset);
      if (_this._range_slider$_onChanged != null) {
        overlaySize = _this._range_slider$_sliderTheme.overlayShape.getPreferredSize$2(true, false);
        t3 = _this._startThumbCenter;
        t4 = overlaySize._dx / 2;
        _this.overlayStartRect = C.Rect$fromCircle(t3, t4);
        t5 = _this._endThumbCenter;
        _this.overlayEndRect = C.Rect$fromCircle(t5, t4);
        t4 = t5;
      } else
        t3 = t5;
      t5 = _this._range_slider$_sliderTheme;
      t8 = t5.rangeTrackShape;
      t8.toString;
      t9 = _this.___RenderRangeSlider__enableAnimation_A;
      t9 === $ && C.throwLateFieldNI("_enableAnimation");
      t10 = _this._range_slider$_textDirection;
      t11 = _this._range_slider$_divisions;
      t11 = t11 != null && t11 > 0;
      t8.paint$10$enableAnimation$endThumbCenter$isDiscrete$isEnabled$parentBox$sliderTheme$startThumbCenter$textDirection(context, offset, t9, t4, t11, _this._range_slider$_onChanged != null, _this, t5, t3, t10);
      t10 = _this._lastThumbSelection;
      startThumbSelected = t10 === B.Thumb_0;
      endThumbSelected = t10 === B.Thumb_1;
      resolvedscreenSize = _this._range_slider$_screenSize.get$isEmpty(0) ? _this.get$size(0) : _this._range_slider$_screenSize;
      t3 = _this.___RenderRangeSlider__overlayAnimation_A;
      t3 === $ && C.throwLateFieldNI("_overlayAnimation");
      if (t3.get$status(0) !== D.AnimationStatus_0) {
        if (startThumbSelected || _this._hoveringStartThumb) {
          t3 = _this._range_slider$_sliderTheme;
          t4 = t3.overlayShape;
          t4.toString;
          t5 = _this._startThumbCenter;
          t8 = _this.___RenderRangeSlider__overlayAnimation_A;
          t9 = _this.___RenderRangeSlider__enableAnimation_A;
          t10 = _this._range_slider$_divisions;
          t10 = t10 != null && t10 > 0;
          t4.paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, t5, t8, t9, t10, _this._startLabelPainter, _this, resolvedscreenSize, t3, _this._range_slider$_textDirection, _this._range_slider$_textScaleFactor, t2);
        }
        if (endThumbSelected || _this._hoveringEndThumb) {
          t2 = _this._range_slider$_sliderTheme;
          t3 = t2.overlayShape;
          t3.toString;
          t4 = _this._endThumbCenter;
          t5 = _this.___RenderRangeSlider__overlayAnimation_A;
          t8 = _this.___RenderRangeSlider__enableAnimation_A;
          t9 = _this._range_slider$_divisions;
          t9 = t9 != null && t9 > 0;
          t3.paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, t4, t5, t8, t9, _this._endLabelPainter, _this, resolvedscreenSize, t2, _this._range_slider$_textDirection, _this._range_slider$_textScaleFactor, t1);
        }
      }
      t1 = _this._range_slider$_divisions;
      if (t1 != null && t1 > 0) {
        t1 = _this._range_slider$_sliderTheme;
        t1 = t1.rangeTickMarkShape.getPreferredSize$2$isEnabled$sliderTheme(_this._range_slider$_onChanged != null, t1);
        padding = trackRect.bottom - trackRect.top;
        adjustedTrackWidth = t7 - t6 - padding;
        t2 = _this._range_slider$_divisions;
        t2.toString;
        if (adjustedTrackWidth / t2 >= 3 * t1._dx) {
          dy = trackRect.get$center()._dy;
          t1 = padding / 2;
          i = 0;
          while (true) {
            t2 = _this._range_slider$_divisions;
            t2.toString;
            if (!(i <= t2))
              break;
            t3 = _this._range_slider$_sliderTheme;
            t4 = _this.___RenderRangeSlider__enableAnimation_A;
            t5 = _this._range_slider$_textDirection;
            t7 = _this._startThumbCenter;
            t3.rangeTickMarkShape.paint$9$enableAnimation$endThumbCenter$isEnabled$parentBox$sliderTheme$startThumbCenter$textDirection(context, new C.Offset(t6 + i / t2 * adjustedTrackWidth + t1, dy), t4, _this._endThumbCenter, _this._range_slider$_onChanged != null, _this, t3, t7, t5);
            ++i;
          }
        }
      }
      topThumbCenter = _this._endThumbCenter;
      topThumbCenter0 = _this._startThumbCenter;
      isLastThumbStart = _this._lastThumbSelection === B.Thumb_0;
      bottomThumb = isLastThumbStart ? B.Thumb_1 : B.Thumb_0;
      topThumb = isLastThumbStart ? B.Thumb_0 : B.Thumb_1;
      bottomThumbCenter = isLastThumbStart ? topThumbCenter : topThumbCenter0;
      topThumbCenter1 = isLastThumbStart ? topThumbCenter0 : topThumbCenter;
      t1 = _this._range_slider$_sliderTheme;
      t2 = t1.rangeThumbShape;
      t2.toString;
      t3 = _this.___RenderRangeSlider__valueIndicatorAnimation_A;
      t3 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t4 = _this.___RenderRangeSlider__enableAnimation_A;
      t5 = _this._range_slider$_divisions;
      t5 = t5 != null && t5 > 0;
      t6 = _this._range_slider$_textDirection;
      t2.paint$10$activationAnimation$enableAnimation$isDiscrete$isOnTop$isPressed$sliderTheme$textDirection$thumb(context, bottomThumbCenter, t3, t4, t5, false, bottomThumb === B.Thumb_0 ? startThumbSelected : endThumbSelected, t1, t6, bottomThumb);
      t1 = _this._range_slider$_sliderTheme.rangeThumbShape;
      t1.toString;
      t2 = _this.___RenderRangeSlider__overlayAnimation_A;
      t3 = _this.___RenderRangeSlider__enableAnimation_A;
      t4 = _this._range_slider$_divisions;
      t5 = t4 != null;
      t6 = t5 && t4 > 0;
      t7 = _this._range_slider$_onChanged;
      t4 = t5 && t4 > 0;
      t4 = t1.getPreferredSize$2(t7 != null, t4);
      t7 = _this._range_slider$_textDirection;
      t5 = _this._range_slider$_sliderTheme;
      t8 = topThumb === B.Thumb_0 ? startThumbSelected : endThumbSelected;
      t1.paint$10$activationAnimation$enableAnimation$isDiscrete$isOnTop$isPressed$sliderTheme$textDirection$thumb(context, topThumbCenter1, t2, t3, t6, Math.abs(topThumbCenter._dx - topThumbCenter0._dx) < t4._dx, t8, t5, t7, topThumb);
    },
    _createSemanticsConfiguration$5(value, increasedValue, decreasedValue, increaseAction, decreaseAction) {
      var config,
        t1 = type$.void_Function;
      t1._as(increaseAction);
      t1._as(decreaseAction);
      config = C.SemanticsConfiguration$();
      t1 = this._range_slider$_onChanged;
      config._setFlag$2(D.SemanticsFlag_64_hasEnabledState, true);
      config._setFlag$2(D.SemanticsFlag_128_isEnabled, t1 != null);
      config._textDirection = this._range_slider$_textDirection;
      config._hasBeenAnnotated = true;
      config._setFlag$2(D.SemanticsFlag_8388608_isSlider, true);
      if (this._range_slider$_onChanged != null) {
        config.set$onIncrease(increaseAction);
        config.set$onDecrease(decreaseAction);
      }
      config._attributedValue = C.AttributedString$("" + D.JSNumber_methods.round$0(value * 100) + "%", D.List_empty1);
      config._hasBeenAnnotated = true;
      config._attributedIncreasedValue = C.AttributedString$("" + D.JSNumber_methods.round$0(increasedValue * 100) + "%", D.List_empty1);
      config._hasBeenAnnotated = true;
      config._attributedDecreasedValue = C.AttributedString$("" + D.JSNumber_methods.round$0(decreasedValue * 100) + "%", D.List_empty1);
      config._hasBeenAnnotated = true;
      return config;
    },
    assembleSemanticsNode$3(node, config, children) {
      var startSemanticsConfiguration, endSemanticsConfiguration, leftRect, rightRect, t1, t2, _this = this, _null = null;
      C.assertHelper(type$.Iterable_SemanticsNode._as(children).length === 0);
      startSemanticsConfiguration = _this._createSemanticsConfiguration$5(_this._range_slider$_values.start, _this.get$_increasedStartValue(), _this.get$_decreasedStartValue(), _this.get$_increaseStartAction(), _this.get$_decreaseStartAction());
      endSemanticsConfiguration = _this._createSemanticsConfiguration$5(_this._range_slider$_values.end, _this.get$_increasedEndValue(), _this.get$_decreasedEndValue(), _this.get$_increaseEndAction(), _this.get$_decreaseEndAction());
      leftRect = C.Rect$fromCenter(_this._startThumbCenter, 48, 48);
      rightRect = C.Rect$fromCenter(_this._endThumbCenter, 48, 48);
      if (_this._startSemanticsNode == null)
        _this._startSemanticsNode = C.SemanticsNode$(_null, _null);
      if (_this._endSemanticsNode == null)
        _this._endSemanticsNode = C.SemanticsNode$(_null, _null);
      switch (_this._range_slider$_textDirection.index) {
        case 1:
          _this._startSemanticsNode.set$rect(0, leftRect);
          _this._endSemanticsNode.set$rect(0, rightRect);
          break;
        case 0:
          _this._startSemanticsNode.set$rect(0, rightRect);
          _this._endSemanticsNode.set$rect(0, leftRect);
          break;
      }
      _this._startSemanticsNode.updateWith$1$config(0, startSemanticsConfiguration);
      _this._endSemanticsNode.updateWith$1$config(0, endSemanticsConfiguration);
      t1 = _this._startSemanticsNode;
      t1.toString;
      t2 = _this._endSemanticsNode;
      t2.toString;
      node.updateWith$2$childrenInInversePaintOrder$config(0, C._setArrayType([t1, t2], type$.JSArray_SemanticsNode), config);
    },
    clearSemantics$0() {
      this.super$RenderObject$clearSemantics();
      this._endSemanticsNode = this._startSemanticsNode = null;
    },
    describeSemanticsConfiguration$1(config) {
      this.super$RenderObject$describeSemanticsConfiguration(config);
      config._isSemanticBoundary = true;
    },
    get$_range_slider$_semanticActionUnit() {
      var t1 = this._range_slider$_divisions;
      return t1 != null ? 1 / t1 : this.get$_range_slider$_adjustmentUnit();
    },
    _increaseStartAction$0() {
      var t1 = this._range_slider$_onChanged;
      if (t1 != null)
        t1.call$1(new A.RangeValues(this.get$_increasedStartValue(), this._range_slider$_values.end));
    },
    _decreaseStartAction$0() {
      var t1 = this._range_slider$_onChanged;
      if (t1 != null)
        t1.call$1(new A.RangeValues(this.get$_decreasedStartValue(), this._range_slider$_values.end));
    },
    _increaseEndAction$0() {
      var t1 = this._range_slider$_onChanged;
      if (t1 != null)
        t1.call$1(new A.RangeValues(this._range_slider$_values.start, this.get$_increasedEndValue()));
    },
    _decreaseEndAction$0() {
      var t1 = this._range_slider$_onChanged;
      if (t1 != null)
        t1.call$1(new A.RangeValues(this._range_slider$_values.start, this.get$_decreasedEndValue()));
    },
    get$_increasedStartValue() {
      var _this = this,
        increasedStartValue = C.double_parse(D.JSNumber_methods.toStringAsFixed$1(_this._range_slider$_values.start + _this.get$_range_slider$_semanticActionUnit(), 2));
      return increasedStartValue <= _this._range_slider$_values.end - _this.get$_minThumbSeparationValue() ? increasedStartValue : _this._range_slider$_values.start;
    },
    get$_decreasedStartValue() {
      return C.clampDouble(this._range_slider$_values.start - this.get$_range_slider$_semanticActionUnit(), 0, 1);
    },
    get$_increasedEndValue() {
      return C.clampDouble(this._range_slider$_values.end + this.get$_range_slider$_semanticActionUnit(), 0, 1);
    },
    get$_decreasedEndValue() {
      var _this = this,
        decreasedEndValue = _this._range_slider$_values.end - _this.get$_range_slider$_semanticActionUnit();
      return decreasedEndValue >= _this._range_slider$_values.start + _this.get$_minThumbSeparationValue() ? decreasedEndValue : _this._range_slider$_values.end;
    },
    set$_lastThumbSelection(_lastThumbSelection) {
      this._lastThumbSelection = type$.nullable_Thumb._as(_lastThumbSelection);
    },
    set$_range_slider$_onChanged(_onChanged) {
      this._range_slider$_onChanged = type$.nullable_void_Function_RangeValues._as(_onChanged);
    },
    set$onChangeStart(onChangeStart) {
      this.onChangeStart = type$.nullable_void_Function_RangeValues._as(onChangeStart);
    },
    set$onChangeEnd(onChangeEnd) {
      this.onChangeEnd = type$.nullable_void_Function_RangeValues._as(onChangeEnd);
    }
  };
  A._ValueIndicatorRenderObjectWidget0.prototype = {
    createRenderObject$1(context) {
      var t2,
        t1 = new A._RenderValueIndicator0(this.state, false, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t2 = t1.___RenderValueIndicator__state_A;
      t2 === $ && C.throwLateFieldNI("_state");
      t2 = t2.___RangeSliderState_valueIndicatorController_A;
      t2 === $ && C.throwLateFieldNI("valueIndicatorController");
      t1._range_slider$___RenderValueIndicator__valueIndicatorAnimation_A = C.CurvedAnimation$(D.Cubic_Dkk, t2, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderValueIndicator._as(renderObject).___RenderValueIndicator__state_A = this.state;
    }
  };
  A._RenderValueIndicator0.prototype = {
    get$sizedByParent() {
      return true;
    },
    attach$1(owner) {
      var t1, t2, _this = this;
      _this.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach0(owner);
      t1 = _this._range_slider$___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.addListener$1(0, t2);
      t1 = _this.___RenderValueIndicator__state_A;
      t1 === $ && C.throwLateFieldNI("_state");
      t1 = t1.___RangeSliderState_startPositionController_A;
      t1 === $ && C.throwLateFieldNI("startPositionController");
      t1.didRegisterListener$0();
      t1.AnimationLocalListenersMixin__listeners.add$1(0, t2);
      t1 = _this.___RenderValueIndicator__state_A.___RangeSliderState_endPositionController_A;
      t1 === $ && C.throwLateFieldNI("endPositionController");
      t1.didRegisterListener$0();
      t1.AnimationLocalListenersMixin__listeners.add$1(0, t2);
    },
    detach$0(_) {
      var t2, _this = this,
        t1 = _this._range_slider$___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.removeListener$1(0, t2);
      t1 = _this.___RenderValueIndicator__state_A;
      t1 === $ && C.throwLateFieldNI("_state");
      t1 = t1.___RangeSliderState_startPositionController_A;
      t1 === $ && C.throwLateFieldNI("startPositionController");
      t1.removeListener$1(0, t2);
      t1 = _this.___RenderValueIndicator__state_A.___RangeSliderState_endPositionController_A;
      t1 === $ && C.throwLateFieldNI("endPositionController");
      t1.removeListener$1(0, t2);
      _this.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach0(0);
    },
    paint$2(context, offset) {
      var t1 = this.___RenderValueIndicator__state_A;
      t1 === $ && C.throwLateFieldNI("_state");
      t1 = t1.paintBottomValueIndicator;
      if (t1 != null)
        t1.call$2(context, offset);
      t1 = this.___RenderValueIndicator__state_A.paintTopValueIndicator;
      if (t1 != null)
        t1.call$2(context, offset);
    },
    computeDryLayout$1(constraints) {
      return new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0));
    },
    dispose$0() {
      var t1 = this._range_slider$___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.dispose$0();
      this.super$RenderObject$dispose();
    }
  };
  A.__RangeSliderState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__RangeSliderState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
    },
    detach$0(_) {
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
      this.super$RenderObject$detach(0);
    }
  };
  A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
    },
    detach$0(_) {
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
      this.super$RenderObject$detach(0);
    }
  };
  A._TextSpanEditingController.prototype = {
    buildTextSpan$3$context$style$withComposing(context, style, withComposing) {
      return C.TextSpan$(C._setArrayType([this._textSpan], type$.JSArray_TextSpan), style, null);
    },
    set$text(_, newText) {
      throw C.wrapException(C.UnimplementedError$(null));
    }
  };
  A._SelectableTextSelectionGestureDetectorBuilder.prototype = {
    onSingleTapUp$1(details) {
      type$.TapDragUpDetails._as(details);
      if (!this.delegate.get$selectionEnabled())
        return;
      this.super$TextSelectionGestureDetectorBuilder$onSingleTapUp(details);
      this._selectable_text$_state._widget.toString;
    }
  };
  A.SelectableText.prototype = {
    createState$0() {
      return new A._SelectableTextState(new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_EditableTextState), D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _null = null;
      this.super$Widget$debugFillProperties(properties);
      t1 = type$.String;
      properties.add$1(0, C.DiagnosticsProperty$("data", this.data, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("semanticsLabel", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("focusNode", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FocusNode));
      properties.add$1(0, C.DiagnosticsProperty$("style", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextStyle));
      t1 = type$.bool;
      properties.add$1(0, C.DiagnosticsProperty$("autofocus", false, true, false, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("showCursor", false, true, false, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.IntProperty$("minLines", _null, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, C.IntProperty$("maxLines", _null, _null, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, C.EnumProperty$("textAlign", _null, _null, D.DiagnosticLevel_3, type$.TextAlign));
      properties.add$1(0, C.EnumProperty$("textDirection", _null, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, C.DoubleProperty$("textScaleFactor", _null, _null, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DiagnosticsProperty$("textScaler", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextScaler));
      properties.add$1(0, C.DoubleProperty$("cursorWidth", 2, 2, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("cursorHeight", _null, _null, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DiagnosticsProperty$("cursorRadius", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Radius));
      properties.add$1(0, C.DiagnosticsProperty$("cursorColor", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Color));
      properties.add$1(0, C.FlagProperty$("selectionEnabled", true, "selection disabled", _null, D.DiagnosticLevel_3, false, true));
      properties.add$1(0, C.DiagnosticsProperty$("selectionControls", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextSelectionControls));
      properties.add$1(0, C.DiagnosticsProperty$("scrollPhysics", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ScrollPhysics));
      properties.add$1(0, C.DiagnosticsProperty$("scrollBehavior", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ScrollBehavior));
      properties.add$1(0, C.DiagnosticsProperty$("textHeightBehavior", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.TextHeightBehavior));
    }
  };
  A._SelectableTextState.prototype = {
    get$_selectable_text$_effectiveFocusNode() {
      var t1, _null = null;
      this._widget.toString;
      t1 = this._selectable_text$_focusNode;
      if (t1 == null) {
        t1 = C.FocusNode$(true, _null, true, true, _null, _null, true);
        this._selectable_text$_focusNode = t1;
      }
      return t1;
    },
    get$forcePressEnabled() {
      var t1 = this.___SelectableTextState_forcePressEnabled_A;
      t1 === $ && C.throwLateFieldNI("forcePressEnabled");
      return t1;
    },
    get$selectionEnabled() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this.___SelectableTextState__selectionGestureDetectorBuilder_A = new A._SelectableTextSelectionGestureDetectorBuilder(_this, _this);
      t1 = C.TextSpan$(null, null, _this._widget.data);
      t1 = A._TextSpanEditingController$(t1);
      _this.___SelectableTextState__controller_A = t1;
      t1.addListener$1(0, _this.get$_onControllerChanged());
      _this.get$_selectable_text$_effectiveFocusNode().addListener$1(0, _this.get$_selectable_text$_handleFocusChanged());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(type$.SelectableText._as(oldWidget));
      _this._widget.toString;
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t2 = _this.get$_onControllerChanged();
      t1.removeListener$1(0, t2);
      _this.___SelectableTextState__controller_A.dispose$0();
      t1 = _this._widget;
      t1 = C.TextSpan$(null, null, t1.data);
      t1 = A._TextSpanEditingController$(t1);
      _this.___SelectableTextState__controller_A = t1;
      t1.addListener$1(0, t2);
      _this._widget.toString;
      if (_this.get$_selectable_text$_effectiveFocusNode().get$hasFocus()) {
        t1 = _this.___SelectableTextState__controller_A._change_notifier$_value.selection;
        t1 = t1.start === t1.end;
      } else
        t1 = false;
      if (t1)
        _this._selectable_text$_showSelectionHandles = false;
      else
        _this._selectable_text$_showSelectionHandles = true;
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$_selectable_text$_effectiveFocusNode().removeListener$1(0, _this.get$_selectable_text$_handleFocusChanged());
      t1 = _this._selectable_text$_focusNode;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.dispose$0();
      _this.super$State$dispose();
    },
    _onControllerChanged$0() {
      var t1, showSelectionHandles, _this = this;
      if (_this.get$_selectable_text$_effectiveFocusNode().get$hasFocus()) {
        t1 = _this.___SelectableTextState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t1 = t1._change_notifier$_value.selection;
        showSelectionHandles = t1.start !== t1.end;
      } else
        showSelectionHandles = true;
      if (showSelectionHandles === _this._selectable_text$_showSelectionHandles)
        return;
      _this.setState$1(new A._SelectableTextState__onControllerChanged_closure(_this, showSelectionHandles));
    },
    _selectable_text$_handleFocusChanged$0() {
      if (!this.get$_selectable_text$_effectiveFocusNode().get$hasFocus() && C.BindingBase_checkInstance($.SchedulerBinding__instance, type$.SchedulerBinding).SchedulerBinding__lifecycleState === D.AppLifecycleState_1) {
        var t1 = this.___SelectableTextState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t1.set$value(0, new C.TextEditingValue(t1._change_notifier$_value.text, D.TextSelection_kab, D.TextRange_m1_m1));
      }
    },
    _selectable_text$_handleSelectionChanged$2(selection, cause) {
      var t1, _this = this,
        willShowSelectionHandles = _this._selectable_text$_shouldShowSelectionHandles$1(cause);
      if (willShowSelectionHandles !== _this._selectable_text$_showSelectionHandles)
        _this.setState$1(new A._SelectableTextState__handleSelectionChanged_closure(_this, willShowSelectionHandles));
      _this._widget.toString;
      switch (C.Theme_of(_this.get$context(0)).platform.index) {
        case 2:
        case 4:
          if (cause === D.SelectionChangedCause_2) {
            t1 = _this.editableTextKey.get$currentState();
            if (t1 != null)
              t1.bringIntoView$1(selection.get$base());
          }
          return;
        case 0:
        case 1:
        case 3:
        case 5:
          break;
      }
    },
    _selectable_text$_handleSelectionHandleTapped$0() {
      var t1 = this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1 = t1._change_notifier$_value.selection;
      if (t1.start === t1.end)
        this.editableTextKey.get$currentState().toggleToolbar$0();
    },
    _selectable_text$_shouldShowSelectionHandles$1(cause) {
      var t2,
        t1 = this.___SelectableTextState__selectionGestureDetectorBuilder_A;
      t1 === $ && C.throwLateFieldNI("_selectionGestureDetectorBuilder");
      if (!t1._shouldShowSelectionToolbar)
        return false;
      t1 = this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1 = t1._change_notifier$_value;
      t2 = t1.selection;
      if (t2.start === t2.end)
        return false;
      if (cause === D.SelectionChangedCause_4)
        return false;
      if (cause === D.SelectionChangedCause_2)
        return true;
      if (t1.text.length !== 0)
        return true;
      return false;
    },
    build$1(context) {
      var theme, selectionStyle, focusNode, paintCursorAboveText, cursorOpacityAnimates, cursorOffset, cursorRadius, cupertinoTheme, textSelectionControls, cursorColor, selectionColor, defaultTextStyle, t1, effectiveTextStyle, t2, t3, t4, _this = this, _null = null,
        _s11_ = "_controller";
      C.debugCheckHasMediaQuery(context);
      C.debugCheckHasDirectionality(context, _null, _null, _null);
      _this._widget.toString;
      theme = C.Theme_of(context);
      selectionStyle = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      if (selectionStyle == null)
        selectionStyle = D.DefaultSelectionStyle_gwC;
      focusNode = _this.get$_selectable_text$_effectiveFocusNode();
      _this._widget.toString;
      paintCursorAboveText = true;
      cursorOpacityAnimates = true;
      cursorOffset = _null;
      cursorRadius = _null;
      switch (theme.platform.index) {
        case 2:
          cupertinoTheme = C.CupertinoTheme_of(context);
          _this.___SelectableTextState_forcePressEnabled_A = true;
          textSelectionControls = $.$get$cupertinoTextSelectionHandleControls();
          _this._widget.toString;
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = cupertinoTheme.get$primaryColor();
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = cupertinoTheme.get$primaryColor().withOpacity$1(0.4);
          C.debugCheckHasMediaQuery(context);
          cursorOffset = new C.Offset(-2 / C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_2, type$.MediaQuery).data.devicePixelRatio, 0);
          cursorRadius = D.Radius_2_2;
          break;
        case 4:
          cupertinoTheme = C.CupertinoTheme_of(context);
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$cupertinoDesktopTextSelectionHandleControls();
          _this._widget.toString;
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = cupertinoTheme.get$primaryColor();
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = cupertinoTheme.get$primaryColor().withOpacity$1(0.4);
          C.debugCheckHasMediaQuery(context);
          cursorOffset = new C.Offset(-2 / C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_2, type$.MediaQuery).data.devicePixelRatio, 0);
          cursorRadius = D.Radius_2_2;
          break;
        case 0:
        case 1:
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$materialTextSelectionHandleControls();
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = theme.colorScheme.primary;
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = theme.colorScheme.primary.withOpacity$1(0.4);
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          break;
        case 3:
        case 5:
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$desktopTextSelectionHandleControls();
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = theme.colorScheme.primary;
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = theme.colorScheme.primary.withOpacity$1(0.4);
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          break;
        default:
          selectionColor = _null;
          cursorColor = selectionColor;
          cursorOpacityAnimates = cursorColor;
          paintCursorAboveText = cursorOpacityAnimates;
          textSelectionControls = paintCursorAboveText;
      }
      defaultTextStyle = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
      if (defaultTextStyle == null)
        defaultTextStyle = D.DefaultTextStyle_4Wa;
      _this._widget.toString;
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI(_s11_);
      effectiveTextStyle = defaultTextStyle.style.merge$1(t1._textSpan.style);
      _this._widget.toString;
      $label0$1: {
        break $label0$1;
      }
      t1 = _this._selectable_text$_showSelectionHandles;
      t2 = _this.___SelectableTextState__controller_A;
      t2 === $ && C.throwLateFieldNI(_s11_);
      t3 = defaultTextStyle.textAlign;
      if (t3 == null)
        t3 = D.TextAlign_4;
      t4 = $.$get$TextMagnifier_adaptiveMagnifierConfiguration();
      t1 = C.EditableText$(true, _null, _null, _null, false, D.CupertinoDynamicColor_yWg, D.Clip_1, _null, A.selectable_text_SelectableText__defaultContextMenuBuilder$closure(), t2, cursorColor, _null, cursorOffset, cursorOpacityAnimates, cursorRadius, 2, D.DragStartBehavior_1, true, true, true, false, focusNode, false, D.Type_EditableText_O5i, _null, _this.editableTextKey, D.Brightness_1, _null, t4, defaultTextStyle.maxLines, _null, _null, false, "\u2022", _null, _null, _null, _this.get$_selectable_text$_handleSelectionChanged(), _this.get$_selectable_text$_handleSelectionHandleTapped(), _null, _null, _null, paintCursorAboveText, true, true, _null, true, _null, _null, D.EdgeInsets_20_20_20_20, _null, selectionColor, textSelectionControls, D.BoxHeightStyle_0, D.BoxWidthStyle_0, false, t1, _null, _null, _null, B.StrutStyle_ilT, effectiveTextStyle, true, t3, D.TextCapitalization_30, _null, defaultTextStyle.textHeightBehavior, _null, _null, defaultTextStyle.textWidthBasis, _null, _null);
      _this._widget.toString;
      t2 = _this.___SelectableTextState__selectionGestureDetectorBuilder_A;
      t2 === $ && C.throwLateFieldNI("_selectionGestureDetectorBuilder");
      t1 = t2.buildGestureDetector$2$behavior$child(D.HitTestBehavior_2, new C.RepaintBoundary(t1, _null));
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A._SelectableTextState_build_closure(_this), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t1, _null);
    },
    $isTextSelectionGestureDetectorBuilderDelegate: 1,
    get$editableTextKey() {
      return this.editableTextKey;
    }
  };
  A._SliderType.prototype = {
    _enumToString$0() {
      return "_SliderType." + this._name;
    }
  };
  A.SliderInteraction.prototype = {
    _enumToString$0() {
      return "SliderInteraction." + this._name;
    }
  };
  A.Slider0.prototype = {
    createState$0() {
      return new A._SliderState0(new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), new C.LayerLink(), null, null, D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null,
        _s9_ = "autofocus";
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DoubleProperty$("value", _this.value, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("secondaryTrackValue", _null, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      t1 = type$.void_Function_double;
      properties.add$1(0, C.ObjectFlagProperty$("onChanged", _this.onChanged, "disabled", _null, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onChangeStart", _this.onChangeStart, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onChangeEnd", _this.onChangeEnd, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.DoubleProperty$("min", _this.min, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("max", _this.max, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.IntProperty$("divisions", _this.divisions, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, C.StringProperty$("label", _null, D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.ColorProperty$("activeColor", _null, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, C.ColorProperty$("inactiveColor", _null, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, C.ColorProperty$("secondaryActiveColor", _null, D.C__NoDefaultValue, D.DiagnosticLevel_3, true, D.DiagnosticsTreeStyle_8));
      properties.add$1(0, C.ObjectFlagProperty$has("semanticFormatterCallback", _null, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("focusNode", _null, D.DiagnosticLevel_3, type$.FocusNode));
      properties.add$1(0, C.FlagProperty$(_s9_, _null, _null, _s9_, D.DiagnosticLevel_3, false, false));
    }
  };
  A._SliderState0.prototype = {
    get$focusNode(_) {
      var t1;
      this._widget.toString;
      t1 = this._slider$_focusNode;
      t1.toString;
      return t1;
    },
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      _this.___SliderState_overlayController_A = C.AnimationController$(_null, D.Duration_100000, _null, _null, _this);
      _this.___SliderState_valueIndicatorController_A = C.AnimationController$(_null, D.Duration_100000, _null, _null, _this);
      _this.___SliderState_enableController_A = C.AnimationController$(_null, D.Duration_75000, _null, _null, _this);
      _this.___SliderState_positionController_A = C.AnimationController$(_null, D.Duration_0, _null, _null, _this);
      t1 = _this.___SliderState_enableController_A;
      t1.set$value(0, _this._widget.onChanged != null ? 1 : 0);
      _this.___SliderState_positionController_A.set$value(0, _this._slider$_convert$1(_this._widget.value));
      _this.set$___SliderState__actionMap_A(type$.Map_of_Type_and_Action_Intent._as(C.LinkedHashMap_LinkedHashMap$_literal([B.Type__AdjustSliderIntent_bIn, new C.CallbackAction(_this.get$_actionHandler(), new C.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction__AdjustSliderIntent)], type$.Type, type$.Action_Intent)));
      _this._widget.toString;
      if (_this._slider$_focusNode == null)
        _this._slider$_focusNode = C.FocusNode$(true, _null, true, true, _null, _null, false);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.interactionTimer;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this.___SliderState_overlayController_A;
      t1 === $ && C.throwLateFieldNI("overlayController");
      t1.dispose$0();
      t1 = _this.___SliderState_valueIndicatorController_A;
      t1 === $ && C.throwLateFieldNI("valueIndicatorController");
      t1.dispose$0();
      t1 = _this.___SliderState_enableController_A;
      t1 === $ && C.throwLateFieldNI("enableController");
      t1.dispose$0();
      t1 = _this.___SliderState_positionController_A;
      t1 === $ && C.throwLateFieldNI("positionController");
      t1.dispose$0();
      t1 = _this.overlayEntry;
      if (t1 != null)
        t1.remove$0(0);
      t1 = _this.overlayEntry;
      if (t1 != null)
        t1.dispose$0();
      _this.overlayEntry = null;
      t1 = _this._slider$_focusNode;
      if (t1 != null)
        t1.dispose$0();
      _this.super$__SliderState_State_TickerProviderStateMixin$dispose();
    },
    _slider$_handleChanged$1(value) {
      var lerpValue, t1, _this = this;
      C._asDouble(value);
      C.assertHelper(_this._widget.onChanged != null);
      lerpValue = _this._lerp$1(value);
      if (_this._currentChangedValue !== lerpValue) {
        _this._currentChangedValue = lerpValue;
        t1 = _this._widget;
        if (lerpValue !== t1.value)
          t1.onChanged.call$1(lerpValue);
      }
    },
    _slider$_handleDragStart$1(value) {
      this._dragging = true;
      this._widget.toString;
    },
    _slider$_handleDragEnd$1(value) {
      this._dragging = false;
      this._currentChangedValue = null;
      this._widget.toString;
    },
    _actionHandler$1(intent) {
      var t1, t2, t3, directionality;
      type$._AdjustSliderIntent._as(intent);
      t1 = this._renderObjectKey;
      t2 = type$.WidgetsBinding;
      t3 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
      t3.toString;
      directionality = C.Directionality_of(t3);
      switch (intent.type.index) {
        case 2:
          t3 = true;
          break;
        case 3:
          t3 = false;
          break;
        case 1:
          t3 = directionality === D.TextDirection_0;
          break;
        case 0:
          t3 = directionality === D.TextDirection_1;
          break;
        default:
          t3 = null;
      }
      t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1).findRenderObject$0();
      t1.toString;
      type$._RenderSlider._as(t1);
      return t3 ? t1.increaseAction$0() : t1.decreaseAction$0();
    },
    _handleFocusHighlightChanged$1(focused) {
      var _this = this;
      if (focused !== _this._slider$_focused)
        _this.setState$1(new A._SliderState__handleFocusHighlightChanged_closure(_this, focused));
      _this.showValueIndicator$0();
    },
    _handleHoverChanged$1(hovering) {
      if (hovering !== this._slider$_hovering)
        this.setState$1(new A._SliderState__handleHoverChanged_closure(this, hovering));
    },
    _lerp$1(value) {
      var t1, t2;
      C.assertHelper(value >= 0);
      C.assertHelper(value <= 1);
      t1 = this._widget;
      t2 = t1.max;
      t1 = t1.min;
      return value * (t2 - t1) + t1;
    },
    _slider$_convert$1(value) {
      var t1, t2, t3, ret, _this = this;
      C.assertHelper(value <= _this._widget.max);
      C.assertHelper(value >= _this._widget.min);
      t1 = _this._widget;
      t2 = t1.max;
      t3 = t1.min;
      ret = t2 > t3 ? (value - t3) / (t2 - t3) : 0;
      if (t1.divisions != null) {
        C.assertHelper(ret >= 0 && ret <= 1);
        t1 = _this._widget.divisions;
        t1.toString;
        ret = D.JSNumber_methods.round$0(ret * t1) / t1;
      }
      return ret;
    },
    build$1(context) {
      C.debugCheckHasMaterial(context);
      C.debugCheckHasMediaQuery(context);
      this._widget.toString;
      switch (0) {
        case 0:
          return this._buildMaterialSlider$1(context);
      }
    },
    _buildMaterialSlider$1(context) {
      var t2, t3, valueIndicatorShape, valueIndicatorColor, valueIndicatorTextStyle, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, effectiveMouseCursor, handleDidGainAccessibilityFocus, fontSize, fontSizeToScale, textScaler, result, padding, _this = this, _null = null, _box_0 = {},
        theme = C.Theme_of(context),
        sliderTheme = _box_0.sliderTheme = A.SliderTheme_of(context),
        t1 = _this._widget;
      t1.toString;
      switch (true) {
        case true:
          t2 = new A._SliderDefaultsM3Year2023(context, 4, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          break;
        case false:
          t2 = new A._SliderDefaultsM2(context, 4, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          break;
        default:
          t2 = _null;
      }
      t3 = C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (t1.onChanged == null)
        t3.add$1(0, D.WidgetState_6);
      if (_this._slider$_hovering)
        t3.add$1(0, D.WidgetState_0);
      if (_this._slider$_focused)
        t3.add$1(0, D.WidgetState_1);
      if (_this._dragging)
        t3.add$1(0, D.WidgetState_3);
      valueIndicatorShape = sliderTheme.valueIndicatorShape;
      if (valueIndicatorShape == null)
        valueIndicatorShape = t2.get$valueIndicatorShape();
      if (valueIndicatorShape instanceof A.RectangularSliderValueIndicatorShape) {
        valueIndicatorColor = sliderTheme.valueIndicatorColor;
        if (valueIndicatorColor == null) {
          t1 = theme.colorScheme;
          valueIndicatorColor = C.Color_alphaBlend(t1.onSurface.withOpacity$1(0.6), t1.surface.withOpacity$1(0.9));
        }
      } else {
        _this._widget.toString;
        valueIndicatorColor = sliderTheme.valueIndicatorColor;
        if (valueIndicatorColor == null)
          valueIndicatorColor = t2.get$valueIndicatorColor();
      }
      valueIndicatorTextStyle = sliderTheme.valueIndicatorTextStyle;
      if (valueIndicatorTextStyle == null)
        valueIndicatorTextStyle = t2.get$valueIndicatorTextStyle();
      t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_16);
      t1 = t1 == null ? _null : t1.boldText;
      if (t1 === true)
        valueIndicatorTextStyle = valueIndicatorTextStyle.merge$1(D.TextStyle_TJs);
      t1 = _box_0.sliderTheme;
      t4 = t1.trackHeight;
      if (t4 == null)
        t4 = t2.trackHeight;
      _this._widget.toString;
      t5 = t1.activeTrackColor;
      if (t5 == null)
        t5 = t2.get$activeTrackColor();
      _this._widget.toString;
      t6 = _box_0.sliderTheme.inactiveTrackColor;
      if (t6 == null)
        t6 = t2.get$inactiveTrackColor();
      _this._widget.toString;
      t7 = _box_0.sliderTheme.secondaryActiveTrackColor;
      if (t7 == null)
        t7 = t2.get$secondaryActiveTrackColor();
      t8 = _box_0.sliderTheme.disabledActiveTrackColor;
      if (t8 == null)
        t8 = t2.get$disabledActiveTrackColor();
      t9 = _box_0.sliderTheme.disabledInactiveTrackColor;
      if (t9 == null)
        t9 = t2.get$disabledInactiveTrackColor();
      t10 = _box_0.sliderTheme.disabledSecondaryActiveTrackColor;
      if (t10 == null)
        t10 = t2.get$disabledSecondaryActiveTrackColor();
      _this._widget.toString;
      t11 = _box_0.sliderTheme.activeTickMarkColor;
      if (t11 == null)
        t11 = t2.get$activeTickMarkColor();
      _this._widget.toString;
      t12 = _box_0.sliderTheme.inactiveTickMarkColor;
      if (t12 == null)
        t12 = t2.get$inactiveTickMarkColor();
      t13 = _box_0.sliderTheme.disabledActiveTickMarkColor;
      if (t13 == null)
        t13 = t2.get$disabledActiveTickMarkColor();
      t14 = _box_0.sliderTheme.disabledInactiveTickMarkColor;
      if (t14 == null)
        t14 = t2.get$disabledInactiveTickMarkColor();
      _this._widget.toString;
      t15 = _box_0.sliderTheme.thumbColor;
      if (t15 == null)
        t15 = t2.get$thumbColor();
      t16 = _box_0.sliderTheme.disabledThumbColor;
      if (t16 == null)
        t16 = t2.get$disabledThumbColor();
      t17 = new A._SliderState__buildMaterialSlider_effectiveOverlayColor(_box_0, _this, t3, t2).call$0();
      t18 = _box_0.sliderTheme.trackShape;
      if (t18 == null)
        t18 = t2.get$trackShape();
      t19 = _box_0.sliderTheme.tickMarkShape;
      if (t19 == null)
        t19 = t2.get$tickMarkShape();
      t20 = _box_0.sliderTheme.thumbShape;
      if (t20 == null)
        t20 = t2.get$thumbShape();
      t21 = _box_0.sliderTheme.overlayShape;
      if (t21 == null)
        t21 = t2.get$overlayShape();
      t22 = _box_0.sliderTheme;
      t23 = t22.showValueIndicator;
      if (t23 == null)
        t23 = B.ShowValueIndicator_0;
      _this._widget.toString;
      t24 = t22.thumbSize;
      if (t24 == null)
        t24 = t2.thumbSize;
      t25 = _box_0.sliderTheme.trackGap;
      t2 = t25 == null ? t2.trackGap : t25;
      _box_0.sliderTheme = t1.copyWith$25$activeTickMarkColor$activeTrackColor$disabledActiveTickMarkColor$disabledActiveTrackColor$disabledInactiveTickMarkColor$disabledInactiveTrackColor$disabledSecondaryActiveTrackColor$disabledThumbColor$inactiveTickMarkColor$inactiveTrackColor$overlayColor$overlayShape$padding$secondaryActiveTrackColor$showValueIndicator$thumbColor$thumbShape$thumbSize$tickMarkShape$trackGap$trackHeight$trackShape$valueIndicatorColor$valueIndicatorShape$valueIndicatorTextStyle(t11, t5, t13, t8, t14, t9, t10, t16, t12, t6, t17, t21, t22.padding, t7, t23, t15, t20, t24, t19, t2, t4, t18, valueIndicatorColor, valueIndicatorShape, valueIndicatorTextStyle);
      _this._widget.toString;
      t18 = C.WidgetStateProperty_resolveAs(_null, t3, type$.nullable_MouseCursor);
      if (t18 == null)
        effectiveMouseCursor = _null;
      else
        effectiveMouseCursor = t18;
      if (effectiveMouseCursor == null)
        effectiveMouseCursor = C.WidgetStateMouseCursor__clickable(type$.Set_WidgetState._as(t3));
      _this._widget.toString;
      handleDidGainAccessibilityFocus = _null;
      switch (theme.platform.index) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
          break;
        case 5:
          handleDidGainAccessibilityFocus = new A._SliderState__buildMaterialSlider_closure(_this);
          break;
      }
      C.debugCheckHasMediaQuery(context);
      switch (C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_17, type$.MediaQuery).data.navigationMode.index) {
        case 1:
          t1 = B.Map_ANauy;
          break;
        case 0:
          t1 = B.Map_LMmfw;
          break;
        default:
          t1 = _null;
      }
      t2 = _box_0.sliderTheme.valueIndicatorTextStyle;
      fontSize = t2 == null ? _null : t2.fontSize;
      if (fontSize == null)
        fontSize = 14;
      fontSizeToScale = fontSize === 0 ? 14 : fontSize;
      t2 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      t2 = t2 == null ? _null : t2.get$textScaler();
      textScaler = (t2 == null ? D._LinearTextScaler_1 : t2).clamp$1$maxScaleFactor(0, 1.3);
      t2 = textScaler.scale$1(0, fontSizeToScale);
      t3 = _this._slider$_convert$1(_this._widget.value);
      t4 = _this._widget;
      t4 = t4.divisions;
      t5 = _box_0.sliderTheme;
      t6 = new A._SliderState__buildMaterialSlider_screenSize(context).call$0();
      t7 = _this._widget;
      t7 = t7.onChanged != null && t7.max > t7.min ? _this.get$_slider$_handleChanged() : _null;
      result = new C.CompositedTransformTarget(_this._layerLink, new A._SliderRenderObjectWidget(t3, _null, t4, _null, t5, t2 / fontSizeToScale, t6, t7, _this.get$_slider$_handleDragStart(), _this.get$_slider$_handleDragEnd(), _null, _this, _this._slider$_focused, _this._slider$_hovering, B.SliderInteraction_0, _this._renderObjectKey), _null);
      padding = _box_0.sliderTheme.padding;
      if (padding != null)
        result = new C.Padding(padding, result, _null);
      t2 = _this.___SliderState__actionMap_A;
      t2 === $ && C.throwLateFieldNI("_actionMap");
      t3 = _this.get$focusNode(0);
      t1 = C.FocusableActionDetector$(t2, false, result, _this._widget.onChanged != null, t3, true, effectiveMouseCursor, _null, _this.get$_handleFocusHighlightChanged(), _this.get$_handleHoverChanged(), t1);
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, handleDidGainAccessibilityFocus, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null), true, false, false, false, t1, _null);
    },
    showValueIndicator$0() {
      var t1, t2, _this = this;
      if (_this.overlayEntry == null) {
        _this.overlayEntry = C.OverlayEntry$(new A._SliderState_showValueIndicator_closure(_this), false, false);
        t1 = _this.get$context(0);
        t2 = _this._widget;
        t2.toString;
        t2 = C.Overlay_of(t1, t2, false);
        t1 = _this.overlayEntry;
        t1.toString;
        t2.insert$1(0, t1);
      }
    },
    set$___SliderState__actionMap_A(___SliderState__actionMap_A) {
      this.___SliderState__actionMap_A = type$.Map_of_Type_and_Action_Intent._as(___SliderState__actionMap_A);
    },
    $isTickerProvider: 1
  };
  A._SliderRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.Directionality_of(context),
        t2 = C.Theme_of(context);
      C.debugCheckHasMediaQuery(context);
      return A._RenderSlider$(_this.allowedInteraction, _this.divisions, C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_18, type$.MediaQuery).data.gestureSettings, _this.hasFocus, _this.hovering, _this.label, _this.onChangeEnd, _this.onChangeStart, _this.onChanged, t2.platform, _this.screenSize, _this.secondaryTrackValue, _this.semanticFormatterCallback, _this.sliderTheme, _this.state, t1, _this.textScaleFactor, _this.value);
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2, _this = this;
      type$._RenderSlider._as(renderObject);
      renderObject.set$divisions(_this.divisions);
      renderObject.set$value(0, _this.value);
      renderObject.set$secondaryTrackValue(_this.secondaryTrackValue);
      renderObject.set$label(0, _this.label);
      renderObject.set$sliderTheme(_this.sliderTheme);
      renderObject.set$textScaleFactor(_this.textScaleFactor);
      renderObject.set$screenSize(_this.screenSize);
      renderObject.set$onChanged(_this.onChanged);
      renderObject.set$onChangeStart(_this.onChangeStart);
      renderObject.set$onChangeEnd(_this.onChangeEnd);
      renderObject.set$textDirection(C.Directionality_of(context));
      renderObject.set$semanticFormatterCallback(_this.semanticFormatterCallback);
      renderObject.set$platform(0, C.Theme_of(context).platform);
      renderObject.set$hasFocus(_this.hasFocus);
      renderObject.set$hovering(_this.hovering);
      C.debugCheckHasMediaQuery(context);
      t1 = C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_18, type$.MediaQuery).data.gestureSettings;
      t2 = renderObject.___RenderSlider__drag_A;
      t2 === $ && C.throwLateFieldNI("_drag");
      t2.gestureSettings = t1;
      t2 = renderObject.___RenderSlider__tap_A;
      t2 === $ && C.throwLateFieldNI("_tap");
      t2.gestureSettings = t1;
      renderObject.set$allowedInteraction(_this.allowedInteraction);
    }
  };
  A._RenderSlider.prototype = {
    _RenderSlider$18$allowedInteraction$divisions$gestureSettings$hasFocus$hovering$label$onChangeEnd$onChangeStart$onChanged$platform$screenSize$secondaryTrackValue$semanticFormatterCallback$sliderTheme$state$textDirection$textScaleFactor$value(allowedInteraction, divisions, gestureSettings, hasFocus, hovering, label, onChangeEnd, onChangeStart, onChanged, platform, screenSize, secondaryTrackValue, semanticFormatterCallback, sliderTheme, state, textDirection, textScaleFactor, value) {
      var team, t1, t2, _this = this, _null = null;
      _this._updateLabelPainter$0();
      team = new C.GestureArenaTeam(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._CombiningGestureArenaMember));
      t1 = C.HorizontalDragGestureRecognizer$(_null, _null);
      t1.set$team(team);
      t1.set$onStart(0, _this.get$_slider$_handleDragStart());
      t1.set$onUpdate(_this.get$_slider$_handleDragUpdate());
      t1.set$onEnd(0, _this.get$_slider$_handleDragEnd());
      t1.set$onCancel(0, _this.get$_endInteraction());
      t1.gestureSettings = gestureSettings;
      _this.___RenderSlider__drag_A = t1;
      t1 = C.TapGestureRecognizer$(_null, _null);
      t1.set$team(team);
      t1.set$onTapDown(_this.get$_slider$_handleTapDown());
      t1.set$onTapUp(_this.get$_slider$_handleTapUp());
      t1.gestureSettings = gestureSettings;
      _this.___RenderSlider__tap_A = t1;
      t1 = _this._slider$_state;
      t2 = t1.___SliderState_overlayController_A;
      t2 === $ && C.throwLateFieldNI("overlayController");
      _this.___RenderSlider__overlayAnimation_A = C.CurvedAnimation$(D.Cubic_Dkk, t2, _null);
      t2 = t1.___SliderState_valueIndicatorController_A;
      t2 === $ && C.throwLateFieldNI("valueIndicatorController");
      t2 = C.CurvedAnimation$(D.Cubic_Dkk, t2, _null);
      t2.parent.addStatusListener$1(type$.void_Function_AnimationStatus._as(new A._RenderSlider_closure(_this)));
      _this.___RenderSlider__valueIndicatorAnimation_A = t2;
      t1 = t1.___SliderState_enableController_A;
      t1 === $ && C.throwLateFieldNI("enableController");
      _this.___RenderSlider__enableAnimation_A = C.CurvedAnimation$(D.Cubic_fC5, t1, _null);
    },
    get$_slider$_maxSliderPartWidth() {
      var t1 = this.get$_slider$_sliderPartSizes(),
        t2 = C._arrayInstanceType(t1);
      return new C.MappedListIterable(t1, t2._eval$1("double(1)")._as(new A._RenderSlider__maxSliderPartWidth_closure()), t2._eval$1("MappedListIterable<1,double>")).reduce$1(0, D.CONSTANT1);
    },
    get$_slider$_maxSliderPartHeight() {
      var t1 = this.get$_slider$_sliderPartSizes(),
        t2 = C._arrayInstanceType(t1);
      return new C.MappedListIterable(t1, t2._eval$1("double(1)")._as(new A._RenderSlider__maxSliderPartHeight_closure()), t2._eval$1("MappedListIterable<1,double>")).reduce$1(0, D.CONSTANT1);
    },
    get$_slider$_sliderPartSizes() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this._sliderTheme.overlayShape;
      t1.toString;
      t2 = _this._slider$_onChanged;
      t3 = _this._divisions;
      t3 = t3 != null && t3 > 0;
      t3 = t1.getPreferredSize$2(t2 != null, t3);
      t1 = _this._sliderTheme;
      t2 = _this._slider$_onChanged == null;
      if (t1.padding != null) {
        t1 = t1.thumbShape;
        t1.toString;
        t4 = _this._divisions;
        t4 = t4 != null && t4 > 0;
        t4 = t1.getPreferredSize$2(!t2, t4)._dy;
        t1 = t4;
      } else {
        t1 = t1.overlayShape;
        t1.toString;
        t4 = _this._divisions;
        t4 = t4 != null && t4 > 0;
        t4 = t1.getPreferredSize$2(!t2, t4)._dy;
        t1 = t4;
      }
      t2 = _this._sliderTheme.thumbShape;
      t2.toString;
      t4 = _this._slider$_onChanged;
      t5 = _this._divisions;
      t5 = t5 != null && t5 > 0;
      t5 = t2.getPreferredSize$2(t4 != null, t5);
      t4 = _this._sliderTheme;
      return C._setArrayType([new C.Size(t3._dx, t1), t5, t4.tickMarkShape.getPreferredSize$2$isEnabled$sliderTheme(_this._slider$_onChanged != null, t4)], type$.JSArray_Size);
    },
    get$_slider$_trackRect() {
      var t1 = this._sliderTheme;
      return t1.trackShape.getPreferredRect$3$isDiscrete$parentBox$sliderTheme(false, this, t1);
    },
    set$value(_, newValue) {
      var t1, convertedValue, t2, distance, _this = this,
        _s18_ = "positionController";
      C.assertHelper(newValue >= 0 && newValue <= 1);
      t1 = _this._divisions;
      convertedValue = t1 != null && t1 > 0 ? _this._discretize$1(newValue) : newValue;
      if (convertedValue === _this._slider$_value)
        return;
      _this._slider$_value = convertedValue;
      t1 = _this._divisions;
      t1 = t1 != null && t1 > 0;
      t2 = _this._slider$_state.___SliderState_positionController_A;
      if (t1) {
        t2 === $ && C.throwLateFieldNI(_s18_);
        t1 = t2.__AnimationController__value_A;
        t1 === $ && C.throwLateFieldNI("_value");
        distance = Math.abs(convertedValue - t1);
        t2.duration = distance !== 0 ? new C.Duration(D.JSNumber_methods.round$0(75000 * (1 / distance))) : D.Duration_0;
        t2.animateTo$2$curve(convertedValue, D.Cubic_fC5);
      } else {
        t2 === $ && C.throwLateFieldNI(_s18_);
        t2.set$value(0, convertedValue);
      }
      _this.markNeedsSemanticsUpdate$0();
    },
    set$secondaryTrackValue(newValue) {
      var t1;
      if (newValue != null)
        t1 = newValue >= 0 && newValue <= 1;
      else
        t1 = true;
      C.assertHelper(t1);
      if (newValue == this._secondaryTrackValue)
        return;
      this._secondaryTrackValue = newValue;
      this.markNeedsSemanticsUpdate$0();
    },
    set$platform(_, value) {
      if (this._platform === value)
        return;
      this._platform = value;
      this.markNeedsSemanticsUpdate$0();
    },
    set$semanticFormatterCallback(value) {
      return;
    },
    set$divisions(value) {
      if (value == this._divisions)
        return;
      this._divisions = value;
      this.markNeedsPaint$0();
    },
    set$label(_, value) {
      return;
    },
    set$sliderTheme(value) {
      if (value.$eq(0, this._sliderTheme))
        return;
      this._sliderTheme = value;
      this._updateLabelPainter$0();
    },
    set$textScaleFactor(value) {
      if (value === this._textScaleFactor)
        return;
      this._textScaleFactor = value;
      this._updateLabelPainter$0();
    },
    set$screenSize(value) {
      if (value.$eq(0, this._screenSize))
        return;
      this._screenSize = value;
      this.markNeedsPaint$0();
    },
    set$onChanged(value) {
      var t1, t2, _this = this,
        _s16_ = "enableController";
      type$.nullable_void_Function_double._as(value);
      if (J.$eq$(value, _this._slider$_onChanged))
        return;
      t1 = _this._slider$_onChanged;
      _this.set$_slider$_onChanged(value);
      t2 = _this._slider$_onChanged != null;
      if (t1 != null !== t2) {
        t1 = _this._slider$_state.___SliderState_enableController_A;
        if (t2) {
          t1 === $ && C.throwLateFieldNI(_s16_);
          t1.forward$0(0);
        } else {
          t1 === $ && C.throwLateFieldNI(_s16_);
          t1.reverse$0(0);
        }
        _this.markNeedsPaint$0();
        _this.markNeedsSemanticsUpdate$0();
      }
    },
    set$textDirection(value) {
      if (value === this._slider$_textDirection)
        return;
      this._slider$_textDirection = value;
      this._updateLabelPainter$0();
    },
    set$hasFocus(value) {
      var t1, t2, _this = this,
        _s17_ = "overlayController",
        _s24_ = "valueIndicatorController";
      if (value === _this._slider$_hasFocus)
        return;
      _this._slider$_hasFocus = value;
      t1 = _this._slider$_state;
      t2 = t1.___SliderState_overlayController_A;
      if (value) {
        t2 === $ && C.throwLateFieldNI(_s17_);
        t2.forward$0(0);
        if (_this.get$showValueIndicator()) {
          t1 = t1.___SliderState_valueIndicatorController_A;
          t1 === $ && C.throwLateFieldNI(_s24_);
          t1.forward$0(0);
        }
      } else {
        t2 === $ && C.throwLateFieldNI(_s17_);
        t2.reverse$0(0);
        if (_this.get$showValueIndicator()) {
          t1 = t1.___SliderState_valueIndicatorController_A;
          t1 === $ && C.throwLateFieldNI(_s24_);
          t1.reverse$0(0);
        }
      }
      _this.markNeedsSemanticsUpdate$0();
    },
    set$hovering(value) {
      if (value === this._slider$_hovering)
        return;
      this._slider$_hovering = value;
      this._updateForHover$1(value);
    },
    set$hoveringThumb(value) {
      var _this = this;
      if (value === _this._hoveringThumb)
        return;
      _this._hoveringThumb = value;
      _this._updateForHover$1(_this._slider$_hovering);
    },
    set$allowedInteraction(value) {
      if (value === this._allowedInteraction)
        return;
      this._allowedInteraction = value;
      this.markNeedsSemanticsUpdate$0();
    },
    _updateForHover$1(hovered) {
      var t1, _this = this,
        _s17_ = "overlayController";
      if (hovered && _this._hoveringThumb) {
        t1 = _this._slider$_state.___SliderState_overlayController_A;
        t1 === $ && C.throwLateFieldNI(_s17_);
        t1.forward$0(0);
      } else if (!_this._slider$_active && !_this._slider$_hasFocus) {
        t1 = _this._slider$_state.___SliderState_overlayController_A;
        t1 === $ && C.throwLateFieldNI(_s17_);
        t1.reverse$0(0);
      }
    },
    get$showValueIndicator() {
      switch (this._sliderTheme.showValueIndicator.index) {
        case 0:
          var t1 = this._divisions;
          t1 = t1 != null && t1 > 0;
          break;
        case 1:
          t1 = this._divisions;
          t1 = !(t1 != null && t1 > 0);
          break;
        case 2:
          t1 = true;
          break;
        case 3:
          t1 = false;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_adjustmentUnit() {
      switch (this._platform.index) {
        case 2:
        case 4:
          return 0.1;
        case 0:
        case 1:
        case 3:
        case 5:
          return 0.05;
      }
    },
    _updateLabelPainter$0() {
      this._labelPainter.set$text(0, null);
      this.markNeedsLayout$0();
    },
    systemFontsDidChange$0() {
      this.super$RelayoutWhenSystemFontsChangeMixin$systemFontsDidChange();
      this._labelPainter.markNeedsLayout$0();
      this._updateLabelPainter$0();
    },
    attach$1(owner) {
      var t1, t2, _this = this;
      _this.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach(owner);
      t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.addListener$1(0, t2);
      t1 = _this.___RenderSlider__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.parent.addListener$1(0, t2);
      t1 = _this.___RenderSlider__enableAnimation_A;
      t1 === $ && C.throwLateFieldNI("_enableAnimation");
      t1.parent.addListener$1(0, t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && C.throwLateFieldNI("positionController");
      t1.didRegisterListener$0();
      t1.AnimationLocalListenersMixin__listeners.add$1(0, t2);
    },
    detach$0(_) {
      var t2, _this = this,
        t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.removeListener$1(0, t2);
      t1 = _this.___RenderSlider__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.parent.removeListener$1(0, t2);
      t1 = _this.___RenderSlider__enableAnimation_A;
      t1 === $ && C.throwLateFieldNI("_enableAnimation");
      t1.parent.removeListener$1(0, t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && C.throwLateFieldNI("positionController");
      t1.removeListener$1(0, t2);
      _this.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach(0);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___RenderSlider__drag_A;
      t1 === $ && C.throwLateFieldNI("_drag");
      t1._velocityTrackers.clear$0(0);
      t1.super$OneSequenceGestureRecognizer$dispose();
      t1 = _this.___RenderSlider__tap_A;
      t1 === $ && C.throwLateFieldNI("_tap");
      t1._stopTimer$0();
      t1.super$OneSequenceGestureRecognizer$dispose();
      _this._labelPainter.dispose$0();
      t1 = _this.___RenderSlider__enableAnimation_A;
      t1 === $ && C.throwLateFieldNI("_enableAnimation");
      t1.dispose$0();
      t1 = _this.___RenderSlider__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.dispose$0();
      t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      t1.dispose$0();
      _this.super$RenderObject$dispose();
    },
    _getValueFromVisualPosition$1(visualPosition) {
      var t1;
      switch (this._slider$_textDirection.index) {
        case 0:
          t1 = 1 - visualPosition;
          break;
        case 1:
          t1 = visualPosition;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _discretize$1(value) {
      var result = C.clampDouble(value, 0, 1),
        t1 = this._divisions;
      if (t1 != null && t1 > 0) {
        t1.toString;
        result = D.JSNumber_methods.round$0(result * t1) / t1;
      }
      return result;
    },
    _startInteraction$1(globalPosition) {
      var t2, t3, t4, _this = this,
        t1 = _this._slider$_state;
      if (t1._framework$_element == null)
        return;
      t1.showValueIndicator$0();
      if (!_this._slider$_active && _this._slider$_onChanged != null) {
        switch (_this._allowedInteraction.index) {
          case 0:
          case 1:
            _this._slider$_active = true;
            t2 = _this.globalToLocal$1(globalPosition);
            t3 = _this.get$_slider$_trackRect();
            t4 = _this.get$_slider$_trackRect();
            _this._currentDragValue = _this._getValueFromVisualPosition$1((t2._dx - t3.left) / (t4.right - t4.left));
            break;
          case 3:
            t2 = _this.overlayRect;
            t2.toString;
            if (t2.contains$1(0, _this.globalToLocal$1(globalPosition))) {
              _this._slider$_active = true;
              _this._currentDragValue = _this._slider$_value;
            }
            break;
          case 2:
            _this.onChangeStart.call$1(_this._discretize$1(_this._slider$_value));
            break;
        }
        if (_this._slider$_active) {
          _this.onChangeStart.call$1(_this._discretize$1(_this._slider$_value));
          t2 = _this._slider$_onChanged;
          t2.toString;
          t2.call$1(_this._discretize$1(_this._currentDragValue));
          t2 = t1.___SliderState_overlayController_A;
          t2 === $ && C.throwLateFieldNI("overlayController");
          t2.forward$0(0);
          if (_this.get$showValueIndicator()) {
            t2 = t1.___SliderState_valueIndicatorController_A;
            t2 === $ && C.throwLateFieldNI("valueIndicatorController");
            t2.forward$0(0);
            t2 = t1.interactionTimer;
            if (t2 != null)
              t2.cancel$0(0);
            t1.interactionTimer = C.Timer_Timer(new C.Duration(D.JSNumber_methods.round$0(500000 * $._timeDilation)), new A._RenderSlider__startInteraction_closure(_this));
          }
        }
      }
    },
    _endInteraction$0() {
      var t2, t3, _this = this,
        t1 = _this._slider$_state;
      if (t1._framework$_element == null)
        return;
      t2 = _this._slider$_active;
      if (t2) {
        _this.onChangeEnd.call$1(_this._discretize$1(_this._currentDragValue));
        t2 = _this._slider$_active = false;
        _this._currentDragValue = 0;
        t3 = t1.___SliderState_overlayController_A;
        t3 === $ && C.throwLateFieldNI("overlayController");
        t3.reverse$0(0);
        if (_this.get$showValueIndicator() ? t1.interactionTimer == null : t2) {
          t1 = t1.___SliderState_valueIndicatorController_A;
          t1 === $ && C.throwLateFieldNI("valueIndicatorController");
          t1.reverse$0(0);
        }
      }
    },
    _slider$_handleDragStart$1(details) {
      this._startInteraction$1(details.globalPosition);
    },
    _slider$_handleDragUpdate$1(details) {
      var t1, t2, valueDelta, _this = this;
      if (_this._slider$_state._framework$_element == null)
        return;
      t1 = _this._slider$_active;
      if (!t1 && _this._allowedInteraction === B.SliderInteraction_2) {
        t1 = _this._slider$_active = true;
        _this._currentDragValue = _this._slider$_value;
      }
      switch (_this._allowedInteraction.index) {
        case 0:
        case 2:
        case 3:
          if (t1 && _this._slider$_onChanged != null) {
            t1 = details.primaryDelta;
            t1.toString;
            t2 = _this.get$_slider$_trackRect();
            valueDelta = t1 / (t2.right - t2.left);
            t2 = _this._currentDragValue;
            switch (_this._slider$_textDirection.index) {
              case 0:
                t1 = -valueDelta;
                break;
              case 1:
                t1 = valueDelta;
                break;
              default:
                t1 = null;
            }
            if (typeof t1 !== "number")
              return C.iae(t1);
            t1 = t2 + t1;
            _this._currentDragValue = t1;
            t2 = _this._slider$_onChanged;
            t2.toString;
            t2.call$1(_this._discretize$1(t1));
          }
          break;
        case 1:
          break;
      }
    },
    _slider$_handleDragEnd$1(details) {
      this._endInteraction$0();
    },
    _slider$_handleTapDown$1(details) {
      this._startInteraction$1(details.globalPosition);
    },
    _slider$_handleTapUp$1(details) {
      this._endInteraction$0();
    },
    hitTestSelf$1(position) {
      return true;
    },
    handleEvent$2($event, entry) {
      var t1, _this = this;
      type$.BoxHitTestEntry._as(entry);
      if (_this._slider$_state._framework$_element == null)
        return;
      _this.debugHandleEvent$2($event, entry);
      if (type$.PointerDownEvent._is($event) && _this._slider$_onChanged != null) {
        t1 = _this.___RenderSlider__drag_A;
        t1 === $ && C.throwLateFieldNI("_drag");
        t1.addPointer$1($event);
        t1 = _this.___RenderSlider__tap_A;
        t1 === $ && C.throwLateFieldNI("_tap");
        t1.addPointer$1($event);
      }
      if (_this._slider$_onChanged != null && _this.overlayRect != null) {
        t1 = _this.overlayRect;
        t1.toString;
        _this.set$hoveringThumb(t1.contains$1(0, $event.get$localPosition()));
      }
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 144 + this.get$_slider$_maxSliderPartWidth();
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 144 + this.get$_slider$_maxSliderPartWidth();
    },
    computeMinIntrinsicHeight$1(width) {
      var t1;
      C._asDouble(width);
      t1 = this._sliderTheme.trackHeight;
      t1.toString;
      return Math.max(t1, this.get$_slider$_maxSliderPartHeight());
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1;
      C._asDouble(width);
      t1 = this._sliderTheme.trackHeight;
      t1.toString;
      return Math.max(t1, this.get$_slider$_maxSliderPartHeight());
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      var t2,
        t1 = constraints.maxWidth;
      t1 = t1 < 1 / 0 ? t1 : 144 + this.get$_slider$_maxSliderPartWidth();
      t2 = constraints.maxHeight;
      if (!(t2 < 1 / 0)) {
        t2 = this._sliderTheme.trackHeight;
        t2.toString;
        t2 = Math.max(t2, this.get$_slider$_maxSliderPartHeight());
      }
      return new C.Size(t1, t2);
    },
    paint$2(context, offset) {
      var _0_0, _0_2, t2, _1_1, secondaryVisualPosition, _1_2, t3, trackRect, padding, t4, t5, t6, thumbPosition, thumbPadding, thumbCenter, secondaryOffset, thumbWidth, thumbHeight, trackGap, pressedThumbWidth, thumbWidth0, t7, t8, t9, t10, t11, adjustedTrackWidth, dy, i, _this = this, _null = null,
        t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && C.throwLateFieldNI("positionController");
      t1 = t1.__AnimationController__value_A;
      t1 === $ && C.throwLateFieldNI("_value");
      _0_0 = _this._slider$_textDirection;
      $label0$0: {
        _0_2 = D.TextDirection_0 === _0_0;
        if (_0_2 && _this._secondaryTrackValue == null) {
          t1 = new C._Record_2(1 - t1, _null);
          break $label0$0;
        }
        if (_0_2) {
          t2 = _this._secondaryTrackValue;
          t2.toString;
          t2 = new C._Record_2(1 - t1, 1 - t2);
          t1 = t2;
          break $label0$0;
        }
        if (D.TextDirection_1 === _0_0) {
          t1 = new C._Record_2(t1, _this._secondaryTrackValue);
          break $label0$0;
        }
        t1 = _null;
      }
      _1_1 = t1._0;
      secondaryVisualPosition = _null;
      _1_2 = t1._1;
      secondaryVisualPosition = _1_2;
      t1 = _this._sliderTheme;
      t2 = t1.trackShape;
      t2.toString;
      t3 = _this._divisions;
      trackRect = t2.getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(t3 != null && t3 > 0, offset, _this, t1);
      t1 = _this._divisions;
      padding = t1 != null && t1 > 0 || _this._sliderTheme.trackShape.get$isRounded() ? trackRect.bottom - trackRect.top : 0;
      t1 = _this._divisions;
      t2 = t1 != null;
      t3 = t2 && t1 > 0;
      t4 = trackRect.left;
      t5 = trackRect.right;
      t6 = t5 - t4;
      if (t3) {
        if (typeof _1_1 !== "number")
          return _1_1.$mul();
        thumbPosition = t4 + _1_1 * (t6 - padding) + padding / 2;
      } else {
        if (typeof _1_1 !== "number")
          return _1_1.$mul();
        thumbPosition = t4 + _1_1 * t6;
      }
      t3 = _this._sliderTheme.thumbShape;
      t3.toString;
      t6 = _this._slider$_onChanged;
      t1 = t2 && t1 > 0;
      thumbPadding = padding > t3.getPreferredSize$2(t6 != null, t1)._dx / 2 ? padding / 2 : 0;
      thumbCenter = new C.Offset(C.clampDouble(thumbPosition, t4 + thumbPadding, t5 - thumbPadding), trackRect.get$center()._dy);
      if (_this._slider$_onChanged != null)
        _this.overlayRect = C.Rect$fromCircle(thumbCenter, _this._sliderTheme.overlayShape.getPreferredSize$2(true, false)._dx / 2);
      secondaryOffset = secondaryVisualPosition != null ? new C.Offset(t4 + secondaryVisualPosition * (t5 - t4), trackRect.get$center()._dy) : _null;
      t1 = _this._sliderTheme.thumbSize;
      if (t1 == null)
        thumbWidth = _null;
      else {
        t1 = t1.resolve$1(C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState));
        thumbWidth = t1 == null ? _null : t1._dx;
      }
      t1 = _this._sliderTheme.thumbSize;
      if (t1 == null)
        thumbHeight = _null;
      else {
        t1 = t1.resolve$1(C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState));
        thumbHeight = t1 == null ? _null : t1._dy;
      }
      t1 = _this._sliderTheme;
      trackGap = t1.trackGap;
      t1 = t1.thumbSize;
      if (t1 == null)
        pressedThumbWidth = _null;
      else {
        t1 = t1.resolve$1(C.LinkedHashSet_LinkedHashSet$_literal([D.WidgetState_2], type$.WidgetState));
        pressedThumbWidth = t1 == null ? _null : t1._dx;
      }
      if (_this._slider$_active && thumbWidth != null && pressedThumbWidth != null && trackGap != null) {
        if (typeof thumbWidth !== "number")
          return thumbWidth.$sub();
        if (typeof pressedThumbWidth !== "number")
          return C.iae(pressedThumbWidth);
        if (thumbWidth > 0)
          thumbWidth0 = pressedThumbWidth;
        else
          thumbWidth0 = thumbWidth;
        if (trackGap > 0)
          trackGap -= (thumbWidth - pressedThumbWidth) / 2;
        thumbWidth = thumbWidth0;
      }
      t1 = _this._sliderTheme;
      t2 = t1.trackShape;
      t2.toString;
      t1 = t1.copyWith$1$trackGap(trackGap);
      t3 = _this.___RenderSlider__enableAnimation_A;
      t3 === $ && C.throwLateFieldNI("_enableAnimation");
      t6 = _this._slider$_textDirection;
      t7 = _this._divisions;
      t7 = t7 != null && t7 > 0;
      t2.paint$10$enableAnimation$isDiscrete$isEnabled$parentBox$secondaryOffset$sliderTheme$textDirection$thumbCenter(context, offset, t3, t7, _this._slider$_onChanged != null, _this, secondaryOffset, t1, t6, thumbCenter);
      t1 = _this.___RenderSlider__overlayAnimation_A;
      t1 === $ && C.throwLateFieldNI("_overlayAnimation");
      if (t1.get$status(0) !== D.AnimationStatus_0) {
        t1 = _this._sliderTheme;
        t2 = t1.overlayShape;
        t2.toString;
        t3 = _this.___RenderSlider__overlayAnimation_A;
        t6 = _this.___RenderSlider__enableAnimation_A;
        t7 = _this._divisions;
        t7 = t7 != null && t7 > 0;
        t8 = _this._slider$_textDirection;
        t9 = _this._slider$_value;
        t10 = _this._textScaleFactor;
        t11 = _this._screenSize.get$isEmpty(0) ? _this.get$size(0) : _this._screenSize;
        t2.paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, thumbCenter, t3, t6, t7, _this._labelPainter, _this, t11, t1, t8, t10, t9);
      }
      t1 = _this._divisions;
      if (t1 != null && t1 > 0) {
        t1 = _this._sliderTheme;
        t1 = t1.tickMarkShape.getPreferredSize$2$isEnabled$sliderTheme(_this._slider$_onChanged != null, t1);
        adjustedTrackWidth = t5 - t4 - padding;
        t2 = _this._divisions;
        t2.toString;
        if (adjustedTrackWidth / t2 >= 3 * t1._dx) {
          dy = trackRect.get$center()._dy;
          t1 = padding / 2;
          i = 0;
          while (true) {
            t2 = _this._divisions;
            t2.toString;
            if (!(i <= t2))
              break;
            t3 = _this._sliderTheme;
            t5 = _this.___RenderSlider__enableAnimation_A;
            t6 = _this._slider$_textDirection;
            t3.tickMarkShape.paint$8$enableAnimation$isEnabled$parentBox$sliderTheme$textDirection$thumbCenter(context, new C.Offset(t4 + i / t2 * adjustedTrackWidth + t1, dy), t5, _this._slider$_onChanged != null, _this, t3, t6, thumbCenter);
            ++i;
          }
        }
      }
      t1 = _this._sliderTheme;
      t2 = t1.thumbShape;
      t2.toString;
      t3 = _this.___RenderSlider__overlayAnimation_A;
      t4 = _this.___RenderSlider__enableAnimation_A;
      t5 = _this._divisions;
      t5 = t5 != null && t5 > 0;
      if (thumbWidth != null && thumbHeight != null)
        t1 = t1.copyWith$1$thumbSize(new C.WidgetStatePropertyAll(new C.Size(thumbWidth, thumbHeight), type$.WidgetStatePropertyAll_nullable_Size));
      t6 = _this._slider$_textDirection;
      t7 = _this._slider$_value;
      t8 = _this._textScaleFactor;
      t9 = _this._screenSize.get$isEmpty(0) ? _this.get$size(0) : _this._screenSize;
      t2.paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, thumbCenter, t3, t4, t5, _this._labelPainter, _this, t9, t1, t6, t8, t7);
    },
    describeSemanticsConfiguration$1(config) {
      var t1, _this = this;
      _this.super$RenderObject$describeSemanticsConfiguration(config);
      t1 = config._isMergingSemanticsOfDescendants;
      C.assertHelper(!t1);
      config._isSemanticBoundary = false;
      t1 = _this._slider$_onChanged;
      config._setFlag$2(D.SemanticsFlag_64_hasEnabledState, true);
      config._setFlag$2(D.SemanticsFlag_128_isEnabled, t1 != null);
      config._textDirection = _this._slider$_textDirection;
      config._hasBeenAnnotated = true;
      if (_this._slider$_onChanged != null) {
        config.set$onIncrease(_this.get$increaseAction());
        config.set$onDecrease(_this.get$decreaseAction());
      }
      config._attributedValue = C.AttributedString$("" + D.JSNumber_methods.round$0(_this._slider$_value * 100) + "%", D.List_empty1);
      config._hasBeenAnnotated = true;
      config._attributedIncreasedValue = C.AttributedString$("" + D.JSNumber_methods.round$0(C.clampDouble(_this._slider$_value + _this.get$_semanticActionUnit(), 0, 1) * 100) + "%", D.List_empty1);
      config._hasBeenAnnotated = true;
      config._attributedDecreasedValue = C.AttributedString$("" + D.JSNumber_methods.round$0(C.clampDouble(_this._slider$_value - _this.get$_semanticActionUnit(), 0, 1) * 100) + "%", D.List_empty1);
      config._hasBeenAnnotated = true;
    },
    get$_semanticActionUnit() {
      var t1 = this._divisions;
      return t1 != null ? 1 / t1 : this.get$_adjustmentUnit();
    },
    increaseAction$0() {
      var increase, t1, _this = this;
      if (_this._slider$_onChanged != null) {
        _this.onChangeStart.call$1(C.clampDouble(_this._slider$_value, 0, 1));
        increase = C.clampDouble(_this._slider$_value + _this.get$_semanticActionUnit(), 0, 1);
        _this._slider$_onChanged.call$1(increase);
        _this.onChangeEnd.call$1(increase);
        t1 = _this._slider$_state;
        if (t1._framework$_element == null)
          return;
        t1.showValueIndicator$0();
      }
    },
    decreaseAction$0() {
      var decrease, t1, _this = this;
      if (_this._slider$_onChanged != null) {
        _this.onChangeStart.call$1(C.clampDouble(_this._slider$_value, 0, 1));
        decrease = C.clampDouble(_this._slider$_value - _this.get$_semanticActionUnit(), 0, 1);
        _this._slider$_onChanged.call$1(decrease);
        _this.onChangeEnd.call$1(decrease);
        t1 = _this._slider$_state;
        if (t1._framework$_element == null)
          return;
        t1.showValueIndicator$0();
      }
    },
    set$_slider$_onChanged(_onChanged) {
      this._slider$_onChanged = type$.nullable_void_Function_double._as(_onChanged);
    },
    set$onChangeStart(onChangeStart) {
      this.onChangeStart = type$.nullable_void_Function_double._as(onChangeStart);
    },
    set$onChangeEnd(onChangeEnd) {
      this.onChangeEnd = type$.nullable_void_Function_double._as(onChangeEnd);
    }
  };
  A._AdjustSliderIntent.prototype = {};
  A._SliderAdjustmentType.prototype = {
    _enumToString$0() {
      return "_SliderAdjustmentType." + this._name;
    }
  };
  A._ValueIndicatorRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var t2,
        t1 = new A._RenderValueIndicator(this.state, false, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t2 = t1._slider$_state.___SliderState_valueIndicatorController_A;
      t2 === $ && C.throwLateFieldNI("valueIndicatorController");
      t1.___RenderValueIndicator__valueIndicatorAnimation_A = C.CurvedAnimation$(D.Cubic_Dkk, t2, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderValueIndicator_2._as(renderObject)._slider$_state = this.state;
    }
  };
  A._RenderValueIndicator.prototype = {
    get$sizedByParent() {
      return true;
    },
    attach$1(owner) {
      var t1, t2, _this = this;
      _this.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach(owner);
      t1 = _this.___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.addListener$1(0, t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && C.throwLateFieldNI("positionController");
      t1.didRegisterListener$0();
      t1.AnimationLocalListenersMixin__listeners.add$1(0, t2);
    },
    detach$0(_) {
      var t2, _this = this,
        t1 = _this.___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t2 = type$.void_Function._as(_this.get$markNeedsPaint());
      t1.parent.removeListener$1(0, t2);
      t1 = _this._slider$_state.___SliderState_positionController_A;
      t1 === $ && C.throwLateFieldNI("positionController");
      t1.removeListener$1(0, t2);
      _this.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach(0);
    },
    paint$2(context, offset) {
      var t1 = this._slider$_state.paintValueIndicator;
      if (t1 != null)
        t1.call$2(context, offset);
    },
    computeDryLayout$1(constraints) {
      return new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0));
    },
    dispose$0() {
      var t1 = this.___RenderValueIndicator__valueIndicatorAnimation_A;
      t1 === $ && C.throwLateFieldNI("_valueIndicatorAnimation");
      t1.dispose$0();
      this.super$RenderObject$dispose();
    }
  };
  A._SliderDefaultsM2.prototype = {
    get$_slider$_colors() {
      var t1, _this = this,
        value = _this.___SliderDefaultsM2__colors_FI;
      if (value === $) {
        t1 = C.Theme_of(_this.context);
        _this.___SliderDefaultsM2__colors_FI !== $ && C.throwLateFieldADI("_colors");
        value = _this.___SliderDefaultsM2__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$activeTrackColor() {
      return this.get$_slider$_colors().primary;
    },
    get$inactiveTrackColor() {
      return this.get$_slider$_colors().primary.withOpacity$1(0.24);
    },
    get$secondaryActiveTrackColor() {
      return this.get$_slider$_colors().primary.withOpacity$1(0.54);
    },
    get$disabledActiveTrackColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.32);
    },
    get$disabledInactiveTrackColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.12);
    },
    get$disabledSecondaryActiveTrackColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.12);
    },
    get$activeTickMarkColor() {
      return this.get$_slider$_colors().onPrimary.withOpacity$1(0.54);
    },
    get$inactiveTickMarkColor() {
      return this.get$_slider$_colors().primary.withOpacity$1(0.54);
    },
    get$disabledActiveTickMarkColor() {
      return this.get$_slider$_colors().onPrimary.withOpacity$1(0.12);
    },
    get$disabledInactiveTickMarkColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.12);
    },
    get$thumbColor() {
      return this.get$_slider$_colors().primary;
    },
    get$disabledThumbColor() {
      return C.Color_alphaBlend(this.get$_slider$_colors().onSurface.withOpacity$1(0.38), this.get$_slider$_colors().surface);
    },
    get$overlayColor() {
      return this.get$_slider$_colors().primary.withOpacity$1(0.12);
    },
    get$valueIndicatorTextStyle() {
      var t1 = C.Theme_of(this.context).textTheme.bodyLarge;
      t1.toString;
      return t1.copyWith$1$color(this.get$_slider$_colors().onPrimary);
    },
    get$valueIndicatorColor() {
      var result, t1, t2, _this = this,
        value = _this.___SliderDefaultsM2_sliderTheme_FI;
      if (value === $) {
        result = A.SliderTheme_of(_this.context);
        _this.___SliderDefaultsM2_sliderTheme_FI !== $ && C.throwLateFieldADI("sliderTheme");
        _this.___SliderDefaultsM2_sliderTheme_FI = result;
        value = result;
      }
      if (value.valueIndicatorShape instanceof A.RoundedRectSliderValueIndicatorShape) {
        t1 = _this.get$_slider$_colors();
        t2 = t1._inverseSurface;
        return t2 == null ? t1.onSurface : t2;
      }
      return _this.get$_slider$_colors().primary;
    },
    get$valueIndicatorShape() {
      return B.C_RectangularSliderValueIndicatorShape;
    },
    get$thumbShape() {
      return B.C_RoundSliderThumbShape;
    },
    get$trackShape() {
      return B.C_RoundedRectSliderTrackShape;
    },
    get$overlayShape() {
      return B.C_RoundSliderOverlayShape;
    },
    get$tickMarkShape() {
      return B.RoundSliderTickMarkShape_null;
    }
  };
  A._SliderDefaultsM3Year2023.prototype = {
    get$_slider$_colors() {
      var t1, _this = this,
        value = _this.___SliderDefaultsM3Year2023__colors_FI;
      if (value === $) {
        t1 = C.Theme_of(_this.context);
        _this.___SliderDefaultsM3Year2023__colors_FI !== $ && C.throwLateFieldADI("_colors");
        value = _this.___SliderDefaultsM3Year2023__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$activeTrackColor() {
      return this.get$_slider$_colors().primary;
    },
    get$inactiveTrackColor() {
      var t1 = this.get$_slider$_colors(),
        t2 = t1._surfaceContainerHighest;
      return t2 == null ? t1.surface : t2;
    },
    get$secondaryActiveTrackColor() {
      return this.get$_slider$_colors().primary.withOpacity$1(0.54);
    },
    get$disabledActiveTrackColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.38);
    },
    get$disabledInactiveTrackColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.12);
    },
    get$disabledSecondaryActiveTrackColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.12);
    },
    get$activeTickMarkColor() {
      return this.get$_slider$_colors().onPrimary.withOpacity$1(0.38);
    },
    get$inactiveTickMarkColor() {
      var t1 = this.get$_slider$_colors(),
        t2 = t1._onSurfaceVariant;
      return (t2 == null ? t1.onSurface : t2).withOpacity$1(0.38);
    },
    get$disabledActiveTickMarkColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.38);
    },
    get$disabledInactiveTickMarkColor() {
      return this.get$_slider$_colors().onSurface.withOpacity$1(0.38);
    },
    get$thumbColor() {
      return this.get$_slider$_colors().primary;
    },
    get$disabledThumbColor() {
      return C.Color_alphaBlend(this.get$_slider$_colors().onSurface.withOpacity$1(0.38), this.get$_slider$_colors().surface);
    },
    get$overlayColor() {
      return C._WidgetStateColor$(new A._SliderDefaultsM3Year2023_overlayColor_closure(this));
    },
    get$valueIndicatorTextStyle() {
      var t1 = C.Theme_of(this.context).textTheme.labelMedium;
      t1.toString;
      return t1.copyWith$1$color(this.get$_slider$_colors().onPrimary);
    },
    get$valueIndicatorColor() {
      return this.get$_slider$_colors().primary;
    },
    get$valueIndicatorShape() {
      return B.C_DropSliderValueIndicatorShape;
    },
    get$thumbShape() {
      return B.C_RoundSliderThumbShape;
    },
    get$trackShape() {
      return B.C_RoundedRectSliderTrackShape;
    },
    get$overlayShape() {
      return B.C_RoundSliderOverlayShape;
    },
    get$tickMarkShape() {
      return B.RoundSliderTickMarkShape_null;
    }
  };
  A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype = {
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
    },
    detach$0(_) {
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
      this.super$RenderObject$detach(0);
    }
  };
  A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0.prototype = {
    attach$1(owner) {
      this.super$RenderObject$attach(owner);
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.add$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
    },
    detach$0(_) {
      C.assertHelper(!this.RelayoutWhenSystemFontsChangeMixin__hasPendingSystemFontsDidChangeCallBack);
      C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding__systemFonts._systemFontsCallbacks.remove$1(0, type$.void_Function._as(this.get$_scheduleSystemFontsUpdate()));
      this.super$RenderObject$detach(0);
    }
  };
  A.__SliderState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__SliderState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.SliderTheme.prototype = {
    wrap$2(_, context, child) {
      return A.SliderTheme$(child, this.data);
    },
    updateShouldNotify$1(oldWidget) {
      return !this.data.$eq(0, type$.SliderTheme._as(oldWidget).data);
    }
  };
  A.ShowValueIndicator.prototype = {
    _enumToString$0() {
      return "ShowValueIndicator." + this._name;
    }
  };
  A.Thumb.prototype = {
    _enumToString$0() {
      return "Thumb." + this._name;
    }
  };
  A.SliderComponentShape.prototype = {};
  A.SliderTickMarkShape.prototype = {};
  A.SliderTrackShape.prototype = {};
  A.RangeSliderThumbShape.prototype = {};
  A.RangeSliderValueIndicatorShape.prototype = {};
  A.RangeSliderTickMarkShape.prototype = {};
  A.RangeSliderTrackShape.prototype = {
    get$isRounded() {
      return false;
    }
  };
  A.BaseSliderTrackShape.prototype = {
    getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme) {
      var t2, t3, trackLeft, trackTop, trackRight,
        thumbWidth = sliderTheme.thumbShape.getPreferredSize$2(isEnabled, isDiscrete)._dx,
        overlayWidth = sliderTheme.overlayShape.getPreferredSize$2(isEnabled, isDiscrete)._dx,
        t1 = sliderTheme.trackHeight;
      t1.toString;
      C.assertHelper(overlayWidth >= 0);
      C.assertHelper(t1 >= 0);
      t2 = sliderTheme.padding == null;
      t3 = t2 ? Math.max(overlayWidth / 2, thumbWidth / 2) : 0;
      trackLeft = offset._dx + t3;
      trackTop = offset._dy + (parentBox.get$size(0)._dy - t1) / 2;
      t3 = parentBox.get$size(0);
      t2 = t2 ? Math.max(thumbWidth, overlayWidth) : 0;
      trackRight = trackLeft + t3._dx - t2;
      return new C.Rect(Math.min(trackLeft, trackRight), trackTop, Math.max(trackLeft, trackRight), trackTop + t1);
    },
    getPreferredRect$3$isDiscrete$parentBox$sliderTheme(isDiscrete, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, D.Offset_0_0, parentBox, sliderTheme);
    },
    getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(isDiscrete, offset, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, offset, parentBox, sliderTheme);
    },
    getPreferredRect$2$parentBox$sliderTheme(parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(false, false, D.Offset_0_0, parentBox, sliderTheme);
    },
    get$isRounded() {
      return false;
    }
  };
  A.RoundedRectSliderTrackShape.prototype = {
    paint$10$enableAnimation$isDiscrete$isEnabled$parentBox$secondaryOffset$sliderTheme$textDirection$thumbCenter(context, offset, enableAnimation, isDiscrete, isEnabled, parentBox, secondaryOffset, sliderTheme, textDirection, thumbCenter) {
      var t1, t2, t3, t4, t5, t6, activePaint, inactivePaint, _0_1, rightTrackPaint, _0_2, trackRect, trackRadius, activeTrackRadius, isLTR, isRTL, t7, t8, t9, t10, showSecondaryTrack, secondaryTrackPaint;
      type$.Animation_double._as(enableAnimation);
      t1 = sliderTheme.disabledActiveTrackColor;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.disabledInactiveTrackColor;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.activeTrackColor;
      C.assertHelper(t3 != null);
      t4 = sliderTheme.inactiveTrackColor;
      C.assertHelper(t4 != null);
      C.assertHelper(sliderTheme.thumbShape != null);
      t5 = sliderTheme.trackHeight;
      if (t5 == null || t5 <= 0)
        return;
      t6 = $.$get$_renderer();
      activePaint = t6.createPaint$0();
      t3 = new C.ColorTween(t1, t3).transform$1(0, enableAnimation.get$value(0));
      t3.toString;
      activePaint.set$color(0, t3);
      inactivePaint = t6.createPaint$0();
      t4 = new C.ColorTween(t2, t4).transform$1(0, enableAnimation.get$value(0));
      t4.toString;
      inactivePaint.set$color(0, t4);
      switch (textDirection.index) {
        case 1:
          t1 = new C._Record_2(activePaint, inactivePaint);
          break;
        case 0:
          t1 = new C._Record_2(inactivePaint, activePaint);
          break;
        default:
          t1 = null;
      }
      _0_1 = t1._0;
      rightTrackPaint = null;
      _0_2 = t1._1;
      rightTrackPaint = _0_2;
      trackRect = this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme);
      t1 = trackRect.bottom;
      t2 = trackRect.top;
      t3 = t1 - t2;
      t4 = t3 / 2;
      trackRadius = new C.Radius(t4, t4);
      t3 = (t3 + 2) / 2;
      activeTrackRadius = new C.Radius(t3, t3);
      isLTR = textDirection === D.TextDirection_1;
      isRTL = textDirection === D.TextDirection_0;
      t3 = thumbCenter._dx;
      t4 = trackRect.right;
      t5.toString;
      t5 /= 2;
      if (t3 < t4 - t5) {
        t7 = context.get$canvas(context);
        t8 = isRTL ? t2 - 1 : t2;
        t9 = isRTL ? t1 + 1 : t1;
        t10 = isLTR ? trackRadius : activeTrackRadius;
        t7.drawRRect$2(C.RRect$fromLTRBR(t3 - t5, t8, t4, t9, t10), rightTrackPaint);
      }
      t4 = trackRect.left;
      if (t3 > t4 + t5) {
        t7 = context.get$canvas(context);
        t8 = isLTR ? t2 - 1 : t2;
        t9 = isLTR ? t1 + 1 : t1;
        t10 = isLTR ? activeTrackRadius : trackRadius;
        t7.drawRRect$2(C.RRect$fromLTRBR(t4, t8, t3 + t5, t9, t10), _0_1);
      }
      if (secondaryOffset != null) {
        t4 = secondaryOffset._dx;
        showSecondaryTrack = isLTR ? t4 > t3 : t4 < t3;
      } else
        showSecondaryTrack = false;
      if (showSecondaryTrack) {
        secondaryTrackPaint = t6.createPaint$0();
        t4 = new C.ColorTween(sliderTheme.disabledSecondaryActiveTrackColor, sliderTheme.secondaryActiveTrackColor).transform$1(0, enableAnimation.get$value(0));
        t4.toString;
        secondaryTrackPaint.set$color(0, t4);
        if (isLTR)
          context.get$canvas(context).drawRRect$2(C.RRect$fromLTRBAndCorners(t3, t2, secondaryOffset._dx, t1, D.Radius_0_0, trackRadius, D.Radius_0_0, trackRadius), secondaryTrackPaint);
        else
          context.get$canvas(context).drawRRect$2(C.RRect$fromLTRBAndCorners(secondaryOffset._dx, t2, t3, t1, trackRadius, D.Radius_0_0, trackRadius, D.Radius_0_0), secondaryTrackPaint);
      }
    },
    get$isRounded() {
      return true;
    }
  };
  A.BaseRangeSliderTrackShape.prototype = {
    getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme) {
      var t2, t3, thumbWidth, overlayWidth, trackLeft, trackTop, trackRight,
        t1 = sliderTheme.rangeThumbShape;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.overlayShape;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.trackHeight;
      C.assertHelper(t3 != null);
      thumbWidth = t1.getPreferredSize$2(isEnabled, isDiscrete)._dx;
      overlayWidth = t2.getPreferredSize$2(isEnabled, isDiscrete)._dx;
      t3.toString;
      C.assertHelper(overlayWidth >= 0);
      C.assertHelper(t3 >= 0);
      trackLeft = offset._dx + Math.max(overlayWidth / 2, thumbWidth / 2);
      trackTop = offset._dy + (parentBox.get$size(0)._dy - t3) / 2;
      trackRight = trackLeft + parentBox.get$size(0)._dx - Math.max(thumbWidth, overlayWidth);
      return new C.Rect(Math.min(trackLeft, trackRight), trackTop, Math.max(trackLeft, trackRight), trackTop + t3);
    },
    getPreferredRect$3$isDiscrete$parentBox$sliderTheme(isDiscrete, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, D.Offset_0_0, parentBox, sliderTheme);
    },
    getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(isDiscrete, offset, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, offset, parentBox, sliderTheme);
    },
    getPreferredRect$2$parentBox$sliderTheme(parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(false, false, D.Offset_0_0, parentBox, sliderTheme);
    }
  };
  A.RoundedRectRangeSliderTrackShape.prototype = {
    paint$10$enableAnimation$endThumbCenter$isDiscrete$isEnabled$parentBox$sliderTheme$startThumbCenter$textDirection(context, offset, enableAnimation, endThumbCenter, isDiscrete, isEnabled, parentBox, sliderTheme, startThumbCenter, textDirection) {
      var t1, t2, t3, t4, t5, t6, t7, activePaint, inactivePaint, _0_1, rightThumbOffset, _0_2, leftThumbOffset, trackRect, trackRadius;
      type$.Animation_double._as(enableAnimation);
      t1 = sliderTheme.disabledActiveTrackColor;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.disabledInactiveTrackColor;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.activeTrackColor;
      C.assertHelper(t3 != null);
      t4 = sliderTheme.inactiveTrackColor;
      C.assertHelper(t4 != null);
      t5 = sliderTheme.rangeThumbShape;
      C.assertHelper(t5 != null);
      t6 = sliderTheme.trackHeight;
      if (t6 == null || t6 <= 0)
        return;
      t7 = $.$get$_renderer();
      activePaint = t7.createPaint$0();
      t3 = new C.ColorTween(t1, t3).transform$1(0, enableAnimation.get$value(0));
      t3.toString;
      activePaint.set$color(0, t3);
      inactivePaint = t7.createPaint$0();
      t4 = new C.ColorTween(t2, t4).transform$1(0, enableAnimation.get$value(0));
      t4.toString;
      inactivePaint.set$color(0, t4);
      switch (textDirection.index) {
        case 1:
          t1 = new C._Record_2(startThumbCenter, endThumbCenter);
          break;
        case 0:
          t1 = new C._Record_2(endThumbCenter, startThumbCenter);
          break;
        default:
          t1 = null;
      }
      _0_1 = t1._0;
      rightThumbOffset = null;
      _0_2 = t1._1;
      rightThumbOffset = _0_2;
      leftThumbOffset = _0_1;
      C.assertHelper(t5.getPreferredSize$2(isEnabled, isDiscrete)._dx / 2 > 0);
      trackRect = this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme);
      t1 = trackRect.bottom;
      t2 = trackRect.top;
      t3 = (t1 - t2) / 2;
      trackRadius = new C.Radius(t3, t3);
      t3 = context.get$canvas(context);
      t4 = leftThumbOffset._dx;
      t3.drawRRect$2(C.RRect$fromLTRBAndCorners(trackRect.left, t2, t4, t1, trackRadius, D.Radius_0_0, trackRadius, D.Radius_0_0), inactivePaint);
      t3 = context.get$canvas(context);
      t5 = rightThumbOffset._dx;
      t3.drawRRect$2(C.RRect$fromLTRBAndCorners(t5, t2, trackRect.right, t1, D.Radius_0_0, trackRadius, D.Radius_0_0, trackRadius), inactivePaint);
      t3 = context.get$canvas(context);
      t6.toString;
      t6 /= 2;
      t3.drawRRect$2(C.RRect$fromLTRBR(t4 - t6, t2 - 1, t5 + t6, t1 + 1, trackRadius), activePaint);
    },
    get$isRounded() {
      return true;
    }
  };
  A.RoundSliderTickMarkShape.prototype = {
    getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme) {
      var t2,
        t1 = sliderTheme.trackHeight;
      C.assertHelper(t1 != null);
      t2 = this.tickMarkRadius;
      if (t2 == null) {
        t1.toString;
        t1 /= 4;
      } else
        t1 = t2;
      t1 *= 2;
      return new C.Size(t1, t1);
    },
    paint$8$enableAnimation$isEnabled$parentBox$sliderTheme$textDirection$thumbCenter(context, center, enableAnimation, isEnabled, parentBox, sliderTheme, textDirection, thumbCenter) {
      var t1, t2, t3, t4, xOffset, _0_2, _0_4, _1_1, end, _1_2, paint, tickMarkRadius;
      type$.Animation_double._as(enableAnimation);
      t1 = sliderTheme.disabledActiveTickMarkColor;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.disabledInactiveTickMarkColor;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.activeTickMarkColor;
      C.assertHelper(t3 != null);
      t4 = sliderTheme.inactiveTickMarkColor;
      C.assertHelper(t4 != null);
      xOffset = center._dx - thumbCenter._dx;
      $label0$0: {
        _0_2 = D.TextDirection_1 === textDirection;
        if (_0_2 && xOffset > 0) {
          t1 = new C._Record_2(t2, t4);
          break $label0$0;
        }
        _0_4 = D.TextDirection_0 === textDirection;
        if (_0_4 && xOffset < 0) {
          t1 = new C._Record_2(t2, t4);
          break $label0$0;
        }
        if (!_0_2)
          t2 = _0_4;
        else
          t2 = true;
        if (t2) {
          t1 = new C._Record_2(t1, t3);
          break $label0$0;
        }
        t1 = null;
      }
      _1_1 = t1._0;
      end = null;
      _1_2 = t1._1;
      end = _1_2;
      paint = $.$get$_renderer().createPaint$0();
      t1 = new C.ColorTween(_1_1, end).transform$1(0, enableAnimation.get$value(0));
      t1.toString;
      paint.set$color(0, t1);
      tickMarkRadius = this.getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme)._dx / 2;
      if (tickMarkRadius > 0)
        context.get$canvas(context).drawCircle$3(center, tickMarkRadius, paint);
    }
  };
  A.RoundRangeSliderTickMarkShape.prototype = {
    getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme) {
      var t1 = sliderTheme.trackHeight;
      C.assertHelper(t1 != null);
      t1.toString;
      t1 = t1 / 4 * 2;
      return new C.Size(t1, t1);
    },
    paint$9$enableAnimation$endThumbCenter$isEnabled$parentBox$sliderTheme$startThumbCenter$textDirection(context, center, enableAnimation, endThumbCenter, isEnabled, parentBox, sliderTheme, startThumbCenter, textDirection) {
      var begin, begin0, end, end0, t1, paint, tickMarkRadius;
      type$.Animation_double._as(enableAnimation);
      begin = sliderTheme.disabledActiveTickMarkColor;
      C.assertHelper(begin != null);
      begin0 = sliderTheme.disabledInactiveTickMarkColor;
      C.assertHelper(begin0 != null);
      end = sliderTheme.activeTickMarkColor;
      C.assertHelper(end != null);
      end0 = sliderTheme.inactiveTickMarkColor;
      C.assertHelper(end0 != null);
      switch (textDirection.index) {
        case 1:
          t1 = center._dx;
          t1 = startThumbCenter._dx < t1 && t1 < endThumbCenter._dx;
          break;
        case 0:
          t1 = center._dx;
          t1 = endThumbCenter._dx < t1 && t1 < startThumbCenter._dx;
          break;
        default:
          t1 = null;
      }
      begin = t1 ? begin : begin0;
      end = t1 ? end : end0;
      paint = $.$get$_renderer().createPaint$0();
      t1 = new C.ColorTween(begin, end).transform$1(0, enableAnimation.get$value(0));
      t1.toString;
      paint.set$color(0, t1);
      tickMarkRadius = this.getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme)._dx / 2;
      if (tickMarkRadius > 0)
        context.get$canvas(context).drawCircle$3(center, tickMarkRadius, paint);
    }
  };
  A.RoundSliderThumbShape.prototype = {
    getPreferredSize$2(isEnabled, isDiscrete) {
      return new C.Size(20, 20);
    },
    paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, center, activationAnimation, enableAnimation, isDiscrete, labelPainter, parentBox, sizeWithOverflow, sliderTheme, textDirection, textScaleFactor, value) {
      var t3, canvas, t4, radius, evaluatedElevation, path, t1 = {},
        t2 = type$.Animation_double;
      t2._as(activationAnimation);
      t2._as(enableAnimation);
      t2 = sliderTheme.disabledThumbColor;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.thumbColor;
      C.assertHelper(t3 != null);
      canvas = context.get$canvas(context);
      t4 = type$.Tween_double;
      t3 = new C.ColorTween(t2, t3).transform$1(0, enableAnimation.get$value(0));
      t3.toString;
      radius = new C.Tween(10, 10, t4).transform$1(0, enableAnimation.get$value(0));
      evaluatedElevation = new C.Tween(1, 6, t4).transform$1(0, activationAnimation.get$value(0));
      t4 = $.$get$_renderer();
      path = t4.createPath$0();
      t2 = 2 * radius;
      path.addArc$3(C.Rect$fromCenter(center, t2, t2), 0, 6.283185307179586);
      t1.paintShadows = true;
      C.assertHelper(new A.RoundSliderThumbShape_paint_closure(t1, canvas, path, evaluatedElevation).call$0());
      if (t1.paintShadows)
        canvas.drawShadow$4(path, D.Color_vnR, evaluatedElevation, true);
      t1 = t4.createPaint$0();
      t1.set$color(0, t3);
      canvas.drawCircle$3(center, radius, t1);
    }
  };
  A.RoundRangeSliderThumbShape.prototype = {
    getPreferredSize$2(isEnabled, isDiscrete) {
      return new C.Size(20, 20);
    },
    paint$10$activationAnimation$enableAnimation$isDiscrete$isOnTop$isPressed$sliderTheme$textDirection$thumb(context, center, activationAnimation, enableAnimation, isDiscrete, isOnTop, isPressed, sliderTheme, textDirection, thumb) {
      var canvas, t3, radius, strokePaint, evaluatedElevation, shadowPath, t4, t1 = {},
        t2 = type$.Animation_double;
      t2._as(activationAnimation);
      t2._as(enableAnimation);
      C.assertHelper(sliderTheme.showValueIndicator != null);
      t2 = sliderTheme.overlappingShapeStrokeColor;
      C.assertHelper(t2 != null);
      canvas = context.get$canvas(context);
      t3 = type$.Tween_double;
      radius = new C.Tween(10, 10, t3).transform$1(0, enableAnimation.get$value(0));
      if (isOnTop) {
        strokePaint = $.$get$_renderer().createPaint$0();
        t2.toString;
        strokePaint.set$color(0, t2);
        strokePaint.set$strokeWidth(1);
        strokePaint.set$style(0, D.PaintingStyle_1);
        canvas.drawCircle$3(center, radius, strokePaint);
      }
      t2 = new C.ColorTween(sliderTheme.disabledThumbColor, sliderTheme.thumbColor).transform$1(0, enableAnimation.get$value(0));
      t2.toString;
      evaluatedElevation = isPressed ? new C.Tween(1, 6, t3).transform$1(0, activationAnimation.get$value(0)) : 1;
      t3 = $.$get$_renderer();
      shadowPath = t3.createPath$0();
      t4 = 2 * radius;
      shadowPath.addArc$3(C.Rect$fromCenter(center, t4, t4), 0, 6.283185307179586);
      t1.paintShadows = true;
      C.assertHelper(new A.RoundRangeSliderThumbShape_paint_closure(t1, canvas, shadowPath, evaluatedElevation).call$0());
      if (t1.paintShadows)
        canvas.drawShadow$4(shadowPath, D.Color_vnR, evaluatedElevation, true);
      t1 = t3.createPaint$0();
      t1.set$color(0, t2);
      canvas.drawCircle$3(center, radius, t1);
    }
  };
  A.RoundSliderOverlayShape.prototype = {
    getPreferredSize$2(isEnabled, isDiscrete) {
      return new C.Size(48, 48);
    },
    paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, center, activationAnimation, enableAnimation, isDiscrete, labelPainter, parentBox, sizeWithOverflow, sliderTheme, textDirection, textScaleFactor, value) {
      var canvas, t2, t3,
        t1 = type$.Animation_double;
      t1._as(activationAnimation);
      t1._as(enableAnimation);
      canvas = context.get$canvas(context);
      t1 = new C.Tween(0, 24, type$.Tween_double).transform$1(0, activationAnimation.get$value(0));
      t2 = $.$get$_renderer().createPaint$0();
      t3 = sliderTheme.overlayColor;
      t3.toString;
      t2.set$color(0, t3);
      canvas.drawCircle$3(center, t1, t2);
    }
  };
  A.RectangularSliderValueIndicatorShape.prototype = {};
  A.RectangularRangeSliderValueIndicatorShape.prototype = {};
  A.RangeValues.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.RangeValues && other.start === this.start && other.end === this.end;
    },
    get$hashCode(_) {
      return C.Object_hash(this.start, this.end, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return C.objectRuntimeType(this, "RangeValues") + "(" + C.S(this.start) + ", " + C.S(this.end) + ")";
    }
  };
  A.DropSliderValueIndicatorShape.prototype = {};
  A.RoundedRectSliderValueIndicatorShape.prototype = {};
  A._RoundedRectRangeSliderTrackShape_RangeSliderTrackShape_BaseRangeSliderTrackShape.prototype = {};
  A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape.prototype = {};
  A._TextButtonWithIcon.prototype = {
    defaultStyleOf$1(context) {
      var buttonStyle, t1, defaultFontSize;
      C.Theme_of(context);
      buttonStyle = this.super$TextButton$defaultStyleOf(context);
      t1 = buttonStyle.get$textStyle();
      if (t1 == null)
        defaultFontSize = null;
      else {
        t1 = t1.resolve$1(D.Set_empty);
        t1 = t1 == null ? null : t1.fontSize;
        defaultFontSize = t1;
      }
      if (defaultFontSize == null)
        defaultFontSize = 14;
      t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      t1 = t1 == null ? null : t1.get$textScaler();
      t1 = (t1 == null ? D._LinearTextScaler_1 : t1).scale$1(0, defaultFontSize);
      return buttonStyle.copyWith$1$padding(new C.WidgetStatePropertyAll(C.ButtonStyleButton_scaledPadding(B.EdgeInsetsDirectional_12_8_16_8, D.EdgeInsets_4_0_4_0, D.EdgeInsets_4_0_4_0, t1 / 14), type$.WidgetStatePropertyAll_EdgeInsetsGeometry));
    }
  };
  A._TextButtonWithIconChild.prototype = {
    build$1(context) {
      var defaultFontSize, _null = null,
        t1 = this.buttonStyle.textStyle,
        t2 = _null;
      if (t1 == null)
        t1 = t2;
      else {
        t1 = t1.resolve$1(D.Set_empty);
        t1 = t1 == null ? _null : t1.fontSize;
      }
      defaultFontSize = t1;
      if (defaultFontSize == null)
        defaultFontSize = 14;
      t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      t1 = t1 == null ? _null : t1.get$textScaler();
      t1 = C.lerpDouble(8, 4, C.clampDouble((t1 == null ? D._LinearTextScaler_1 : t1).scale$1(0, defaultFontSize) / 14, 1, 2) - 1);
      t1.toString;
      C.TextButtonTheme_of(context);
      t1 = C._setArrayType([this.icon, new C.SizedBox(t1, _null, _null, _null), new C.Flexible(1, D.FlexFit_1, this.label, _null)], type$.JSArray_Widget);
      return C.Row$(t1, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1);
    }
  };
  A.NetworkImage.prototype = {
    obtainKey$1(configuration) {
      return new C.SynchronousFuture(this, type$.SynchronousFuture_NetworkImage);
    },
    loadBuffer$2(key, decode) {
      var chunkEvents;
      type$.NetworkImage._as(key);
      type$.Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int._as(decode);
      chunkEvents = C.StreamController_StreamController(null, null, null, false, type$.ImageChunkEvent);
      type$.NetworkImage_2._as(key);
      return A._ForwardingImageStreamCompleter$(this.__network_image_web$_loadAsync$3(key, decode, chunkEvents), key.url, this._imageStreamInformationCollector$1(key));
    },
    loadImage$2(key, decode) {
      var chunkEvents;
      type$.NetworkImage._as(key);
      type$.Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int._as(decode);
      chunkEvents = C.StreamController_StreamController(null, null, null, false, type$.ImageChunkEvent);
      type$.NetworkImage_2._as(key);
      return A._ForwardingImageStreamCompleter$(this.__network_image_web$_loadAsync$3(key, decode, chunkEvents), key.url, this._imageStreamInformationCollector$1(key));
    },
    _imageStreamInformationCollector$1(key) {
      var t1 = {};
      t1.collector = null;
      C.assertHelper(new A.NetworkImage__imageStreamInformationCollector_closure(t1, this, key).call$0());
      return t1.collector;
    },
    __network_image_web$_loadAsync$3(key, decode, chunkEvents) {
      return this._loadAsync$body$NetworkImage(key, type$.Future_Codec_Function_ImmutableBuffer._as(decode), type$.StreamController_ImageChunkEvent._as(chunkEvents));
    },
    _loadAsync$body$NetworkImage(key, decode, chunkEvents) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageStreamCompleter),
        $async$returnValue, $async$self = this, loadViaDecode, loadViaImgElement, t1, resolved, $async$temp1, $async$temp2, $async$temp3;
      var $async$__network_image_web$_loadAsync$3 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                C.assertHelper(key.$eq(0, $async$self));
                loadViaDecode = new A.NetworkImage__loadAsync_loadViaDecode($async$self, decode, chunkEvents, key);
                loadViaImgElement = new A.NetworkImage__loadAsync_loadViaImgElement($async$self, key);
                t1 = self;
                $async$goto = !(t1.window.flutterCanvasKit != null || t1.window._flutter_skwasmInstance != null) ? 3 : 4;
                break;
              case 3:
                // then
                t1 = key.url;
                resolved = C.Uri_base().resolve$1(t1);
                $async$temp1 = C;
                $async$temp2 = new C._ControllerStream(chunkEvents, C._instanceType(chunkEvents)._eval$1("_ControllerStream<1>"));
                $async$temp3 = C;
                $async$goto = 5;
                return C._asyncAwait($.$get$_renderer().instantiateImageCodecFromUrl$2$chunkCallback(resolved, new A.NetworkImage__loadAsync_closure(chunkEvents)), $async$__network_image_web$_loadAsync$3);
              case 5:
                // returning from await.
                $async$returnValue = $async$temp1.MultiFrameImageStreamCompleter$($async$temp2, $async$temp3.Future_Future$value($async$result, type$.Codec), t1, $async$self._imageStreamInformationCollector$1(key), 1);
                // goto return
                $async$goto = 1;
                break;
              case 4:
                // join
                switch (0) {
                  case 0:
                    $async$returnValue = loadViaDecode.call$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return C._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return C._asyncStartSync($async$__network_image_web$_loadAsync$3, $async$completer);
    },
    _fetchImageBytes$1(decode) {
      return this._fetchImageBytes$body$NetworkImage(type$.Future_Codec_Function_ImmutableBuffer._as(decode));
    },
    _fetchImageBytes$body$NetworkImage(decode) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$self = this, bytes, t1, resolved, t2, completer, request, $async$temp1;
      var $async$_fetchImageBytes$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.url;
              resolved = C.Uri_base().resolve$1(t1);
              t2 = new C._Future($.Zone__current, type$._Future_JSObject);
              completer = new C._AsyncCompleter(t2, type$._AsyncCompleter_JSObject);
              request = A._httpClient();
              request.open("GET", t1, true);
              request.responseType = "arraybuffer";
              request.addEventListener("load", C._functionToJS1(new A.NetworkImage__fetchImageBytes_closure(request, completer, resolved)));
              request.addEventListener("error", C._functionToJS1(new A.NetworkImage__fetchImageBytes_closure0(completer, request, resolved)));
              request.send();
              $async$goto = 3;
              return C._asyncAwait(t2, $async$_fetchImageBytes$1);
            case 3:
              // returning from await.
              t1 = request.response;
              t1.toString;
              bytes = C.NativeUint8List_NativeUint8List$view(type$.NativeByteBuffer._as(t1), 0, null);
              if (bytes.byteLength === 0)
                throw C.wrapException(A.NetworkImageLoadException$(C.getProperty(request, "status", type$.int), resolved));
              $async$temp1 = decode;
              $async$goto = 4;
              return C._asyncAwait(C.ImmutableBuffer_fromUint8List(bytes), $async$_fetchImageBytes$1);
            case 4:
              // returning from await.
              $async$returnValue = $async$temp1.call$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_fetchImageBytes$1, $async$completer);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.NetworkImage)
        t1 = other.url === this.url;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(this.url, 1, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return C.objectRuntimeType(this, "NetworkImage") + '("' + this.url + '", scale: ' + D.JSInt_methods.toStringAsFixed$1(1, 1) + ")";
    },
    $isNetworkImage0: 1,
    get$url(receiver) {
      return this.url;
    },
    get$scale() {
      return 1;
    }
  };
  A._ForwardingImageStreamCompleter.prototype = {
    _ForwardingImageStreamCompleter$3$debugLabel$informationCollector(task, debugLabel, informationCollector) {
      var _this = this;
      _this.debugLabel = debugLabel;
      _this.task.then$1$2$onError(0, new A._ForwardingImageStreamCompleter_closure(_this), new A._ForwardingImageStreamCompleter_closure0(_this, informationCollector), type$.Null);
    },
    onDisposed$0() {
      var t1, _this = this;
      if (_this.resolved) {
        t1 = _this.___ForwardingImageStreamCompleter_handle_F;
        t1 === $ && C.throwLateFieldNI("handle");
        t1.dispose$0();
      }
      _this.__network_image_web$_disposed = true;
      _this.super$ImageStreamCompleter$onDisposed();
    }
  };
  A.WebImageInfo.prototype = {
    clone$0(_) {
      return new A.WebImageInfo(this.htmlImage, this.debugLabel);
    },
    dispose$0() {
    },
    get$image(_) {
      return C.throwExpression(C.UnsupportedError$("Could not create image data for this image because access to it is restricted by the Same-Origin Policy.\nSee https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"));
    },
    isCloneOf$1(other) {
      if (!(other instanceof A.WebImageInfo))
        return false;
      return J.$eq$(other.htmlImage, this.htmlImage) && other.debugLabel === this.debugLabel;
    },
    get$scale(_) {
      return 1;
    },
    get$sizeBytes() {
      var t1 = this.htmlImage;
      return D.JSNumber_methods.toInt$0(4 * C._asNum(t1.naturalWidth) * C._asNum(t1.naturalHeight));
    },
    $isImageInfo: 1,
    get$debugLabel() {
      return this.debugLabel;
    }
  };
  A.BorderRadiusDirectional.prototype = {
    get$_topStart() {
      return this.topStart;
    },
    get$_topEnd() {
      return this.topEnd;
    },
    get$_bottomStart() {
      return this.bottomStart;
    },
    get$_bottomEnd() {
      return this.bottomEnd;
    },
    get$_topLeft() {
      return D.Radius_0_0;
    },
    get$_topRight() {
      return D.Radius_0_0;
    },
    get$_bottomLeft() {
      return D.Radius_0_0;
    },
    get$_bottomRight() {
      return D.Radius_0_0;
    },
    subtract$1(other) {
      if (other instanceof A.BorderRadiusDirectional)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1(_, other) {
      if (other instanceof A.BorderRadiusDirectional)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub(_, other) {
      var _this = this;
      type$.BorderRadiusDirectional._as(other);
      return new A.BorderRadiusDirectional(_this.topStart.$sub(0, other.topStart), _this.topEnd.$sub(0, other.topEnd), _this.bottomStart.$sub(0, other.bottomStart), _this.bottomEnd.$sub(0, other.bottomEnd));
    },
    $add(_, other) {
      var _this = this;
      type$.BorderRadiusDirectional._as(other);
      return new A.BorderRadiusDirectional(_this.topStart.$add(0, other.topStart), _this.topEnd.$add(0, other.topEnd), _this.bottomStart.$add(0, other.bottomStart), _this.bottomEnd.$add(0, other.bottomEnd));
    },
    $mul(_, other) {
      var _this = this;
      return new A.BorderRadiusDirectional(_this.topStart.$mul(0, other), _this.topEnd.$mul(0, other), _this.bottomStart.$mul(0, other), _this.bottomEnd.$mul(0, other));
    },
    resolve$1(direction) {
      var _this = this;
      C.assertHelper(direction != null);
      switch (direction.index) {
        case 0:
          return new C.BorderRadius(_this.topEnd, _this.topStart, _this.bottomEnd, _this.bottomStart);
        case 1:
          return new C.BorderRadius(_this.topStart, _this.topEnd, _this.bottomStart, _this.bottomEnd);
      }
    }
  };
  A.Gradient.prototype = {
    _impliedStops$0() {
      var separation, _list, index,
        t1 = this.stops;
      if (t1 != null)
        return t1;
      t1 = this.colors;
      if (C.assertTest(t1.length >= 2))
        C.assertThrow("colors list must have at least two colors");
      t1 = t1.length;
      separation = 1 / (t1 - 1);
      _list = J.JSArray_JSArray$allocateFixed(t1, type$.double);
      for (index = 0; index < t1; ++index)
        _list[index] = index * separation;
      return _list;
    }
  };
  A.LinearGradient.prototype = {
    createShader$2$textDirection(_, rect, textDirection) {
      var _this = this,
        t1 = _this.begin.resolve$1(textDirection).withinRect$1(rect),
        t2 = _this.end.resolve$1(textDirection).withinRect$1(rect),
        t3 = _this._impliedStops$0();
      return C.Gradient_Gradient$linear(t1, t2, _this.colors, t3, _this.tileMode, null);
    },
    createShader$1(_, rect) {
      return this.createShader$2$textDirection(0, rect, null);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.LinearGradient && other.begin.$eq(0, _this.begin) && other.end.$eq(0, _this.end) && other.tileMode === _this.tileMode && C.listEquals(other.colors, _this.colors, type$.Color) && C.listEquals(other.stops, _this.stops, type$.double);
    },
    get$hashCode(_) {
      var _this = this,
        t1 = C.Object_hashAll(_this.colors),
        t2 = _this.stops;
      t2 = t2 == null ? null : C.Object_hashAll(t2);
      return C.Object_hash(_this.begin, _this.end, _this.tileMode, _this.transform, t1, t2, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = C._setArrayType(["begin: " + _this.begin.toString$0(0), "end: " + _this.end.toString$0(0), "colors: " + C.S(_this.colors)], type$.JSArray_String),
        t2 = _this.stops;
      if (t2 != null)
        t1.push("stops: " + C.S(t2));
      t1.push("tileMode: " + _this.tileMode.toString$0(0));
      return C.objectRuntimeType(_this, "LinearGradient") + "(" + D.JSArray_methods.join$1(t1, ", ") + ")";
    }
  };
  A.FileImage.prototype = {
    obtainKey$1(configuration) {
      return new C.SynchronousFuture(this, type$.SynchronousFuture_FileImage);
    },
    loadBuffer$2(key, decode) {
      type$.FileImage._as(key);
      return C.MultiFrameImageStreamCompleter$(null, this._image_provider$_loadAsync$2$decode(key, type$.Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int._as(decode)), key.file._io$_path, new A.FileImage_loadBuffer_closure(this), key.scale);
    },
    loadImage$2(key, decode) {
      type$.FileImage._as(key);
      return C.MultiFrameImageStreamCompleter$(null, this._image_provider$_loadAsync$2$decode(key, type$.Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int._as(decode)), key.file._io$_path, new A.FileImage_loadImage_closure(this), key.scale);
    },
    _image_provider$_loadAsync$2$decode(key, decode) {
      return this._loadAsync$body$FileImage(key, type$.Future_Codec_Function_ImmutableBuffer._as(decode));
    },
    _loadAsync$body$FileImage(key, decode) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Codec),
        $async$self = this;
      var $async$_image_provider$_loadAsync$2$decode = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              C.assertHelper(key.$eq(0, $async$self));
              $async$goto = 2;
              return C._asyncAwait($async$self.file.length$0(0), $async$_image_provider$_loadAsync$2$decode);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$_image_provider$_loadAsync$2$decode, $async$completer);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.FileImage && other.file._io$_path === this.file._io$_path && other.scale === this.scale;
    },
    get$hashCode(_) {
      return C.Object_hash(this.file._io$_path, this.scale, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return C.objectRuntimeType(this, "FileImage") + '("' + this.file._io$_path + '", scale: ' + D.JSInt_methods.toStringAsFixed$1(this.scale, 1) + ")";
    }
  };
  A.MemoryImage.prototype = {
    obtainKey$1(configuration) {
      return new C.SynchronousFuture(this, type$.SynchronousFuture_MemoryImage);
    },
    loadBuffer$2(key, decode) {
      var t1;
      type$.MemoryImage._as(key);
      type$.Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int._as(decode);
      C.assertHelper(key.$eq(0, this));
      t1 = key.bytes;
      return C.MultiFrameImageStreamCompleter$(null, this._image_provider$_loadAsync$2$decode(key, decode), "MemoryImage(" + (C.objectRuntimeType(t1, "<optimized out>") + "#" + C.shortHash(t1)) + ")", null, 1);
    },
    loadImage$2(key, decode) {
      var t1;
      type$.MemoryImage._as(key);
      t1 = key.bytes;
      return C.MultiFrameImageStreamCompleter$(null, this._image_provider$_loadAsync$2$decode(key, type$.Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int._as(decode)), "MemoryImage(" + (C.objectRuntimeType(t1, "<optimized out>") + "#" + C.shortHash(t1)) + ")", null, 1);
    },
    _image_provider$_loadAsync$2$decode(key, decode) {
      return this._loadAsync$body$MemoryImage(key, type$.Future_Codec_Function_ImmutableBuffer._as(decode));
    },
    _loadAsync$body$MemoryImage(key, decode) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$_image_provider$_loadAsync$2$decode = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              C.assertHelper(key.$eq(0, $async$self));
              $async$temp1 = decode;
              $async$goto = 3;
              return C._asyncAwait(C.ImmutableBuffer_fromUint8List($async$self.bytes), $async$_image_provider$_loadAsync$2$decode);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.call$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_image_provider$_loadAsync$2$decode, $async$completer);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.MemoryImage)
        t1 = other.bytes === this.bytes;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(C.Primitives_objectHashCode(this.bytes), 1, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.bytes;
      return C.objectRuntimeType(this, "MemoryImage") + "(" + (C.objectRuntimeType(t1, "<optimized out>") + "#" + C.shortHash(t1)) + ", scale: " + D.JSInt_methods.toStringAsFixed$1(1, 1) + ")";
    }
  };
  A.NetworkImageLoadException.prototype = {
    toString$0(_) {
      return this._image_provider$_message;
    },
    $isException: 1
  };
  A.OneFrameImageStreamCompleter.prototype = {
    OneFrameImageStreamCompleter$2$informationCollector(image, informationCollector) {
      image.then$1$2$onError(0, this.get$setImage(), new A.OneFrameImageStreamCompleter_closure(this, informationCollector), type$.void);
    }
  };
  A.OvalBorder.prototype = {
    scale$1(_, t) {
      return A.OvalBorder$(this.eccentricity, this.side.scale$1(0, t));
    },
    copyWith$1$side(side) {
      var t1 = side == null ? this.side : side;
      return A.OvalBorder$(this.eccentricity, t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2;
      if (a instanceof A.OvalBorder) {
        t1 = C.BorderSide_lerp(a.side, this.side, t);
        t2 = C.lerpDouble(a.eccentricity, this.eccentricity, t);
        t2.toString;
        return A.OvalBorder$(C.clampDouble(t2, 0, 1), t1);
      }
      return this.super$CircleBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2;
      if (b instanceof A.OvalBorder) {
        t1 = C.BorderSide_lerp(this.side, b.side, t);
        t2 = C.lerpDouble(this.eccentricity, b.eccentricity, t);
        t2.toString;
        return A.OvalBorder$(C.clampDouble(t2, 0, 1), t1);
      }
      return this.super$CircleBorder$lerpTo(b, t);
    },
    toString$0(_) {
      var _this = this,
        _s10_ = "OvalBorder",
        t1 = _this.eccentricity;
      if (t1 !== 1)
        return C.objectRuntimeType(_this, _s10_) + "(" + _this.side.toString$0(0) + ", eccentricity: " + C.S(t1) + ")";
      return C.objectRuntimeType(_this, _s10_) + "(" + _this.side.toString$0(0) + ")";
    }
  };
  A.ShaderMaskLayer.prototype = {
    set$shader(value) {
      if (value !== this._layer$_shader) {
        this._layer$_shader = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$maskRect(value) {
      if (!value.$eq(0, this._maskRect)) {
        this._maskRect = value;
        this.markNeedsAddToScene$0();
      }
    },
    set$blendMode(value) {
      if (value !== this._layer$_blendMode) {
        this._layer$_blendMode = value;
        this.markNeedsAddToScene$0();
      }
    },
    addToScene$1(builder) {
      var t1, t2, t3, _this = this;
      C.assertHelper(_this._layer$_shader != null);
      C.assertHelper(_this._maskRect != null);
      C.assertHelper(_this._layer$_blendMode != null);
      t1 = _this._layer$_shader;
      t1.toString;
      t2 = _this._maskRect;
      t2.toString;
      t3 = _this._layer$_blendMode;
      t3.toString;
      _this.set$engineLayer(builder.pushShaderMask$4$oldLayer(t1, t2, t3, type$.nullable_ShaderMaskEngineLayer._as(_this._engineLayer)));
      _this.addChildrenToScene$1(builder);
      builder.pop$0();
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$Layer$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("shader", _this._layer$_shader, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Shader));
      properties.add$1(0, C.DiagnosticsProperty$("maskRect", _this._maskRect, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Rect));
      properties.add$1(0, C.EnumProperty$("blendMode", _this._layer$_blendMode, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.BlendMode));
    }
  };
  A.RenderAspectRatio.prototype = {
    set$aspectRatio(_, value) {
      C.assertHelper(value > 0);
      C.assertHelper(isFinite(value));
      if (this._aspectRatio === value)
        return;
      this._aspectRatio = value;
      this.markNeedsLayout$0();
    },
    computeMinIntrinsicWidth$1(height) {
      var t1;
      C._asDouble(height);
      if (isFinite(height))
        return height * this._aspectRatio;
      t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.getMinIntrinsicWidth$1(height);
      return t1 == null ? 0 : t1;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1;
      C._asDouble(height);
      if (isFinite(height))
        return height * this._aspectRatio;
      t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.getMaxIntrinsicWidth$1(height);
      return t1 == null ? 0 : t1;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1;
      C._asDouble(width);
      if (isFinite(width))
        return width / this._aspectRatio;
      t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.getMinIntrinsicHeight$1(width);
      return t1 == null ? 0 : t1;
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1;
      C._asDouble(width);
      if (isFinite(width))
        return width / this._aspectRatio;
      t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.getMaxIntrinsicHeight$1(width);
      return t1 == null ? 0 : t1;
    },
    _applyAspectRatio$1(constraints) {
      var width, width0, t1, height, width1, height0;
      C.assertHelper(constraints.debugAssertIsValid$0());
      C.assertHelper(new A.RenderAspectRatio__applyAspectRatio_closure(this, constraints).call$0());
      width = constraints.minWidth;
      width0 = constraints.maxWidth;
      if (width >= width0 && constraints.minHeight >= constraints.maxHeight)
        return new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0));
      t1 = this._aspectRatio;
      if (isFinite(width0)) {
        height = width0 / t1;
        width1 = width0;
      } else {
        height = constraints.maxHeight;
        width1 = height * t1;
      }
      if (width1 > width0)
        height = width0 / t1;
      else
        width0 = width1;
      height0 = constraints.maxHeight;
      if (height > height0) {
        width0 = height0 * t1;
        height = height0;
      }
      if (width0 < width)
        height = width / t1;
      else
        width = width0;
      height0 = constraints.minHeight;
      if (height < height0) {
        width = height0 * t1;
        height = height0;
      }
      return constraints.constrain$1(new C.Size(width, height));
    },
    computeDryLayout$1(constraints) {
      return this._applyAspectRatio$1(constraints);
    },
    computeDryBaseline$2(constraints, baseline) {
      var t1 = type$.BoxConstraints;
      t1._as(constraints);
      type$.TextBaseline._as(baseline);
      return this.super$RenderProxyBoxMixin$computeDryBaseline(C.BoxConstraints$tight(this._computeIntrinsics$2$3(D.C__DryLayout, constraints, this.get$_computeDryLayout(), t1, type$.Size)), baseline);
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      _this.set$size(0, _this._computeIntrinsics$2$3(D.C__DryLayout, t1._as(C.RenderObject.prototype.get$constraints.call(_this)), _this.get$_computeDryLayout(), t1, type$.Size));
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.layout$1(C.BoxConstraints$tight(_this.get$size(0)));
    },
    debugFillProperties$1(properties) {
      this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, C.DoubleProperty$("aspectRatio", this._aspectRatio, D.C__NoDefaultValue, null, D.DiagnosticLevel_3, true, null, null));
    }
  };
  A.RenderShaderMask.prototype = {
    set$shaderCallback(value) {
      type$.Shader_Function_Rect._as(value);
      if (J.$eq$(this._shaderCallback, value))
        return;
      this.set$_shaderCallback(value);
      this.markNeedsPaint$0();
    },
    set$blendMode(value) {
      if (this._blendMode === value)
        return;
      this._blendMode = value;
      this.markNeedsPaint$0();
    },
    get$alwaysNeedsCompositing() {
      return this.RenderObjectWithChildMixin__child != null;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        C.assertHelper(!_this._needsCompositingBitsUpdate);
        t1 = _this.__RenderObject__needsCompositing_A;
        t1 === $ && C.throwLateFieldNI("_needsCompositing");
        C.assertHelper(t1);
        t1 = type$.nullable_ShaderMaskLayer;
        if (t1._as(C.RenderObject.prototype.get$layer.call(_this, 0)) == null) {
          t2 = A.ShaderMaskLayer$();
          _this.get$isRepaintBoundary();
          _this._layerHandle.set$layer(0, t2);
        }
        t2 = t1._as(C.RenderObject.prototype.get$layer.call(_this, 0));
        t2.toString;
        t3 = _this.get$size(0);
        t2.set$shader(_this._shaderCallback.call$1(new C.Rect(0, 0, 0 + t3._dx, 0 + t3._dy)));
        t3 = _this.get$size(0);
        t4 = offset._dx;
        t5 = offset._dy;
        t2.set$maskRect(new C.Rect(t4, t5, t4 + t3._dx, t5 + t3._dy));
        t2.set$blendMode(_this._blendMode);
        t1 = t1._as(C.RenderObject.prototype.get$layer.call(_this, 0));
        t1.toString;
        context.pushLayer$3(t1, C.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
        C.assertHelper(new A.RenderShaderMask_paint_closure(_this).call$0());
      } else {
        _this.get$isRepaintBoundary();
        _this._layerHandle.set$layer(0, null);
      }
    },
    set$_shaderCallback(_shaderCallback) {
      this._shaderCallback = type$.Shader_Function_Rect._as(_shaderCallback);
    }
  };
  A.RenderSliverFillViewport.prototype = {
    get$itemExtent() {
      return type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(this)).viewportMainAxisExtent * this._sliver_fill0$_viewportFraction;
    },
    set$viewportFraction(value) {
      if (this._sliver_fill0$_viewportFraction === value)
        return;
      this._sliver_fill0$_viewportFraction = value;
      this.markNeedsLayout$0();
    }
  };
  A.SliverGridGeometry.prototype = {
    getBoxConstraints$1(constraints) {
      var t1 = this.mainAxisExtent;
      return constraints.asBoxConstraints$3$crossAxisExtent$maxExtent$minExtent(this.crossAxisExtent, t1, t1);
    },
    toString$0(_) {
      var _this = this;
      return "SliverGridGeometry(" + D.JSArray_methods.join$1(C._setArrayType(["scrollOffset: " + C.S(_this.scrollOffset), "crossAxisOffset: " + C.S(_this.crossAxisOffset), "mainAxisExtent: " + C.S(_this.mainAxisExtent), "crossAxisExtent: " + C.S(_this.crossAxisExtent)], type$.JSArray_String), ", ") + ")";
    }
  };
  A.SliverGridLayout.prototype = {};
  A.SliverGridRegularTileLayout.prototype = {
    getMaxChildIndexForScrollOffset$1(scrollOffset) {
      var t1 = this.mainAxisStride;
      if (t1 > 0)
        return Math.max(0, this.crossAxisCount * D.JSNumber_methods.ceil$0(scrollOffset / t1) - 1);
      return 0;
    },
    _getOffsetFromStartInCrossAxis$1(crossAxisStart) {
      var t1, t2, _this = this;
      if (_this.reverseCrossAxis) {
        t1 = _this.crossAxisStride;
        t2 = _this.childCrossAxisExtent;
        return _this.crossAxisCount * t1 - crossAxisStart - t2 - (t1 - t2);
      }
      return crossAxisStart;
    },
    getGeometryForChildIndex$1(index) {
      var _this = this,
        t1 = _this.crossAxisCount,
        t2 = D.JSInt_methods.$mod(index, t1);
      return new A.SliverGridGeometry(D.JSInt_methods.$tdiv(index, t1) * _this.mainAxisStride, _this._getOffsetFromStartInCrossAxis$1(t2 * _this.crossAxisStride), _this.childMainAxisExtent, _this.childCrossAxisExtent);
    },
    computeMaxScrollOffset$1(childCount) {
      var t1;
      if (childCount === 0)
        return 0;
      t1 = this.mainAxisStride;
      return t1 * (D.JSInt_methods.$tdiv(childCount - 1, this.crossAxisCount) + 1) - (t1 - this.childMainAxisExtent);
    }
  };
  A.SliverGridDelegate.prototype = {};
  A.SliverGridDelegateWithFixedCrossAxisCount.prototype = {
    getLayout$1(constraints) {
      var t2, childCrossAxisExtent, childMainAxisExtent, _this = this,
        t1 = _this.crossAxisCount;
      C.assertHelper(t1 > 0);
      t2 = _this.crossAxisSpacing;
      childCrossAxisExtent = Math.max(0, constraints.crossAxisExtent - t2 * (t1 - 1)) / t1;
      childMainAxisExtent = _this.mainAxisExtent;
      return A.SliverGridRegularTileLayout$(childCrossAxisExtent, childMainAxisExtent, t1, childCrossAxisExtent + t2, childMainAxisExtent + _this.mainAxisSpacing, C.axisDirectionIsReversed(constraints.crossAxisDirection));
    },
    shouldRelayout$1(oldDelegate) {
      var t1, _this = this;
      type$.SliverGridDelegateWithFixedCrossAxisCount._as(oldDelegate);
      t1 = true;
      if (oldDelegate.crossAxisCount === _this.crossAxisCount)
        if (oldDelegate.mainAxisSpacing === _this.mainAxisSpacing)
          if (oldDelegate.crossAxisSpacing === _this.crossAxisSpacing)
            t1 = oldDelegate.mainAxisExtent !== _this.mainAxisExtent;
      return t1;
    }
  };
  A.SliverGridParentData.prototype = {
    toString$0(_) {
      return "crossAxisOffset=" + C.S(this.crossAxisOffset) + "; " + this.super$SliverMultiBoxAdaptorParentData$toString(0);
    }
  };
  A.RenderSliverGrid.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.SliverGridParentData))
        child.parentData = new A.SliverGridParentData(false, null, null);
    },
    set$gridDelegate(value) {
      var _this = this;
      if (_this._gridDelegate === value)
        return;
      if (C.getRuntimeTypeOfDartObject(value) !== C.getRuntimeTypeOfDartObject(_this._gridDelegate) || value.shouldRelayout$1(_this._gridDelegate))
        _this.markNeedsLayout$0();
      _this._gridDelegate = value;
    },
    childCrossAxisPosition$1(child) {
      var t1 = child.parentData;
      t1.toString;
      t1 = type$.SliverGridParentData._as(t1).crossAxisOffset;
      t1.toString;
      return t1;
    },
    performLayout$0() {
      var t2, scrollOffset, remainingExtent, targetEndScrollOffset, layout, t3, firstIndex, targetLastIndex, leadingGarbage, firstChildGridGeometry, max, leadingScrollOffset, trailingScrollOffset, index, trailingChildWithLayout, gridGeometry, t4, child, t5, t6, reachedEnd, t7, t8, childConstraints, t9, t10, lastIndex, estimatedTotalExtent, paintExtent, cacheExtent, _this = this, _null = null,
        constraints = type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this._childManager;
      C.assertHelper(t1._currentlyUpdatingChildIndex == null);
      t1._didUnderflow = false;
      t2 = constraints.scrollOffset;
      scrollOffset = t2 + constraints.cacheOrigin;
      C.assertHelper(scrollOffset >= 0);
      remainingExtent = constraints.remainingCacheExtent;
      C.assertHelper(remainingExtent >= 0);
      targetEndScrollOffset = scrollOffset + remainingExtent;
      layout = _this._gridDelegate.getLayout$1(constraints);
      t3 = layout.mainAxisStride;
      firstIndex = t3 > 1e-10 ? layout.crossAxisCount * D.JSNumber_methods.$tdiv(scrollOffset, t3) : 0;
      targetLastIndex = isFinite(targetEndScrollOffset) ? layout.getMaxChildIndexForScrollOffset$1(targetEndScrollOffset) : _null;
      if (_this.ContainerRenderObjectMixin__firstChild != null) {
        leadingGarbage = _this.calculateLeadingGarbage$1$firstIndex(firstIndex);
        _this.collectGarbage$2(leadingGarbage, targetLastIndex != null ? _this.calculateTrailingGarbage$1$lastIndex(targetLastIndex) : 0);
      } else
        _this.collectGarbage$2(0, 0);
      firstChildGridGeometry = layout.getGeometryForChildIndex$1(firstIndex);
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        if (!_this.addInitialChild$2$index$layoutOffset(firstIndex, firstChildGridGeometry.scrollOffset)) {
          max = layout.computeMaxScrollOffset$1(t1.get$childCount());
          _this.set$geometry(0, C.SliverGeometry$(_null, false, _null, _null, max, 0, 0, max, _null));
          t1.didFinishLayout$0();
          return;
        }
      leadingScrollOffset = firstChildGridGeometry.scrollOffset;
      trailingScrollOffset = leadingScrollOffset + firstChildGridGeometry.mainAxisExtent;
      t3 = _this.ContainerRenderObjectMixin__firstChild;
      t3.toString;
      index = _this.indexOf$1(0, t3) - 1;
      t3 = type$.SliverGridParentData;
      trailingChildWithLayout = _null;
      for (; index >= firstIndex; --index) {
        gridGeometry = layout.getGeometryForChildIndex$1(index);
        t4 = gridGeometry.mainAxisExtent;
        child = _this.insertAndLayoutLeadingChild$1(constraints.asBoxConstraints$3$crossAxisExtent$maxExtent$minExtent(gridGeometry.crossAxisExtent, t4, t4));
        t5 = child.parentData;
        t5.toString;
        t3._as(t5);
        t6 = gridGeometry.scrollOffset;
        t5.layoutOffset = t6;
        t5.crossAxisOffset = gridGeometry.crossAxisOffset;
        C.assertHelper(t5.index === index);
        if (trailingChildWithLayout == null)
          trailingChildWithLayout = child;
        trailingScrollOffset = Math.max(trailingScrollOffset, t6 + t4);
      }
      if (trailingChildWithLayout == null) {
        t4 = _this.ContainerRenderObjectMixin__firstChild;
        t4.toString;
        t4.layout$1(firstChildGridGeometry.getBoxConstraints$1(constraints));
        trailingChildWithLayout = _this.ContainerRenderObjectMixin__firstChild;
        t4 = trailingChildWithLayout.parentData;
        t4.toString;
        t3._as(t4);
        t4.layoutOffset = leadingScrollOffset;
        t4.crossAxisOffset = firstChildGridGeometry.crossAxisOffset;
      }
      index = _this.indexOf$1(0, trailingChildWithLayout) + 1;
      t4 = C._instanceType(_this);
      t5 = t4._eval$1("ContainerRenderObjectMixin.0");
      t4 = t4._eval$1("ContainerRenderObjectMixin.1");
      t6 = targetLastIndex != null;
      t7 = type$.SliverMultiBoxAdaptorParentData;
      while (true) {
        if (!(!t6 || index <= targetLastIndex)) {
          reachedEnd = false;
          break;
        }
        gridGeometry = layout.getGeometryForChildIndex$1(index);
        t8 = gridGeometry.mainAxisExtent;
        childConstraints = constraints.asBoxConstraints$3$crossAxisExtent$maxExtent$minExtent(gridGeometry.crossAxisExtent, t8, t8);
        t5._as(trailingChildWithLayout);
        C.assertHelper(trailingChildWithLayout.get$parent(trailingChildWithLayout) === _this);
        t9 = trailingChildWithLayout.parentData;
        t9.toString;
        child = t4._as(t9).ContainerParentDataMixin_nextSibling;
        if (child != null) {
          t9 = child.parentData;
          t9.toString;
          t7._as(t9);
          C.assertHelper(t9.index != null);
          t9 = t9.index;
          t9.toString;
          t9 = t9 !== index;
        } else
          t9 = true;
        if (t9) {
          child = _this.insertAndLayoutChild$2$after(childConstraints, trailingChildWithLayout);
          if (child == null) {
            reachedEnd = true;
            break;
          }
        } else
          child.layout$1(childConstraints);
        t9 = child.parentData;
        t9.toString;
        t3._as(t9);
        t10 = gridGeometry.scrollOffset;
        t9.layoutOffset = t10;
        t9.crossAxisOffset = gridGeometry.crossAxisOffset;
        C.assertHelper(t9.index === index);
        trailingScrollOffset = Math.max(trailingScrollOffset, t10 + t8);
        ++index;
        trailingChildWithLayout = child;
      }
      t3 = _this.ContainerRenderObjectMixin__lastChild;
      t3.toString;
      lastIndex = _this.indexOf$1(0, t3);
      _this.debugAssertChildListIsNonEmptyAndContiguous$0();
      t3 = _this.ContainerRenderObjectMixin__firstChild;
      t3.toString;
      C.assertHelper(_this.indexOf$1(0, t3) === firstIndex);
      C.assertHelper(!t6 || lastIndex <= targetLastIndex);
      estimatedTotalExtent = reachedEnd ? trailingScrollOffset : t1.estimateMaxScrollOffset$5$firstIndex$lastIndex$leadingScrollOffset$trailingScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
      paintExtent = _this.calculatePaintOffset$3$from$to(constraints, Math.min(t2, leadingScrollOffset), trailingScrollOffset);
      cacheExtent = _this.calculateCacheOffset$3$from$to(constraints, leadingScrollOffset, trailingScrollOffset);
      _this.set$geometry(0, C.SliverGeometry$(cacheExtent, estimatedTotalExtent > paintExtent || t2 > 0 || constraints.overlap !== 0, _null, _null, estimatedTotalExtent, paintExtent, 0, estimatedTotalExtent, _null));
      if (estimatedTotalExtent === trailingScrollOffset)
        t1._didUnderflow = true;
      t1.didFinishLayout$0();
    }
  };
  A.TableBorder.prototype = {
    get$isUniform() {
      var topWidth, topStyle, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.right;
      if (!t2.color.$eq(0, topColor) || !_this.bottom.color.$eq(0, topColor) || !_this.left.color.$eq(0, topColor) || !_this.horizontalInside.color.$eq(0, topColor) || !_this.verticalInside.color.$eq(0, topColor))
        return false;
      topWidth = t1.width;
      if (t2.width !== topWidth || _this.bottom.width !== topWidth || _this.left.width !== topWidth || _this.horizontalInside.width !== topWidth || _this.verticalInside.width !== topWidth)
        return false;
      topStyle = t1.style;
      if (t2.style !== topStyle || _this.bottom.style !== topStyle || _this.left.style !== topStyle || _this.horizontalInside.style !== topStyle || _this.verticalInside.style !== topStyle)
        return false;
      return true;
    },
    paint$4$columns$rows(canvas, rect, columns, rows) {
      var t2, t3, paint, path, t4, t5, t6, outer, inner, _this = this,
        t1 = type$.Iterable_double;
      t1._as(rows);
      t1._as(columns);
      t1 = J.getInterceptor$asx(rows);
      if (!t1.get$isEmpty(rows)) {
        t2 = t1.get$first(rows);
        if (typeof t2 !== "number")
          return t2.$ge();
        if (t2 >= 0) {
          t2 = t1.get$last(rows);
          if (typeof t2 !== "number")
            return t2.$le();
          t2 = t2 <= rect.bottom - rect.top;
        } else
          t2 = false;
      } else
        t2 = true;
      C.assertHelper(t2);
      t2 = J.getInterceptor$asx(columns);
      if (!t2.get$isEmpty(columns)) {
        t3 = t2.get$first(columns);
        if (typeof t3 !== "number")
          return t3.$ge();
        if (t3 >= 0) {
          t3 = t2.get$last(columns);
          if (typeof t3 !== "number")
            return t3.$le();
          t3 = t3 <= rect.right - rect.left;
        } else
          t3 = false;
      } else
        t3 = true;
      C.assertHelper(t3);
      if (t2.get$isNotEmpty(columns) || t1.get$isNotEmpty(rows)) {
        t3 = $.$get$_renderer();
        paint = t3.createPaint$0();
        path = t3.createPath$0();
        if (t2.get$isNotEmpty(columns)) {
          t3 = _this.verticalInside;
          switch (t3.style.index) {
            case 1:
              paint.set$color(0, t3.color);
              paint.set$strokeWidth(t3.width);
              paint.set$style(0, D.PaintingStyle_1);
              path.reset$0(0);
              for (t2 = t2.get$iterator(columns), t3 = rect.left, t4 = rect.top, t5 = rect.bottom; t2.moveNext$0();) {
                t6 = t3 + t2.get$current(t2);
                path.moveTo$2(0, t6, t4);
                path.lineTo$2(0, t6, t5);
              }
              canvas.drawPath$2(path, paint);
              break;
            case 0:
              break;
          }
        }
        if (t1.get$isNotEmpty(rows)) {
          t2 = _this.horizontalInside;
          switch (t2.style.index) {
            case 1:
              paint.set$color(0, t2.color);
              paint.set$strokeWidth(t2.width);
              paint.set$style(0, D.PaintingStyle_1);
              path.reset$0(0);
              for (t1 = t1.get$iterator(rows), t2 = rect.left, t3 = rect.top, t4 = rect.right; t1.moveNext$0();) {
                t5 = t3 + t1.get$current(t1);
                path.moveTo$2(0, t2, t5);
                path.lineTo$2(0, t4, t5);
              }
              canvas.drawPath$2(path, paint);
              break;
            case 0:
              break;
          }
        }
      }
      t1 = !_this.get$isUniform() || _this.borderRadius.$eq(0, D.BorderRadius_tUf);
      t2 = _this.top;
      if (t1)
        C.paintBorder(canvas, rect, _this.bottom, _this.left, _this.right, t2);
      else {
        outer = _this.borderRadius.toRRect$1(rect);
        inner = outer.inflate$1(-t2.width);
        paint = $.$get$_renderer().createPaint$0();
        paint.set$color(0, t2.color);
        canvas.drawDRRect$3(outer, inner, paint);
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TableBorder && other.top.$eq(0, _this.top) && other.right.$eq(0, _this.right) && other.bottom.$eq(0, _this.bottom) && other.left.$eq(0, _this.left) && other.horizontalInside.$eq(0, _this.horizontalInside) && other.verticalInside.$eq(0, _this.verticalInside) && other.borderRadius.$eq(0, _this.borderRadius);
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.top, _this.right, _this.bottom, _this.left, _this.horizontalInside, _this.verticalInside, _this.borderRadius, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TableBorder(" + _this.top.toString$0(0) + ", " + _this.right.toString$0(0) + ", " + _this.bottom.toString$0(0) + ", " + _this.left.toString$0(0) + ", " + _this.horizontalInside.toString$0(0) + ", " + _this.verticalInside.toString$0(0) + ", " + _this.borderRadius.toString$0(0) + ")";
    }
  };
  A.AlignmentGeometryTween.prototype = {
    lerp$1(t) {
      return C.AlignmentGeometry_lerp(this.begin, this.end, t);
    }
  };
  A.WrapAlignment.prototype = {
    _enumToString$0() {
      return "WrapAlignment." + this._name;
    },
    _distributeSpace$4(freeSpace, itemSpacing, itemCount, flipped) {
      var t1, _0_6, _this = this;
      C.assertHelper(itemCount > 0);
      $label0$0: {
        if (B.WrapAlignment_0 === _this) {
          t1 = new C._Record_2(flipped ? freeSpace : 0, itemSpacing);
          break $label0$0;
        }
        if (B.WrapAlignment_1 === _this) {
          t1 = B.WrapAlignment_0._distributeSpace$4(freeSpace, itemSpacing, itemCount, !flipped);
          break $label0$0;
        }
        _0_6 = B.WrapAlignment_3 === _this;
        if (_0_6 && itemCount < 2) {
          t1 = B.WrapAlignment_0._distributeSpace$4(freeSpace, itemSpacing, itemCount, flipped);
          break $label0$0;
        }
        if (B.WrapAlignment_2 === _this) {
          t1 = new C._Record_2(freeSpace / 2, itemSpacing);
          break $label0$0;
        }
        if (_0_6) {
          t1 = new C._Record_2(0, freeSpace / (itemCount - 1) + itemSpacing);
          break $label0$0;
        }
        if (B.WrapAlignment_4 === _this) {
          t1 = freeSpace / itemCount;
          t1 = new C._Record_2(t1 / 2, t1 + itemSpacing);
          break $label0$0;
        }
        if (B.WrapAlignment_5 === _this) {
          t1 = freeSpace / (itemCount + 1);
          t1 = new C._Record_2(t1, t1 + itemSpacing);
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.WrapCrossAlignment.prototype = {
    _enumToString$0() {
      return "WrapCrossAlignment." + this._name;
    },
    get$_flipped() {
      switch (this.index) {
        case 0:
          var t1 = B.WrapCrossAlignment_1;
          break;
        case 1:
          t1 = B.WrapCrossAlignment_0;
          break;
        case 2:
          t1 = B.WrapCrossAlignment_2;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_wrap$_alignment() {
      switch (this.index) {
        case 0:
          var t1 = 0;
          break;
        case 1:
          t1 = 1;
          break;
        case 2:
          t1 = 0.5;
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A._RunMetrics.prototype = {
    tryAddingNewChild$5(child, childSize, flipMainAxis, spacing, maxMainExtent) {
      var _this = this,
        t1 = _this.axisSize;
      if (t1._dx + childSize._dx + spacing - maxMainExtent > 1e-10)
        return new A._RunMetrics(childSize, child);
      else {
        _this.axisSize = A._AxisSize__(t1, A._AxisSize__(childSize, new C.Size(spacing, 0)));
        ++_this.childCount;
        if (flipMainAxis)
          _this.leadingChild = child;
        return null;
      }
    }
  };
  A.WrapParentData.prototype = {};
  A.RenderWrap.prototype = {
    set$direction(_, value) {
      if (this._wrap$_direction === value)
        return;
      this._wrap$_direction = value;
      this.markNeedsLayout$0();
    },
    set$alignment(value) {
      if (this._wrap$_alignment === value)
        return;
      this._wrap$_alignment = value;
      this.markNeedsLayout$0();
    },
    set$spacing(_, value) {
      if (this._wrap$_spacing === value)
        return;
      this._wrap$_spacing = value;
      this.markNeedsLayout$0();
    },
    set$runAlignment(value) {
      if (this._runAlignment === value)
        return;
      this._runAlignment = value;
      this.markNeedsLayout$0();
    },
    set$runSpacing(value) {
      if (this._runSpacing === value)
        return;
      this._runSpacing = value;
      this.markNeedsLayout$0();
    },
    set$crossAxisAlignment(value) {
      if (this._wrap$_crossAxisAlignment === value)
        return;
      this._wrap$_crossAxisAlignment = value;
      this.markNeedsLayout$0();
    },
    get$_wrap$_debugHasNecessaryDirections() {
      var _this = this,
        _s63_ = string$.x20has_a,
        t1 = _this.ContainerRenderObjectMixin__firstChild;
      if (t1 != null && _this.ContainerRenderObjectMixin__lastChild !== t1)
        switch (_this._wrap$_direction.index) {
          case 0:
            if (C.assertTest(_this._wrap$_textDirection != null))
              C.assertThrow("Horizontal " + C.getRuntimeTypeOfDartObject(_this).toString$0(0) + " with multiple children has a null textDirection, so the layout order is undefined.");
            break;
          case 1:
            break;
        }
      t1 = _this._wrap$_alignment;
      if (t1 === B.WrapAlignment_0 || t1 === B.WrapAlignment_1)
        switch (_this._wrap$_direction.index) {
          case 0:
            if (C.assertTest(_this._wrap$_textDirection != null))
              C.assertThrow("Horizontal " + C.getRuntimeTypeOfDartObject(_this).toString$0(0) + " with alignment " + _this._wrap$_alignment.toString$0(0) + _s63_);
            break;
          case 1:
            break;
        }
      t1 = _this._runAlignment;
      if (t1 === B.WrapAlignment_0 || t1 === B.WrapAlignment_1)
        switch (_this._wrap$_direction.index) {
          case 0:
            break;
          case 1:
            if (C.assertTest(_this._wrap$_textDirection != null))
              C.assertThrow("Vertical " + C.getRuntimeTypeOfDartObject(_this).toString$0(0) + " with runAlignment " + _this._runAlignment.toString$0(0) + _s63_);
            break;
        }
      t1 = _this._wrap$_crossAxisAlignment;
      if (t1 === B.WrapCrossAlignment_0 || t1 === B.WrapCrossAlignment_1)
        switch (_this._wrap$_direction.index) {
          case 0:
            break;
          case 1:
            if (C.assertTest(_this._wrap$_textDirection != null))
              C.assertThrow("Vertical " + C.getRuntimeTypeOfDartObject(_this).toString$0(0) + " with crossAxisAlignment " + _this._wrap$_crossAxisAlignment.toString$0(0) + _s63_);
            break;
        }
      return true;
    },
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.WrapParentData))
        child.parentData = new A.WrapParentData(null, null, D.Offset_0_0);
    },
    computeMinIntrinsicWidth$1(height) {
      var child, t1, t2, width, t3, _this = this;
      C._asDouble(height);
      switch (_this._wrap$_direction.index) {
        case 0:
          child = _this.ContainerRenderObjectMixin__firstChild;
          for (t1 = C._instanceType(_this), t2 = t1._eval$1("ContainerRenderObjectMixin.0"), t1 = t1._eval$1("ContainerRenderObjectMixin.1"), width = 0; child != null;) {
            width = Math.max(width, child.getMinIntrinsicWidth$1(1 / 0));
            t2._as(child);
            C.assertHelper(child.get$parent(child) === _this);
            t3 = child.parentData;
            t3.toString;
            child = t1._as(t3).ContainerParentDataMixin_nextSibling;
          }
          return width;
        case 1:
          return _this._computeIntrinsics$2$3(D.C__DryLayout, new C.BoxConstraints(0, 1 / 0, 0, height), _this.get$_computeDryLayout(), type$.BoxConstraints, type$.Size)._dx;
      }
    },
    computeMaxIntrinsicWidth$1(height) {
      var child, t1, t2, width, t3, _this = this;
      C._asDouble(height);
      switch (_this._wrap$_direction.index) {
        case 0:
          child = _this.ContainerRenderObjectMixin__firstChild;
          for (t1 = C._instanceType(_this), t2 = t1._eval$1("ContainerRenderObjectMixin.0"), t1 = t1._eval$1("ContainerRenderObjectMixin.1"), width = 0; child != null;) {
            width += child.getMaxIntrinsicWidth$1(1 / 0);
            t2._as(child);
            C.assertHelper(child.get$parent(child) === _this);
            t3 = child.parentData;
            t3.toString;
            child = t1._as(t3).ContainerParentDataMixin_nextSibling;
          }
          return width;
        case 1:
          return _this._computeIntrinsics$2$3(D.C__DryLayout, new C.BoxConstraints(0, 1 / 0, 0, height), _this.get$_computeDryLayout(), type$.BoxConstraints, type$.Size)._dx;
      }
    },
    computeMinIntrinsicHeight$1(width) {
      var child, t1, t2, height, t3, _this = this;
      C._asDouble(width);
      switch (_this._wrap$_direction.index) {
        case 0:
          return _this._computeIntrinsics$2$3(D.C__DryLayout, new C.BoxConstraints(0, width, 0, 1 / 0), _this.get$_computeDryLayout(), type$.BoxConstraints, type$.Size)._dy;
        case 1:
          child = _this.ContainerRenderObjectMixin__firstChild;
          for (t1 = C._instanceType(_this), t2 = t1._eval$1("ContainerRenderObjectMixin.0"), t1 = t1._eval$1("ContainerRenderObjectMixin.1"), height = 0; child != null;) {
            height = Math.max(height, child.getMinIntrinsicHeight$1(1 / 0));
            t2._as(child);
            C.assertHelper(child.get$parent(child) === _this);
            t3 = child.parentData;
            t3.toString;
            child = t1._as(t3).ContainerParentDataMixin_nextSibling;
          }
          return height;
      }
    },
    computeMaxIntrinsicHeight$1(width) {
      var child, t1, t2, height, t3, _this = this;
      C._asDouble(width);
      switch (_this._wrap$_direction.index) {
        case 0:
          return _this._computeIntrinsics$2$3(D.C__DryLayout, new C.BoxConstraints(0, width, 0, 1 / 0), _this.get$_computeDryLayout(), type$.BoxConstraints, type$.Size)._dy;
        case 1:
          child = _this.ContainerRenderObjectMixin__firstChild;
          for (t1 = C._instanceType(_this), t2 = t1._eval$1("ContainerRenderObjectMixin.0"), t1 = t1._eval$1("ContainerRenderObjectMixin.1"), height = 0; child != null;) {
            height += child.getMaxIntrinsicHeight$1(1 / 0);
            t2._as(child);
            C.assertHelper(child.get$parent(child) === _this);
            t3 = child.parentData;
            t3.toString;
            child = t1._as(t3).ContainerParentDataMixin_nextSibling;
          }
          return height;
      }
    },
    computeDistanceToActualBaseline$1(baseline) {
      return this.defaultComputeDistanceToHighestActualBaseline$1(type$.TextBaseline._as(baseline));
    },
    _getMainAxisExtent$1(childSize) {
      var t1;
      switch (this._wrap$_direction.index) {
        case 0:
          t1 = childSize._dx;
          break;
        case 1:
          t1 = childSize._dy;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _getCrossAxisExtent$1(childSize) {
      var t1;
      switch (this._wrap$_direction.index) {
        case 0:
          t1 = childSize._dy;
          break;
        case 1:
          t1 = childSize._dx;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    _getOffset$2(mainAxisOffset, crossAxisOffset) {
      var t1;
      switch (this._wrap$_direction.index) {
        case 0:
          t1 = new C.Offset(mainAxisOffset, crossAxisOffset);
          break;
        case 1:
          t1 = new C.Offset(crossAxisOffset, mainAxisOffset);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$_areAxesFlipped() {
      var t2,
        t1 = this._wrap$_textDirection;
      switch ((t1 == null ? D.TextDirection_1 : t1).index) {
        case 1:
          t1 = false;
          break;
        case 0:
          t1 = true;
          break;
        default:
          t1 = null;
      }
      switch (this._wrap$_verticalDirection.index) {
        case 1:
          t2 = false;
          break;
        case 0:
          t2 = true;
          break;
        default:
          t2 = null;
      }
      switch (this._wrap$_direction.index) {
        case 0:
          t1 = new C._Record_2(t1, t2);
          break;
        case 1:
          t1 = new C._Record_2(t2, t1);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    computeDryBaseline$2(constraints, baseline) {
      var t1, _0_0, _0_1, runMetrics, t2, _0_2, childrenAxisSize, containerAxisSize, _this = this, _null = null, _box_0 = {};
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      if (_this.ContainerRenderObjectMixin__firstChild == null)
        return _null;
      switch (_this._wrap$_direction.index) {
        case 0:
          t1 = new C.BoxConstraints(0, constraints.maxWidth, 0, 1 / 0);
          break;
        case 1:
          t1 = new C.BoxConstraints(0, 1 / 0, 0, constraints.maxHeight);
          break;
        default:
          t1 = _null;
      }
      _0_0 = _this._computeRuns$2(constraints, C.layout_helper_ChildLayoutHelper_dryLayoutChild$closure());
      _0_1 = _0_0._0;
      runMetrics = _null;
      t2 = false;
      _0_2 = _0_0._1;
      t2 = type$.List__RunMetrics._is(_0_2);
      if (t2)
        runMetrics = _0_2;
      childrenAxisSize = _0_1;
      if (!t2)
        throw C.wrapException(C.StateError$("Pattern matching error"));
      containerAxisSize = A._AxisSize_applyConstraints(childrenAxisSize, constraints, _this._wrap$_direction);
      _box_0.baselineOffset = null;
      _this._positionChildren$5(runMetrics, childrenAxisSize, containerAxisSize, new A.RenderWrap_computeDryBaseline_findHighestBaseline(_box_0, t1, baseline), new A.RenderWrap_computeDryBaseline_getChildSize(t1));
      return _box_0.baselineOffset;
    },
    computeDryLayout$1(constraints) {
      return this._wrap$_computeDryLayout$1(constraints);
    },
    _wrap$_computeDryLayout$1(constraints) {
      var t1, _0_1, mainAxisLimit, _0_2, childConstraints, child, t2, mainAxisExtent, crossAxisExtent, runMainAxisExtent, runCrossAxisExtent, childCount, childSize, childMainAxisExtent, childCrossAxisExtent, t3, _this = this, _null = null;
      switch (_this._wrap$_direction.index) {
        case 0:
          t1 = constraints.maxWidth;
          t1 = new C._Record_2(new C.BoxConstraints(0, t1, 0, 1 / 0), t1);
          break;
        case 1:
          t1 = constraints.maxHeight;
          t1 = new C._Record_2(new C.BoxConstraints(0, 1 / 0, 0, t1), t1);
          break;
        default:
          t1 = _null;
      }
      _0_1 = t1._0;
      mainAxisLimit = _null;
      _0_2 = t1._1;
      mainAxisLimit = _0_2;
      childConstraints = _0_1;
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t1 = C._instanceType(_this), t2 = t1._eval$1("ContainerRenderObjectMixin.0"), t1 = t1._eval$1("ContainerRenderObjectMixin.1"), mainAxisExtent = 0, crossAxisExtent = 0, runMainAxisExtent = 0, runCrossAxisExtent = 0, childCount = 0; child != null;) {
        childSize = C.ChildLayoutHelper_dryLayoutChild(child, childConstraints);
        childMainAxisExtent = _this._getMainAxisExtent$1(childSize);
        childCrossAxisExtent = _this._getCrossAxisExtent$1(childSize);
        if (childCount > 0) {
          t3 = _this._wrap$_spacing;
          if (typeof mainAxisLimit !== "number")
            return C.iae(mainAxisLimit);
          t3 = runMainAxisExtent + childMainAxisExtent + t3 > mainAxisLimit;
        } else
          t3 = false;
        if (t3) {
          mainAxisExtent = Math.max(mainAxisExtent, runMainAxisExtent);
          crossAxisExtent += runCrossAxisExtent + _this._runSpacing;
          runMainAxisExtent = 0;
          runCrossAxisExtent = 0;
          childCount = 0;
        }
        runMainAxisExtent += childMainAxisExtent;
        runCrossAxisExtent = Math.max(runCrossAxisExtent, childCrossAxisExtent);
        if (childCount > 0)
          runMainAxisExtent += _this._wrap$_spacing;
        ++childCount;
        t2._as(child);
        C.assertHelper(child.get$parent(child) === _this);
        t3 = child.parentData;
        t3.toString;
        child = t1._as(t3).ContainerParentDataMixin_nextSibling;
      }
      crossAxisExtent += runCrossAxisExtent;
      mainAxisExtent = Math.max(mainAxisExtent, runMainAxisExtent);
      switch (_this._wrap$_direction.index) {
        case 0:
          t1 = new C.Size(mainAxisExtent, crossAxisExtent);
          break;
        case 1:
          t1 = new C.Size(crossAxisExtent, mainAxisExtent);
          break;
        default:
          t1 = _null;
      }
      return constraints.constrain$1(t1);
    },
    performLayout$0() {
      var _0_0, _0_1, runMetrics, t1, _0_2, childrenAxisSize, containerAxisSize, t2, _this = this,
        constraints = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this));
      _this.get$_wrap$_debugHasNecessaryDirections();
      if (_this.ContainerRenderObjectMixin__firstChild == null) {
        _this.set$size(0, new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0)));
        _this._wrap$_hasVisualOverflow = false;
        return;
      }
      _0_0 = _this._computeRuns$2(constraints, C.layout_helper_ChildLayoutHelper_layoutChild$closure());
      _0_1 = _0_0._0;
      runMetrics = null;
      t1 = false;
      _0_2 = _0_0._1;
      t1 = type$.List__RunMetrics._is(_0_2);
      if (t1)
        runMetrics = _0_2;
      childrenAxisSize = _0_1;
      if (!t1)
        throw C.wrapException(C.StateError$("Pattern matching error"));
      containerAxisSize = A._AxisSize_applyConstraints(childrenAxisSize, constraints, _this._wrap$_direction);
      _this.set$size(0, A._AxisSize__convert(containerAxisSize, _this._wrap$_direction));
      t1 = containerAxisSize._dx - childrenAxisSize._dx;
      t2 = containerAxisSize._dy - childrenAxisSize._dy;
      _this._wrap$_hasVisualOverflow = t1 < 0 || t2 < 0;
      _this._positionChildren$5(runMetrics, new C.Size(t1, t2), containerAxisSize, A.wrap_RenderWrap__setChildPosition$closure(), A.wrap_RenderWrap__getChildSize$closure());
    },
    _computeRuns$2(constraints, layoutChild) {
      var t1, _0_1, mainAxisLimit, _0_2, childConstraints, _1_1, flipMainAxis, spacing, runMetrics, child, t2, currentRun, childrenAxisSize, _this0, t3, newRun, _this = this, _null = null,
        _s22_ = "Pattern matching error";
      type$.Size_Function_RenderBox_BoxConstraints._as(layoutChild);
      C.assertHelper(_this.ContainerRenderObjectMixin__firstChild != null);
      switch (_this._wrap$_direction.index) {
        case 0:
          t1 = constraints.maxWidth;
          t1 = new C._Record_2(new C.BoxConstraints(0, t1, 0, 1 / 0), t1);
          break;
        case 1:
          t1 = constraints.maxHeight;
          t1 = new C._Record_2(new C.BoxConstraints(0, 1 / 0, 0, t1), t1);
          break;
        default:
          t1 = _null;
      }
      _0_1 = t1._0;
      mainAxisLimit = _null;
      _0_2 = t1._1;
      mainAxisLimit = _0_2;
      childConstraints = _0_1;
      _1_1 = _this.get$_areAxesFlipped()._0;
      flipMainAxis = _1_1;
      spacing = _this._wrap$_spacing;
      runMetrics = C._setArrayType([], type$.JSArray__RunMetrics);
      child = _this.ContainerRenderObjectMixin__firstChild;
      t1 = C._instanceType(_this);
      t2 = t1._eval$1("ContainerRenderObjectMixin.0");
      t1 = t1._eval$1("ContainerRenderObjectMixin.1");
      currentRun = _null;
      childrenAxisSize = D.Size_0_0;
      while (child != null) {
        _this0 = A._AxisSize__convert(layoutChild.call$2(child, childConstraints), _this._wrap$_direction);
        t3 = currentRun == null;
        newRun = t3 ? new A._RunMetrics(_this0, child) : currentRun.tryAddingNewChild$5(child, _this0, flipMainAxis, spacing, mainAxisLimit);
        if (newRun != null) {
          D.JSArray_methods.add$1(runMetrics, newRun);
          if (t3)
            t3 = _null;
          else {
            t3 = currentRun.axisSize;
            _this0 = new C.Size(t3._dy, t3._dx);
            t3 = _this0;
          }
          if (t3 == null)
            t3 = D.Size_0_0;
          _this0 = new C.Size(childrenAxisSize._dx + t3._dx, Math.max(childrenAxisSize._dy, t3._dy));
          childrenAxisSize = _this0;
          currentRun = newRun;
        }
        t2._as(child);
        C.assertHelper(child.get$parent(child) === _this);
        t3 = child.parentData;
        t3.toString;
        child = t1._as(t3).ContainerParentDataMixin_nextSibling;
      }
      C.assertHelper(runMetrics.length !== 0);
      t1 = _this._runSpacing;
      t2 = runMetrics.length;
      t3 = currentRun.axisSize;
      childrenAxisSize = A._AxisSize__(childrenAxisSize, A._AxisSize__(new C.Size(t1 * (t2 - 1), 0), new C.Size(t3._dy, t3._dx)));
      return new C._Record_2(new C.Size(childrenAxisSize._dy, childrenAxisSize._dx), runMetrics);
    },
    _positionChildren$5(runMetrics, freeAxisSize, containerAxisSize, positionChild, getChildSize) {
      var spacing, crossAxisFreeSpace, _0_0, _0_1, flipCrossAxis, _0_2, effectiveCrossAlignment, _1_0, _1_1, runBetweenSpace, _1_2, nextChild, t1, t2, runCrossAxisOffset, t3, t4, runCrossAxisExtent, childCount, mainAxisFreeSpace, _2_0, _2_1, childBetweenSpace, _2_2, remainingChildCount, child, childMainAxisOffset, _this0, _3_1, childCrossAxisExtent, _3_2, _this = this, _null = null;
      type$.List__RunMetrics._as(runMetrics);
      type$.void_Function_Offset_RenderBox._as(positionChild);
      type$.Size_Function_RenderBox._as(getChildSize);
      C.assertHelper(runMetrics.length !== 0);
      spacing = _this._wrap$_spacing;
      crossAxisFreeSpace = Math.max(0, freeAxisSize._dy);
      _0_0 = _this.get$_areAxesFlipped();
      _0_1 = _0_0._0;
      flipCrossAxis = _null;
      _0_2 = _0_0._1;
      flipCrossAxis = _0_2;
      C.boolConversionCheck(flipCrossAxis);
      effectiveCrossAlignment = _this._wrap$_crossAxisAlignment;
      if (flipCrossAxis)
        effectiveCrossAlignment = effectiveCrossAlignment.get$_flipped();
      _1_0 = _this._runAlignment._distributeSpace$4(crossAxisFreeSpace, _this._runSpacing, runMetrics.length, flipCrossAxis);
      _1_1 = _1_0._0;
      runBetweenSpace = _null;
      _1_2 = _1_0._1;
      runBetweenSpace = _1_2;
      nextChild = C.boolConversionCheck(_0_1) ? _this.get$childBefore() : _this.get$childAfter();
      for (t1 = J.get$iterator$ax(flipCrossAxis ? new C.ReversedListIterable(runMetrics, C._arrayInstanceType(runMetrics)._eval$1("ReversedListIterable<1>")) : runMetrics), t2 = containerAxisSize._dx, runCrossAxisOffset = _1_1; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        t4 = t3.axisSize;
        runCrossAxisExtent = t4._dy;
        childCount = t3.childCount;
        mainAxisFreeSpace = Math.max(0, t2 - t4._dx);
        _2_0 = _this._wrap$_alignment._distributeSpace$4(mainAxisFreeSpace, spacing, childCount, _0_1);
        _2_1 = _2_0._0;
        childBetweenSpace = _null;
        _2_2 = _2_0._1;
        childBetweenSpace = _2_2;
        remainingChildCount = t3.childCount;
        child = t3.leadingChild;
        childMainAxisOffset = _2_1;
        while (true) {
          if (!(child != null && remainingChildCount > 0))
            break;
          _this0 = A._AxisSize__convert(getChildSize.call$1(child), _this._wrap$_direction);
          _3_1 = _this0._dx;
          childCrossAxisExtent = _null;
          _3_2 = _this0._dy;
          childCrossAxisExtent = _3_2;
          t3 = effectiveCrossAlignment.get$_wrap$_alignment();
          if (typeof childCrossAxisExtent !== "number")
            return C.iae(childCrossAxisExtent);
          positionChild.call$2(_this._getOffset$2(childMainAxisOffset, runCrossAxisOffset + t3 * (runCrossAxisExtent - childCrossAxisExtent)), child);
          if (typeof _3_1 !== "number")
            return _3_1.$add();
          if (typeof childBetweenSpace !== "number")
            return C.iae(childBetweenSpace);
          childMainAxisOffset += _3_1 + childBetweenSpace;
          child = nextChild.call$1(child);
          --remainingChildCount;
        }
        if (typeof runBetweenSpace !== "number")
          return C.iae(runBetweenSpace);
        runCrossAxisOffset += runCrossAxisExtent + runBetweenSpace;
      }
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t3, _this = this,
        t1 = _this._wrap$_hasVisualOverflow && _this._wrap$_clipBehavior !== D.Clip_0,
        t2 = _this._wrap$_clipRectLayer;
      if (t1) {
        C.assertHelper(!_this._needsCompositingBitsUpdate);
        t1 = _this.__RenderObject__needsCompositing_A;
        t1 === $ && C.throwLateFieldNI("_needsCompositing");
        t3 = _this.get$size(0);
        t2.set$layer(0, context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new C.Rect(0, 0, 0 + t3._dx, 0 + t3._dy), _this.get$defaultPaint(), _this._wrap$_clipBehavior, t2._layer));
      } else {
        t2.set$layer(0, null);
        _this.defaultPaint$2(context, offset);
      }
    },
    dispose$0() {
      this._wrap$_clipRectLayer.set$layer(0, null);
      this.super$RenderObject$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("direction", _this._wrap$_direction, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.Axis));
      t1 = type$.WrapAlignment;
      properties.add$1(0, C.EnumProperty$("alignment", _this._wrap$_alignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.DoubleProperty$("spacing", _this._wrap$_spacing, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.EnumProperty$("runAlignment", _this._runAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.DoubleProperty$("runSpacing", _this._runSpacing, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("crossAxisAlignment", _this._runSpacing, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.EnumProperty$("textDirection", _this._wrap$_textDirection, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, C.EnumProperty$("verticalDirection", _this._wrap$_verticalDirection, D.VerticalDirection_1, D.DiagnosticLevel_3, type$.VerticalDirection));
    }
  };
  A._RenderWrap_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.WrapParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.WrapParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderWrap_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A._ActiveItem.prototype = {
    compareTo$1(_, other) {
      type$._ActiveItem._as(other);
      return this.itemIndex - other.itemIndex;
    },
    $isComparable: 1
  };
  A.SliverAnimatedList.prototype = {
    createState$0() {
      var t1 = type$.JSArray__ActiveItem;
      return new A.SliverAnimatedListState(C._setArrayType([], t1), C._setArrayType([], t1), null, null, D._StateLifecycle_0);
    }
  };
  A.SliverAnimatedListState.prototype = {
    build$1(context) {
      return C.SliverList$(this._createDelegate$0());
    }
  };
  A._SliverAnimatedMultiBoxAdaptor.prototype = {
    itemBuilder$3(arg0, arg1, arg2) {
      return this.itemBuilder.call$3(arg0, arg1, arg2);
    }
  };
  A._SliverAnimatedMultiBoxAdaptorState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._itemsCount = this._widget.initialItemCount;
    },
    dispose$0() {
      var t1, t2;
      for (t1 = this._incomingItems, t2 = C._arrayInstanceType(t1), t2 = C.FollowedByIterable_FollowedByIterable$firstEfficient(t1, t2._eval$1("Iterable<1>")._as(this._outgoingItems), t2._precomputed1), t2 = new C.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2.__internal$_second, C._instanceType(t2)._eval$1("FollowedByIterator<1>")); t2.moveNext$0();) {
        t1 = t2._currentIterator;
        t1.get$current(t1).controller.dispose$0();
      }
      this.super$__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin$dispose();
    },
    _removeActiveItemAt$2(items, itemIndex) {
      var i;
      type$.List__ActiveItem._as(items);
      i = A.binarySearch(items, new A._ActiveItem(null, null, itemIndex), type$._ActiveItem);
      return i === -1 ? null : D.JSArray_methods.removeAt$1(items, i);
    },
    _activeItemAt$2(items, itemIndex) {
      var i, t1;
      type$.List__ActiveItem._as(items);
      i = A.binarySearch(items, new A._ActiveItem(null, null, itemIndex), type$._ActiveItem);
      if (i === -1)
        t1 = null;
      else {
        if (!(i >= 0 && i < items.length))
          return C.ioore(items, i);
        t1 = items[i];
      }
      return t1;
    },
    _indexToItemIndex$1(index) {
      var t1, t2, itemIndex, _i;
      for (t1 = this._outgoingItems, t2 = t1.length, itemIndex = index, _i = 0; _i < t2; ++_i)
        if (t1[_i].itemIndex <= itemIndex)
          ++itemIndex;
        else
          break;
      return itemIndex;
    },
    _itemIndexToIndex$1(itemIndex) {
      var t1, t2, index, _i, item;
      for (t1 = this._outgoingItems, t2 = t1.length, index = itemIndex, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        item = t1[_i];
        C.assertHelper(item.itemIndex !== itemIndex);
        if (item.itemIndex < itemIndex)
          --index;
        else
          break;
      }
      return index;
    },
    _createDelegate$0() {
      var t1 = this._itemsCount;
      this._widget.toString;
      return new C.SliverChildBuilderDelegate(this.get$_itemBuilder(), t1, true, true, true, C.scroll_delegate___kDefaultSemanticIndexCallback$closure(), null);
    },
    _itemBuilder$2(context, itemIndex) {
      var outgoingItem, t1, t2, incomingItem, animation, _this = this;
      type$.BuildContext._as(context);
      C._asInt(itemIndex);
      outgoingItem = _this._activeItemAt$2(_this._outgoingItems, itemIndex);
      if (outgoingItem != null) {
        t1 = outgoingItem.removedItemBuilder;
        t1.toString;
        t2 = outgoingItem.controller;
        t2.toString;
        return t1.call$2(context, t2);
      }
      incomingItem = _this._activeItemAt$2(_this._incomingItems, itemIndex);
      if (incomingItem == null)
        animation = null;
      else {
        t1 = incomingItem.controller;
        if (t1 == null)
          t1 = null;
        animation = t1;
      }
      if (animation == null)
        animation = D.C__AlwaysCompleteAnimation;
      t1 = _this._widget;
      t1.toString;
      return t1.itemBuilder$3(context, _this._itemIndexToIndex$1(itemIndex), animation);
    },
    insertItem$2$duration(index, duration) {
      var itemIndex, t1, t2, _i, item, t3, controller, incomingItem, _this = this, _null = null;
      C.assertHelper(index >= 0);
      itemIndex = _this._indexToItemIndex$1(index);
      C.assertHelper(itemIndex >= 0 && itemIndex <= _this._itemsCount);
      for (t1 = _this._incomingItems, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        item = t1[_i];
        t3 = item.itemIndex;
        if (t3 >= itemIndex)
          item.itemIndex = t3 + 1;
      }
      for (t1 = _this._outgoingItems, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        item = t1[_i];
        t3 = item.itemIndex;
        if (t3 >= itemIndex)
          item.itemIndex = t3 + 1;
      }
      controller = C.AnimationController$(_null, duration, _null, _null, _this);
      incomingItem = new A._ActiveItem(controller, _null, itemIndex);
      _this.setState$1(new A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure(_this, incomingItem));
      controller.forward$0(0).then$1$1(0, new A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure0(_this, incomingItem), type$.void);
    },
    insertAllItems$3$duration(index, $length, duration) {
      var i;
      for (i = 0; i < $length; ++i)
        this.insertItem$2$duration(index + i, duration);
    },
    removeItem$3$duration(_, index, builder, duration) {
      var itemIndex, incomingItem, controller, outgoingItem, _this = this;
      type$.Widget_Function_2_BuildContext_and_Animation_double._as(builder);
      C.assertHelper(index >= 0);
      itemIndex = _this._indexToItemIndex$1(index);
      C.assertHelper(itemIndex >= 0 && itemIndex < _this._itemsCount);
      C.assertHelper(_this._activeItemAt$2(_this._outgoingItems, itemIndex) == null);
      incomingItem = _this._removeActiveItemAt$2(_this._incomingItems, itemIndex);
      controller = incomingItem == null ? null : incomingItem.controller;
      if (controller == null)
        controller = C.AnimationController$(null, duration, null, 1, _this);
      outgoingItem = new A._ActiveItem(controller, builder, itemIndex);
      _this.setState$1(new A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure(_this, outgoingItem));
      controller.reverse$0(0).then$1$1(0, new A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure0(_this, outgoingItem), type$.void);
    },
    $isTickerProvider: 1
  };
  A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.StreamBuilderBase.prototype = {
    createState$0() {
      return new A._StreamBuilderBaseState(D._StateLifecycle_0, this.$ti._eval$1("_StreamBuilderBaseState<StreamBuilderBase.T,StreamBuilderBase.S>"));
    }
  };
  A._StreamBuilderBaseState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t1.toString;
      t1 = A.AsyncSnapshot$nothing(t1.$ti._precomputed1);
      _this.set$___StreamBuilderBaseState__summary_A(_this.$ti._rest[1]._as(t1));
      _this._async0$_subscribe$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t2, t3, _this = this,
        t1 = _this.$ti;
      t1._eval$1("StreamBuilderBase<1,2>")._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!oldWidget.stream.$eq(0, _this._widget.stream)) {
        if (_this._async0$_subscription != null) {
          _this._async0$_unsubscribe$0();
          t2 = _this._widget;
          t2.toString;
          t3 = _this.___StreamBuilderBaseState__summary_A;
          t3 === $ && C.throwLateFieldNI("_summary");
          t2.$ti._eval$1("AsyncSnapshot<1>")._as(t3);
          _this.set$___StreamBuilderBaseState__summary_A(t1._rest[1]._as(A.AsyncSnapshot$_(B.ConnectionState_0, t3.data, t3.error, t3.stackTrace, t3.$ti._precomputed1)));
        }
        _this._async0$_subscribe$0();
      }
    },
    build$1(context) {
      var t2,
        t1 = this._widget;
      t1.toString;
      t2 = this.___StreamBuilderBaseState__summary_A;
      t2 === $ && C.throwLateFieldNI("_summary");
      return t1.builder.call$2(context, t1.$ti._eval$1("AsyncSnapshot<1>")._as(t2));
    },
    dispose$0() {
      this._async0$_unsubscribe$0();
      this.super$State$dispose();
    },
    _async0$_subscribe$0() {
      var t1, t2, _this = this;
      _this.set$_async0$_subscription(_this._widget.stream.listen$3$onDone$onError(new A._StreamBuilderBaseState__subscribe_closure(_this), new A._StreamBuilderBaseState__subscribe_closure0(_this), new A._StreamBuilderBaseState__subscribe_closure1(_this)));
      t1 = _this._widget;
      t1.toString;
      t2 = _this.___StreamBuilderBaseState__summary_A;
      t2 === $ && C.throwLateFieldNI("_summary");
      t1.$ti._eval$1("AsyncSnapshot<1>")._as(t2);
      _this.set$___StreamBuilderBaseState__summary_A(_this.$ti._rest[1]._as(A.AsyncSnapshot$_(B.ConnectionState_1, t2.data, t2.error, t2.stackTrace, t2.$ti._precomputed1)));
    },
    _async0$_unsubscribe$0() {
      var t1 = this._async0$_subscription;
      if (t1 != null) {
        t1.cancel$0(0);
        this.set$_async0$_subscription(null);
      }
    },
    set$_async0$_subscription(_subscription) {
      this._async0$_subscription = this.$ti._eval$1("StreamSubscription<1>?")._as(_subscription);
    },
    set$___StreamBuilderBaseState__summary_A(___StreamBuilderBaseState__summary_A) {
      this.___StreamBuilderBaseState__summary_A = this.$ti._rest[1]._as(___StreamBuilderBaseState__summary_A);
    }
  };
  A.ConnectionState.prototype = {
    _enumToString$0() {
      return "ConnectionState." + this._name;
    }
  };
  A.AsyncSnapshot.prototype = {
    toString$0(_) {
      var _this = this;
      return C.objectRuntimeType(_this, "AsyncSnapshot") + "(" + _this.connectionState.toString$0(0) + ", " + C.S(_this.data) + ", " + C.S(_this.error) + ", " + C.S(_this.stackTrace) + ")";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return _this.$ti._is(other) && other.connectionState === _this.connectionState && J.$eq$(other.data, _this.data) && J.$eq$(other.error, _this.error) && other.stackTrace == _this.stackTrace;
    },
    get$hashCode(_) {
      return C.Object_hash(this.connectionState, this.data, this.error, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.StreamBuilder.prototype = {};
  A.FutureBuilder.prototype = {
    createState$0() {
      return new A._FutureBuilderState(D._StateLifecycle_0, this.$ti._eval$1("_FutureBuilderState<1>"));
    }
  };
  A._FutureBuilderState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      _this._widget.toString;
      t1 = _this.$ti;
      t2 = A.AsyncSnapshot$nothing(t1._precomputed1);
      _this.set$___FutureBuilderState__snapshot_A(t1._eval$1("AsyncSnapshot<1>")._as(t2));
      _this._async0$_subscribe$0();
    },
    didUpdateWidget$1(oldWidget) {
      var t2, _this = this,
        t1 = _this.$ti;
      t1._eval$1("FutureBuilder<1>")._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (oldWidget.future === _this._widget.future)
        return;
      if (_this._activeCallbackIdentity != null) {
        _this._activeCallbackIdentity = null;
        t2 = _this.___FutureBuilderState__snapshot_A;
        t2 === $ && C.throwLateFieldNI("_snapshot");
        _this.set$___FutureBuilderState__snapshot_A(t1._eval$1("AsyncSnapshot<1>")._as(A.AsyncSnapshot$_(B.ConnectionState_0, t2.data, t2.error, t2.stackTrace, t2.$ti._precomputed1)));
      }
      _this._async0$_subscribe$0();
    },
    build$1(context) {
      var t2,
        t1 = this._widget;
      t1.toString;
      t2 = this.___FutureBuilderState__snapshot_A;
      t2 === $ && C.throwLateFieldNI("_snapshot");
      return this.$ti._eval$1("Widget(BuildContext,AsyncSnapshot<1>)")._as(t1.builder).call$2(context, t2);
    },
    dispose$0() {
      this._activeCallbackIdentity = null;
      this.super$State$dispose();
    },
    _async0$_subscribe$0() {
      var callbackIdentity, _this = this,
        t1 = _this._widget;
      t1.toString;
      callbackIdentity = _this._activeCallbackIdentity = new C.Object();
      t1.future.then$1$2$onError(0, new A._FutureBuilderState__subscribe_closure(_this, callbackIdentity), new A._FutureBuilderState__subscribe_closure0(_this, callbackIdentity), type$.void);
      t1 = _this.___FutureBuilderState__snapshot_A;
      t1 === $ && C.throwLateFieldNI("_snapshot");
      if (t1.connectionState !== B.ConnectionState_3)
        _this.set$___FutureBuilderState__snapshot_A(_this.$ti._eval$1("AsyncSnapshot<1>")._as(A.AsyncSnapshot$_(B.ConnectionState_1, t1.data, t1.error, t1.stackTrace, t1.$ti._precomputed1)));
    },
    set$___FutureBuilderState__snapshot_A(___FutureBuilderState__snapshot_A) {
      this.___FutureBuilderState__snapshot_A = this.$ti._eval$1("AsyncSnapshot<1>")._as(___FutureBuilderState__snapshot_A);
    }
  };
  A.ShaderMask.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderShaderMask(this.shaderCallback, this.blendMode, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderShaderMask._as(renderObject);
      renderObject.set$shaderCallback(this.shaderCallback);
      renderObject.set$blendMode(this.blendMode);
    }
  };
  A.AspectRatio.prototype = {
    createRenderObject$1(context) {
      var t1 = this.aspectRatio;
      C.assertHelper(t1 > 0);
      C.assertHelper(isFinite(t1));
      t1 = new A.RenderAspectRatio(t1, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderAspectRatio._as(renderObject).set$aspectRatio(0, this.aspectRatio);
    },
    debugFillProperties$1(properties) {
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DoubleProperty$("aspectRatio", this.aspectRatio, D.C__NoDefaultValue, null, D.DiagnosticLevel_3, true, null, null));
    }
  };
  A.Wrap.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.Directionality_maybeOf(context);
      t1 = new A.RenderWrap(_this.direction, _this.alignment, _this.spacing, _this.runAlignment, _this.runSpacing, _this.crossAxisAlignment, t1, _this.verticalDirection, _this.clipBehavior, C.LayerHandle$(type$.ClipRectLayer), 0, null, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderWrap._as(renderObject);
      renderObject.set$direction(0, _this.direction);
      renderObject.set$alignment(_this.alignment);
      renderObject.set$spacing(0, _this.spacing);
      renderObject.set$runAlignment(_this.runAlignment);
      renderObject.set$runSpacing(_this.runSpacing);
      renderObject.set$crossAxisAlignment(_this.crossAxisAlignment);
      t1 = C.Directionality_maybeOf(context);
      if (renderObject._wrap$_textDirection != t1) {
        renderObject._wrap$_textDirection = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.verticalDirection;
      if (renderObject._wrap$_verticalDirection !== t1) {
        renderObject._wrap$_verticalDirection = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.clipBehavior;
      if (t1 !== renderObject._wrap$_clipBehavior) {
        renderObject._wrap$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("direction", _this.direction, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.Axis));
      t1 = type$.WrapAlignment;
      properties.add$1(0, C.EnumProperty$("alignment", _this.alignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.DoubleProperty$("spacing", _this.spacing, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.EnumProperty$("runAlignment", _this.runAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.DoubleProperty$("runSpacing", _this.runSpacing, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.EnumProperty$("crossAxisAlignment", _this.crossAxisAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.WrapCrossAlignment));
      properties.add$1(0, C.EnumProperty$("textDirection", _this.textDirection, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, C.EnumProperty$("verticalDirection", _this.verticalDirection, D.VerticalDirection_1, D.DiagnosticLevel_3, type$.VerticalDirection));
    }
  };
  A.Matrix4Tween.prototype = {
    lerp$1(t) {
      var beginTranslation, endTranslation, beginRotation, endRotation, beginScale, endScale, t1, lerpTranslation, t2, t3, lerpRotation, lerpScale, x, y, z, w, x2, y2, z2, xx, xy, xz, yy, yz, zz, wx, wy, wz, arg0Storage, _this = this;
      C.assertHelper(_this.begin != null);
      C.assertHelper(_this.end != null);
      beginTranslation = new C.Vector3(new Float64Array(3));
      endTranslation = new C.Vector3(new Float64Array(3));
      beginRotation = A.Quaternion_Quaternion$identity();
      endRotation = A.Quaternion_Quaternion$identity();
      beginScale = new C.Vector3(new Float64Array(3));
      endScale = new C.Vector3(new Float64Array(3));
      _this.begin.decompose$3(beginTranslation, beginRotation, beginScale);
      _this.end.decompose$3(endTranslation, endRotation, endScale);
      t1 = 1 - t;
      lerpTranslation = beginTranslation.scaled$1(t1).$add(0, endTranslation.scaled$1(t));
      t2 = beginRotation.scaled$1(t1).$add(0, endRotation.scaled$1(t));
      t3 = new Float64Array(4);
      lerpRotation = new A.Quaternion(t3);
      lerpRotation.setFrom$1(t2);
      lerpRotation.normalize$0(0);
      lerpScale = beginScale.scaled$1(t1).$add(0, endScale.scaled$1(t));
      t1 = new Float64Array(16);
      t2 = new C.Matrix40(t1);
      x = t3[0];
      y = t3[1];
      z = t3[2];
      w = t3[3];
      x2 = x + x;
      y2 = y + y;
      z2 = z + z;
      xx = x * x2;
      xy = x * y2;
      xz = x * z2;
      yy = y * y2;
      yz = y * z2;
      zz = z * z2;
      wx = w * x2;
      wy = w * y2;
      wz = w * z2;
      arg0Storage = lerpTranslation._v3storage;
      t1[0] = 1 - (yy + zz);
      t1[1] = xy + wz;
      t1[2] = xz - wy;
      t1[3] = 0;
      t1[4] = xy - wz;
      t1[5] = 1 - (xx + zz);
      t1[6] = yz + wx;
      t1[7] = 0;
      t1[8] = xz + wy;
      t1[9] = yz - wx;
      t1[10] = 1 - (xx + yy);
      t1[11] = 0;
      t1[12] = arg0Storage[0];
      t1[13] = arg0Storage[1];
      t1[14] = arg0Storage[2];
      t1[15] = 1;
      t2.scale$1(0, lerpScale);
      return t2;
    }
  };
  A.AnimatedContainer.prototype = {
    createState$0() {
      return new A._AnimatedContainerState(null, null, D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _this = this, _null = null;
      _this.super$ImplicitlyAnimatedWidget$debugFillProperties(properties);
      t1 = type$.AlignmentGeometry;
      properties.add$1(0, C.DiagnosticsProperty$("alignment", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, false, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = type$.EdgeInsetsGeometry;
      properties.add$1(0, C.DiagnosticsProperty$("padding", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t3 = type$.Decoration;
      properties.add$1(0, C.DiagnosticsProperty$("bg", _this.decoration, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, C.DiagnosticsProperty$("fg", _this.foregroundDecoration, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      properties.add$1(0, C.DiagnosticsProperty$("constraints", _this.constraints, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
      properties.add$1(0, C.DiagnosticsProperty$("margin", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, C.ObjectFlagProperty$has("transform", _null, D.DiagnosticLevel_3, type$.Matrix4));
      properties.add$1(0, C.DiagnosticsProperty$("transformAlignment", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("clipBehavior", D.Clip_0, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Clip));
    }
  };
  A._AnimatedContainerState.prototype = {
    forEachTween$1(visitor) {
      var t1, t2, t3, _this = this, _null = null;
      type$.nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic._as(visitor);
      t1 = _this._implicit_animations$_alignment;
      _this._widget.toString;
      t2 = type$.nullable_AlignmentGeometryTween;
      _this._implicit_animations$_alignment = t2._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure()));
      t1 = _this._implicit_animations$_padding;
      _this._widget.toString;
      t3 = type$.nullable_EdgeInsetsGeometryTween;
      _this._implicit_animations$_padding = t3._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure0()));
      t1 = type$.nullable_DecorationTween;
      _this._implicit_animations$_decoration = t1._as(visitor.call$3(_this._implicit_animations$_decoration, _this._widget.decoration, new A._AnimatedContainerState_forEachTween_closure1()));
      _this._foregroundDecoration = t1._as(visitor.call$3(_this._foregroundDecoration, _this._widget.foregroundDecoration, new A._AnimatedContainerState_forEachTween_closure2()));
      _this._implicit_animations$_constraints = type$.nullable_BoxConstraintsTween._as(visitor.call$3(_this._implicit_animations$_constraints, _this._widget.constraints, new A._AnimatedContainerState_forEachTween_closure3()));
      t1 = _this._implicit_animations$_margin;
      _this._widget.toString;
      _this._implicit_animations$_margin = t3._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure4()));
      t1 = _this._implicit_animations$_transform;
      _this._widget.toString;
      _this._implicit_animations$_transform = type$.nullable_Matrix4Tween._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure5()));
      t1 = _this._transformAlignment;
      _this._widget.toString;
      _this._transformAlignment = t2._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure6()));
    },
    build$1(context) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this, _null = null,
        animation = _this.get$_implicit_animations$_animation(),
        t1 = _this._implicit_animations$_alignment;
      t1 = t1 == null ? _null : t1.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t2 = _this._implicit_animations$_padding;
      t2 = t2 == null ? _null : t2.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t3 = _this._implicit_animations$_decoration;
      t3 = t3 == null ? _null : t3.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t4 = _this._foregroundDecoration;
      t4 = t4 == null ? _null : t4.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t5 = _this._implicit_animations$_constraints;
      t5 = t5 == null ? _null : t5.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t6 = _this._implicit_animations$_margin;
      t6 = t6 == null ? _null : t6.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t7 = _this._implicit_animations$_transform;
      t7 = t7 == null ? _null : t7.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t8 = _this._transformAlignment;
      t8 = t8 == null ? _null : t8.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      return C.Container$(t1, _this._widget.child, D.Clip_0, _null, t5, t3, t4, _null, _null, t6, t2, t7, t8, _null);
    },
    debugFillProperties$1(description) {
      var t1, t2, t3, _this = this, _null = null;
      _this.super$_ImplicitlyAnimatedWidgetState_State_SingleTickerProviderStateMixin$debugFillProperties(description);
      t1 = type$.AlignmentGeometryTween;
      description.add$1(0, C.DiagnosticsProperty$("alignment", _this._implicit_animations$_alignment, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, false, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t2 = type$.EdgeInsetsGeometryTween;
      description.add$1(0, C.DiagnosticsProperty$("padding", _this._implicit_animations$_padding, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t3 = type$.DecorationTween;
      description.add$1(0, C.DiagnosticsProperty$("bg", _this._implicit_animations$_decoration, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      description.add$1(0, C.DiagnosticsProperty$("fg", _this._foregroundDecoration, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t3));
      description.add$1(0, C.DiagnosticsProperty$("constraints", _this._implicit_animations$_constraints, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraintsTween));
      description.add$1(0, C.DiagnosticsProperty$("margin", _this._implicit_animations$_margin, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      description.add$1(0, C.ObjectFlagProperty$has("transform", _this._implicit_animations$_transform, D.DiagnosticLevel_3, type$.Matrix4Tween));
      description.add$1(0, C.DiagnosticsProperty$("transformAlignment", _this._transformAlignment, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
    }
  };
  A.PageController.prototype = {
    get$page(_) {
      var t1 = this._positions;
      if (C.assertTest(t1.length !== 0))
        C.assertThrow("PageController.page cannot be accessed before a PageView is built with it.");
      if (C.assertTest(t1.length === 1))
        C.assertThrow("The page property cannot be read when multiple PageViews are attached to the same PageController.");
      return type$._PagePosition._as(this.get$position(0)).get$page(0);
    },
    animateToPage$3$curve$duration(page, curve, duration) {
      var position = type$._PagePosition._as(this.get$position(0));
      if (position._cachedPage != null) {
        position._cachedPage = page;
        return C.Future_Future$value(null, type$.void);
      }
      if (position._viewportDimension == null) {
        position._pageToUseOnStartup = page;
        return C.Future_Future$value(null, type$.void);
      }
      return position.animateTo$3$curve$duration(position.getPixelsFromPage$1(page), curve, duration);
    },
    createScrollPosition$3(physics, context, oldPosition) {
      var _null = null,
        t1 = new A._PagePosition(this.initialPage, 1, D.ScrollDirection_0, physics, context, true, _null, C.ValueNotifier$(false, type$.bool), $.$get$ChangeNotifier__emptyListeners());
      C.ChangeNotifier_maybeDispatchObjectCreation(t1);
      t1.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, _null, true, oldPosition, physics);
      t1.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, _null, _null, true, oldPosition, physics);
      return t1;
    },
    attach$1(position) {
      this.super$ScrollController$attach(position);
      type$._PagePosition._as(position).set$viewportFraction(1);
    }
  };
  A.PageMetrics.prototype = {};
  A._PagePosition.prototype = {
    ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(object, alignment, alignmentPolicy, curve, duration, targetRenderObject) {
      return this.super$ScrollPosition$ensureVisible(object, alignment, alignmentPolicy, curve, duration, null);
    },
    set$viewportFraction(value) {
      var oldPage, _this = this;
      if (_this._viewportFraction === value)
        return;
      oldPage = _this.get$page(0);
      _this._viewportFraction = value;
      if (oldPage != null)
        _this.forcePixels$1(_this.getPixelsFromPage$1(oldPage));
    },
    get$_initialPageOffset() {
      var t1 = this._viewportDimension;
      t1.toString;
      return Math.max(0, t1 * (this._viewportFraction - 1) / 2);
    },
    getPageFromPixels$2(pixels, viewportDimension) {
      var actual, round;
      C.assertHelper(viewportDimension > 0);
      actual = Math.max(0, pixels - this.get$_initialPageOffset()) / (viewportDimension * this._viewportFraction);
      round = D.JSNumber_methods.roundToDouble$0(actual);
      if (Math.abs(actual - round) < 1e-10)
        return round;
      return actual;
    },
    getPixelsFromPage$1(page) {
      var t1 = this._viewportDimension;
      t1.toString;
      return page * t1 * this._viewportFraction + this.get$_initialPageOffset();
    },
    get$page(_) {
      var t1, t2, t3, _this = this;
      if (_this._pixels == null)
        return null;
      if (C.assertTest(_this._minScrollExtent != null && _this._maxScrollExtent != null || !_this._haveDimensions))
        C.assertThrow("Page value is only available after content dimensions are established.");
      t1 = _this._minScrollExtent;
      if (t1 != null && _this._maxScrollExtent != null || _this._haveDimensions) {
        t2 = _this._cachedPage;
        if (t2 == null) {
          t2 = _this._pixels;
          t2.toString;
          t1.toString;
          t3 = _this._maxScrollExtent;
          t3.toString;
          t3 = C.clampDouble(t2, t1, t3);
          t1 = _this._viewportDimension;
          t1.toString;
          t1 = _this.getPageFromPixels$2(t3, t1);
        } else
          t1 = t2;
      } else
        t1 = null;
      return t1;
    },
    saveScrollOffset$0() {
      var t3, t4, _this = this,
        t1 = _this.context,
        t2 = C.PageStorage_maybeOf(t1.get$context(0));
      if (t2 != null) {
        t1 = t1.get$context(0);
        t3 = _this._cachedPage;
        if (t3 == null) {
          t3 = _this._pixels;
          t3.toString;
          t4 = _this._viewportDimension;
          t4.toString;
          t4 = _this.getPageFromPixels$2(t3, t4);
          t3 = t4;
        }
        t2.writeState$2(t1, t3);
      }
    },
    restoreScrollOffset$0() {
      var t1, t2, value;
      if (this._pixels == null) {
        t1 = this.context;
        t2 = C.PageStorage_maybeOf(t1.get$context(0));
        value = t2 == null ? null : t2.readState$1(t1.get$context(0));
        if (value != null)
          this._pageToUseOnStartup = value;
      }
    },
    saveOffset$0() {
      var t2, _this = this,
        t1 = _this._cachedPage;
      if (t1 == null) {
        t1 = _this._pixels;
        t1.toString;
        t2 = _this._viewportDimension;
        t2.toString;
        t2 = _this.getPageFromPixels$2(t1, t2);
        t1 = t2;
      }
      _this.context.saveOffset$1(t1);
    },
    restoreOffset$2$initialRestore(offset, initialRestore) {
      if (initialRestore)
        this._pageToUseOnStartup = offset;
      else
        this.jumpTo$1(this.getPixelsFromPage$1(offset));
    },
    applyViewportDimension$1(viewportDimension) {
      var oldPixels, page, t1, newPixels, _this = this,
        oldViewportDimensions = _this._viewportDimension;
      oldViewportDimensions = oldViewportDimensions != null ? oldViewportDimensions : null;
      if (viewportDimension === oldViewportDimensions)
        return true;
      _this.super$ScrollPosition$applyViewportDimension(viewportDimension);
      oldPixels = _this._pixels;
      oldPixels = oldPixels != null ? oldPixels : null;
      if (oldPixels == null)
        page = _this._pageToUseOnStartup;
      else if (oldViewportDimensions === 0) {
        t1 = _this._cachedPage;
        t1.toString;
        page = t1;
      } else {
        oldViewportDimensions.toString;
        page = _this.getPageFromPixels$2(oldPixels, oldViewportDimensions);
      }
      newPixels = _this.getPixelsFromPage$1(page);
      _this._cachedPage = viewportDimension === 0 ? page : null;
      if (newPixels !== oldPixels) {
        _this._pixels = newPixels;
        return false;
      }
      return true;
    },
    absorb$1(other) {
      var t1;
      this.super$ScrollPositionWithSingleContext$absorb(other);
      C.assertHelper(this._cachedPage == null);
      if (!(other instanceof A._PagePosition))
        return;
      t1 = other._cachedPage;
      if (t1 != null)
        this._cachedPage = t1;
    },
    applyContentDimensions$2(minScrollExtent, maxScrollExtent) {
      var newMinScrollExtent = minScrollExtent + this.get$_initialPageOffset();
      return this.super$ScrollPosition$applyContentDimensions(newMinScrollExtent, Math.max(newMinScrollExtent, maxScrollExtent - this.get$_initialPageOffset()));
    },
    copyWith$0() {
      var t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = _null,
        t2 = _this._minScrollExtent;
      if (t2 != null && _this._maxScrollExtent != null) {
        t2.toString;
        t1 = t2;
      }
      t2 = _null;
      if (_this._minScrollExtent != null && _this._maxScrollExtent != null) {
        t2 = _this._maxScrollExtent;
        t2.toString;
      }
      t3 = _this._pixels;
      t3 = t3 != null ? t3 : _null;
      t4 = _this._viewportDimension;
      t4 = t4 != null ? t4 : _null;
      t5 = _this.context;
      t6 = t5._widget.axisDirection;
      t7 = _this._viewportFraction;
      t5 = t5.__ScrollableState__devicePixelRatio_A;
      t5 === $ && C.throwLateFieldNI("_devicePixelRatio");
      return new A.PageMetrics(t7, t1, t2, t3, t4, t6, t5);
    },
    $isPageMetrics: 1
  };
  A._ForceImplicitScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A._ForceImplicitScrollPhysics(false, this.buildParent$1(ancestor));
    },
    get$allowImplicitScrolling() {
      return this.allowImplicitScrolling;
    }
  };
  A.PageScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.PageScrollPhysics(this.buildParent$1(ancestor));
    },
    _getPage$1(position) {
      var t1, t2;
      if (position instanceof A._PagePosition) {
        t1 = position.get$page(0);
        t1.toString;
        return t1;
      }
      t1 = position._pixels;
      t1.toString;
      t2 = position._viewportDimension;
      t2.toString;
      return t1 / t2;
    },
    _getPixels$2(position, page) {
      var t1;
      if (position instanceof A._PagePosition)
        return position.getPixelsFromPage$1(page);
      t1 = position._viewportDimension;
      t1.toString;
      return page * t1;
    },
    createBallisticSimulation$2(position, velocity) {
      var t1, t2, tolerance, page, target, _this = this;
      if (velocity <= 0) {
        t1 = position._pixels;
        t1.toString;
        t2 = position._minScrollExtent;
        t2.toString;
        t2 = t1 <= t2;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        if (velocity >= 0) {
          t1 = position._pixels;
          t1.toString;
          t2 = position._maxScrollExtent;
          t2.toString;
          t2 = t1 >= t2;
          t1 = t2;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return _this.super$ScrollPhysics$createBallisticSimulation(position, velocity);
      tolerance = _this.toleranceFor$1(position);
      page = _this._getPage$1(position);
      t1 = tolerance.velocity;
      if (velocity < -t1)
        page -= 0.5;
      else if (velocity > t1)
        page += 0.5;
      target = _this._getPixels$2(position, D.JSNumber_methods.roundToDouble$0(page));
      t1 = position._pixels;
      t1.toString;
      if (target !== t1) {
        t1 = _this.get$spring();
        t2 = position._pixels;
        t2.toString;
        return new C.ScrollSpringSimulation(target, C._SpringSolution__SpringSolution(t1, t2 - target, velocity), tolerance);
      }
      return null;
    },
    get$allowImplicitScrolling() {
      return false;
    }
  };
  A.PageView.prototype = {
    createState$0() {
      return new A._PageViewState(D._StateLifecycle_0);
    }
  };
  A._PageViewState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this._initController$0();
      t1 = _this.___PageViewState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      _this._lastReportedPage = t1.initialPage;
    },
    dispose$0() {
      this._widget.toString;
      this.super$State$dispose();
    },
    _initController$0() {
      var t1 = this._widget.controller;
      this.___PageViewState__controller_A = t1;
    },
    didUpdateWidget$1(oldWidget) {
      type$.PageView._as(oldWidget);
      if (oldWidget.controller !== this._widget.controller)
        this._initController$0();
      this.super$State$didUpdateWidget(oldWidget);
    },
    _getDirection$1(context) {
      var axisDirection;
      this._widget.toString;
      switch (0) {
        case 0:
          C.debugCheckHasDirectionality(context, null, null, null);
          axisDirection = C.textDirectionToAxisDirection(C.Directionality_of(context));
          this._widget.toString;
          return axisDirection;
      }
    },
    build$1(context) {
      var t1, t2, t3, _this = this, _null = null,
        axisDirection = _this._getDirection$1(context);
      _this._widget.toString;
      t1 = new A.PageScrollPhysics(B.PageScrollPhysics_null.buildParent$1(_null));
      t1 = new A._ForceImplicitScrollPhysics(false, _null).buildParent$1(t1);
      _this._widget.toString;
      t2 = _this.___PageViewState__controller_A;
      t2 === $ && C.throwLateFieldNI("_controller");
      t3 = C.ScrollConfiguration_of(context).copyWith$1$scrollbars(false);
      return new C.NotificationListener(new A._PageViewState_build_closure(_this), C.Scrollable$(axisDirection, D.Clip_1, t2, D.DragStartBehavior_1, false, D.HitTestBehavior_1, _null, new A._ForceImplicitScrollPhysics(false, t1), _null, t3, _null, new A._PageViewState_build_closure0(_this, axisDirection)), _null, type$.NotificationListener_ScrollNotification);
    },
    debugFillProperties$1(description) {
      var t1, _this = this, _null = null;
      _this.super$State$debugFillProperties(description);
      _this._widget.toString;
      description.add$1(0, C.EnumProperty$("scrollDirection", D.Axis_0, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.Axis));
      _this._widget.toString;
      description.add$1(0, C.FlagProperty$("reverse", _null, _null, "reversed", D.DiagnosticLevel_3, false, false));
      t1 = _this.___PageViewState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      description.add$1(0, C.DiagnosticsProperty$("controller", t1, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.PageController));
      _this._widget.toString;
      description.add$1(0, C.DiagnosticsProperty$("physics", _null, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, false, true, D.DiagnosticsTreeStyle_8, _null, type$.ScrollPhysics));
      _this._widget.toString;
      description.add$1(0, C.FlagProperty$("pageSnapping", _null, "snapping disabled", _null, D.DiagnosticLevel_3, false, true));
      _this._widget.toString;
      description.add$1(0, C.FlagProperty$("allowImplicitScrolling", _null, _null, "allow implicit scrolling", D.DiagnosticLevel_3, false, false));
    }
  };
  A.NeverScrollableScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.NeverScrollableScrollPhysics(this.buildParent$1(ancestor));
    },
    get$allowUserScrolling() {
      return false;
    },
    get$allowImplicitScrolling() {
      return false;
    }
  };
  A.GridView.prototype = {
    buildChildLayout$1(context) {
      return new A.SliverGrid(this.gridDelegate, this.childrenDelegate, null);
    }
  };
  A.SliverGrid.prototype = {
    createRenderObject$1(context) {
      return A.RenderSliverGrid$(type$.SliverMultiBoxAdaptorElement._as(context), this.gridDelegate);
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderSliverGrid._as(renderObject).set$gridDelegate(this.gridDelegate);
    },
    estimateMaxScrollOffset$5(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset) {
      var t1, t2;
      this.super$SliverMultiBoxAdaptorWidget$estimateMaxScrollOffset(constraints, firstIndex, lastIndex, leadingScrollOffset, trailingScrollOffset);
      t1 = this.gridDelegate.getLayout$1(constraints);
      t2 = this.delegate.get$estimatedChildCount();
      t2.toString;
      t2 = t1.computeMaxScrollOffset$1(t2);
      return t2;
    }
  };
  A.SliverFillViewport.prototype = {
    build$1(context) {
      var t1 = this.viewportFraction,
        t2 = C.clampDouble(1 - t1, 0, 1) / 2;
      C.assertHelper(t1 > 0);
      C.assertHelper(t2 >= 0);
      C.assertHelper(t2 <= 0.5);
      return new A._SliverFractionalPadding(t2, new A._SliverFillViewportRenderObjectWidget(t1, this.delegate, null), null);
    }
  };
  A._SliverFillViewportRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      return A.RenderSliverFillViewport$(type$.SliverMultiBoxAdaptorElement._as(context), this.viewportFraction);
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderSliverFillViewport._as(renderObject).set$viewportFraction(this.viewportFraction);
    }
  };
  A._SliverFractionalPadding.prototype = {
    createRenderObject$1(context) {
      var t1 = this.viewportFraction;
      C.assertHelper(t1 <= 0.5);
      C.assertHelper(t1 >= 0);
      t1 = new A._RenderSliverFractionalPadding(t1, null, C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderSliverFractionalPadding._as(renderObject).set$viewportFraction(this.viewportFraction);
    }
  };
  A._RenderSliverFractionalPadding.prototype = {
    set$viewportFraction(newValue) {
      var _this = this;
      if (_this._sliver_fill$_viewportFraction === newValue)
        return;
      _this._sliver_fill$_viewportFraction = newValue;
      _this._sliver_fill$_resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    get$resolvedPadding() {
      return this._sliver_fill$_resolvedPadding;
    },
    _sliver_fill$_resolve$0() {
      var t1, paddingValue, _this = this;
      if (_this._sliver_fill$_resolvedPadding != null && J.$eq$(_this._lastResolvedConstraints, type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(_this))))
        return;
      t1 = type$.SliverConstraints;
      paddingValue = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).viewportMainAxisExtent * _this._sliver_fill$_viewportFraction;
      _this._lastResolvedConstraints = t1._as(C.RenderObject.prototype.get$constraints.call(_this));
      switch (C.axisDirectionToAxis(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).axisDirection).index) {
        case 0:
          t1 = new C.EdgeInsets(paddingValue, 0, paddingValue, 0);
          break;
        case 1:
          t1 = new C.EdgeInsets(0, paddingValue, 0, paddingValue);
          break;
        default:
          t1 = null;
      }
      _this._sliver_fill$_resolvedPadding = t1;
      return;
    },
    performLayout$0() {
      this._sliver_fill$_resolve$0();
      this.super$RenderSliverEdgeInsetsPadding$performLayout();
    }
  };
  A.Spacer.prototype = {
    build$1(context) {
      return C.Expanded$(D.SizedBox_0_0_null_null, 1, null);
    }
  };
  A.ToggleableStateMixin.prototype = {
    animateToValue$0() {
      var t1, t2, _this = this,
        _s19_ = "_positionController";
      _this.get$tristate();
      t1 = _this.get$value(_this);
      t2 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      if (t1) {
        t2 === $ && C.throwLateFieldNI(_s19_);
        t2.forward$0(0);
      } else {
        t2 === $ && C.throwLateFieldNI(_s19_);
        t2.reverse$0(0);
      }
    },
    _toggleable$_handleTapDown$1(details) {
      var t1, _this = this;
      if (_this.get$onChanged() != null) {
        _this.setState$1(new A.ToggleableStateMixin__handleTapDown_closure(_this, details));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
        t1 === $ && C.throwLateFieldNI("_reactionController");
        t1.forward$0(0);
      }
    },
    _toggleable$_handleTap$1(__wc0_formal) {
      var t1, _this = this;
      type$.nullable_Intent._as(__wc0_formal);
      if (_this.get$onChanged() == null)
        return;
      switch (_this.get$value(_this)) {
        case false:
          _this.get$onChanged().call$1(true);
          break;
        case true:
          t1 = _this.get$onChanged();
          t1.toString;
          _this.get$tristate();
          t1.call$1(false);
          break;
        case null:
        case void 0:
          _this.get$onChanged().call$1(false);
          break;
      }
      _this.get$context(0).findRenderObject$0().sendSemanticsEvent$1(D.TapSemanticEvent_tap);
    },
    _toggleable$_handleTap$0() {
      return this._toggleable$_handleTap$1(null);
    },
    _handleTapEnd$1(__wc1_formal) {
      var t1, _this = this;
      if (_this.ToggleableStateMixin__downPosition != null)
        _this.setState$1(new A.ToggleableStateMixin__handleTapEnd_closure(_this));
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && C.throwLateFieldNI("_reactionController");
      t1.reverse$0(0);
    },
    _handleTapEnd$0() {
      return this._handleTapEnd$1(null);
    },
    _toggleable$_handleFocusHighlightChanged$1(focused) {
      var t1, _this = this,
        _s28_ = "_reactionFocusFadeController";
      if (focused !== _this.ToggleableStateMixin__focused) {
        _this.setState$1(new A.ToggleableStateMixin__handleFocusHighlightChanged_closure(_this, focused));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
        if (focused) {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.forward$0(0);
        } else {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.reverse$0(0);
        }
      }
    },
    _toggleable$_handleHoverChanged$1(hovering) {
      var t1, _this = this,
        _s28_ = "_reactionHoverFadeController";
      if (hovering !== _this.ToggleableStateMixin__hovering) {
        _this.setState$1(new A.ToggleableStateMixin__handleHoverChanged_closure(_this, hovering));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
        if (hovering) {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.forward$0(0);
        } else {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.reverse$0(0);
        }
      }
    },
    get$states() {
      var t2, _this = this,
        t1 = C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (_this.get$onChanged() == null)
        t1.add$1(0, D.WidgetState_6);
      if (_this.ToggleableStateMixin__hovering)
        t1.add$1(0, D.WidgetState_0);
      if (_this.ToggleableStateMixin__focused)
        t1.add$1(0, D.WidgetState_1);
      t2 = _this.get$value(_this);
      if (t2)
        t1.add$1(0, D.WidgetState_4);
      return t1;
    },
    buildToggleable$6$autofocus$focusNode$mouseCursor$onFocusChange$painter$size(autofocus, focusNode, mouseCursor, onFocusChange, painter, size) {
      var value, result, t1, t2, t3, t4, t5, t6, t7, t8, t9, _this = this, _null = null;
      type$.nullable_void_Function_bool._as(onFocusChange);
      type$.nullable_WidgetStateProperty_MouseCursor._as(mouseCursor);
      value = _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI;
      if (value === $) {
        result = C.LinkedHashMap_LinkedHashMap$_literal([D.Type_ActivateIntent_2HG, new C.CallbackAction(_this.get$_toggleable$_handleTap(), new C.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction_ActivateIntent)], type$.Type, type$.Action_Intent);
        _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI !== $ && C.throwLateFieldADI("_actionMap");
        _this.set$__ToggleableStateMixin__actionMap_FI(result);
        value = result;
      }
      t1 = _this.get$onChanged();
      t2 = mouseCursor._resolve.call$1(type$.Set_WidgetState._as(_this.get$states()));
      if (t2 == null)
        t2 = D.SystemMouseCursor_basic;
      t3 = _this.get$onChanged();
      t4 = _this.get$onChanged() != null ? _this.get$_toggleable$_handleTapDown() : _null;
      t5 = _this.get$onChanged() != null ? _this.get$_toggleable$_handleTap() : _null;
      t6 = _this.get$onChanged() != null ? _this.get$_handleTapEnd() : _null;
      t7 = _this.get$onChanged() != null ? _this.get$_handleTapEnd() : _null;
      t8 = _this.get$onChanged();
      t9 = C.CustomPaint$(_null, _null, _null, painter, size);
      return C.FocusableActionDetector$(value, false, C.GestureDetector$(_null, new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t8 != null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t9, _null), D.DragStartBehavior_1, t3 == null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t5, t7, t4, t6, _null, _null, _null, _null, _null), t1 != null, focusNode, true, t2, onFocusChange, _this.get$_toggleable$_handleFocusHighlightChanged(), _this.get$_toggleable$_handleHoverChanged(), _null);
    },
    buildToggleable$5$autofocus$focusNode$mouseCursor$painter$size(autofocus, focusNode, mouseCursor, painter, size) {
      return this.buildToggleable$6$autofocus$focusNode$mouseCursor$onFocusChange$painter$size(autofocus, focusNode, mouseCursor, null, painter, size);
    },
    set$__ToggleableStateMixin__actionMap_FI(__ToggleableStateMixin__actionMap_FI) {
      this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = type$.Map_of_Type_and_Action_Intent._as(__ToggleableStateMixin__actionMap_FI);
    }
  };
  A.ToggleablePainter.prototype = {
    set$position(_, value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._toggleable$_position;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_toggleable$_position(0, value);
      _this.notifyListeners$0();
    },
    set$reaction(value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._reaction;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_reaction(value);
      _this.notifyListeners$0();
    },
    set$reactionFocusFade(value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._reactionFocusFade;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_reactionFocusFade(value);
      _this.notifyListeners$0();
    },
    set$reactionHoverFade(value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._reactionHoverFade;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_reactionHoverFade(value);
      _this.notifyListeners$0();
    },
    set$activeColor(value) {
      if (J.$eq$(this._activeColor, value))
        return;
      this._activeColor = value;
      this.notifyListeners$0();
    },
    set$inactiveColor(value) {
      if (J.$eq$(this._inactiveColor, value))
        return;
      this._inactiveColor = value;
      this.notifyListeners$0();
    },
    set$inactiveReactionColor(value) {
      if (value.$eq(0, this._inactiveReactionColor))
        return;
      this._inactiveReactionColor = value;
      this.notifyListeners$0();
    },
    set$reactionColor(value) {
      if (value.$eq(0, this._reactionColor))
        return;
      this._reactionColor = value;
      this.notifyListeners$0();
    },
    set$hoverColor(value) {
      if (value.$eq(0, this._toggleable$_hoverColor))
        return;
      this._toggleable$_hoverColor = value;
      this.notifyListeners$0();
    },
    set$focusColor(value) {
      if (value.$eq(0, this._toggleable$_focusColor))
        return;
      this._toggleable$_focusColor = value;
      this.notifyListeners$0();
    },
    set$splashRadius(value) {
      if (value === this._splashRadius)
        return;
      this._splashRadius = value;
      this.notifyListeners$0();
    },
    set$downPosition(value) {
      if (J.$eq$(value, this._downPosition))
        return;
      this._downPosition = value;
      this.notifyListeners$0();
    },
    set$isFocused(value) {
      if (value === this._toggleable$_isFocused)
        return;
      this._toggleable$_isFocused = value;
      this.notifyListeners$0();
    },
    set$isHovered(value) {
      if (value === this._toggleable$_isHovered)
        return;
      this._toggleable$_isHovered = value;
      this.notifyListeners$0();
    },
    paintRadialReaction$2$canvas$origin(canvas, origin) {
      var reactionPaint, t1, t2, reactionRadius, _this = this;
      if (_this._reaction.get$status(0) !== D.AnimationStatus_0 || _this._reactionFocusFade.get$status(0) !== D.AnimationStatus_0 || _this._reactionHoverFade.get$status(0) !== D.AnimationStatus_0) {
        reactionPaint = $.$get$_renderer().createPaint$0();
        t1 = _this._inactiveReactionColor;
        t1.toString;
        t2 = _this._reactionColor;
        t2.toString;
        t2 = C.Color_lerp(t1, t2, _this._toggleable$_position.get$value(0));
        t1 = _this._toggleable$_hoverColor;
        t1.toString;
        t1 = C.Color_lerp(t2, t1, _this._reactionHoverFade.get$value(0));
        t2 = _this._toggleable$_focusColor;
        t2.toString;
        t2 = C.Color_lerp(t1, t2, _this._reactionFocusFade.get$value(0));
        t2.toString;
        reactionPaint.set$color(0, t2);
        t2 = _this._splashRadius;
        t2.toString;
        t1 = _this._toggleable$_isFocused;
        t1.toString;
        if (!t1) {
          t1 = _this._toggleable$_isHovered;
          t1.toString;
        } else
          t1 = true;
        if (t1)
          reactionRadius = t2;
        else {
          t1 = _this._reaction;
          t1.toString;
          reactionRadius = new C.Tween(0, t2, type$.Tween_double).transform$1(0, type$.Animation_double._as(t1).get$value(0));
        }
        if (reactionRadius > 0)
          canvas.drawCircle$3(origin.$add(0, D.Offset_0_0), reactionRadius, reactionPaint);
      }
    },
    dispose$0() {
      var t2, _this = this,
        t1 = _this._toggleable$_position;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      t1 = _this._reaction;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      t1 = _this._reactionFocusFade;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      t1 = _this._reactionHoverFade;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      _this.super$ChangeNotifier$dispose();
    },
    shouldRepaint$1(oldDelegate) {
      return true;
    },
    hitTest$1(position) {
      return null;
    },
    get$semanticsBuilder() {
      return null;
    },
    shouldRebuildSemantics$1(oldDelegate) {
      return false;
    },
    toString$0(_) {
      return C.objectRuntimeType(this, "<optimized out>") + "#" + C.shortHash(this);
    },
    set$_toggleable$_position(_, _position) {
      this._toggleable$_position = type$.nullable_Animation_double._as(_position);
    },
    set$_reaction(_reaction) {
      this._reaction = type$.nullable_Animation_double._as(_reaction);
    },
    set$_reactionFocusFade(_reactionFocusFade) {
      this._reactionFocusFade = type$.nullable_Animation_double._as(_reactionFocusFade);
    },
    set$_reactionHoverFade(_reactionHoverFade) {
      this._reactionHoverFade = type$.nullable_Animation_double._as(_reactionHoverFade);
    },
    $isCustomPainter: 1
  };
  A.ChatOperationType.prototype = {
    _enumToString$0() {
      return "ChatOperationType." + this._name;
    }
  };
  A.ChatOperation.prototype = {};
  A.ScrollToMessageMixin.prototype = {
    set$_scrollToMessageId(_scrollToMessageId) {
      this.ScrollToMessageMixin__scrollToMessageId = type$.nullable_Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(_scrollToMessageId);
    },
    set$_scroll_to_message_mixin$_scrollToIndex(_scrollToIndex) {
      this.ScrollToMessageMixin__scrollToIndex = type$.nullable_Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(_scrollToIndex);
    }
  };
  A.UploadProgressMixin.prototype = {
    getUploadProgress$1(id) {
      var controller,
        t1 = this.UploadProgressMixin__progressControllers;
      if (t1.containsKey$1(0, id)) {
        t1 = t1.$index(0, id);
        t1.toString;
        return new C._BroadcastStream(t1, C._instanceType(t1)._eval$1("_BroadcastStream<1>"));
      }
      controller = C.StreamController_StreamController$broadcast(false, type$.double);
      controller.add$1(0, 0);
      t1.$indexSet(0, id, controller);
      return new C._BroadcastStream(controller, C._instanceType(controller)._eval$1("_BroadcastStream<1>"));
    },
    disposeUploadProgress$0() {
      var t1, t2, t3;
      for (t1 = this.UploadProgressMixin__progressControllers, t2 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();) {
        t3 = t2.__js_helper$_current;
        if (!t3.get$isClosed())
          t3.close$0(0);
      }
      t1.clear$0(0);
    }
  };
  A.Builders.prototype = {};
  A._$Builders.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Builders) {
            t2 = other.textMessageBuilder;
            t3 = _this.textMessageBuilder;
            if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
              t2 = other.textStreamMessageBuilder;
              t3 = _this.textStreamMessageBuilder;
              if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                t2 = other.imageMessageBuilder;
                t3 = _this.imageMessageBuilder;
                if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                  t2 = other.customMessageBuilder;
                  t3 = _this.customMessageBuilder;
                  if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                    t2 = other.composerBuilder;
                    t3 = _this.composerBuilder;
                    if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                      t1 = other.emptyChatListBuilder;
                      t2 = _this.emptyChatListBuilder;
                      t1 = (t1 == null ? t2 == null : t1 === t2) || J.$eq$(t1, t2);
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this, _null = null;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.textMessageBuilder, _this.textStreamMessageBuilder, _this.imageMessageBuilder, _null, _null, _null, _null, _this.customMessageBuilder, _null, _this.composerBuilder, _null, _null, _null, _null, _this.emptyChatListBuilder, _null, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Builders(textMessageBuilder: " + C.S(_this.textMessageBuilder) + ", textStreamMessageBuilder: " + C.S(_this.textStreamMessageBuilder) + ", imageMessageBuilder: " + C.S(_this.imageMessageBuilder) + string$.x2c_file + C.S(_this.customMessageBuilder) + string$.x2c_unsu + C.S(_this.composerBuilder) + string$.x2c_chat + C.S(_this.emptyChatListBuilder) + ", linkPreviewBuilder: null)";
    }
  };
  A._Builders.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._Builders) {
            t2 = other.textMessageBuilder;
            t3 = _this.textMessageBuilder;
            if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
              t2 = other.textStreamMessageBuilder;
              t3 = _this.textStreamMessageBuilder;
              if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                t2 = other.imageMessageBuilder;
                t3 = _this.imageMessageBuilder;
                if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                  t2 = other.customMessageBuilder;
                  t3 = _this.customMessageBuilder;
                  if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                    t2 = other.composerBuilder;
                    t3 = _this.composerBuilder;
                    if ((t2 == null ? t3 == null : t2 === t3) || J.$eq$(t2, t3)) {
                      t1 = other.emptyChatListBuilder;
                      t2 = _this.emptyChatListBuilder;
                      t1 = (t1 == null ? t2 == null : t1 === t2) || J.$eq$(t1, t2);
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this, _null = null;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.textMessageBuilder, _this.textStreamMessageBuilder, _this.imageMessageBuilder, _null, _null, _null, _null, _this.customMessageBuilder, _null, _this.composerBuilder, _null, _null, _null, _null, _this.emptyChatListBuilder, _null, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Builders(textMessageBuilder: " + C.S(_this.textMessageBuilder) + ", textStreamMessageBuilder: " + C.S(_this.textStreamMessageBuilder) + ", imageMessageBuilder: " + C.S(_this.imageMessageBuilder) + string$.x2c_file + C.S(_this.customMessageBuilder) + string$.x2c_unsu + C.S(_this.composerBuilder) + string$.x2c_chat + C.S(_this.emptyChatListBuilder) + ", linkPreviewBuilder: null)";
    }
  };
  A._Builders_Object__$Builders.prototype = {};
  A.TextStreamMessage.prototype = {
    get$reactions() {
      var value = this._reactions;
      if (value == null)
        return null;
      if (value instanceof C.EqualUnmodifiableMapView)
        return value;
      return new C.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_of_String_and_List_String);
    },
    get$metadata(_) {
      var value = this._metadata;
      if (value == null)
        return null;
      if (value instanceof C.EqualUnmodifiableMapView)
        return value;
      return new C.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_String_dynamic);
    },
    toJson$0() {
      var _0_0, t2, t3, t4, _1_0, _2_0, _3_0, _4_0, _5_0, _6_0, _7_0, _8_0, _9_0, _10_0, _11_0, _this = this,
        t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "id", _this.id);
      t1.$indexSet(0, "authorId", _this.authorId);
      _0_0 = _this.replyToMessageId;
      if (_0_0 != null)
        t1.$indexSet(0, "replyToMessageId", _0_0);
      t2 = D.C_EpochDateTimeConverter.get$toJson();
      t3 = type$.int;
      t4 = type$.DateTime;
      _1_0 = C._$JsonConverterToJson(_this.createdAt, t2, t3, t4);
      if (_1_0 != null)
        t1.$indexSet(0, "createdAt", _1_0);
      _2_0 = C._$JsonConverterToJson(_this.deletedAt, t2, t3, t4);
      if (_2_0 != null)
        t1.$indexSet(0, "deletedAt", _2_0);
      _3_0 = C._$JsonConverterToJson(_this.failedAt, t2, t3, t4);
      if (_3_0 != null)
        t1.$indexSet(0, "failedAt", _3_0);
      _4_0 = C._$JsonConverterToJson(_this.sentAt, t2, t3, t4);
      if (_4_0 != null)
        t1.$indexSet(0, "sentAt", _4_0);
      _5_0 = C._$JsonConverterToJson(_this.deliveredAt, t2, t3, t4);
      if (_5_0 != null)
        t1.$indexSet(0, "deliveredAt", _5_0);
      _6_0 = C._$JsonConverterToJson(_this.seenAt, t2, t3, t4);
      if (_6_0 != null)
        t1.$indexSet(0, "seenAt", _6_0);
      _7_0 = C._$JsonConverterToJson(_this.updatedAt, t2, t3, t4);
      if (_7_0 != null)
        t1.$indexSet(0, "updatedAt", _7_0);
      _8_0 = _this.get$reactions();
      if (_8_0 != null)
        t1.$indexSet(0, "reactions", _8_0);
      _9_0 = _this.pinned;
      if (_9_0 != null)
        t1.$indexSet(0, "pinned", _9_0);
      _10_0 = _this.get$metadata(0);
      if (_10_0 != null)
        t1.$indexSet(0, "metadata", _10_0);
      _11_0 = D.Map_f1RYh.$index(0, _this.status);
      if (_11_0 != null)
        t1.$indexSet(0, "status", _11_0);
      t1.$indexSet(0, "streamId", _this.streamId);
      t1.$indexSet(0, "type", _this.$$type);
      return t1;
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.TextStreamMessage) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.authorId === _this.authorId;
              if (t2 || t2) {
                t2 = other.replyToMessageId == _this.replyToMessageId;
                if (t2 || t2) {
                  t2 = other.createdAt;
                  t3 = _this.createdAt;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.deletedAt;
                    t3 = _this.deletedAt;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.failedAt;
                      t3 = _this.failedAt;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.sentAt;
                        t3 = _this.sentAt;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.deliveredAt;
                          t3 = _this.deliveredAt;
                          if (t2 == t3 || J.$eq$(t2, t3)) {
                            t2 = other.seenAt;
                            t3 = _this.seenAt;
                            if (t2 == t3 || J.$eq$(t2, t3)) {
                              t2 = other.updatedAt;
                              t3 = _this.updatedAt;
                              if (t2 == t3 || J.$eq$(t2, t3))
                                if (D.DeepCollectionEquality_false.equals$2(other._reactions, _this._reactions)) {
                                  t2 = other.pinned == _this.pinned;
                                  if (t2 || t2)
                                    if (D.DeepCollectionEquality_false.equals$2(other._metadata, _this._metadata)) {
                                      t2 = other.status == _this.status;
                                      if (t2 || t2) {
                                        t1 = other.streamId === _this.streamId;
                                        t1 = t1 || t1;
                                      }
                                    }
                                }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.id, _this.authorId, _this.replyToMessageId, _this.createdAt, _this.deletedAt, _this.failedAt, _this.sentAt, _this.deliveredAt, _this.seenAt, _this.updatedAt, D.DeepCollectionEquality_false.hash$1(0, _this._reactions), _this.pinned, D.DeepCollectionEquality_false.hash$1(0, _this._metadata), _this.status, _this.streamId, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Message.textStream(id: " + _this.id + ", authorId: " + _this.authorId + ", replyToMessageId: " + C.S(_this.replyToMessageId) + ", createdAt: " + C.S(_this.createdAt) + ", deletedAt: " + C.S(_this.deletedAt) + ", failedAt: " + C.S(_this.failedAt) + ", sentAt: " + C.S(_this.sentAt) + ", deliveredAt: " + C.S(_this.deliveredAt) + ", seenAt: " + C.S(_this.seenAt) + ", updatedAt: " + C.S(_this.updatedAt) + ", reactions: " + C.S(_this.get$reactions()) + ", pinned: " + C.S(_this.pinned) + ", metadata: " + C.S(_this.get$metadata(0)) + ", status: " + C.S(_this.status) + ", streamId: " + _this.streamId + ")";
    },
    get$id(receiver) {
      return this.id;
    },
    get$authorId() {
      return this.authorId;
    },
    get$replyToMessageId() {
      return this.replyToMessageId;
    },
    get$createdAt() {
      return this.createdAt;
    },
    get$deletedAt() {
      return this.deletedAt;
    },
    get$failedAt() {
      return this.failedAt;
    },
    get$sentAt() {
      return this.sentAt;
    },
    get$deliveredAt() {
      return this.deliveredAt;
    },
    get$seenAt() {
      return this.seenAt;
    },
    get$updatedAt() {
      return this.updatedAt;
    },
    get$pinned() {
      return this.pinned;
    },
    get$status(receiver) {
      return this.status;
    }
  };
  A.MessageGroupStatus.prototype = {};
  A.User.prototype = {};
  A._$User.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._User) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.name === _this.name;
              if (t2 || t2)
                t1 = D.DeepCollectionEquality_false.equals$2(other.get$metadata(0), _this.get$metadata(0));
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.id, _this.name, null, null, D.DeepCollectionEquality_false.hash$1(0, _this.get$metadata(0)), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "User(id: " + this.id + ", name: " + this.name + string$.x2c_imag + C.S(this.get$metadata(0)) + ")";
    }
  };
  A._User.prototype = {
    get$metadata(_) {
      return null;
    },
    toJson$0() {
      var _3_0,
        t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "id", this.id);
      t1.$indexSet(0, "name", this.name);
      _3_0 = this.get$metadata(0);
      if (_3_0 != null)
        t1.$indexSet(0, "metadata", _3_0);
      return t1;
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._User) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.name === _this.name;
              if (t2 || t2)
                t1 = D.DeepCollectionEquality_false.equals$2(null, null);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(C.getRuntimeTypeOfDartObject(this), this.id, this.name, null, null, D.DeepCollectionEquality_false.hash$1(0, null), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "User(id: " + this.id + ", name: " + this.name + string$.x2c_imag + C.S(this.get$metadata(0)) + ")";
    }
  };
  A._User_Object__$User.prototype = {};
  A.ChatTheme.prototype = {};
  A.ChatColors.prototype = {};
  A.ChatTypography.prototype = {};
  A._$ChatTheme.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ChatTheme) {
            t2 = other.colors;
            t3 = _this.colors;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.typography;
              t3 = _this.typography;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t1 = other.shape;
                t2 = _this.shape;
                t1 = t1 === t2 || t1.$eq(0, t2);
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.colors, _this.typography, _this.shape, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "ChatTheme(colors: " + this.colors.toString$0(0) + ", typography: " + this.typography.toString$0(0) + ", shape: " + this.shape.toString$0(0) + ")";
    }
  };
  A._ChatTheme.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ChatTheme) {
            t2 = other.colors;
            t3 = _this.colors;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.typography;
              t3 = _this.typography;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t1 = other.shape;
                t2 = _this.shape;
                t1 = t1 === t2 || t1.$eq(0, t2);
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.colors, _this.typography, _this.shape, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "ChatTheme(colors: " + this.colors.toString$0(0) + ", typography: " + this.typography.toString$0(0) + ", shape: " + this.shape.toString$0(0) + ")";
    }
  };
  A._$ChatColors.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ChatColors) {
            t2 = other.primary;
            t3 = _this.primary;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.onPrimary;
              t3 = _this.onPrimary;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.surface;
                t3 = _this.surface;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.onSurface;
                  t3 = _this.onSurface;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.surfaceContainer;
                    t3 = _this.surfaceContainer;
                    if (t2 === t3 || t2.$eq(0, t3)) {
                      t2 = other.surfaceContainerLow;
                      t3 = _this.surfaceContainerLow;
                      if (t2 === t3 || t2.$eq(0, t3)) {
                        t1 = other.surfaceContainerHigh;
                        t2 = _this.surfaceContainerHigh;
                        t1 = t1 === t2 || t1.$eq(0, t2);
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.primary, _this.onPrimary, _this.surface, _this.onSurface, _this.surfaceContainer, _this.surfaceContainerLow, _this.surfaceContainerHigh, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ChatColors(primary: " + _this.primary.toString$0(0) + ", onPrimary: " + _this.onPrimary.toString$0(0) + ", surface: " + _this.surface.toString$0(0) + ", onSurface: " + _this.onSurface.toString$0(0) + ", surfaceContainer: " + _this.surfaceContainer.toString$0(0) + ", surfaceContainerLow: " + _this.surfaceContainerLow.toString$0(0) + ", surfaceContainerHigh: " + _this.surfaceContainerHigh.toString$0(0) + ")";
    }
  };
  A._ChatColors.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ChatColors) {
            t2 = other.primary;
            t3 = _this.primary;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.onPrimary;
              t3 = _this.onPrimary;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.surface;
                t3 = _this.surface;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.onSurface;
                  t3 = _this.onSurface;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.surfaceContainer;
                    t3 = _this.surfaceContainer;
                    if (t2 === t3 || t2.$eq(0, t3)) {
                      t2 = other.surfaceContainerLow;
                      t3 = _this.surfaceContainerLow;
                      if (t2 === t3 || t2.$eq(0, t3)) {
                        t1 = other.surfaceContainerHigh;
                        t2 = _this.surfaceContainerHigh;
                        t1 = t1 === t2 || t1.$eq(0, t2);
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.primary, _this.onPrimary, _this.surface, _this.onSurface, _this.surfaceContainer, _this.surfaceContainerLow, _this.surfaceContainerHigh, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ChatColors(primary: " + _this.primary.toString$0(0) + ", onPrimary: " + _this.onPrimary.toString$0(0) + ", surface: " + _this.surface.toString$0(0) + ", onSurface: " + _this.onSurface.toString$0(0) + ", surfaceContainer: " + _this.surfaceContainer.toString$0(0) + ", surfaceContainerLow: " + _this.surfaceContainerLow.toString$0(0) + ", surfaceContainerHigh: " + _this.surfaceContainerHigh.toString$0(0) + ")";
    }
  };
  A._$ChatTypography.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ChatTypography) {
            t2 = other.bodyLarge;
            t3 = _this.bodyLarge;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.bodyMedium;
              t3 = _this.bodyMedium;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.bodySmall;
                t3 = _this.bodySmall;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.labelLarge;
                  t3 = _this.labelLarge;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.labelMedium;
                    t3 = _this.labelMedium;
                    if (t2 === t3 || t2.$eq(0, t3)) {
                      t1 = other.labelSmall;
                      t2 = _this.labelSmall;
                      t1 = t1 === t2 || t1.$eq(0, t2);
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.bodyLarge, _this.bodyMedium, _this.bodySmall, _this.labelLarge, _this.labelMedium, _this.labelSmall, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ChatTypography(bodyLarge: " + _this.bodyLarge.toString$0(0) + ", bodyMedium: " + _this.bodyMedium.toString$0(0) + ", bodySmall: " + _this.bodySmall.toString$0(0) + ", labelLarge: " + _this.labelLarge.toString$0(0) + ", labelMedium: " + _this.labelMedium.toString$0(0) + ", labelSmall: " + _this.labelSmall.toString$0(0) + ")";
    }
  };
  A._ChatTypography.prototype = {
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === C.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._ChatTypography) {
            t2 = other.bodyLarge;
            t3 = _this.bodyLarge;
            if (t2 === t3 || t2.$eq(0, t3)) {
              t2 = other.bodyMedium;
              t3 = _this.bodyMedium;
              if (t2 === t3 || t2.$eq(0, t3)) {
                t2 = other.bodySmall;
                t3 = _this.bodySmall;
                if (t2 === t3 || t2.$eq(0, t3)) {
                  t2 = other.labelLarge;
                  t3 = _this.labelLarge;
                  if (t2 === t3 || t2.$eq(0, t3)) {
                    t2 = other.labelMedium;
                    t3 = _this.labelMedium;
                    if (t2 === t3 || t2.$eq(0, t3)) {
                      t1 = other.labelSmall;
                      t2 = _this.labelSmall;
                      t1 = t1 === t2 || t1.$eq(0, t2);
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(C.getRuntimeTypeOfDartObject(_this), _this.bodyLarge, _this.bodyMedium, _this.bodySmall, _this.labelLarge, _this.labelMedium, _this.labelSmall, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "ChatTypography(bodyLarge: " + _this.bodyLarge.toString$0(0) + ", bodyMedium: " + _this.bodyMedium.toString$0(0) + ", bodySmall: " + _this.bodySmall.toString$0(0) + ", labelLarge: " + _this.labelLarge.toString$0(0) + ", labelMedium: " + _this.labelMedium.toString$0(0) + ", labelSmall: " + _this.labelSmall.toString$0(0) + ")";
    }
  };
  A._ChatColors_Object__$ChatColors.prototype = {};
  A._ChatTheme_Object__$ChatTheme.prototype = {};
  A._ChatTypography_Object__$ChatTypography.prototype = {};
  A.LinkPreviewPosition.prototype = {
    _enumToString$0() {
      return "LinkPreviewPosition." + this._name;
    }
  };
  A.TimeAndStatusPosition.prototype = {
    _enumToString$0() {
      return "TimeAndStatusPosition." + this._name;
    }
  };
  A.MessagesGroupingMode.prototype = {
    _enumToString$0() {
      return "MessagesGroupingMode." + this._name;
    }
  };
  A.UserCache.prototype = {
    clear$0(_) {
      this._user_cache$_cache.clear$0(0);
      D.JSArray_methods.clear$0(this._accessOrder);
      this.notifyListeners$0();
    }
  };
  A.Chat.prototype = {
    createState$0() {
      return new A._ChatState(D._StateLifecycle_0);
    }
  };
  A._ChatState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      D.JSArray_methods.add$1(C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__observers, _this);
      _this._updateTheme$0();
      _this._updateBuilders$0();
      _this._widget.toString;
      t1 = C.CrossCache$(null);
      _this.___ChatState__crossCache_F !== $ && C.throwLateFieldAI("_crossCache");
      _this.___ChatState__crossCache_F = t1;
      _this._widget.toString;
      t1 = C._setArrayType([], type$.JSArray_String);
      t2 = $.$get$ChangeNotifier__emptyListeners();
      _this.___ChatState__userCache_F !== $ && C.throwLateFieldAI("_userCache");
      _this.___ChatState__userCache_F = new A.UserCache(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_User), t1, 100, t2);
      _this._widget.toString;
      t1 = C.DateFormat$("HH:mm", null);
      _this.___ChatState__timeFormat_A = t1;
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      type$.Chat._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!oldWidget.theme.$eq(0, _this._widget.theme))
        _this._updateTheme$0();
      if (!oldWidget.builders.$eq(0, _this._widget.builders))
        _this._updateBuilders$0();
    },
    dispose$0() {
      var t1, t2, _this = this;
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).removeObserver$1(_this);
      _this._widget.toString;
      t1 = _this.___ChatState__crossCache_F;
      t1 === $ && C.throwLateFieldNI("_crossCache");
      t2 = t1._dio;
      t2.DioMixin__closed = true;
      t2 = t2.DioMixin___DioMixin_httpClientAdapter_A;
      t2 === $ && C.throwLateFieldNI("httpClientAdapter");
      t2.close$1$force(0, true);
      t1 = t1._cross_cache$_cache;
      t2 = t1._db;
      if (t2 != null)
        t2.close$0(0);
      t1._db = null;
      t2 = t1._dbOpenCompleter;
      if (t2 != null && (t2.future._state & 30) === 0) {
        t2.completeError$1(new C._Exception("Cache disposed during open"));
        t1._dbOpenCompleter = null;
      }
      _this.super$State$dispose();
    },
    build$1(context) {
      var t5, t6, _this = this, _null = null,
        t1 = A.Provider$value(_null, _this._widget.currentUserId, type$.String),
        t2 = A.Provider$value(_null, _this._widget.resolveUser, type$.Future_nullable_User_Function_String),
        t3 = A.Provider$value(_null, _this._widget.chatController, type$.ChatController),
        t4 = _this.___ChatState__theme_A;
      t4 === $ && C.throwLateFieldNI("_theme");
      t4 = A.Provider$value(_null, t4, type$.ChatTheme);
      t5 = _this.___ChatState__builders_A;
      t5 === $ && C.throwLateFieldNI("_builders");
      t5 = A.Provider$value(_null, t5, type$.Builders);
      t6 = _this.___ChatState__crossCache_F;
      t6 === $ && C.throwLateFieldNI("_crossCache");
      t6 = C._setArrayType([t1, t2, t3, t4, t5, A.Provider$value(_null, t6, type$.CrossCache)], type$.JSArray_SingleChildWidget);
      _this._widget.toString;
      t6.push(A.ChangeNotifierProvider$(new A._ChatState_build_closure(_this), type$.UserCache));
      t1 = _this.___ChatState__timeFormat_A;
      t1 === $ && C.throwLateFieldNI("_timeFormat");
      t6.push(A.Provider$value(_null, t1, type$.DateFormat));
      t6.push(A.Provider$value(_null, _this._widget.onMessageSend, type$.nullable_void_Function_String));
      _this._widget.toString;
      t6.push(A.Provider$value(_null, _null, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_TapUpDetails_and_index_int));
      t6.push(A.Provider$value(_null, _this._widget.onMessageLongPress, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_LongPressStartDetails_and_index_int));
      t6.push(A.Provider$value(_null, _this._widget.onAttachmentTap, type$.nullable_void_Function));
      t6.push(A.ChangeNotifierProvider$(new A._ChatState_build_closure0(), type$.ComposerHeightNotifier));
      t6.push(A.ChangeNotifierProvider$(new A._ChatState_build_closure1(), type$.LoadMoreNotifier));
      _this._widget.toString;
      t1 = _this.___ChatState__theme_A.colors.surface;
      t2 = _this.___ChatState__builders_A;
      t2 = t2.composerBuilder;
      t2 = t2 == null ? _null : t2.call$1(context);
      if (t2 == null)
        t2 = B.Composer_52m;
      return A.MultiProvider$(C.Container$(_null, new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([new A.ChatAnimatedList(_this.get$_buildItem(), _null), t2], type$.JSArray_Widget), _null), D.Clip_0, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), t6);
    },
    _buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, isRemoved, messageGroupingTimeoutInSeconds, messagesGroupingMode) {
      type$.BuildContext._as(context);
      type$.Message._as(message);
      return new A.ChatMessageInternal(message, C._asInt(index), type$.Animation_double._as(animation), type$.nullable_MessagesGroupingMode._as(messagesGroupingMode), C._asIntQ(messageGroupingTimeoutInSeconds), C._asBoolQ(isRemoved), new C.ValueKey(message.get$id(message), type$.ValueKey_String));
    },
    _buildItem$4(context, message, index, animation) {
      return this._buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, null, null, null);
    },
    _buildItem$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, messageGroupingTimeoutInSeconds, messagesGroupingMode) {
      return this._buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, null, messageGroupingTimeoutInSeconds, messagesGroupingMode);
    },
    _updateTheme$0() {
      var t1 = this._widget.theme;
      this.___ChatState__theme_A = t1;
    },
    _updateBuilders$0() {
      var t1 = this._widget.builders;
      this.___ChatState__builders_A = t1;
    }
  };
  A.__ChatState_State_WidgetsBindingObserver.prototype = {};
  A.InitialScrollToEndMode.prototype = {
    _enumToString$0() {
      return "InitialScrollToEndMode." + this._name;
    }
  };
  A.ChatAnimatedList.prototype = {
    createState$0() {
      return new A._ChatAnimatedListState(new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_SliverAnimatedListState), C._setArrayType([], type$.JSArray_ChatOperation), null, null, D._StateLifecycle_0);
    },
    itemBuilder$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5) {
      return this.itemBuilder.call$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5);
    },
    itemBuilder$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
      return this.itemBuilder.call$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    }
  };
  A._ChatAnimatedListState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this, _null = null;
      _this.super$State$initState();
      t1 = type$.ChatController;
      t1 = t1._as(A.Provider_of(_this.get$context(0), false, t1));
      _this.___ChatAnimatedListState__chatController_F !== $ && C.throwLateFieldAI("_chatController");
      _this.___ChatAnimatedListState__chatController_F = t1;
      _this._widget.toString;
      t2 = C.ScrollController$(_null, _null);
      _this.___ChatAnimatedListState__scrollController_F !== $ && C.throwLateFieldAI("_scrollController");
      _this.___ChatAnimatedListState__scrollController_F = t2;
      t2 = new A.SliverObserverController(_null, true, new A.ObserverIndexPositionModel(0), _null, t2, C.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.Map_int_ObserveScrollChildModel), C._setArrayType([], type$.JSArray_BuildContext));
      t2.ObserverControllerForScroll_cacheJumpIndexOffset = false;
      _this.___ChatAnimatedListState__observerController_F !== $ && C.throwLateFieldAI("_observerController");
      _this.___ChatAnimatedListState__observerController_F = t2;
      t2 = type$.Message;
      _this.set$___ChatAnimatedListState__oldList_A(type$.List_Message._as(C.List_List$from(C.List_List$unmodifiable(t1._messages, t2), true, t2)));
      t2 = _this.___ChatAnimatedListState__oldList_A;
      t2 === $ && C.throwLateFieldNI("_oldList");
      _this.set$___ChatAnimatedListState__oldListEmptyNotifier_A(type$.ValueNotifier_bool._as(C.ValueNotifier$(t2.length === 0, type$.bool)));
      t2 = t1._operationController;
      t2 = type$.StreamSubscription_ChatOperation._as(new C._BroadcastStream(t2, C._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(new A._ChatAnimatedListState_initState_closure(_this)));
      _this.___ChatAnimatedListState__operationsSubscription_F !== $ && C.throwLateFieldAI("_operationsSubscription");
      _this.set$___ChatAnimatedListState__operationsSubscription_F(t2);
      t2 = C.AnimationController$(_null, D.Duration_0, _null, _null, _this);
      _this.___ChatAnimatedListState__scrollAnimationController_F !== $ && C.throwLateFieldAI("_scrollAnimationController");
      _this.___ChatAnimatedListState__scrollAnimationController_F = t2;
      t3 = type$.void_Function._as(_this.get$_linkAnimationToScroll());
      t2.didRegisterListener$0();
      t2.AnimationLocalListenersMixin__listeners.add$1(0, t3);
      t3 = C.AnimationController$(_null, D.Duration_250000, _null, _null, _this);
      _this.___ChatAnimatedListState__scrollToBottomController_F !== $ && C.throwLateFieldAI("_scrollToBottomController");
      _this.___ChatAnimatedListState__scrollToBottomController_F = t3;
      t3 = type$.Animation_double._as(C.CurvedAnimation$(D.Cubic_O6W, t3, _null));
      _this.___ChatAnimatedListState__scrollToBottomAnimation_F !== $ && C.throwLateFieldAI("_scrollToBottomAnimation");
      _this.set$___ChatAnimatedListState__scrollToBottomAnimation_F(t3);
      _this._widget.toString;
      _this.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = true;
      t2 = type$.Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(_this.get$_scrollToIndex());
      t1.set$_scrollToMessageId(type$.Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(_this.get$_chat_animated_list$_scrollToMessageId()));
      t1.set$_scroll_to_message_mixin$_scrollToIndex(t2);
    },
    onKeyboardHeightChanged$1(height) {
      this._widget.toString;
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ChatAnimatedListState_onKeyboardHeightChanged_closure(this, height));
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___ChatAnimatedListState__oldListEmptyNotifier_A;
      t1 === $ && C.throwLateFieldNI("_oldListEmptyNotifier");
      t1.dispose$0();
      t1 = _this._scrollToBottomShowTimer;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this.___ChatAnimatedListState__scrollToBottomController_F;
      t1 === $ && C.throwLateFieldNI("_scrollToBottomController");
      t1.dispose$0();
      t1 = _this.___ChatAnimatedListState__scrollAnimationController_F;
      t1 === $ && C.throwLateFieldNI("_scrollAnimationController");
      t1.removeListener$1(0, _this.get$_linkAnimationToScroll());
      t1.dispose$0();
      t1 = _this.___ChatAnimatedListState__operationsSubscription_F;
      t1 === $ && C.throwLateFieldNI("_operationsSubscription");
      t1.cancel$0(0);
      _this._widget.toString;
      t1 = _this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && C.throwLateFieldNI("_scrollController");
      t1.dispose$0();
      t1 = _this.___ChatAnimatedListState__chatController_F;
      t1 === $ && C.throwLateFieldNI("_chatController");
      t1.set$_scrollToMessageId(null);
      t1.set$_scroll_to_message_mixin$_scrollToIndex(null);
      _this.super$__ChatAnimatedListState_State_TickerProviderStateMixin$dispose();
    },
    get$_isAtChatEndScrollPosition() {
      var t1, t2;
      this._widget.toString;
      t1 = this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && C.throwLateFieldNI("_scrollController");
      t1 = t1.get$position(0)._pixels;
      t1.toString;
      t2 = this.get$_chatEndScrollPosition();
      return t1 >= t2;
    },
    get$_chatEndScrollPosition() {
      this._widget.toString;
      var t1 = this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && C.throwLateFieldNI("_scrollController");
      t1 = t1.get$position(0)._maxScrollExtent;
      t1.toString;
      return t1;
    },
    build$1(context) {
      var t2, t3, t4, _this = this, _null = null,
        builders = A.Provider_of(context, false, type$.Builders),
        t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && C.throwLateFieldNI("_oldList");
      t1 = t1.length;
      t2 = _this.___ChatAnimatedListState__observerController_F;
      t2 === $ && C.throwLateFieldNI("_observerController");
      t3 = _this.___ChatAnimatedListState__scrollController_F;
      t3 === $ && C.throwLateFieldNI("_scrollController");
      _this._widget.toString;
      t1 = C.CustomScrollView$(_null, t3, D.DragStartBehavior_1, D.ScrollViewKeyboardDismissBehavior_1, _null, false, false, new A._ChatAnimatedListState_build_buildSlivers(_this, context, builders, new A.SliverAnimatedList(new A._ChatAnimatedListState_build_closure(_this), _null, t1, _this._listKey)).call$0());
      t3 = _this.___ChatAnimatedListState__scrollToBottomAnimation_F;
      t3 === $ && C.throwLateFieldNI("_scrollToBottomAnimation");
      t4 = _this.___ChatAnimatedListState__oldListEmptyNotifier_A;
      t4 === $ && C.throwLateFieldNI("_oldListEmptyNotifier");
      return new C.NotificationListener(new A._ChatAnimatedListState_build_closure0(_this), new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([new A.SliverViewObserver(t2, t1, _null, t2, new A._ChatAnimatedListState_build_closure1(_this), _null, _null, 0, _null, 1, _null, _null, B.ObserverTriggerOnObserveType_1, _null, _null), new A.ScrollToBottom(t3, _this.get$_handleScrollToBottom(), _null), new C.ValueListenableBuilder(t4, new A._ChatAnimatedListState_build_closure2(builders), _null, _null, type$.ValueListenableBuilder_bool)], type$.JSArray_Widget), _null), _null, type$.NotificationListener_Notification);
    },
    _buildComposerHeightSliver$1(context) {
      this._widget.toString;
      return new A.SliverSpacing(20, true, this.get$onKeyboardHeightChanged(), null);
    },
    _linkAnimationToScroll$0() {
      var t1, t2, t3;
      this._widget.toString;
      t1 = this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && C.throwLateFieldNI("_scrollController");
      t2 = this.___ChatAnimatedListState__scrollAnimationController_F;
      t2 === $ && C.throwLateFieldNI("_scrollAnimationController");
      t2 = t2.__AnimationController__value_A;
      t2 === $ && C.throwLateFieldNI("_value");
      t3 = t1.get$position(0)._maxScrollExtent;
      t3.toString;
      t1.jumpTo$1(t2 * t3);
    },
    _initialScrollToEnd$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$_initialScrollToEnd$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              $async$goto = 3;
              return C._asyncAwait(C.Future_Future$delayed(D.Duration_250000, null, type$.dynamic), $async$_initialScrollToEnd$0);
            case 3:
              // returning from await.
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && C.throwLateFieldNI("_scrollController");
              if (t1._positions.length === 0 || $async$self._framework$_element == null || $async$self.get$_isAtChatEndScrollPosition()) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._widget.toString;
              t2 = $async$self.get$_chatEndScrollPosition();
              $async$self._widget.toString;
              $async$goto = 4;
              return C._asyncAwait(t1.animateTo$3$curve$duration(t2, D.Cubic_O6W, D.Duration_250000), $async$_initialScrollToEnd$0);
            case 4:
              // returning from await.
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_initialScrollToEnd$0, $async$completer);
    },
    _subsequentScrollToEnd$1(data) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, currentUserId, t3;
      var $async$_subsequentScrollToEnd$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              if (data.get$id(data) !== $async$self._lastInsertedMessageId || $async$self.get$_isAtChatEndScrollPosition()) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._widget.toString;
              t1 = !$async$self._userHasScrolled;
              $async$goto = t1 ? 3 : 4;
              break;
            case 3:
              // then
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && C.throwLateFieldNI("_scrollController");
              t2 = $async$self.get$_chatEndScrollPosition();
              $async$self._widget.toString;
              $async$goto = 5;
              return C._asyncAwait(t1.animateTo$3$curve$duration(t2, D.Cubic_O6W, D.Duration_250000), $async$_subsequentScrollToEnd$1);
            case 5:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              currentUserId = A.Provider_of($async$self.get$context(0), false, type$.String);
              $async$self._widget.toString;
              t1 = false;
              if (currentUserId === data.get$authorId()) {
                t1 = $async$self.___ChatAnimatedListState__oldList_A;
                t1 === $ && C.throwLateFieldNI("_oldList");
                t1 = J.get$id$z(D.JSArray_methods.get$last(t1)) === data.get$id(data);
              }
              $async$goto = t1 ? 6 : 7;
              break;
            case 6:
              // then
              $async$self._widget.toString;
              t1 = $async$self._userHasScrolled;
              $async$goto = t1 ? 8 : 10;
              break;
            case 8:
              // then
              t1 = $async$self.___ChatAnimatedListState__scrollAnimationController_F;
              t1 === $ && C.throwLateFieldNI("_scrollAnimationController");
              t2 = $async$self.___ChatAnimatedListState__scrollController_F;
              t2 === $ && C.throwLateFieldNI("_scrollController");
              t3 = t2.get$position(0)._pixels;
              t3.toString;
              t2 = t2.get$position(0)._maxScrollExtent;
              t2.toString;
              t1.set$value(0, t3 / t2);
              $async$goto = 11;
              return C._asyncAwait(t1.fling$0(), $async$_subsequentScrollToEnd$1);
            case 11:
              // returning from await.
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && C.throwLateFieldNI("_scrollController");
              t2 = $async$self.get$_chatEndScrollPosition();
              $async$self._widget.toString;
              $async$goto = 12;
              return C._asyncAwait(t1.animateTo$3$curve$duration(t2, D.Cubic_O6W, D.Duration_250000), $async$_subsequentScrollToEnd$1);
            case 12:
              // returning from await.
            case 9:
              // join
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // join
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_subsequentScrollToEnd$1, $async$completer);
    },
    _scrollToEnd$1(data) {
      if (A.Provider_of(this.get$context(0), false, type$.LoadMoreNotifier)._isLoadingNewer)
        return;
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ChatAnimatedListState__scrollToEnd_closure(this, data));
    },
    _adjustInitialScrollPosition$0() {
      this._widget.toString;
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ChatAnimatedListState__adjustInitialScrollPosition_closure(this));
    },
    _handleScrollToBottom$0() {
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ChatAnimatedListState__handleScrollToBottom_closure(this));
    },
    _handleToggleScrollToBottom$0() {
      var t1, t2, _this = this;
      if (!_this._isScrollingToBottom) {
        t1 = _this._scrollToBottomShowTimer;
        if (t1 != null)
          t1.cancel$0(0);
        _this._widget.toString;
        t1 = _this.get$_chatEndScrollPosition();
        t2 = _this.___ChatAnimatedListState__scrollController_F;
        t2 === $ && C.throwLateFieldNI("_scrollController");
        t2 = t2.get$position(0)._pixels;
        t2.toString;
        _this._widget.toString;
        if (t1 - t2 > 0)
          _this._scrollToBottomShowTimer = C.Timer_Timer(D.Duration_250000, new A._ChatAnimatedListState__handleToggleScrollToBottom_closure(_this));
        else {
          t1 = _this.___ChatAnimatedListState__scrollToBottomController_F;
          t1 === $ && C.throwLateFieldNI("_scrollToBottomController");
          t2 = t1.__AnimationController__status_A;
          t2 === $ && C.throwLateFieldNI("_status");
          if (t2 === D.AnimationStatus_3 || t2 === D.AnimationStatus_1)
            t1.reverse$0(0);
        }
      }
    },
    _handlePagination$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, t1;
      var $async$_handlePagination$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && C.throwLateFieldNI("_scrollController");
              t2 = true;
              if (t1._positions.length !== 0)
                if ($async$self._framework$_element != null) {
                  t2 = $async$self.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A;
                  t2 === $ && C.throwLateFieldNI("_needsInitialScrollPositionAdjustment");
                }
              if (t2) {
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = t1.get$position(0)._maxScrollExtent;
              t2.toString;
              if (t2 !== 0) {
                t1.get$position(0)._pixels.toString;
                t1.get$position(0)._maxScrollExtent.toString;
              }
              $async$self._widget.toString;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_handlePagination$0, $async$completer);
    },
    _chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset(messageId, alignment, curve, duration, offset) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, index, t1;
      var $async$_chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.___ChatAnimatedListState__oldList_A;
              t1 === $ && C.throwLateFieldNI("_oldList");
              index = D.JSArray_methods.indexWhere$1(t1, new A._ChatAnimatedListState__scrollToMessageId_closure(messageId));
              if (index === -1) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._scrollToIndex$5$alignment$curve$duration$offset(index, alignment, curve, duration, offset);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset, $async$completer);
    },
    _chat_animated_list$_scrollToMessageId$1(messageId) {
      return this._chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset(messageId, 0, D.Cubic_O6W, D.Duration_250000, 0);
    },
    _chat_animated_list$_scrollToMessageId$2$duration(messageId, duration) {
      return this._chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset(messageId, 0, D.Cubic_O6W, duration, 0);
    },
    _chat_animated_list$_scrollToMessageId$2$curve(messageId, curve) {
      return this._chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset(messageId, 0, curve, D.Duration_250000, 0);
    },
    _scrollToIndex$5$alignment$curve$duration$offset(index, alignment, curve, duration, offset) {
      return this._scrollToIndex$body$_ChatAnimatedListState(index, alignment, curve, duration, offset);
    },
    _scrollToIndex$1(index) {
      return this._scrollToIndex$5$alignment$curve$duration$offset(index, 0, D.Cubic_O6W, D.Duration_250000, 0);
    },
    _scrollToIndex$2$duration(index, duration) {
      return this._scrollToIndex$5$alignment$curve$duration$offset(index, 0, D.Cubic_O6W, duration, 0);
    },
    _scrollToIndex$2$curve(index, curve) {
      return this._scrollToIndex$5$alignment$curve$duration$offset(index, 0, curve, D.Duration_250000, 0);
    },
    _scrollToIndex$body$_ChatAnimatedListState(index, alignment, curve, duration, offset) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, visualIndex, t1, t2, t3, t4, exception, $async$exception;
      var $async$_scrollToIndex$5$alignment$curve$duration$offset = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (index >= 0) {
                t1 = $async$self.___ChatAnimatedListState__oldList_A;
                t1 === $ && C.throwLateFieldNI("_oldList");
                t1 = index >= t1.length;
              } else
                t1 = true;
              if (t1) {
                // goto return
                $async$goto = 1;
                break;
              }
              if (C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, $async$self._listKey) == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              visualIndex = $async$self.visualPosition$1(index);
              $async$handler = 4;
              t1 = type$.nullable_double_Function_double;
              t2 = $async$self.___ChatAnimatedListState__observerController_F;
              $async$goto = duration._duration === 0 ? 7 : 9;
              break;
            case 7:
              // then
              t2 === $ && C.throwLateFieldNI("_observerController");
              $async$goto = 10;
              return C._asyncAwait(t2.innerJumpTo$8$alignment$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, C._asInt(visualIndex), false, t1._as(new A._ChatAnimatedListState__scrollToIndex_closure(offset)), null, D.EdgeInsets_0_0_0_0, B.ObserverRenderSliverType_0, null), $async$_scrollToIndex$5$alignment$curve$duration$offset);
            case 10:
              // returning from await.
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              t2 === $ && C.throwLateFieldNI("_observerController");
              t3 = C._asInt(visualIndex);
              t1 = t1._as(new A._ChatAnimatedListState__scrollToIndex_closure0(offset));
              t4 = new C._Future($.Zone__current, type$._Future_dynamic);
              t2._observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, new C._AsyncCompleter(t4, type$._AsyncCompleter_dynamic), curve, duration, t3, false, t1, null, D.EdgeInsets_0_0_0_0, B.ObserverRenderSliverType_0, null);
              $async$goto = 11;
              return C._asyncAwait(t4, $async$_scrollToIndex$5$alignment$curve$duration$offset);
            case 11:
              // returning from await.
            case 8:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$_scrollToIndex$5$alignment$curve$duration$offset, $async$completer);
    },
    _onInserted$3(position, data, animated) {
      var t1, duration, _this = this;
      if (_this._userHasScrolled && _this.get$_isAtChatEndScrollPosition())
        _this._userHasScrolled = false;
      _this._widget.toString;
      t1 = _this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && C.throwLateFieldNI("_scrollController");
      t1 = t1.get$position(0)._maxScrollExtent;
      t1.toString;
      t1 = t1 === 0;
      if (t1) {
        _this._widget.toString;
        duration = D.Duration_250000;
      } else
        duration = D.Duration_0;
      t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && C.throwLateFieldNI("_oldList");
      D.JSArray_methods.insert$2(t1, position, data);
      _this._updateOldListEmptyNotifier$0();
      t1 = _this._listKey.get$currentState();
      t1.toString;
      t1.insertItem$2$duration(_this.visualPosition$1(position), duration);
      _this._lastInsertedMessageId = data.get$id(data);
      _this._scrollToEnd$1(data);
    },
    _onRemoved$3(position, data, animated) {
      var visualIndex, t1, _this = this;
      _this._widget.toString;
      visualIndex = _this.visualPosition$1(position);
      t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && C.throwLateFieldNI("_oldList");
      D.JSArray_methods.removeAt$1(t1, position);
      _this._updateOldListEmptyNotifier$0();
      _this._listKey.get$currentState().removeItem$3$duration(0, visualIndex, new A._ChatAnimatedListState__onRemoved_closure(_this, data, position), D.Duration_250000);
    },
    visualPosition$1(indexPosition) {
      this._widget.toString;
      return indexPosition;
    },
    _onDiffUpdate$2(update, animated) {
      var _this = this;
      type$.DataDiffUpdate_Message._as(update).when$1$4$change$insert$move$remove(new A._ChatAnimatedListState__onDiffUpdate_closure(_this, true), new A._ChatAnimatedListState__onDiffUpdate_closure0(_this, true), new A._ChatAnimatedListState__onDiffUpdate_closure1(_this, true), new A._ChatAnimatedListState__onDiffUpdate_closure2(_this, true), type$.void);
    },
    _updateOldListEmptyNotifier$0() {
      var newIsEmpty,
        t1 = this.___ChatAnimatedListState__oldList_A;
      t1 === $ && C.throwLateFieldNI("_oldList");
      newIsEmpty = t1.length === 0;
      t1 = this.___ChatAnimatedListState__oldListEmptyNotifier_A;
      t1 === $ && C.throwLateFieldNI("_oldListEmptyNotifier");
      if (newIsEmpty !== t1._change_notifier$_value)
        t1.set$value(0, newIsEmpty);
    },
    _processOperationsQueue$0() {
      var t1, t2, t3, t4, t5, ops, t6, _i, op, t7, t8, newList, updates, _i0, t9, t10, duration, newIsEmpty, _this = this,
        _s8_ = "_oldList",
        _s17_ = "_scrollController",
        _s50_ = "ScrollController not attached to any scroll views.",
        _s51_ = "ScrollController attached to multiple scroll views.";
      if (_this._isProcessingOperations)
        return;
      _this._isProcessingOperations = true;
      for (t1 = _this._operationsQueue, t2 = _this._listKey, t3 = type$.List_Message, t4 = type$.Message, t5 = type$.ChatOperation; t1.length !== 0;) {
        ops = C.List_List$of(t1, true, t5);
        D.JSArray_methods.clear$0(t1);
        for (t6 = ops.length, _i = 0; _i < ops.length; ops.length === t6 || (0, C.throwConcurrentModificationError)(ops), ++_i) {
          op = ops[_i];
          switch (op.type.index) {
            case 0:
              t7 = op.index;
              if (C.assertTest(t7 != null))
                C.assertThrow("Index must be provided when inserting a message.");
              t8 = op.message;
              if (C.assertTest(t8 != null))
                C.assertThrow("Message must be provided when inserting a message.");
              t7.toString;
              t8.toString;
              _this._onInserted$3(t7, t8, true);
              break;
            case 3:
              t7 = op.index;
              if (C.assertTest(t7 != null))
                C.assertThrow("Index must be provided when removing a message.");
              t8 = op.message;
              if (C.assertTest(t8 != null))
                C.assertThrow("Message must be provided when removing a message.");
              t7.toString;
              t8.toString;
              _this._onRemoved$3(t7, t8, true);
              break;
            case 4:
              newList = op.messages;
              if (newList == null)
                newList = B.List_empty20;
              t7 = _this.___ChatAnimatedListState__oldList_A;
              t7 === $ && C.throwLateFieldNI(_s8_);
              updates = A.calculateDiff(A.MessageListDiff$(t7, newList), true, t4).getUpdatesWithData$0();
              for (t7 = updates.length, _i0 = 0; _i0 < updates.length; updates.length === t7 || (0, C.throwConcurrentModificationError)(updates), ++_i0)
                _this._onDiffUpdate$2(updates[_i0], true);
              break;
            case 1:
              t7 = op.index;
              if (C.assertTest(t7 != null))
                C.assertThrow("Index must be provided when inserting all messages.");
              t8 = op.messages;
              if (C.assertTest(t8 != null && t8.length !== 0))
                C.assertThrow("Messages must be provided and be non-empty when inserting all.");
              t7.toString;
              t8.toString;
              t3._as(t8);
              if (_this._userHasScrolled) {
                _this._widget.toString;
                t9 = _this.___ChatAnimatedListState__scrollController_F;
                t9 === $ && C.throwLateFieldNI(_s17_);
                t10 = t9._positions;
                if (C.assertTest(t10.length !== 0))
                  C.assertThrow(_s50_);
                if (C.assertTest(t10.length === 1))
                  C.assertThrow(_s51_);
                t10 = D.JSArray_methods.get$single(t10)._pixels;
                t10.toString;
                _this._widget.toString;
                t9 = t9._positions;
                if (C.assertTest(t9.length !== 0))
                  C.assertThrow(_s50_);
                if (C.assertTest(t9.length === 1))
                  C.assertThrow(_s51_);
                t9 = D.JSArray_methods.get$single(t9)._maxScrollExtent;
                t9.toString;
                t9 = t10 >= t9;
              } else
                t9 = false;
              if (t9)
                _this._userHasScrolled = false;
              _this._widget.toString;
              t9 = _this.___ChatAnimatedListState__scrollController_F;
              t9 === $ && C.throwLateFieldNI(_s17_);
              t9 = t9._positions;
              if (C.assertTest(t9.length !== 0))
                C.assertThrow(_s50_);
              if (C.assertTest(t9.length === 1))
                C.assertThrow(_s51_);
              t9 = D.JSArray_methods.get$single(t9)._maxScrollExtent;
              t9.toString;
              t9 = t9 === 0;
              if (t9) {
                _this._widget.toString;
                duration = D.Duration_250000;
              } else
                duration = D.Duration_0;
              t9 = _this.___ChatAnimatedListState__oldList_A;
              t9 === $ && C.throwLateFieldNI(_s8_);
              D.JSArray_methods.insertAll$2(t9, t7, t8);
              newIsEmpty = _this.___ChatAnimatedListState__oldList_A.length === 0;
              t9 = _this.___ChatAnimatedListState__oldListEmptyNotifier_A;
              t9 === $ && C.throwLateFieldNI("_oldListEmptyNotifier");
              if (newIsEmpty !== t9._change_notifier$_value)
                t9.set$value(0, newIsEmpty);
              _this._widget.toString;
              t2.get$currentState().insertAllItems$3$duration(t7, t8.length, duration);
              _this._lastInsertedMessageId = J.get$id$z(D.JSArray_methods.get$last(t8));
              _this._scrollToEnd$1(D.JSArray_methods.get$last(t8));
              break;
            case 2:
              t7 = op.index;
              if (C.assertTest(t7 != null))
                C.assertThrow("Index must be provided when updating a message.");
              t8 = _this.___ChatAnimatedListState__oldList_A;
              t8 === $ && C.throwLateFieldNI(_s8_);
              t7.toString;
              t9 = op.message;
              t9.toString;
              D.JSArray_methods.$indexSet(t8, t7, t9);
              break;
          }
        }
      }
      _this._isProcessingOperations = false;
    },
    set$___ChatAnimatedListState__oldList_A(___ChatAnimatedListState__oldList_A) {
      this.___ChatAnimatedListState__oldList_A = type$.List_Message._as(___ChatAnimatedListState__oldList_A);
    },
    set$___ChatAnimatedListState__oldListEmptyNotifier_A(___ChatAnimatedListState__oldListEmptyNotifier_A) {
      this.___ChatAnimatedListState__oldListEmptyNotifier_A = type$.ValueNotifier_bool._as(___ChatAnimatedListState__oldListEmptyNotifier_A);
    },
    set$___ChatAnimatedListState__operationsSubscription_F(___ChatAnimatedListState__operationsSubscription_F) {
      this.___ChatAnimatedListState__operationsSubscription_F = type$.StreamSubscription_ChatOperation._as(___ChatAnimatedListState__operationsSubscription_F);
    },
    set$___ChatAnimatedListState__scrollToBottomAnimation_F(___ChatAnimatedListState__scrollToBottomAnimation_F) {
      this.___ChatAnimatedListState__scrollToBottomAnimation_F = type$.Animation_double._as(___ChatAnimatedListState__scrollToBottomAnimation_F);
    },
    $isTickerProvider: 1
  };
  A.__ChatAnimatedListState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__ChatAnimatedListState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.SliverSpacing.prototype = {
    createState$0() {
      return new A._SliverSpacingState(null, 0, 0, false, D._StateLifecycle_0);
    }
  };
  A._SliverSpacingState.prototype = {
    build$1(context) {
      C.debugCheckHasMediaQuery(context);
      return new A.Consumer(new A._SliverSpacingState_build_closure(this, C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data.padding.bottom), null, null, type$.Consumer_ComposerHeightNotifier);
    }
  };
  A.__SliverSpacingState_State_WidgetsBindingObserver.prototype = {};
  A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin.prototype = {
    initState$0() {
      this.super$State$initState();
      D.JSArray_methods.add$1(C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__observers, this);
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      if (!_this.KeyboardMixin__initialized) {
        t1 = _this.get$context(0);
        C.debugCheckHasMediaQuery(t1);
        _this.KeyboardMixin__initialSafeArea = C.InheritedModel_inheritFrom(t1, null, type$.MediaQuery).data.padding.bottom;
        _this.KeyboardMixin__initialized = true;
      }
    },
    dispose$0() {
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).removeObserver$1(this);
      var t1 = this.KeyboardMixin__keyboardDebounceTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this.super$State$dispose();
    },
    didChangeMetrics$0() {
      var keyboardHeight, t1, t2, _this = this;
      _this.super$WidgetsBindingObserver$didChangeMetrics();
      if (_this._framework$_element == null)
        return;
      keyboardHeight = C.View_of(_this.get$context(0))._viewInsets.bottom;
      t1 = _this.get$context(0);
      C.debugCheckHasMediaQuery(t1);
      t1 = C.InheritedModel_inheritFrom(t1, null, type$.MediaQuery).data;
      if (keyboardHeight !== _this.KeyboardMixin__previousKeyboardHeight) {
        _this.KeyboardMixin__previousKeyboardHeight = keyboardHeight;
        t2 = _this.KeyboardMixin__keyboardDebounceTimer;
        if (t2 != null)
          t2.cancel$0(0);
        _this.KeyboardMixin__keyboardDebounceTimer = C.Timer_Timer(D.Duration_100000, new A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure(_this, keyboardHeight, t1.devicePixelRatio));
      }
    }
  };
  A.ChatMessage.prototype = {
    build$1(context) {
      var messageWidget, _this = this, _null = null,
        onMessageTap = A.Provider_of(context, false, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_TapUpDetails_and_index_int),
        onMessageDoubleTap = A.Provider_of(context, false, type$.nullable_void_Function_2_BuildContext_and_Message_$named_index_int),
        onMessageLongPress = A.Provider_of(context, false, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_LongPressStartDetails_and_index_int),
        isSentByMe = J.$eq$(A.Provider_of(context, false, type$.String), _this.message.get$authorId()),
        curvedAnimation = C.CurvedAnimation$(D.Cubic_O6W, _this.animation, _null),
        resolvedPadding = _this._resolveDefaultPadding$1(context),
        t1 = type$.JSArray_Widget,
        t2 = C._setArrayType([], t1),
        t3 = isSentByMe ? D.Alignment_1_0 : D.Alignment_m1_0,
        t4 = isSentByMe ? D.AlignmentDirectional_1_0 : D.AlignmentDirectional_m1_0,
        t5 = isSentByMe ? D.CrossAxisAlignment_1 : D.CrossAxisAlignment_0,
        t6 = C._setArrayType([], t1);
      t1 = C._setArrayType([], t1);
      t1.push(new C.Flexible(1, D.FlexFit_1, _this.child, _null));
      t6.push(C.Row$(t1, D.CrossAxisAlignment_1, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1));
      t2.push(C.GestureDetector$(_null, new C.FadeTransition(curvedAnimation, false, C.SizeTransition$(0, C.ScaleTransition$(t3, C.Align$(t4, C.Column$(t6, t5, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), _null, _null, _null), curvedAnimation), curvedAnimation), _null), D.DragStartBehavior_1, false, _null, new A.ChatMessage_build_closure(_this, onMessageDoubleTap, context), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.ChatMessage_build_closure0(_this, onMessageLongPress, context), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.ChatMessage_build_closure1(_this, onMessageTap, context), _null, _null, _null, _null, _null));
      messageWidget = C.Column$(t2, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1);
      if (!resolvedPadding.$eq(0, D.EdgeInsets_0_0_0_0)) {
        t1 = C.AnimatedPadding$(messageWidget, D.Cubic_O6W, D.Duration_250000, resolvedPadding);
        return t1;
      }
      return messageWidget;
    },
    _resolveDefaultPadding$1(context) {
      var t1;
      if (this.index === 0)
        return new C.EdgeInsets(8, 0, 8, 0);
      t1 = this.groupStatus;
      if ((t1 == null ? null : t1.isFirst) === false || this.isRemoved === true)
        t1 = new C.EdgeInsets(8, 2, 8, 0);
      else
        t1 = new C.EdgeInsets(8, 12, 8, 0);
      return t1;
    }
  };
  A.ChatMessageInternal.prototype = {
    createState$0() {
      return new A._ChatMessageInternalState(D._StateLifecycle_0);
    }
  };
  A._ChatMessageInternalState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      _this.___ChatMessageInternalState__updatedMessage_A = t1.message;
      if (t1.isRemoved === true)
        _this.set$___ChatMessageInternalState__operationsSubscription_A(null);
      else {
        t1 = A.Provider_of(_this.get$context(0), false, type$.ChatController)._operationController;
        _this.set$___ChatMessageInternalState__operationsSubscription_A(type$.nullable_StreamSubscription_ChatOperation._as(new C._BroadcastStream(t1, C._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(new A._ChatMessageInternalState_initState_closure(_this))));
      }
    },
    dispose$0() {
      var t1 = this.___ChatMessageInternalState__operationsSubscription_A;
      t1 === $ && C.throwLateFieldNI("_operationsSubscription");
      if (t1 != null)
        t1.cancel$0(0);
      this.super$State$dispose();
    },
    build$1(context) {
      var isSentByMe, groupStatus, child, t3, t4, _this = this,
        builders = A.Provider_of(context, false, type$.Builders),
        t1 = A.Provider_of(context, false, type$.String),
        t2 = _this.___ChatMessageInternalState__updatedMessage_A;
      t2 === $ && C.throwLateFieldNI("_updatedMessage");
      isSentByMe = J.$eq$(t1, t2.get$authorId());
      groupStatus = _this._resolveGroupStatus$1(context);
      child = _this._buildMessage$6$groupStatus$isSentByMe(context, builders, _this.___ChatMessageInternalState__updatedMessage_A, _this._widget.index, groupStatus, isSentByMe);
      t1 = _this.___ChatMessageInternalState__updatedMessage_A;
      t2 = _this._widget;
      t3 = t2.index;
      t4 = t2.animation;
      t2 = t2.isRemoved;
      return new A.ChatMessage(t1, t3, t4, child, t2, groupStatus, null);
    },
    _resolveGroupStatus$1(context) {
      var chatController, messages, index, currentMessage, nextMessage, previousMessage, now, currentMessageDate, nextMessageDate, previousMessageDate, isGroupedWithNext, isGroupedWithPrevious, t1, t2, nextMessage0, previousMessage0, currentMessageDate0, nextMessageDate0, previousMessageDate0, isGroupedWithNext0, isGroupedWithPrevious0, exception, _this = this, _null = null;
      try {
        chatController = A.Provider_of(context, false, type$.ChatController);
        messages = C.List_List$unmodifiable(chatController._messages, type$.Message);
        index = _this._widget.index;
        t1 = _this.___ChatMessageInternalState__updatedMessage_A;
        t1 === $ && C.throwLateFieldNI("_updatedMessage");
        currentMessage = t1;
        t1 = index;
        t2 = J.get$length$asx(messages);
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < t2 - 1) {
          t1 = index;
          if (typeof t1 !== "number")
            return t1.$add();
          nextMessage0 = J.$index$asx(messages, t1 + 1);
        } else
          nextMessage0 = _null;
        nextMessage = nextMessage0;
        t1 = index;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          t1 = index;
          if (typeof t1 !== "number")
            return t1.$sub();
          previousMessage0 = J.$index$asx(messages, t1 - 1);
        } else
          previousMessage0 = _null;
        previousMessage = previousMessage0;
        now = new C.DateTime(Date.now(), 0, false);
        currentMessageDate0 = currentMessage.get$resolvedTime();
        currentMessageDate = currentMessageDate0 == null ? now : currentMessageDate0;
        t1 = nextMessage;
        nextMessageDate0 = t1 == null ? _null : t1.get$resolvedTime();
        nextMessageDate = nextMessageDate0 == null ? now : nextMessageDate0;
        t1 = previousMessage;
        previousMessageDate0 = t1 == null ? _null : t1.get$resolvedTime();
        previousMessageDate = previousMessageDate0 == null ? now : previousMessageDate0;
        isGroupedWithNext0 = false;
        if (nextMessage != null)
          if (nextMessage.get$authorId() === currentMessage.get$authorId()) {
            t1 = _this._widget;
            t2 = t1.messagesGroupingMode;
            if (t2 == null)
              t2 = B.MessagesGroupingMode_0;
            t1 = t1.messageGroupingTimeoutInSeconds;
            if (t1 == null)
              t1 = 300;
            t1 = A._shouldGroupMessages(currentMessageDate, nextMessageDate, t2, t1);
            isGroupedWithNext0 = t1;
          }
        isGroupedWithNext = isGroupedWithNext0;
        isGroupedWithPrevious0 = false;
        if (previousMessage != null)
          if (previousMessage.get$authorId() === currentMessage.get$authorId()) {
            t1 = _this._widget;
            t2 = t1.messagesGroupingMode;
            if (t2 == null)
              t2 = B.MessagesGroupingMode_0;
            t1 = t1.messageGroupingTimeoutInSeconds;
            if (t1 == null)
              t1 = 300;
            t1 = A._shouldGroupMessages(previousMessageDate, currentMessageDate, t2, t1);
            isGroupedWithPrevious0 = t1;
          }
        isGroupedWithPrevious = isGroupedWithPrevious0;
        if (!C.boolConversionCheck(isGroupedWithNext) && !C.boolConversionCheck(isGroupedWithPrevious))
          return _null;
        t1 = C.boolConversionCheck(isGroupedWithPrevious);
        C.boolConversionCheck(isGroupedWithNext);
        if (C.boolConversionCheck(isGroupedWithNext))
          C.boolConversionCheck(isGroupedWithPrevious);
        return new A.MessageGroupStatus(!t1);
      } catch (exception) {
        return _null;
      }
    },
    _buildMessage$6$groupStatus$isSentByMe(context, builders, message, index, groupStatus, isSentByMe) {
      var t1, result, _null = null;
      if (message instanceof C.TextMessage) {
        t1 = builders.textMessageBuilder;
        t1 = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return t1 == null ? new A.SimpleTextMessage(message, _null) : t1;
      }
      if (message instanceof A.TextStreamMessage) {
        t1 = builders.textStreamMessageBuilder;
        t1 = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return t1 == null ? D.SizedBox_0_0_null_null : t1;
      }
      if (message instanceof C.ImageMessage) {
        t1 = builders.imageMessageBuilder;
        result = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        if (result == null)
          result = D.SizedBox_0_0_null_null;
        if (C.assertTest(!(result instanceof C.SizedBox && result.width === 0 && result.height === 0)))
          C.assertThrow("You are trying to display an image message but you have not provided an imageMessageBuilder. Use builders parameter of Chat widget to provide an image message widget. If you want to use default image message widget, install flyer_chat_image_message package and use FlyerChatImageMessage widget.");
        return result;
      }
      if (message instanceof C.CustomMessage) {
        t1 = builders.customMessageBuilder;
        t1 = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return t1 == null ? D.SizedBox_0_0_null_null : t1;
      }
    },
    set$___ChatMessageInternalState__operationsSubscription_A(___ChatMessageInternalState__operationsSubscription_A) {
      this.___ChatMessageInternalState__operationsSubscription_A = type$.nullable_StreamSubscription_ChatOperation._as(___ChatMessageInternalState__operationsSubscription_A);
    }
  };
  A.Composer.prototype = {
    createState$0() {
      return new A._ComposerState(new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), D._StateLifecycle_0);
    }
  };
  A._ComposerState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this, _null = null;
      _this.super$State$initState();
      _this._widget.toString;
      t1 = C.TextEditingController$(_null);
      _this.___ComposerState__textController_F !== $ && C.throwLateFieldAI("_textController");
      _this.___ComposerState__textController_F = t1;
      _this._widget.toString;
      t2 = C.FocusNode$(true, _null, true, true, _null, _null, false);
      _this.___ComposerState__focusNode_F !== $ && C.throwLateFieldAI("_focusNode");
      _this.___ComposerState__focusNode_F = t2;
      t3 = type$.ValueNotifier_bool._as(C.ValueNotifier$(D.JSString_methods.trim$0(t1._change_notifier$_value.text).length !== 0, type$.bool));
      _this.___ComposerState__hasTextNotifier_F !== $ && C.throwLateFieldAI("_hasTextNotifier");
      _this.set$___ComposerState__hasTextNotifier_F(t3);
      t2.set$onKeyEvent(_this.get$_handleKeyEvent());
      t1.addListener$1(0, _this.get$_handleTextControllerChange());
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ComposerState_initState_closure(_this));
    },
    _handleKeyEvent$2(node, $event) {
      var t1, t2;
      type$.FocusNode._as(node);
      type$.KeyEvent._as($event);
      t1 = false;
      if ($event instanceof C.KeyDownEvent)
        if ($event.logicalKey.$eq(0, D.LogicalKeyboardKey_4294967309)) {
          t1 = C.BindingBase_checkInstance($.ServicesBinding__instance, type$.ServicesBinding).ServicesBinding___ServicesBinding__keyboard_F;
          t1 === $ && C.throwLateFieldNI("_keyboard");
          t1 = t1._pressedKeys;
          t2 = C._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>");
          t1 = new C.LinkedHashMapValuesIterable(t1, t2).contains$1(0, D.LogicalKeyboardKey_8589934850) || new C.LinkedHashMapValuesIterable(t1, t2).contains$1(0, D.LogicalKeyboardKey_8589934851);
        }
      if (t1) {
        t1 = this.___ComposerState__textController_F;
        t1 === $ && C.throwLateFieldNI("_textController");
        this._handleSubmitted$1(t1._change_notifier$_value.text);
        return D.KeyEventResult_0;
      }
      return D.KeyEventResult_1;
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.Composer._as(oldWidget));
      this._widget.toString;
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ComposerState_didUpdateWidget_closure(this));
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___ComposerState__hasTextNotifier_F;
      t1 === $ && C.throwLateFieldNI("_hasTextNotifier");
      t1.dispose$0();
      t1 = _this.___ComposerState__textController_F;
      t1 === $ && C.throwLateFieldNI("_textController");
      t1.removeListener$1(0, _this.get$_handleTextControllerChange());
      _this._widget.toString;
      t1.dispose$0();
      _this._widget.toString;
      t1 = _this.___ComposerState__focusNode_F;
      t1 === $ && C.throwLateFieldNI("_focusNode");
      t1.dispose$0();
      _this.super$State$dispose();
    },
    build$1(context) {
      var bottomSafeArea, onAttachmentTap, theme, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, $content, _this = this, _null = null;
      _this._widget.toString;
      C.debugCheckHasMediaQuery(context);
      bottomSafeArea = C.InheritedModel_inheritFrom(context, _null, type$.MediaQuery).data.padding.bottom;
      onAttachmentTap = A.Provider_of(context, false, type$.nullable_void_Function);
      theme = A.SelectContext_select(context, new A._ComposerState_build_closure(), type$.ChatTheme, type$.Record_5_TextStyle_bodyMedium_and_Color_onSurface_and_Color_primary_and_Color_surfaceContainerHigh_and_Color_surfaceContainerLow);
      _this._widget.toString;
      t1 = theme._values[4].withValues$1$alpha(0.8);
      t2 = type$.JSArray_Widget;
      t3 = C._setArrayType([], t2);
      t4 = _this._widget.topWidget;
      if (t4 != null)
        t3.push(t4);
      _this._widget.toString;
      t4 = D.EdgeInsets_8_8_8_8.add$1(0, new C.EdgeInsets(0, 0, 0, bottomSafeArea));
      _this._widget.toString;
      if (onAttachmentTap != null) {
        t5 = theme._values[1].withValues$1$alpha(0.5);
        t5 = C.IconButton$(t5, _null, _null, B.Icon_PJ0, _null, _null, onAttachmentTap, _null, _null, _null, _null);
      } else
        t5 = D.SizedBox_0_0_null_null;
      t6 = _this._widget;
      t6.toString;
      t7 = _this.___ComposerState__textController_F;
      t7 === $ && C.throwLateFieldNI("_textController");
      t8 = theme._values;
      t9 = t8[0];
      t10 = t8[1].withValues$1$alpha(0.5);
      t9 = t9.copyWith$1$color(t10);
      _this._widget.toString;
      t10 = t8[3].withValues$1$alpha(0.8);
      t6 = C.InputDecoration$(_null, B.OutlineInputBorder_Yew, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, t10, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t9, t6.hintText, _null, D.Color_Edl, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t9 = t8[0];
      _this._widget.toString;
      t8 = t8[1];
      t8 = t9.copyWith$1$color(t8);
      _this._widget.toString;
      t9 = _this.___ComposerState__focusNode_F;
      t9 === $ && C.throwLateFieldNI("_focusNode");
      t8 = C.Expanded$(C.TextField$(true, D.List_empty, false, _null, true, _null, C.text_field0_TextField__defaultContextMenuBuilder$closure(), t7, _null, _null, t6, D.DragStartBehavior_1, true, _null, true, _null, false, t9, D.Type_EditableText_O5i, _null, _null, _null, _null, _null, _null, _null, 3, 1, _null, false, "\u2022", _null, new A._ComposerState_build_closure0(_this), _null, _this.get$_handleSubmitted(), _null, false, _null, false, _null, _null, D.EdgeInsets_20_20_20_20, _null, _null, _null, _null, _null, _null, _null, t8, true, D.TextAlign_4, _null, B.TextCapitalization_10, _null, D.TextInputAction_12, _null), 1, _null);
      _this._widget.toString;
      t2 = C._setArrayType([t5, new C.SizedBox(8, _null, _null, _null), t8, new C.SizedBox(8, _null, _null, _null)], t2);
      _this._widget.toString;
      t5 = _this.___ComposerState__hasTextNotifier_F;
      t5 === $ && C.throwLateFieldNI("_hasTextNotifier");
      t2.push(new C.ValueListenableBuilder(t5, new A._ComposerState_build_closure1(_this, theme), _null, _null, type$.ValueListenableBuilder_bool));
      t3.push(new C.Padding(t4, C.Row$(t2, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null));
      $content = C.Container$(_null, C.Column$(t3, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, t1, _null, _null, _null, _null, _this._composer$_key, _null, _null, _null, _null, _null);
      _this._widget.toString;
      return C.Positioned$(0, C.ClipRect$(C.BackdropFilter$($content, $.$get$_renderer().createBlurImageFilter$3$sigmaX$sigmaY$tileMode(20, 20, _null)), D.Clip_1), _null, _null, 0, 0, _null, _null);
    },
    _measure$0() {
      var t1, t2, t3, _this = this;
      if (_this._framework$_element == null)
        return;
      t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this._composer$_key);
      t1 = t1 == null ? null : t1.findRenderObject$0();
      type$.nullable_RenderBox._as(t1);
      if (t1 != null) {
        t1 = t1.get$size(0);
        t2 = _this.get$context(0);
        C.debugCheckHasMediaQuery(t2);
        t2 = C.InheritedModel_inheritFrom(t2, null, type$.MediaQuery).data;
        t3 = A.Provider_of(_this.get$context(0), false, type$.ComposerHeightNotifier);
        _this._widget.toString;
        t1 = t1._dy - t2.padding.bottom;
        if (t3._composer_height_notifier$_height !== t1) {
          t3._composer_height_notifier$_height = t1;
          t3.notifyListeners$0();
        }
      }
    },
    _handleTextControllerChange$0() {
      var t2,
        t1 = this.___ComposerState__hasTextNotifier_F;
      t1 === $ && C.throwLateFieldNI("_hasTextNotifier");
      t2 = this.___ComposerState__textController_F;
      t2 === $ && C.throwLateFieldNI("_textController");
      t1.set$value(0, D.JSString_methods.trim$0(t2._change_notifier$_value.text).length !== 0);
    },
    _handleSubmitted$1(text) {
      var t1, t2, _this = this;
      _this._widget.toString;
      t1 = D.JSString_methods.trim$0(text);
      if (t1.length === 0)
        return;
      t2 = A.Provider_of(_this.get$context(0), false, type$.nullable_void_Function_String);
      if (t2 != null)
        t2.call$1(t1);
      _this._widget.toString;
      t1 = _this.___ComposerState__textController_F;
      t1 === $ && C.throwLateFieldNI("_textController");
      t1.set$value(0, D.TextEditingValue_2Hq);
    },
    set$___ComposerState__hasTextNotifier_F(___ComposerState__hasTextNotifier_F) {
      this.___ComposerState__hasTextNotifier_F = type$.ValueNotifier_bool._as(___ComposerState__hasTextNotifier_F);
    }
  };
  A.EmptyChatList.prototype = {
    createState$0() {
      return new A._EmptyChatListState(null, null, D._StateLifecycle_0);
    }
  };
  A._EmptyChatListState.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      _this._widget.toString;
      t1 = C.AnimationController$(_null, D.Duration_250000, _null, _null, _this);
      _this.___EmptyChatListState__controller_A = t1;
      _this._widget.toString;
      _this.set$___EmptyChatListState__opacityAnimation_A(type$.Animation_double._as(C.CurvedAnimation$(D.Cubic_O6W, t1, _null)));
      _this._widget.toString;
      C.Future_Future$delayed(D.Duration_50000, new A._EmptyChatListState_initState_closure(_this), type$.Null);
    },
    dispose$0() {
      var t1 = this.___EmptyChatListState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.dispose$0();
      this.super$__EmptyChatListState_State_SingleTickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var t2, _null = null,
        theme = A.SelectContext_select(context, new A._EmptyChatListState_build_closure(), type$.ChatTheme, type$.Record_2_TextStyle_bodyLarge_and_Color_onSurface),
        t1 = this.___EmptyChatListState__opacityAnimation_A;
      t1 === $ && C.throwLateFieldNI("_opacityAnimation");
      this._widget.toString;
      t2 = theme._0.copyWith$1$color(theme._1);
      return new C.FadeTransition(t1, false, new C.Padding(B.EdgeInsets_0_0_0_120, C.Center$(C.Text$("No messages yet", _null, _null, _null, _null, _null, _null, _null, t2, _null, _null, _null, _null, _null), _null, _null, _null), _null), _null);
    },
    set$___EmptyChatListState__opacityAnimation_A(___EmptyChatListState__opacityAnimation_A) {
      this.___EmptyChatListState__opacityAnimation_A = type$.Animation_double._as(___EmptyChatListState__opacityAnimation_A);
    },
    $isTickerProvider: 1
  };
  A.__EmptyChatListState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__EmptyChatListState_State_SingleTickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    },
    debugFillProperties$1(properties) {
      var t1, t2, _0_1, _0_3, t3, _0_5, t4, t5, _0_7, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.SingleTickerProviderStateMixin__ticker;
      t2 = t1 == null;
      _0_1 = t2 ? _null : t1._ticker$_future != null;
      t2 = t2 ? _null : t1._muted;
      $label0$0: {
        _0_3 = true === _0_1;
        t3 = _0_3;
        C.boolConversionCheck(t3);
        if (t3) {
          _0_5 = true === t2;
          t4 = _0_5;
        } else {
          _0_5 = _null;
          t4 = false;
        }
        t5 = _null;
        if (t4) {
          t2 = "active but muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_3)) {
          t2 = "active";
          break $label0$0;
        }
        _0_7 = false === _0_1;
        t4 = _0_7;
        if (C.boolConversionCheck(t4))
          t2 = C.boolConversionCheck(t3 ? _0_5 : true === t2);
        else
          t2 = false;
        if (t2) {
          t2 = "inactive and muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_7)) {
          t2 = "inactive";
          break $label0$0;
        }
        if (_0_1 == null) {
          t2 = t5;
          break $label0$0;
        }
        t2 = t5;
      }
      properties.add$1(0, C.DiagnosticsProperty$("ticker", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, false, D.DiagnosticsTreeStyle_8, _null, type$.Ticker));
    }
  };
  A.ScrollToBottom.prototype = {
    build$1(context) {
      C.debugCheckHasMediaQuery(context);
      return new A.Consumer(new A.ScrollToBottom_build_closure(this, C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data.padding.bottom, A.SelectContext_select(context, new A.ScrollToBottom_build_closure0(), type$.ChatTheme, type$.Record_2_Color_onSurface_and_Color_surfaceContainer)), null, null, type$.Consumer_ComposerHeightNotifier);
    }
  };
  A.SimpleTextMessage.prototype = {
    get$_isOnlyEmoji() {
      var t1 = this.message.get$metadata(0);
      return J.$eq$(t1 == null ? null : J.$index$asx(t1, "isOnlyEmoji"), true);
    },
    build$1(context) {
      var textContent, textDirection, t4, t5, _this = this, _null = null,
        theme = A.SelectContext_select(context, new A.SimpleTextMessage_build_closure(), type$.ChatTheme, type$.Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer),
        t1 = _this.message,
        isSentByMe = J.$eq$(A.Provider_of(context, false, type$.String), t1.authorId),
        backgroundColor = _this._resolveBackgroundColor$2(isSentByMe, theme),
        textStyle = _this._resolveTextStyle$2(isSentByMe, theme),
        timeStyle = _this._resolveTimeStyle$2(isSentByMe, theme),
        t2 = t1.get$resolvedTime(),
        t3 = t1.get$resolvedStatus(),
        timeAndStatus = new A.TimeAndStatus(t2, t3, true, isSentByMe, timeStyle, _null);
      if (_this.get$_isOnlyEmoji())
        t2 = textStyle.copyWith$1$fontSize(48);
      else
        t2 = textStyle;
      textContent = C.Text$(t1.text, _null, _null, _null, _null, _null, _null, _null, t2, _null, _null, _null, _null, _null);
      A.Provider_of(context, false, type$.Builders).toString;
      t1 = theme._values[5];
      t2 = _this.get$_isOnlyEmoji() ? _null : C.BoxDecoration$(_null, _null, _null, _null, backgroundColor, _null, _null, D.BoxShape_0);
      if (_this.get$_isOnlyEmoji()) {
        t3 = B.EdgeInsets_16_10_16_10.get$horizontal();
        t3 /= 2;
        t3 = new C.EdgeInsets(t3, 0, t3, 0);
      } else
        t3 = B.EdgeInsets_16_10_16_10;
      textDirection = C.Directionality_of(context);
      t4 = type$.JSArray_Widget;
      t5 = C._setArrayType([], t4);
      t5.push(textContent);
      t5.push(C.Opacity$(timeAndStatus, 0));
      t5 = C._setArrayType([C.Column$(t5, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1)], t4);
      if (timeAndStatus != null)
        t5.push(C.Positioned_Positioned$directional(0, timeAndStatus, 0, _null, _null, textDirection, _null, _null));
      return C.ClipRRect$(t1, C.Container$(_null, C.Column$(C._setArrayType([C.Container$(_null, new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, t5, _null), D.Clip_0, _null, _null, _null, _null, _null, _null, _null, t3, _null, _null, _null)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, _null, _null, t2, _null, _null, _null, _null, _null, _null, _null, _null));
    },
    _resolveBackgroundColor$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        t1 = theme._values[4];
        return t1;
      }
      t1 = theme._values[6];
      return t1;
    },
    _resolveTextStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        t1 = theme._values;
        t1 = t1[0].copyWith$1$color(t1[2]);
        return t1;
      }
      t1 = theme._values;
      t1 = t1[0].copyWith$1$color(t1[3]);
      return t1;
    },
    _resolveTimeStyle$2(isSentByMe, theme) {
      var t1, t2;
      if (isSentByMe) {
        t1 = theme._values;
        t2 = t1[1];
        t1 = t2.copyWith$1$color(this.get$_isOnlyEmoji() ? t1[3] : t1[2]);
        return t1;
      }
      t1 = theme._values;
      t1 = t1[1].copyWith$1$color(t1[3]);
      return t1;
    }
  };
  A.TimeAndStatus.prototype = {
    build$1(context) {
      var t3, _this = this, _null = null,
        timeFormat = A.Provider_of(context, true, type$.DateFormat),
        t1 = C._setArrayType([], type$.JSArray_Widget),
        t2 = _this.time;
      if (t2 != null)
        t1.push(C.Text$(timeFormat.format$1(t2.toLocal$0()), _null, _null, _null, _null, _null, _null, _null, _this.textStyle, _null, _null, _null, _null, _null));
      if (_this.showStatus && _this.status != null) {
        t2 = _this.status;
        t3 = _this.textStyle;
        if (t2 === D.MessageStatus_3)
          t1.push(new C.SizedBox(6, 6, E.CircularProgressIndicator$(_null, t3.color, _null, _null, _null, _null, _null, 2, _null, _null), _null));
        else {
          t2.toString;
          t2 = A.getIconForStatus(t2);
          t1.push(C.Icon$(t2, t3.color, _null, 12));
        }
      }
      return C.Row$(t1, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 2, _null, _null, D.VerticalDirection_1);
    }
  };
  A.ComposerHeightNotifier.prototype = {};
  A.KeyboardMixin.prototype = {};
  A.LoadMoreNotifier.prototype = {};
  A.MessageListDiff.prototype = {};
  A.SendButtonVisibilityMode.prototype = {
    _enumToString$0() {
      return "SendButtonVisibilityMode." + this._name;
    }
  };
  A.InputClearMode.prototype = {
    _enumToString$0() {
      return "InputClearMode." + this._name;
    }
  };
  A.AccentRenderConfig.prototype = {};
  A.FontMetrics.prototype = {};
  A.AccentNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, skew, t2, t3, accentRenderConfig, accentWidget, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t1 = childBuildResults[0];
      t1.toString;
      skew = _this.isShifty ? t1.skew : 0;
      if (!_this.isStretchy) {
        t2 = {};
        t2.accentSymbolWidget = null;
        t3 = _this.label;
        if (t3 === "\u2192")
          t2.accentSymbolWidget = A.staticSvg("vec", options, true);
        else {
          accentRenderConfig = B.Map_8zs6u.$index(0, t3);
          if (accentRenderConfig == null || accentRenderConfig.overChar == null)
            t2.accentSymbolWidget = C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          else {
            t3 = accentRenderConfig.overChar;
            t3.toString;
            t2.accentSymbolWidget = A.makeBaseSymbol(B.AtomType_0, B.Mode_1, options, _null, t3, false).widget;
          }
        }
        accentWidget = new C.LayoutBuilder(new A.AccentNode_buildWidget_closure(t2, options), _null);
      } else
        accentWidget = new C.LayoutBuilder(new A.AccentNode_buildWidget_closure0(_this, options), _null);
      return new A.BuildResult(A.VList$(1, C._setArrayType([A.VListElement$(accentWidget, new A.AccentNode_buildWidget_closure1(skew), skew, 0), A.MinDimension$(0, t1.widget, 0, new A.Measurement(options.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(options), 0)], type$.JSArray_Widget)), options, t1.italic, t1.skew, _null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options.havingCrampedStyle$0()], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["base", _this.base.toJson$0(), "label", A.unicodeLiteral(_this.label), "isStretchy", _this.isStretchy, "isShifty", _this.isShifty], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  A.AccentUnderNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var baseResult, t1, t2, t3;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      baseResult = childBuildResults[0];
      t1 = baseResult.italic;
      t2 = baseResult.skew;
      t3 = this.label === "~" ? new A.Measurement(0.12, B.Unit_16).toLpUnder$1(options) : 0;
      return new A.BuildResult(A.VList$(0, C._setArrayType([A.VListElement$(baseResult.widget, null, 0, t3), A.VListElement$(new C.LayoutBuilder(new A.AccentUnderNode_buildWidget_closure(this, options), null), new A.AccentUnderNode_buildWidget_closure0(), 0, 0)], type$.JSArray_Widget)), options, t1, t2, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options.havingCrampedStyle$0()], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["base", this.base.toJson$0(), "label", A.unicodeLiteral(this.label)], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  A.CursorNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var baselinePart, height, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      baselinePart = 1 - options.get$fontMetrics().axisHeight / 2;
      height = options.fontSize * baselinePart * options.get$sizeMultiplier();
      return new A.BuildResult(new A._BaselineDistance(height * baselinePart, C.Container$(_null, _null, D.Clip_0, options.color, _null, _null, _null, height, _null, _null, _null, _null, _null, 1.5), _null), options, 0, 0, _null);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    }
  };
  A._BaselineDistance.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._BaselineDistanceBox(this.baselineDistance, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    }
  };
  A._BaselineDistanceBox.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this.baselineDistance;
    }
  };
  A.EnclosureNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var horizontalPadding, verticalPadding, t1, t2, t3, widget, t4, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      horizontalPadding = _this.horizontalPadding.toLpUnder$1(options);
      verticalPadding = _this.verticalPadding.toLpUnder$1(options);
      if (_this.hasBorder) {
        t1 = new A.Measurement(options.get$fontMetrics().fboxrule, B.Unit_16).toLpUnder$1(options);
        t2 = _this.bordercolor;
        t1 = C.BoxDecoration$(_null, C.Border_Border$all(t2 == null ? options.color : t2, t1), _null, _null, _this.backgroundcolor, _null, _null, D.BoxShape_0);
      } else
        t1 = _null;
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t2 = type$.JSArray_Widget;
      t1 = C._setArrayType([C.Container$(_null, new C.Padding(new C.EdgeInsets(horizontalPadding, verticalPadding, horizontalPadding, verticalPadding), childBuildResults[0].widget, _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null)], t2);
      t3 = _this.notation;
      if (D.JSArray_methods.contains$1(t3, "updiagonalstrike"))
        t1.push(C.Positioned$(0, new C.LayoutBuilder(new A.EnclosureNode_buildWidget_closure(_this, options), _null), _null, _null, 0, 0, 0, _null));
      if (D.JSArray_methods.contains$1(t3, "downdiagnoalstrike"))
        t1.push(C.Positioned$(0, new C.LayoutBuilder(new A.EnclosureNode_buildWidget_closure0(_this, options), _null), _null, _null, 0, 0, 0, _null));
      widget = new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, t1, _null);
      if (D.JSArray_methods.contains$1(t3, "horizontalstrike")) {
        t1 = new A.Measurement(options.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(options);
        t3 = new A.Measurement(options.get$fontMetrics().defaultRuleThickness, B.Unit_16).toLpUnder$1(options);
        t4 = _this.bordercolor;
        if (t4 == null)
          t4 = options.color;
        widget = new A.CustomLayout(new A.HorizontalStrikeDelegate(t3, t1 / 2, t4), C._setArrayType([A.CustomLayoutId$(widget, 0, type$.int)], t2), _null, type$.CustomLayout_int);
      }
      return new A.BuildResult(widget, options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t3, t4, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "base", _this.base.toJson$0());
      t2.$indexSet(0, "hasBorder", _this.hasBorder);
      t3 = _this.bordercolor;
      if (t3 != null)
        t2.$indexSet(0, "bordercolor", t3);
      t3 = _this.backgroundcolor;
      if (t3 != null)
        t2.$indexSet(0, "backgroundcolor", t3);
      t3 = _this.notation;
      if (t3.length !== 0)
        t2.$indexSet(0, "notation", t3);
      t3 = _this.horizontalPadding;
      if (t3 !== B.Measurement_0_Unit_0) {
        t4 = B.Map_Dgfp9.$index(0, t3.unit);
        t4.toString;
        t2.$indexSet(0, "horizontalPadding", C.S(t3.value) + t4);
      }
      t3 = _this.verticalPadding;
      if (t3 !== B.Measurement_0_Unit_0) {
        t4 = B.Map_Dgfp9.$index(0, t3.unit);
        t4.toString;
        t2.$indexSet(0, "verticalPadding", C.S(t3.value) + t4);
      }
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.LinePainter.prototype = {
    paint$2(canvas, size) {
      var _this = this,
        t1 = size._dx,
        t2 = size._dy,
        t3 = $.$get$_renderer().createPaint$0();
      t3.set$strokeWidth(_this.lineWidth);
      t3.set$color(0, _this.color);
      canvas.drawLine$3(new C.Offset(_this.startRelativeX * t1, _this.startRelativeY * t2), new C.Offset(_this.endRelativeX * t1, _this.endRelativeY * t2), t3);
    },
    shouldRepaint$1(oldDelegate) {
      return this !== oldDelegate;
    }
  };
  A.HorizontalStrikeDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map_int_RenderBox._as(childrenTable);
      return this.height;
    },
    getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(childSize, childrenTable, extent, max, sizingDirection) {
      var t1;
      type$.double_Function_RenderBox_double._as(childSize);
      t1 = type$.Map_int_RenderBox._as(childrenTable).$index(0, 0);
      t1.toString;
      return childSize.call$2(t1, 1 / 0);
    },
    computeLayout$3$dry(constraints, childrenTable, dry) {
      var t2,
        t1 = type$.Map_int_RenderBox._as(childrenTable).$index(0, 0);
      t1.toString;
      if (dry)
        return t1._computeIntrinsics$2$3(D.C__DryLayout, constraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      t1.layout$2$parentUsesSize(constraints, true);
      t2 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
      t2.toString;
      this.height = t2;
      this.width = t1.get$size(0)._dx;
      return t1.get$size(0);
    },
    additionalPaint$2(context, offset) {
      var _this = this,
        t1 = context.get$canvas(context),
        t2 = offset._dx,
        t3 = offset._dy + _this.height - _this.vShift,
        t4 = _this.width,
        t5 = $.$get$_renderer().createPaint$0();
      t5.set$strokeWidth(_this.ruleThickness);
      t5.set$color(0, _this.color);
      t1.drawLine$3(new C.Offset(t2, t3), new C.Offset(t2 + t4, t3), t5);
    }
  };
  A.EquationArrayNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3, t4, t5, t6, t7, _this = this;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options);
      t2 = new A.Measurement(options.get$fontMetrics().defaultRuleThickness, B.Unit_16).toLpUnder$1(options);
      t3 = _this.addJot ? new A.Measurement(3, B.Unit_0).toLpUnder$1(options) : 0;
      t4 = new A.Measurement(12, B.Unit_0).toLpUnder$1(options);
      t5 = J.map$1$1$ax(_this.rowSpacings, new A.EquationArrayNode_buildWidget_closure(options), type$.double);
      t6 = C._arrayInstanceType(childBuildResults);
      t7 = t6._eval$1("MappedListIterable<1,Widget>");
      return new A.BuildResult(A.ShiftBaseline$(new A.EqnArray(t2, t3, t4 * _this.arrayStretch, _this.hlines, C.List_List$of(t5, false, t5.$ti._eval$1("ListIterable.E")), C.List_List$of(new C.MappedListIterable(childBuildResults, t6._eval$1("Widget(1)")._as(new A.EquationArrayNode_buildWidget_closure0()), t7), false, t7._eval$1("ListIterable.E")), null), t1, 0.5), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(this.body.length, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      return this.body;
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t4, t5, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = type$.String,
        t3 = C.LinkedHashMap_LinkedHashMap$_empty(t2, type$.nullable_Object);
      if (_this.addJot)
        t3.$indexSet(0, "addJot", true);
      t4 = _this.body;
      t5 = C._arrayInstanceType(t4);
      t3.$indexSet(0, "body", new C.MappedListIterable(t4, t5._eval$1("Map<String,Object?>(1)")._as(new A.EquationArrayNode_toJson_closure()), t5._eval$1("MappedListIterable<1,Map<String,Object?>>")));
      t4 = _this.arrayStretch;
      if (t4 !== 1)
        t3.$indexSet(0, "arrayStretch", t4);
      t3.$indexSet(0, "hlines", J.map$1$1$ax(_this.hlines, new A.EquationArrayNode_toJson_closure0(), t2));
      t3.$indexSet(0, "rowSpacings", J.map$1$1$ax(_this.rowSpacings, new A.EquationArrayNode_toJson_closure1(), t2));
      t1.addAll$1(0, t3);
      return t1;
    }
  };
  A.FracNode.prototype = {
    computeChildren$0() {
      return C._setArrayType([this.numerator, this.denominator], type$.JSArray_EquationRowNode);
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = childBuildResults.length;
      if (0 >= t1)
        return C.ioore(childBuildResults, 0);
      t2 = type$._FracPos;
      t3 = A.CustomLayoutId$(childBuildResults[0].widget, B._FracPos_0, t2);
      if (1 >= t1)
        return C.ioore(childBuildResults, 1);
      return new A.BuildResult(new A.CustomLayout(new A.FracLayoutDelegate(this.barSize, options), C._setArrayType([t3, A.CustomLayoutId$(childBuildResults[1].widget, B._FracPos_1, t2)], type$.JSArray_Widget), null, type$.CustomLayout__FracPos), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style;
      return C._setArrayType([options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_2)), options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_3))], type$.JSArray_MathOptions);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "numerator", _this.numerator.toJson$0());
      t2.$indexSet(0, "denominator", _this.denominator.toJson$0());
      t3 = _this.barSize;
      if (t3 != null)
        t2.$indexSet(0, "barSize", t3.toString$0(0));
      if (_this.continued)
        t2.$indexSet(0, "continued", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A._FracPos.prototype = {
    _enumToString$0() {
      return "_FracPos." + this._name;
    }
  };
  A.FracLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map__FracPos_RenderBox._as(childrenTable);
      return this.height;
    },
    performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, isComputingIntrinsics) {
      var t1, t2, barLength, width;
      type$.Map__FracPos_double._as(childrenWidths);
      t1 = childrenWidths.$index(0, B._FracPos_0);
      t1.toString;
      t2 = childrenWidths.$index(0, B._FracPos_1);
      t2.toString;
      barLength = Math.max(t1, t2);
      width = barLength + 2 * new A.Measurement(0.12, B.Unit_16).toLpUnder$1(this.options);
      if (!isComputingIntrinsics) {
        this.barLength = barLength;
        this.width = width;
      }
      return new A.AxisConfiguration(width, C.LinkedHashMap_LinkedHashMap$_literal([B._FracPos_0, 0.5 * (width - t1), B._FracPos_1, 0.5 * (width - t2)], type$._FracPos, type$.double), type$.AxisConfiguration__FracPos);
    },
    performHorizontalIntrinsicLayout$1$childrenWidths(childrenWidths) {
      return this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, false);
    },
    performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, isComputingIntrinsics) {
      var t2, t3, t4, t5, metrics, xi8, t6, theta, t7, u, v, a, dx, phi, psi, height, _this = this,
        t1 = type$.Map__FracPos_double;
      t1._as(childrenHeights);
      t1._as(childrenBaselines);
      t1 = childrenHeights.$index(0, B._FracPos_0);
      t1.toString;
      t2 = childrenHeights.$index(0, B._FracPos_1);
      t2.toString;
      t3 = childrenBaselines.$index(0, B._FracPos_0);
      t3.toString;
      t4 = childrenBaselines.$index(0, B._FracPos_1);
      t4.toString;
      t5 = _this.options;
      metrics = t5.get$fontMetrics();
      xi8 = new A.Measurement(metrics.defaultRuleThickness, B.Unit_16).toLpUnder$1(t5);
      t6 = _this.barSize;
      theta = t6 == null ? null : t6.toLpUnder$1(t5);
      if (theta == null)
        theta = xi8;
      t6 = t5.style.index < 2;
      if (t6)
        t7 = metrics.num1;
      else
        t7 = theta !== 0 ? metrics.num2 : metrics.num3;
      u = new A.Measurement(t7, B.Unit_16).toLpUnder$1(t5);
      v = new A.Measurement(t6 ? metrics.denom1 : metrics.denom2, B.Unit_16).toLpUnder$1(t5);
      a = new A.Measurement(metrics.axisHeight, B.Unit_16).toLpUnder$1(t5);
      dx = t1 - t3;
      if (theta === 0) {
        phi = t6 ? 7 * xi8 : 3 * xi8;
        psi = u - dx - (t4 - v);
        if (psi < phi) {
          t1 = 0.5 * (phi - psi);
          u += t1;
          v += t1;
        }
      } else {
        phi = t6 ? 3 * theta : theta;
        t1 = 0.5 * theta;
        if (u - dx - a - t1 < phi)
          u = phi + dx + a + t1;
        if (a - t1 - t4 + v < phi)
          v = phi + t4 - a + t1;
      }
      height = t3 + u;
      if (!isComputingIntrinsics) {
        _this.height = height;
        _this.theta = theta;
        _this.a = a;
      }
      return new A.AxisConfiguration(height + (t2 - t4 + v), C.LinkedHashMap_LinkedHashMap$_literal([B._FracPos_0, height - u - t3, B._FracPos_1, height + v - t4], type$._FracPos, type$.double), type$.AxisConfiguration__FracPos);
    },
    performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenBaselines, childrenHeights) {
      return this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, false);
    },
    additionalPaint$2(context, offset) {
      var paint, _this = this;
      if (_this.theta !== 0) {
        paint = $.$get$_renderer().createPaint$0();
        paint.set$color(0, _this.options.color);
        paint.set$strokeWidth(_this.theta);
        context.get$canvas(context).drawLine$3(new C.Offset(0.5 * (_this.width - _this.barLength), _this.height - _this.a).$add(0, offset), new C.Offset(0.5 * (_this.width + _this.barLength), _this.height - _this.a).$add(0, offset), paint);
      }
    }
  };
  A.FunctionNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = this.argument.overrideType;
      if (t1 == null)
        t1 = B.AtomType_0;
      t1 = A.getSpacingSize(B.AtomType_1, t1, options.style).toLpUnder$1(options);
      t2 = childBuildResults.length;
      if (0 >= t2)
        return C.ioore(childBuildResults, 0);
      t1 = A.LineElement$(false, false, childBuildResults[0].widget, _null, t1);
      if (1 >= t2)
        return C.ioore(childBuildResults, 1);
      return new A.BuildResult(A.Line$(C._setArrayType([t1, A.LineElement$(false, false, childBuildResults[1].widget, _null, 0)], type$.JSArray_Widget), _null), options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(2, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.functionName, this.argument], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_1;
    },
    get$rightType() {
      var t1 = this.argument.overrideType;
      return t1 == null ? B.AtomType_0 : t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["functionName", this.functionName.toJson$0(), "argument", this.argument.toJson$0()], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  A.LeftRightNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var numElements;
      type$.List_nullable_BuildResult._as(childBuildResults);
      numElements = 2 + this.body.length + this.middle.length;
      return new A.BuildResult(A.Line$(C.List_List$generate(numElements, new A.LeftRightNode_buildWidget_closure(this, new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options), options, numElements, childBuildResults), false, type$.LineElement), null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(this.body.length, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      return this.body;
    },
    get$leftType() {
      return B.AtomType_4;
    },
    get$rightType() {
      return B.AtomType_5;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object),
        t3 = _this.body,
        t4 = C._arrayInstanceType(t3);
      t2.$indexSet(0, "body", new C.MappedListIterable(t3, t4._eval$1("Map<String,Object?>(1)")._as(new A.LeftRightNode_toJson_closure()), t4._eval$1("MappedListIterable<1,Map<String,Object?>>")));
      t2.$indexSet(0, "leftDelim", _this.leftDelim);
      t2.$indexSet(0, "rightDelim", _this.rightDelim);
      t3 = _this.middle;
      if (t3.length !== 0)
        t2.$indexSet(0, "middle", t3);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.StackDelimiterConf.prototype = {};
  A.MatrixSeparatorStyle.prototype = {
    _enumToString$0() {
      return "MatrixSeparatorStyle." + this._name;
    }
  };
  A.MatrixColumnAlign.prototype = {
    _enumToString$0() {
      return "MatrixColumnAlign." + this._name;
    }
  };
  A.MatrixNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, _this = this;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = _this.rows;
      t2 = _this.cols;
      C.assertHelper(childBuildResults.length === t1 * t2);
      t3 = new A.Measurement(options.get$fontMetrics().axisHeight, B.Unit_16).toLpUnder$1(options);
      t4 = new A.Measurement(options.get$fontMetrics().defaultRuleThickness, B.Unit_16).toLpUnder$1(options);
      t5 = new A.Measurement(12, B.Unit_0).toLpUnder$1(options);
      t6 = type$.double;
      t7 = J.map$1$1$ax(_this.rowSpacings, new A.MatrixNode_buildWidget_closure(options), t6);
      t7 = C.List_List$of(t7, false, t7.$ti._eval$1("ListIterable.E"));
      t8 = _this.isSmall ? new A.Measurement(0.2777777777777778, B.Unit_16).toLpUnder$1(options.havingStyle$1(B.MathStyle_4)) : new A.Measurement(5, B.Unit_0).toLpUnder$1(options);
      t9 = C.List_List$filled(t2 + 1, 0, false, t6);
      t6 = C.List_List$filled(t1 + 1, 0, false, t6);
      t10 = A.IterableNullableExtension_whereNotNull(A.ListExtensions_mapIndexed(childBuildResults, new A.MatrixNode_buildWidget_closure0(), type$.nullable_BuildResult, type$.nullable_CustomLayoutId_int), type$.CustomLayoutId_int);
      return new A.BuildResult(A.ShiftBaseline$(new A.CustomLayout(new A.MatrixLayoutDelegate(t1, t2, t4, _this.arrayStretch * t5, t7, _this.hLines, _this.hskipBeforeAndAfter, t8, _this.vLines, _this.columnAligns, t6, t9), C.List_List$of(t10, false, t10.$ti._eval$1("Iterable.E")), null, type$.CustomLayout_int), t3, 0.5), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(this.rows * this.cols, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      var t1 = J.expand$1$1$ax(this.body, new A.MatrixNode_computeChildren_closure(), type$.nullable_EquationRowNode);
      return C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t4, t5, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = type$.String,
        t3 = C.LinkedHashMap_LinkedHashMap$_empty(t2, type$.nullable_Object);
      t3.$indexSet(0, "cols", _this.cols);
      t4 = _this.arrayStretch;
      if (t4 !== 1)
        t3.$indexSet(0, "arrayStretch", t4);
      if (_this.hskipBeforeAndAfter)
        t3.$indexSet(0, "hskipBeforeAndAfter", true);
      if (_this.isSmall)
        t3.$indexSet(0, "isSmall", true);
      t3.$indexSet(0, "columnAligns", J.map$1$1$ax(_this.columnAligns, new A.MatrixNode_toJson_closure(), t2));
      t3.$indexSet(0, "vLines", J.map$1$1$ax(_this.vLines, new A.MatrixNode_toJson_closure0(), t2));
      t4 = _this.rowSpacings;
      t5 = J.getInterceptor$ax(t4);
      if (!t5.every$1(t4, new A.MatrixNode_toJson_closure1()))
        t3.$indexSet(0, "rowSpacings", t5.map$1$1(t4, new A.MatrixNode_toJson_closure2(), t2));
      t4 = _this.hLines;
      t5 = J.getInterceptor$ax(t4);
      if (!t5.every$1(t4, new A.MatrixNode_toJson_closure3()))
        t3.$indexSet(0, "hLines", t5.map$1$1(t4, new A.MatrixNode_toJson_closure4(), t2));
      t3.$indexSet(0, "body", J.map$1$1$ax(_this.body, new A.MatrixNode_toJson_closure5(), type$.Iterable_nullable_Map_of_String_and_nullable_Object));
      t1.addAll$1(0, t3);
      return t1;
    }
  };
  A.MatrixLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map_int_RenderBox._as(childrenTable);
      return null;
    },
    performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, isComputingIntrinsics) {
      var t1, t2, _length, t3, childWidths, index, t4, colWidths, i, j, t5, colPos, vLinePos, t6, t7, t8, pos, t9, childPos, _this = this;
      type$.Map_int_double._as(childrenWidths);
      t1 = _this.cols;
      t2 = _this.rows;
      _length = t1 * t2;
      t3 = type$.double;
      childWidths = J.JSArray_JSArray$allocateFixed(_length, t3);
      for (index = 0; index < _length; ++index) {
        t4 = childrenWidths.$index(0, index);
        childWidths[index] = t4 == null ? 0 : t4;
      }
      colWidths = C.List_List$filled(t1, 0, false, t3);
      for (i = 0; i < t1; ++i)
        for (j = 0; j < t2; ++j) {
          t4 = colWidths[i];
          t5 = j * t1 + i;
          if (!(t5 >= 0 && t5 < _length))
            return C.ioore(childWidths, t5);
          D.JSArray_methods.$indexSet(colWidths, i, Math.max(t4, childWidths[t5]));
        }
      colPos = C.List_List$filled(t1, 0, false, t3);
      vLinePos = C.List_List$filled(t1 + 1, 0, false, t3);
      D.JSArray_methods.$indexSet(vLinePos, 0, 0);
      t4 = _this.vLines;
      t5 = J.getInterceptor$asx(t4);
      t6 = t5.$index(t4, 0) !== B.MatrixSeparatorStyle_2 ? _this.ruleThickness : 0;
      t7 = _this.hskipBeforeAndAfter;
      t8 = t7 ? _this.arraycolsep : 0;
      pos = 0 + t6 + t8;
      for (t6 = t1 - 1, t8 = _this.arraycolsep, t9 = _this.ruleThickness, i = 0; i < t6;) {
        D.JSArray_methods.$indexSet(colPos, i, pos);
        pos += colWidths[i] + t8;
        ++i;
        D.JSArray_methods.$indexSet(vLinePos, i, pos);
        pos = pos + (t5.$index(t4, i) !== B.MatrixSeparatorStyle_2 ? t9 : 0) + t8;
      }
      D.JSArray_methods.$indexSet(colPos, t6, pos);
      if (!(t6 >= 0))
        return C.ioore(colWidths, t6);
      t6 = colWidths[t6];
      t7 = t7 ? t8 : 0;
      pos = pos + t6 + t7;
      D.JSArray_methods.$indexSet(vLinePos, t1, pos);
      _this.width = pos + (t5.$index(t4, t1) !== B.MatrixSeparatorStyle_2 ? t9 : 0);
      childPos = C.List_List$generate(t2 * t1, new A.MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure(_this, colPos, colWidths, childWidths), false, t3);
      if (!isComputingIntrinsics)
        _this.set$vLinePos(vLinePos);
      return new A.AxisConfiguration(_this.width, new C.ListMapView(childPos, C._arrayInstanceType(childPos)._eval$1("ListMapView<1>")), type$.AxisConfiguration_int);
    },
    performHorizontalIntrinsicLayout$1$childrenWidths(childrenWidths) {
      return this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, false);
    },
    performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, isComputingIntrinsics) {
      var t2, _length, t3, childHeights, index, t4, childDepth, rowHeights, rowDepth, i, j, t5, t6, rowBaselinePos, hLinePos, t7, t8, pos, t9, t10, childPos, _this = this,
        t1 = type$.Map_int_double;
      t1._as(childrenHeights);
      t1._as(childrenBaselines);
      t1 = _this.cols;
      t2 = _this.rows;
      _length = t1 * t2;
      t3 = type$.double;
      childHeights = J.JSArray_JSArray$allocateFixed(_length, t3);
      for (index = 0; index < _length; ++index) {
        t4 = childrenBaselines.$index(0, index);
        childHeights[index] = t4 == null ? 0 : t4;
      }
      childDepth = C.List_List$generate(_length, new A.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure(childrenBaselines, childrenHeights), false, t3);
      t4 = _this.arrayskip;
      rowHeights = C.List_List$filled(t2, 0.7 * t4, false, t3);
      rowDepth = C.List_List$filled(t2, 0.3 * t4, false, t3);
      for (i = 0; i < t2; ++i)
        for (t4 = i * t1, j = 0; j < t1; ++j) {
          t5 = rowHeights[i];
          t6 = t4 + j;
          if (!(t6 >= 0 && t6 < _length))
            return C.ioore(childHeights, t6);
          D.JSArray_methods.$indexSet(rowHeights, i, Math.max(t5, childHeights[t6]));
          D.JSArray_methods.$indexSet(rowDepth, i, Math.max(rowDepth[i], childDepth[t6]));
        }
      rowBaselinePos = C.List_List$filled(t2, 0, false, t3);
      hLinePos = C.List_List$filled(t2 + 1, 0, false, t3);
      for (t4 = t2 - 1, t5 = _this.hLines, t6 = J.getInterceptor$asx(t5), t7 = _this.ruleThickness, t8 = _this.rowSpacings, pos = 0, i = 0; i < t2; ++i) {
        D.JSArray_methods.$indexSet(hLinePos, i, pos);
        t9 = t6.$index(t5, i) !== B.MatrixSeparatorStyle_2 ? t7 : 0;
        pos = pos + t9 + rowHeights[i];
        D.JSArray_methods.$indexSet(rowBaselinePos, i, pos);
        t9 = rowDepth[i];
        if (i < t4) {
          if (!(i < t8.length))
            return C.ioore(t8, i);
          t10 = t8[i];
        } else
          t10 = 0;
        pos = pos + t9 + t10;
      }
      D.JSArray_methods.$indexSet(hLinePos, t2, pos);
      _this.totalHeight = pos + (t6.$index(t5, t2) !== B.MatrixSeparatorStyle_2 ? t7 : 0);
      childPos = C.List_List$generate(t2 * t1, new A.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0(_this, rowBaselinePos, childHeights), false, t3);
      if (!isComputingIntrinsics)
        _this.set$hLinePos(hLinePos);
      return new A.AxisConfiguration(_this.totalHeight, new C.ListMapView(childPos, C._arrayInstanceType(childPos)._eval$1("ListMapView<1>")), type$.AxisConfiguration_int);
    },
    performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenBaselines, childrenHeights) {
      return this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, false);
    },
    additionalPaint$2(context, offset) {
      var t2, t3, t4, t5, i, t6, t7, dx, dy, _this = this,
        paint = $.$get$_renderer().createPaint$0(),
        t1 = _this.ruleThickness;
      paint.set$strokeWidth(t1);
      for (t2 = _this.hLines, t3 = J.getInterceptor$asx(t2), t4 = offset._dx, t5 = offset._dy, t1 /= 2, i = 0; i < t3.get$length(t2); ++i)
        switch (t3.$index(t2, i).index) {
          case 0:
            t6 = context.get$canvas(context);
            t7 = _this.hLinePos;
            if (!(i < t7.length))
              return C.ioore(t7, i);
            t7 = t5 + t7[i] + t1;
            t6.drawLine$3(new C.Offset(t4, t7), new C.Offset(t4 + _this.width, t7), paint);
            break;
          case 1:
            for (dx = 0; dx < _this.width; dx += 4) {
              t6 = context.get$canvas(context);
              t7 = _this.hLinePos;
              if (!(i < t7.length))
                return C.ioore(t7, i);
              t7 = t5 + t7[i] + t1;
              t6.drawLine$3(new C.Offset(t4 + dx, t7), new C.Offset(t4 + Math.min(dx + 2, _this.width), t7), paint);
            }
            break;
        }
      for (t2 = _this.vLines, t3 = J.getInterceptor$asx(t2), i = 0; i < t3.get$length(t2); ++i)
        switch (t3.$index(t2, i).index) {
          case 0:
            t6 = context.get$canvas(context);
            t7 = _this.vLinePos;
            if (!(i < t7.length))
              return C.ioore(t7, i);
            t7 = t4 + t7[i] + t1;
            t6.drawLine$3(new C.Offset(t7, t5), new C.Offset(t7, t5 + _this.totalHeight), paint);
            break;
          case 1:
            for (dy = 0; dy < _this.totalHeight; dy += 4) {
              t6 = context.get$canvas(context);
              t7 = _this.vLinePos;
              if (!(i < t7.length))
                return C.ioore(t7, i);
              t7 = t4 + t7[i] + t1;
              t6.drawLine$3(new C.Offset(t7, t5 + dy), new C.Offset(t7, t5 + Math.min(dy + 2, _this.totalHeight)), paint);
            }
            break;
        }
    },
    set$hLinePos(hLinePos) {
      this.hLinePos = type$.List_double._as(hLinePos);
    },
    set$vLinePos(vLinePos) {
      this.vLinePos = type$.List_double._as(vLinePos);
    }
  };
  A.MultiscriptsNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3, t4, t5, t6;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = this.base;
      if (t1.get$flattenedChildList().length === 1) {
        t1 = t1.get$flattenedChildList();
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0] instanceof A.SymbolNode;
      } else
        t1 = false;
      t2 = childBuildResults.length;
      if (0 >= t2)
        return C.ioore(childBuildResults, 0);
      t3 = childBuildResults[0];
      t3.toString;
      if (1 >= t2)
        return C.ioore(childBuildResults, 1);
      t4 = childBuildResults[1];
      if (2 >= t2)
        return C.ioore(childBuildResults, 2);
      t5 = childBuildResults[2];
      if (3 >= t2)
        return C.ioore(childBuildResults, 3);
      t6 = childBuildResults[3];
      if (4 >= t2)
        return C.ioore(childBuildResults, 4);
      return new A.BuildResult(A.Multiscripts$(false, t3, t1, t6, childBuildResults[4], t4, t5), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style,
        subOptions = options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_0)),
        supOptions = options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_1));
      return C._setArrayType([options, subOptions, supOptions, subOptions, supOptions], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base, this.sub, this.sup, null, null], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      var t1 = this.base.overrideType;
      if (t1 == null)
        t1 = B.AtomType_0;
      return t1;
    },
    get$rightType() {
      if (this.sub == null && this.sup == null) {
        var t1 = this.base.overrideType;
        if (t1 == null)
          t1 = B.AtomType_0;
      } else
        t1 = B.AtomType_0;
      return t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "base", _this.base.toJson$0());
      t3 = _this.sub;
      if (t3 != null)
        t2.$indexSet(0, "sub", t3.toJson$0());
      t3 = _this.sup;
      if (t3 != null)
        t2.$indexSet(0, "sup", t3.toJson$0());
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.NaryOperatorNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var large, font, t1, lookupResult, operatorWidget, symbolMetrics, symbolWidget, t2, t3, baseSymbolWidget, t4, oval, shouldLimits, italic, spacing, t5, t6, t7, widget, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      large = _this.allowLargeOp && (options.style.index / 2 | 0) === 0;
      font = large ? new A.FontOptions("Size2", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21) : new A.FontOptions("Size1", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
      t1 = _this.operator;
      if (!B.Map_nMHK2.containsKey$1(0, t1)) {
        lookupResult = A.getCharacterMetrics(t1, font.get$fontName(), B.Mode_0);
        if (lookupResult == null) {
          operatorWidget = C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          symbolMetrics = B.CharacterMetrics_0_0_0_0;
        } else {
          symbolWidget = A.makeChar(t1, font, lookupResult, options, true);
          symbolMetrics = lookupResult;
          operatorWidget = symbolWidget;
        }
      } else {
        t2 = B.Map_nMHK2.$index(0, t1);
        t2.toString;
        t3 = A.getCharacterMetrics(t2, font.get$fontName(), B.Mode_0);
        t3.toString;
        baseSymbolWidget = A.makeChar(t2, font, t3, options, true);
        t2 = t1 === "\u222f" ? "oiint" : "oiiint";
        t4 = large ? "2" : "1";
        oval = A.staticSvg(t2 + "Size" + t4, options, false);
        operatorWidget = C.Row$(C._setArrayType([A.ResetDimension$(A.ShiftBaseline$(oval, large ? new A.Measurement(0.08, B.Unit_16).toLpUnder$1(options) : 0, _null), _null, _null, D.CrossAxisAlignment_0, 0), baseSymbolWidget], type$.JSArray_Widget), D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, D.TextBaseline_0, _null, D.VerticalDirection_1);
        symbolMetrics = t3;
      }
      t2 = _this.lowerLimit == null;
      if (!t2 || _this.upperLimit != null) {
        shouldLimits = _this.limits;
        if (shouldLimits == null)
          shouldLimits = B.Set_1ZnLs.contains$1(0, t1) && (options.style.index / 2 | 0) === 0;
        italic = new A.Measurement(symbolMetrics.italic, B.Unit_16).toLpUnder$1(options);
        if (!shouldLimits) {
          t1 = childBuildResults.length;
          if (0 >= t1)
            return C.ioore(childBuildResults, 0);
          t2 = childBuildResults[0];
          if (1 >= t1)
            return C.ioore(childBuildResults, 1);
          operatorWidget = A.Multiscripts$(false, new A.BuildResult(operatorWidget, options, italic, 0, _null), false, _null, _null, t2, childBuildResults[1]);
        } else {
          spacing = new A.Measurement(options.get$fontMetrics().bigOpSpacing5, B.Unit_16).toLpUnder$1(options);
          t1 = _this.upperLimit != null;
          t3 = t1 ? spacing : 0;
          t2 = !t2;
          t4 = t2 ? spacing : 0;
          t5 = t1 ? 1 : 0;
          t6 = C._setArrayType([], type$.JSArray_Widget);
          if (t1) {
            t1 = new A.Measurement(options.get$fontMetrics().bigOpSpacing3, B.Unit_16).toLpUnder$1(options);
            t7 = new A.Measurement(options.get$fontMetrics().bigOpSpacing1, B.Unit_16).toLpUnder$1(options);
            if (1 >= childBuildResults.length)
              return C.ioore(childBuildResults, 1);
            t6.push(A.VListElement$(A.MinDimension$(t7, childBuildResults[1].widget, t1, 0, 0), _null, 0.5 * italic, 0));
          }
          t6.push(operatorWidget);
          if (t2) {
            t1 = new A.Measurement(options.get$fontMetrics().bigOpSpacing4, B.Unit_16).toLpUnder$1(options);
            t2 = new A.Measurement(options.get$fontMetrics().bigOpSpacing2, B.Unit_16).toLpUnder$1(options);
            if (0 >= childBuildResults.length)
              return C.ioore(childBuildResults, 0);
            t6.push(A.VListElement$(A.MinDimension$(0, childBuildResults[0].widget, 0, t1, t2), _null, -0.5 * italic, 0));
          }
          operatorWidget = new C.Padding(new C.EdgeInsets(0, t3, 0, t4), A.VList$(t5, t6), _null);
        }
      }
      t1 = _this.naryand.overrideType;
      if (t1 == null)
        t1 = B.AtomType_0;
      t1 = A.LineElement$(false, false, operatorWidget, _null, A.getSpacingSize(B.AtomType_1, t1, options.style).toLpUnder$1(options));
      if (2 >= childBuildResults.length)
        return C.ioore(childBuildResults, 2);
      widget = A.Line$(C._setArrayType([t1, A.LineElement$(false, false, childBuildResults[2].widget, _null, 0)], type$.JSArray_Widget), _null);
      if (2 >= childBuildResults.length)
        return C.ioore(childBuildResults, 2);
      return new A.BuildResult(widget, options, childBuildResults[2].italic, 0, _null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style;
      return C._setArrayType([options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_0)), options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_1)), options], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.lowerLimit, this.upperLimit, this.naryand], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_1;
    },
    get$rightType() {
      var t1 = this.naryand.overrideType;
      return t1 == null ? B.AtomType_0 : t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "operator", A.unicodeLiteral(_this.operator));
      t3 = _this.upperLimit;
      if (t3 != null)
        t2.$indexSet(0, "upperLimit", t3.toJson$0());
      t3 = _this.lowerLimit;
      if (t3 != null)
        t2.$indexSet(0, "lowerLimit", t3.toJson$0());
      t2.$indexSet(0, "naryand", _this.naryand.toJson$0());
      t3 = _this.limits;
      if (t3 != null)
        t2.$indexSet(0, "limits", t3);
      if (!_this.allowLargeOp)
        t2.$indexSet(0, "allowLargeOp", false);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.OverNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var spacing, t1, t2;
      type$.List_nullable_BuildResult._as(childBuildResults);
      spacing = new A.Measurement(options.get$fontMetrics().bigOpSpacing5, B.Unit_16).toLpUnder$1(options);
      t1 = new A.Measurement(options.get$fontMetrics().bigOpSpacing3, B.Unit_16).toLpUnder$1(options);
      t2 = new A.Measurement(options.get$fontMetrics().bigOpSpacing1, B.Unit_16).toLpUnder$1(options);
      if (1 >= childBuildResults.length)
        return C.ioore(childBuildResults, 1);
      return new A.BuildResult(new C.Padding(new C.EdgeInsets(0, spacing, 0, 0), A.VList$(1, C._setArrayType([A.MinDimension$(t2, childBuildResults[1].widget, t1, 0, 0), childBuildResults[0].widget], type$.JSArray_Widget)), null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options, options.havingStyle$1(A.MathStyleExt_reduce(options.style, B.MathStyleDiff_1))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base, this.above], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return this.stackRel ? B.AtomType_3 : B.AtomType_0;
    },
    get$rightType() {
      return this.stackRel ? B.AtomType_3 : B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "base", _this.base.toJson$0());
      t2.$indexSet(0, "above", _this.above.toJson$0());
      if (_this.stackRel)
        t2.$indexSet(0, "stackRel", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.PhantomNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var phantomResult, widget, t1, t2, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      phantomResult = A.SyntaxNode$(_null, 0, _this.phantomChild).buildWidget$1(options);
      widget = C.Opacity$(phantomResult.widget, 0);
      t1 = _this.zeroWidth ? 0 : _null;
      t2 = _this.zeroHeight ? 0 : _null;
      return new A.BuildResult(A.ResetDimension$(widget, _this.zeroDepth ? 0 : _null, t2, D.CrossAxisAlignment_2, t1), options, phantomResult.italic, 0, _null);
    },
    get$leftType() {
      var t1 = this.phantomChild.overrideType;
      return t1 == null ? B.AtomType_0 : t1;
    },
    get$rightType() {
      var t1 = this.phantomChild.overrideType;
      return t1 == null ? B.AtomType_0 : t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "phantomChild", _this.phantomChild.toJson$0());
      if (_this.zeroWidth)
        t2.$indexSet(0, "zeroWidth", true);
      if (_this.zeroHeight)
        t2.$indexSet(0, "zeroHeight", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.RaiseBoxNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = this.dy.toLpUnder$1(options);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      return new A.BuildResult(A.ShiftBaseline$(childBuildResults[0].widget, t1, null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.body], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = this.body.toJson$0(),
        t3 = this.dy,
        t4 = B.Map_Dgfp9.$index(0, t3.unit);
      t4.toString;
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["body", t2, "dy", C.S(t3.value) + t4], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  A.SpaceNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var height, depth, width, shift, t1, topMost, t2, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (_this.alignerOrSpacer)
        return new A.BuildResult(C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, 0, _null, _null, _null, _null, _null, _null), options, 0, 0, _null);
      height = _this.height.toLpUnder$1(options);
      depth = B.Measurement_0_Unit_0.toLpUnder$1(options);
      width = _this.width.toLpUnder$1(options);
      shift = _this.shift.toLpUnder$1(options);
      t1 = -depth;
      topMost = Math.max(height, t1) + shift;
      t1 = Math.min(height, t1);
      t2 = _this.fill ? options.color : _null;
      return new A.BuildResult(new A.ResetBaseline(topMost, C.Container$(_null, _null, D.Clip_0, t2, _null, _null, _null, topMost - (t1 + shift), _null, _null, _null, _null, _null, Math.max(0, width)), _null), options, 0, 0, _null);
    },
    get$leftType() {
      return B.AtomType_8;
    },
    get$rightType() {
      return B.AtomType_8;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    toJson$0() {
      var t3, t4, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "mode", _this.mode._enumToString$0());
      t3 = _this.height;
      t4 = B.Map_Dgfp9.$index(0, t3.unit);
      t4.toString;
      t2.$indexSet(0, "height", C.S(t3.value) + t4);
      t4 = _this.width;
      t3 = B.Map_Dgfp9.$index(0, t4.unit);
      t3.toString;
      t2.$indexSet(0, "width", C.S(t4.value) + t3);
      t3 = _this.shift;
      if (t3 !== B.Measurement_0_Unit_0) {
        t4 = B.Map_Dgfp9.$index(0, t3.unit);
        t4.toString;
        t2.$indexSet(0, "shift", C.S(t3.value) + t4);
      }
      t3 = _this.breakPenalty;
      if (t3 != null)
        t2.$indexSet(0, "breakPenalty", t3);
      if (_this.fill)
        t2.$indexSet(0, "fill", true);
      if (_this.alignerOrSpacer)
        t2.$indexSet(0, "alignerOrSpacer", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.SqrtNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var baseResult, indexResult, t1, t2, t3, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (1 >= childBuildResults.length)
        return C.ioore(childBuildResults, 1);
      baseResult = childBuildResults[1];
      indexResult = childBuildResults[0];
      t1 = baseResult.options;
      t2 = new A.Measurement(options.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(options);
      t3 = type$._SqrtPos;
      t2 = C._setArrayType([A.CustomLayoutId$(A.MinDimension$(0, baseResult.widget, 0, t2, 0), B._SqrtPos_0, t3), A.CustomLayoutId$(C.IgnorePointer$(new A.LayoutBuilderPreserveBaseline(new A.SqrtNode_buildWidget_closure(options), _null), true, _null), B._SqrtPos_2, t3)], type$.JSArray_Widget);
      if (this.index != null)
        t2.push(A.CustomLayoutId$(indexResult.widget, B._SqrtPos_1, t3));
      return new A.BuildResult(new A.CustomLayout(new A.SqrtLayoutDelegate(options, t1), t2, _null, type$.CustomLayout__SqrtPos), options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options.havingStyle$1(B.MathStyle_6), options.havingStyle$1(A.MathStyleExt_reduce(options.style, B.MathStyleDiff_4))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.index, this.base], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = this.index;
      t2 = t2 == null ? null : t2.toJson$0();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["index", t2, "base", this.base.toJson$0()], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  A._SqrtPos.prototype = {
    _enumToString$0() {
      return "_SqrtPos." + this._name;
    }
  };
  A.SqrtLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map__SqrtPos_RenderBox._as(childrenTable);
      return this.heightAboveBaseline;
    },
    getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(childSize, childrenTable, extent, max, sizingDirection) {
      type$.double_Function_RenderBox_double._as(childSize);
      type$.Map__SqrtPos_RenderBox._as(childrenTable);
      return 0;
    },
    computeLayout$3$dry(constraints, childrenTable, dry) {
      var t1, index, t2, baseSize, t3, indexSize, baseHeight, t4, baseWidth, indexHeight, indexWidth, theta, psi, t5, minSqrtHeight, surdSize, t6, advanceWidth, indexRightPadding, sqrtHorizontalPos, ruleWidth, t7, t8, delimDepth, bodyHeight, indexShift, sqrtVerticalPos;
      type$.Map__SqrtPos_RenderBox._as(childrenTable);
      t1 = childrenTable.$index(0, B._SqrtPos_0);
      t1.toString;
      index = childrenTable.$index(0, B._SqrtPos_1);
      t2 = childrenTable.$index(0, B._SqrtPos_2);
      t2.toString;
      baseSize = A.RenderBoxLayout_getLayoutSize(t1, D.BoxConstraints_0Yu, dry);
      t3 = index == null;
      indexSize = t3 ? null : A.RenderBoxLayout_getLayoutSize(index, D.BoxConstraints_0Yu, dry);
      if (indexSize == null)
        indexSize = D.Size_0_0;
      if (dry)
        baseHeight = 0;
      else {
        t4 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
        t4.toString;
        baseHeight = t4;
      }
      baseWidth = baseSize._dx;
      if (dry)
        indexHeight = 0;
      else {
        if (t3)
          t4 = null;
        else {
          t4 = index.getDistanceToBaseline$1(D.TextBaseline_0);
          t4.toString;
        }
        indexHeight = t4 == null ? 0 : t4;
      }
      indexWidth = indexSize._dx;
      t4 = this.baseOptions;
      theta = new A.Measurement(t4.get$fontMetrics().defaultRuleThickness, B.Unit_16).toLpUnder$1(t4);
      psi = theta + 0.25 * Math.abs(t4.style.index < 2 ? new A.Measurement(t4.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(t4) : theta);
      t4 = baseSize._dy;
      t5 = t4 + psi;
      minSqrtHeight = t5 + theta;
      surdSize = A.RenderBoxLayout_getLayoutSize(t2, new C.BoxConstraints(baseWidth, 1 / 0, minSqrtHeight, 1 / 0), dry);
      t6 = this.options;
      advanceWidth = A.getSqrtAdvanceWidth(minSqrtHeight, baseWidth, t6);
      indexRightPadding = -new A.Measurement(10, B.Unit_14).toLpUnder$1(t6);
      sqrtHorizontalPos = Math.max(0, new A.Measurement(0.5, B.Unit_0).toLpUnder$1(t6) + indexWidth + indexRightPadding);
      if (dry)
        ruleWidth = 0;
      else {
        t6 = t2.getDistanceToBaseline$1(D.TextBaseline_0);
        t6.toString;
        ruleWidth = t6;
      }
      t6 = !dry;
      if (t6) {
        t7 = t2.get$size(0);
        t8 = t2.getDistanceToBaseline$1(D.TextBaseline_0);
        t8.toString;
        delimDepth = t7._dy - t8;
        if (delimDepth > t5)
          psi += 0.5 * (delimDepth - t4 - psi);
      }
      bodyHeight = baseHeight + psi + ruleWidth;
      t4 = surdSize._dy;
      indexShift = 0.6 * (bodyHeight - (t4 - bodyHeight));
      sqrtVerticalPos = Math.max(0, indexHeight + indexShift - baseHeight - psi - ruleWidth);
      if (t6) {
        t5 = this.heightAboveBaseline = bodyHeight + sqrtVerticalPos;
        t6 = type$.BoxParentData;
        t6._as(t1.parentData).offset = new C.Offset(sqrtHorizontalPos + advanceWidth, t5 - baseHeight);
        if (!t3)
          t6._as(index.parentData).offset = new C.Offset(sqrtHorizontalPos - indexRightPadding - indexWidth, t5 - indexShift - indexHeight);
        t6._as(t2.parentData).offset = new C.Offset(sqrtHorizontalPos, sqrtVerticalPos);
      }
      return new C.Size(sqrtHorizontalPos + surdSize._dx, sqrtVerticalPos + t4);
    }
  };
  A.StretchyOpNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var verticalPadding, t1, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      verticalPadding = new A.Measurement(2, B.Unit_14).toLpUnder$1(options);
      t1 = C._setArrayType([], type$.JSArray_Widget);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t1.push(new C.Padding(new C.EdgeInsets(0, 0, 0, verticalPadding), childBuildResults[0].widget, _null));
      t1.push(A.VListElement$(new A.LayoutBuilderPreserveBaseline(new A.StretchyOpNode_buildWidget_closure(this, options), _null), new A.StretchyOpNode_buildWidget_closure0(options), 0, 0));
      if (this.below != null) {
        if (1 >= childBuildResults.length)
          return C.ioore(childBuildResults, 1);
        t1.push(new C.Padding(new C.EdgeInsets(0, verticalPadding, 0, 0), childBuildResults[1].widget, _null));
      }
      return new A.BuildResult(A.VList$(1, t1), options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style;
      return C._setArrayType([options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_1)), options.havingStyle$1(A.MathStyleExt_reduce(t1, B.MathStyleDiff_0))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.above, this.below], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_3;
    },
    get$rightType() {
      return B.AtomType_3;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "symbol", A.unicodeLiteral(_this.symbol));
      t2.$indexSet(0, "above", _this.above.toJson$0());
      t3 = _this.below;
      if (t3 != null)
        t2.$indexSet(0, "below", t3.toJson$0());
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  A.StyleNode.prototype = {
    computeChildOptions$1(options) {
      var t4,
        t1 = J.get$length$asx(this.children),
        t2 = this.optionsDiff,
        t3 = t2.size,
        res = t3 != null ? options.havingSize$1(t3) : options;
      t3 = t2.style;
      if (t3 != null)
        res = res.havingStyle$1(t3);
      t3 = t2.color;
      if (t3 != null)
        res = res.withColor$1(t3);
      t3 = t2.textFontOptions;
      if (t3 != null) {
        t4 = res.textFontOptions;
        res = res.copyWith$2$mathFontOptions$textFontOptions(null, (t4 == null ? new A.FontOptions("Main", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21) : t4).mergeWith$1(t3));
      }
      t2 = t2.mathFontOptions;
      if (t2 != null)
        res = res.withMathFont$1(t2);
      return C.List_List$filled(t1, res, false, type$.MathOptions);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = J.map$1$1$ax(this.children, new A.StyleNode_toJson_closure(), type$.Map_of_String_and_nullable_Object);
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["children", C.List_List$of(t2, false, t2.$ti._eval$1("ListIterable.E")), "optionsDiff", "Instance of '" + C.Primitives_objectTypeName(this.optionsDiff) + "'"], type$.String, type$.nullable_Object));
      return t1;
    },
    get$children(receiver) {
      return this.children;
    }
  };
  A.SymbolNode.prototype = {
    get$atomType() {
      var result, _this = this,
        value = _this.__SymbolNode_atomType_FI;
      if (value === $) {
        result = _this.overrideAtomType;
        if (result == null)
          result = A.getDefaultAtomTypeForSymbol(_this.symbol, _this.mode, _this.variantForm);
        _this.__SymbolNode_atomType_FI !== $ && C.throwLateFieldADI("atomType");
        value = _this.__SymbolNode_atomType_FI = result;
      }
      return value;
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2, expanded, code, res, t3, accent, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = type$.Runes;
      t2 = t1._eval$1("ExpandIterable<Iterable.E,String>");
      expanded = C.List_List$of(new C.ExpandIterable(new C.Runes(_this.symbol), t1._eval$1("Iterable<String>(Iterable.E)")._as(new A.SymbolNode_buildWidget_closure()), t2), false, t2._eval$1("Iterable.E"));
      t1 = expanded.length;
      if (t1 === 1) {
        if (0 >= t1)
          return C.ioore(expanded, 0);
        t1 = expanded[0];
        return A.makeBaseSymbol(_this.get$atomType(), _this.mode, options, _this.overrideFont, t1, _this.variantForm);
      } else if (t1 > 1) {
        t1 = expanded[1];
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        code = t1.charCodeAt(0);
        if (code >= 768 && code <= 879) {
          t1 = expanded[0];
          if (t1 === "i")
            D.JSArray_methods.$indexSet(expanded, 0, "\u0131");
          else if (t1 === "j")
            D.JSArray_methods.$indexSet(expanded, 0, "\u0237");
        }
        if (0 >= expanded.length)
          return C.ioore(expanded, 0);
        res = _this.withSymbol$1(expanded[0]);
        for (t1 = C.SubListIterable$(expanded, 1, _null, C._arrayInstanceType(expanded)._precomputed1), t2 = t1.$ti, t1 = new C.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          accent = B.Map_1zxva.$index(0, t3 == null ? t2._as(t3) : t3);
          if (accent == null)
            break;
          else
            res = new A.AccentNode(A.GreenNodeWrappingExt_wrapWithEquationRow(res), accent, false, true);
        }
        return A.SyntaxNode$(_null, 0, res).buildWidget$1(options);
      } else
        return new A.BuildResult(C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, 0, _null, _null, _null, _null, _null, 0), options, 0, 0, _null);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return !oldOptions.color.$eq(0, newOptions.color) || !J.$eq$(oldOptions.mathFontOptions, newOptions.mathFontOptions) || !J.$eq$(oldOptions.textFontOptions, newOptions.textFontOptions) || oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    get$leftType() {
      return this.get$atomType();
    },
    get$rightType() {
      return this.get$atomType();
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "mode", _this.mode._enumToString$0());
      t2.$indexSet(0, "symbol", A.unicodeLiteral(_this.symbol));
      if (_this.variantForm)
        t2.$indexSet(0, "variantForm", true);
      t3 = _this.overrideAtomType;
      if (t3 != null)
        t2.$indexSet(0, "atomType", t3.toString$0(0));
      t1.addAll$1(0, t2);
      return t1;
    },
    withSymbol$1(symbol) {
      var _this = this;
      if (symbol === _this.symbol)
        return _this;
      return A.SymbolNode$(_this.mode, _this.overrideAtomType, _this.overrideFont, symbol, _this.variantForm);
    }
  };
  A.UnderNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var spacing, t1, t2, t3;
      type$.List_nullable_BuildResult._as(childBuildResults);
      spacing = new A.Measurement(options.get$fontMetrics().bigOpSpacing5, B.Unit_16).toLpUnder$1(options);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t1 = childBuildResults[0].widget;
      t2 = new A.Measurement(options.get$fontMetrics().bigOpSpacing4, B.Unit_16).toLpUnder$1(options);
      t3 = new A.Measurement(options.get$fontMetrics().bigOpSpacing2, B.Unit_16).toLpUnder$1(options);
      if (1 >= childBuildResults.length)
        return C.ioore(childBuildResults, 1);
      return new A.BuildResult(new C.Padding(new C.EdgeInsets(0, 0, 0, spacing), A.VList$(0, C._setArrayType([t1, A.MinDimension$(0, childBuildResults[1].widget, 0, t2, t3)], type$.JSArray_Widget)), null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options, options.havingStyle$1(A.MathStyleExt_reduce(options.style, B.MathStyleDiff_0))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base, this.below], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return B.AtomType_0;
    },
    get$rightType() {
      return B.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["base", this.base.toJson$0(), "below", this.below.toJson$0()], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  A.MathOptions.prototype = {
    get$size(_) {
      var result, _this = this,
        value = _this.__MathOptions_size_FI;
      if (value === $) {
        result = A.MathStyleExtOnSize_underStyle(_this.sizeUnderTextStyle, _this.style);
        _this.__MathOptions_size_FI !== $ && C.throwLateFieldADI("size");
        _this.__MathOptions_size_FI = result;
        value = result;
      }
      return value;
    },
    get$sizeMultiplier() {
      var t1, result, _this = this,
        value = _this.__MathOptions_sizeMultiplier_FI;
      if (value === $) {
        t1 = _this.get$size(0).index;
        if (!(t1 < 11))
          return C.ioore(B.List_HoQ, t1);
        result = B.List_HoQ[t1];
        _this.__MathOptions_sizeMultiplier_FI !== $ && C.throwLateFieldADI("sizeMultiplier");
        _this.__MathOptions_sizeMultiplier_FI = result;
        value = result;
      }
      return value;
    },
    get$fontMetrics() {
      var result, _this = this,
        value = _this.__MathOptions_fontMetrics_FI;
      if (value === $) {
        result = A.getGlobalMetrics(_this.get$size(0));
        _this.__MathOptions_fontMetrics_FI !== $ && C.throwLateFieldADI("fontMetrics");
        _this.__MathOptions_fontMetrics_FI = result;
        value = result;
      }
      return value;
    },
    havingStyle$1(style) {
      if (this.style === style)
        return this;
      return this.copyWith$1$style(style);
    },
    havingCrampedStyle$0() {
      var t1 = this.style;
      if ((t1.index & 1) === 0)
        return this;
      return this.copyWith$1$style(A.MathStyleExt_reduce(t1, B.MathStyleDiff_4));
    },
    havingSize$1(size) {
      var _this = this;
      if (_this.get$size(0) === size && _this.sizeUnderTextStyle === size)
        return _this;
      return _this.copyWith$2$sizeUnderTextStyle$style(size, A.MathStyleExt_reduce(_this.style, B.MathStyleDiff_5));
    },
    withColor$1(color) {
      if (this.color.$eq(0, color))
        return this;
      return this.copyWith$1$color(color);
    },
    withMathFont$1(font) {
      if (font.$eq(0, this.mathFontOptions))
        return this;
      return this.copyWith$1$mathFontOptions(font);
    },
    copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(color, mathFontOptions, sizeUnderTextStyle, style, textFontOptions) {
      var _this = this,
        t1 = style == null ? _this.style : style,
        t2 = color == null ? _this.color : color,
        t3 = sizeUnderTextStyle == null ? _this.sizeUnderTextStyle : sizeUnderTextStyle,
        t4 = textFontOptions == null ? _this.textFontOptions : textFontOptions,
        t5 = mathFontOptions == null ? _this.mathFontOptions : mathFontOptions;
      return A.MathOptions$_(t2, _this.fontSize, _this.logicalPpi, t5, t3, t1, t4);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(color, _null, _null, _null, _null);
    },
    copyWith$1$style(style) {
      var _null = null;
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(_null, _null, _null, style, _null);
    },
    copyWith$2$mathFontOptions$textFontOptions(mathFontOptions, textFontOptions) {
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(null, mathFontOptions, null, null, textFontOptions);
    },
    copyWith$1$mathFontOptions(mathFontOptions) {
      var _null = null;
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(_null, mathFontOptions, _null, _null, _null);
    },
    copyWith$2$sizeUnderTextStyle$style(sizeUnderTextStyle, style) {
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(null, null, sizeUnderTextStyle, style, null);
    }
  };
  A.OptionsDiff.prototype = {
    get$isEmpty(_) {
      var _this = this;
      return _this.style == null && _this.color == null && _this.size == null && _this.textFontOptions == null && _this.mathFontOptions == null;
    }
  };
  A.FontOptions.prototype = {
    get$fontName() {
      var t1 = this.fontWeight === D.FontWeight_6_700 ? "Bold" : "",
        postfix = t1 + (this.fontShape === B.FontStyle_1 ? "Italic" : "");
      t1 = postfix.length === 0 ? "Regular" : postfix;
      return this.fontFamily + "-" + t1;
    },
    mergeWith$1(value) {
      var _this = this,
        t1 = value.fontFamily,
        t2 = value.fontWeight,
        t3 = value.fontShape;
      if (t1 == null)
        t1 = _this.fontFamily;
      if (t2 == null)
        t2 = _this.fontWeight;
      if (t3 == null)
        t3 = _this.fontShape;
      return new A.FontOptions(t1, t2, t3, _this.fallback);
    },
    $eq(_, o) {
      var _this = this;
      if (o == null)
        return false;
      if (_this === o)
        return true;
      return o instanceof A.FontOptions && o.fontFamily === _this.fontFamily && o.fontWeight === _this.fontWeight && o.fontShape === _this.fontShape && C.listEquals(o.fallback, _this.fallback, type$.FontOptions);
    },
    get$hashCode(_) {
      return C.Object_hash(D.JSString_methods.get$hashCode(this.fontFamily), C.Primitives_objectHashCode(this.fontWeight), C.Primitives_objectHashCode(this.fontShape), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.PartialFontOptions.prototype = {
    $eq(_, o) {
      var _this = this;
      if (o == null)
        return false;
      if (_this === o)
        return true;
      return o instanceof A.PartialFontOptions && o.fontFamily == _this.fontFamily && o.fontWeight == _this.fontWeight && o.fontShape == _this.fontShape;
    },
    get$hashCode(_) {
      return C.Object_hash(J.get$hashCode$(this.fontFamily), J.get$hashCode$(this.fontWeight), J.get$hashCode$(this.fontShape), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.Unit.prototype = {
    _enumToString$0() {
      return "Unit." + this._name;
    }
  };
  A.Measurement.prototype = {
    toLpUnder$1(options) {
      var _this = this,
        t1 = _this.unit;
      if (t1 === B.Unit_15)
        return _this.value;
      if (B.Map_Dg3fw.$index(0, t1) != null) {
        t1 = B.Map_Dg3fw.$index(0, t1);
        t1.toString;
        return _this.value * t1 / 72.27 * options.logicalPpi;
      }
      switch (t1.index) {
        case 16:
          return _this.value * options.fontSize * options.get$sizeMultiplier();
        case 14:
          return _this.value * options.fontSize * (options.get$fontMetrics().quad / 18) * options.get$sizeMultiplier();
        case 12:
          return _this.value * options.fontSize * options.get$fontMetrics().xHeight * options.havingStyle$1(A.MathStyleExt_reduce(options.style, B.MathStyleDiff_5)).get$sizeMultiplier();
        case 13:
          return _this.value * options.fontSize * options.get$fontMetrics().quad * options.havingStyle$1(A.MathStyleExt_reduce(options.style, B.MathStyleDiff_5)).get$sizeMultiplier();
        default:
          throw C.wrapException(C.ArgumentError$("Invalid unit: '" + t1._enumToString$0() + "'", null));
      }
    },
    toString$0(_) {
      var t1 = B.Map_Dgfp9.$index(0, this.unit);
      t1.toString;
      return C.S(this.value) + t1;
    }
  };
  A.MathSize.prototype = {
    _enumToString$0() {
      return "MathSize." + this._name;
    }
  };
  A.MathStyle.prototype = {
    _enumToString$0() {
      return "MathStyle." + this._name;
    }
  };
  A.MathStyleDiff.prototype = {
    _enumToString$0() {
      return "MathStyleDiff." + this._name;
    }
  };
  A.SymbolRenderConfig.prototype = {};
  A.RenderConfig.prototype = {};
  A.SyntaxTree.prototype = {};
  A.SyntaxNode.prototype = {
    get$children(_) {
      var t1, _length, _list, t2, index, t3, t4, _this = this,
        value = _this.__SyntaxNode_children_FI;
      if (value === $) {
        t1 = _this.value;
        _length = J.get$length$asx(t1.get$children(t1));
        _list = J.JSArray_JSArray$allocateFixed(_length, type$.nullable_SyntaxNode);
        for (t2 = _this.pos, index = 0; index < _length; ++index) {
          if (J.$index$asx(t1.get$children(t1), index) != null) {
            t3 = J.$index$asx(t1.get$children(t1), index);
            t3.toString;
            t4 = t1.get$childPositions();
            if (!(index < t4.length))
              return C.ioore(t4, index);
            t4 = new A.SyntaxNode(_this, t3, t2 + t4[index]);
            t3 = t4;
          } else
            t3 = null;
          _list[index] = t3;
        }
        _this.__SyntaxNode_children_FI !== $ && C.throwLateFieldADI("children");
        _this.set$__SyntaxNode_children_FI(_list);
        value = _list;
      }
      return value;
    },
    buildWidget$1(options) {
      var t2, t3, newChildBuildResults, bypassRebuild,
        t1 = this.value;
      if (t1 instanceof A.EquationRowNode) {
        type$.PositionDependentMixin_GreenNode._as(t1);
        t2 = this.pos;
        t3 = t2 + 1;
        t2 += t1.get$editingWidth() - 1;
        C.assertHelper(t3 >= -1);
        C.assertHelper(t2 >= -1);
        t1.PositionDependentMixin_range = new C.TextRange(t3, t2);
      }
      t2 = t1._oldOptions;
      if (t2 != null && options === t2) {
        t1 = t1._oldBuildResult;
        t1.toString;
        return t1;
      }
      newChildBuildResults = this._buildChildWidgets$1(t1.computeChildOptions$1(options));
      t2 = t1._oldOptions;
      bypassRebuild = t2 != null && !t1.shouldRebuildWidget$2(t2, options) && C.listEquals(newChildBuildResults, t1._oldChildBuildResults, type$.nullable_BuildResult);
      t1._oldOptions = options;
      t1.set$_oldChildBuildResults(newChildBuildResults);
      if (bypassRebuild) {
        t1 = t1._oldBuildResult;
        t1.toString;
      } else
        t1 = t1._oldBuildResult = t1.buildWidget$2(options, newChildBuildResults);
      return t1;
    },
    _buildChildWidgets$1(childOptions) {
      var _length, _list, index, t1, _this = this;
      type$.List_MathOptions._as(childOptions);
      C.assertHelper(_this.get$children(0).length === childOptions.length);
      if (_this.get$children(0).length === 0)
        return B.List_empty22;
      _length = _this.get$children(0).length;
      _list = J.JSArray_JSArray$allocateFixed(_length, type$.nullable_BuildResult);
      for (index = 0; index < _length; ++index) {
        t1 = _this.get$children(0);
        if (!(index < t1.length))
          return C.ioore(t1, index);
        t1 = t1[index];
        if (t1 == null)
          t1 = null;
        else {
          if (!(index < childOptions.length))
            return C.ioore(childOptions, index);
          t1 = t1.buildWidget$1(childOptions[index]);
        }
        _list[index] = t1;
      }
      return _list;
    },
    set$__SyntaxNode_children_FI(__SyntaxNode_children_FI) {
      this.__SyntaxNode_children_FI = type$.List_nullable_SyntaxNode._as(__SyntaxNode_children_FI);
    }
  };
  A.GreenNode.prototype = {
    toJson$0() {
      return C.LinkedHashMap_LinkedHashMap$_literal(["type", C._rtiToString(C.getRuntimeTypeOfDartObject(this)._rti, null)], type$.String, type$.nullable_Object);
    },
    set$_oldChildBuildResults(_oldChildBuildResults) {
      this._oldChildBuildResults = type$.nullable_List_nullable_BuildResult._as(_oldChildBuildResults);
    }
  };
  A.ParentableNode.prototype = {
    get$editingWidth() {
      var result, _this = this,
        value = _this.__ParentableNode_editingWidth_FI;
      if (value === $) {
        result = _this.computeWidth$0();
        _this.__ParentableNode_editingWidth_FI !== $ && C.throwLateFieldADI("editingWidth");
        _this.__ParentableNode_editingWidth_FI = result;
        value = result;
      }
      return value;
    },
    get$childPositions() {
      var result, _this = this,
        value = _this.__ParentableNode_childPositions_FI;
      if (value === $) {
        result = _this.computeChildPositions$0();
        _this.__ParentableNode_childPositions_FI !== $ && C.throwLateFieldADI("childPositions");
        _this.set$__ParentableNode_childPositions_FI(result);
        value = result;
      }
      return value;
    },
    set$__ParentableNode_childPositions_FI(__ParentableNode_childPositions_FI) {
      this.__ParentableNode_childPositions_FI = type$.List_int._as(__ParentableNode_childPositions_FI);
    }
  };
  A.PositionDependentMixin.prototype = {};
  A.SlotableNode.prototype = {
    get$children(_) {
      var result, _this = this,
        value = _this.__SlotableNode_children_FI;
      if (value === $) {
        result = _this.computeChildren$0();
        _this.__SlotableNode_children_FI !== $ && C.throwLateFieldADI("children");
        _this.set$__SlotableNode_children_FI(result);
        value = result;
      }
      return value;
    },
    computeWidth$0() {
      var t1 = this.get$children(0),
        t2 = C._arrayInstanceType(t1);
      return A.IterableIntegerExtension_get_sum(new C.MappedListIterable(t1, t2._eval$1("int(1)")._as(new A.SlotableNode_computeWidth_closure(this)), t2._eval$1("MappedListIterable<1,int>"))) + 1;
    },
    computeChildPositions$0() {
      var t1, t2, curPos, _i, child, t3,
        result = C._setArrayType([], type$.JSArray_int);
      for (t1 = this.get$children(0), t2 = t1.length, curPos = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        D.JSArray_methods.add$1(result, curPos);
        t3 = child == null ? null : child.get$editingWidth() - 1;
        curPos += t3 == null ? 0 : t3;
      }
      return result;
    },
    set$__SlotableNode_children_FI(__SlotableNode_children_FI) {
      this.__SlotableNode_children_FI = C._instanceType(this)._eval$1("List<SlotableNode.T>")._as(__SlotableNode_children_FI);
    }
  };
  A.TransparentNode.prototype = {
    computeWidth$0() {
      return A.IterableIntegerExtension_get_sum(J.map$1$1$ax(this.children, new A.TransparentNode_computeWidth_closure(), type$.int));
    },
    computeChildPositions$0() {
      var t1 = {};
      t1.curPos = 0;
      return C.List_List$generate(J.get$length$asx(this.children) + 1, new A.TransparentNode_computeChildPositions_closure(t1, this), false, type$.int);
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = C._arrayInstanceType(childBuildResults);
      t2 = t1._eval$1("ExpandIterable<1,BuildResult>");
      return new A.BuildResult(B.Text_mo4, options, 0, 0, C.List_List$of(new C.ExpandIterable(childBuildResults, t1._eval$1("Iterable<BuildResult>(1)")._as(new A.TransparentNode_buildWidget_closure()), t2), false, t2._eval$1("Iterable.E")));
    },
    get$flattenedChildList() {
      var t1, result, _this = this,
        value = _this.__TransparentNode_flattenedChildList_FI;
      if (value === $) {
        t1 = J.expand$1$1$ax(_this.children, new A.TransparentNode_flattenedChildList_closure(), type$.GreenNode);
        result = C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
        _this.__TransparentNode_flattenedChildList_FI !== $ && C.throwLateFieldADI("flattenedChildList");
        _this.set$__TransparentNode_flattenedChildList_FI(result);
        value = result;
      }
      return value;
    },
    get$leftType() {
      var result, _this = this,
        value = _this.__TransparentNode_leftType_FI;
      if (value === $) {
        result = J.$index$asx(_this.children, 0).get$leftType();
        _this.__TransparentNode_leftType_FI !== $ && C.throwLateFieldADI("leftType");
        _this.__TransparentNode_leftType_FI = result;
        value = result;
      }
      return value;
    },
    get$rightType() {
      var result, _this = this,
        value = _this.__TransparentNode_rightType_FI;
      if (value === $) {
        result = J.get$last$ax(_this.children).get$rightType();
        _this.__TransparentNode_rightType_FI !== $ && C.throwLateFieldADI("rightType");
        _this.__TransparentNode_rightType_FI = result;
        value = result;
      }
      return value;
    },
    set$__TransparentNode_flattenedChildList_FI(__TransparentNode_flattenedChildList_FI) {
      this.__TransparentNode_flattenedChildList_FI = type$.List_GreenNode._as(__TransparentNode_flattenedChildList_FI);
    }
  };
  A.EquationRowNode.prototype = {
    computeWidth$0() {
      return A.IterableIntegerExtension_get_sum(J.map$1$1$ax(this.children, new A.EquationRowNode_computeWidth_closure(), type$.int)) + 2;
    },
    computeChildPositions$0() {
      var t1 = {};
      t1.curPos = 1;
      return C.List_List$generate(J.get$length$asx(this.children) + 1, new A.EquationRowNode_computeChildPositions_closure(t1, this), false, type$.int);
    },
    get$flattenedChildList() {
      var t1, result, _this = this,
        value = _this.__EquationRowNode_flattenedChildList_FI;
      if (value === $) {
        t1 = J.expand$1$1$ax(_this.children, new A.EquationRowNode_flattenedChildList_closure(), type$.GreenNode);
        result = C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
        _this.__EquationRowNode_flattenedChildList_FI !== $ && C.throwLateFieldADI("flattenedChildList");
        _this.set$__EquationRowNode_flattenedChildList_FI(result);
        value = result;
      }
      return value;
    },
    get$caretPositions() {
      var result, _this = this,
        value = _this.__EquationRowNode_caretPositions_FI;
      if (value === $) {
        result = _this.computeCaretPositions$0();
        _this.__EquationRowNode_caretPositions_FI !== $ && C.throwLateFieldADI("caretPositions");
        _this.set$__EquationRowNode_caretPositions_FI(result);
        value = result;
      }
      return value;
    },
    computeCaretPositions$0() {
      var t1 = {};
      t1.curPos = 1;
      return C.List_List$generate(this.get$flattenedChildList().length + 1, new A.EquationRowNode_computeCaretPositions_closure(t1, this), false, type$.int);
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2, flattenedBuildResults, flattenedChildOptions, childSpacingConfs, _length, lineChildren, index, t3, t4, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = C._arrayInstanceType(childBuildResults);
      t2 = t1._eval$1("ExpandIterable<1,BuildResult>");
      flattenedBuildResults = C.List_List$of(new C.ExpandIterable(childBuildResults, t1._eval$1("Iterable<BuildResult>(1)")._as(new A.EquationRowNode_buildWidget_closure()), t2), false, t2._eval$1("Iterable.E"));
      t2 = C._arrayInstanceType(flattenedBuildResults);
      t1 = t2._eval$1("MappedListIterable<1,MathOptions>");
      flattenedChildOptions = C.List_List$of(new C.MappedListIterable(flattenedBuildResults, t2._eval$1("MathOptions(1)")._as(new A.EquationRowNode_buildWidget_closure0()), t1), false, t1._eval$1("ListIterable.E"));
      t1 = _this.get$flattenedChildList().length;
      childSpacingConfs = C.List_List$generate(t1, new A.EquationRowNode_buildWidget_closure1(_this, flattenedChildOptions), false, type$._NodeSpacingConf);
      A._traverseNonSpaceNodes(childSpacingConfs, new A.EquationRowNode_buildWidget_closure2());
      A._traverseNonSpaceNodes(childSpacingConfs, new A.EquationRowNode_buildWidget_closure3());
      _this.set$_syntax_tree$_key(0, new C.LabeledGlobalKey(_null, type$.LabeledGlobalKey_State_StatefulWidget));
      _length = flattenedBuildResults.length;
      lineChildren = J.JSArray_JSArray$allocateFixed(_length, type$.LineElement);
      for (t2 = type$.SpaceNode, index = 0; index < _length; ++index) {
        if (!(index < flattenedBuildResults.length))
          return C.ioore(flattenedBuildResults, index);
        t3 = flattenedBuildResults[index];
        t4 = _this.get$flattenedChildList();
        if (!(index < t4.length))
          return C.ioore(t4, index);
        if (t4[index] instanceof A.SpaceNode) {
          t4 = _this.get$flattenedChildList();
          if (!(index < t4.length))
            return C.ioore(t4, index);
          t4 = t2._as(t4[index]).alignerOrSpacer;
        } else
          t4 = false;
        if (!(index < t1))
          return C.ioore(childSpacingConfs, index);
        lineChildren[index] = new A.LineElement(false, _null, childSpacingConfs[index].spacingAfter, t4, t3.widget, _null);
      }
      t1 = A.IterableExtension_get_lastOrNull(flattenedBuildResults, type$.BuildResult);
      t1 = t1 == null ? _null : t1.italic;
      if (t1 == null)
        t1 = 0;
      t2 = flattenedBuildResults.length === 1 ? D.JSArray_methods.get$first(flattenedBuildResults).italic : 0;
      return new A.BuildResult(new A.Consumer(new A.EquationRowNode_buildWidget_closure4(_this, lineChildren, options), _null, _null, type$.Consumer_FlutterMathMode), options, t1, t2, _null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(J.get$length$asx(this.children), options, false, type$.MathOptions);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    get$leftType() {
      var t1 = this.overrideType;
      return t1 == null ? B.AtomType_0 : t1;
    },
    get$rightType() {
      var t1 = this.overrideType;
      return t1 == null ? B.AtomType_0 : t1;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object),
        t3 = J.map$1$1$ax(this.children, new A.EquationRowNode_toJson_closure(), type$.Map_of_String_and_nullable_Object);
      t2.$indexSet(0, "children", C.List_List$of(t3, true, t3.$ti._eval$1("ListIterable.E")));
      t3 = this.overrideType;
      if (t3 != null)
        t2.$indexSet(0, "overrideType", t3);
      t1.addAll$1(0, t2);
      return t1;
    },
    set$_syntax_tree$_key(_, _key) {
      this._syntax_tree$_key = type$.nullable_GlobalKey_State_StatefulWidget._as(_key);
    },
    set$__EquationRowNode_flattenedChildList_FI(__EquationRowNode_flattenedChildList_FI) {
      this.__EquationRowNode_flattenedChildList_FI = type$.List_GreenNode._as(__EquationRowNode_flattenedChildList_FI);
    },
    set$__EquationRowNode_caretPositions_FI(__EquationRowNode_caretPositions_FI) {
      this.__EquationRowNode_caretPositions_FI = type$.List_int._as(__EquationRowNode_caretPositions_FI);
    },
    get$children(receiver) {
      return this.children;
    }
  };
  A._ClipChildrenMixin.prototype = {};
  A.LeafNode.prototype = {
    get$children(_) {
      return B.List_empty24;
    },
    computeChildOptions$1(options) {
      return B.List_empty23;
    },
    get$childPositions() {
      return D.List_empty0;
    },
    get$editingWidth() {
      return 1;
    }
  };
  A.AtomType.prototype = {
    _enumToString$0() {
      return "AtomType." + this._name;
    }
  };
  A.TemporaryNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      type$.List_nullable_BuildResult._as(childBuildResults);
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    get$leftType() {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    get$rightType() {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    get$editingWidth() {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    }
  };
  A.BuildResult.prototype = {};
  A._NodeSpacingConf.prototype = {};
  A._EquationRowNode_ParentableNode_PositionDependentMixin.prototype = {};
  A._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin.prototype = {};
  A._TransparentNode_ParentableNode__ClipChildrenMixin.prototype = {};
  A.Mode.prototype = {
    _enumToString$0() {
      return "Mode." + this._name;
    }
  };
  A.CharacterMetrics.prototype = {};
  A.EnvContext.prototype = {};
  A.EnvSpec.prototype = {};
  A.FunctionContext.prototype = {};
  A.FunctionSpec.prototype = {
    handler$2(arg0, arg1) {
      return this.handler.call$2(arg0, arg1);
    }
  };
  A.CrNode.prototype = {};
  A._LeftRightRightNode.prototype = {};
  A._MiddleNode.prototype = {};
  A._EndEnvironmentNode.prototype = {};
  A.Lexer.prototype = {
    lex$0() {
      var match, t4, t5, t6, text, nlIndex, controlMatch, _this = this,
        _s23_ = "Unexpected character: '",
        t1 = _this.pos,
        t2 = _this.input,
        t3 = t2.length;
      if (t1 === t3)
        return new A.Token("EOF", new A.SourceLocation0(_this, t1, t1));
      t1 = _this.it;
      if (!t1.moveNext$0()) {
        t1 = _this.pos;
        if (!(t1 >= 0 && t1 < t3))
          return C.ioore(t2, t1);
        t2 = t2[t1];
        throw C.wrapException(A.ParseException$(_s23_ + t2 + "'", A.Token$(t2, A.SourceLocation$0(_this, t1, t1 + 1))));
      }
      match = t1.__js_helper$_current;
      if (match == null)
        match = type$.RegExpMatch._as(match);
      t4 = match._match;
      t5 = t4.index;
      t6 = _this.pos;
      if (t5 !== t6) {
        if (!(t6 >= 0 && t6 < t3))
          return C.ioore(t2, t6);
        t1 = t2[t6];
        throw C.wrapException(A.ParseException$(_s23_ + t1 + "'", A.Token$(t1, A.SourceLocation$0(_this, t6, t6 + 1))));
      }
      _this.pos = match.get$end(0);
      if (2 >= t4.length)
        return C.ioore(t4, 2);
      text = t4[2];
      if (text == null)
        text = " ";
      if (text === "%") {
        t4 = t1.__js_helper$_current;
        nlIndex = D.JSString_methods.indexOf$2(t2, "\n", (t4 == null ? type$.RegExpMatch._as(t4) : t4).get$end(0));
        if (nlIndex === -1) {
          _this.pos = t3;
          for (t2 = type$.RegExpMatch; t1.moveNext$0();) {
            t3 = t1.__js_helper$_current;
            t3 = (t3 == null ? t2._as(t3) : t3)._match;
            _this.pos = t3.index + t3[0].length;
          }
          _this.settings.reportNonstrict$2("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)");
        } else {
          t2 = nlIndex + 1;
          t3 = type$.RegExpMatch;
          while (true) {
            t4 = t1.__js_helper$_current;
            t4 = (t4 == null ? t3._as(t4) : t4)._match;
            if (!(t4.index + t4[0].length < t2))
              break;
            if (t1.moveNext$0()) {
              t4 = t1.__js_helper$_current;
              t4 = (t4 == null ? t3._as(t4) : t4)._match;
              _this.pos = t4.index + t4[0].length;
            } else
              break;
          }
        }
        return _this.lex$0();
      }
      controlMatch = $.$get$controlWordWhitespaceRegex().firstMatch$1(text);
      if (controlMatch != null) {
        t1 = controlMatch._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        t1.toString;
        text = t1;
      }
      return new A.Token(text, new A.SourceLocation0(_this, t5, match.get$end(0)));
    },
    $isLexerInterface: 1
  };
  A.MacroExpander.prototype = {
    expandNextToken$0() {
      var t1, expanded, t2, t3;
      for (t1 = this.stack; true;) {
        expanded = this.expandOnce$0();
        if (expanded != null) {
          t2 = expanded.text;
          t3 = t1.length;
          if (t2 === "\\relax") {
            if (0 >= t3)
              return C.ioore(t1, -1);
            t1.pop();
          } else {
            if (0 >= t3)
              return C.ioore(t1, -1);
            return t1.pop();
          }
        }
      }
    },
    expandOnce$1(expandableOnly) {
      var tokens, args, i, tok, t1, t2, $name, expansion, t3, t4, exception, _this = this, _null = null;
      _this.future$0();
      t1 = _this.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t2 = t1.pop();
      $name = t2.text;
      expansion = !t2.noexpand ? _this._getExpansion$1($name) : _null;
      if (expansion == null) {
        t3 = false;
        if (expandableOnly) {
          if (0 >= $name.length)
            return C.ioore($name, 0);
          t3 = $name[0] === "\\" && _this.isDefined$1($name);
        }
        if (t3)
          throw C.wrapException(A.ParseException$("Undefined control sequence: " + $name, _null));
        D.JSArray_methods.add$1(t1, t2);
        return t2;
      }
      if (++_this.expansionCount > 1000)
        throw C.wrapException(A.ParseException$("Too many expansions: infinite loop or need to increase maxExpand setting", _null));
      tokens = expansion.tokens;
      t2 = expansion.numArgs;
      if (t2 !== 0) {
        args = _this.consumeArgs$1(t2);
        t2 = tokens;
        t3 = t2.slice(0);
        tokens = C._setArrayType(t3, C._arrayInstanceType(t2));
        i = J.get$length$asx(tokens) - 1;
        while (true) {
          t2 = i;
          if (typeof t2 !== "number")
            return t2.$ge();
          if (!(t2 >= 0))
            break;
          tok = J.$index$asx(tokens, i);
          if (tok.text === "#") {
            if (J.$eq$(i, 0))
              throw C.wrapException(A.ParseException$("Incomplete placeholder at end of macro body", tok));
            t2 = i;
            if (typeof t2 !== "number")
              return t2.$sub();
            i = t2 - 1;
            tok = J.$index$asx(tokens, i);
            if (tok.text === "#") {
              t2 = tokens;
              t3 = i;
              if (typeof t3 !== "number")
                return t3.$add();
              J.removeAt$1$ax(t2, t3 + 1);
            } else
              try {
                t2 = tokens;
                t3 = i;
                t4 = i;
                if (typeof t4 !== "number")
                  return t4.$add();
                J.replaceRange$3$asx(t2, t3, t4 + 2, J.$index$asx(args, C.int_parse(tok.text, _null) - 1));
              } catch (exception) {
                if (type$.FormatException._is(C.unwrapException(exception)))
                  throw C.wrapException(A.ParseException$("Not a valid argument number", tok));
                else
                  throw exception;
              }
          }
          t2 = i;
          if (typeof t2 !== "number")
            return t2.$sub();
          i = t2 - 1;
        }
      }
      D.JSArray_methods.addAll$1(t1, type$.List_Token._as(tokens));
      return _null;
    },
    expandOnce$0() {
      return this.expandOnce$1(false);
    },
    future$0() {
      var t1 = this.stack;
      if (t1.length === 0)
        D.JSArray_methods.add$1(t1, this.lexer.lex$0());
      return D.JSArray_methods.get$last(t1);
    },
    _getExpansion$1($name) {
      var definition = this.macros.$get$1(0, $name);
      if (definition == null)
        return null;
      return definition.expand.call$1(this);
    },
    consumeArgs$1(numArgs) {
      return C.List_List$generate(numArgs, new A.MacroExpander_consumeArgs_closure(this), true, type$.List_Token);
    },
    consumeSpaces$0() {
      var t1, t2;
      for (t1 = this.stack, t2 = this.lexer; true;) {
        if (t1.length === 0)
          D.JSArray_methods.add$1(t1, t2.lex$0());
        if (D.JSArray_methods.get$last(t1).text === " ") {
          if (0 >= t1.length)
            return C.ioore(t1, -1);
          t1.pop();
        } else
          break;
      }
    },
    isDefined$1($name) {
      var t1 = this.macros;
      return t1.current.containsKey$1(0, $name) || t1.builtins.containsKey$1(0, $name) || B.Map_MYH09.containsKey$1(0, $name) || B.Map_SXdse.containsKey$1(0, $name) || $.$get$functions().containsKey$1(0, $name) || B.Set_oV20z.contains$1(0, $name);
    },
    expandMacroAsText$1($name) {
      var t1,
        tokens = this.expandMacro$1($name);
      if (tokens != null) {
        t1 = C._arrayInstanceType(tokens);
        return new C.MappedListIterable(tokens, t1._eval$1("String(1)")._as(new A.MacroExpander_expandMacroAsText_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "");
      }
      return null;
    },
    expandMacro$1($name) {
      var output, t1, oldStackLength;
      if (this.macros.$get$1(0, $name) == null)
        return null;
      output = C._setArrayType([], type$.JSArray_Token);
      t1 = this.stack;
      oldStackLength = t1.length;
      D.JSArray_methods.add$1(t1, new A.Token($name, null));
      for (; t1.length > oldStackLength;)
        if (this.expandOnce$0() != null) {
          if (0 >= t1.length)
            return C.ioore(t1, -1);
          D.JSArray_methods.add$1(output, t1.pop());
        }
      return output;
    },
    $isMacroContext: 1
  };
  A.MacroDefinition.prototype = {};
  A.MacroExpansion.prototype = {};
  A.Namespace.prototype = {
    $get$1(_, $name) {
      var currentRes = this.current.$index(0, $name);
      if (currentRes != null)
        return currentRes;
      return this.builtins.$index(0, $name);
    },
    $set$2(_, $name, value) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(value);
      t1 = _this.undefStack;
      if (t1.length !== 0)
        D.JSArray_methods.get$last(t1).$indexSet(0, $name, _this.current.$index(0, $name));
      _this.current.$indexSet(0, $name, value);
    },
    endGroup$0() {
      var t1 = this.undefStack,
        t2 = t1.length;
      if (t2 === 0)
        throw C.wrapException(A.ParseException$("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug", null));
      if (0 >= t2)
        return C.ioore(t1, -1);
      t1.pop().forEach$1(0, new A.Namespace_endGroup_closure(this));
    }
  };
  A.ParseException.prototype = {
    ParseException$2(message, token) {
      var input, start, end,
        t1 = this.token,
        loc = t1 == null ? null : t1.loc;
      if (loc != null && loc.start <= loc.end) {
        input = loc.lexer.input;
        start = loc.start;
        end = loc.end;
        C.stringReplaceAllFuncUnchecked(D.JSString_methods.substring$2(input, start, end), C.RegExp_RegExp("[^]", true, false, false, false), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new A.ParseException_closure())), null);
        if (start > 15)
          D.JSString_methods.substring$2(input, start - 15, start);
        else
          D.JSString_methods.substring$2(input, 0, start);
        t1 = end + 15;
        if (t1 < input.length)
          D.JSString_methods.substring$2(input, end, t1);
        else
          D.JSString_methods.substring$1(input, end);
      }
    },
    $isException: 1,
    $isFlutterMathException: 1
  };
  A.TexParser.prototype = {
    parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(breakOnInfix, breakOnTokenText, infixArgumentMode) {
      var lex, funcData, atom, t1, t2, t3, t4, t5, t6, atom0, _this = this,
        body = C._setArrayType([], type$.JSArray_GreenNode);
      for (t1 = breakOnTokenText != null, t2 = _this.argParsingContexts, t3 = type$.GreenNode, t4 = type$.FunctionSpec_GreenNode, t5 = t2.$ti._precomputed1; true;) {
        if (_this.mode === B.Mode_0)
          _this.consumeSpaces$0();
        lex = _this.fetch$0(0);
        if (B.Set_u2wkf.contains$1(0, lex.text))
          break;
        if (t1 && lex.text === breakOnTokenText)
          break;
        funcData = $.$get$functions().$index(0, lex.text);
        if (funcData != null && funcData.infix) {
          if (infixArgumentMode)
            throw C.wrapException(A.ParseException$("only one infix operator per group", lex));
          if (breakOnInfix)
            break;
          _this.nextToken = null;
          t2._collection$_add$1(0, t5._as(new A.ArgumentParsingContext(lex.text, t4._as(funcData))));
          try {
            atom = funcData.handler$2(_this, new A.FunctionContext(lex.text, breakOnTokenText, C.List_List$of(body, false, t3)));
            J.clear$0$ax(body);
            J.add$1$ax(body, atom);
          } finally {
            t6 = lex.text;
            C.assertHelper(t2.get$last(0).funcName === t6);
            t2.removeLast$0(0);
          }
        } else {
          atom0 = _this.parseAtom$1(breakOnTokenText);
          if (atom0 == null)
            break;
          J.add$1$ax(body, atom0);
        }
      }
      return body;
    },
    parseExpression$1$breakOnInfix(breakOnInfix) {
      return this.parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(breakOnInfix, null, false);
    },
    parseExpression$2$breakOnInfix$breakOnTokenText(breakOnInfix, breakOnTokenText) {
      return this.parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(breakOnInfix, breakOnTokenText, false);
    },
    parseExpression$2$breakOnTokenText$infixArgumentMode(breakOnTokenText, infixArgumentMode) {
      return this.parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(false, breakOnTokenText, infixArgumentMode);
    },
    expect$2$consume(text, consume) {
      var _this = this;
      if (_this.fetch$0(0).text !== text)
        throw C.wrapException(A.ParseException$("Expected '" + text + "', got '" + _this.fetch$0(0).text + "'", _this.fetch$0(0)));
      if (consume)
        _this.nextToken = null;
    },
    expect$1(text) {
      return this.expect$2$consume(text, true);
    },
    consumeSpaces$0() {
      for (; this.fetch$0(0).text === " ";)
        this.nextToken = null;
    },
    parseAtom$1(breakOnTokenText) {
      var scriptsResult, t1, t2, t3, t4, res, _null = null,
        base = this.parseGroup$4$breakOnTokenText$greediness$optional("atom", breakOnTokenText, _null, false);
      if (this.mode === B.Mode_1)
        return base;
      scriptsResult = this.parseScripts$1$allowLimits(base instanceof A.EquationRowNode && base.overrideType === B.AtomType_1);
      t1 = scriptsResult.subscript;
      t2 = t1 == null;
      if (!(t2 && scriptsResult.superscript == null))
        if (scriptsResult.limits !== true) {
          t2 = base == null ? _null : A.GreenNodeWrappingExt_wrapWithEquationRow(base);
          if (t2 == null)
            t2 = A.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null);
          return A.MultiscriptsNode$(t2, t1, scriptsResult.superscript);
        } else {
          t3 = scriptsResult.superscript;
          if (t3 != null) {
            t4 = base == null ? _null : A.GreenNodeWrappingExt_wrapWithEquationRow(base);
            res = A.OverNode$(t3, t4 == null ? A.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null) : t4, false);
          } else
            res = base;
          if (!t2) {
            t2 = res == null ? _null : A.GreenNodeWrappingExt_wrapWithEquationRow(res);
            res = A.UnderNode$(t2 == null ? A.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null) : t2, t1);
          }
          return res;
        }
      else
        return base;
    },
    parseScripts$1$allowLimits(allowLimits) {
      var t1, t2, limits, superscript, subscript, lex, t3, superscriptList, _this = this, _null = null,
        _s18_ = "Double superscript";
      $label0$1:
        for (t1 = type$.JSArray_GreenNode, t2 = !allowLimits, limits = _null, superscript = limits, subscript = superscript; true;) {
          _this.consumeSpaces$0();
          lex = _this.fetch$0(0);
          t3 = lex.text;
          switch (t3) {
            case "\\limits":
            case "\\nolimits":
              if (t2)
                throw C.wrapException(A.ParseException$("Limit controls must follow a math operator", lex));
              limits = t3 === "\\limits";
              _this.nextToken = null;
              break;
            case "^":
              if (superscript != null)
                throw C.wrapException(A.ParseException$(_s18_, lex));
              superscript = A.GreenNodeWrappingExt_wrapWithEquationRow(_this._handleScript$0());
              break;
            case "_":
              if (subscript != null)
                throw C.wrapException(A.ParseException$("Double subscript", lex));
              subscript = A.GreenNodeWrappingExt_wrapWithEquationRow(_this._handleScript$0());
              break;
            case "'":
              if (superscript != null)
                throw C.wrapException(A.ParseException$(_s18_, lex));
              superscriptList = C._setArrayType([new A.SymbolNode("\u2032", false, _null, _null, _this.mode)], t1);
              _this.nextToken = null;
              for (; _this.fetch$0(0).text === "'";) {
                D.JSArray_methods.add$1(superscriptList, new A.SymbolNode("\u2032", false, _null, _null, _this.mode));
                _this.nextToken = null;
              }
              if (_this.fetch$0(0).text === "^")
                D.JSArray_methods.addAll$1(superscriptList, A.GreenNodeWrappingExt_expandEquationRow(_this._handleScript$0()));
              superscript = A.GreenNodeListWrappingExt_wrapWithEquationRow(superscriptList);
              break;
            default:
              break $label0$1;
          }
        }
      return new A.ScriptsParsingResults(subscript, superscript, limits);
    },
    parseScripts$0() {
      return this.parseScripts$1$allowLimits(false);
    },
    _handleScript$0() {
      var group,
        symbolToken = this.fetch$0(0),
        symbol = symbolToken.text;
      this.nextToken = null;
      group = this.parseGroup$4$consumeSpaces$greediness$optional(symbol === "_" ? "subscript" : "superscript", true, 1, false);
      if (group == null)
        throw C.wrapException(A.ParseException$("Expected group after '" + symbol + "'", symbolToken));
      return group;
    },
    fetch$0(_) {
      var nextToken = this.nextToken;
      if (nextToken == null)
        return this.nextToken = this.macroExpander.expandNextToken$0();
      return nextToken;
    },
    parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, breakOnTokenText, consumeSpaces, greediness, mode, optional) {
      var firstToken, text, t2, t3, expression, result, _this = this,
        outerMode = _this.mode,
        t1 = mode != null;
      if (t1) {
        _this.mode = mode;
        _this.macroExpander.mode = mode;
      }
      if (consumeSpaces)
        _this.consumeSpaces$0();
      firstToken = _this.fetch$0(0);
      text = firstToken.text;
      if (optional)
        t2 = text === "[";
      else
        t2 = text === "{" || text === "\\begingroup";
      if (t2) {
        _this.nextToken = null;
        t2 = B.Map_rjIXC.$index(0, text);
        t2.toString;
        t3 = _this.macroExpander.macros;
        D.JSArray_methods.add$1(t3.undefStack, C.LinkedHashMap_LinkedHashMap$_empty(type$.String, t3.$ti._eval$1("1?")));
        expression = _this.parseExpression$2$breakOnInfix$breakOnTokenText(false, t2);
        _this.expect$1(t2);
        t3.endGroup$0();
        result = A.GreenNodeListWrappingExt_wrapWithEquationRow(expression);
      } else if (optional)
        result = null;
      else {
        result = _this.parseFunction$3(breakOnTokenText, $name, greediness);
        if (result == null)
          result = _this._parseSymbol$0();
        if (result == null) {
          if (0 >= text.length)
            return C.ioore(text, 0);
          t2 = text[0] === "\\" && !B.Set_oV20z.contains$1(0, text);
        } else
          t2 = false;
        if (t2) {
          t2 = A.ParseException$("Undefined control sequence: " + text, firstToken);
          throw C.wrapException(t2);
        }
      }
      if (t1) {
        _this.mode = outerMode;
        _this.macroExpander.mode = outerMode;
      }
      return result;
    },
    parseGroup$5$consumeSpaces$greediness$mode$optional($name, consumeSpaces, greediness, mode, optional) {
      return this.parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, null, consumeSpaces, greediness, mode, optional);
    },
    parseGroup$4$consumeSpaces$greediness$optional($name, consumeSpaces, greediness, optional) {
      return this.parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, null, consumeSpaces, greediness, null, optional);
    },
    parseGroup$4$breakOnTokenText$greediness$optional($name, breakOnTokenText, greediness, optional) {
      return this.parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, breakOnTokenText, false, greediness, null, optional);
    },
    parseFunction$3(breakOnTokenText, $name, greediness) {
      var context, t1, t2, _this = this,
        _s20_ = "Can't use function '",
        token = _this.fetch$0(0),
        func = token.text,
        funcData = $.$get$functions().$index(0, func);
      if (funcData == null)
        return null;
      _this.nextToken = null;
      if (greediness != null && funcData.greediness <= greediness) {
        t1 = C.S(func);
        t2 = $name != null ? " as " + $name : "";
        throw C.wrapException(A.ParseException$("Got function '" + t1 + "' with no arguments " + t2, token));
      } else {
        t1 = _this.mode;
        if (t1 === B.Mode_1 && !funcData.allowedInText)
          throw C.wrapException(A.ParseException$(_s20_ + C.S(func) + "' in text mode", token));
        else if (t1 === B.Mode_0 && !funcData.allowedInMath)
          throw C.wrapException(A.ParseException$(_s20_ + C.S(func) + "' in math mode", token));
      }
      context = new A.FunctionContext(func, breakOnTokenText, B.List_empty24);
      t1 = _this.argParsingContexts;
      t1._collection$_add$1(0, t1.$ti._precomputed1._as(new A.ArgumentParsingContext(C._asString(func), type$.FunctionSpec_GreenNode._as(funcData))));
      try {
        t2 = funcData.handler$2(_this, context);
        return t2;
      } finally {
        t2 = C._asString(func);
        C.assertHelper(t1.get$last(0).funcName === t2);
        t1.removeLast$0(0);
      }
    },
    get$currArgParsingContext() {
      return this.argParsingContexts.get$last(0);
    },
    _assertOptionalBeforeReturn$2$optional(value, optional) {
      if (!optional && value == null)
        throw C.wrapException(A.ParseException$("Expected group after " + this.get$currArgParsingContext().funcName, this.fetch$0(0)));
    },
    parseArgColor$1$optional(optional) {
      var i, consumeSpaces, res, t2, match3, color, match2, t3, match1, _this = this,
        t1 = _this.argParsingContexts;
      t1.get$last(0).newArgument$1$optional(false);
      i = t1.get$last(0).currArgNum;
      if (i <= 0)
        if (i === 0) {
          t1 = _this.mode === B.Mode_0;
          consumeSpaces = t1;
        } else
          consumeSpaces = false;
      else
        consumeSpaces = true;
      if (consumeSpaces)
        _this.consumeSpaces$0();
      res = _this._parseStringGroup$2$optional("color", false);
      if (res == null) {
        _this._assertOptionalBeforeReturn$2$optional(null, false);
        return null;
      }
      t1 = $.$get$TexParser__parseColorRegex3();
      t2 = res.text;
      match3 = t1.firstMatch$1(t2);
      if (match3 != null) {
        t1 = match3._match;
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        color = B.Map_mi3Hd.$index(0, t1[0].toLowerCase());
        if (color != null)
          return color;
      }
      match2 = $.$get$TexParser__parseColorRegex2().firstMatch$1(t2);
      if (match2 != null) {
        t1 = match2._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t2 = t1[1];
        t2.toString;
        t2 = C.int_parse(t2, 16);
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t3 = t1[2];
        t3.toString;
        t3 = C.int_parse(t3, 16);
        if (3 >= t1.length)
          return C.ioore(t1, 3);
        t1 = t1[3];
        t1.toString;
        return C.Color$fromARGB(255, t2, t3, C.int_parse(t1, 16));
      }
      match1 = $.$get$TexParser__parseColorRegex1().firstMatch$1(t2);
      if (match1 != null) {
        t1 = match1._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t2 = t1[1];
        t2.toString;
        t2 = C.int_parse(D.JSString_methods.$mul(t2, 2), 16);
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t3 = t1[2];
        t3.toString;
        t3 = C.int_parse(D.JSString_methods.$mul(t3, 2), 16);
        if (3 >= t1.length)
          return C.ioore(t1, 3);
        t1 = t1[3];
        t1.toString;
        return C.Color$fromARGB(255, t2, t3, C.int_parse(D.JSString_methods.$mul(t1, 2), 16));
      }
      throw C.wrapException(A.ParseException$("Invalid color: '" + t2 + "'", null));
    },
    parseArgSize$1$optional(optional) {
      var i, consumeSpaces, res, t2, match, unit, t3, _this = this,
        t1 = _this.argParsingContexts;
      t1.get$last(0).newArgument$1$optional(optional);
      i = t1.get$last(0).currArgNum;
      if (!(i > 0 && !optional))
        consumeSpaces = i === 0 && !optional && _this.mode === B.Mode_0;
      else
        consumeSpaces = true;
      if (consumeSpaces)
        _this.consumeSpaces$0();
      t1 = !optional;
      res = t1 && _this.fetch$0(0).text !== "{" ? _this._parseRegexGroup$2($.$get$TexParser__parseSizeRegex(), "size") : _this._parseStringGroup$2$optional("size", optional);
      if (res == null) {
        _this._assertOptionalBeforeReturn$2$optional(null, optional);
        return null;
      }
      if (t1 && res.text.length === 0)
        return null;
      t1 = $.$get$TexParser__parseMeasurementRegex();
      t2 = res.text;
      match = t1.firstMatch$1(t2);
      if (match == null)
        throw C.wrapException(A.ParseException$("Invalid size: '" + t2 + "'", res));
      t1 = match._match;
      if (3 >= t1.length)
        return C.ioore(t1, 3);
      t2 = t1[3];
      t2.toString;
      unit = B.Map_VFR9N.$index(0, t2);
      if (unit == null)
        throw C.wrapException(A.ParseException$("Invalid unit: '" + C.S(match.group$1(3)) + "'", res));
      t2 = t1.length;
      if (1 >= t2)
        return C.ioore(t1, 1);
      t3 = t1[1];
      t3.toString;
      if (2 >= t2)
        return C.ioore(t1, 2);
      t1 = t1[2];
      t1.toString;
      return new A.Measurement(C.double_parse(t3 + t1), unit);
    },
    parseArgNode$2$mode$optional(mode, optional) {
      var i, consumeSpaces, res, _this = this,
        t1 = _this.argParsingContexts;
      t1.get$last(0).newArgument$1$optional(optional);
      i = t1.get$last(0).currArgNum;
      if (!(i > 0 && !optional))
        consumeSpaces = i === 0 && !optional && _this.mode === B.Mode_0;
      else
        consumeSpaces = true;
      res = _this.parseGroup$5$consumeSpaces$greediness$mode$optional("argument to " + t1.get$last(0).funcName, consumeSpaces, t1.get$last(0).funcData.greediness, mode, optional);
      _this._assertOptionalBeforeReturn$2$optional(res, optional);
      return res;
    },
    parseArgHbox$1$optional(optional) {
      var t1, _null = null,
        res = this.parseArgNode$2$mode$optional(B.Mode_1, false);
      if (res instanceof A.EquationRowNode)
        return A.EquationRowNode$(C._setArrayType([A.StyleNode$(res.children, new A.OptionsDiff(B.MathStyle_2, _null, _null, _null, _null))], type$.JSArray_GreenNode), _null);
      else {
        if (res == null)
          t1 = _null;
        else {
          t1 = A.IterableNullableExtension_whereNotNull(res.get$children(res), type$.GreenNode);
          t1 = C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
        }
        if (t1 == null)
          t1 = C._setArrayType([], type$.JSArray_GreenNode);
        return A.StyleNode$(t1, new A.OptionsDiff(B.MathStyle_2, _null, _null, _null, _null));
      }
    },
    _parseStringGroup$2$optional(modeName, optional) {
      var outerMode, firstToken, lastToken, str, nested, nextToken, t1, t2, _this = this,
        groupBegin = optional ? "[" : "{",
        groupEnd = optional ? "]" : "}",
        beginToken = _this.fetch$0(0);
      if (beginToken.text !== groupBegin)
        if (optional)
          return null;
      outerMode = _this.mode;
      _this.mode = B.Mode_1;
      _this.expect$1(groupBegin);
      firstToken = _this.fetch$0(0);
      lastToken = firstToken;
      str = "";
      nested = 0;
      while (true) {
        nextToken = _this.fetch$0(0);
        t1 = nextToken.text;
        t2 = t1 === groupEnd;
        if (!!t2)
          break;
        if (t1 === "EOF")
          throw C.wrapException(A.ParseException$("Unexpected end of input in " + modeName, A.Token_range(firstToken, lastToken, str)));
        else if (t1 === groupBegin)
          ++nested;
        else if (t2)
          --nested;
        str += t1;
        _this.nextToken = null;
        lastToken = nextToken;
      }
      _this.expect$1(groupEnd);
      _this.mode = outerMode;
      return new A.Token(str, A.SourceLocation_range(firstToken, lastToken));
    },
    _parseRegexGroup$2(regex, modeName) {
      var firstToken, t1, lastToken, str, nextToken, t2, t3, _this = this,
        outerMode = _this.mode;
      _this.mode = B.Mode_1;
      firstToken = _this.fetch$0(0);
      t1 = regex._nativeRegExp;
      lastToken = firstToken;
      str = "";
      while (true) {
        nextToken = _this.fetch$0(0);
        t2 = nextToken.text;
        if (t2 !== "EOF")
          t3 = t1.test(str + t2);
        else
          t3 = false;
        if (!t3)
          break;
        str += t2;
        _this.nextToken = null;
        lastToken = nextToken;
      }
      if (str.length === 0)
        throw C.wrapException(A.ParseException$("Invalid " + modeName + ": '" + firstToken.text + "'", firstToken));
      _this.mode = outerMode;
      return new A.Token(str, A.SourceLocation_range(firstToken, lastToken));
    },
    _parseSymbol$0() {
      var arg, t2, t3, match, i, accent, combiningMarks, symbolCommandConfig, symbol, _this = this, _null = null,
        _s21_ = "unicodeTextInMathMode",
        _s19_ = '" used in math mode',
        nucleus = _this.fetch$0(0),
        text = nucleus.text,
        t1 = $.$get$TexParser__parseVerbRegex();
      if (t1._nativeRegExp.test(text)) {
        _this.nextToken = null;
        arg = D.JSString_methods.substring$1(text, 5);
        if (0 >= arg.length)
          return C.ioore(arg, 0);
        if (arg[0] === "*")
          arg = D.JSString_methods.substring$1(arg, 1);
        t1 = arg.length;
        if (t1 >= 2) {
          if (0 >= t1)
            return C.ioore(arg, 0);
          t2 = arg[0];
          t3 = t1 - 1;
          if (!(t3 >= 0))
            return C.ioore(arg, t3);
          t3 = t2 !== arg[t3];
          t2 = t3;
        } else
          t2 = true;
        if (t2)
          throw C.wrapException(A.ParseException$("\\verb assertion failed --\n                    please report what input caused this bug", _null));
        t2 = type$.MappedListIterable_String_SymbolNode;
        return A.EquationRowNode$(C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(arg, 1, t1 - 1).split(""), type$.JSArray_String), type$.SymbolNode_Function_String._as(new A.TexParser__parseSymbol_closure()), t2), false, t2._eval$1("ListIterable.E")), _null);
      }
      if (0 >= text.length)
        return C.ioore(text, 0);
      if (B.Map_3Abhf.containsKey$1(0, text[0]) && !B.Map_Dgm7a.$index(0, _this.mode).containsKey$1(0, text[0]))
        if (_this.mode === B.Mode_0)
          _this.settings.reportNonstrict$3(_s21_, 'Accented Unicode text character "' + text[0] + _s19_, nucleus);
      match = $.$get$combiningDiacriticalMarksEndRegex().firstMatch$1(text);
      if (match != null) {
        t1 = match._match;
        text = D.JSString_methods.substring$2(text, 0, t1.index);
        i = 0;
        while (true) {
          if (0 >= t1.length)
            return C.ioore(t1, 0);
          t2 = t1[0];
          if (!(i < t2.length))
            break;
          t2 = t2;
          if (!(i < t2.length))
            return C.ioore(t2, i);
          accent = t2[i];
          if (!B.Map_1zAbk.containsKey$1(0, accent))
            throw C.wrapException(A.ParseException$("Unknown accent ' " + accent + "'", nucleus));
          if (B.Map_1zAbk.$index(0, accent).$index(0, _this.mode) == null)
            throw C.wrapException(A.ParseException$("Accent " + accent + " unsupported in " + _this.mode.toString$0(0) + " mode", nucleus));
          ++i;
        }
        t1 = t2;
        t1.toString;
        combiningMarks = t1;
      } else
        combiningMarks = "";
      symbolCommandConfig = B.Map_Dgm7a.$index(0, _this.mode).$index(0, text);
      if (symbolCommandConfig != null) {
        if (_this.mode === B.Mode_0 && B.Set_jXWE3.contains$1(0, text)) {
          if (0 >= text.length)
            return C.ioore(text, 0);
          _this.settings.reportNonstrict$3(_s21_, 'Latin-1/Unicode text character "' + text[0] + _s19_, nucleus);
        }
        t1 = _this.mode;
        t2 = symbolCommandConfig.symbol;
        t3 = symbolCommandConfig.variantForm;
        symbol = A.SymbolNode$(t1, symbolCommandConfig.type, _null, t2 + combiningMarks, t3);
      } else {
        t1 = text.length;
        if (t1 !== 0) {
          if (0 >= t1)
            return C.ioore(text, 0);
          t2 = text.charCodeAt(0) >= 128;
        } else
          t2 = false;
        if (t2) {
          if (0 >= t1)
            return C.ioore(text, 0);
          if (!A.supportedCodepoint(text.charCodeAt(0)))
            _this.settings.reportNonstrict$3("unknownSymbol", 'Unrecognized Unicode character "' + text[0] + '" (' + text.charCodeAt(0) + ")", nucleus);
          else if (_this.mode === B.Mode_0)
            _this.settings.reportNonstrict$3(_s21_, 'Unicode text character "' + text[0] + ' used in math mode"', nucleus);
          symbol = A.SymbolNode$(_this.mode, B.AtomType_0, _null, text + combiningMarks, false);
        } else
          return _null;
      }
      _this.nextToken = null;
      return symbol;
    }
  };
  A.ArgumentParsingContext.prototype = {
    newArgument$1$optional(optional) {
      ++this.currArgNum;
      C.assertHelper(this._optional || !optional);
      this._optional = optional;
    }
  };
  A.ScriptsParsingResults.prototype = {};
  A.Strict.prototype = {
    _enumToString$0() {
      return "Strict." + this._name;
    }
  };
  A.TexParserSettings.prototype = {
    reportNonstrict$3(errorCode, errorMsg, token) {
      var strict = this.strict;
      if (!(strict !== B.Strict_3))
        strict = B.Strict_1;
      switch (strict.index) {
        case 0:
          return;
        case 2:
          throw C.wrapException(A.ParseException$("LaTeX-incompatible input and strict mode is set to 'error': " + errorMsg + " [" + errorCode + "]", token));
        case 1:
          break;
        default:
          strict.toString$0(0);
      }
    },
    reportNonstrict$2(errorCode, errorMsg) {
      return this.reportNonstrict$3(errorCode, errorMsg, null);
    }
  };
  A.SourceLocation0.prototype = {};
  A.TexSymbolConfig.prototype = {};
  A.Token.prototype = {};
  A.CustomLayoutDelegate.prototype = {
    additionalPaint$2(context, offset) {
    }
  };
  A.CustomLayoutParentData.prototype = {
    toString$0(_) {
      return this.super$BoxParentData$toString(0) + "; id=" + C.S(this.id);
    },
    set$id(_, id) {
      this.id = this.$ti._eval$1("1?")._as(id);
    }
  };
  A.CustomLayoutId.prototype = {
    applyParentData$1(renderObject) {
      var parentData, t1, targetParent;
      C.assertHelper(renderObject.parentData instanceof A.CustomLayoutParentData);
      parentData = type$.CustomLayoutParentData_dynamic._as(renderObject.parentData);
      t1 = this.id;
      if (parentData.id !== t1) {
        parentData.set$id(0, t1);
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    },
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("id", this.id, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, this.$ti._precomputed1));
    },
    get$debugTypicalAncestorWidgetClass() {
      return C.createRuntimeType(this.$ti._eval$1("CustomLayout<1>"));
    }
  };
  A.CustomLayout.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderCustomLayout(this.delegate, 0, null, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer), this.$ti._eval$1("RenderCustomLayout<1>"));
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderCustomLayout_dynamic._as(renderObject);
      t1 = renderObject.$ti._eval$1("CustomLayoutDelegate<1>")._as(this.delegate);
      if (renderObject._custom_layout0$_delegate !== t1)
        renderObject.markNeedsLayout$0();
      renderObject.set$_custom_layout0$_delegate(t1);
    }
  };
  A.RenderCustomLayout.prototype = {
    setupParentData$1(child) {
      var t1;
      type$.RenderBox._as(child);
      t1 = this.$ti._eval$1("CustomLayoutParentData<1>");
      if (!t1._is(child.parentData))
        child.parentData = new A.CustomLayoutParentData(null, null, D.Offset_0_0, t1);
    },
    get$childrenTable() {
      var childParentData, child, _box_0 = {},
        t1 = this.$ti,
        res = C.LinkedHashMap_LinkedHashMap$_empty(t1._precomputed1, type$.RenderBox),
        t2 = _box_0.child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = t1._eval$1("CustomLayoutParentData<1>"); t2 != null; t2 = child) {
        childParentData = t1._as(t2.parentData);
        C.assertHelper(new A.RenderCustomLayout_childrenTable_closure(_box_0, childParentData, res).call$0());
        t2 = childParentData.id;
        t2.toString;
        res.$indexSet(0, t2, _box_0.child);
        child = childParentData.ContainerParentDataMixin_nextSibling;
        _box_0.child = child;
      }
      return res;
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new A.RenderCustomLayout_computeMinIntrinsicWidth_closure(), this.get$childrenTable(), height, false, D.Axis_0);
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new A.RenderCustomLayout_computeMaxIntrinsicWidth_closure(), this.get$childrenTable(), height, true, D.Axis_0);
    },
    computeMinIntrinsicHeight$1(width) {
      C._asDouble(width);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new A.RenderCustomLayout_computeMinIntrinsicHeight_closure(), this.get$childrenTable(), width, false, D.Axis_1);
    },
    computeMaxIntrinsicHeight$1(width) {
      C._asDouble(width);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new A.RenderCustomLayout_computeMaxIntrinsicHeight_closure(), this.get$childrenTable(), width, true, D.Axis_1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this._custom_layout0$_delegate.computeDistanceToActualBaseline$2(baseline, this.get$childrenTable());
    },
    performLayout$0() {
      this.set$size(0, this._custom_layout0$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false));
    },
    computeDryLayout$1(constraints) {
      return this._custom_layout0$_computeLayout$1(constraints);
    },
    _custom_layout0$_computeLayout$2$dry(constraints, dry) {
      return constraints.constrain$1(this._custom_layout0$_delegate.computeLayout$3$dry(constraints, this.get$childrenTable(), dry));
    },
    _custom_layout0$_computeLayout$1(constraints) {
      return this._custom_layout0$_computeLayout$2$dry(constraints, true);
    },
    paint$2(context, offset) {
      this.defaultPaint$2(context, offset);
      this._custom_layout0$_delegate.additionalPaint$2(context, offset);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    set$_custom_layout0$_delegate(_delegate) {
      this._custom_layout0$_delegate = this.$ti._eval$1("CustomLayoutDelegate<1>")._as(_delegate);
    }
  };
  A.AxisConfiguration.prototype = {};
  A.IntrinsicLayoutDelegate.prototype = {
    getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(childSize, childrenTable, extent, max, sizingDirection) {
      var t1, t2, childrenHeights, _this = this;
      type$.double_Function_RenderBox_double._as(childSize);
      t1 = C._instanceType(_this);
      t1._eval$1("Map<IntrinsicLayoutDelegate.T,RenderBox>")._as(childrenTable);
      t1 = t1._eval$1("IntrinsicLayoutDelegate.T");
      t2 = type$.double;
      if (sizingDirection === D.Axis_0)
        return _this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenTable.map$2$1(childrenTable, new A.IntrinsicLayoutDelegate_getIntrinsicSize_closure(_this, childSize), t1, t2), true).size;
      else {
        childrenHeights = childrenTable.map$2$1(childrenTable, new A.IntrinsicLayoutDelegate_getIntrinsicSize_closure0(_this, childSize), t1, t2);
        return _this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenHeights, childrenHeights, true).size;
      }
    },
    computeLayout$3$dry(constraints, childrenTable, dry) {
      var t2, sizeMap, t3, t4, childEntry, t5, t6, boxSize, hconf, vconf, _this = this,
        t1 = C._instanceType(_this);
      t1._eval$1("Map<IntrinsicLayoutDelegate.T,RenderBox>")._as(childrenTable);
      t1 = t1._eval$1("IntrinsicLayoutDelegate.T");
      t2 = type$.Size;
      sizeMap = C.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      for (t3 = new C.LinkedHashMapEntriesIterable(childrenTable, C._instanceType(childrenTable)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0), t4 = type$.BoxConstraints; t3.moveNext$0();) {
        childEntry = t3.__js_helper$_current;
        t5 = childEntry.key;
        t6 = childEntry.value;
        if (dry)
          boxSize = t6._computeIntrinsics$2$3(D.C__DryLayout, D.BoxConstraints_0Yu, t6.get$_computeDryLayout(), t4, t2);
        else {
          t6.layout$2$parentUsesSize(D.BoxConstraints_0Yu, true);
          boxSize = t6.get$size(0);
        }
        sizeMap.$indexSet(0, t5, boxSize);
      }
      t2 = type$.double;
      hconf = _this.performHorizontalIntrinsicLayout$1$childrenWidths(sizeMap.map$2$1(sizeMap, new A.IntrinsicLayoutDelegate_computeLayout_closure(_this), t1, t2));
      t3 = sizeMap.map$2$1(sizeMap, new A.IntrinsicLayoutDelegate_computeLayout_closure0(_this), t1, t2);
      vconf = _this.performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenTable.map$2$1(childrenTable, new A.IntrinsicLayoutDelegate_computeLayout_closure1(_this, dry), t1, t2), t3);
      if (!dry)
        childrenTable.forEach$1(0, new A.IntrinsicLayoutDelegate_computeLayout_closure2(_this, hconf, vconf));
      return new C.Size(hconf.size, vconf.size);
    }
  };
  A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.CustomLayoutParentData_dynamic; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.CustomLayoutParentData_dynamic; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A.EqnArrayParentData.prototype = {};
  A.EqnArray.prototype = {
    createRenderObject$1(context) {
      var _this = this;
      return A.RenderEqnArray$(_this.arrayskip, _this.hlines, _this.jotSize, _this.rowSpacings, _this.ruleThickness);
    }
  };
  A.RenderEqnArray.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof A.EqnArrayParentData))
        child.parentData = new A.EqnArrayParentData(null, null, D.Offset_0_0);
    },
    computeDryLayout$1(constraints) {
      return this._computeLayout$1(constraints);
    },
    performLayout$0() {
      this.set$size(0, this._computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false));
    },
    _computeLayout$2$dry(constraints, dry) {
      var t2, t3, boxSize, childColWidth, i, t4, t5, childSize, nonAligningChildrenWidth, aligningChildrenWidth, width, t6, t7, t8, t9, t10, t11, index, vPos, childParentData, t12, t13, hPos, layoutHeight, layoutDepth, _this = this,
        nonAligningSizes = C._setArrayType([], type$.JSArray_Size),
        child = _this.ContainerRenderObjectMixin__firstChild,
        colWidths = C._setArrayType([], type$.JSArray_double),
        t1 = type$.Size,
        sizeMap = C.LinkedHashMap_LinkedHashMap$_empty(type$.RenderBox, t1);
      for (t2 = type$.EqnArrayParentData, t3 = type$.BoxConstraints; child != null;) {
        if (child instanceof A.RenderLine) {
          child.set$alignColWidth(null);
          if (dry)
            boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, D.BoxConstraints_0Yu, child.get$_computeDryLayout(), t3, t1);
          else {
            child.layout$2$parentUsesSize(D.BoxConstraints_0Yu, true);
            boxSize = child.get$size(0);
          }
          childColWidth = child.alignColWidth;
          if (childColWidth != null)
            for (i = 0; t4 = childColWidth.length, i < t4; ++i)
              if (i >= colWidths.length)
                D.JSArray_methods.add$1(colWidths, childColWidth[i]);
              else {
                t5 = colWidths[i];
                if (!(i < t4))
                  return C.ioore(childColWidth, i);
                D.JSArray_methods.$indexSet(colWidths, i, Math.max(t5, childColWidth[i]));
              }
          else
            D.JSArray_methods.add$1(nonAligningSizes, boxSize);
          childSize = boxSize;
        } else {
          if (dry)
            boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, D.BoxConstraints_0Yu, child.get$_computeDryLayout(), t3, t1);
          else {
            child.layout$2$parentUsesSize(D.BoxConstraints_0Yu, true);
            boxSize = child.get$size(0);
          }
          if (0 >= colWidths.length)
            return C.ioore(colWidths, 0);
          D.JSArray_methods.$indexSet(colWidths, 0, Math.max(colWidths[0], boxSize._dx));
          childSize = boxSize;
        }
        sizeMap.$indexSet(0, child, childSize);
        child = t2._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
      nonAligningChildrenWidth = A.IterableDoubleExtension_get_maxOrNull(new C.MappedListIterable(nonAligningSizes, type$.double_Function_Size._as(new A.RenderEqnArray__computeLayout_closure()), type$.MappedListIterable_Size_double));
      if (nonAligningChildrenWidth == null)
        nonAligningChildrenWidth = 0;
      aligningChildrenWidth = A.IterableDoubleExtension_get_sum(colWidths);
      width = Math.max(nonAligningChildrenWidth, aligningChildrenWidth);
      t1 = !dry;
      if (t1)
        D.JSArray_methods.add$1(_this.hlinePos, 0);
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t3 = _this._hlines, t4 = J.getInterceptor$asx(t3), t5 = _this._arrayskip, t6 = 0.3 * t5, t7 = _this._jotSize, t8 = _this._rowSpacings, t5 = 0.7 * t5, t9 = (width - aligningChildrenWidth) / 2, t10 = _this.hlinePos, t11 = _this._ruleThickness, index = 1, vPos = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        childSize = sizeMap.$index(0, child);
        if (childSize == null)
          childSize = D.Size_0_0;
        if (child instanceof A.RenderLine && child.alignColWidth != null) {
          child.set$alignColWidth(colWidths);
          child.layout$2$parentUsesSize(new C.BoxConstraints(0, aligningChildrenWidth, 0, 1 / 0), true);
          if (0 >= colWidths.length)
            return C.ioore(colWidths, 0);
          t12 = colWidths[0];
          t13 = child.alignColWidth;
          if (0 >= t13.length)
            return C.ioore(t13, 0);
          hPos = t9 + t12 - t13[0];
        } else
          hPos = (width - childSize._dx) / 2;
        if (dry)
          layoutHeight = 0;
        else {
          t12 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t12.toString;
          layoutHeight = t12;
        }
        if (dry)
          layoutDepth = childSize._dy;
        else {
          t12 = child.get$size(0);
          t13 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t13.toString;
          layoutDepth = t12._dy - t13;
        }
        vPos += Math.max(layoutHeight, t5);
        if (t1) {
          t12 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t12.toString;
          childParentData.offset = new C.Offset(hPos, vPos - t12);
        }
        t12 = Math.max(layoutDepth, t6);
        t13 = index - 1;
        if (!(t13 < t8.length))
          return C.ioore(t8, t13);
        vPos += t12 + t7 + t8[t13];
        if (t1)
          D.JSArray_methods.add$1(t10, vPos);
        vPos += t4.$index(t3, index) !== B.MatrixSeparatorStyle_2 ? t11 : 0;
        ++index;
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      if (t1)
        _this.width = width;
      return new C.Size(width, vPos);
    },
    _computeLayout$1(constraints) {
      return this._computeLayout$2$dry(constraints, true);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, i, t6, t7, t8, t9, _this = this;
      _this.defaultPaint$2(context, offset);
      for (t1 = _this._hlines, t2 = J.getInterceptor$asx(t1), t3 = _this.hlinePos, t4 = _this._ruleThickness, t5 = t4 / 2, i = 0; i < t2.get$length(t1); ++i)
        if (t2.$index(t1, i) !== B.MatrixSeparatorStyle_2) {
          t6 = context.get$canvas(context);
          if (!(i < t3.length))
            return C.ioore(t3, i);
          t7 = t3[i] + t5;
          t8 = _this.width;
          t9 = $.$get$_renderer().createPaint$0();
          t9.set$strokeWidth(t4);
          t6.drawLine$3(new C.Offset(0, t7), new C.Offset(t8, t7), t9);
        }
    }
  };
  A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.EqnArrayParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.EqnArrayParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    },
    reassemble$0() {
      this.super$RenderObject$reassemble();
      C.assertHelper(new A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure(this).call$0());
    }
  };
  A.LayoutBuilderPreserveBaseline.prototype = {
    get$builder() {
      return this.builder;
    },
    createRenderObject$1(context) {
      var t1 = new A._RenderLayoutBuilderPreserveBaseline(null, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    }
  };
  A._RenderLayoutBuilderPreserveBaseline.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      var t1;
      type$.TextBaseline._as(baseline);
      t1 = this.RenderObjectWithChildMixin__child;
      return t1 == null ? null : t1.getDistanceToActualBaseline$1(baseline);
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      this._debugThrowIfNotCheckingIntrinsics$0();
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      this._debugThrowIfNotCheckingIntrinsics$0();
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      C._asDouble(width);
      this._debugThrowIfNotCheckingIntrinsics$0();
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      C._asDouble(width);
      this._debugThrowIfNotCheckingIntrinsics$0();
      return 0;
    },
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$2$3(D.C__DryLayout, constraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      return t1 == null ? D.Size_0_0 : t1;
    },
    performLayout$0() {
      var _this = this,
        constraints = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(constraints, true);
        _this.set$size(0, constraints.constrain$1(_this.RenderObjectWithChildMixin__child.get$size(0)));
      } else
        _this.set$size(0, new C.Size(constraints.constrainWidth$0(), constraints.constrainHeight$0()));
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    paint$2(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    },
    _debugThrowIfNotCheckingIntrinsics$0() {
      C.assertHelper(new A._RenderLayoutBuilderPreserveBaseline__debugThrowIfNotCheckingIntrinsics_closure().call$0());
      return true;
    }
  };
  A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0(_) {
      var t1;
      this.super$RenderObject$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder.prototype = {};
  A.LineParentData.prototype = {
    toString$0(_) {
      var _this = this;
      return _this.super$BoxParentData$toString(0) + "; canBreakBefore = false; customSize = " + (_this.customCrossSize != null) + "; trailingMargin = " + C.S(_this.trailingMargin) + "; alignerOrSpacer = " + _this.alignerOrSpacer;
    },
    set$customCrossSize(customCrossSize) {
      this.customCrossSize = type$.nullable_BoxConstraints_Function_double_double._as(customCrossSize);
    }
  };
  A.LineElement.prototype = {
    applyParentData$1(renderObject) {
      var parentData, t1, needsLayout, targetParent;
      C.assertHelper(renderObject.parentData instanceof A.LineParentData);
      parentData = type$.LineParentData._as(renderObject.parentData);
      t1 = this.customCrossSize;
      needsLayout = !J.$eq$(parentData.customCrossSize, t1);
      if (needsLayout)
        parentData.set$customCrossSize(t1);
      t1 = this.trailingMargin;
      if (parentData.trailingMargin !== t1) {
        parentData.trailingMargin = t1;
        needsLayout = true;
      }
      t1 = this.alignerOrSpacer;
      if (parentData.alignerOrSpacer !== t1) {
        parentData.alignerOrSpacer = t1;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.FlagProperty$("canBreakBefore", _null, _null, "allow breaking before", D.DiagnosticLevel_3, false, false));
      properties.add$1(0, C.FlagProperty$("customSize", _null, _null, "using relative size", D.DiagnosticLevel_3, false, _this.customCrossSize != null));
      properties.add$1(0, C.DoubleProperty$("trailingMargin", _this.trailingMargin, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.FlagProperty$("alignerOrSpacer", _null, _null, "is a alignment symbol", D.DiagnosticLevel_3, false, _this.alignerOrSpacer));
    },
    get$debugTypicalAncestorWidgetClass() {
      return B.Type_Line_2D3;
    }
  };
  A.Line.prototype = {
    getEffectiveTextDirection$1(context) {
      var t1 = C.Directionality_of(context);
      return t1;
    },
    createRenderObject$1(context) {
      return A.RenderLine$(null, D.CrossAxisAlignment_4, 0, 0, D.TextBaseline_0, this.getEffectiveTextDirection$1(context));
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderLine._as(renderObject);
      renderObject.set$crossAxisAlignment(D.CrossAxisAlignment_4);
      renderObject.set$minDepth(0);
      renderObject.set$minHeight(0, 0);
      renderObject.set$textBaseline(0, D.TextBaseline_0);
      renderObject.set$textDirection(this.getEffectiveTextDirection$1(context));
      return renderObject;
    },
    debugFillProperties$1(properties) {
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("textBaseline", D.TextBaseline_0, null, D.DiagnosticLevel_3, type$.TextBaseline));
      properties.add$1(0, C.EnumProperty$("crossAxisAlignment", D.CrossAxisAlignment_4, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, C.EnumProperty$("textDirection", null, null, D.DiagnosticLevel_3, type$.TextDirection));
    }
  };
  A.RenderLine.prototype = {
    set$crossAxisAlignment(value) {
      if (this._line$_crossAxisAlignment !== value) {
        this._line$_crossAxisAlignment = value;
        this.markNeedsLayout$0();
      }
    },
    set$minDepth(value) {
      if (this._line$_minDepth !== value) {
        this._line$_minDepth = value;
        this.markNeedsLayout$0();
      }
    },
    set$minHeight(_, value) {
      if (this._line$_minHeight !== value) {
        this._line$_minHeight = value;
        this.markNeedsLayout$0();
      }
    },
    set$textBaseline(_, value) {
      if (this._line$_textBaseline !== value) {
        this._line$_textBaseline = value;
        this.markNeedsLayout$0();
      }
    },
    set$textDirection(value) {
      if (this._line$_textDirection != value) {
        this._line$_textDirection = value;
        this.markNeedsLayout$0();
      }
    },
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.LineParentData))
        child.parentData = new A.LineParentData(null, null, D.Offset_0_0);
    },
    _getIntrinsicSize$3$childSize$extent$sizingDirection(childSize, extent, sizingDirection) {
      var child, t1, inflexibleSpace, t2, maxCrossSize;
      type$.double_Function_RenderBox_double._as(childSize);
      child = this.ContainerRenderObjectMixin__firstChild;
      if (sizingDirection === D.Axis_0) {
        for (t1 = type$.LineParentData, inflexibleSpace = 0; child != null;) {
          t2 = childSize.call$2(child, extent);
          if (typeof t2 !== "number")
            return C.iae(t2);
          inflexibleSpace += t2;
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return inflexibleSpace;
      } else {
        for (t1 = type$.LineParentData, maxCrossSize = 0; child != null;) {
          maxCrossSize = Math.max(maxCrossSize, childSize.call$2(child, child.getMaxIntrinsicWidth$1(1 / 0)));
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return maxCrossSize;
      }
    },
    computeMinIntrinsicWidth$1(height) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderLine_computeMinIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMaxIntrinsicWidth$1(height) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderLine_computeMaxIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMinIntrinsicHeight$1(width) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderLine_computeMinIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeMaxIntrinsicHeight$1(width) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderLine_computeMaxIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      C.assertHelper(!this.get$debugNeedsLayout());
      return this.maxHeightAboveBaseline;
    },
    computeDryLayout$1(constraints) {
      return this._line$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this.set$size(0, this._line$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false));
    },
    _line$_computeLayout$2$dry(constraints, dry) {
      var child, t1, relativeChildren, alignerAndSpacers, sizeMap, t2, t3, maxHeightAboveBaseline, maxDepthBelowBaseline, childParentData, boxSize, distance, t4, _i, childConstraints, t5, colWidths, caretOffsets, mainPos, lastColPosition, childSize, size, alignColWidth, aligner, index, alignerOrSpacer, t6, t7, t8, t9, t10, _this = this;
      if (C.assertTest(_this._line$_textDirection != null))
        C.assertThrow("Horizontal " + C.getRuntimeTypeOfDartObject(_this).toString$0(0) + string$.x20has_a);
      child = _this.ContainerRenderObjectMixin__firstChild;
      t1 = type$.JSArray_RenderBox;
      relativeChildren = C._setArrayType([], t1);
      alignerAndSpacers = C._setArrayType([], t1);
      t1 = type$.Size;
      sizeMap = C.LinkedHashMap_LinkedHashMap$_empty(type$.RenderBox, t1);
      for (t2 = type$.LineParentData, t3 = type$.BoxConstraints, maxHeightAboveBaseline = 0, maxDepthBelowBaseline = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        if (childParentData.customCrossSize != null)
          D.JSArray_methods.add$1(relativeChildren, child);
        else if (childParentData.alignerOrSpacer)
          D.JSArray_methods.add$1(alignerAndSpacers, child);
        else {
          if (dry)
            boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, D.BoxConstraints_0Yu, child.get$_computeDryLayout(), t3, t1);
          else {
            child.layout$2$parentUsesSize(D.BoxConstraints_0Yu, true);
            boxSize = child.get$size(0);
          }
          sizeMap.$indexSet(0, child, boxSize);
          if (dry)
            distance = 0;
          else {
            t4 = child.getDistanceToBaseline$1(_this._line$_textBaseline);
            t4.toString;
            distance = t4;
          }
          maxHeightAboveBaseline = Math.max(maxHeightAboveBaseline, distance);
          maxDepthBelowBaseline = Math.max(maxDepthBelowBaseline, boxSize._dy - distance);
        }
        C.assertHelper(child.parentData === childParentData);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      for (t4 = relativeChildren.length, _i = 0; _i < relativeChildren.length; relativeChildren.length === t4 || (0, C.throwConcurrentModificationError)(relativeChildren), ++_i) {
        child = relativeChildren[_i];
        childParentData = t2._as(child.parentData);
        C.assertHelper(childParentData.customCrossSize != null);
        childConstraints = childParentData.customCrossSize.call$2(maxHeightAboveBaseline, maxDepthBelowBaseline);
        if (dry)
          boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, childConstraints, child.get$_computeDryLayout(), t3, t1);
        else {
          child.layout$2$parentUsesSize(childConstraints, true);
          boxSize = child.get$size(0);
        }
        sizeMap.$indexSet(0, child, boxSize);
        if (dry)
          distance = 0;
        else {
          t5 = child.getDistanceToBaseline$1(_this._line$_textBaseline);
          t5.toString;
          distance = t5;
        }
        maxHeightAboveBaseline = Math.max(maxHeightAboveBaseline, distance);
        maxDepthBelowBaseline = Math.max(maxDepthBelowBaseline, boxSize._dy - distance);
      }
      maxHeightAboveBaseline = Math.max(maxHeightAboveBaseline, _this._line$_minHeight);
      maxDepthBelowBaseline = Math.max(maxDepthBelowBaseline, _this._line$_minDepth);
      child = _this.ContainerRenderObjectMixin__firstChild;
      t4 = type$.JSArray_double;
      colWidths = C._setArrayType([], t4);
      caretOffsets = C._setArrayType([0], t4);
      for (t4 = !dry, mainPos = 0, lastColPosition = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        childSize = sizeMap.$index(0, child);
        if (childSize == null)
          childSize = D.Size_0_0;
        if (childParentData.alignerOrSpacer) {
          childConstraints = C.BoxConstraints$tightFor(null, 0);
          if (dry)
            boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, childConstraints, child.get$_computeDryLayout(), t3, t1);
          else {
            child.layout$2$parentUsesSize(childConstraints, true);
            boxSize = child.get$size(0);
          }
          D.JSArray_methods.add$1(colWidths, mainPos - lastColPosition);
          childSize = boxSize;
          lastColPosition = mainPos;
        }
        if (t4) {
          t5 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t5.toString;
          childParentData.offset = new C.Offset(mainPos, maxHeightAboveBaseline - t5);
        }
        mainPos += childSize._dx + childParentData.trailingMargin;
        D.JSArray_methods.add$1(caretOffsets, mainPos);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      D.JSArray_methods.add$1(colWidths, mainPos - lastColPosition);
      t1 = maxHeightAboveBaseline + maxDepthBelowBaseline;
      size = constraints.constrain$1(new C.Size(mainPos, t1));
      if (t4) {
        _this.set$__RenderLine_caretOffsets_A(type$.List_double._as(caretOffsets));
        _this._line$_overflow = mainPos - size._dx;
        _this.maxHeightAboveBaseline = maxHeightAboveBaseline;
      } else
        return size;
      if (alignerAndSpacers.length === 0)
        return size;
      t3 = _this.alignColWidth;
      if (t3 == null) {
        _this.set$alignColWidth(colWidths);
        return size;
      }
      alignColWidth = C.List_List$of(t3, false, type$.double);
      D.JSArray_methods.$indexSet(alignColWidth, 0, D.JSArray_methods.get$first(colWidths));
      _this.set$alignColWidth(alignColWidth);
      for (t3 = alignerAndSpacers.length, t4 = alignColWidth.length, t5 = t4 - 1, aligner = true, index = 0, _i = 0; _i < alignerAndSpacers.length; alignerAndSpacers.length === t3 || (0, C.throwConcurrentModificationError)(alignerAndSpacers), ++_i) {
        alignerOrSpacer = alignerAndSpacers[_i];
        if (aligner)
          alignerOrSpacer.layout$2$parentUsesSize(C.BoxConstraints$tightFor(null, 0), true);
        else {
          if (!(index < t4))
            return C.ioore(alignColWidth, index);
          t6 = alignColWidth[index];
          t7 = index + 1;
          t8 = t7 < t5 ? alignColWidth[t7] : 0;
          t9 = colWidths.length;
          if (!(index < t9))
            return C.ioore(colWidths, index);
          t10 = colWidths[index];
          t7 = t7 < t9 - 1 ? colWidths[t7] : 0;
          alignerOrSpacer.layout$2$parentUsesSize(C.BoxConstraints$tightFor(null, t6 + t8 - t10 - t7), true);
        }
        aligner = !aligner;
        ++index;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      t3 = _this.__RenderLine_caretOffsets_A;
      t3 === $ && C.throwLateFieldNI("caretOffsets");
      D.JSArray_methods.clear$0(t3);
      D.JSArray_methods.add$1(t3, 0);
      for (mainPos = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        t3 = child.getDistanceToBaseline$1(D.TextBaseline_0);
        t3.toString;
        childParentData.offset = new C.Offset(mainPos, maxHeightAboveBaseline - t3);
        mainPos += child.get$size(0)._dx + childParentData.trailingMargin;
        D.JSArray_methods.add$1(_this.__RenderLine_caretOffsets_A, mainPos);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      size = constraints.constrain$1(new C.Size(mainPos, t1));
      _this._line$_overflow = mainPos - size._dx;
      return size;
    },
    _line$_computeLayout$1(constraints) {
      return this._line$_computeLayout$2$dry(constraints, true);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t2, _this = this,
        t1 = _this._line$_overflow;
      t1.toString;
      if (!(t1 > 1e-10)) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      if (_this.get$size(0).get$isEmpty(0))
        return;
      C.assertHelper(!_this._needsCompositingBitsUpdate);
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && C.throwLateFieldNI("_needsCompositing");
      t2 = _this.get$size(0);
      context.pushClipRect$4(t1, offset, new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$defaultPaint());
      C.assertHelper(new A.RenderLine_paint_closure(_this, context, offset).call$0());
    },
    describeApproximatePaintClip$1(child) {
      var t1 = this._line$_overflow;
      t1.toString;
      if (t1 > 1e-10) {
        t1 = this.get$size(0);
        t1 = new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    toStringShort$0() {
      var header = this.super$RenderObject$toStringShort(),
        t1 = this._line$_overflow;
      return t1 != null && t1 > 1e-10 ? header + " OVERFLOWING" : header;
    },
    debugFillProperties$1(properties) {
      var _this = this;
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("crossAxisAlignment", _this._line$_crossAxisAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, C.EnumProperty$("textDirection", _this._line$_textDirection, null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, C.EnumProperty$("textBaseline", _this._line$_textBaseline, null, D.DiagnosticLevel_3, type$.TextBaseline));
    },
    set$__RenderLine_caretOffsets_A(__RenderLine_caretOffsets_A) {
      this.__RenderLine_caretOffsets_A = type$.List_double._as(__RenderLine_caretOffsets_A);
    },
    set$alignColWidth(alignColWidth) {
      this.alignColWidth = type$.nullable_List_double._as(alignColWidth);
    }
  };
  A._RenderLine_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.LineParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.LineParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    },
    reassemble$0() {
      this.super$RenderObject$reassemble();
      C.assertHelper(new A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure(this).call$0());
    }
  };
  A.EditableLine.prototype = {
    getEffectiveTextDirection$1(context) {
      var t1 = C.Directionality_of(context);
      return t1;
    },
    createRenderObject$1(context) {
      var _this = this;
      return A.RenderEditableLine$(D.CrossAxisAlignment_4, _this.cursorBlinkOpacityController, _this.cursorColor, _this.cursorHeight, _this.cursorOffset, _this.cursorRadius, _this.cursorWidth, _this.devicePixelRatio, _this.endHandleLayerLink, _this.hintingColor, 0, 0, _this.node, _this.paintCursorAboveText, _this.preferredLineHeight, _this.selection, _this.selectionColor, _this.showCursor, _this.startHandleLayerLink, D.TextBaseline_0, _this.getEffectiveTextDirection$1(context));
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2, t3, _this = this;
      type$.RenderEditableLine._as(renderObject);
      renderObject.set$crossAxisAlignment(D.CrossAxisAlignment_4);
      t1 = _this.cursorBlinkOpacityController;
      t2 = renderObject._line_editable$_cursorBlinkOpacityController;
      t3 = renderObject.get$onCursorOpacityChanged();
      t2.removeListener$1(0, t3);
      renderObject._line_editable$_cursorBlinkOpacityController = t1;
      t1.addListener$1(0, t3);
      renderObject.markNeedsPaint$0();
      renderObject._cursorColor = _this.cursorColor;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorOffset = _this.cursorOffset;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorRadius = _this.cursorRadius;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorWidth = _this.cursorWidth;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorHeight = _this.cursorHeight;
      renderObject.markNeedsPaint$0();
      t1 = _this.devicePixelRatio;
      if (renderObject._line_editable$_devicePixelRatio !== t1) {
        renderObject._line_editable$_devicePixelRatio = t1;
        renderObject.markNeedsPaint$0();
      }
      renderObject._hintingColor = _this.hintingColor;
      renderObject.markNeedsPaint$0();
      renderObject.set$minDepth(0);
      renderObject.set$minHeight(0, 0);
      renderObject._paintCursorAboveText = _this.paintCursorAboveText;
      renderObject.markNeedsPaint$0();
      renderObject.preferredLineHeight = _this.preferredLineHeight;
      t1 = _this.selection;
      if (!renderObject._line_editable$_selection.$eq(0, t1)) {
        renderObject._line_editable$_selection = t1;
        renderObject.markNeedsPaint$0();
      }
      renderObject._line_editable$_selectionColor = _this.selectionColor;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_showCursor = _this.showCursor;
      renderObject.markNeedsPaint$0();
      renderObject.set$textBaseline(0, D.TextBaseline_0);
      renderObject.set$textDirection(_this.getEffectiveTextDirection$1(context));
      return renderObject;
    },
    debugFillProperties$1(properties) {
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("textBaseline", D.TextBaseline_0, null, D.DiagnosticLevel_3, type$.TextBaseline));
      properties.add$1(0, C.EnumProperty$("crossAxisAlignment", D.CrossAxisAlignment_4, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, C.EnumProperty$("textDirection", null, null, D.DiagnosticLevel_3, type$.TextDirection));
    }
  };
  A.RenderEditableLine.prototype = {
    onCursorOpacityChanged$0() {
      var t1, _this = this;
      if (_this.get$showCursor()) {
        t1 = _this._line_editable$_selection;
        t1 = t1.start === t1.end && _this.get$isSelectionInRange();
      } else
        t1 = false;
      if (t1)
        _this.markNeedsPaint$0();
    },
    get$showCursor() {
      return this._line_editable$_showCursor;
    },
    get$isSelectionInRange() {
      var t1 = this._line_editable$_selection;
      return t1.end >= 0 && t1.start <= this.ContainerRenderObjectMixin__childCount;
    },
    hitTestSelf$1(position) {
      return true;
    },
    paint$2(context, offset) {
      var t1, startOffset, endOffset, t2, t3, t4, t5, cursorOffset, _this = this,
        _s12_ = "caretOffsets";
      if (_this.get$isSelectionInRange()) {
        t1 = _this.__RenderLine_caretOffsets_A;
        t1 === $ && C.throwLateFieldNI(_s12_);
        startOffset = D.JSArray_methods.$index(t1, Math.max(0, _this._line_editable$_selection.start));
        endOffset = D.JSArray_methods.$index(_this.__RenderLine_caretOffsets_A, Math.min(_this.ContainerRenderObjectMixin__childCount, _this._line_editable$_selection.end));
        t1 = _this._line_editable$_selection;
        if (t1.start === t1.end) {
          t1 = context.get$canvas(context);
          t2 = _this.get$size(0);
          t3 = offset._dx;
          t4 = offset._dy;
          t5 = $.$get$_renderer().createPaint$0();
          t5.set$style(0, D.PaintingStyle_0);
          t5.set$color(0, _this._hintingColor);
          t1.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t5);
        } else {
          t1 = context.get$canvas(context);
          t2 = new C.Rect(startOffset, 0, endOffset, _this.get$size(0)._dy).shift$1(offset);
          t3 = $.$get$_renderer().createPaint$0();
          t3.set$style(0, D.PaintingStyle_0);
          t3.set$color(0, _this._line_editable$_selectionColor);
          t1.drawRect$2(t2, t3);
        }
      }
      if (_this._paintCursorAboveText)
        _this.super$RenderLine$paint(context, offset);
      if (_this.get$showCursor()) {
        t1 = _this._line_editable$_selection;
        t1 = t1.start === t1.end && _this.get$isSelectionInRange();
      } else
        t1 = false;
      if (t1) {
        t1 = _this.__RenderLine_caretOffsets_A;
        t1 === $ && C.throwLateFieldNI(_s12_);
        t2 = _this._line_editable$_selection.baseOffset;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        cursorOffset = t1[t2];
        _this._paintCaret$2(context.get$canvas(context), new C.Offset(cursorOffset, _this.get$size(0)._dy).$add(0, offset));
      }
      if (!_this._paintCursorAboveText)
        _this.super$RenderLine$paint(context, offset);
      return;
    },
    _paintCaret$2(canvas, baselineOffset) {
      var _caretPrototype, caretRect, caretPosition, pixelMultiple, pixelPerfectOffsetX, _this = this,
        paint = $.$get$_renderer().createPaint$0(),
        t1 = _this._cursorColor,
        t2 = _this._line_editable$_cursorBlinkOpacityController;
      t2.get$value(t2);
      paint.set$color(0, t1.withOpacity$1(0));
      switch (C.defaultTargetPlatform().index) {
        case 2:
        case 4:
          t1 = _this._line_editable$_cursorWidth;
          t2 = _this._line_editable$_cursorHeight;
          _caretPrototype = new C.Rect(0, 0, D.JSInt_methods.$add(0, t1), 0 + (t2 + 2));
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          t1 = _this._line_editable$_cursorWidth;
          t2 = _this._line_editable$_cursorHeight;
          _caretPrototype = new C.Rect(0, 0, D.JSInt_methods.$add(0, t1), 0 + t2);
          break;
        default:
          _caretPrototype = null;
      }
      t1 = _caretPrototype.shift$1(baselineOffset);
      t2 = _this._line_editable$_cursorHeight;
      caretRect = t1.shift$1(new C.Offset(0, -0.9 * t2)).shift$1(_this._line_editable$_cursorOffset);
      caretPosition = C.MatrixUtils_transformPoint(_this.getTransformTo$1(0, null), new C.Offset(caretRect.left, caretRect.top));
      pixelMultiple = 1 / _this._line_editable$_devicePixelRatio;
      t1 = caretPosition._dx;
      pixelPerfectOffsetX = isFinite(t1) ? D.JSNumber_methods.round$0(t1 / pixelMultiple) * pixelMultiple - t1 : 0;
      t1 = caretPosition._dy;
      canvas.drawRRect$2(C.RRect$fromRectAndRadius(caretRect.shift$1(new C.Offset(pixelPerfectOffsetX, isFinite(t1) ? D.JSNumber_methods.round$0(t1 / pixelMultiple) * pixelMultiple - t1 : 0)), _this._line_editable$_cursorRadius), paint);
    }
  };
  A.MinDimension.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderMinDimension(_this.minHeight, _this.minDepth, _this.topPadding, _this.bottomPadding, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderMinDimension._as(renderObject);
      t1 = _this.minHeight;
      if (renderObject._minHeight !== t1) {
        renderObject._minHeight = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.minDepth;
      if (renderObject._minDepth !== t1) {
        renderObject._minDepth = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.topPadding;
      if (renderObject._topPadding !== t1) {
        renderObject._topPadding = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.bottomPadding;
      if (renderObject._bottomPadding !== t1) {
        renderObject._bottomPadding = t1;
        renderObject.markNeedsLayout$0();
      }
      return renderObject;
    }
  };
  A.RenderMinDimension.prototype = {
    computeMinIntrinsicHeight$1(width) {
      var _this = this;
      C._asDouble(width);
      return Math.max(_this._minHeight + _this._minDepth, _this.super$RenderShiftedBox$computeMinIntrinsicHeight(width) + _this._topPadding + _this._bottomPadding);
    },
    computeMaxIntrinsicHeight$1(width) {
      var _this = this;
      C._asDouble(width);
      return Math.max(_this._minHeight + _this._minDepth, _this.super$RenderShiftedBox$computeMaxIntrinsicHeight(width) + _this._topPadding + _this._bottomPadding);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this.distanceToBaseline;
    },
    computeDryLayout$1(constraints) {
      return this._min_dimension$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this.set$size(0, this._min_dimension$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false));
    },
    _min_dimension$_computeLayout$2$dry(constraints, dry) {
      var childSize, childHeight, t2, height, depth, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      t1.toString;
      childSize = A.RenderBoxLayout_getLayoutSize(t1, constraints, dry);
      if (dry)
        childHeight = 0;
      else {
        t2 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
        t2.toString;
        childHeight = t2;
      }
      height = Math.max(_this._minHeight, childHeight + _this._topPadding);
      depth = Math.max(_this._minDepth, childSize._dy - childHeight + _this._bottomPadding);
      if (!dry) {
        type$.BoxParentData._as(t1.parentData).offset = new C.Offset(0, height - childHeight);
        _this.distanceToBaseline = height;
      }
      return constraints.constrain$1(new C.Size(childSize._dx, height + depth));
    },
    _min_dimension$_computeLayout$1(constraints) {
      return this._min_dimension$_computeLayout$2$dry(constraints, true);
    }
  };
  A._ScriptPos.prototype = {
    _enumToString$0() {
      return "_ScriptPos." + this._name;
    }
  };
  A.Multiscripts.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        t1 = _this.baseResult,
        t2 = _this.subResult,
        t3 = t2 == null,
        t4 = t3 ? _null : t2.options,
        t5 = _this.supResult,
        t6 = t5 == null,
        t7 = t6 ? _null : t5.options,
        t8 = _this.presubResult,
        t9 = t8 == null,
        t10 = t9 ? _null : t8.options,
        t11 = _this.presupResult,
        t12 = t11 == null,
        t13 = t12 ? _null : t11.options,
        t14 = type$._ScriptPos,
        t15 = C._setArrayType([A.CustomLayoutId$(t1.widget, B._ScriptPos_0, t14)], type$.JSArray_Widget);
      if (!t3)
        t15.push(A.CustomLayoutId$(t2.widget, B._ScriptPos_1, t14));
      if (!t6)
        t15.push(A.CustomLayoutId$(t5.widget, B._ScriptPos_2, t14));
      if (!t9)
        t15.push(A.CustomLayoutId$(t8.widget, B._ScriptPos_3, t14));
      if (!t12)
        t15.push(A.CustomLayoutId$(t11.widget, B._ScriptPos_4, t14));
      return new A.CustomLayout(new A.MultiscriptsLayoutDelegate(false, t1.italic, _this.isBaseCharacterBox, t1.options, t4, t7, t10, t13), t15, _null, type$.CustomLayout__ScriptPos);
    }
  };
  A.MultiscriptsLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map__ScriptPos_RenderBox._as(childrenTable);
      return this.baselineDistance;
    },
    performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, isComputingIntrinsics) {
      var t1, subSize, supSize, presubSize, presupSize, scriptSpace, extendedSubSize, extendedSupSize, t2, extendedPresubSize, t3, extendedPresupSize, t4, postscriptWidth, prescriptWidth, t5, t6;
      type$.Map__ScriptPos_double._as(childrenWidths);
      t1 = childrenWidths.$index(0, B._ScriptPos_0);
      t1.toString;
      subSize = childrenWidths.$index(0, B._ScriptPos_1);
      supSize = childrenWidths.$index(0, B._ScriptPos_2);
      presubSize = childrenWidths.$index(0, B._ScriptPos_3);
      presupSize = childrenWidths.$index(0, B._ScriptPos_4);
      scriptSpace = new A.Measurement(0.5, B.Unit_0).toLpUnder$1(this.baseOptions);
      extendedSubSize = subSize != null ? subSize + scriptSpace : 0;
      extendedSupSize = supSize != null ? supSize + scriptSpace : 0;
      t2 = presubSize != null;
      extendedPresubSize = t2 ? presubSize + scriptSpace : 0;
      t3 = presupSize != null;
      extendedPresupSize = t3 ? presupSize + scriptSpace : 0;
      t4 = this.italic;
      postscriptWidth = Math.max(extendedSupSize, -t4 + extendedSubSize);
      prescriptWidth = Math.max(extendedPresubSize, extendedPresupSize);
      t5 = C.LinkedHashMap_LinkedHashMap$_empty(type$._ScriptPos, type$.double);
      t5.$indexSet(0, B._ScriptPos_0, prescriptWidth);
      t6 = prescriptWidth + t1;
      t5.$indexSet(0, B._ScriptPos_1, t6 - t4);
      t5.$indexSet(0, B._ScriptPos_2, t6);
      if (t2)
        t5.$indexSet(0, B._ScriptPos_3, prescriptWidth - presubSize);
      if (t3)
        t5.$indexSet(0, B._ScriptPos_4, prescriptWidth - presupSize);
      return new A.AxisConfiguration(postscriptWidth + prescriptWidth + t1, t5, type$.AxisConfiguration__ScriptPos);
    },
    performHorizontalIntrinsicLayout$1$childrenWidths(childrenWidths) {
      return this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, false);
    },
    performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, isComputingIntrinsics) {
      var subSize, supSize, presubSize, presupSize, t2, subHeight, supHeight, presubHeight, presupHeight, t3, t4, t5, t6, postscriptRes, prescriptRes, subShift, supShift, presubShift, presupShift, t7, t8, t9, height, depth, _this = this, _null = null,
        t1 = type$.Map__ScriptPos_double;
      t1._as(childrenHeights);
      t1._as(childrenBaselines);
      t1 = childrenHeights.$index(0, B._ScriptPos_0);
      t1.toString;
      subSize = childrenHeights.$index(0, B._ScriptPos_1);
      supSize = childrenHeights.$index(0, B._ScriptPos_2);
      presubSize = childrenHeights.$index(0, B._ScriptPos_3);
      presupSize = childrenHeights.$index(0, B._ScriptPos_4);
      t2 = childrenBaselines.$index(0, B._ScriptPos_0);
      t2.toString;
      subHeight = childrenBaselines.$index(0, B._ScriptPos_1);
      supHeight = childrenBaselines.$index(0, B._ScriptPos_2);
      presubHeight = childrenBaselines.$index(0, B._ScriptPos_3);
      presupHeight = childrenBaselines.$index(0, B._ScriptPos_4);
      t3 = _this.baseOptions;
      if (subSize != null) {
        subHeight.toString;
        t4 = _this.subOptions;
        t4.toString;
        t4 = new A._ScriptUvConf(subSize, subHeight, t4);
      } else
        t4 = _null;
      if (supSize != null) {
        supHeight.toString;
        t5 = _this.supOptions;
        t5.toString;
        t5 = new A._ScriptUvConf(supSize, supHeight, t5);
      } else
        t5 = _null;
      t6 = _this.isBaseCharacterBox;
      postscriptRes = A.calculateUV(new A._ScriptUvConf(t1, t2, t3), t6, t4, t5);
      if (presubSize != null) {
        presubHeight.toString;
        t4 = _this.presubOptions;
        t4.toString;
        t4 = new A._ScriptUvConf(presubSize, presubHeight, t4);
      } else
        t4 = _null;
      if (presupSize != null) {
        presupHeight.toString;
        t5 = _this.presupOptions;
        t5.toString;
        t5 = new A._ScriptUvConf(presupSize, presupHeight, t5);
      } else
        t5 = _null;
      prescriptRes = A.calculateUV(new A._ScriptUvConf(t1, t2, t3), t6, t4, t5);
      subShift = postscriptRes.item2;
      supShift = postscriptRes.item1;
      presubShift = prescriptRes.item2;
      presupShift = prescriptRes.item1;
      t5 = type$.JSArray_double;
      t4 = C._setArrayType([t2], t5);
      t3 = subHeight != null;
      if (t3)
        t4.push(subHeight - subShift);
      t6 = supHeight != null;
      if (t6)
        t4.push(supHeight + supShift);
      t7 = presubHeight != null;
      if (t7)
        t4.push(presubHeight - presubShift);
      t8 = presupHeight != null;
      if (t8)
        t4.push(presupHeight + presupShift);
      t9 = type$.double;
      height = A.NumIterableExtension_get_max(t4, t9);
      t5 = C._setArrayType([t1 - t2], t5);
      if (t3) {
        subSize.toString;
        t5.push(subSize - subHeight + subShift);
      }
      if (t6) {
        supSize.toString;
        t5.push(supSize - supHeight - supShift);
      }
      if (t7) {
        presubSize.toString;
        t5.push(presubSize - presubHeight + presubShift);
      }
      if (t8) {
        presupSize.toString;
        t5.push(presupSize - presupHeight - presupShift);
      }
      depth = A.NumIterableExtension_get_max(t5, t9);
      if (!isComputingIntrinsics)
        _this.baselineDistance = height;
      t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$._ScriptPos, t9);
      t1.$indexSet(0, B._ScriptPos_0, height - t2);
      if (t3)
        t1.$indexSet(0, B._ScriptPos_1, height + subShift - subHeight);
      if (t6)
        t1.$indexSet(0, B._ScriptPos_2, height - supShift - supHeight);
      if (t7)
        t1.$indexSet(0, B._ScriptPos_3, height + presubShift - presubHeight);
      if (t8)
        t1.$indexSet(0, B._ScriptPos_4, height - presupShift - presupHeight);
      return new A.AxisConfiguration(height + depth, t1, type$.AxisConfiguration__ScriptPos);
    },
    performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenBaselines, childrenHeights) {
      return this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, false);
    }
  };
  A._ScriptUvConf.prototype = {};
  A.ResetBaseline.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderResetBaseline(this.height, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderResetBaseline._as(renderObject);
      t1 = this.height;
      if (renderObject._reset_baseline$_height !== t1) {
        renderObject._reset_baseline$_height = t1;
        renderObject.markNeedsLayout$0();
      }
      return renderObject;
    }
  };
  A.RenderResetBaseline.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this._reset_baseline$_height;
    }
  };
  A.ResetDimension.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A.RenderResetDimension(_this.height, _this.depth, _this.width, _this.horizontalAlignment, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderResetDimension._as(renderObject);
      t1 = _this.height;
      if (renderObject._layoutHeight != t1) {
        renderObject._layoutHeight = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.depth;
      if (renderObject._layoutDepth != t1) {
        renderObject._layoutDepth = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.width;
      if (renderObject._layoutWidth != t1) {
        renderObject._layoutWidth = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.horizontalAlignment;
      if (renderObject._horizontalAlignment !== t1) {
        renderObject._horizontalAlignment = t1;
        renderObject.markNeedsLayout$0();
      }
      return renderObject;
    }
  };
  A.RenderResetDimension.prototype = {
    computeMinIntrinsicWidth$1(height) {
      var t1;
      C._asDouble(height);
      t1 = this._layoutWidth;
      return t1 == null ? this.super$RenderShiftedBox$computeMinIntrinsicWidth(height) : t1;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1;
      C._asDouble(height);
      t1 = this._layoutWidth;
      return t1 == null ? this.super$RenderShiftedBox$computeMaxIntrinsicWidth(height) : t1;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1, t2, _this = this;
      C._asDouble(width);
      t1 = _this._layoutHeight;
      t2 = t1 == null;
      if (t2 && _this._layoutDepth == null)
        return _this.super$RenderShiftedBox$computeMinIntrinsicHeight(width);
      if (!t2 && _this._layoutDepth != null) {
        t1.toString;
        t2 = _this._layoutDepth;
        t2.toString;
        return t1 + t2;
      }
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1, t2, _this = this;
      C._asDouble(width);
      t1 = _this._layoutHeight;
      t2 = t1 == null;
      if (t2 && _this._layoutDepth == null)
        return _this.super$RenderShiftedBox$computeMaxIntrinsicHeight(width);
      if (!t2 && _this._layoutDepth != null) {
        t1.toString;
        t2 = _this._layoutDepth;
        t2.toString;
        return t1 + t2;
      }
      return 0;
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1;
      type$.TextBaseline._as(baseline);
      t1 = this._layoutHeight;
      return t1 == null ? this.super$RenderShiftedBox$computeDistanceToActualBaseline(baseline) : t1;
    },
    computeDryLayout$1(constraints) {
      return this._reset_dimension$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this.set$size(0, this._reset_dimension$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false));
    },
    _reset_dimension$_computeLayout$2$dry(constraints, dry) {
      var childSize, childHeight, t2, childDepth, childWidth, height, depth, width, dx, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      t1.toString;
      childSize = A.RenderBoxLayout_getLayoutSize(t1, constraints, dry);
      if (dry)
        childHeight = 0;
      else {
        t2 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
        t2.toString;
        childHeight = t2;
      }
      childDepth = childSize._dy - childHeight;
      childWidth = childSize._dx;
      height = _this._layoutHeight;
      if (height == null)
        height = childHeight;
      depth = _this._layoutDepth;
      if (depth == null)
        depth = childDepth;
      width = _this._layoutWidth;
      if (width == null)
        width = childWidth;
      switch (_this._horizontalAlignment.index) {
        case 0:
        case 3:
        case 4:
          dx = 0;
          break;
        case 1:
          dx = width - childWidth;
          break;
        case 2:
        default:
          dx = (width - childWidth) / 2;
          break;
      }
      if (!dry)
        type$.BoxParentData._as(t1.parentData).offset = new C.Offset(dx, height - childHeight);
      return new C.Size(width, height + depth);
    },
    _reset_dimension$_computeLayout$1(constraints) {
      return this._reset_dimension$_computeLayout$2$dry(constraints, true);
    }
  };
  A.ShiftBaseline.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderShiftBaseline(this.relativePos, this.offset, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderShiftBaseline._as(renderObject);
      t1 = this.relativePos;
      if (renderObject._relativePos != t1) {
        renderObject._relativePos = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = this.offset;
      if (renderObject._shift_baseline$_offset !== t1) {
        renderObject._shift_baseline$_offset = t1;
        renderObject.markNeedsLayout$0();
      }
    }
  };
  A.RenderShiftBaseline.prototype = {
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$2$3(D.C__DryLayout, constraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      return t1 == null ? D.Size_0_0 : t1;
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1, childBaselineDistance, _this = this;
      type$.TextBaseline._as(baseline);
      t1 = _this._relativePos;
      if (t1 != null)
        return t1 * _this._shift_baseline$_height + _this._shift_baseline$_offset;
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childBaselineDistance = t1.getDistanceToActualBaseline$1(baseline);
        if (childBaselineDistance == null)
          childBaselineDistance = _this._shift_baseline$_height;
        return childBaselineDistance + _this._shift_baseline$_offset;
      } else
        return _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    },
    performLayout$0() {
      this.super$RenderProxyBoxMixin$performLayout();
      this._shift_baseline$_height = this.get$size(0)._dy;
    }
  };
  A.VListParentData.prototype = {
    toString$0(_) {
      var _this = this;
      return _this.super$BoxParentData$toString(0) + "; customCrossSize=" + (_this.customCrossSize != null) + "; trailingMargin=" + C.S(_this.trailingMargin) + "; horizontalShift=" + C.S(_this.hShift);
    },
    set$customCrossSize(customCrossSize) {
      this.customCrossSize = type$.nullable_BoxConstraints_Function_double._as(customCrossSize);
    }
  };
  A.VListElement.prototype = {
    applyParentData$1(renderObject) {
      var parentData, t1, needsLayout, targetParent;
      C.assertHelper(renderObject.parentData instanceof A.VListParentData);
      parentData = type$.VListParentData._as(renderObject.parentData);
      t1 = this.customCrossSize;
      needsLayout = !J.$eq$(parentData.customCrossSize, t1);
      if (needsLayout)
        parentData.set$customCrossSize(t1);
      t1 = this.trailingMargin;
      if (parentData.trailingMargin !== t1) {
        parentData.trailingMargin = t1;
        needsLayout = true;
      }
      t1 = this.hShift;
      if (parentData.hShift !== t1) {
        parentData.hShift = t1;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.FlagProperty$("customSize", _null, _null, "using relative size", D.DiagnosticLevel_3, false, _this.customCrossSize != null));
      properties.add$1(0, C.DoubleProperty$("trailingMargin", _this.trailingMargin, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("horizontalShift", _this.hShift, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, true, _null, _null));
    },
    get$debugTypicalAncestorWidgetClass() {
      return B.Type_VList_cRJ;
    }
  };
  A.VList.prototype = {
    getEffectiveTextDirection$1(context) {
      return null;
    },
    createRenderObject$1(context) {
      return A.RenderRelativeWidthColumn$(this.baselineReferenceWidgetIndex, D.CrossAxisAlignment_2, D.TextBaseline_0, this.getEffectiveTextDirection$1(context));
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderRelativeWidthColumn._as(renderObject);
      if (renderObject._vlist$_textBaseline !== D.TextBaseline_0) {
        renderObject._vlist$_textBaseline = D.TextBaseline_0;
        renderObject.markNeedsLayout$0();
      }
      t1 = this.baselineReferenceWidgetIndex;
      if (renderObject._baselineReferenceWidgetIndex !== t1) {
        renderObject._baselineReferenceWidgetIndex = t1;
        renderObject.markNeedsLayout$0();
      }
      if (renderObject._vlist$_crossAxisAlignment !== D.CrossAxisAlignment_2) {
        renderObject._vlist$_crossAxisAlignment = D.CrossAxisAlignment_2;
        renderObject.markNeedsLayout$0();
      }
      t1 = this.getEffectiveTextDirection$1(context);
      if (renderObject._vlist$_textDirection != t1) {
        renderObject._vlist$_textDirection = t1;
        renderObject.markNeedsLayout$0();
      }
    },
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("textBaseline", D.TextBaseline_0, _null, D.DiagnosticLevel_3, type$.TextBaseline));
      properties.add$1(0, C.IntProperty$("baselineReferenceWidgetNum", this.baselineReferenceWidgetIndex, 0, _null, D.DiagnosticLevel_3, _null));
      properties.add$1(0, C.EnumProperty$("crossAxisAlignment", D.CrossAxisAlignment_2, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, C.EnumProperty$("textDirection", _null, _null, D.DiagnosticLevel_3, type$.TextDirection));
    }
  };
  A.RenderRelativeWidthColumn.prototype = {
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof A.VListParentData))
        child.parentData = new A.VListParentData(null, null, D.Offset_0_0);
    },
    _vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(childSize, extent, sizingDirection) {
      var child, t1, inflexibleSpace, t2, maxCrossSize;
      type$.double_Function_RenderBox_double._as(childSize);
      child = this.ContainerRenderObjectMixin__firstChild;
      if (sizingDirection === D.Axis_1) {
        for (t1 = type$.VListParentData, inflexibleSpace = 0; child != null;) {
          t2 = childSize.call$2(child, extent);
          if (typeof t2 !== "number")
            return C.iae(t2);
          inflexibleSpace += t2;
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return inflexibleSpace;
      } else {
        for (t1 = type$.VListParentData, maxCrossSize = 0; child != null;) {
          maxCrossSize = Math.max(maxCrossSize, childSize.call$2(child, child.getMaxIntrinsicHeight$1(1 / 0)));
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return maxCrossSize;
      }
    },
    computeMinIntrinsicWidth$1(height) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMaxIntrinsicWidth$1(height) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMinIntrinsicHeight$1(width) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeMaxIntrinsicHeight$1(width) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new A.RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      C.assertHelper(!this.get$debugNeedsLayout());
      return this.distanceToBaseline;
    },
    getRightMost$2(crossAxisAlignment, width) {
      switch (crossAxisAlignment.index) {
        case 2:
          return width / 2;
        case 1:
          return 0;
        case 0:
        case 4:
        case 3:
        default:
          return width;
      }
    },
    computeDryLayout$1(constraints) {
      return this._vlist$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this.set$size(0, this._vlist$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false));
    },
    _vlist$_computeLayout$2$dry(constraints, dry) {
      var t1, child, relativeChildren, t2, t3, t4, rightMost, allocatedSize, leftMost, childParentData, innerConstraints, boxSize, width, right, fixedChildrenCrossSize, _i, childConstraints, size, crossSize, index, childMainPosition, childCrossPosition, _this = this;
      if (!dry) {
        _this.distanceToBaseline = null;
        t1 = _this._vlist$_crossAxisAlignment;
        if (t1 === D.CrossAxisAlignment_0 || t1 === D.CrossAxisAlignment_1)
          if (C.assertTest(_this._vlist$_textDirection != null))
            C.assertThrow("Vertical " + C.getRuntimeTypeOfDartObject(_this).toString$0(0) + " with " + _this._vlist$_crossAxisAlignment.toString$0(0) + string$.x20has_a);
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      relativeChildren = C._setArrayType([], type$.JSArray_RenderBox);
      for (t1 = constraints.maxWidth, t2 = type$.VListParentData, t3 = type$.BoxConstraints, t4 = type$.Size, rightMost = 0, allocatedSize = 0, leftMost = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        if (childParentData.customCrossSize != null)
          D.JSArray_methods.add$1(relativeChildren, child);
        else {
          innerConstraints = new C.BoxConstraints(0, t1, 0, 1 / 0);
          if (dry)
            boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, innerConstraints, child.get$_computeDryLayout(), t3, t4);
          else {
            child.layout$2$parentUsesSize(innerConstraints, true);
            boxSize = child.get$size(0);
          }
          width = boxSize._dx;
          right = _this.getRightMost$2(_this._vlist$_crossAxisAlignment, width);
          leftMost = Math.min(leftMost, right - width);
          rightMost = Math.max(rightMost, right);
          allocatedSize += boxSize._dy + childParentData.trailingMargin;
        }
        C.assertHelper(child.parentData === childParentData);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      fixedChildrenCrossSize = rightMost - leftMost;
      for (t1 = relativeChildren.length, _i = 0; _i < relativeChildren.length; relativeChildren.length === t1 || (0, C.throwConcurrentModificationError)(relativeChildren), ++_i) {
        child = relativeChildren[_i];
        childParentData = t2._as(child.parentData);
        C.assertHelper(childParentData.customCrossSize != null);
        childConstraints = childParentData.customCrossSize.call$1(fixedChildrenCrossSize);
        if (dry)
          boxSize = child._computeIntrinsics$2$3(D.C__DryLayout, childConstraints, child.get$_computeDryLayout(), t3, t4);
        else {
          child.layout$2$parentUsesSize(childConstraints, true);
          boxSize = child.get$size(0);
        }
        width = boxSize._dx;
        right = _this.getRightMost$2(_this._vlist$_crossAxisAlignment, width);
        leftMost = Math.min(leftMost, right - width);
        rightMost = Math.max(rightMost, right);
        allocatedSize += boxSize._dy + childParentData.trailingMargin;
      }
      size = constraints.constrain$1(new C.Size(rightMost - leftMost, allocatedSize));
      if (dry)
        return size;
      crossSize = size._dx;
      _this._vlist$_overflow = Math.max(0, -(size._dy - allocatedSize));
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (index = 0, childMainPosition = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        childCrossPosition = 0;
        switch (_this._vlist$_crossAxisAlignment.index) {
          case 0:
            childCrossPosition = _this._vlist$_textDirection === D.TextDirection_1 ? childParentData.hShift - leftMost : rightMost - child.get$size(0)._dx + crossSize;
            break;
          case 1:
            childCrossPosition = _this._vlist$_textDirection === D.TextDirection_0 ? childParentData.hShift - leftMost : rightMost - child.get$size(0)._dx + crossSize;
            break;
          case 2:
            childCrossPosition = -child.get$size(0)._dx / 2 - leftMost;
            break;
          case 3:
          case 4:
            break;
        }
        childParentData.offset = new C.Offset(childCrossPosition + childParentData.hShift, childMainPosition);
        if (index === _this._baselineReferenceWidgetIndex) {
          t1 = child.getDistanceToBaseline$1(_this._vlist$_textBaseline);
          t1.toString;
          _this.distanceToBaseline = childMainPosition + t1;
        }
        childMainPosition += child.get$size(0)._dy + childParentData.trailingMargin;
        child = childParentData.ContainerParentDataMixin_nextSibling;
        ++index;
      }
      return size;
    },
    _vlist$_computeLayout$1(constraints) {
      return this._vlist$_computeLayout$2$dry(constraints, true);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t2, _this = this,
        t1 = _this._vlist$_overflow;
      t1.toString;
      if (!(t1 > 1e-10)) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      if (_this.get$size(0).get$isEmpty(0))
        return;
      C.assertHelper(!_this._needsCompositingBitsUpdate);
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && C.throwLateFieldNI("_needsCompositing");
      t2 = _this.get$size(0);
      context.pushClipRect$4(t1, offset, new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$defaultPaint());
      C.assertHelper(new A.RenderRelativeWidthColumn_paint_closure(_this, context, offset).call$0());
    },
    describeApproximatePaintClip$1(child) {
      var t1 = this._vlist$_overflow;
      t1.toString;
      if (t1 > 1e-10) {
        t1 = this.get$size(0);
        t1 = new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    toStringShort$0() {
      var header = this.super$RenderObject$toStringShort(),
        t1 = this._vlist$_overflow;
      return typeof t1 == "number" && t1 > 1e-10 ? header + " OVERFLOWING" : header;
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$RenderBox$debugFillProperties(properties);
      properties.add$1(0, C.EnumProperty$("crossAxisAlignment", _this._vlist$_crossAxisAlignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      properties.add$1(0, C.EnumProperty$("textDirection", _this._vlist$_textDirection, _null, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, C.EnumProperty$("textBaseline", _this._vlist$_textBaseline, _null, D.DiagnosticLevel_3, type$.TextBaseline));
      properties.add$1(0, C.IntProperty$("baselineReferenceWidgetIndex", _this._baselineReferenceWidgetIndex, D.C__NoDefaultValue, _null, D.DiagnosticLevel_3, _null));
    }
  };
  A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.VListParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.VListParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    },
    reassemble$0() {
      this.super$RenderObject$reassemble();
      C.assertHelper(new A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure(this).call$0());
    }
  };
  A.DelimiterConf.prototype = {};
  A._KatexImagesData.prototype = {};
  A.BuildException.prototype = {$isException: 1, $isFlutterMathException: 1};
  A.Math.prototype = {
    build$1(context) {
      var options, child, e, e0, effectiveTextStyle, t2, t3, value, result, exception, _this = this, _null = null,
        t1 = _this.parseError;
      if (t1 != null)
        return _this.onErrorFallback.call$1(t1);
      options = _this.options;
      if (options == null) {
        effectiveTextStyle = _this.textStyle;
        if (effectiveTextStyle.inherit) {
          t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
          effectiveTextStyle = (t1 == null ? D.DefaultTextStyle_4Wa : t1).style.merge$1(effectiveTextStyle);
        }
        t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_16);
        t1 = t1 == null ? _null : t1.boldText;
        if (t1 === true)
          effectiveTextStyle = effectiveTextStyle.merge$1(D.TextStyle_TJs);
        t1 = effectiveTextStyle.fontSize;
        t1.toString;
        t2 = effectiveTextStyle.fontWeight;
        t2 = t2 !== D.FontWeight_3_400 && t2 != null ? new A.FontOptions("Main", t2, D.FontStyle_0, B.List_empty21) : _null;
        t3 = effectiveTextStyle.color;
        t3.toString;
        options = A.MathOptions_MathOptions(t3, t1 * _this.textScaleFactor, _null, t2, B.MathSize_5, _this.mathStyle, _null);
      }
      child = null;
      try {
        t1 = _this.ast;
        t1.toString;
        t2 = type$.MathOptions._as(options);
        value = t1.__SyntaxTree_root_FI;
        if (value === $) {
          result = A.SyntaxNode$(_null, -1, t1.greenRoot);
          value !== $ && C.throwLateFieldADI("root");
          t1.__SyntaxTree_root_FI = result;
          value = result;
        }
        child = value.buildWidget$1(t2).widget;
      } catch (exception) {
        t1 = C.unwrapException(exception);
        if (t1 instanceof A.BuildException) {
          e = t1;
          return _this.onErrorFallback.call$1(e);
        } else {
          e0 = t1;
          t1 = _this.onErrorFallback.call$1(new A.BuildException("Unsanitized build exception detected: " + C.S(e0) + string$.x2ePleas));
          return t1;
        }
      }
      return A.Provider$value(child, B.FlutterMathMode_2, type$.FlutterMathMode);
    }
  };
  A.FlutterMathMode.prototype = {
    _enumToString$0() {
      return "FlutterMathMode." + this._name;
    }
  };
  A.Cache0.prototype = {
    clear$0(_) {
      this._cache$_cache.clear$0(0);
    },
    putIfAbsent$2(_, key, loader) {
      var t2, pendingResult, t3, result, _this = this, t1 = {};
      type$.Future_ByteData_Function._as(loader);
      t2 = _this._cache$_pending;
      pendingResult = t2.$index(0, key);
      if (pendingResult != null)
        return pendingResult;
      t3 = _this._cache$_cache;
      result = t3.$index(0, key);
      t1.result = result;
      if (result != null)
        t3.remove$1(0, key);
      else {
        pendingResult = loader.call$0();
        t2.$indexSet(0, key, pendingResult);
        pendingResult.then$1$1(0, new A.Cache_putIfAbsent_closure(t1, _this, key), type$.Null);
      }
      t2 = t1.result;
      if (t2 != null) {
        _this._cache$_add$2(0, key, t2);
        t1 = t1.result;
        t1.toString;
        return new C.SynchronousFuture(t1, type$.SynchronousFuture_ByteData);
      }
      C.assertHelper(t3.__js_helper$_length <= 100);
      pendingResult.toString;
      return pendingResult;
    },
    _cache$_add$2(_, key, result) {
      var t2,
        t1 = this._cache$_cache;
      if (t1.containsKey$1(0, key))
        t1.remove$1(0, key);
      else {
        t2 = t1.__js_helper$_length;
        if (t2 === 100)
          t1.remove$1(0, new C.LinkedHashMapKeysIterable(t1, C._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>")).get$first(0));
      }
      C.assertHelper(t1.__js_helper$_length < 100);
      t1.$indexSet(0, key, result);
      C.assertHelper(this._cache$_cache.__js_helper$_length <= 100);
    }
  };
  A.SvgTheme.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.SvgTheme)
        t1 = D.Color_vnR.$eq(0, D.Color_vnR);
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(D.Color_vnR, 14, 7, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "SvgTheme(currentColor: " + D.Color_vnR.toString$0(0) + ", fontSize: 14, xHeight: 7)";
    }
  };
  A.SvgLoader.prototype = {
    getTheme$1(context) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSvgTheme);
      return B.C_SvgTheme;
    },
    _load$1(context) {
      return new C.SynchronousFuture(null, C._instanceType(this)._eval$1("SynchronousFuture<SvgLoader.T?>")).then$1$1(0, new A.SvgLoader__load_closure(this, this.getTheme$1(context)), type$.ByteData);
    },
    loadBytes$1(context) {
      return $.$get$svg().cache.putIfAbsent$2(0, this.cacheKey$1(context), new A.SvgLoader_loadBytes_closure(this, context));
    },
    cacheKey$1(context) {
      return new A.SvgCacheKey(this.getTheme$1(context), this, this.colorMapper);
    }
  };
  A.SvgCacheKey.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.theme, this.keyData, this.colorMapper, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof A.SvgCacheKey)
        if (other.theme.$eq(0, this.theme))
          t1 = other.keyData.$eq(0, this.keyData);
      return t1;
    }
  };
  A.SvgStringLoader.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this._svg, this.theme, this.colorMapper, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A.SvgStringLoader)
        t1 = other._svg === this._svg;
      else
        t1 = false;
      return t1;
    }
  };
  A.Svg.prototype = {};
  A.SvgPicture.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      return new A.VectorGraphic(_this.bytesLoader, _this.width, _this.height, _this.fit, _this.alignment, false, _null, false, D.Clip_1, _null, _null, _null, _this.colorFilter, _null, B.RenderingStrategy_1, true, _null);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.StringProperty$("bytesLoader", "Instance of '" + C.Primitives_objectTypeName(_this.bytesLoader) + "'", D.C__NoDefaultValue, true, false));
      properties.add$1(0, C.DoubleProperty$("width", _this.width, _null, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DoubleProperty$("height", _this.height, _null, _null, D.DiagnosticLevel_3, true, _null, _null));
      properties.add$1(0, C.DiagnosticsProperty$("alignment", _this.alignment, true, D.Alignment_0_0, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.AlignmentGeometry));
      t1 = type$.bool;
      properties.add$1(0, C.DiagnosticsProperty$("allowDrawingOutsideViewBox", false, true, false, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.EnumProperty$("clipBehavior", D.Clip_1, D.BoxFit_1, D.DiagnosticLevel_3, type$.Clip));
      properties.add$1(0, C.StringProperty$("colorFilter", J.toString$0$(_this.colorFilter), _null, true, true));
      properties.add$1(0, C.EnumProperty$("fit", _this.fit, D.BoxFit_1, D.DiagnosticLevel_3, type$.BoxFit));
      properties.add$1(0, C.DiagnosticsProperty$("placeholderBuilder", _null, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Function));
      properties.add$1(0, C.DiagnosticsProperty$("matchTextDirection", false, true, false, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("excludeFromSemantics", false, true, false, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.StringProperty$("semanticsLabel", _null, _null, true, true));
    }
  };
  A.FlyerChatImageMessage.prototype = {
    createState$0() {
      return new A._FlyerChatImageMessageState(null, null, D._StateLifecycle_0);
    }
  };
  A._FlyerChatImageMessageState.prototype = {
    initState$0() {
      var t1, height, width, t2, t3, t4, thumbhashBytes, image, t5, t6, t7, t8, t9, _this = this, _null = null;
      _this.super$State$initState();
      t1 = _this._widget.message;
      height = t1.height;
      width = t1.width;
      t2 = height == null;
      if (!t2 && width != null && height > 0 && width > 0) {
        if (typeof width !== "number")
          return width.$div();
        if (typeof height !== "number")
          return C.iae(height);
        _this.___FlyerChatImageMessageState__aspectRatio_A = width / height;
      } else {
        t3 = t1.thumbhash;
        t4 = t3 == null ? _null : t3.length !== 0;
        if (t4 === true) {
          t3.toString;
          thumbhashBytes = D.C_Base64Decoder.convert$1(D.C_Base64Codec.normalize$1(0, t3));
          _this.___FlyerChatImageMessageState__aspectRatio_A = A.thumbHashToApproximateAspectRatio(thumbhashBytes);
          _this.set$_placeholderProvider(new A.MemoryImage(A.rgbaToBmp(A.thumbHashToRGBA(thumbhashBytes))));
        } else {
          t1 = t1.blurhash;
          t3 = t1 == null ? _null : t1.length !== 0;
          if (t3 === true) {
            _this.___FlyerChatImageMessageState__aspectRatio_A = 1;
            t1.toString;
            image = new A.Image0();
            image.Image$fromBytes$19$backgroundColor$bytes$bytesOffset$exif$format$frameDuration$frameIndex$frameType$height$iccp$loopCount$numChannels$order$palette$paletteFormat$rowStride$textData$width$withPalette(_null, D.NativeUint8List_methods.get$buffer(A._transform0(35, 20, A.BlurHash_BlurHash$decode(t1).components)), 0, _null, B.Format_3, 0, 0, B.FrameType_2, 20, _null, 0, 4, _null, _null, B.Format_3, _null, _null, 35, false);
            t1 = new Uint8Array(64);
            t3 = new Uint8Array(64);
            t4 = new Float32Array(64);
            t5 = new Float32Array(64);
            t6 = C.List_List$filled(65535, _null, false, type$.nullable_List_int);
            t7 = type$.nullable_int;
            t8 = C.List_List$filled(65535, _null, false, t7);
            t9 = C.List_List$filled(64, _null, false, t7);
            t7 = C.List_List$filled(64, _null, false, t7);
            t1 = new A.JpegEncoder(t1, t3, t4, t5, t6, t8, t9, t7, new Int32Array(2048));
            t1.set$_ydcHuffman(t1._computeHuffmanTable$2(B.List_zcj, B.List_74c));
            t1.set$_uvdcHuffman(t1._computeHuffmanTable$2(B.List_NZS, B.List_74c));
            t3 = type$.List_nullable_List_int;
            t1.set$__JpegEncoder__yacHuffman_A(t3._as(t1._computeHuffmanTable$2(B.List_2BR, B.List_CZS)));
            t1.set$__JpegEncoder__uvacHuffman_A(t3._as(t1._computeHuffmanTable$2(B.List_GUW, B.List_X1N)));
            t1._initCategoryNumber$0();
            t1._initRgbYuvTable$0();
            t1.setQuality$1(100);
            _this.set$_placeholderProvider(new A.MemoryImage(t1.encode$2$chroma(image, B.JpegChroma_0)));
          } else
            _this.___FlyerChatImageMessageState__aspectRatio_A = 1;
        }
      }
      t1 = type$.ChatController;
      t1 = t1._as(A.Provider_of(_this.get$context(0), false, t1));
      _this.___FlyerChatImageMessageState__chatController_F !== $ && C.throwLateFieldAI("_chatController");
      _this.___FlyerChatImageMessageState__chatController_F = t1;
      _this.set$___FlyerChatImageMessageState__imageProvider_A(type$.ImageProvider_Object._as(_this.get$_targetProvider()));
      if (width == null || t2) {
        t1 = _this.___FlyerChatImageMessageState__imageProvider_A;
        t1 === $ && C.throwLateFieldNI("_imageProvider");
        A.getImageDimensions(t1).then$1$1(0, new A._FlyerChatImageMessageState_initState_closure(_this), type$.Null);
      }
    },
    didUpdateWidget$1(oldWidget) {
      var t1, newImage, _this = this;
      type$.FlyerChatImageMessage._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget.message;
      if (oldWidget.message.source !== t1.source) {
        newImage = _this.get$_targetProvider();
        A.precacheImage(newImage, _this.get$context(0)).then$1$1(0, new A._FlyerChatImageMessageState_didUpdateWidget_closure(_this, newImage), type$.Null);
      }
    },
    dispose$0() {
      var t1 = this._placeholderProvider;
      if (t1 != null)
        t1.evict$0();
      this.super$__FlyerChatImageMessageState_State_TickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var t2, t3, t4, timeAndStatus, _this = this, _null = null,
        theme = A.SelectContext_select(context, new A._FlyerChatImageMessageState_build_closure(), type$.ChatTheme, type$.Record_4_TextStyle_labelSmall_and_Color_onSurface_and_BorderRadiusGeometry_shape_and_Color_surfaceContainerLow),
        isSentByMe = J.$eq$(A.Provider_of(context, false, type$.String), _this._widget.message.authorId),
        textDirection = C.Directionality_of(context),
        t1 = _this._widget;
      t1 = t1.message.get$resolvedTime();
      t2 = _this._widget.message.get$resolvedStatus();
      _this._widget.toString;
      t3 = D.Color_vnR.withValues$1$alpha(0.6);
      _this._widget.toString;
      t4 = theme._values[0].copyWith$1$color(D.Color_wst);
      timeAndStatus = new A.TimeAndStatus0(t1, t2, true, isSentByMe, t3, t4, _null);
      _this._widget.toString;
      t1 = theme._values[2];
      t2 = _this.___FlyerChatImageMessageState__aspectRatio_A;
      t2 === $ && C.throwLateFieldNI("_aspectRatio");
      t3 = _this._buildStack$4(_null, theme, textDirection, timeAndStatus);
      C.assertHelper(t2 > 0);
      return C.ClipRRect$(t1, C.Container$(_null, new A.AspectRatio(t2, t3, _null), D.Clip_0, _null, B.BoxConstraints_yse, _null, _null, _null, _null, _null, _null, _null, _null, _null));
    },
    _buildStack$4(constraints, theme, textDirection, timeAndStatus) {
      var t2, _this = this, _null = null,
        t1 = _this._placeholderProvider;
      if (t1 != null)
        t1 = C.Image$(_null, D.BoxFit_0, _null, _null, t1, _null, _null, _null);
      else {
        _this._widget.toString;
        t1 = theme._values[3];
        t1 = C.Container$(_null, _null, D.Clip_0, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      t2 = _this.___FlyerChatImageMessageState__imageProvider_A;
      t2 === $ && C.throwLateFieldNI("_imageProvider");
      _this._widget.toString;
      t2 = C._setArrayType([t1, C.Image$(_null, D.BoxFit_0, new A._FlyerChatImageMessageState__buildStack_closure(_this), _null, t2, new A._FlyerChatImageMessageState__buildStack_closure0(_this, theme), _null, _null)], type$.JSArray_Widget);
      t1 = _this.___FlyerChatImageMessageState__chatController_F;
      t1 === $ && C.throwLateFieldNI("_chatController");
      t2.push(new A.StreamBuilder(new A._FlyerChatImageMessageState__buildStack_closure1(_this, theme), t1.getUploadProgress$1(_this._widget.message.id), _null, type$.StreamBuilder_double));
      _this._widget.toString;
      if (timeAndStatus != null)
        t2.push(C.Positioned_Positioned$directional(8, timeAndStatus, 8, _null, _null, textDirection, _null, _null));
      return new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_1, D.Clip_1, t2, _null);
    },
    get$_targetProvider() {
      var t1 = this._widget.customImageProvider;
      return t1;
    },
    set$___FlyerChatImageMessageState__imageProvider_A(___FlyerChatImageMessageState__imageProvider_A) {
      this.___FlyerChatImageMessageState__imageProvider_A = type$.ImageProvider_Object._as(___FlyerChatImageMessageState__imageProvider_A);
    },
    set$_placeholderProvider(_placeholderProvider) {
      this._placeholderProvider = type$.nullable_ImageProvider_Object._as(_placeholderProvider);
    },
    $isTickerProvider: 1
  };
  A.TimeAndStatus0.prototype = {
    build$1(context) {
      var t4, _this = this, _null = null,
        timeFormat = A.Provider_of(context, true, type$.DateFormat),
        t1 = C.BoxDecoration$(_null, _null, C.BorderRadius$circular(12), _null, _this.backgroundColor, _null, _null, D.BoxShape_0),
        t2 = C._setArrayType([], type$.JSArray_Widget),
        t3 = _this.time;
      if (t3 != null)
        t2.push(C.Text$(timeFormat.format$1(t3.toLocal$0()), _null, _null, _null, _null, _null, _null, _null, _this.textStyle, _null, _null, _null, _null, _null));
      if (_this.showStatus && _this.status != null) {
        t3 = _this.status;
        t4 = _this.textStyle;
        if (t3 === D.MessageStatus_3)
          t2.push(new C.SizedBox(6, 6, E.CircularProgressIndicator$(_null, t4.color, _null, _null, _null, _null, _null, 2, _null, _null), _null));
        else {
          t3.toString;
          t3 = A.getIconForStatus(t3);
          t2.push(C.Icon$(t3, t4.color, _null, 12));
        }
      }
      return C.Container$(_null, C.Row$(t2, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 2, _null, _null, D.VerticalDirection_1), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, D.EdgeInsets_8_4_8_4, _null, _null, _null);
    }
  };
  A.__FlyerChatImageMessageState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__FlyerChatImageMessageState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.FlyerChatTextMessage.prototype = {
    get$_flyer_chat_text_message$_isOnlyEmoji() {
      var t1 = this.message.get$metadata(0);
      return J.$eq$(t1 == null ? null : J.$index$asx(t1, "isOnlyEmoji"), true);
    },
    build$1(context) {
      var t4, t5, textDirection, t6, t7, _this = this, _null = null,
        theme = A.SelectContext_select(context, new A.FlyerChatTextMessage_build_closure(), type$.ChatTheme, type$.Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer),
        t1 = _this.message,
        isSentByMe = J.$eq$(A.Provider_of(context, false, type$.String), t1.authorId),
        backgroundColor = _this._flyer_chat_text_message$_resolveBackgroundColor$2(isSentByMe, theme),
        paragraphStyle = _this._flyer_chat_text_message$_resolveParagraphStyle$2(isSentByMe, theme),
        timeStyle = _this._flyer_chat_text_message$_resolveTimeStyle$2(isSentByMe, theme),
        t2 = t1.get$resolvedTime(),
        t3 = t1.get$resolvedStatus(),
        timeAndStatus = new A.TimeAndStatus2(t2, t3, true, isSentByMe, timeStyle, _null);
      t2 = A.GptMarkdownTheme_of(context);
      if (_this.get$_flyer_chat_text_message$_isOnlyEmoji())
        t3 = paragraphStyle.copyWith$1$fontSize(48);
      else
        t3 = paragraphStyle;
      t3 = A.GptMarkdown$(t1.text, _null, t3);
      A.Provider_of(context, false, type$.Builders).toString;
      t1 = theme._values[5];
      t4 = _this.get$_flyer_chat_text_message$_isOnlyEmoji() ? _null : C.BoxDecoration$(_null, _null, _null, _null, backgroundColor, _null, _null, D.BoxShape_0);
      if (_this.get$_flyer_chat_text_message$_isOnlyEmoji()) {
        t5 = B.EdgeInsets_16_10_16_10.get$horizontal();
        t5 /= 2;
        t5 = new C.EdgeInsets(t5, 0, t5, 0);
      } else
        t5 = B.EdgeInsets_16_10_16_10;
      textDirection = C.Directionality_of(context);
      t6 = type$.JSArray_Widget;
      t7 = C._setArrayType([], t6);
      t7.push(new A.GptMarkdownTheme(new A.GptMarkdownThemeData(t2.highlightColor, t2.h1, t2.h2, t2.h3, t2.h4, t2.h5, t2.h6, t2.hrLineThickness, t2.hrLineColor, t2.linkColor, t2.linkHoverColor), t3, _null));
      t7.push(C.Opacity$(timeAndStatus, 0));
      t2 = C._setArrayType([C.Column$(t7, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1)], t6);
      if (timeAndStatus != null)
        t2.push(C.Positioned_Positioned$directional(0, timeAndStatus, 0, _null, _null, textDirection, _null, _null));
      return C.ClipRRect$(t1, C.Container$(_null, C.Column$(C._setArrayType([C.Container$(_null, new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, t2, _null), D.Clip_0, _null, _null, _null, _null, _null, _null, _null, t5, _null, _null, _null)], t6), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, _null, _this.constraints, t4, _null, _null, _null, _null, _null, _null, _null, _null));
    },
    _flyer_chat_text_message$_resolveBackgroundColor$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        t1 = theme._values[4];
        return t1;
      }
      t1 = theme._values[6];
      return t1;
    },
    _flyer_chat_text_message$_resolveParagraphStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        t1 = theme._values;
        t1 = t1[0].copyWith$1$color(t1[2]);
        return t1;
      }
      t1 = theme._values;
      t1 = t1[0].copyWith$1$color(t1[3]);
      return t1;
    },
    _flyer_chat_text_message$_resolveTimeStyle$2(isSentByMe, theme) {
      var t1, t2;
      if (isSentByMe) {
        t1 = theme._values;
        t2 = t1[1];
        t1 = t2.copyWith$1$color(this.get$_flyer_chat_text_message$_isOnlyEmoji() ? t1[3] : t1[2]);
        return t1;
      }
      t1 = theme._values;
      t1 = t1[1].copyWith$1$color(t1[3]);
      return t1;
    }
  };
  A.TimeAndStatus2.prototype = {
    build$1(context) {
      var t3, _this = this, _null = null,
        timeFormat = A.Provider_of(context, true, type$.DateFormat),
        t1 = C._setArrayType([], type$.JSArray_Widget),
        t2 = _this.time;
      if (t2 != null)
        t1.push(C.Text$(timeFormat.format$1(t2.toLocal$0()), _null, _null, _null, _null, _null, _null, _null, _this.textStyle, _null, _null, _null, _null, _null));
      if (_this.showStatus && _this.status != null) {
        t2 = _this.status;
        t3 = _this.textStyle;
        if (t2 === D.MessageStatus_3)
          t1.push(new C.SizedBox(6, 6, E.CircularProgressIndicator$(_null, t3.color, _null, _null, _null, _null, _null, 2, _null, _null), _null));
        else {
          t2.toString;
          t2 = A.getIconForStatus(t2);
          t1.push(C.Icon$(t2, t3.color, _null, 12));
        }
      }
      return C.Row$(t1, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 2, _null, _null, D.VerticalDirection_1);
    }
  };
  A.TextStreamMessageMode.prototype = {
    _enumToString$0() {
      return "TextStreamMessageMode." + this._name;
    }
  };
  A.FlyerChatTextStreamMessage.prototype = {
    createState$0() {
      return new A._FlyerChatTextStreamMessageState(C._setArrayType([], type$.JSArray_TextSegment), null, null, D._StateLifecycle_0);
    }
  };
  A._FlyerChatTextStreamMessageState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._updateSegmentsFromState$2$isInitial(this._widget.streamState, true);
    },
    dispose$0() {
      this._disposeAllSegmentControllers$0();
      this.super$__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2;
      type$.FlyerChatTextStreamMessage._as(oldWidget);
      this.super$State$didUpdateWidget(oldWidget);
      t1 = this._widget.streamState;
      t2 = oldWidget.streamState;
      if (t1 === t2)
        return;
      this._updateSegmentsFromState$2$oldState(t1, t2);
    },
    _updateSegmentsFromState$3$isInitial$oldState(newState, isInitial, oldState) {
      var initialText, t1, newText, t2, currentSegmentText, finalText, t3, t4, _this = this;
      if (isInitial) {
        _this._disposeAllSegmentControllers$0();
        if (newState instanceof C.StreamStateStreaming)
          initialText = newState.accumulatedText;
        else if (newState instanceof C.StreamStateError) {
          initialText = newState.accumulatedText;
          if (initialText == null)
            initialText = "";
        } else
          initialText = "";
        t1 = C._setArrayType([], type$.JSArray_TextSegment);
        if (initialText.length !== 0)
          t1.push(new A.StaticSegment(initialText));
        _this.set$_segments(t1);
      } else if (newState instanceof C.StreamStateStreaming) {
        newText = newState.accumulatedText;
        t1 = _this._segments;
        t2 = C._arrayInstanceType(t1);
        currentSegmentText = new C.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure()), t2._eval$1("MappedListIterable<1,String>")).join$1(0, "");
        t1 = currentSegmentText.length;
        if (newText.length > t1 && D.JSString_methods.startsWith$1(newText, currentSegmentText))
          _this._addNewAnimatingChunk$1(D.JSString_methods.substring$1(newText, t1));
        else if (newText !== currentSegmentText) {
          _this._disposeAllSegmentControllers$0();
          _this.setState$1(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0(_this, newText));
        }
      } else {
        t1 = {};
        _this._disposeAllSegmentControllers$0();
        t1.finalText = "";
        t2 = "";
        if (newState instanceof C.StreamStateError) {
          finalText = newState.accumulatedText;
          if (finalText == null)
            finalText = "";
          t1.finalText = finalText;
          t2 = finalText;
        }
        t3 = _this._segments;
        t4 = C._arrayInstanceType(t3);
        if (t2 !== new C.MappedListIterable(t3, t4._eval$1("String(1)")._as(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1()), t4._eval$1("MappedListIterable<1,String>")).join$1(0, "") || D.JSArray_methods.any$1(_this._segments, new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2()))
          _this.setState$1(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3(t1, _this));
      }
    },
    _updateSegmentsFromState$2$oldState(newState, oldState) {
      return this._updateSegmentsFromState$3$isInitial$oldState(newState, false, oldState);
    },
    _updateSegmentsFromState$2$isInitial(newState, isInitial) {
      return this._updateSegmentsFromState$3$isInitial$oldState(newState, isInitial, null);
    },
    _addNewAnimatingChunk$1(chunk) {
      var controller, newSegment, listener, t1, t2, _this = this, _null = null;
      _this._widget.toString;
      controller = C.AnimationController$(_null, D.Duration_350000, _null, _null, _this);
      newSegment = new A.AnimatingSegment(controller, C.CurvedAnimation$(D.Cubic_uDh, controller, _null), chunk);
      listener = new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure(_this);
      type$.void_Function._as(listener);
      controller.didRegisterListener$0();
      controller.AnimationLocalListenersMixin__listeners.add$1(0, listener);
      t1 = type$.void_Function_AnimationStatus._as(new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0(_this, controller, listener, newSegment));
      controller.didRegisterListener$0();
      t2 = controller.AnimationLocalStatusListenersMixin__statusListeners;
      t2.$ti._precomputed1._as(t1);
      t2._isDirty = true;
      D.JSArray_methods.add$1(t2._list, t1);
      _this.setState$1(new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1(_this, newSegment));
      controller.forward$1$from(0, 0);
    },
    _disposeAllSegmentControllers$0() {
      var t1, t2, _i, segment;
      for (t1 = this._segments, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        segment = t1[_i];
        if (segment instanceof A.AnimatingSegment)
          segment.controller.dispose$0();
      }
    },
    _finalizeChunkAnimation$1(completedSegment) {
      if (this._framework$_element == null)
        return;
      this.setState$1(new A._FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure(this, completedSegment));
    },
    build$1(context) {
      var t2, timeAndStatus, textContent, _this = this, _null = null,
        theme = A.SelectContext_select(context, new A._FlyerChatTextStreamMessageState_build_closure(), type$.ChatTheme, type$.Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer),
        isSentByMe = J.$eq$(A.Provider_of(context, false, type$.String), _this._widget.message.authorId),
        backgroundColor = _this._flyer_chat_text_stream_message$_resolveBackgroundColor$2(isSentByMe, theme),
        paragraphStyle = _this._resolveParagraphStyle$2(isSentByMe, theme),
        timeStyle = _this._flyer_chat_text_stream_message$_resolveTimeStyle$2(isSentByMe, theme),
        t1 = _this._widget;
      t1 = t1.message.get$resolvedTime();
      t2 = _this._widget.message.get$resolvedStatus();
      _this._widget.toString;
      timeAndStatus = new A.TimeAndStatus1(t1, t2, true, false, timeStyle, _null);
      textContent = _this._buildTextContent$2(paragraphStyle, theme);
      _this._widget.toString;
      t1 = theme._values[5];
      t1 = C.BoxDecoration$(_null, _null, t1, _null, backgroundColor, _null, _null, D.BoxShape_0);
      return C.Container$(_null, _this._buildContentBasedOnPosition$4$context$paragraphStyle$textContent$timeAndStatus(context, paragraphStyle, textContent, timeAndStatus), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, B.EdgeInsets_16_10_16_10, _null, _null, _null);
    },
    _buildTextContent$2(paragraphStyle, theme) {
      var errorText, t3, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.streamState;
      if (t2 instanceof C.StreamStateLoading) {
        t1 = theme._values;
        t2 = t1[3].withValues$1$alpha(0.3);
        _this._widget.toString;
        t1 = t1[3].withValues$1$alpha(0.8);
        _this._widget.toString;
        return new A.Shimmer(C.Text$("Thinking", _null, _null, _null, _null, _null, _null, _null, paragraphStyle, _null, _null, _null, _null, _null), D.Duration_1000000, new A.LinearGradient(D.Alignment_m1_m1, D.Alignment_1_0, D.TileMode_0, C._setArrayType([t2, t2, t1, t2, t2], type$.JSArray_Color), B.List_YIL, _null), _null);
      }
      if (t2 instanceof C.StreamStateError) {
        t1 = t2.accumulatedText;
        t2 = t2.error;
        errorText = t1 != null ? t1 + "\n\nError: " + C.S(t2) : "Error: " + C.S(t2);
        t1 = paragraphStyle.copyWith$1$color(D.MaterialColor_nI1);
        return C.Text$(errorText, _null, _null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null);
      }
      if (t2 instanceof C.StreamStateStreaming) {
        t2 = _this._segments;
        if (t2.length === 0) {
          t1 = paragraphStyle.color;
          t1 = paragraphStyle.copyWith$1$color(t1 == null ? _null : t1.withValues$1$alpha(0.5));
          return C.Text$("...", _null, _null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null);
        }
        t3 = C._arrayInstanceType(t2);
        if (t1.mode === B.TextStreamMessageMode_1)
          return A.GptMarkdown$(new C.MappedListIterable(t2, t3._eval$1("String(1)")._as(new A._FlyerChatTextStreamMessageState__buildTextContent_closure()), t3._eval$1("MappedListIterable<1,String>")).join$1(0, ""), _null, paragraphStyle);
        else {
          t1 = t3._eval$1("MappedListIterable<1,InlineSpan>");
          return C.RichText$(_null, _null, _null, D.TextOverflow_0, _null, _null, true, _null, C.TextSpan$(C.List_List$of(new C.MappedListIterable(t2, t3._eval$1("InlineSpan(1)")._as(new A._FlyerChatTextStreamMessageState__buildTextContent_closure0(paragraphStyle)), t1), true, t1._eval$1("ListIterable.E")), paragraphStyle, _null), D.TextAlign_4, _null, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
        }
      }
      return D.SizedBox_0_0_null_null;
    },
    _buildContentBasedOnPosition$4$context$paragraphStyle$textContent$timeAndStatus(context, paragraphStyle, textContent, timeAndStatus) {
      var textDirection, t1, t2, _null = null;
      if (timeAndStatus == null)
        return textContent;
      textDirection = C.Directionality_of(context);
      this._widget.toString;
      switch (1) {
        case 1:
          t1 = paragraphStyle.height;
          if (t1 == null)
            t1 = 1;
          t2 = paragraphStyle.fontSize;
          t1 *= t2 == null ? 0 : t2;
          if (t1 == null)
            t1 = 0;
          return new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([new C.Padding(new C.EdgeInsets(0, 0, 0, t1), textContent, _null), C.Opacity$(timeAndStatus, 0), C.Positioned_Positioned$directional(0, timeAndStatus, 0, _null, _null, textDirection, _null, _null)], type$.JSArray_Widget), _null);
      }
    },
    _flyer_chat_text_stream_message$_resolveBackgroundColor$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        this._widget.toString;
        t1 = theme._values[4];
        return t1;
      }
      this._widget.toString;
      t1 = theme._values[6];
      return t1;
    },
    _resolveParagraphStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        this._widget.toString;
        t1 = theme._values;
        t1 = t1[0].copyWith$1$color(t1[2]);
        return t1;
      }
      this._widget.toString;
      t1 = theme._values;
      t1 = t1[0].copyWith$1$color(t1[3]);
      return t1;
    },
    _flyer_chat_text_stream_message$_resolveTimeStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        this._widget.toString;
        t1 = theme._values;
        t1 = t1[1].copyWith$1$color(t1[2]);
        return t1;
      }
      this._widget.toString;
      t1 = theme._values;
      t1 = t1[1].copyWith$1$color(t1[3]);
      return t1;
    },
    set$_segments(_segments) {
      this._segments = type$.List_TextSegment._as(_segments);
    },
    $isTickerProvider: 1
  };
  A.TimeAndStatus1.prototype = {
    build$1(context) {
      var t3, _this = this, _null = null,
        timeFormat = A.Provider_of(context, true, type$.DateFormat),
        t1 = C._setArrayType([], type$.JSArray_Widget),
        t2 = _this.time;
      if (t2 != null)
        t1.push(C.Text$(timeFormat.format$1(t2.toLocal$0()), _null, _null, _null, _null, _null, _null, _null, _this.textStyle, _null, _null, _null, _null, _null));
      if (_this.showStatus && _this.status != null) {
        t2 = _this.status;
        t3 = _this.textStyle;
        if (t2 === D.MessageStatus_3)
          t1.push(new C.SizedBox(6, 6, E.CircularProgressIndicator$(_null, t3.color, _null, _null, _null, _null, _null, 2, _null, _null), _null));
        else {
          t2.toString;
          t2 = A.getIconForStatus(t2);
          t1.push(C.Icon$(t2, t3.color, _null, 12));
        }
      }
      return C.Row$(t1, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 2, _null, _null, D.VerticalDirection_1);
    }
  };
  A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, t3, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.TickerProviderStateMixin__tickers;
      if (t1 != null) {
        t2 = t1._collection$_length;
        t3 = t2 === 1 ? "" : "s";
        t3 = "tracking " + t2 + " ticker" + t3;
        t2 = t3;
      } else
        t2 = _null;
      properties.add$1(0, C.DiagnosticsProperty$("tickers", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Set_Ticker));
    }
  };
  A.TextSegment.prototype = {};
  A.StaticSegment.prototype = {};
  A.AnimatingSegment.prototype = {};
  A.FValueNotifier.prototype = {
    notifyListeners$0() {
      var t1, t2, _i;
      this.super$ChangeNotifier$notifyListeners();
      for (t1 = this._notifiers$_listeners, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].call$1(this._change_notifier$_value);
    },
    dispose$0() {
      D.JSArray_methods.clear$0(this._notifiers$_listeners);
      this.super$ChangeNotifier$dispose();
    }
  };
  A.FCalendar.prototype = {
    createState$0() {
      return new A._State1(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarStyle));
      properties.add$1(0, C.DiagnosticsProperty$("controller", _this.controller, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarController_dynamic));
      properties.add$1(0, C.ObjectFlagProperty$has("dayBuilder", _this.dayBuilder, D.DiagnosticLevel_3, type$.Widget_Function_3_BuildContext_and_Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today_and_nullable_Widget));
      t1 = type$.DateTime;
      properties.add$1(0, C.DiagnosticsProperty$("start", _this.start, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("end", _this.end, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("today", _this.today, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.void_Function_DateTime;
      properties.add$1(0, C.ObjectFlagProperty$has("onMonthChange", _null, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", _this.onPress, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onLongPress", _this.onLongPress, D.DiagnosticLevel_3, t1));
    }
  };
  A._State1.prototype = {
    initState$0() {
      var _this = this;
      _this.super$State$initState();
      _this.set$___State__type_A(type$.ValueNotifier_FCalendarPickerType._as(C.ValueNotifier$(_this._widget._initialType, type$.FCalendarPickerType)));
      _this.set$___State__month_A(type$.ValueNotifier_LocalDate._as(C.ValueNotifier$(_this._widget._initialMonth, type$.LocalDate)));
    },
    build$1(context) {
      var t3, _this = this, _null = null,
        style = _this._widget.style,
        t1 = 7 * style.dayPickerStyle.tileSize,
        t2 = _this.___State__month_A;
      t2 === $ && C.throwLateFieldNI("_month");
      t3 = _this.___State__type_A;
      t3 === $ && C.throwLateFieldNI("_type");
      return new C.DecoratedBox(style.decoration, D.DecorationPosition_0, new C.Padding(style.padding, new C.SizedBox(t1, t1 + 31 + 5, new C.Stack(D.Alignment_0_m1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([new C.ValueListenableBuilder(t2, new A._State_build_closure0(_this, style), _null, _null, type$.ValueListenableBuilder_LocalDate), new C.ValueListenableBuilder(t3, new A._State_build_closure1(_this, style), _null, _null, type$.ValueListenableBuilder_FCalendarPickerType)], type$.JSArray_Widget), _null), _null), _null), _null);
    },
    set$___State__type_A(___State__type_A) {
      this.___State__type_A = type$.ValueNotifier_FCalendarPickerType._as(___State__type_A);
    },
    set$___State__month_A(___State__month_A) {
      this.___State__month_A = type$.ValueNotifier_LocalDate._as(___State__month_A);
    }
  };
  A.FCalendarController.prototype = {};
  A._AutoDateController.prototype = {
    selectable$1(date) {
      return this._selectable.call$1(C.DateTime$utc(C.Primitives_getYear(date), C.Primitives_getMonth(date), C.Primitives_getDay(date), 0, 0, 0, 0, 0));
    },
    selected$1(_, date) {
      return J.$eq$(this._change_notifier$_value, C.DateTime$utc(C.Primitives_getYear(date), C.Primitives_getMonth(date), C.Primitives_getDay(date), 0, 0, 0, 0, 0));
    },
    select$1(_, date) {
      date = C.DateTime$utc(C.Primitives_getYear(date), C.Primitives_getMonth(date), C.Primitives_getDay(date), 0, 0, 0, 0, 0);
      this.super$ValueNotifier$value(0, J.$eq$(this._change_notifier$_value, date) ? null : date);
    }
  };
  A.DayPicker.prototype = {
    createState$0() {
      return new A._DayPickerState(C.SplayTreeMap$(null, type$.LocalDate, type$.FocusNode), D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarDayPickerStyle));
      properties.add$1(0, C.DiagnosticsProperty$("localization", _this.localization, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FLocalizations));
      properties.add$1(0, C.ObjectFlagProperty$has("dayBuilder", _this.dayBuilder, D.DiagnosticLevel_3, type$.Widget_Function_3_BuildContext_and_Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today_and_nullable_Widget));
      t1 = type$.LocalDate;
      properties.add$1(0, C.DiagnosticsProperty$("month", _this.month, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("today", _this.today, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("focused", _this.focused, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      t1 = type$.bool_Function_LocalDate;
      properties.add$1(0, C.ObjectFlagProperty$has("selectable", _this.selectable, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("selected", _this.selected, D.DiagnosticLevel_3, t1));
      t1 = type$.void_Function_LocalDate;
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", _this.onPress, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onLongPress", _this.onLongPress, D.DiagnosticLevel_3, t1));
    }
  };
  A._DayPickerState.prototype = {
    initState$0() {
      var firstDayOfWeek, firstDayOfMonth, difference, first, lastDayOfWeek, t1, t2, t3, last, date, _1_0, _this = this, _null = null;
      _this.super$State$initState();
      firstDayOfWeek = A.FDateTimeLocalizations_get_firstDayOfWeek(_this._widget.localization);
      firstDayOfMonth = A.LocalDate$_(A.DateTimeCopyWith_copyWith(_this._widget.month._native, 1, 0, 0, 0, 0, _null, 0, _null));
      difference = C.Primitives_getWeekday(firstDayOfMonth._native) - firstDayOfWeek;
      first = firstDayOfMonth.minus$1$days(difference < 0 ? difference + 7 : difference);
      lastDayOfWeek = firstDayOfWeek === 1 ? 7 : firstDayOfWeek - 1;
      t1 = _this._widget.month._native;
      t2 = A.Dates_leapYear(C.Primitives_getYear(t1)) ? B.List_Qv3 : B.List_fKm;
      t3 = C.Primitives_getMonth(t1) - 1;
      if (!(t3 >= 0 && t3 < t2.length))
        return C.ioore(t2, t3);
      t3 = A.LocalDate$_(A.DateTimeCopyWith_copyWith(t1, t2[t3], 0, 0, 0, 0, _null, 0, _null))._native;
      difference = lastDayOfWeek - C.Primitives_getWeekday(t3);
      last = A.LocalDate$_(A.DateTimes_plus(t3, difference < 0 ? difference + 7 : difference, 0, 0));
      for (t1 = _this._days, date = first; t2 = date._native, t3 = C._instanceType(date)._eval$1("Orderable.T")._as(last)._native, D.JSInt_methods.compareTo$1(1000 * t2._core$_value + t2._microsecond, 1000 * t3._core$_value + t3._microsecond) <= 0; date = A.LocalDate$_(A.DateTimes_plus(t2, 1, 0, 0)))
        t1.$indexSet(0, date, C.FocusNode$(true, date.toString$0(0), true, true, _null, _null, true));
      _1_0 = t1.$index(0, _this._widget.focused);
      if (_1_0 != null)
        _1_0.requestFocus$0();
    },
    build$1(context) {
      var t3, t4, date, focusNode, t5, t6, t7, t8, t9, t10, t11, t12, t13, _this = this, _null = null,
        t1 = _this._widget.style.tileSize,
        t2 = C.List_List$of(_this._headers$1(context), true, type$.Widget);
      for (t3 = _this._days, t4 = t3.$ti, t4 = new C._SplayTreeMapEntryIterator(t3, C._setArrayType([], t4._eval$1("JSArray<_SplayTreeMapNode<1,2>>")), t3._splayCount, t4._eval$1("_SplayTreeMapEntryIterator<1,2>")); t4.set$_collection$_current(_null), t4.super$_SplayTreeIterator$moveNext();) {
        t3 = t4.get$current(0);
        date = t3.key;
        focusNode = t3.value;
        t3 = _this._widget;
        t5 = t3.style;
        t6 = t3.localization;
        t7 = t3.dayBuilder;
        t8 = date._native;
        t9 = t3.month;
        t3 = t3.today;
        if (date !== t3) {
          t10 = false;
          if (C._instanceType(date)._eval$1("Orderable.T")._is(t3))
            if (C.getRuntimeTypeOfDartObject(date) === C.getRuntimeTypeOfDartObject(t3)) {
              t3 = t3._native;
              t3 = D.JSInt_methods.compareTo$1(1000 * t8._core$_value + t8._microsecond, 1000 * t3._core$_value + t3._microsecond) === 0;
            } else
              t3 = t10;
          else
            t3 = t10;
        } else
          t3 = true;
        t10 = _this._widget;
        t11 = t10.selectable;
        t12 = t10.selected;
        t13 = t10.onPress;
        t2.push(A.Entry_Entry$day(C.Primitives_getMonth(t8) === C.Primitives_getMonth(t9._native), date, t7, focusNode, t6, t10.onLongPress, t13, t11, t12, t5, t3));
      }
      t2 = C.SliverChildListDelegate$(t2, true, false, true);
      return new C.SizedBox(7 * t1, _null, new A.GridView(new A._GridDelegate(t1), t2, D.EdgeInsets_0_0_0_0, D.Axis_1, false, _null, _null, B.NeverScrollableScrollPhysics_null, _null, true, _null, 0, _null, _null, D.DragStartBehavior_1, D.ScrollViewKeyboardDismissBehavior_0, _null, D.Clip_1, D.HitTestBehavior_1, _null), _null);
    },
    _headers$1(__wc0_formal) {
      var t2, i, j, t3, t4, _null = null,
        firstDayOfWeek = A.FDateTimeLocalizations_get_firstDayOfWeek(this._widget.localization),
        t1 = this._widget.localization.localeName,
        narrowWeekdays = t1 === "" || D.JSString_methods.startsWith$1(t1, "en") ? B.List_F11 : C.DateFormat$yMMMMd(t1).get$dateSymbols().STANDALONENARROWWEEKDAYS;
      t1 = C._setArrayType([], type$.JSArray_Widget);
      for (t2 = narrowWeekdays.length, i = firstDayOfWeek, j = 0; j < 7; ++i, ++j) {
        t3 = D.JSInt_methods.$mod(i, 7);
        if (!(t3 < t2))
          return C.ioore(narrowWeekdays, t3);
        t3 = narrowWeekdays[t3];
        t4 = this._widget.style;
        t1.push(new C.ExcludeSemantics(true, C.Center$(new C.Text(t3, _null, t4.headerTextStyle, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null), _null));
      }
      return t1;
    },
    didUpdateWidget$1(old) {
      var _0_0, t1, focusNode, _this = this;
      type$.DayPicker._as(old);
      _this.super$State$didUpdateWidget(old);
      if (C.assertTest(old.month.$eq(0, _this._widget.month)))
        C.assertThrow("Current month must not change.");
      _0_0 = _this._days.$index(0, _this._widget.focused);
      if (_0_0 != null) {
        t1 = !J.$eq$(old.focused, _this._widget.focused);
        focusNode = _0_0;
      } else {
        focusNode = null;
        t1 = false;
      }
      if (t1)
        focusNode.requestFocus$0();
    },
    dispose$0() {
      var result, t4,
        t1 = this._days,
        t2 = t1.$ti,
        t3 = C._setArrayType([], t2._eval$1("JSArray<_SplayTreeMapNode<1,2>>"));
      t2 = new C._SplayTreeValueIterator(t1, t3, t1._splayCount, t2._eval$1("_SplayTreeValueIterator<1,2>"));
      while (true) {
        result = t2.super$_SplayTreeIterator$moveNext();
        t2.set$_collection$_current(result ? D.JSArray_methods.get$last(t3).value : null);
        if (!result)
          break;
        t1 = t2.get$current(0);
        t4 = t1._attachment;
        if (t4 != null)
          t4.detach$0(0);
        t1.super$ChangeNotifier$dispose();
      }
      this.super$State$dispose();
    }
  };
  A._GridDelegate.prototype = {
    getLayout$1(constraints) {
      var t1 = this.tileSize;
      return A.SliverGridRegularTileLayout$(t1, t1, 7, t1, t1, C.axisDirectionIsReversed(constraints.crossAxisDirection));
    },
    shouldRelayout$1(oldDelegate) {
      return this.tileSize !== type$._GridDelegate._as(oldDelegate).tileSize;
    }
  };
  A.PagedDayPicker.prototype = {
    createState$0() {
      return new A._PagedDayPickerState(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this;
      _this.super$PagedPicker$debugFillProperties(properties);
      properties.add$1(0, C.ObjectFlagProperty$has("selected", _this.selected, D.DiagnosticLevel_3, type$.bool_Function_LocalDate));
      t1 = type$.void_Function_LocalDate;
      properties.add$1(0, C.ObjectFlagProperty$has("onMonthChange", _this.onMonthChange, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", _this.onPress, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onLongPress", _this.onLongPress, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("dayBuilder", _this.dayBuilder, D.DiagnosticLevel_3, type$.Widget_Function_3_BuildContext_and_Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today_and_nullable_Widget));
    },
    onPress$1(arg0) {
      return this.onPress.call$1(arg0);
    }
  };
  A._PagedDayPickerState.prototype = {
    buildItem$2(context, page) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      C._asInt(page);
      t1 = _this._widget.style;
      t2 = C.Localizations_of(context, D.Type_FLocalizations_j3D, type$.FLocalizations);
      if (t2 == null)
        t2 = $.$get$FDefaultLocalizations__localizations();
      t3 = _this._widget;
      t4 = t3.dayBuilder;
      t3 = A.LocalDate$_(A.DateTimes_plus(A.LocalDate$_(A.DateTimes_truncate(t3.start._native, B.DateUnit_1))._native, 0, page, 0));
      t5 = _this._widget;
      return new A.DayPicker(t1.dayPickerStyle, t2, t4, t3, t5.today, _this.focusedDate, t5.selectable, t5.selected, new A._PagedDayPickerState_buildItem_closure(_this), t5.onLongPress, null);
    },
    onPageChange$1(page) {
      this.setState$1(new A._PagedDayPickerState_onPageChange_closure(this, C._asInt(page)));
    },
    onGridFocusChange$1(focused) {
      this.setState$1(new A._PagedDayPickerState_onGridFocusChange_closure(this, C._asBool(focused)));
    },
    _focusableDayForMonth$2(month, preferredDay) {
      var newFocus,
        t1 = month._native,
        t2 = A.Dates_leapYear(C.Primitives_getYear(t1)) ? B.List_Qv3 : B.List_fKm,
        t3 = C.Primitives_getMonth(t1) - 1;
      if (!(t3 >= 0 && t3 < t2.length))
        return C.ioore(t2, t3);
      if (preferredDay <= t2[t3]) {
        newFocus = month.copyWith$1$day(preferredDay);
        if (C.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      }
      for (newFocus = month; t2 = newFocus._native, C.Primitives_getMonth(t2) === C.Primitives_getMonth(t1); newFocus = A.LocalDate$_(A.DateTimes_plus(t2, 1, 0, 0)))
        if (C.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      return null;
    },
    delta$2(start, end) {
      var t1 = end._native,
        t2 = start._native;
      return (C.Primitives_getYear(t1) - C.Primitives_getYear(t2)) * 12 + C.Primitives_getMonth(t1) - C.Primitives_getMonth(t2);
    },
    get$directionOffset() {
      return B.Map_u8oBS;
    }
  };
  A.MonthPicker.prototype = {
    createState$0() {
      return new A._MonthPickerState(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("yearMonthStyle", _this.yearMonthStyle, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarEntryStyle));
      properties.add$1(0, C.DiagnosticsProperty$("dayStyle", _this.dayStyle, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarDayPickerStyle));
      t1 = type$.LocalDate;
      properties.add$1(0, C.DiagnosticsProperty$("currentYear", _this.currentYear, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("start", _this.start, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("end", _this.end, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("today", _this.today, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("focused", _this.focused, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", _this.onPress, D.DiagnosticLevel_2, type$.void_Function_LocalDate));
    }
  };
  A._MonthPickerState.prototype = {
    initState$0() {
      var _list, i, t1, t2, _this = this;
      _this.super$State$initState();
      _list = J.JSArray_JSArray$allocateGrowable(12, type$.FocusNode);
      for (i = 0; i < 12; ++i)
        _list[i] = C.FocusNode$(true, "" + i, true, true, null, null, true);
      _this.set$___MonthPickerState__months_A(type$.List_FocusNode._as(_list));
      t1 = _this._widget.focused;
      if (t1 != null) {
        t2 = _this.___MonthPickerState__months_A;
        t2 === $ && C.throwLateFieldNI("_months");
        t1 = C.Primitives_getMonth(t1._native) - 1;
        if (!(t1 >= 0 && t1 < 12))
          return C.ioore(t2, t1);
        t2[t1].requestFocus$0();
      }
    },
    build$1(context) {
      var month, i, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = A.SliverGridDelegateWithFixedCrossAxisCount$(3, 0, (_this._widget.dayStyle.tileSize - 5) * 7 / 5, 5),
        t2 = C._setArrayType([], type$.JSArray_Widget);
      for (month = _this._widget.currentYear, i = 0; i < 12; month = A.LocalDate$_(A.DateTimes_plus(t7, 0, 1, 0)), ++i) {
        t3 = _this._widget;
        t4 = t3.yearMonthStyle;
        t5 = _this.___MonthPickerState__months_A;
        t5 === $ && C.throwLateFieldNI("_months");
        t5 = t5[i];
        t3 = A.LocalDate$_(A.DateTimes_truncate(t3.today._native, B.DateUnit_1)).$eq(0, month);
        t6 = _this._widget;
        t7 = t6.start;
        t8 = t7._native;
        t7 = C._instanceType(t7)._eval$1("Orderable.T")._as(month)._native;
        t9 = 1000 * t7._core$_value + t7._microsecond;
        if (D.JSInt_methods.compareTo$1(1000 * t8._core$_value + t8._microsecond, t9) <= 0) {
          t8 = C._instanceType(month)._eval$1("Orderable.T")._as(t6.end)._native;
          t8 = D.JSInt_methods.compareTo$1(t9, 1000 * t8._core$_value + t8._microsecond) <= 0;
        } else
          t8 = false;
        t2.push(A.Entry_Entry$yearMonth(t3, month, t5, new A._MonthPickerState_build_closure(context), t6.onPress, t8, t4));
      }
      return new C.Padding(D.EdgeInsets_0_5_0_0, A.GridView$(t2, t1, D.EdgeInsets_0_0_0_0), null);
    },
    didUpdateWidget$1(old) {
      var t1, focused, t2, t3, _0_0, _this = this;
      type$.MonthPicker._as(old);
      _this.super$State$didUpdateWidget(old);
      if (C.assertTest(old.currentYear.$eq(0, _this._widget.currentYear)))
        C.assertThrow("currentYear must not change.");
      t1 = _this._widget;
      focused = t1.focused;
      t2 = true;
      if (focused != null) {
        t1 = C._instanceType(focused)._eval$1("Orderable.T")._as(t1.currentYear);
        t3 = focused._native;
        t3 = 1000 * t3._core$_value + t3._microsecond;
        t1 = t1._native;
        if (D.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) >= 0) {
          t1 = A.LocalDate$_(A.DateTimes_plus(t1, 0, 0, 1));
          C._instanceType(t1)._eval$1("Orderable.T")._as(focused);
          t1 = t1._native;
          t3 = D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0;
          t1 = t3;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return;
      t1 = _this.___MonthPickerState__months_A;
      t1 === $ && C.throwLateFieldNI("_months");
      t2 = C.Primitives_getMonth(focused._native) - 1;
      if (!(t2 >= 0 && t2 < 12))
        return C.ioore(t1, t2);
      _0_0 = t1[t2];
      t1 = J.$eq$(old.focused, _this._widget.focused);
      if (!t1)
        _0_0.requestFocus$0();
    },
    dispose$0() {
      var _i, node, t2,
        t1 = this.___MonthPickerState__months_A;
      t1 === $ && C.throwLateFieldNI("_months");
      _i = 0;
      for (; _i < 12; ++_i) {
        node = t1[_i];
        t2 = node._attachment;
        if (t2 != null)
          t2.detach$0(0);
        node.super$ChangeNotifier$dispose();
      }
      this.super$State$dispose();
    },
    set$___MonthPickerState__months_A(___MonthPickerState__months_A) {
      this.___MonthPickerState__months_A = type$.List_FocusNode._as(___MonthPickerState__months_A);
    }
  };
  A.PagedMonthPicker.prototype = {
    createState$0() {
      return new A._PagedMonthPickerState(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      this.super$PagedPicker$debugFillProperties(properties);
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", this.onPress, D.DiagnosticLevel_3, type$.void_Function_LocalDate));
    }
  };
  A._PagedMonthPickerState.prototype = {
    buildItem$2(context, page) {
      var t1, t2, t3, t4, t5, t6, t7;
      type$.BuildContext._as(context);
      C._asInt(page);
      t1 = this._widget;
      t2 = t1.style;
      t3 = t1.initial;
      t4 = t1.start;
      t5 = t1.end;
      t6 = t1.today;
      t7 = this.focusedDate;
      t1 = t1.onPress;
      if (C.assertTest(t3.$eq(0, A.LocalDate$_(A.DateTimes_truncate(t3._native, B.DateUnit_0)))))
        C.assertThrow("currentYear must be truncated to years");
      return new A.MonthPicker(t2.yearMonthPickerStyle, t2.dayPickerStyle, t3, t4, t5, t6, t7, t1, null);
    },
    onPageChange$1(page) {
      C._asInt(page);
    },
    onGridFocusChange$1(focused) {
      this.setState$1(new A._PagedMonthPickerState_onGridFocusChange_closure(this, C._asBool(focused)));
    },
    _focusableMonth$1(preferredMonth) {
      var end = A.LocalDate$_(A.DateTimes_plus(this._widget.initial._native, 0, 0, 1)),
        newFocus = this._widget.initial,
        t1 = newFocus._native,
        t2 = C._instanceType(newFocus)._eval$1("Orderable.T")._as(preferredMonth)._native;
      t2 = 1000 * t2._core$_value + t2._microsecond;
      if (D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t2) <= 0) {
        t1 = C._instanceType(preferredMonth)._eval$1("Orderable.T")._as(end)._native;
        t1 = D.JSInt_methods.compareTo$1(t2, 1000 * t1._core$_value + t1._microsecond) < 0;
      } else
        t1 = false;
      if (t1)
        return preferredMonth;
      for (; t1 = newFocus._native, t2 = C._instanceType(newFocus)._eval$1("Orderable.T")._as(end)._native, D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond) < 0; newFocus = A.LocalDate$_(A.DateTimes_plus(t1, 0, 1, 0)))
        if (C.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      return null;
    },
    delta$2(start, end) {
      return 0;
    },
    get$directionOffset() {
      return B.Map_u8guQ;
    }
  };
  A.Entry0.prototype = {
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarEntryStyle));
      properties.add$1(0, C.ObjectFlagProperty$has("builder", this.builder, D.DiagnosticLevel_3, type$.Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget));
    }
  };
  A._SelectableEntry.prototype = {
    build$1(__wc0_formal) {
      var _this = this, _null = null;
      return C.AnimatedTappable$(false, _this.builder, _null, true, _this.focusNode, _null, _null, _null, new A._SelectableEntry_build_closure(_this), new A._SelectableEntry_build_closure0(_this), _null, _this.selected, _this.semanticsLabel, _null);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null,
        _s8_ = "selected";
      _this.super$Entry$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("focusNode", _this.focusNode, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FocusNode));
      properties.add$1(0, C.DiagnosticsProperty$("date", _this.date, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.LocalDate));
      properties.add$1(0, C.StringProperty$("semanticLabel", _this.semanticsLabel, D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.FlagProperty$(_s8_, _null, _null, _s8_, D.DiagnosticLevel_3, false, _this.selected));
      t1 = type$.void_Function_LocalDate;
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", _this.onPress, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onLongPress", _this.onLongPress, D.DiagnosticLevel_3, t1));
    }
  };
  A._UnselectableEntry.prototype = {
    build$1(context) {
      var t1 = C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (this.selected)
        t1.add$1(0, D.WidgetState_4);
      return new C.ExcludeSemantics(true, this.builder.call$3(context, t1, null), null);
    },
    debugFillProperties$1(properties) {
      var _s8_ = "selected";
      this.super$Entry$debugFillProperties(properties);
      properties.add$1(0, C.FlagProperty$(_s8_, null, null, _s8_, D.DiagnosticLevel_3, false, this.selected));
    }
  };
  A.EntryContent.prototype = {
    build$1(__wc1_formal) {
      var borderColor, t3, _this = this, _null = null,
        t1 = _this.style,
        t2 = _this.states,
        textStyle = t1.textStyle.resolve$1(t2);
      if (_this.current)
        textStyle = textStyle.copyWith$1$decoration(D.TextDecoration_1);
      borderColor = t1.borderColor.resolve$1(t2);
      t3 = borderColor == null ? _null : C.Border_Border$all(borderColor, 1);
      return new C.DecoratedBox(C.BoxDecoration$(_null, t3, _this.borderRadius, _null, t1.backgroundColor.resolve$1(t2), _null, _null, D.BoxShape_0), D.DecorationPosition_0, C.Center$(C.Text$(_this.text, _null, _null, _null, _null, _null, _null, _null, textStyle, _null, _null, _null, _null, _null), _null, _null, _null), _null);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarEntryStyle));
      properties.add$1(0, C.DiagnosticsProperty$("borderRadius", _this.borderRadius, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BorderRadiusGeometry));
      properties.add$1(0, C.StringProperty$("text", _this.text, D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.StringProperty$("state", C.Iterable_iterableToFullString(_this.states, "{", "}"), D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.FlagProperty$("current", _null, _null, "current", D.DiagnosticLevel_3, false, _this.current));
    }
  };
  A.FCalendarPickerType.prototype = {
    _enumToString$0() {
      return "FCalendarPickerType." + this._name;
    }
  };
  A.Header.prototype = {
    createState$0() {
      return new A._HeaderState(null, null, D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarHeaderStyle));
      properties.add$1(0, C.DiagnosticsProperty$("type", _this.type, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ValueNotifier_FCalendarPickerType));
      properties.add$1(0, C.DiagnosticsProperty$("month", _this.month, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.LocalDate));
    }
  };
  A._HeaderState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this._widget.type.addListener$1(0, _this.get$_header$_animate(_this));
      _this._widget.toString;
      t1 = C.AnimationController$(null, D.Duration_200000, null, null, _this);
      _this.___HeaderState__controller_A = t1;
      t1.set$value(0, _this._widget.type._change_notifier$_value === B.FCalendarPickerType_0 ? 0 : 1);
    },
    build$1(context) {
      var _null = null;
      return C.AnimatedTappable$(false, new A._HeaderState_build_closure(this, context), _null, true, _null, this._widget.style.focusedOutlineStyle, _null, _null, _null, new A._HeaderState_build_closure0(this), _null, false, _null, _null);
    },
    didUpdateWidget$1(old) {
      var t1, _this = this;
      type$.Header._as(old);
      _this.super$State$didUpdateWidget(old);
      t1 = _this.get$_header$_animate(_this);
      old.type.removeListener$1(0, t1);
      _this._widget.type.addListener$1(0, t1);
    },
    dispose$0() {
      var t1, _this = this;
      _this._widget.type.removeListener$1(0, _this.get$_header$_animate(_this));
      t1 = _this.___HeaderState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.dispose$0();
      _this.super$__HeaderState_State_SingleTickerProviderStateMixin$dispose();
    },
    _header$_animate$0(_) {
      var _0_1, t1, _0_4, _0_4_isSet, _0_40, _this = this;
      $label0$0: {
        _0_1 = _this._widget.type._change_notifier$_value;
        t1 = _this.___HeaderState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        _0_4 = t1.get$status(0) === D.AnimationStatus_3;
        _0_4_isSet = B.FCalendarPickerType_1 === _0_1;
        if (_0_4_isSet) {
          t1 = !_0_4;
          _0_40 = _0_4;
        } else {
          _0_40 = null;
          t1 = false;
        }
        if (t1) {
          _this.___HeaderState__controller_A.forward$0(0);
          break $label0$0;
        }
        if (B.FCalendarPickerType_0 === _0_1)
          t1 = true === (_0_4_isSet ? _0_40 : _0_4);
        else
          t1 = false;
        if (t1) {
          _this.___HeaderState__controller_A.reverse$0(0);
          break $label0$0;
        }
      }
    },
    $isTickerProvider: 1
  };
  A.Navigation.prototype = {
    build$1(__wc0_formal) {
      var _null = null,
        t1 = this.style.buttonStyle;
      return new C.Padding(D.EdgeInsets_0_0_0_5, new C.SizedBox(_null, 31, C.Row$(C._setArrayType([new C.Padding(B.EdgeInsetsDirectional_7_0_0_0, C.FButton$icon(B.Icon_TfW, this.onPrevious, t1), _null), B.Expanded_3Qw, new C.Padding(B.EdgeInsetsDirectional_0_0_7_0, C.FButton$icon(D.Icon_wFE, this.onNext, t1), _null)], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_3, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null), _null);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarHeaderStyle));
      t1 = type$.void_Function;
      properties.add$1(0, C.ObjectFlagProperty$has("onPrevious", _this.onPrevious, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onNext", _this.onNext, D.DiagnosticLevel_3, t1));
    }
  };
  A.__HeaderState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__HeaderState_State_SingleTickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    },
    debugFillProperties$1(properties) {
      var t1, t2, _0_1, _0_3, t3, _0_5, t4, t5, _0_7, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.SingleTickerProviderStateMixin__ticker;
      t2 = t1 == null;
      _0_1 = t2 ? _null : t1._ticker$_future != null;
      t2 = t2 ? _null : t1._muted;
      $label0$0: {
        _0_3 = true === _0_1;
        t3 = _0_3;
        C.boolConversionCheck(t3);
        if (t3) {
          _0_5 = true === t2;
          t4 = _0_5;
        } else {
          _0_5 = _null;
          t4 = false;
        }
        t5 = _null;
        if (t4) {
          t2 = "active but muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_3)) {
          t2 = "active";
          break $label0$0;
        }
        _0_7 = false === _0_1;
        t4 = _0_7;
        if (C.boolConversionCheck(t4))
          t2 = C.boolConversionCheck(t3 ? _0_5 : true === t2);
        else
          t2 = false;
        if (t2) {
          t2 = "inactive and muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_7)) {
          t2 = "inactive";
          break $label0$0;
        }
        if (_0_1 == null) {
          t2 = t5;
          break $label0$0;
        }
        t2 = t5;
      }
      properties.add$1(0, C.DiagnosticsProperty$("ticker", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, false, D.DiagnosticsTreeStyle_8, _null, type$.Ticker));
    }
  };
  A.PagedPicker.prototype = {
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarStyle));
      t1 = type$.LocalDate;
      properties.add$1(0, C.DiagnosticsProperty$("start", _this.start, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("end", _this.end, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("today", _this.today, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("initial", _this.initial, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("selectable", _this.selectable, D.DiagnosticLevel_3, type$.bool_Function_LocalDate));
    },
    selectable$1(arg0) {
      return this.selectable.call$1(arg0);
    }
  };
  A.PagedPickerState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.initial;
      _this.__PagedPickerState_current_A = t2;
      _this.__PagedPickerState__controller_A = A.PageController$(_this.delta$2(t1.start, t2));
      t2 = _this._widget;
      _this.__PagedPickerState__key_A = new C.ValueKey(new C._Record_2(t2.start, t2.end), type$.ValueKey_Record_2_LocalDate_and_LocalDate);
      t2 = type$.JSArray_of_void_Function_Action_Intent;
      t1 = type$.ObserverList_of_void_Function_Action_Intent;
      _this.set$__PagedPickerState__actions_A(type$.Map_of_Type_and_Action_Intent._as(C.LinkedHashMap_LinkedHashMap$_literal([D.Type_NextFocusIntent_OLT, new C.CallbackAction(_this.get$_onGridNextFocus(), new C.ObserverList(C._setArrayType([], t2), t1), type$.CallbackAction_NextFocusIntent), D.Type_PreviousFocusIntent_HI0, new C.CallbackAction(_this.get$_onGridPreviousFocus(), new C.ObserverList(C._setArrayType([], t2), t1), type$.CallbackAction_PreviousFocusIntent), D.Type_DirectionalFocusIntent_oIa, new C.CallbackAction(_this.get$_onDirectionFocus(), new C.ObserverList(C._setArrayType([], t2), t1), type$.CallbackAction_DirectionalFocusIntent)], type$.Type, type$.Action_Intent)));
      _this.__PagedPickerState__focusNode_A = C.FocusNode$(true, null, true, true, null, null, false);
    },
    didUpdateWidget$1(old) {
      var t1, t2, _this = this;
      C._instanceType(_this)._eval$1("PagedPickerState.T")._as(old);
      _this.super$State$didUpdateWidget(old);
      if (!_this._widget.start.$eq(0, old.start) || !_this._widget.end.$eq(0, old.end)) {
        t1 = _this.__PagedPickerState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t1.dispose$0();
        t1 = _this._widget.start;
        t2 = _this.__PagedPickerState_current_A;
        t2 === $ && C.throwLateFieldNI("current");
        _this.__PagedPickerState__controller_A = A.PageController$(_this.delta$2(t1, t2));
        t2 = _this._widget;
        _this.__PagedPickerState__key_A = new C.ValueKey(new C._Record_2(t2.start, t2.end), type$.ValueKey_Record_2_LocalDate_and_LocalDate);
      }
    },
    build$1(__wc0_formal) {
      var t3, t4, t5, t6, t7, t8, t9, t10, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.style;
      t1 = t1.start;
      t3 = _this.__PagedPickerState_current_A;
      t3 === $ && C.throwLateFieldNI("current");
      t1 = _this.delta$2(t1, t3) === 0 ? _null : _this.get$_onPrevious();
      t3 = _this.get$_paged_picker$_last() ? _null : _this.get$_onNext();
      t4 = _this.__PagedPickerState__actions_A;
      t4 === $ && C.throwLateFieldNI("_actions");
      t5 = _this.__PagedPickerState__focusNode_A;
      t5 === $ && C.throwLateFieldNI("_focusNode");
      t6 = _this.get$onGridFocusChange();
      t7 = _this.__PagedPickerState__key_A;
      t7 === $ && C.throwLateFieldNI("_key");
      t8 = _this.__PagedPickerState__controller_A;
      t8 === $ && C.throwLateFieldNI("_controller");
      t9 = _this.get$buildItem();
      t10 = _this._widget;
      t10 = _this.delta$2(t10.start, t10.end);
      return C.Column$(C._setArrayType([new A.Navigation(t2.headerStyle, t1, t3, _null), C.Expanded$(C.FocusableActionDetector$(t4, false, new A.PageView(t8, _this.get$onPageChange(), new C.SliverChildBuilderDelegate(t9, t10 + 1, true, true, true, C.scroll_delegate___kDefaultSemanticIndexCallback$closure(), _null), t7), true, t5, true, D.C__DeferringMouseCursor, t6, _null, _null, B.Map_LMMuq), 1, _null)], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this.__PagedPickerState_textDirection_A = C.Directionality_of(this.get$context(0));
    },
    dispose$0() {
      var t1 = this.__PagedPickerState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.dispose$0();
      t1 = this.__PagedPickerState__focusNode_A;
      t1 === $ && C.throwLateFieldNI("_focusNode");
      t1.dispose$0();
      this.super$State$dispose();
    },
    debugFillProperties$1(properties) {
      var t1, t2, _this = this, _null = null,
        _s13_ = "textDirection";
      _this.super$State$debugFillProperties(properties);
      t1 = _this.__PagedPickerState_current_A;
      t1 === $ && C.throwLateFieldNI("current");
      t2 = type$.LocalDate;
      properties.add$1(0, C.DiagnosticsProperty$("current", t1, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      properties.add$1(0, C.DiagnosticsProperty$("focusedDate", _this.focusedDate, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t2));
      t2 = _this.__PagedPickerState_textDirection_A;
      t2 === $ && C.throwLateFieldNI(_s13_);
      properties.add$1(0, C.EnumProperty$(_s13_, t2, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.TextDirection));
      properties.add$1(0, C.DiagnosticsProperty$("directionOffset", _this.get$directionOffset(), true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Map_TraversalDirection_Period));
    },
    _onNext$0() {
      var t1, t2, t3;
      if (!this.get$_paged_picker$_last()) {
        t1 = this.__PagedPickerState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t2 = this._widget.style;
        t3 = t1.get$page(0);
        t3.toString;
        t1.animateToPage$3$curve$duration(D.JSNumber_methods.round$0(t3) + 1, D.Cubic_glB, t2.pageAnimationDuration);
      }
    },
    _onPrevious$0() {
      var t3, _this = this,
        t1 = _this._widget.start,
        t2 = _this.__PagedPickerState_current_A;
      t2 === $ && C.throwLateFieldNI("current");
      if (_this.delta$2(t1, t2) !== 0) {
        t1 = _this.__PagedPickerState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t2 = _this._widget.style;
        t3 = t1.get$page(0);
        t3.toString;
        t1.animateToPage$3$curve$duration(D.JSNumber_methods.round$0(t3) - 1, D.Cubic_glB, t2.pageAnimationDuration);
      }
    },
    get$_paged_picker$_last() {
      var _this = this,
        t1 = _this._widget.start,
        t2 = _this.__PagedPickerState_current_A;
      t2 === $ && C.throwLateFieldNI("current");
      t2 = _this.delta$2(t1, t2);
      t1 = _this._widget;
      return t2 === _this.delta$2(t1.start, t1.end);
    },
    _onGridNextFocus$1(intent) {
      var t1, t2;
      type$.NextFocusIntent._as(intent);
      t1 = this.__PagedPickerState__focusNode_A;
      t1 === $ && C.throwLateFieldNI("_focusNode");
      t1.requestFocus$0();
      t2 = t1._focus_manager$_context;
      t2.toString;
      C.FocusTraversalGroup_of(t2)._moveFocus$2$forward(t1, true);
    },
    _onGridPreviousFocus$1(intent) {
      var t1, t2;
      type$.PreviousFocusIntent._as(intent);
      t1 = this.__PagedPickerState__focusNode_A;
      t1 === $ && C.throwLateFieldNI("_focusNode");
      t1.requestFocus$0();
      t2 = t1._focus_manager$_context;
      t2.toString;
      C.FocusTraversalGroup_of(t2)._moveFocus$2$forward(t1, false);
    },
    _onDirectionFocus$1(intent) {
      type$.DirectionalFocusIntent._as(intent);
      if (C.assertTest(this.focusedDate != null))
        C.assertThrow("Cannot move focus without a focused day.");
      this.setState$1(new A.PagedPickerState__onDirectionFocus_closure(this, intent));
    },
    _nextDate$2(date, direction) {
      var _0_6_isSet, _0_6, t2, next, t3, t4, t5, t6, t7,
        textDirection = C.Directionality_of(this.get$context(0)),
        t1 = this.get$directionOffset();
      $label0$0: {
        _0_6_isSet = D.TraversalDirection_3 === direction;
        if (_0_6_isSet) {
          _0_6 = D.TextDirection_0 === textDirection;
          t2 = _0_6;
        } else {
          _0_6 = null;
          t2 = false;
        }
        if (t2) {
          t2 = D.TraversalDirection_1;
          break $label0$0;
        }
        if (D.TraversalDirection_1 === direction)
          t2 = C.boolConversionCheck(_0_6_isSet ? _0_6 : D.TextDirection_0 === textDirection);
        else
          t2 = false;
        if (t2) {
          t2 = D.TraversalDirection_3;
          break $label0$0;
        }
        t2 = direction;
        break $label0$0;
      }
      t2 = t1.$index(0, t2);
      t2.toString;
      next = date.$add(0, t2);
      t1 = date._native;
      t3 = t2.years;
      t4 = t2.months;
      t2 = t2.days;
      while (true) {
        t5 = this._widget;
        t6 = t5.start;
        t7 = t6._native;
        t6 = C._instanceType(t6)._eval$1("Orderable.T")._as(next)._native;
        t6 = 1000 * t6._core$_value + t6._microsecond;
        if (D.JSInt_methods.compareTo$1(1000 * t7._core$_value + t7._microsecond, t6) <= 0) {
          t7 = C._instanceType(next)._eval$1("Orderable.T")._as(t5.end)._native;
          t7 = D.JSInt_methods.compareTo$1(t6, 1000 * t7._core$_value + t7._microsecond) <= 0;
          t6 = t7;
        } else
          t6 = false;
        if (!t6)
          break;
        if (C.boolConversionCheck(t5.selectable$1(next)))
          return next;
        next = A.LocalDate$_(A.DateTimes_plus(t1, t2, t4, t3));
      }
      return null;
    },
    set$__PagedPickerState__actions_A(__PagedPickerState__actions_A) {
      this.__PagedPickerState__actions_A = type$.Map_of_Type_and_Action_Intent._as(__PagedPickerState__actions_A);
    }
  };
  A.PagedYearPicker.prototype = {
    createState$0() {
      return new A._PagedYearPickerState(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      this.super$PagedPicker$debugFillProperties(properties);
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", this.onPress, D.DiagnosticLevel_3, type$.void_Function_LocalDate));
    }
  };
  A._PagedYearPickerState.prototype = {
    buildItem$2(__wc0_formal, page) {
      var t1, t2, t3, t4, t5, t6, t7;
      type$.BuildContext._as(__wc0_formal);
      C._asInt(page);
      t1 = this._widget;
      t2 = t1.style;
      t1 = A.LocalDate$_(A.DateTimes_plus(A.LocalDate$_(A.DateTimes_truncate(t1.start._native, B.DateUnit_0))._native, 0, 0, page * 15));
      t3 = this._widget;
      t4 = t3.start;
      t5 = t3.end;
      t6 = t3.today;
      t7 = this.focusedDate;
      t3 = t3.onPress;
      if (C.assertTest(t1.$eq(0, A.LocalDate$_(A.DateTimes_truncate(t1._native, B.DateUnit_0)))))
        C.assertThrow("startYear must be truncated to years.");
      return new A.YearPicker(t2.yearMonthPickerStyle, t2.dayPickerStyle, t1, t4, t5, t6, t7, t3, null);
    },
    onGridFocusChange$1(focused) {
      this.setState$1(new A._PagedYearPickerState_onGridFocusChange_closure(this, C._asBool(focused)));
    },
    onPageChange$1(page) {
      this.setState$1(new A._PagedYearPickerState_onPageChange_closure(this, C._asInt(page)));
    },
    _focusableYear$2(startYear, preferredYear) {
      var newFocus,
        t1 = startYear._native,
        endYear = A.LocalDate$_(A.DateTimes_plus(t1, 0, 0, 15)),
        t2 = C._instanceType(startYear)._eval$1("Orderable.T")._as(preferredYear)._native;
      t2 = 1000 * t2._core$_value + t2._microsecond;
      if (D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t2) <= 0) {
        t1 = C._instanceType(preferredYear)._eval$1("Orderable.T")._as(endYear)._native;
        t1 = D.JSInt_methods.compareTo$1(t2, 1000 * t1._core$_value + t1._microsecond) < 0;
      } else
        t1 = false;
      if (t1)
        return preferredYear;
      for (newFocus = startYear; t1 = newFocus._native, t2 = C._instanceType(newFocus)._eval$1("Orderable.T")._as(endYear)._native, D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond) < 0; newFocus = A.LocalDate$_(A.DateTimes_plus(t1, 0, 0, 1)))
        if (C.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      return null;
    },
    delta$2(start, end) {
      return D.JSNumber_methods.floor$0((C.Primitives_getYear(end._native) - C.Primitives_getYear(start._native)) / 15);
    },
    get$directionOffset() {
      return B.Map_u8zac;
    }
  };
  A.YearPicker.prototype = {
    createState$0() {
      return new A._YearPickerState(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("yearMonthStyle", _this.yearMonthStyle, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarEntryStyle));
      properties.add$1(0, C.DiagnosticsProperty$("dayStyle", _this.dayStyle, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarDayPickerStyle));
      t1 = type$.LocalDate;
      properties.add$1(0, C.DiagnosticsProperty$("startYear", _this.startYear, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("start", _this.start, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("end", _this.end, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("today", _this.today, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("focused", _this.focused, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_2, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.ObjectFlagProperty$has("onPress", _this.onPress, D.DiagnosticLevel_2, type$.void_Function_LocalDate));
    }
  };
  A._YearPickerState.prototype = {
    initState$0() {
      var _list, i, t1, focused, t2, t3, _this = this;
      _this.super$State$initState();
      _list = J.JSArray_JSArray$allocateGrowable(15, type$.FocusNode);
      for (i = 0; i < 15; ++i)
        _list[i] = C.FocusNode$(true, "" + i, true, true, null, null, true);
      _this.set$___YearPickerState__years_A(type$.List_FocusNode._as(_list));
      t1 = _this._widget;
      focused = t1.focused;
      t2 = true;
      if (focused != null) {
        t1 = C._instanceType(focused)._eval$1("Orderable.T")._as(t1.startYear);
        t3 = focused._native;
        t3 = 1000 * t3._core$_value + t3._microsecond;
        t1 = t1._native;
        if (D.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) >= 0) {
          t1 = A.LocalDate$_(A.DateTimes_plus(t1, 0, 0, 15));
          C._instanceType(t1)._eval$1("Orderable.T")._as(focused);
          t1 = t1._native;
          t3 = D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0;
          t1 = t3;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return;
      t1 = _this.___YearPickerState__years_A;
      t1 === $ && C.throwLateFieldNI("_years");
      t2 = C.Primitives_getYear(focused._native) - C.Primitives_getYear(_this._widget.startYear._native);
      if (!(t2 >= 0 && t2 < t1.length))
        return C.ioore(t1, t2);
      t1[t2].requestFocus$0();
    },
    build$1(context) {
      var year, i, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = A.SliverGridDelegateWithFixedCrossAxisCount$(3, 0, (_this._widget.dayStyle.tileSize - 5) * 7 / 5, 5),
        t2 = C._setArrayType([], type$.JSArray_Widget);
      for (year = _this._widget.startYear, i = 0; i < 15; year = A.LocalDate$_(A.DateTimes_plus(t7, 0, 0, 1)), ++i) {
        t3 = _this._widget;
        t4 = t3.yearMonthStyle;
        t5 = _this.___YearPickerState__years_A;
        t5 === $ && C.throwLateFieldNI("_years");
        if (!(i < t5.length))
          return C.ioore(t5, i);
        t5 = t5[i];
        t6 = t3.today;
        t7 = year._native;
        t8 = t3.start;
        C._instanceType(t8)._eval$1("Orderable.T")._as(year);
        t8 = t8._native;
        t9 = 1000 * t7._core$_value + t7._microsecond;
        if (D.JSInt_methods.compareTo$1(1000 * t8._core$_value + t8._microsecond, t9) <= 0) {
          t8 = C._instanceType(year)._eval$1("Orderable.T")._as(t3.end)._native;
          t8 = D.JSInt_methods.compareTo$1(t9, 1000 * t8._core$_value + t8._microsecond) <= 0;
        } else
          t8 = false;
        t2.push(A.Entry_Entry$yearMonth(C.Primitives_getYear(t6._native) === C.Primitives_getYear(t7), year, t5, new A._YearPickerState_build_closure(context), t3.onPress, t8, t4));
      }
      return new C.Padding(D.EdgeInsets_0_5_0_0, A.GridView$(t2, t1, D.EdgeInsets_0_0_0_0), null);
    },
    didUpdateWidget$1(old) {
      var t1, focused, t2, t3, _0_0, _this = this;
      type$.YearPicker._as(old);
      _this.super$State$didUpdateWidget(old);
      if (C.assertTest(old.startYear.$eq(0, _this._widget.startYear)))
        C.assertThrow("startYear must noe change.");
      t1 = _this._widget;
      focused = t1.focused;
      t2 = true;
      if (focused != null) {
        t1 = C._instanceType(focused)._eval$1("Orderable.T")._as(t1.startYear);
        t3 = focused._native;
        t3 = 1000 * t3._core$_value + t3._microsecond;
        t1 = t1._native;
        if (D.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) >= 0) {
          t1 = A.LocalDate$_(A.DateTimes_plus(t1, 0, 0, 15));
          C._instanceType(t1)._eval$1("Orderable.T")._as(focused);
          t1 = t1._native;
          t3 = D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0;
          t1 = t3;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return;
      t1 = _this.___YearPickerState__years_A;
      t1 === $ && C.throwLateFieldNI("_years");
      t2 = focused._native;
      t3 = _this._widget;
      t2 = C.Primitives_getYear(t2) - C.Primitives_getYear(t3.startYear._native);
      if (!(t2 >= 0 && t2 < t1.length))
        return C.ioore(t1, t2);
      _0_0 = t1[t2];
      t1 = J.$eq$(old.focused, t3.focused);
      if (!t1)
        _0_0.requestFocus$0();
    },
    dispose$0() {
      var t2, _i, node, t3,
        t1 = this.___YearPickerState__years_A;
      t1 === $ && C.throwLateFieldNI("_years");
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        t3 = node._attachment;
        if (t3 != null)
          t3.detach$0(0);
        node.super$ChangeNotifier$dispose();
      }
      this.super$State$dispose();
    },
    set$___YearPickerState__years_A(___YearPickerState__years_A) {
      this.___YearPickerState__years_A = type$.List_FocusNode._as(___YearPickerState__years_A);
    }
  };
  A.YearMonthPicker.prototype = {
    createState$0() {
      return new A._YearMonthPickerState(D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FCalendarStyle));
      t1 = type$.LocalDate;
      properties.add$1(0, C.DiagnosticsProperty$("start", _this.start, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("end", _this.end, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("today", _this.today, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1));
      properties.add$1(0, C.DiagnosticsProperty$("month", _this.month, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ValueNotifier_LocalDate));
      properties.add$1(0, C.DiagnosticsProperty$("type", _this.type, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ValueNotifier_FCalendarPickerType));
    }
  };
  A._YearMonthPickerState.prototype = {
    build$1(__wc0_formal) {
      var t3, t4, t5, _this = this,
        t1 = _this._year,
        t2 = _this._widget;
      if (t1) {
        t1 = t2.style;
        t2 = A.LocalDate$_(A.DateTimes_truncate(t2.start._native, B.DateUnit_0));
        t3 = A.LocalDate$_(A.DateTimes_truncate(_this._widget.end._native, B.DateUnit_0));
        t4 = _this._widget;
        t5 = t4.today;
        return A.PagedYearPicker$(t3, A.LocalDate$_(A.DateTimes_truncate(t4.month._change_notifier$_value._native, B.DateUnit_0)), new A._YearMonthPickerState_build_closure(_this), t2, t1, t5);
      } else {
        t1 = t2.style;
        t2 = A.LocalDate$_(A.DateTimes_truncate(t2.start._native, B.DateUnit_1));
        t3 = A.LocalDate$_(A.DateTimes_truncate(_this._widget.end._native, B.DateUnit_1));
        t4 = _this._widget;
        t5 = t4.today;
        return A.PagedMonthPicker$(t3, A.LocalDate$_(A.DateTimes_truncate(t4.month._change_notifier$_value._native, B.DateUnit_0)), new A._YearMonthPickerState_build_closure0(_this), t2, t1, t5);
      }
    }
  };
  A.FDialog.prototype = {
    build$1(context) {
      var t1, t2, t3, _null = null,
        theme = C.FTheme_of(context),
        style = this.style;
      if (style == null)
        style = theme.dialogStyle;
      C.debugCheckHasMediaQuery(context);
      t1 = C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_7, type$.MediaQuery).data;
      C.Directionality_maybeOf(context);
      t1 = t1.viewInsets.$add(0, style.insetPadding);
      t2 = C.FTheme_of(context).typography.base.copyWith$1$color(theme.colors.foreground);
      t3 = C.ConstrainedBox$(new C.DecoratedBox(style.decoration, D.DecorationPosition_0, this.builder.call$2(context, style), _null), B.BoxConstraints_NPC, _null);
      return C.AnimatedPadding$(C.MediaQuery$removeViewInsets(C.Align$(D.Alignment_0_0, C.DefaultTextStyle$(new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, true, false, false, t3, _null), _null, _null, D.TextOverflow_0, true, t2, _null, _null, D.TextWidthBasis_0), _null, _null, _null), context, true, true, true, true), style.insetAnimationCurve, style.insetAnimationDuration, t1);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FDialogStyle));
      properties.add$1(0, C.StringProperty$("semanticsLabel", _null, D.C__NoDefaultValue, true, true));
      properties.add$1(0, C.DiagnosticsProperty$("constraints", B.BoxConstraints_NPC, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.BoxConstraints));
      properties.add$1(0, C.ObjectFlagProperty$has("builder", this.builder, D.DiagnosticLevel_3, type$.Widget_Function_BuildContext_FDialogStyle));
    }
  };
  A.Content2.prototype = {
    build$1(context) {
      var t3, _this = this, _null = null,
        t1 = _this.style,
        t2 = C._setArrayType([], type$.JSArray_Widget),
        _1_0 = _this.body;
      if (_1_0 != null) {
        t3 = C.DefaultTextStyle_merge(_1_0, _null, _null, _null, t1.bodyTextStyle, _this.bodyTextAlign, _null);
        t2.push(new C.Padding(B.EdgeInsets_0_0_0_4, new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), true, false, false, false, t3, _null), _null));
      }
      t2.push(_this._dialog_content$_actions$1(context));
      return new C.Padding(t1.padding, C.Column$(t2, _this.alignment, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), _null);
    },
    debugFillProperties$1(properties) {
      var t1, _this = this, _null = null;
      _this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _this.style, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FDialogContentStyle));
      properties.add$1(0, C.EnumProperty$("alignment", _this.alignment, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.CrossAxisAlignment));
      t1 = type$.TextAlign;
      properties.add$1(0, C.EnumProperty$("titleTextAlign", _this.titleTextAlign, D.C__NoDefaultValue, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.EnumProperty$("bodyTextAlign", _this.bodyTextAlign, D.C__NoDefaultValue, D.DiagnosticLevel_3, t1));
      properties.add$1(0, C.IterableProperty$("actions", _this.actions, D.C__NoDefaultValue, "[]", _null, D.DiagnosticLevel_3, D.DiagnosticsTreeStyle_8, type$.Widget));
    }
  };
  A.VerticalContent.prototype = {
    _dialog_content$_actions$1(context) {
      return C.Column$(this.actions, D.CrossAxisAlignment_2, null, D.MainAxisAlignment_0, D.MainAxisSize_0, this.style.actionSpacing, null, null, D.VerticalDirection_1);
    }
  };
  A._FRootHeader.prototype = {
    build$1(context) {
      var _null = null,
        style = C.FTheme_of(context).headerStyle.rootStyle,
        t1 = this.suffixes,
        t2 = C._arrayInstanceType(t1),
        t3 = t2._eval$1("ExpandIterable<1,Widget>");
      t3 = C.Row$(C._setArrayType([C.Expanded$(C.DefaultTextStyle_merge(this.title, 1, D.TextOverflow_1, false, style.titleTextStyle, _null, _null), 1, _null), C.FHeaderData$(style.actionStyle, C.Row$(C.List_List$of(new C.ExpandIterable(t1, t2._eval$1("Iterable<Widget>(1)")._as(new A._FRootHeader_build_closure(style)), t3), true, t3._eval$1("Iterable.E")), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1))], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_3, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
      return C.SafeArea$(false, new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, new C.Padding(style.padding, t3, _null), _null), _null, true, D.EdgeInsets_0_0_0_0, true, true);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("style", _null, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.FHeaderStyle));
    }
  };
  A.CodeField.prototype = {
    createState$0() {
      return new A._CodeFieldState(D._StateLifecycle_0);
    }
  };
  A._CodeFieldState.prototype = {
    build$1(context) {
      var t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = C.Theme_of(context).colorScheme,
        t2 = t1._onInverseSurface;
      t1 = t2 == null ? t1.surface : t2;
      t2 = C.BorderRadius$circular(8);
      t3 = C.Text$(_this._widget.name, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t4 = C.TextButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, C.Theme_of(context).colorScheme.onSurface, _null, _null, _null, _null, _null, _null, _null, D.TextStyle_oUd, _null);
      t5 = _this._copied;
      t6 = C.Icon$(t5 ? B.IconData_57846_MaterialIcons_null_false : B.IconData_57746_MaterialIcons_null_false, _null, _null, 15);
      t7 = type$.JSArray_Widget;
      return C.Material$(D.Duration_200000, true, _null, C.Column$(C._setArrayType([C.Row$(C._setArrayType([new C.Padding(H.EdgeInsets_16_8_16_8, t3, _null), B.Spacer_null, A.TextButton_TextButton$icon(t6, C.Text$(t5 ? "Copied!" : "Copy code", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new A._CodeFieldState_build_closure(_this), t4)], t7), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), B.Divider_null, C.SingleChildScrollView$(C.Text$(_this._widget.codes, _null, _null, _null, _null, _null, _null, _null, C.TextStyle$(_null, _null, _null, _null, _null, _null, _null, _null, "JetBrainsMono", _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, "gpt_markdown", _null, _null, _null), _null, _null, _null, _null, _null), _null, D.DragStartBehavior_1, D.EdgeInsets_16_16_16_16, _null, D.Axis_0)], t7), D.CrossAxisAlignment_3, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, t1, 0, _null, _null, new C.RoundedRectangleBorder(t2, D.BorderSide_Ah5), _null, _null, D.MaterialType_0);
    }
  };
  A.CustomDivider.prototype = {
    createRenderObject$1(context) {
      var t1;
      C.debugCheckHasMediaQuery(context);
      t1 = C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_0, type$.MediaQuery).data;
      t1 = new A.RenderDivider(this.color, this.height, t1.size._dx, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderDivider._as(renderObject);
      renderObject.set$color(0, this.color);
      renderObject.set$height(0, this.height);
      C.debugCheckHasMediaQuery(context);
      renderObject.set$width(0, C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_0, type$.MediaQuery).data.size._dx);
    }
  };
  A.RenderDivider.prototype = {
    set$color(_, value) {
      if (value.$eq(0, this._custom_divider$_color))
        return;
      this._custom_divider$_color = value;
      this.markNeedsPaint$0();
    },
    set$height(_, value) {
      if (value === this._custom_divider$_height)
        return;
      this._custom_divider$_height = value;
      this.markNeedsLayout$0();
    },
    set$width(_, value) {
      if (value === this._custom_divider$_width)
        return;
      this._custom_divider$_width = value;
      this.markNeedsLayout$0();
    },
    computeDryLayout$1(constraints) {
      var t1 = C.BoxConstraints$tightFor(this._custom_divider$_height, null).enforce$1(constraints);
      return new C.Size(t1.constrainWidth$1(0), t1.constrainHeight$1(0));
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      _this.set$size(0, _this._computeIntrinsics$2$3(D.C__DryLayout, t1._as(C.RenderObject.prototype.get$constraints.call(_this)), _this.get$_computeDryLayout(), t1, type$.Size));
    },
    paint$2(context, offset) {
      var t1 = context.get$canvas(context),
        t2 = this._custom_divider$_height,
        t3 = offset._dx,
        t4 = offset._dy,
        t5 = $.$get$_renderer().createPaint$0();
      t5.set$color(0, this._custom_divider$_color);
      t1.drawRect$2(new C.Rect(t3, t4, t3 + 2000000000, t4 + t2), t5);
    }
  };
  A.CustomImageError.prototype = {
    createRenderObject$1(context) {
      var t3, t4, _null = null,
        t1 = C.Theme_of(context).colorScheme,
        t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      t2 = C.Theme_of(context).colorScheme;
      t3 = t2._surfaceContainerHighest;
      t2 = t3 == null ? t2.surface : t3;
      t3 = C.Theme_of(context).colorScheme;
      t4 = t3._outline;
      if (t4 == null) {
        t4 = t3._onBackground;
        t3 = t4 == null ? t3.onSurface : t4;
      } else
        t3 = t4;
      t2 = new A.RenderCustomImageError(t1, t3, t2, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t2.RenderObject$0();
      t2.set$child(_null);
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2;
      type$.RenderCustomImageError._as(renderObject);
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._surfaceContainerHighest;
      t1 = t2 == null ? t1.surface : t2;
      renderObject.set$_custom_error_image$_backgroundColor(0, t1);
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      renderObject.set$_iconColor(t1);
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._outline;
      if (t2 == null) {
        t2 = t1._onBackground;
        t1 = t2 == null ? t1.onSurface : t2;
      } else
        t1 = t2;
      renderObject.set$_outlineColor(0, t1);
    }
  };
  A.RenderCustomImageError.prototype = {
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 && t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this.set$size(0, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth))));
        return;
      }
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 || t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this.set$size(0, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth))));
        return;
      }
      _this.set$size(0, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(B.Size_80_80));
    },
    paint$2(context, offset) {
      var textPainter, _this = this, _null = null,
        t1 = context.get$canvas(context),
        t2 = _this.get$size(0),
        t3 = offset._dx,
        t4 = offset._dy,
        t5 = $.$get$_renderer(),
        t6 = t5.createPaint$0();
      t6.set$color(0, _this._custom_error_image$_backgroundColor);
      t1.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t6);
      t6 = context.get$canvas(context);
      t2 = _this.get$size(0);
      t5 = t5.createPaint$0();
      t5.set$style(0, D.PaintingStyle_1);
      t5.set$color(0, _this._outlineColor);
      t6.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t5);
      textPainter = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_0, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      t5 = C.Primitives_stringFromCharCode(58164);
      t2 = Math.min(Math.min(_this.get$size(0)._dx, _this.get$size(0)._dy), 35);
      textPainter.set$text(0, C.TextSpan$(_null, C.TextStyle$(_null, _null, _this._iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, t2, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), t5));
      textPainter.layout$0();
      textPainter.paint$2(context.get$canvas(context), offset.$add(0, new C.Offset(_this.get$size(0)._dx / 2 - textPainter.get$size(0)._dx / 2, _this.get$size(0)._dy / 2 - textPainter.get$size(0)._dy / 2)));
    },
    set$_iconColor(_iconColor) {
      this._iconColor = type$.Color._as(_iconColor);
    },
    set$_outlineColor(_, _outlineColor) {
      this._outlineColor = type$.Color._as(_outlineColor);
    },
    set$_custom_error_image$_backgroundColor(_, _backgroundColor) {
      this._custom_error_image$_backgroundColor = type$.Color._as(_backgroundColor);
    }
  };
  A.CustomImageLoading.prototype = {
    createRenderObject$1(context) {
      var t3, t4, _null = null,
        t1 = C.Theme_of(context).colorScheme,
        t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      t2 = C.Theme_of(context).colorScheme;
      t3 = t2._surfaceContainerHighest;
      t2 = t3 == null ? t2.surface : t3;
      t3 = C.Theme_of(context).colorScheme;
      t4 = t3._outline;
      if (t4 == null) {
        t4 = t3._onBackground;
        t3 = t4 == null ? t3.onSurface : t4;
      } else
        t3 = t4;
      t2 = new A.RenderCustomImageLoading(t1, t3, t2, this.progress, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t2.RenderObject$0();
      t2.set$child(_null);
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2;
      type$.RenderCustomImageLoading._as(renderObject);
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._surfaceContainerHighest;
      t1 = t2 == null ? t1.surface : t2;
      renderObject.set$_custom_error_image$_backgroundColor(0, t1);
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      renderObject.set$_iconColor(t1);
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._outline;
      if (t2 == null) {
        t2 = t1._onBackground;
        t1 = t2 == null ? t1.onSurface : t2;
      } else
        t1 = t2;
      renderObject.set$_outlineColor(0, t1);
      renderObject.set$progress(this.progress);
    }
  };
  A.RenderCustomImageLoading.prototype = {
    set$progress(value) {
      if (value === this._progress)
        return;
      this._progress = value;
      this.markNeedsPaint$0();
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 && t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this.set$size(0, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth))));
        return;
      }
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 || t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this.set$size(0, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth))));
        return;
      }
      _this.set$size(0, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(B.Size_80_80));
    },
    paint$2(context, offset) {
      var textPainter, _this = this, _null = null,
        t1 = context.get$canvas(context),
        t2 = _this.get$size(0),
        t3 = offset._dx,
        t4 = offset._dy,
        t5 = $.$get$_renderer(),
        t6 = t5.createPaint$0();
      t6.set$color(0, _this._custom_error_image$_backgroundColor);
      t1.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t6);
      t6 = context.get$canvas(context);
      t2 = _this.get$size(0);
      t1 = t5.createPaint$0();
      t1.set$style(0, D.PaintingStyle_1);
      t1.set$color(0, _this._outlineColor);
      t6.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t1);
      textPainter = C.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_0, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
      t1 = C.Primitives_stringFromCharCode(58162);
      t2 = Math.min(Math.min(_this.get$size(0)._dx, _this.get$size(0)._dy), 35);
      textPainter.set$text(0, C.TextSpan$(_null, C.TextStyle$(_null, _null, _this._iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, t2, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), t1));
      textPainter.layout$0();
      t1 = context.get$canvas(context);
      t2 = offset.$add(0, new C.Offset(0, _this.get$size(0)._dy - 5));
      t4 = _this.get$size(0);
      t3 = _this._progress;
      t6 = t2._dx;
      t2 = t2._dy;
      t5 = t5.createPaint$0();
      t5.set$color(0, _this._iconColor);
      t1.drawRect$2(new C.Rect(t6, t2, t6 + t4._dx * t3, t2 + 5), t5);
      textPainter.paint$2(context.get$canvas(context), offset.$add(0, new C.Offset(_this.get$size(0)._dx / 2 - textPainter.get$size(0)._dx / 2, _this.get$size(0)._dy / 2 - textPainter.get$size(0)._dy / 2)));
    },
    set$_iconColor(_iconColor) {
      this._iconColor = type$.Color._as(_iconColor);
    },
    set$_outlineColor(_, _outlineColor) {
      this._outlineColor = type$.Color._as(_outlineColor);
    },
    set$_custom_error_image$_backgroundColor(_, _backgroundColor) {
      this._custom_error_image$_backgroundColor = type$.Color._as(_backgroundColor);
    }
  };
  A.CustomRb.prototype = {
    build$1(context) {
      var _null = null;
      return C.Directionality$(C.Row$(C._setArrayType([C.Text$rich(C.WidgetSpan$(D.PlaceholderAlignment_5, _null, new C.Padding(new C.EdgeInsetsDirectional(5, 0, 5, 0), new A.Radio(this.value, true, new A.CustomRb_build_closure(), D.MaterialTapTargetSize_1, _null, type$.Radio_bool), _null)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new C.Flexible(1, D.FlexFit_1, this.child, _null)], type$.JSArray_Widget), D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, D.TextBaseline_0, _null, D.VerticalDirection_1), this.textDirection);
    }
  };
  A.CustomCb.prototype = {
    build$1(context) {
      var _null = null;
      return C.Directionality$(C.Row$(C._setArrayType([C.Text$rich(C.WidgetSpan$(D.PlaceholderAlignment_5, _null, new C.Padding(new C.EdgeInsetsDirectional(5, 0, 5, 0), new A.Checkbox(this.value, new A.CustomCb_build_closure(), _null), _null)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new C.Flexible(1, D.FlexFit_1, this.child, _null)], type$.JSArray_Widget), D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, D.TextBaseline_0, _null, D.VerticalDirection_1), this.textDirection);
    }
  };
  A.BlockQuoteWidget.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      return C.Row$(C._setArrayType([new C.Flexible(1, D.FlexFit_1, C.CustomPaint$(_this.child, new A.BlockQuotePainter(_this.color, _this.direction, _this.width, _null), _null, _null, D.Size_0_0), _null)], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
    }
  };
  A.BlockQuotePainter.prototype = {
    paint$2(canvas, size) {
      var _this = this,
        start = _this.direction === D.TextDirection_1 ? 0 : size._dx - _this.width,
        paint = $.$get$_renderer().createPaint$0();
      paint.set$color(0, _this.color);
      canvas.drawRect$2(new C.Rect(start, 0, start + _this.width, 0 + size._dy), paint);
    },
    shouldRepaint$1(oldDelegate) {
      return true;
    }
  };
  A.LinkButton.prototype = {
    createState$0() {
      return new A._LinkButtonState(D._StateLifecycle_0);
    }
  };
  A._LinkButtonState.prototype = {
    build$1(context) {
      var t3, t4, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.config.style;
      if (t2 == null)
        t2 = D.TextStyle_ZyH;
      t3 = _this._link_button$_isHovering;
      t4 = t3 ? t1.hoverColor : t1.color;
      t2.copyWith$3$color$decoration$decorationColor(t4, D.TextDecoration_1, t3 ? t1.hoverColor : t1.color);
      t1 = _this._widget;
      t2 = t1.onPressed;
      t1 = t1.child;
      return C.MouseRegion$(C.GestureDetector$(_null, t1, D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t2, new A._LinkButtonState_build_closure(_this), new A._LinkButtonState_build_closure0(_this), new A._LinkButtonState_build_closure1(_this), _null, _null, _null, _null, _null), D.SystemMouseCursor_click, _null, new A._LinkButtonState_build_closure2(_this), new A._LinkButtonState_build_closure3(_this), _null);
    },
    _link_button$_handleHover$1(hover) {
      this.setState$1(new A._LinkButtonState__handleHover_closure(this, hover));
    },
    _handlePress$1(pressed) {
      this.setState$1(new A._LinkButtonState__handlePress_closure());
    }
  };
  A.GptMarkdownConfig.prototype = {
    copyWith$1$style(style) {
      var _this = this,
        t1 = style == null ? _this.style : style;
      return A.GptMarkdownConfig$(_this.codeBuilder, _this.components, false, _this.highlightBuilder, _this.imageBuilder, _this.inlineComponents, _this.latexBuilder, _this.latexWorkaround, _this.linkBuilder, _this.maxLines, _this.onLinkTap, _this.orderedListBuilder, _this.overflow, _this.sourceTagBuilder, t1, _this.tableBuilder, _this.textAlign, _this.textDirection, _this.textScaler, _this.unOrderedListBuilder);
    },
    copyWith$0() {
      return this.copyWith$1$style(null);
    },
    getRich$1(span) {
      var _this = this, _null = null;
      return C.Text$rich(span, _null, _this.maxLines, _this.overflow, _null, _null, _null, _null, _this.textAlign, _this.textDirection, _null, _null, _this.textScaler, _null);
    }
  };
  A.SelectableAdapter.prototype = {
    build$1(context) {
      var _null = null,
        registrar = C.SelectionContainer_maybeOf(context);
      if (registrar == null)
        return this.child;
      return C.MouseRegion$(new A._SelectableAdapter(registrar, this.selectedText, this.child, _null), D.SystemMouseCursor_text, _null, _null, _null, _null);
    }
  };
  A._SelectableAdapter.prototype = {
    createRenderObject$1(context) {
      var t2,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      t1 = (t1 == null ? D.DefaultSelectionStyle_gwC : t1).selectionColor;
      t1.toString;
      t2 = C.ValueNotifier$(D.SelectionGeometry_6U2, type$.SelectionGeometry);
      t1 = new A._RenderSelectableAdapter(t2, t1, null, false, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      t1.set$registrar(this.registrar);
      t2.addListener$1(0, t1.get$markNeedsPaint());
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$._RenderSelectableAdapter._as(renderObject);
      t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      t1 = (t1 == null ? D.DefaultSelectionStyle_gwC : t1).selectionColor;
      t1.toString;
      renderObject.set$selectionColor(t1);
      renderObject.set$registrar(this.registrar);
    }
  };
  A._RenderSelectableAdapter.prototype = {
    set$selectionColor(value) {
      if (this._selectable_adapter$_selectionColor.$eq(0, value))
        return;
      this._selectable_adapter$_selectionColor = value;
      this.markNeedsPaint$0();
    },
    addListener$1(_, listener) {
      return this._selectable_adapter$_geometry.addListener$1(0, type$.void_Function._as(listener));
    },
    removeListener$1(_, listener) {
      return this._selectable_adapter$_geometry.removeListener$1(0, type$.void_Function._as(listener));
    },
    get$value(_) {
      return this._selectable_adapter$_geometry._change_notifier$_value;
    },
    get$boundingBoxes() {
      var t1 = this.get$size(0);
      return C._setArrayType([new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy)], type$.JSArray_Rect);
    },
    _getSelectionHighlightRect$0() {
      var _this = this;
      return new C.Rect(0, 0, 0 + (_this.get$size(_this)._dx + 0), 0 + (_this.get$size(_this)._dy + 0));
    },
    _updateGeometry$0() {
      var t1, t2, t3, t4, selectionRect, firstSelectionPoint, secondSelectionPoint, isReversed, _this = this;
      if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null) {
        _this._selectable_adapter$_geometry.set$value(0, D.SelectionGeometry_6U2);
        return;
      }
      t1 = _this.get$size(_this);
      t2 = _this.get$size(_this);
      t3 = _this._selectable_adapter$_start;
      t3.toString;
      t4 = _this._selectable_adapter$_end;
      t4.toString;
      if (new C.Rect(0, 0, 0 + t1._dx, 0 + t2._dy).intersect$1(C.Rect$fromPoints(t3, t4)).get$isEmpty(0))
        _this._selectable_adapter$_geometry.set$value(0, D.SelectionGeometry_6U2);
      else {
        selectionRect = _this._getSelectionHighlightRect$0();
        t1 = selectionRect.bottom;
        t2 = t1 - selectionRect.top;
        firstSelectionPoint = new C.SelectionPoint(new C.Offset(selectionRect.left, t1), t2, D.TextSelectionHandleType_0);
        secondSelectionPoint = new C.SelectionPoint(new C.Offset(selectionRect.right, t1), t2, D.TextSelectionHandleType_1);
        t1 = _this._selectable_adapter$_start;
        t2 = t1._dy;
        t3 = _this._selectable_adapter$_end;
        t4 = t3._dy;
        if (t2 > t4)
          isReversed = true;
        else
          isReversed = t2 < t4 ? false : t1._dx > t3._dx;
        t1 = isReversed ? secondSelectionPoint : firstSelectionPoint;
        t2 = isReversed ? firstSelectionPoint : secondSelectionPoint;
        _this._selectable_adapter$_geometry.set$value(0, C.SelectionGeometry$(t2, true, C._setArrayType([selectionRect], type$.JSArray_Rect), t1, D.SelectionStatus_0));
      }
    },
    dispatchSelectionEvent$1($event) {
      var renderObjectRect, point, adjustedPoint, result, newOffset, horizontalBaseLine, $forward, _this = this,
        t1 = $event.type;
      switch (t1.index) {
        case 0:
        case 1:
          renderObjectRect = new C.Rect(0, 0, 0 + _this.get$size(_this)._dx, 0 + _this.get$size(_this)._dy);
          point = _this.globalToLocal$1(type$.SelectionEdgeUpdateEvent._as($event).globalPosition);
          adjustedPoint = C.SelectionUtils_adjustDragOffset(renderObjectRect, point, D.TextDirection_1);
          if (t1 === D.SelectionEventType_0)
            _this._selectable_adapter$_start = adjustedPoint;
          else
            _this._selectable_adapter$_end = adjustedPoint;
          result = C.SelectionUtils_getResultBasedOnRect(renderObjectRect, point);
          break;
        case 2:
          _this._selectable_adapter$_start = _this._selectable_adapter$_end = null;
          result = D.SelectionResult_4;
          break;
        case 3:
        case 4:
        case 5:
          _this._selectable_adapter$_start = D.Offset_0_0;
          _this._selectable_adapter$_end = D.Offset_xfs;
          result = D.SelectionResult_4;
          break;
        case 6:
          type$.GranularlyExtendSelectionEvent._as($event);
          if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null)
            if ($event.get$forward($event))
              _this._selectable_adapter$_start = _this._selectable_adapter$_end = D.Offset_0_0;
            else
              _this._selectable_adapter$_start = _this._selectable_adapter$_end = D.Offset_xfs;
          newOffset = $event.get$forward($event) ? D.Offset_xfs : D.Offset_0_0;
          if ($event.get$isEnd()) {
            if (newOffset.$eq(0, _this._selectable_adapter$_end))
              result = $event.get$forward($event) ? D.SelectionResult_0 : D.SelectionResult_1;
            else
              result = D.SelectionResult_2;
            _this._selectable_adapter$_end = newOffset;
          } else {
            if (newOffset.$eq(0, _this._selectable_adapter$_start))
              result = $event.get$forward($event) ? D.SelectionResult_0 : D.SelectionResult_1;
            else
              result = D.SelectionResult_2;
            _this._selectable_adapter$_start = newOffset;
          }
          break;
        case 7:
          type$.DirectionallyExtendSelectionEvent._as($event);
          horizontalBaseLine = _this.globalToLocal$1(new C.Offset($event.get$dx($event), 0))._dx;
          switch ($event.get$direction($event)) {
            case D.SelectionExtendDirection_3:
            case D.SelectionExtendDirection_0:
              if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null)
                _this._selectable_adapter$_start = _this._selectable_adapter$_end = D.Offset_xfs;
              $event.get$direction($event);
              newOffset = horizontalBaseLine < 0 ? D.Offset_0_0 : D.Offset_xfs;
              $forward = false;
              break;
            case D.SelectionExtendDirection_1:
            case D.SelectionExtendDirection_2:
              if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null)
                _this._selectable_adapter$_start = _this._selectable_adapter$_end = D.Offset_0_0;
              $event.get$direction($event);
              t1 = _this.get$size(_this);
              newOffset = horizontalBaseLine > t1._dx ? D.Offset_xfs : D.Offset_0_0;
              $forward = true;
              break;
            default:
              newOffset = null;
              $forward = null;
          }
          if ($event.get$isEnd()) {
            if (J.$eq$(newOffset, _this._selectable_adapter$_end))
              result = C.boolConversionCheck($forward) ? D.SelectionResult_0 : D.SelectionResult_1;
            else
              result = D.SelectionResult_2;
            _this._selectable_adapter$_end = newOffset;
          } else {
            if (J.$eq$(newOffset, _this._selectable_adapter$_start))
              result = C.boolConversionCheck($forward) ? D.SelectionResult_0 : D.SelectionResult_1;
            else
              result = D.SelectionResult_2;
            _this._selectable_adapter$_start = newOffset;
          }
          break;
        default:
          result = D.SelectionResult_4;
      }
      _this._updateGeometry$0();
      return result;
    },
    pushHandleLayers$2(startHandle, endHandle) {
      return;
    },
    paint$2(context, offset) {
      var selectionPaint, _this = this;
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._selectable_adapter$_geometry._change_notifier$_value.status === D.SelectionStatus_2)
        return;
      selectionPaint = $.$get$_renderer().createPaint$0();
      selectionPaint.set$style(0, D.PaintingStyle_0);
      selectionPaint.set$color(0, _this._selectable_adapter$_selectionColor);
      context.get$canvas(context).drawRect$2(_this._getSelectionHighlightRect$0().shift$1(offset), selectionPaint);
    },
    dispose$0() {
      var _this = this;
      _this._selectable_adapter$_geometry.dispose$0();
      _this._endHandle = _this._startHandle = null;
      _this.super$__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant$dispose();
    },
    $isListenable: 1,
    $isValueListenable: 1
  };
  A.__RenderSelectableAdapter_RenderProxyBox_Selectable.prototype = {};
  A.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant.prototype = {
    dispose$0() {
      this._selection$_removeSelectionRegistrarSubscription$0();
      this.super$RenderObject$dispose();
    }
  };
  A.UnorderedListView.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        t1 = C._setArrayType([], type$.JSArray_Widget),
        t2 = _this.bulletSize,
        t3 = _this.spacing,
        t4 = _this.padding;
      if (t2 === 0)
        t1.push(new C.SizedBox(t3 + t4, _null, _null, _null));
      else
        t1.push(C.Text$rich(C.WidgetSpan$(D.PlaceholderAlignment_5, _null, new C.Padding(new C.EdgeInsetsDirectional(t4, 0, t3, 0), C.Container$(_null, _null, D.Clip_0, _null, _null, C.BoxDecoration$(_null, _null, _null, _null, _this.bulletColor, _null, _null, D.BoxShape_1), _null, t2, _null, _null, _null, _null, _null, t2), _null)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      t1.push(new C.Flexible(1, D.FlexFit_1, _this.child, _null));
      return C.Directionality$(C.Row$(t1, D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, D.TextBaseline_0, _null, D.VerticalDirection_1), _this.textDirection);
    }
  };
  A.OrderedListView.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      return C.Directionality$(C.Row$(C._setArrayType([new C.Padding(new C.EdgeInsetsDirectional(6, 0, 6, 0), C.Text$rich(C.TextSpan$(_null, _null, _this.no), _null, _null, _null, _null, _null, _null, _this._unordered_ordered_list$_style, _null, _null, _null, _null, _null, _null), _null), new C.Flexible(1, D.FlexFit_1, _this.child, _null)], type$.JSArray_Widget), D.CrossAxisAlignment_4, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, D.TextBaseline_0, _null, D.VerticalDirection_1), _this.textDirection);
    }
  };
  A.GptMarkdown.prototype = {
    build$1(context) {
      var _null = null,
        tex = D.JSString_methods.trim$0(this.data);
      return C.ClipRRect$(D.BorderRadius_tUf, new A.MdWidget(tex, context, true, A.GptMarkdownConfig$(_null, _null, false, _null, _null, _null, _null, _null, _null, _null, this.onLinkTap, _null, _null, _null, this.style, _null, _null, D.TextDirection_1, _null, _null), _null));
    }
  };
  A.MarkdownComponent.prototype = {};
  A.InlineMd.prototype = {};
  A.BlockMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("^\\ *?" + this.get$expString() + "$", true, true, true, false);
    },
    span$3(_, context, text, config) {
      var child, _null = null,
        matches = C.RegExp_RegExp("^(?<spaces>\\ \\ +).*", true, false, false, false).firstMatch$1(text),
        spaces = matches == null ? _null : matches.namedGroup$1("spaces"),
        $length = spaces == null ? _null : spaces.length;
      if ($length == null)
        $length = 0;
      child = this.build$3(context, text, config);
      $length = Math.min($length, 4);
      return C.WidgetSpan$(D.PlaceholderAlignment_0, D.TextBaseline_0, C.Row$(C._setArrayType([new C.Flexible(1, D.FlexFit_1, $length > 0 ? A.UnorderedListView$(_null, 4, child, 12, $length, config.textDirection) : child, _null)], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1));
    }
  };
  A.IndentMd.prototype = {
    get$expString() {
      return "^(\\ \\ +)([^\\n]+)$";
    },
    build$3(context, text, config) {
      var t1, _null = null,
        match = this.get$exp().firstMatch$1(text),
        conf = config.copyWith$0();
      if (match == null)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
        t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
      }
      return C.Directionality$(C.Row$(C._setArrayType([new C.Flexible(1, D.FlexFit_1, config.getRich$1(C.TextSpan$(A.MarkdownComponent_generate(context, t1 == null ? "" : t1, conf, false), _null, _null)), _null)], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), config.textDirection);
    }
  };
  A.HTag.prototype = {
    get$expString() {
      return "(?<hash>#{1,6})\\ (?<data>[^\\n]+?)$";
    },
    build$3(context, text, config) {
      var conf, t3, _null = null,
        theme = A.GptMarkdownTheme_of(context),
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = [theme.h1, theme.h2, theme.h3, theme.h4, theme.h5, theme.h6],
        t2 = match._match;
      if (1 >= t2.length)
        return C.ioore(t2, 1);
      t2 = t2[1].length - 1;
      if (!(t2 >= 0 && t2 < 6))
        return C.ioore(t1, t2);
      t2 = t1[t2];
      if (t2 == null)
        t1 = _null;
      else {
        t1 = config.style;
        t1 = t2.copyWith$1$color(t1 == null ? _null : t1.color);
      }
      conf = config.copyWith$1$style(t1);
      t1 = C.List_List$of(A.MarkdownComponent_generate(context, C.S(match.namedGroup$1("data")), conf, false), true, type$.InlineSpan);
      if (match.namedGroup$1("hash").length === 1) {
        t2 = config.style;
        t2 = t2 == null ? _null : t2.color;
        if (t2 == null) {
          t2 = C.Theme_of(context).colorScheme;
          t3 = t2._outline;
          if (t3 == null) {
            t3 = t2._onBackground;
            t2 = t3 == null ? t2.onSurface : t3;
          } else
            t2 = t3;
        }
        D.JSArray_methods.addAll$1(t1, C._setArrayType([B.TextSpan_0ck, C.WidgetSpan$(D.PlaceholderAlignment_4, _null, new A.CustomDivider(t2, theme.hrLineThickness, _null))], type$.JSArray_InlineSpan));
      }
      return config.getRich$1(C.TextSpan$(t1, _null, _null));
    }
  };
  A.NewLines.prototype = {
    get$exp() {
      return C.RegExp_RegExp("\\n\\n+", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var _null = null,
        t1 = config.style,
        t2 = t1 == null,
        t3 = t2 ? _null : t1.fontSize;
      if (t3 == null)
        t3 = 14;
      return C.TextSpan$(_null, C.TextStyle$(_null, _null, t2 ? _null : t1.color, _null, _null, _null, _null, _null, _null, _null, _null, t3, _null, _null, _null, _null, 1.15, true, _null, _null, _null, _null, _null, _null, _null, _null), "\n\n");
    }
  };
  A.HrLine.prototype = {
    get$expString() {
      return "\u2e3b|((--)[-]+)$";
    },
    build$3(context, text, config) {
      var t1 = A.GptMarkdownTheme_of(context),
        color = A.GptMarkdownTheme_of(context).hrLineColor,
        t2 = config.style;
      t2 = t2 == null ? null : t2.color;
      if (t2 == null)
        t2 = color;
      return new A.CustomDivider(t2, t1.hrLineThickness, null);
    }
  };
  A.CheckBoxMd.prototype = {
    get$expString() {
      return "\\[((?:\\x|\\ ))\\]\\ (\\S[^\\n]*?)$";
    },
    build$3(context, text, config) {
      var t2, _null = null,
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        t2 = _null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t1)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
      }
      return new A.CustomCb(new A.MdWidget(C.S(t1), context, false, config, _null), C.S(t2) === "x", config.textDirection, _null);
    }
  };
  A.RadioButtonMd.prototype = {
    get$expString() {
      return "\\(((?:\\x|\\ ))\\)\\ (\\S[^\\n]*)$";
    },
    build$3(context, text, config) {
      var t2, _null = null,
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        t2 = _null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t1)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
      }
      return new A.CustomRb(new A.MdWidget(C.S(t1), context, false, config, _null), C.S(t2) === "x", config.textDirection, _null);
    }
  };
  A.BlockQuote.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?:(?:^)\\ *>[^\\n]+)(?:(?:\\n)\\ *>[^\\n]+)*", true, true, true, false);
    },
    span$3(_, context, text, config) {
      var m, t1, t2, _i, t3, each, subString, child, _null = null,
        match = C.RegExp_RegExp("(?:(?:^)\\ *>[^\\n]+)(?:(?:\\n)\\ *>[^\\n]+)*", true, true, true, false).firstMatch$1(text);
      if (match == null)
        m = _null;
      else {
        t1 = match._match;
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
        m = t1;
      }
      for (t1 = (m == null ? "" : m).split("\n"), t2 = t1.length, _i = 0, t3 = ""; _i < t2; ++_i) {
        each = t1[_i];
        if (D.JSString_methods.startsWith$1(each, C.RegExp_RegExp("\\ *>", true, false, false, false))) {
          subString = D.JSString_methods.substring$1(D.JSString_methods.trimLeft$0(each), 1);
          t3 += (D.JSString_methods.startsWith$1(subString, " ") ? D.JSString_methods.substring$1(subString, 1) : subString) + "\n";
        } else
          t3 += each + "\n";
      }
      child = C.TextSpan$(A.MarkdownComponent_generate(context, D.JSString_methods.trim$0(t3.charCodeAt(0) == 0 ? t3 : t3), config, true), _null, _null);
      t1 = config.textDirection;
      t2 = C.Theme_of(context).colorScheme;
      t3 = t2._onSurfaceVariant;
      t2 = t3 == null ? t2.onSurface : t3;
      return C.TextSpan$(C._setArrayType([C.WidgetSpan$(D.PlaceholderAlignment_4, _null, C.Directionality$(new C.Padding(D.EdgeInsets_0_2_0_2, new A.BlockQuoteWidget(new C.Padding(B.EdgeInsetsDirectional_8_0_0_0, config.getRich$1(child), _null), t1, t2, 3, _null), _null), t1))], type$.JSArray_InlineSpan), _null, _null);
    }
  };
  A.UnOrderedList.prototype = {
    get$expString() {
      return "(?:\\-|\\*)\\ ([^\\n]+)$";
    },
    build$3(context, text, config) {
      var t1, t2, t3, t4, _null = null,
        match = this.get$exp().firstMatch$1(text);
      if (match == null)
        t1 = _null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
      }
      t2 = config.style;
      t3 = t2 == null;
      t4 = t3 ? _null : t2.color;
      if (t4 == null) {
        t4 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
        t4 = (t4 == null ? D.DefaultTextStyle_4Wa : t4).style.color;
      }
      t2 = t3 ? _null : t2.fontSize;
      if (t2 == null) {
        t2 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
        t2 = (t2 == null ? D.DefaultTextStyle_4Wa : t2).style.fontSize;
      }
      t1 = A.UnorderedListView$(t4, 0.3 * (t2 == null ? 14 : t2), new A.MdWidget(C.S(t1), context, true, config, _null), 7, 10, config.textDirection);
      return t1;
    }
  };
  A.OrderedList.prototype = {
    get$expString() {
      return "([0-9]+)\\.\\ ([^\\n]+)$";
    },
    build$3(context, text, config) {
      var t2, t3, _null = null,
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        t2 = _null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t1)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
        t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
      }
      t3 = config.style;
      t1 = new A.OrderedListView(C.S(t2) + ".", (t3 == null ? D.TextStyle_ZyH : t3).copyWith$1$fontWeight(D.FontWeight_0_100), config.textDirection, new A.MdWidget(C.S(t1), context, true, config, _null), _null);
      return t1;
    }
  };
  A.HighlightedText.prototype = {
    get$exp() {
      return C.RegExp_RegExp("`(?!`)(.+?)(?<!`)`(?!`)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var highlightedText, t1, style, t2, _null = null,
        match = C.RegExp_RegExp("`(?!`)(.+?)(?<!`)`(?!`)", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text));
      if (match == null)
        highlightedText = _null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        highlightedText = t1;
      }
      if (highlightedText == null)
        highlightedText = "";
      t1 = config.style;
      if (t1 == null)
        style = _null;
      else {
        t2 = $.$get$_renderer().createPaint$0();
        t2.set$color(0, A.GptMarkdownTheme_of(context).highlightColor);
        t2.set$strokeCap(D.StrokeCap_1);
        t2.set$strokeJoin(D.StrokeJoin_1);
        t2 = t1.copyWith$2$background$fontWeight(t2, D.FontWeight_6_700);
        style = t2;
      }
      if (style == null) {
        t1 = $.$get$_renderer().createPaint$0();
        t1.set$color(0, A.GptMarkdownTheme_of(context).highlightColor);
        t1.set$strokeCap(D.StrokeCap_1);
        t1.set$strokeJoin(D.StrokeJoin_1);
        style = C.TextStyle$(t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.FontWeight_6_700, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      return C.TextSpan$(_null, style, highlightedText);
    }
  };
  A.BoldMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?<!\\*)\\*\\*(?<!\\s)(.+?)(?<!\\s)\\*\\*(?!\\*)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var conf,
        match = C.RegExp_RegExp("(?<!\\*)\\*\\*(?<!\\s)(.+?)(?<!\\s)\\*\\*(?!\\*)", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = config.style;
      t1 = t1 == null ? null : t1.copyWith$1$fontWeight(D.FontWeight_6_700);
      conf = config.copyWith$1$style(t1 == null ? D.TextStyle_TJs : t1);
      if (match == null)
        t1 = null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
      }
      return C.TextSpan$(A.MarkdownComponent_generate(context, C.S(t1), conf, false), conf.style, null);
    }
  };
  A.StrikeMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?<!\\*)\\~\\~(?<!\\s)(.+?)(?<!\\s)\\~\\~(?!\\*)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var t2, conf,
        match = C.RegExp_RegExp("(?<!\\*)\\~\\~(?<!\\s)(.+?)(?<!\\s)\\~\\~(?!\\*)", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = config.style;
      if (t1 == null)
        t1 = null;
      else {
        t2 = t1.color;
        t1 = t1.copyWith$2$decoration$decorationColor(D.TextDecoration_4, t2);
      }
      conf = config.copyWith$1$style(t1 == null ? B.TextStyle_HPw : t1);
      if (match == null)
        t1 = null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
      }
      return C.TextSpan$(A.MarkdownComponent_generate(context, C.S(t1), conf, false), conf.style, null);
    }
  };
  A.ItalicMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?:(?<!\\*)\\*(?<!\\s)(.+?)(?<!\\s)\\*(?!\\*))", true, true, false, false);
    },
    span$3(_, context, text, config) {
      var data, t2, conf,
        match = C.RegExp_RegExp("(?:(?<!\\*)\\*(?<!\\s)(.+?)(?<!\\s)\\*(?!\\*))", true, true, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        data = null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
        data = t2;
      }
      if (data == null)
        if (t1)
          data = null;
        else {
          t1 = match._match;
          if (2 >= t1.length)
            return C.ioore(t1, 2);
          t1 = t1[2];
          data = t1;
        }
      t1 = config.style;
      conf = config.copyWith$1$style((t1 == null ? D.TextStyle_ZyH : t1).copyWith$1$fontStyle(B.FontStyle_1));
      return C.TextSpan$(A.MarkdownComponent_generate(context, C.S(data), conf, false), conf.style, null);
    }
  };
  A.LatexMathMultiLine.prototype = {
    get$expString() {
      return string$.x5c_____;
    },
    get$exp() {
      return C.RegExp_RegExp(string$.x5c_____, true, true, true, false);
    },
    build$3(context, text, config) {
      var t2, mathText, workaround,
        p0 = C.RegExp_RegExp(string$.x5c_____, true, true, true, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = p0 == null;
      if (t1)
        t2 = null;
      else {
        t2 = p0._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t2 == null) {
        if (t1)
          t1 = null;
        else {
          t1 = p0._match;
          if (2 >= t1.length)
            return C.ioore(t1, 2);
          t1 = t1[2];
        }
        mathText = t1;
      } else
        mathText = t2;
      if (mathText == null)
        mathText = "";
      workaround = new A.LatexMathMultiLine_build_closure();
      t1 = workaround.call$1(mathText);
      t2 = config.style;
      if (t2 == null)
        t2 = D.TextStyle_ZyH;
      return new A.LatexMathMultiLine_build_closure0(config, workaround, mathText).call$4(context, t1, t2, false);
    }
  };
  A.LatexMath.prototype = {
    get$exp() {
      return C.RegExp_RegExp(D.JSArray_methods.join$1(C._setArrayType(["\\\\\\((.*?)\\\\\\)"], type$.JSArray_String), "|"), true, true, false, false);
    },
    span$3(_, context, text, config) {
      var t2, mathText, workaround,
        p0 = C.RegExp_RegExp(D.JSArray_methods.join$1(C._setArrayType(["\\\\\\((.*?)\\\\\\)"], type$.JSArray_String), "|"), true, true, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = p0 == null;
      if (!t1) {
        t2 = p0._match;
        if (0 >= t2.length)
          return C.ioore(t2, 0);
      }
      if (t1)
        mathText = null;
      else {
        t1 = p0._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        if (t1 == null)
          t1 = null;
        mathText = t1;
      }
      if (mathText == null)
        mathText = "";
      workaround = new A.LatexMath_span_closure();
      t1 = workaround.call$1(mathText);
      t2 = config.style;
      if (t2 == null)
        t2 = D.TextStyle_ZyH;
      return C.WidgetSpan$(D.PlaceholderAlignment_0, D.TextBaseline_0, new A.LatexMath_span_closure0(config, workaround, mathText).call$4(context, t1, t2, true));
    }
  };
  A.SourceTag.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?:\u3010.*?)?\\[(\\d+?)\\]", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var $content, t1, t2, _null = null,
        match = C.RegExp_RegExp("(?:\u3010.*?)?\\[(\\d+?)\\]", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text));
      if (match == null)
        $content = _null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        $content = t1[1];
      }
      if ($content == null)
        return B.TextSpan_DuQ;
      t1 = C.Theme_of(context).colorScheme;
      t2 = t1._onInverseSurface;
      t1 = t2 == null ? t1.surface : t2;
      t1 = new C.SizedBox(20, 20, C.Material$(D.Duration_200000, true, _null, C.FittedBox$(D.Alignment_0_0, C.Text$($content, _null, _null, _null, _null, _null, _null, _null, _null, _null, config.textDirection, _null, _null, _null), D.Clip_0, D.BoxFit_6), D.Clip_0, t1, 0, _null, _null, B.OvalBorder_0SS, _null, _null, D.MaterialType_0), _null);
      return C.WidgetSpan$(D.PlaceholderAlignment_5, _null, new C.Padding(B.EdgeInsets_2_2_2_2, t1, _null));
    }
  };
  A.ATagMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?<!\\!)\\[.*\\]\\([^\\s]*\\)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var end, t2, linkText, urlStart, urlEnd, parenCount, char, url, endingSpans, theme, t3, linkTextSpan, child, _null = null,
        t1 = text.length,
        bracketCount = 0, i = 0;
      while (true) {
        if (!(i < t1)) {
          end = 0;
          break;
        }
        t2 = text[i];
        if (t2 === "[")
          ++bracketCount;
        else if (t2 === "]") {
          --bracketCount;
          if (bracketCount === 0) {
            end = i;
            break;
          }
        }
        ++i;
      }
      t2 = end + 1;
      if (!(t2 < t1))
        return C.ioore(text, t2);
      if (text[t2] !== "(")
        return B.TextSpan_DuQ;
      linkText = D.JSString_methods.substring$2(text, 1, end);
      urlStart = end + 2;
      i = urlStart;
      parenCount = 0;
      while (true) {
        if (!(i < t1)) {
          urlEnd = urlStart;
          break;
        }
        char = text[i];
        if (char === "(")
          ++parenCount;
        else if (char === ")")
          if (parenCount === 0) {
            urlEnd = i;
            break;
          } else
            --parenCount;
        ++i;
      }
      if (urlEnd === urlStart)
        return B.TextSpan_DuQ;
      url = D.JSString_methods.trim$0(D.JSString_methods.substring$2(text, urlStart, urlEnd));
      endingSpans = A.MarkdownComponent_generate(context, D.JSString_methods.substring$1(text, urlEnd + 1), config, false);
      theme = A.GptMarkdownTheme_of(context);
      t1 = A.MarkdownComponent_generate(context, linkText, config, false);
      t2 = config.style;
      if (t2 == null)
        t2 = _null;
      else {
        t3 = theme.linkColor;
        t3 = t2.copyWith$2$color$decorationColor(t3, t3);
        t2 = t3;
      }
      linkTextSpan = C.TextSpan$(t1, t2, _null);
      child = C.WidgetSpan$(D.PlaceholderAlignment_0, D.TextBaseline_0, new A.LinkButton(linkText, config.getRich$1(linkTextSpan), new A.ATagMd_span_closure(config, url, linkText), config, theme.linkColor, theme.linkHoverColor, _null));
      t1 = C._setArrayType([child], type$.JSArray_InlineSpan);
      D.JSArray_methods.addAll$1(t1, endingSpans);
      return C.TextSpan$(t1, _null, _null);
    }
  };
  A.ImageMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("\\!\\[[^\\[\\]]*\\]\\([^\\s]*\\)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var t1, altText, urlStart, urlEnd, i, parenCount, char, url, size, t2, width, height, _null = null,
        basicMatch = C.RegExp_RegExp("\\!\\[([^\\[\\]]*)\\]\\(", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text));
      if (basicMatch == null)
        return B.TextSpan_DuQ;
      t1 = basicMatch._match;
      if (1 >= t1.length)
        return C.ioore(t1, 1);
      altText = t1[1];
      if (altText == null)
        altText = "";
      urlStart = basicMatch.get$end(0);
      t1 = text.length;
      i = urlStart;
      parenCount = 0;
      while (true) {
        if (!(i < t1)) {
          urlEnd = urlStart;
          break;
        }
        if (!(i >= 0))
          return C.ioore(text, i);
        char = text[i];
        if (char === "(")
          ++parenCount;
        else if (char === ")")
          if (parenCount === 0) {
            urlEnd = i;
            break;
          } else
            --parenCount;
        ++i;
      }
      if (urlEnd === urlStart)
        return B.TextSpan_DuQ;
      url = D.JSString_methods.trim$0(D.JSString_methods.substring$2(text, urlStart, urlEnd));
      if (altText.length !== 0) {
        size = C.RegExp_RegExp("^([0-9]+)?x?([0-9]+)?", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(altText));
        t1 = size == null;
        if (t1)
          t2 = _null;
        else {
          t2 = size._match;
          if (1 >= t2.length)
            return C.ioore(t2, 1);
          t2 = t2[1];
          t2 = t2 == null ? _null : D.JSString_methods.trim$0(t2);
        }
        width = C.Primitives_parseDouble(t2 == null ? "a" : t2);
        if (t1)
          t1 = _null;
        else {
          t1 = size._match;
          if (2 >= t1.length)
            return C.ioore(t1, 2);
          t1 = t1[2];
          t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
        }
        height = C.Primitives_parseDouble(t1 == null ? "a" : t1);
      } else {
        width = _null;
        height = width;
      }
      t1 = C.Image$(new A.ImageMd_span_closure(), D.BoxFit_0, _null, _null, new A.NetworkImage(url), new A.ImageMd_span_closure0(), _null, _null);
      return C.WidgetSpan$(D.PlaceholderAlignment_4, _null, new C.SizedBox(width, height, t1, _null));
    }
  };
  A.TableMd.prototype = {
    get$expString() {
      return "(((\\|[^\\n\\|]+\\|)((([^\\n\\|]+\\|)+)?)\\ *)(\\n\\ *(((\\|[^\\n\\|]+\\|)(([^\\n\\|]+\\|)+)?))\\ *)+)$";
    },
    build$3(context, text, config) {
      var hasHeader, separatorRow, _i, each, t2, controller, side, _null = null, _box_0 = {},
        t1 = type$.MappedListIterable_of_String_and_Map_int_String,
        value = C.List_List$of(new C.MappedListIterable(C._setArrayType(text.split("\n"), type$.JSArray_String), type$.Map_int_String_Function_String._as(new A.TableMd_build_closure()), t1), true, t1._eval$1("ListIterable.E"));
      t1 = value.length;
      hasHeader = t1 >= 2;
      _box_0.columnAlignments = C._setArrayType([], type$.JSArray_TextAlign);
      if (hasHeader) {
        separatorRow = value[1];
        _box_0.columnAlignments = C.List_List$generate(J.get$length$asx(separatorRow), new A.TableMd_build_closure0(separatorRow), true, type$.TextAlign);
      }
      _box_0.maxCol = 0;
      for (_i = 0; _i < value.length; value.length === t1 || (0, C.throwConcurrentModificationError)(value), ++_i) {
        each = value[_i];
        t2 = J.getInterceptor$x(each);
        if (_box_0.maxCol < J.get$length$asx(t2.get$keys(each)))
          _box_0.maxCol = J.get$length$asx(t2.get$keys(each));
      }
      if (_box_0.maxCol === 0)
        return C.Text$("", _null, _null, _null, _null, _null, _null, _null, config.style, _null, _null, _null, _null, _null);
      for (; t1 = _box_0.columnAlignments, t1.length < _box_0.maxCol;)
        D.JSArray_methods.add$1(t1, D.TextAlign_0);
      controller = C.ScrollController$(_null, _null);
      side = new C.BorderSide(C.Theme_of(context).colorScheme.onSurface, 1, D.BorderStyle_1, -1);
      t1 = new C.ListMapView(value, C._arrayInstanceType(value)._eval$1("ListMapView<1>"));
      return C.Scrollbar$(C.SingleChildScrollView$(C.Table$(new A.TableBorder(side, side, side, side, side, side, D.BorderRadius_tUf), t1.get$entries(t1).where$1(0, new A.TableMd_build_closure1(hasHeader)).map$1$1(0, new A.TableMd_build_closure2(_box_0, hasHeader, context, config), type$.TableRow).toList$0(0), _null, new A.CustomTableColumnWidth(), D.TableCellVerticalAlignment_1, config.textDirection), controller, D.DragStartBehavior_1, _null, _null, D.Axis_0), controller);
    }
  };
  A.CodeBlockMd.prototype = {
    get$expString() {
      return "```(.*?)\\n((.*?)(:?\\n\\s*?```)|(.*)(:?\\n```)?)$";
    },
    build$3(context, text, config) {
      var codes, $name,
        t1 = this.get$exp().firstMatch$1(text);
      if (t1 == null)
        codes = null;
      else {
        t1 = t1._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
        codes = t1;
      }
      if (codes == null)
        codes = "";
      t1 = this.get$exp().firstMatch$1(text);
      if (t1 == null)
        $name = null;
      else {
        t1 = t1._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        $name = t1;
      }
      if ($name == null)
        $name = "";
      codes = D.JSString_methods.trim$0(C.stringReplaceAllUnchecked(codes, "```", ""));
      D.JSString_methods.endsWith$1(text, "```");
      return new A.CodeField($name, codes, null);
    }
  };
  A.UnderLineMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("<u>(.*?)(?:</u>|$)", true, true, true, false);
    },
    span$3(_, context, text, config) {
      var match = C.RegExp_RegExp("<u>(.*?)(?:</u>|$)", true, true, true, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = config.style,
        t2 = t1 == null,
        t3 = t2 ? D.TextStyle_ZyH : t1,
        conf = config.copyWith$1$style(t3.copyWith$2$decoration$decorationColor(D.TextDecoration_1, t2 ? null : t1.color));
      if (match == null)
        t1 = null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
      }
      return C.TextSpan$(A.MarkdownComponent_generate(context, C.S(t1), conf, false), conf.style, null);
    }
  };
  A.MdWidget.prototype = {
    createState$0() {
      return new A._MdWidgetState(C._setArrayType([], type$.JSArray_InlineSpan), D._StateLifecycle_0);
    }
  };
  A._MdWidgetState.prototype = {
    initState$0() {
      this.super$State$initState();
      var t1 = this._widget;
      this.set$list(0, A.MarkdownComponent_generate(t1.context, t1.exp, t1.config, t1.includeGlobalComponents));
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      type$.MdWidget._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      if (oldWidget.exp === t1.exp) {
        t2 = oldWidget.config;
        t1 = t1.config;
        t3 = false;
        if (J.$eq$(t2.style, t1.style))
          t1 = t2.textDirection === t1.textDirection;
        else
          t1 = t3;
        t1 = !t1;
      } else
        t1 = true;
      if (t1) {
        t1 = _this.get$context(0);
        t2 = _this._widget;
        _this.set$list(0, A.MarkdownComponent_generate(t1, t2.exp, t2.config, t2.includeGlobalComponents));
      }
    },
    build$1(context) {
      var t1 = this._widget.config,
        t2 = this.list,
        t3 = t1.style;
      return t1.getRich$1(C.TextSpan$(t2, t3 == null ? null : t3.copyWith$0(), null));
    },
    set$list(_, list) {
      this.list = type$.List_InlineSpan._as(list);
    }
  };
  A.CustomTableColumnWidth.prototype = {
    maxIntrinsicWidth$2(cells, containerWidth) {
      var t1, t2, width, t3;
      type$.Iterable_RenderBox._as(cells);
      for (t1 = cells.$ti, t2 = new C._SyncStarIterator(cells._outerHelper(), t1._eval$1("_SyncStarIterator<1>")), t1 = t1._precomputed1, width = 50; t2.moveNext$0();) {
        t3 = t2._async$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        t3.layout$2$parentUsesSize(D.BoxConstraints_0Yu, true);
        width = Math.max(width, t3.get$size(0)._dx);
      }
      return Math.min(containerWidth, width);
    },
    minIntrinsicWidth$2(cells, containerWidth) {
      type$.Iterable_RenderBox._as(cells);
      return 50;
    }
  };
  A.GptMarkdownThemeData.prototype = {
    lerp$2(other, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this;
      type$.nullable_GptMarkdownThemeData._as(other);
      if (other == null)
        return _this;
      t1 = _this.highlightColor;
      t2 = C.Color_lerp(t1, other.highlightColor, t);
      t1 = t2 == null ? t1 : t2;
      t2 = _this.h1;
      t3 = C.TextStyle_lerp(t2, other.h1, t);
      t2 = t3 == null ? t2 : t3;
      t3 = _this.h2;
      t4 = C.TextStyle_lerp(t3, other.h2, t);
      t3 = t4 == null ? t3 : t4;
      t4 = _this.h3;
      t5 = C.TextStyle_lerp(t4, other.h3, t);
      t4 = t5 == null ? t4 : t5;
      t5 = _this.h4;
      t6 = C.TextStyle_lerp(t5, other.h4, t);
      t5 = t6 == null ? t5 : t6;
      t6 = _this.h5;
      t7 = C.TextStyle_lerp(t6, other.h5, t);
      t6 = t7 == null ? t6 : t7;
      t7 = _this.h6;
      t8 = C.TextStyle_lerp(t7, other.h6, t);
      t7 = t8 == null ? t7 : t8;
      t8 = new C.Tween(_this.hrLineThickness, other.hrLineThickness, type$.Tween_double).transform$1(0, t);
      t9 = _this.hrLineColor;
      t10 = C.Color_lerp(t9, other.hrLineColor, t);
      t9 = t10 == null ? t9 : t10;
      t10 = _this.linkColor;
      t11 = C.Color_lerp(t10, other.linkColor, t);
      t10 = t11 == null ? t10 : t11;
      t11 = _this.linkHoverColor;
      t12 = C.Color_lerp(t11, other.linkHoverColor, t);
      return new A.GptMarkdownThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t12 == null ? t11 : t12);
    }
  };
  A.GptMarkdownTheme.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this.gptThemeData !== type$.GptMarkdownTheme._as(oldWidget).gptThemeData;
    }
  };
  A.ChannelIterator.prototype = {
    moveNext$0() {
      var t1 = this.color;
      return ++this.index < t1.get$length(t1);
    },
    get$current(_) {
      return this.color.$index(0, this.index);
    },
    $isIterator: 1
  };
  A.ChannelOrder.prototype = {
    _enumToString$0() {
      return "ChannelOrder." + this._name;
    }
  };
  A.ColorFloat16.prototype = {
    clone$0(_) {
      return new A.ColorFloat16(new Uint16Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_9;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
        t2 = $.Float16__toFloatFloat32Data;
        t2 = t2 != null ? t2 : A.Float16__initialize();
        if (!(t1 < t2.length))
          return C.ioore(t2, t1);
        t1 = t2[t1];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = A.Float16_doubleToFloat16(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.data;
      if (!D.NativeUint16List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
        t2 = $.Float16__toFloatFloat32Data;
        t2 = t2 != null ? t2 : A.Float16__initialize();
        if (!(t1 < t2.length))
          return C.ioore(t2, t1);
        t1 = t2[t1];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, v) {
      var t2,
        t1 = this.data;
      if (!D.NativeUint16List_methods.get$isEmpty(t1)) {
        t2 = A.Float16_doubleToFloat16(v);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = t2;
      }
    },
    get$g() {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t1 = t1[1];
        t2 = $.Float16__toFloatFloat32Data;
        t2 = t2 != null ? t2 : A.Float16__initialize();
        if (!(t1 < t2.length))
          return C.ioore(t2, t1);
        t1 = t2[t1];
      } else
        t1 = 0;
      return t1;
    },
    set$g(v) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = A.Float16_doubleToFloat16(v);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t1 = t1[2];
        t2 = $.Float16__toFloatFloat32Data;
        t2 = t2 != null ? t2 : A.Float16__initialize();
        if (!(t1 < t2.length))
          return C.ioore(t2, t1);
        t1 = t2[t1];
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, v) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = A.Float16_doubleToFloat16(v);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t2,
        t1 = this.data;
      if (t1.length > 3) {
        t1 = t1[3];
        t2 = $.Float16__toFloatFloat32Data;
        t2 = t2 != null ? t2 : A.Float16__initialize();
        if (!(t1 < t2.length))
          return C.ioore(t2, t1);
        t1 = t2[t1];
      } else
        t1 = 0;
      return t1 / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorFloat32.prototype = {
    clone$0(_) {
      return new A.ColorFloat32(new Float32Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_10;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = value;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeFloat32List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t1 = this.data;
      if (!D.NativeFloat32List_methods.get$isEmpty(t1)) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = r;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t1 = this.data;
      if (t1.length > 1) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = g;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t1 = this.data;
      if (t1.length > 2) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = b;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 1) / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorFloat64.prototype = {
    clone$0(_) {
      return new A.ColorFloat64(new Float64Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_11;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = value;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeFloat64List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t1 = this.data;
      if (!D.NativeFloat64List_methods.get$isEmpty(t1)) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = r;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t1 = this.data;
      if (t1.length > 1) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = g;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t1 = this.data;
      if (t1.length > 2) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = b;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 1) / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorInt16.prototype = {
    clone$0(_) {
      return new A.ColorInt16(new Int16Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_7;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeInt16List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.data;
      if (!D.NativeInt16List_methods.get$isEmpty(t1)) {
        t2 = D.JSInt_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = t2;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = D.JSInt_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = D.JSInt_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 0) / 32767;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorInt32.prototype = {
    clone$0(_) {
      return new A.ColorInt32(new Int32Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_8;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeInt32List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t1 = this.data;
      if (!D.NativeInt32List_methods.get$isEmpty(t1)) {
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = r;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = D.JSInt_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = D.JSInt_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 0) / 2147483647;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorInt8.prototype = {
    clone$0(_) {
      return new A.ColorInt8(new Int8Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_6;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeInt8List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.data;
      if (!D.NativeInt8List_methods.get$isEmpty(t1)) {
        t2 = D.JSInt_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = t2;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = D.JSInt_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = D.JSInt_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 0) / 127;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorUint1.prototype = {
    clone$0(_) {
      var t1 = this.__ColorUint1_data_A;
      t1 === $ && C.throwLateFieldNI("data");
      return new A.ColorUint1(this.length, t1);
    },
    get$format() {
      return B.Format_0;
    },
    get$palette() {
      return null;
    },
    _color_uint1$_getChannel$1(ci) {
      var t1;
      if (ci < this.length) {
        t1 = this.__ColorUint1_data_A;
        t1 === $ && C.throwLateFieldNI("data");
        t1 = D.JSInt_methods._shrReceiverPositive$1(t1, 7 - ci) & 1;
      } else
        t1 = 0;
      return t1;
    },
    _color_uint1$_setChannel$2(ci, value) {
      var t1;
      if (ci >= this.length)
        return;
      ci = 7 - ci;
      t1 = this.__ColorUint1_data_A;
      t1 === $ && C.throwLateFieldNI("data");
      this.__ColorUint1_data_A = value !== 0 ? (t1 | D.JSInt_methods.$shl(1, ci)) >>> 0 : (t1 & ~(D.JSInt_methods.$shl(1, ci) & 255)) >>> 0;
    },
    $index(_, index) {
      return this._color_uint1$_getChannel$1(C._asInt(index));
    },
    $indexSet(_, index, value) {
      return this._color_uint1$_setChannel$2(C._asInt(index), C._asNum(value));
    },
    get$r(_) {
      return this._color_uint1$_getChannel$1(0);
    },
    set$r(_, v) {
      this._color_uint1$_setChannel$2(0, v);
    },
    get$g() {
      return this._color_uint1$_getChannel$1(1);
    },
    set$g(v) {
      this._color_uint1$_setChannel$2(1, v);
    },
    get$b(_) {
      return this._color_uint1$_getChannel$1(2);
    },
    set$b(_, v) {
      this._color_uint1$_setChannel$2(2, v);
    },
    get$aNormalized() {
      return this._color_uint1$_getChannel$1(3) / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1,
    get$length(receiver) {
      return this.length;
    }
  };
  A.ColorUint16.prototype = {
    clone$0(_) {
      return new A.ColorUint16(new Uint16Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_4;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeUint16List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.data;
      if (!D.NativeUint16List_methods.get$isEmpty(t1)) {
        t2 = D.JSInt_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = t2;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = D.JSInt_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = D.JSInt_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 0) / 65535;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorUint2.prototype = {
    clone$0(_) {
      var t1 = this.__ColorUint2_data_A;
      t1 === $ && C.throwLateFieldNI("data");
      return new A.ColorUint2(this.length, t1);
    },
    get$format() {
      return B.Format_1;
    },
    get$palette() {
      return null;
    },
    _color_uint2$_getChannel$1(ci) {
      var t1;
      if (ci < this.length) {
        t1 = this.__ColorUint2_data_A;
        t1 === $ && C.throwLateFieldNI("data");
        t1 = D.JSInt_methods._shrReceiverPositive$1(t1, 6 - (ci << 1 >>> 0)) & 3;
      } else
        t1 = 0;
      return t1;
    },
    _color_uint2$_setChannel$2(ci, value) {
      var mask, t1, t2;
      if (ci >= this.length)
        return;
      if (!(ci >= 0 && ci < 4))
        return C.ioore(B.List_63_207_243_252, ci);
      mask = B.List_63_207_243_252[ci];
      t1 = D.JSNumber_methods.toInt$0(value);
      t2 = this.__ColorUint2_data_A;
      t2 === $ && C.throwLateFieldNI("data");
      this.__ColorUint2_data_A = (t2 & mask | D.JSInt_methods.$shl(t1 & 3, 6 - (ci << 1 >>> 0))) >>> 0;
    },
    $index(_, index) {
      return this._color_uint2$_getChannel$1(C._asInt(index));
    },
    $indexSet(_, index, value) {
      return this._color_uint2$_setChannel$2(C._asInt(index), C._asNum(value));
    },
    get$r(_) {
      return this._color_uint2$_getChannel$1(0);
    },
    set$r(_, v) {
      this._color_uint2$_setChannel$2(0, v);
    },
    get$g() {
      return this._color_uint2$_getChannel$1(1);
    },
    set$g(v) {
      this._color_uint2$_setChannel$2(1, v);
    },
    get$b(_) {
      return this._color_uint2$_getChannel$1(2);
    },
    set$b(_, v) {
      this._color_uint2$_setChannel$2(2, v);
    },
    get$aNormalized() {
      return this._color_uint2$_getChannel$1(3) / 3;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1,
    get$length(receiver) {
      return this.length;
    }
  };
  A.ColorUint32.prototype = {
    clone$0(_) {
      return new A.ColorUint32(new Uint32Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_5;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeUint32List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.data;
      if (!D.NativeUint32List_methods.get$isEmpty(t1)) {
        t2 = D.JSInt_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = t2;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = D.JSInt_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = D.JSInt_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 0) / 4294967295;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ColorUint4.prototype = {
    clone$0(_) {
      return new A.ColorUint4(this.length, new Uint8Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_2;
    },
    get$palette() {
      return null;
    },
    _getChannel$1(ci) {
      var t1, t2;
      if (ci < 0 || ci >= this.length)
        t1 = 0;
      else {
        t1 = this.data;
        t2 = t1.length;
        if (ci < 2) {
          if (0 >= t2)
            return C.ioore(t1, 0);
          t1 = D.JSInt_methods._shrReceiverPositive$1(t1[0], 4 - (ci << 2 >>> 0)) & 15;
        } else {
          if (1 >= t2)
            return C.ioore(t1, 1);
          t1 = D.JSInt_methods._shrReceiverPositive$1(t1[1], 4 - ((ci & 1) << 2)) & 15;
        }
      }
      return t1;
    },
    _setChannel$2(ci, value) {
      var vi, i, t1, t2;
      if (ci >= this.length)
        return;
      vi = D.JSInt_methods.clamp$2(D.JSNumber_methods.toInt$0(value), 0, 15);
      if (ci > 1) {
        ci &= 1;
        i = 1;
      } else
        i = 0;
      if (ci === 0) {
        t1 = this.data;
        if (!(i < t1.length))
          return C.ioore(t1, i);
        t2 = t1[i];
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[i] = (t2 & 15 | vi << 4) >>> 0;
      } else if (ci === 1) {
        t1 = this.data;
        if (!(i < t1.length))
          return C.ioore(t1, i);
        t2 = t1[i];
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[i] = (t2 & 240 | vi) >>> 0;
      }
    },
    $index(_, index) {
      return this._getChannel$1(C._asInt(index));
    },
    $indexSet(_, index, value) {
      return this._setChannel$2(C._asInt(index), C._asNum(value));
    },
    get$r(_) {
      return this._getChannel$1(0);
    },
    set$r(_, v) {
      this._setChannel$2(0, v);
    },
    get$g() {
      return this._getChannel$1(1);
    },
    set$g(v) {
      this._setChannel$2(1, v);
    },
    get$b(_) {
      return this._getChannel$1(2);
    },
    set$b(_, v) {
      this._setChannel$2(2, v);
    },
    get$aNormalized() {
      return this._getChannel$1(3) / 15;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1,
    get$length(receiver) {
      return this.length;
    }
  };
  A.ColorUint8.prototype = {
    clone$0(_) {
      return new A.ColorUint8(new Uint8Array(C._ensureNativeList(this.data)));
    },
    get$format() {
      return B.Format_3;
    },
    get$length(_) {
      return this.data.length;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1, t2;
      C._asInt(index);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1 = t1[index];
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      var t1, t2, t3;
      C._asInt(index);
      C._asNum(value);
      t1 = this.data;
      t2 = t1.length;
      if (index < t2) {
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(index >= 0))
          return C.ioore(t1, index);
        t1[index] = t3;
      }
    },
    get$r(_) {
      var t1 = this.data;
      if (!D.NativeUint8List_methods.get$isEmpty(t1)) {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.data;
      if (!D.NativeUint8List_methods.get$isEmpty(t1)) {
        t2 = D.JSInt_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1[0] = t2;
      }
    },
    get$g() {
      var t1 = this.data;
      return t1.length > 1 ? t1[1] : 0;
    },
    set$g(g) {
      var t2,
        t1 = this.data;
      if (t1.length > 1) {
        t2 = D.JSInt_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[1] = t2;
      }
    },
    get$b(_) {
      var t1 = this.data;
      return t1.length > 2 ? t1[2] : 0;
    },
    set$b(_, b) {
      var t2,
        t1 = this.data;
      if (t1.length > 2) {
        t2 = D.JSInt_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[2] = t2;
      }
    },
    get$aNormalized() {
      var t1 = this.data;
      return (t1.length > 3 ? t1[3] : 255) / 255;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === this.data.length && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ConstColorUint8.prototype = {
    clone$0(_) {
      return new A.ConstColorUint8(this.data);
    },
    get$format() {
      return B.Format_3;
    },
    get$length(_) {
      return 4;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      var t1;
      C._asInt(index);
      if (index >= 0 && index < 4) {
        t1 = index << 3 >>> 0;
        t1 = D.JSInt_methods._shrBothPositive$1((this.data & D.JSInt_methods._shlPositive$1(255, t1)) >>> 0, t1);
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, index, value) {
      C._asInt(index);
      C._asNum(value);
    },
    get$r(_) {
      return this.$index(0, 0);
    },
    set$r(_, v) {
    },
    get$g() {
      return this.$index(0, 1);
    },
    set$g(v) {
    },
    get$b(_) {
      return this.$index(0, 2);
    },
    set$b(_, v) {
    },
    get$a(_) {
      return this.$index(0, 3);
    },
    get$aNormalized() {
      return this.get$a(this) / 255;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return type$.Color_2._is(other) && other.get$length(other) === _this.get$length(_this) && other.get$hashCode(other) === C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E")));
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    $isColor1: 1
  };
  A.ConstColorRgb8.prototype = {
    get$a(_) {
      return 255;
    },
    get$aNormalized() {
      return 1;
    },
    get$length(_) {
      return 3;
    }
  };
  A.Format.prototype = {
    _enumToString$0() {
      return "Format." + this._name;
    }
  };
  A.ExifData.prototype = {
    getTagName$1(tag) {
      var t1 = $.$get$exifImageTags();
      if (!t1.containsKey$1(0, tag))
        return "<unknown>";
      return t1.$index(0, tag).name;
    },
    toString$0(_) {
      var t1, t2, t3, t4, t5, t6, t7, t8, directory, t9, value, t10, subDirectory, t11, _this = this;
      for (t1 = _this.directories, t2 = new C.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapKeyIterator<1>")), t3 = type$.int, t4 = type$.IfdValue, t5 = type$.String, t6 = type$.IfdDirectory, t7 = ""; t2.moveNext$0();) {
        t8 = t2.__js_helper$_current;
        t7 += t8 + "\n";
        directory = t1.$index(0, t8);
        for (t8 = directory.data, t8 = new C.LinkedHashMapKeyIterator(t8, t8._modifications, t8._first, C._instanceType(t8)._eval$1("LinkedHashMapKeyIterator<1>")); t8.moveNext$0();) {
          t9 = t8.__js_helper$_current;
          value = directory.$index(0, t9);
          t7 = value == null ? t7 + ("\t" + _this.getTagName$1(t9) + "\n") : t7 + ("\t" + _this.getTagName$1(t9) + ": " + value.toString$0(0) + "\n");
        }
        for (t8 = directory.sub.directories, t9 = new C.LinkedHashMapKeyIterator(t8, t8._modifications, t8._first, C._instanceType(t8)._eval$1("LinkedHashMapKeyIterator<1>")); t9.moveNext$0();) {
          t10 = t9.__js_helper$_current;
          t7 += t10 + "\n";
          if (!t8.containsKey$1(0, t10))
            t8.$indexSet(0, t10, new A.IfdDirectory(C.LinkedHashMap_LinkedHashMap$_empty(t3, t4), new A.IfdContainer(C.LinkedHashMap_LinkedHashMap$_empty(t5, t6))));
          subDirectory = t8.$index(0, t10);
          for (t10 = subDirectory.data, t10 = new C.LinkedHashMapKeyIterator(t10, t10._modifications, t10._first, C._instanceType(t10)._eval$1("LinkedHashMapKeyIterator<1>")); t10.moveNext$0();) {
            t11 = t10.__js_helper$_current;
            value = subDirectory.$index(0, t11);
            t7 = value == null ? t7 + ("\t" + _this.getTagName$1(t11) + "\n") : t7 + ("\t" + _this.getTagName$1(t11) + ": " + value.toString$0(0) + "\n");
          }
        }
      }
      return t7.charCodeAt(0) == 0 ? t7 : t7;
    },
    write$1(_, out) {
      var t1, t2, t3, offsets, t4, t5, t6, t7, t8, dataOffset, t9, t10, t11, t12, dataSize, subSize, t13, numIfd, i, $name, ifd, _this = this, _s4_ = "exif",
        _s7_ = "interop",
        saveEndian = out.bigEndian;
      out.bigEndian = true;
      out.writeUint16$1(19789);
      out.writeUint16$1(42);
      out.writeUint32$1(8);
      t1 = _this.directories;
      if (t1.$index(0, "ifd0") == null)
        t1.$indexSet(0, "ifd0", new A.IfdDirectory(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.IfdValue), new A.IfdContainer(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.IfdDirectory))));
      t2 = type$.String;
      t3 = type$.int;
      offsets = C.LinkedHashMap_LinkedHashMap$_empty(t2, t3);
      for (t4 = C._instanceType(t1), t5 = t4._eval$1("LinkedHashMapKeysIterable<1>"), t6 = new C.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first, t4._eval$1("LinkedHashMapKeyIterator<1>")), t7 = type$.IfdValue, t8 = type$.IfdDirectory, dataOffset = 8; t6.moveNext$0();) {
        t9 = t6.__js_helper$_current;
        t10 = t1.$index(0, t9);
        t10.toString;
        offsets.$indexSet(0, t9, dataOffset);
        t9 = t10.sub.directories;
        if (t9.containsKey$1(0, _s4_)) {
          t11 = new Uint32Array(1);
          t11[0] = 0;
          t10.$indexSet(0, 34665, new A.IfdValueLong(t11));
        } else
          t10.data.remove$1(0, 34665);
        if (t9.containsKey$1(0, _s7_)) {
          t11 = new Uint32Array(1);
          t11[0] = 0;
          t10.$indexSet(0, 40965, new A.IfdValueLong(t11));
        } else
          t10.data.remove$1(0, 40965);
        if (t9.containsKey$1(0, "gps")) {
          t11 = new Uint32Array(1);
          t11[0] = 0;
          t10.$indexSet(0, 34853, new A.IfdValueLong(t11));
        } else
          t10.data.remove$1(0, 34853);
        t10 = t10.data;
        dataOffset += 2 + 12 * t10.__js_helper$_length + 4;
        for (t10 = new C.LinkedHashMapValueIterator(t10, t10._modifications, t10._first, C._instanceType(t10)._eval$1("LinkedHashMapValueIterator<2>")); t10.moveNext$0();) {
          t11 = t10.__js_helper$_current;
          t12 = t11.get$type(t11).index;
          if (!(t12 < 13))
            return C.ioore(B.List_w4E, t12);
          dataSize = B.List_w4E[t12] * t11.get$length(t11);
          if (dataSize > 4)
            dataOffset += dataSize;
        }
        for (t10 = new C.LinkedHashMapKeyIterator(t9, t9._modifications, t9._first, C._instanceType(t9)._eval$1("LinkedHashMapKeyIterator<1>")); t10.moveNext$0();) {
          t11 = t10.__js_helper$_current;
          if (!t9.containsKey$1(0, t11))
            t9.$indexSet(0, t11, new A.IfdDirectory(C.LinkedHashMap_LinkedHashMap$_empty(t3, t7), new A.IfdContainer(C.LinkedHashMap_LinkedHashMap$_empty(t2, t8))));
          t12 = t9.$index(0, t11);
          t12.toString;
          offsets.$indexSet(0, t11, dataOffset);
          t12 = t12.data;
          subSize = 2 + 12 * t12.__js_helper$_length;
          for (t11 = new C.LinkedHashMapValueIterator(t12, t12._modifications, t12._first, C._instanceType(t12)._eval$1("LinkedHashMapValueIterator<2>")); t11.moveNext$0();) {
            t12 = t11.__js_helper$_current;
            t13 = t12.get$type(t12).index;
            if (!(t13 < 13))
              return C.ioore(B.List_w4E, t13);
            dataSize = B.List_w4E[t13] * t12.get$length(t12);
            if (dataSize > 4)
              subSize += dataSize;
          }
          dataOffset += subSize;
        }
      }
      numIfd = t1.__js_helper$_length;
      for (t6 = numIfd - 1, t4 = t4._eval$1("LinkedHashMapValuesIterable<2>"), i = 0; i < numIfd; ++i) {
        $name = new C.LinkedHashMapKeysIterable(t1, t5).elementAt$1(0, i);
        ifd = new C.LinkedHashMapValuesIterable(t1, t4).elementAt$1(0, i);
        t9 = ifd.sub.directories;
        if (t9.containsKey$1(0, _s4_)) {
          t10 = ifd.$index(0, 34665);
          t10.toString;
          t11 = offsets.$index(0, _s4_);
          t11.toString;
          t10.setInt$1(t11);
        }
        if (t9.containsKey$1(0, _s7_)) {
          t10 = ifd.$index(0, 40965);
          t10.toString;
          t11 = offsets.$index(0, _s7_);
          t11.toString;
          t10.setInt$1(t11);
        }
        if (t9.containsKey$1(0, "gps")) {
          t10 = ifd.$index(0, 34853);
          t10.toString;
          t11 = offsets.$index(0, "gps");
          t11.toString;
          t10.setInt$1(t11);
        }
        t10 = offsets.$index(0, $name);
        t10.toString;
        _this._writeDirectory$3(out, ifd, t10 + 2 + 12 * ifd.data.__js_helper$_length + 4);
        if (i === t6)
          out.writeUint32$1(0);
        else {
          t10 = offsets.$index(0, new C.LinkedHashMapKeysIterable(t1, t5).elementAt$1(0, i + 1));
          t10.toString;
          out.writeUint32$1(t10);
        }
        _this._writeDirectoryLargeValues$2(out, ifd);
        for (t10 = new C.LinkedHashMapKeyIterator(t9, t9._modifications, t9._first, C._instanceType(t9)._eval$1("LinkedHashMapKeyIterator<1>")); t10.moveNext$0();) {
          t11 = t10.__js_helper$_current;
          if (!t9.containsKey$1(0, t11))
            t9.$indexSet(0, t11, new A.IfdDirectory(C.LinkedHashMap_LinkedHashMap$_empty(t3, t7), new A.IfdContainer(C.LinkedHashMap_LinkedHashMap$_empty(t2, t8))));
          t12 = t9.$index(0, t11);
          t12.toString;
          t11 = offsets.$index(0, t11);
          t11.toString;
          _this._writeDirectory$3(out, t12, t11 + 2 + 12 * t12.data.__js_helper$_length);
          _this._writeDirectoryLargeValues$2(out, t12);
        }
      }
      out.bigEndian = saveEndian;
    },
    _writeDirectory$3(out, ifd, dataOffset) {
      var t2, t3, t4, tagType, tagLength, size,
        t1 = ifd.data;
      out.writeUint16$1(t1.__js_helper$_length);
      for (t1 = new C.LinkedHashMapKeyIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapKeyIterator<1>")); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        t3 = ifd.$index(0, t2);
        t3.toString;
        t4 = t2 === 273;
        tagType = t4 && t3.get$type(t3) === B.IfdValueType_7 ? B.IfdValueType_4 : t3.get$type(t3);
        tagLength = t4 && t3.get$type(t3) === B.IfdValueType_7 ? 1 : t3.get$length(t3);
        out.writeUint16$1(t2);
        out.writeUint16$1(tagType.index);
        out.writeUint32$1(tagLength);
        t2 = t3.get$type(t3).index;
        if (!(t2 < 13))
          return C.ioore(B.List_w4E, t2);
        size = B.List_w4E[t2] * t3.get$length(t3);
        if (size <= 4) {
          t3.write$1(0, out);
          for (; size < 4;) {
            out.writeByte$1(0);
            ++size;
          }
        } else {
          out.writeUint32$1(dataOffset);
          dataOffset += size;
        }
      }
      return dataOffset;
    },
    _writeDirectoryLargeValues$2(out, ifd) {
      var t1, t2, t3;
      for (t1 = ifd.data, t1 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        t3 = t2.get$type(t2).index;
        if (!(t3 < 13))
          return C.ioore(B.List_w4E, t3);
        if (B.List_w4E[t3] * t2.get$length(t2) > 4)
          t2.write$1(0, out);
      }
    }
  };
  A.ExifTag.prototype = {};
  A.IfdContainer.prototype = {
    get$isEmpty(_) {
      var t2,
        t1 = this.directories;
      if (t1.__js_helper$_length === 0)
        return true;
      for (t1 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        if (!(t2.data.__js_helper$_length === 0 && t2.sub.get$isEmpty(0)))
          return false;
      }
      return true;
    },
    containsKey$1(_, key) {
      return this.directories.containsKey$1(0, key);
    },
    clear$0(_) {
      this.directories.clear$0(0);
    },
    $index(_, ifdName) {
      var t1;
      C._asString(ifdName);
      t1 = this.directories;
      if (!t1.containsKey$1(0, ifdName))
        t1.$indexSet(0, ifdName, new A.IfdDirectory(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.IfdValue), new A.IfdContainer(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.IfdDirectory))));
      t1 = t1.$index(0, ifdName);
      t1.toString;
      return t1;
    },
    $indexSet(_, ifdName, value) {
      this.directories.$indexSet(0, ifdName, type$.IfdDirectory._as(value));
    }
  };
  A.IfdDirectory.prototype = {
    get$isEmpty(_) {
      return this.data.__js_helper$_length === 0 && this.sub.get$isEmpty(0);
    },
    containsKey$1(_, tag) {
      return this.data.containsKey$1(0, C._asInt(tag));
    },
    $index(_, tag) {
      if (typeof tag == "string")
        tag = B.Map_1DOpr.$index(0, tag);
      if (C._isInt(tag))
        return this.data.$index(0, tag);
      return null;
    },
    $indexSet(_, tag, value) {
      var tagInfo;
      if (typeof tag == "string")
        tag = B.Map_1DOpr.$index(0, tag);
      if (!C._isInt(tag))
        return;
      if (value instanceof A.IfdValue)
        this.data.$indexSet(0, tag, value);
      else {
        tagInfo = $.$get$exifImageTags().$index(0, tag);
        if (tagInfo != null)
          switch (tagInfo.type.index) {
            case 1:
              break;
            case 2:
              break;
            case 3:
              break;
            case 4:
              break;
            case 5:
              break;
            case 6:
              break;
            case 7:
              break;
            case 8:
              break;
            case 9:
              break;
            case 10:
              break;
            case 11:
              break;
            case 12:
              break;
            case 0:
              break;
          }
      }
    }
  };
  A.IfdValueType.prototype = {
    _enumToString$0() {
      return "IfdValueType." + this._name;
    }
  };
  A.IfdValue.prototype = {
    toDouble$0(_) {
      return 0;
    },
    toString$0(_) {
      return "";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.IfdValue && _this.get$type(_this) === other.get$type(other) && _this.get$length(_this) === other.get$length(other) && _this.get$hashCode(_this) === other.get$hashCode(other);
    },
    get$hashCode(_) {
      return 0;
    },
    setInt$1(v) {
    }
  };
  A.IfdValueLong.prototype = {
    get$type(_) {
      return B.IfdValueType_4;
    },
    get$length(_) {
      return this.value.length;
    },
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (other instanceof A.IfdValueLong) {
        t1 = this.value;
        t2 = other.value;
        t1 = t1.length === t2.length && C.Object_hashAll(t1) === C.Object_hashAll(t2);
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hashAll(this.value);
    },
    setInt$1(v) {
      var t1 = this.value;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      t1[0] = v;
    },
    write$1(_, out) {
      var i,
        t1 = this.value,
        l = t1.length;
      for (i = 0; i < l; ++i)
        out.writeUint32$1(t1[i]);
    },
    toString$0(_) {
      var t1 = this.value,
        t2 = t1.length;
      if (t2 === 1) {
        if (0 >= t2)
          return C.ioore(t1, 0);
        t1 = "" + t1[0];
      } else
        t1 = C.S(t1);
      return t1;
    }
  };
  A.Encoder.prototype = {};
  A.JpegChroma.prototype = {
    _enumToString$0() {
      return "JpegChroma." + this._name;
    }
  };
  A.JpegEncoder.prototype = {
    setQuality$1(quality) {
      quality = D.JSNumber_methods.toInt$0(D.JSInt_methods.clamp$2(quality, 1, 100));
      if (this._currentQuality === quality)
        return;
      this._initQuantTables$1(quality < 50 ? D.JSNumber_methods.floor$0(5000 / quality) : D.JSInt_methods.floor$0(200 - quality * 2));
      this._currentQuality = quality;
    },
    encode$2$chroma(image, chroma) {
      var t1, t2, width, height, ydu, udu, vdu, dcy, dcu, dcv, y, x, t3, t4, i, sudu, svdu, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, _this = this,
        _s11_ = "_yacHuffman",
        _s12_ = "_uvacHuffman",
        fp = A.OutputBuffer$(true);
      _this._writeMarker$2(fp, 216);
      _this._writeMarker$2(fp, 224);
      fp.writeUint16$1(16);
      fp.writeByte$1(74);
      fp.writeByte$1(70);
      fp.writeByte$1(73);
      fp.writeByte$1(70);
      fp.writeByte$1(0);
      fp.writeByte$1(1);
      fp.writeByte$1(1);
      fp.writeByte$1(0);
      fp.writeUint16$1(1);
      fp.writeUint16$1(1);
      fp.writeByte$1(0);
      fp.writeByte$1(0);
      t1 = image._exif;
      _this._writeAPP1$2(fp, t1 == null ? image._exif = new A.ExifData(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.IfdDirectory)) : t1);
      _this._writeDQT$1(fp);
      t1 = image.get$width(0);
      t2 = image.get$height(0);
      _this._writeMarker$2(fp, 192);
      fp.writeUint16$1(17);
      fp.writeByte$1(8);
      fp.writeUint16$1(t2);
      fp.writeUint16$1(t1);
      fp.writeByte$1(3);
      fp.writeByte$1(1);
      t1 = chroma === B.JpegChroma_0;
      fp.writeByte$1(t1 ? 17 : 34);
      fp.writeByte$1(0);
      fp.writeByte$1(2);
      fp.writeByte$1(17);
      fp.writeByte$1(1);
      fp.writeByte$1(3);
      fp.writeByte$1(17);
      fp.writeByte$1(1);
      _this._writeDHT$1(fp);
      _this._writeMarker$2(fp, 218);
      fp.writeUint16$1(12);
      fp.writeByte$1(3);
      fp.writeByte$1(1);
      fp.writeByte$1(0);
      fp.writeByte$1(2);
      fp.writeByte$1(17);
      fp.writeByte$1(3);
      fp.writeByte$1(17);
      fp.writeByte$1(0);
      fp.writeByte$1(63);
      fp.writeByte$1(0);
      _this._byteNew = 0;
      _this._bytePos = 7;
      width = image.get$width(0);
      height = image.get$height(0);
      if (t1) {
        ydu = new Float32Array(64);
        udu = new Float32Array(64);
        vdu = new Float32Array(64);
        for (t1 = _this._fdtblY, t2 = _this._fdtblUv, dcy = 0, dcu = 0, dcv = 0, y = 0; y < height; y += 8)
          for (x = 0; x < width; x += 8) {
            _this._calculateYUV$8(image, x, y, width, height, ydu, udu, vdu);
            t3 = _this._ydcHuffman;
            t4 = _this.__JpegEncoder__yacHuffman_A;
            t4 === $ && C.throwLateFieldNI(_s11_);
            dcy = _this._processDU$6(fp, ydu, t1, dcy, t3, t4);
            t4 = _this._uvdcHuffman;
            t3 = _this.__JpegEncoder__uvacHuffman_A;
            t3 === $ && C.throwLateFieldNI(_s12_);
            dcu = _this._processDU$6(fp, udu, t2, dcu, t4, t3);
            dcv = _this._processDU$6(fp, vdu, t2, dcv, _this._uvdcHuffman, _this.__JpegEncoder__uvacHuffman_A);
          }
      } else {
        t1 = type$.Float32List;
        ydu = J.JSArray_JSArray$allocateGrowable(4, t1);
        for (i = 0; i < 4; ++i)
          ydu[i] = new Float32Array(64);
        udu = J.JSArray_JSArray$allocateGrowable(4, t1);
        for (i = 0; i < 4; ++i)
          udu[i] = new Float32Array(64);
        vdu = J.JSArray_JSArray$allocateGrowable(4, t1);
        for (i = 0; i < 4; ++i)
          vdu[i] = new Float32Array(64);
        sudu = new Float32Array(64);
        svdu = new Float32Array(64);
        for (t1 = _this._fdtblY, t2 = _this._fdtblUv, dcy = 0, dcu = 0, dcv = 0, y = 0; y < height; y += 16)
          for (t3 = y + 8, x = 0; x < width; x += 16) {
            t4 = ydu[0];
            t5 = udu[0];
            t6 = vdu[0];
            _this._calculateYUV$8(image, x, y, width, height, t4, t5, t6);
            t7 = x + 8;
            t8 = ydu[1];
            t9 = udu[1];
            t10 = vdu[1];
            _this._calculateYUV$8(image, t7, y, width, height, t8, t9, t10);
            t11 = ydu[2];
            t12 = udu[2];
            t13 = vdu[2];
            _this._calculateYUV$8(image, x, t3, width, height, t11, t12, t13);
            t14 = ydu[3];
            t15 = udu[3];
            t16 = vdu[3];
            _this._calculateYUV$8(image, t7, t3, width, height, t14, t15, t16);
            _this._downsampleDU$5(sudu, t5, t9, t12, t15);
            _this._downsampleDU$5(svdu, t6, t10, t13, t16);
            t16 = _this._ydcHuffman;
            t13 = _this.__JpegEncoder__yacHuffman_A;
            t13 === $ && C.throwLateFieldNI(_s11_);
            dcy = _this._processDU$6(fp, t14, t1, _this._processDU$6(fp, t11, t1, _this._processDU$6(fp, t8, t1, _this._processDU$6(fp, t4, t1, dcy, t16, t13), _this._ydcHuffman, _this.__JpegEncoder__yacHuffman_A), _this._ydcHuffman, _this.__JpegEncoder__yacHuffman_A), _this._ydcHuffman, _this.__JpegEncoder__yacHuffman_A);
            t13 = _this._uvdcHuffman;
            t16 = _this.__JpegEncoder__uvacHuffman_A;
            t16 === $ && C.throwLateFieldNI(_s12_);
            dcu = _this._processDU$6(fp, sudu, t2, dcu, t13, t16);
            dcv = _this._processDU$6(fp, svdu, t2, dcv, _this._uvdcHuffman, _this.__JpegEncoder__uvacHuffman_A);
          }
      }
      t1 = _this._bytePos;
      if (t1 >= 0) {
        ++t1;
        _this._writeBits$2(fp, C._setArrayType([D.JSInt_methods.$shl(1, t1) - 1, t1], type$.JSArray_int));
      }
      _this._writeMarker$2(fp, 217);
      return J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(fp._output_buffer$_buffer), 0, fp.length);
    },
    _calculateYUV$8(image, x, y, width, height, ydu, udu, vdu) {
      var t1, t2, pos, row, yy, xx, t3, p, a, invA, r, g, b, t4, t5;
      for (t1 = this._rgbYuvTable, t2 = y + 1, pos = 0; pos < 64; ++pos) {
        row = pos >>> 3;
        yy = y + row;
        xx = x + (pos & 7);
        if (yy >= height)
          yy -= t2 + row - height;
        if (xx >= width)
          xx -= xx - width + 1;
        t3 = image.data;
        p = t3 == null ? null : t3.getPixel$3(xx, yy, null);
        if (p == null)
          p = new A.PixelUndefined();
        if (p.get$format() !== B.Format_3)
          p = p.convert$1$format(B.Format_3);
        if (p.get$length(p) > 3) {
          a = p.get$aNormalized();
          invA = 1 - a;
          p.set$r(0, D.JSNumber_methods.round$0(p.get$r(p) * a + B.ConstColorRgb8_4294967295.$index(0, 0) * invA));
          p.set$g(D.JSNumber_methods.round$0(p.get$g() * a + B.ConstColorRgb8_4294967295.$index(0, 0) * invA));
          p.set$b(0, D.JSNumber_methods.round$0(p.get$b(p) * a + B.ConstColorRgb8_4294967295.$index(0, 0) * invA));
        }
        r = D.JSNumber_methods.toInt$0(p.get$r(p));
        g = D.JSNumber_methods.toInt$0(p.get$g());
        b = D.JSNumber_methods.toInt$0(p.get$b(p));
        if (!(r >= 0 && r < 2048))
          return C.ioore(t1, r);
        t3 = t1[r];
        t4 = g + 256;
        if (!(t4 >= 0 && t4 < 2048))
          return C.ioore(t1, t4);
        t4 = t1[t4];
        t5 = b + 512;
        if (!(t5 >= 0 && t5 < 2048))
          return C.ioore(t1, t5);
        t5 = D.JSInt_methods._shrOtherPositive$1(t3 + t4 + t1[t5], 16);
        ydu.$flags & 2 && C.throwUnsupportedOperation(ydu);
        if (!(pos < 64))
          return C.ioore(ydu, pos);
        ydu[pos] = t5 - 128;
        t5 = r + 768;
        if (!(t5 < 2048))
          return C.ioore(t1, t5);
        t5 = t1[t5];
        t4 = g + 1024;
        if (!(t4 >= 0 && t4 < 2048))
          return C.ioore(t1, t4);
        t4 = t1[t4];
        t3 = b + 1280;
        if (!(t3 >= 0 && t3 < 2048))
          return C.ioore(t1, t3);
        t3 = D.JSInt_methods._shrOtherPositive$1(t5 + t4 + t1[t3], 16);
        udu.$flags & 2 && C.throwUnsupportedOperation(udu);
        if (!(pos < 64))
          return C.ioore(udu, pos);
        udu[pos] = t3 - 128;
        t3 = r + 1280;
        if (!(t3 < 2048))
          return C.ioore(t1, t3);
        t3 = t1[t3];
        t4 = g + 1536;
        if (!(t4 >= 0 && t4 < 2048))
          return C.ioore(t1, t4);
        t4 = t1[t4];
        t5 = b + 1792;
        if (!(t5 >= 0 && t5 < 2048))
          return C.ioore(t1, t5);
        t5 = D.JSInt_methods._shrOtherPositive$1(t3 + t4 + t1[t5], 16);
        vdu.$flags & 2 && C.throwUnsupportedOperation(vdu);
        if (!(pos < 64))
          return C.ioore(vdu, pos);
        vdu[pos] = t5 - 128;
      }
    },
    _downsampleDU$5(duOut, duIn1, duIn2, duIn3, duIn4) {
      var t1, posOut, du, pos, t2, t3, t4, t5;
      for (t1 = duOut.$flags | 0, posOut = 0; posOut < 64; ++posOut) {
        if (posOut < 32)
          du = D.JSInt_methods.$mod(posOut, 8) < 4 ? duIn1 : duIn2;
        else
          du = D.JSInt_methods.$mod(posOut, 8) < 4 ? duIn3 : duIn4;
        pos = (D.JSInt_methods._tdivFast$1(D.JSInt_methods.$mod(posOut, 32), 8) << 4 >>> 0) + (D.JSInt_methods.$mod(posOut, 4) << 1 >>> 0);
        if (!(pos < 64))
          return C.ioore(du, pos);
        t2 = du[pos];
        t3 = pos + 1;
        if (!(t3 < 64))
          return C.ioore(du, t3);
        t3 = du[t3];
        t4 = pos + 8;
        if (!(t4 < 64))
          return C.ioore(du, t4);
        t4 = du[t4];
        t5 = pos + 9;
        if (!(t5 < 64))
          return C.ioore(du, t5);
        t5 = du[t5];
        t1 & 2 && C.throwUnsupportedOperation(duOut);
        if (!(posOut < 64))
          return C.ioore(duOut, posOut);
        duOut[posOut] = (t2 + t3 + t4 + t5) / 4;
      }
    },
    _writeMarker$2(fp, marker) {
      fp.writeByte$1(255);
      fp.writeByte$1(marker & 255);
    },
    _initQuantTables$1(sf) {
      var t1, t2, i, t, t3, j, u, t4, t5, t6, k, row, col, t7, t8, t9, t10, _this = this;
      for (t1 = _this._yTable, t2 = t1.$flags | 0, i = 0; i < 64; ++i) {
        t = D.JSNumber_methods.floor$0((B.List_aYr[i] * sf + 50) / 100);
        if (t < 1)
          t = 1;
        else if (t > 255)
          t = 255;
        t3 = B.List_EVh[i];
        t2 & 2 && C.throwUnsupportedOperation(t1);
        if (!(t3 < 64))
          return C.ioore(t1, t3);
        t1[t3] = t;
      }
      for (t2 = _this._uvTable, t3 = t2.$flags | 0, j = 0; j < 64; ++j) {
        u = D.JSNumber_methods.floor$0((B.List_6sz[j] * sf + 50) / 100);
        if (u < 1)
          u = 1;
        else if (u > 255)
          u = 255;
        t4 = B.List_EVh[j];
        t3 & 2 && C.throwUnsupportedOperation(t2);
        if (!(t4 < 64))
          return C.ioore(t2, t4);
        t2[t4] = u;
      }
      for (t3 = _this._fdtblY, t4 = t3.$flags | 0, t5 = _this._fdtblUv, t6 = t5.$flags | 0, k = 0, row = 0; row < 8; ++row)
        for (col = 0; col < 8; ++col) {
          if (!(k >= 0 && k < 64))
            return C.ioore(B.List_EVh, k);
          t7 = B.List_EVh[k];
          if (!(t7 < 64))
            return C.ioore(t1, t7);
          t8 = t1[t7];
          t9 = B.List_A98[row];
          t10 = B.List_A98[col];
          t4 & 2 && C.throwUnsupportedOperation(t3);
          t3[k] = 1 / (t8 * t9 * t10 * 8);
          t7 = t2[t7];
          t6 & 2 && C.throwUnsupportedOperation(t5);
          t5[k] = 1 / (t7 * t9 * t10 * 8);
          ++k;
        }
    },
    _computeHuffmanTable$2(nrCodes, stdTable) {
      var ht, t2, codeValue, posInTable, k, j, index,
        t1 = type$.List_int;
      t1._as(nrCodes);
      t1._as(stdTable);
      t1 = type$.JSArray_int;
      ht = C._setArrayType([C._setArrayType([], t1)], type$.JSArray_nullable_List_int);
      for (t2 = stdTable.length, codeValue = 0, posInTable = 0, k = 1; k <= 16; ++k) {
        for (j = 1; j <= nrCodes[k]; ++j) {
          if (!(posInTable >= 0 && posInTable < t2))
            return C.ioore(stdTable, posInTable);
          index = stdTable[posInTable];
          if (ht.length <= index)
            D.JSArray_methods.set$length(ht, index + 1);
          D.JSArray_methods.$indexSet(ht, index, C._setArrayType([codeValue, k], t1));
          ++posInTable;
          ++codeValue;
        }
        codeValue *= 2;
      }
      return ht;
    },
    _initCategoryNumber$0() {
      var t1, t2, t3, nrLower, nrUpper, cat, nr, t4, nrNeg, t5, t6;
      for (t1 = this._category, t2 = this._bitCode, t3 = type$.JSArray_int, nrLower = 1, nrUpper = 2, cat = 1; cat <= 15; ++cat) {
        for (nr = nrLower; nr < nrUpper; ++nr) {
          t4 = 32767 + nr;
          D.JSArray_methods.$indexSet(t1, t4, cat);
          D.JSArray_methods.$indexSet(t2, t4, C._setArrayType([nr, cat], t3));
        }
        for (t4 = nrUpper - 1, nrNeg = -t4, t5 = -nrLower; nrNeg <= t5; ++nrNeg) {
          t6 = 32767 + nrNeg;
          D.JSArray_methods.$indexSet(t1, t6, cat);
          D.JSArray_methods.$indexSet(t2, t6, C._setArrayType([t4 + nrNeg, cat], t3));
        }
        nrLower = nrLower << 1 >>> 0;
        nrUpper = nrUpper << 1 >>> 0;
      }
    },
    _initRgbYuvTable$0() {
      var t1, t2, i;
      for (t1 = this._rgbYuvTable, t2 = t1.$flags | 0, i = 0; i < 256; ++i) {
        t2 & 2 && C.throwUnsupportedOperation(t1);
        t1[i] = 19595 * i;
        t1[i + 256] = 38470 * i;
        t1[i + 512] = 7471 * i + 32768;
        t1[i + 768] = -11059 * i;
        t1[i + 1024] = -21709 * i;
        t1[i + 1280] = 32768 * i + 8421375;
        t1[i + 1536] = -27439 * i;
        t1[i + 1792] = -5329 * i;
      }
    },
    _fDCTQuant$2(data, fdtbl) {
      var dataOff, i, d0, t2, d1, t3, d2, t4, d3, t5, d4, t6, d5, t7, d6, t8, d7, tmp0, tmp7, tmp1, tmp6, tmp2, tmp5, tmp3, tmp10, tmp13, tmp11, z1, tmp12, z5, z2, z4, z3, z11, z13, tmp0p2, tmp7p2, tmp1p2, tmp6p2, tmp2p2, tmp5p2, tmp3p2, tmp10p2, tmp13p2, tmp11p2, z1p2, tmp12p2, z5p2, z2p2, z4p2, z3p2, z11p2, z13p2, fDCTQuant,
        t1 = type$.List_double;
      t1._as(data);
      t1._as(fdtbl);
      for (t1 = data.$flags | 0, dataOff = 0, i = 0; i < 8; ++i) {
        if (!(dataOff < 64))
          return C.ioore(data, dataOff);
        d0 = data[dataOff];
        t2 = dataOff + 1;
        if (!(t2 < 64))
          return C.ioore(data, t2);
        d1 = data[t2];
        t3 = dataOff + 2;
        if (!(t3 < 64))
          return C.ioore(data, t3);
        d2 = data[t3];
        t4 = dataOff + 3;
        if (!(t4 < 64))
          return C.ioore(data, t4);
        d3 = data[t4];
        t5 = dataOff + 4;
        if (!(t5 < 64))
          return C.ioore(data, t5);
        d4 = data[t5];
        t6 = dataOff + 5;
        if (!(t6 < 64))
          return C.ioore(data, t6);
        d5 = data[t6];
        t7 = dataOff + 6;
        if (!(t7 < 64))
          return C.ioore(data, t7);
        d6 = data[t7];
        t8 = dataOff + 7;
        if (!(t8 < 64))
          return C.ioore(data, t8);
        d7 = data[t8];
        tmp0 = d0 + d7;
        tmp7 = d0 - d7;
        tmp1 = d1 + d6;
        tmp6 = d1 - d6;
        tmp2 = d2 + d5;
        tmp5 = d2 - d5;
        tmp3 = d3 + d4;
        tmp10 = tmp0 + tmp3;
        tmp13 = tmp0 - tmp3;
        tmp11 = tmp1 + tmp2;
        t1 & 2 && C.throwUnsupportedOperation(data);
        if (!(dataOff < 64))
          return C.ioore(data, dataOff);
        data[dataOff] = tmp10 + tmp11;
        if (!(t5 < 64))
          return C.ioore(data, t5);
        data[t5] = tmp10 - tmp11;
        z1 = (tmp1 - tmp2 + tmp13) * 0.707106781;
        if (!(t3 < 64))
          return C.ioore(data, t3);
        data[t3] = tmp13 + z1;
        if (!(t7 < 64))
          return C.ioore(data, t7);
        data[t7] = tmp13 - z1;
        tmp10 = d3 - d4 + tmp5;
        tmp12 = tmp6 + tmp7;
        z5 = (tmp10 - tmp12) * 0.382683433;
        z2 = 0.5411961 * tmp10 + z5;
        z4 = 1.306562965 * tmp12 + z5;
        z3 = (tmp5 + tmp6) * 0.707106781;
        z11 = tmp7 + z3;
        z13 = tmp7 - z3;
        if (!(t6 < 64))
          return C.ioore(data, t6);
        data[t6] = z13 + z2;
        if (!(t4 < 64))
          return C.ioore(data, t4);
        data[t4] = z13 - z2;
        if (!(t2 < 64))
          return C.ioore(data, t2);
        data[t2] = z11 + z4;
        if (!(t8 < 64))
          return C.ioore(data, t8);
        data[t8] = z11 - z4;
        dataOff += 8;
      }
      for (dataOff = 0, i = 0; i < 8; ++i) {
        if (!(dataOff < 64))
          return C.ioore(data, dataOff);
        d0 = data[dataOff];
        t2 = dataOff + 8;
        if (!(t2 < 64))
          return C.ioore(data, t2);
        d1 = data[t2];
        t3 = dataOff + 16;
        if (!(t3 < 64))
          return C.ioore(data, t3);
        d2 = data[t3];
        t4 = dataOff + 24;
        if (!(t4 < 64))
          return C.ioore(data, t4);
        d3 = data[t4];
        t5 = dataOff + 32;
        if (!(t5 < 64))
          return C.ioore(data, t5);
        d4 = data[t5];
        t6 = dataOff + 40;
        if (!(t6 < 64))
          return C.ioore(data, t6);
        d5 = data[t6];
        t7 = dataOff + 48;
        if (!(t7 < 64))
          return C.ioore(data, t7);
        d6 = data[t7];
        t8 = dataOff + 56;
        if (!(t8 < 64))
          return C.ioore(data, t8);
        d7 = data[t8];
        tmp0p2 = d0 + d7;
        tmp7p2 = d0 - d7;
        tmp1p2 = d1 + d6;
        tmp6p2 = d1 - d6;
        tmp2p2 = d2 + d5;
        tmp5p2 = d2 - d5;
        tmp3p2 = d3 + d4;
        tmp10p2 = tmp0p2 + tmp3p2;
        tmp13p2 = tmp0p2 - tmp3p2;
        tmp11p2 = tmp1p2 + tmp2p2;
        t1 & 2 && C.throwUnsupportedOperation(data);
        if (!(dataOff < 64))
          return C.ioore(data, dataOff);
        data[dataOff] = tmp10p2 + tmp11p2;
        if (!(t5 < 64))
          return C.ioore(data, t5);
        data[t5] = tmp10p2 - tmp11p2;
        z1p2 = (tmp1p2 - tmp2p2 + tmp13p2) * 0.707106781;
        if (!(t3 < 64))
          return C.ioore(data, t3);
        data[t3] = tmp13p2 + z1p2;
        if (!(t7 < 64))
          return C.ioore(data, t7);
        data[t7] = tmp13p2 - z1p2;
        tmp10p2 = d3 - d4 + tmp5p2;
        tmp12p2 = tmp6p2 + tmp7p2;
        z5p2 = (tmp10p2 - tmp12p2) * 0.382683433;
        z2p2 = 0.5411961 * tmp10p2 + z5p2;
        z4p2 = 1.306562965 * tmp12p2 + z5p2;
        z3p2 = (tmp5p2 + tmp6p2) * 0.707106781;
        z11p2 = tmp7p2 + z3p2;
        z13p2 = tmp7p2 - z3p2;
        if (!(t6 < 64))
          return C.ioore(data, t6);
        data[t6] = z13p2 + z2p2;
        if (!(t4 < 64))
          return C.ioore(data, t4);
        data[t4] = z13p2 - z2p2;
        if (!(t2 < 64))
          return C.ioore(data, t2);
        data[t2] = z11p2 + z4p2;
        if (!(t8 < 64))
          return C.ioore(data, t8);
        data[t8] = z11p2 - z4p2;
        ++dataOff;
      }
      for (t1 = this._outputfDCTQuant, i = 0; i < 64; ++i) {
        fDCTQuant = data[i] * fdtbl[i];
        D.JSArray_methods.$indexSet(t1, i, fDCTQuant > 0 ? D.JSNumber_methods.toInt$0(fDCTQuant + 0.5) : D.JSNumber_methods.toInt$0(fDCTQuant - 0.5));
      }
      return t1;
    },
    _writeAPP1$2(out, exif) {
      var exifData, exifBytes;
      if (exif.get$isEmpty(0))
        return;
      exifData = A.OutputBuffer$(false);
      exif.write$1(0, exifData);
      exifBytes = J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(exifData._output_buffer$_buffer), 0, exifData.length);
      this._writeMarker$2(out, 225);
      out.writeUint16$1(exifBytes.length + 8);
      out.writeUint32$1(1165519206);
      out.writeUint16$1(0);
      out.writeBytes$1(exifBytes);
    },
    _writeDQT$1(out) {
      var t1, i, j;
      this._writeMarker$2(out, 219);
      out.writeUint16$1(132);
      out.writeByte$1(0);
      for (t1 = this._yTable, i = 0; i < 64; ++i)
        out.writeByte$1(t1[i]);
      out.writeByte$1(1);
      for (t1 = this._uvTable, j = 0; j < 64; ++j)
        out.writeByte$1(t1[j]);
    },
    _writeDHT$1(out) {
      var i, j, k, l, m, n, o, p;
      this._writeMarker$2(out, 196);
      out.writeUint16$1(418);
      out.writeByte$1(0);
      for (i = 0; i < 16;) {
        ++i;
        out.writeByte$1(B.List_zcj[i]);
      }
      for (j = 0; j <= 11; ++j)
        out.writeByte$1(B.List_74c[j]);
      out.writeByte$1(16);
      for (k = 0; k < 16;) {
        ++k;
        out.writeByte$1(B.List_2BR[k]);
      }
      for (l = 0; l <= 161; ++l)
        out.writeByte$1(B.List_CZS[l]);
      out.writeByte$1(1);
      for (m = 0; m < 16;) {
        ++m;
        out.writeByte$1(B.List_NZS[m]);
      }
      for (n = 0; n <= 11; ++n)
        out.writeByte$1(B.List_74c[n]);
      out.writeByte$1(17);
      for (o = 0; o < 16;) {
        ++o;
        out.writeByte$1(B.List_GUW[o]);
      }
      for (p = 0; p <= 161; ++p)
        out.writeByte$1(B.List_X1N[p]);
    },
    _processDU$6(out, cdu, fdtbl, dc, htdc, htac) {
      var eob, m16Zeroes, duDct, j, t2, diff, t3, pos, end0pos, t4, i, i0, nrzeroes, lng, nrmarker, t5, _this = this,
        t1 = type$.List_double;
      t1._as(cdu);
      t1._as(fdtbl);
      type$.nullable_List_nullable_List_int._as(htdc);
      type$.List_nullable_List_int._as(htac);
      t1 = htac.length;
      if (0 >= t1)
        return C.ioore(htac, 0);
      eob = htac[0];
      if (240 >= t1)
        return C.ioore(htac, 240);
      m16Zeroes = htac[240];
      duDct = _this._fDCTQuant$2(cdu, fdtbl);
      for (t1 = _this._du, j = 0; j < 64; ++j)
        D.JSArray_methods.$indexSet(t1, B.List_EVh[j], duDct[j]);
      t2 = t1[0];
      t2.toString;
      diff = t2 - dc;
      if (diff === 0) {
        if (0 >= htdc.length)
          return C.ioore(htdc, 0);
        t3 = htdc[0];
        t3.toString;
        _this._writeBits$2(out, t3);
      } else {
        pos = 32767 + diff;
        htdc.toString;
        t3 = _this._category;
        if (!(pos >= 0 && pos < 65535))
          return C.ioore(t3, pos);
        t3 = t3[pos];
        t3.toString;
        if (!(t3 < htdc.length))
          return C.ioore(htdc, t3);
        t3 = htdc[t3];
        t3.toString;
        _this._writeBits$2(out, t3);
        t3 = _this._bitCode[pos];
        t3.toString;
        _this._writeBits$2(out, t3);
      }
      end0pos = 63;
      while (true) {
        if (!(end0pos > 0 && t1[end0pos] === 0))
          break;
        --end0pos;
      }
      if (end0pos === 0) {
        eob.toString;
        _this._writeBits$2(out, eob);
        return t2;
      }
      for (t3 = _this._category, t4 = _this._bitCode, i = 1; i <= end0pos;) {
        i0 = i;
        while (true) {
          if (!(i0 >= 0 && i0 < 64))
            return C.ioore(t1, i0);
          if (!(t1[i0] === 0 && i0 <= end0pos))
            break;
          ++i0;
        }
        nrzeroes = i0 - i;
        if (nrzeroes >= 16) {
          lng = D.JSInt_methods._shrOtherPositive$1(nrzeroes, 4);
          for (nrmarker = 1; nrmarker <= lng; ++nrmarker) {
            m16Zeroes.toString;
            _this._writeBits$2(out, m16Zeroes);
          }
          nrzeroes &= 15;
        }
        t5 = t1[i0];
        t5.toString;
        pos = 32767 + t5;
        if (!(pos >= 0 && pos < 65535))
          return C.ioore(t3, pos);
        t5 = t3[pos];
        t5.toString;
        t5 = (nrzeroes << 4 >>> 0) + t5;
        if (!(t5 < htac.length))
          return C.ioore(htac, t5);
        t5 = htac[t5];
        t5.toString;
        _this._writeBits$2(out, t5);
        t5 = t4[pos];
        t5.toString;
        _this._writeBits$2(out, t5);
        i = i0 + 1;
      }
      if (end0pos !== 63) {
        eob.toString;
        _this._writeBits$2(out, eob);
      }
      return t2;
    },
    _writeBits$2(out, bits) {
      var t1, value, posval, _this = this;
      type$.List_int._as(bits);
      t1 = bits.length;
      if (0 >= t1)
        return C.ioore(bits, 0);
      value = bits[0];
      if (1 >= t1)
        return C.ioore(bits, 1);
      posval = bits[1] - 1;
      for (; posval >= 0;) {
        if ((value & D.JSInt_methods.$shl(1, posval)) >>> 0 !== 0)
          _this._byteNew = (_this._byteNew | D.JSInt_methods.$shl(1, _this._bytePos)) >>> 0;
        --posval;
        if (--_this._bytePos < 0) {
          t1 = _this._byteNew;
          if (t1 === 255) {
            out.writeByte$1(255);
            out.writeByte$1(0);
          } else
            out.writeByte$1(t1);
          _this._bytePos = 7;
          _this._byteNew = 0;
        }
      }
    },
    set$_ydcHuffman(_ydcHuffman) {
      this._ydcHuffman = type$.nullable_List_nullable_List_int._as(_ydcHuffman);
    },
    set$_uvdcHuffman(_uvdcHuffman) {
      this._uvdcHuffman = type$.nullable_List_nullable_List_int._as(_uvdcHuffman);
    },
    set$__JpegEncoder__yacHuffman_A(__JpegEncoder__yacHuffman_A) {
      this.__JpegEncoder__yacHuffman_A = type$.List_nullable_List_int._as(__JpegEncoder__yacHuffman_A);
    },
    set$__JpegEncoder__uvacHuffman_A(__JpegEncoder__uvacHuffman_A) {
      this.__JpegEncoder__uvacHuffman_A = type$.List_nullable_List_int._as(__JpegEncoder__uvacHuffman_A);
    }
  };
  A.FrameType.prototype = {
    _enumToString$0() {
      return "FrameType." + this._name;
    }
  };
  A.Image0.prototype = {
    Image$fromBytes$19$backgroundColor$bytes$bytesOffset$exif$format$frameDuration$frameIndex$frameType$height$iccp$loopCount$numChannels$order$palette$paletteFormat$rowStride$textData$width$withPalette(backgroundColor, bytes, bytesOffset, exif, format, frameDuration, frameIndex, frameType, height, iccp, loopCount, numChannels, order, palette, paletteFormat, rowStride, textData, width, withPalette) {
      var t1, toBytes, fromBytes, t2, dataStride, stride, dOff, bOff, y, dOff0, p, r, g, b, a, _this = this,
        value = _this.__Image_frames_AI;
      if (value === $) {
        value = C._setArrayType([], type$.JSArray_Image);
        _this.set$__Image_frames_AI(value);
      }
      D.JSArray_methods.add$1(value, _this);
      if (numChannels > 4)
        throw C.wrapException(new A.ImageException("An Image can only have 1-4 channels."));
      if (numChannels === 3)
        order = B.ChannelOrder_4;
      else if (numChannels === 4)
        order = B.ChannelOrder_0;
      else {
        t1 = numChannels === 1 ? B.ChannelOrder_7 : B.ChannelOrder_6;
        order = t1;
      }
      if (numChannels === 1)
        order = B.ChannelOrder_7;
      else if (numChannels === 2)
        order = B.ChannelOrder_6;
      else if (numChannels === 3) {
        if (order !== B.ChannelOrder_4 && order !== B.ChannelOrder_5)
          order = B.ChannelOrder_4;
      } else if (numChannels === 4)
        if (order !== B.ChannelOrder_1 && order !== B.ChannelOrder_0 && order !== B.ChannelOrder_2 && order !== B.ChannelOrder_3)
          order = B.ChannelOrder_0;
      _this._createImageData$5(width, height, format, numChannels, palette);
      t1 = _this.data;
      if (t1 == null)
        return;
      toBytes = J.asUint8List$0$x(t1.get$buffer(t1));
      fromBytes = J.asUint8List$2$x(bytes, bytesOffset, null);
      if (format === B.Format_0)
        rowStride = D.JSNumber_methods.ceil$0(width * numChannels / 8);
      else if (format === B.Format_1) {
        t1 = D.JSNumber_methods.ceil$0(width * numChannels / 4);
        rowStride = t1;
      } else {
        t1 = width * numChannels;
        if (format === B.Format_2)
          t1 = D.JSNumber_methods.ceil$0(t1 / 2);
        else {
          t2 = B.Map_vw4lG.$index(0, format);
          t2.toString;
          t2 = t1 * t2;
          t1 = t2;
        }
        rowStride = t1;
      }
      dataStride = _this.data.get$rowStride();
      stride = Math.min(C.checkNum(rowStride), dataStride);
      dOff = 0;
      bOff = 0;
      y = 0;
      while (y < height) {
        dOff0 = dOff + dataStride;
        D.NativeUint8List_methods.setRange$3(toBytes, dOff, dOff0, C.Uint8List_Uint8List$sublistView(fromBytes, bOff, bOff + stride));
        ++y;
        if (typeof rowStride !== "number")
          return C.iae(rowStride);
        bOff += rowStride;
        dOff = dOff0;
      }
      if (numChannels === 3 && order === B.ChannelOrder_5)
        for (t1 = _this.data, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          p = t1.get$current(t1);
          r = p.get$r(p);
          p.set$r(0, p.get$b(p));
          p.set$b(0, r);
        }
      else {
        t1 = numChannels === 4;
        if (t1 && order === B.ChannelOrder_2)
          for (t1 = _this.data, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
            p = t1.get$current(t1);
            r = p.get$r(p);
            g = p.get$g();
            b = p.get$b(p);
            p.set$r(0, p.get$a(p));
            p.set$g(b);
            p.set$b(0, g);
            p.set$a(0, r);
          }
        else if (t1 && order === B.ChannelOrder_3)
          for (t1 = _this.data, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
            p = t1.get$current(t1);
            r = p.get$r(p);
            g = p.get$g();
            b = p.get$b(p);
            p.set$r(0, p.get$a(p));
            p.set$g(r);
            p.set$b(0, g);
            p.set$a(0, b);
          }
        else if (t1 && order === B.ChannelOrder_1)
          for (t1 = _this.data, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
            p = t1.get$current(t1);
            r = p.get$r(p);
            g = p.get$g();
            b = p.get$b(p);
            a = p.get$a(p);
            p.set$r(0, b);
            p.set$g(g);
            p.set$b(0, r);
            p.set$a(0, a);
          }
      }
    },
    _createImageData$5(width, height, format, numChannels, palette) {
      var t1, t2, _this = this, _null = null;
      switch (format.index) {
        case 0:
          if (palette == null) {
            t1 = D.JSNumber_methods.ceil$0(width * numChannels / 8);
            t2 = new A.ImageDataUint1(t1, _null, width, height, numChannels);
            t1 = Math.max(t1 * height, 1);
            t2.__ImageDataUint1_data_F = new Uint8Array(t1);
            _this.data = t2;
          } else {
            t1 = D.JSNumber_methods.ceil$0(width / 8);
            t2 = new A.ImageDataUint1(t1, palette, width, height, 1);
            t1 = Math.max(t1 * height, 1);
            t2.__ImageDataUint1_data_F = new Uint8Array(t1);
            _this.data = t2;
          }
          break;
        case 1:
          if (palette == null) {
            t1 = D.JSNumber_methods.ceil$0(width * (numChannels << 1 >>> 0) / 8);
            t2 = new A.ImageDataUint2(t1, _null, width, height, numChannels);
            t1 = Math.max(t1 * height, 1);
            t2.__ImageDataUint2_data_F = new Uint8Array(t1);
            _this.data = t2;
          } else {
            t1 = D.JSNumber_methods.ceil$0(width / 4);
            t2 = new A.ImageDataUint2(t1, palette, width, height, 1);
            t1 = Math.max(t1 * height, 1);
            t2.__ImageDataUint2_data_F = new Uint8Array(t1);
            _this.data = t2;
          }
          break;
        case 2:
          if (palette == null) {
            if (numChannels === 2)
              t1 = width;
            else if (numChannels === 4)
              t1 = width * 2;
            else
              t1 = numChannels === 3 ? D.JSNumber_methods.ceil$0(width * 1.5) : D.JSNumber_methods.ceil$0(width / 2);
            t2 = new A.ImageDataUint4(t1, _null, width, height, numChannels);
            t1 = Math.max(t1 * height, 1);
            t2.__ImageDataUint4_data_F = new Uint8Array(t1);
            _this.data = t2;
          } else {
            t1 = D.JSNumber_methods.ceil$0(width / 2);
            t2 = new A.ImageDataUint4(t1, palette, width, height, 1);
            t1 = Math.max(t1 * height, 1);
            t2.__ImageDataUint4_data_F = new Uint8Array(t1);
            _this.data = t2;
          }
          break;
        case 3:
          t1 = width * height;
          if (palette == null)
            _this.data = new A.ImageDataUint8(new Uint8Array(t1 * numChannels), _null, width, height, numChannels);
          else
            _this.data = new A.ImageDataUint8(new Uint8Array(t1), palette, width, height, 1);
          break;
        case 4:
          t1 = width * height;
          if (palette == null)
            _this.data = new A.ImageDataUint16(new Uint16Array(t1 * numChannels), _null, width, height, numChannels);
          else
            _this.data = new A.ImageDataUint16(new Uint16Array(t1), palette, width, height, 1);
          break;
        case 5:
          _this.data = new A.ImageDataUint32(new Uint32Array(width * height * numChannels), width, height, numChannels);
          break;
        case 6:
          _this.data = new A.ImageDataInt8(new Int8Array(width * height * numChannels), width, height, numChannels);
          break;
        case 7:
          _this.data = new A.ImageDataInt16(new Int16Array(width * height * numChannels), width, height, numChannels);
          break;
        case 8:
          _this.data = new A.ImageDataInt32(new Int32Array(width * height * numChannels), width, height, numChannels);
          break;
        case 9:
          _this.data = new A.ImageDataFloat16(new Uint16Array(width * height * numChannels), width, height, numChannels);
          break;
        case 10:
          _this.data = new A.ImageDataFloat32(new Float32Array(width * height * numChannels), width, height, numChannels);
          break;
        case 11:
          _this.data = new A.ImageDataFloat64(new Float64Array(width * height * 4 * numChannels), width, height, numChannels);
          break;
      }
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.get$width(0),
        t2 = _this.get$height(0),
        t3 = _this.get$format(),
        t4 = _this.data;
      t4 = t4 == null ? null : t4.get$palette();
      t4 = t4 == null ? null : t4.numChannels;
      if (t4 == null) {
        t4 = _this.data;
        t4 = t4 == null ? null : t4.numChannels;
      }
      if (t4 == null)
        t4 = 0;
      return "Image(" + t1 + ", " + t2 + ", " + t3._name + ", " + t4 + ")";
    },
    get$width(_) {
      var t1 = this.data;
      t1 = t1 == null ? null : t1.width;
      return t1 == null ? 0 : t1;
    },
    get$height(_) {
      var t1 = this.data;
      t1 = t1 == null ? null : t1.height;
      return t1 == null ? 0 : t1;
    },
    get$format() {
      var t1 = this.data;
      t1 = t1 == null ? null : t1.get$format();
      return t1 == null ? B.Format_3 : t1;
    },
    get$iterator(_) {
      var t1 = this.data;
      return t1.get$iterator(t1);
    },
    clear$1(_, color) {
      var t1;
      type$.nullable_Color_2._as(color);
      t1 = this.data;
      return t1 == null ? null : t1.clear$1(0, color);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    },
    set$__Image_frames_AI(__Image_frames_AI) {
      this.__Image_frames_AI = type$.List_Image._as(__Image_frames_AI);
    }
  };
  A.ImageData1.prototype = {
    get$palette() {
      return null;
    }
  };
  A.ImageDataFloat16.prototype = {
    get$format() {
      return B.Format_9;
    },
    get$buffer(_) {
      return D.NativeUint16List_methods.get$buffer(this.data);
    },
    get$rowStride() {
      return this.width * this.numChannels * 2;
    },
    get$iterator(_) {
      return A.PixelFloat16$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelFloat16$imageData(this);
      pixel = pixel0;
      pixel._pixel_float16$_x = x;
      pixel._pixel_float16$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_float16$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataFloat16(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataFloat32.prototype = {
    get$format() {
      return B.Format_10;
    },
    get$buffer(_) {
      return D.NativeFloat32List_methods.get$buffer(this.data);
    },
    get$iterator(_) {
      return A.PixelFloat32$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    get$rowStride() {
      return this.width * this.numChannels * 4;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelFloat32$imageData(this);
      pixel = pixel0;
      pixel._pixel_float32$_x = x;
      pixel._pixel_float32$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_float32$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataFloat32(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataFloat64.prototype = {
    get$format() {
      return B.Format_11;
    },
    get$buffer(_) {
      return D.NativeFloat64List_methods.get$buffer(this.data);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    get$iterator(_) {
      return A.PixelFloat64$imageData(this);
    },
    get$rowStride() {
      return this.width * this.numChannels * 8;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelFloat64$imageData(this);
      pixel = pixel0;
      pixel._pixel_float64$_x = x;
      pixel._pixel_float64$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_float64$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataFloat64(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataInt16.prototype = {
    get$format() {
      return B.Format_7;
    },
    get$buffer(_) {
      return D.NativeInt16List_methods.get$buffer(this.data);
    },
    get$iterator(_) {
      return A.PixelInt16$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    get$rowStride() {
      return this.width * this.numChannels * 2;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelInt16$imageData(this);
      pixel = pixel0;
      pixel._pixel_int16$_x = x;
      pixel._pixel_int16$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_int16$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataInt16(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataInt32.prototype = {
    get$format() {
      return B.Format_8;
    },
    get$buffer(_) {
      return D.NativeInt32List_methods.get$buffer(this.data);
    },
    get$rowStride() {
      return this.width * this.numChannels * 4;
    },
    get$iterator(_) {
      return A.PixelInt32$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelInt32$imageData(this);
      pixel = pixel0;
      pixel._pixel_int32$_x = x;
      pixel._pixel_int32$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_int32$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataInt32(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataInt8.prototype = {
    get$format() {
      return B.Format_6;
    },
    get$buffer(_) {
      return D.NativeInt8List_methods.get$buffer(this.data);
    },
    get$rowStride() {
      return this.width * this.numChannels;
    },
    get$iterator(_) {
      return A.PixelInt8$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelInt8$imageData(this);
      pixel = pixel0;
      pixel._pixel_int8$_x = x;
      pixel._pixel_int8$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_int8$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataInt8(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataUint1.prototype = {
    ImageDataUint1$palette$3(width, height, palette) {
      var t1 = Math.max(this.rowStride * height, 1);
      t1 = new Uint8Array(t1);
      this.__ImageDataUint1_data_F !== $ && C.throwLateFieldAI("data");
      this.__ImageDataUint1_data_F = t1;
    },
    get$format() {
      return B.Format_0;
    },
    get$length(_) {
      var t1 = this.__ImageDataUint1_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return t1.byteLength;
    },
    get$buffer(_) {
      var t1 = this.__ImageDataUint1_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return D.NativeUint8List_methods.get$buffer(t1);
    },
    get$iterator(_) {
      return A.PixelUint1$imageData(this);
    },
    getPixel$3(x, y, pixel) {
      var t1, t2;
      pixel = A.PixelUint1$imageData(this);
      pixel._pixel_uint1$_x = x;
      pixel._pixel_uint1$_y = y;
      t1 = pixel.image;
      t2 = y * t1.rowStride;
      pixel._pixel_uint1$_rowOffset = t2;
      t1 = x * t1.numChannels;
      pixel._pixel_uint1$_index = t2 + D.JSInt_methods._shrOtherPositive$1(t1, 3);
      pixel._pixel_uint1$_bitIndex = t1 & 7;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataUint1(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    },
    get$rowStride() {
      return this.rowStride;
    },
    get$palette() {
      return this.palette;
    }
  };
  A.ImageDataUint16.prototype = {
    get$format() {
      return B.Format_4;
    },
    get$buffer(_) {
      return D.NativeUint16List_methods.get$buffer(this.data);
    },
    get$rowStride() {
      return this.width * this.numChannels * 2;
    },
    get$iterator(_) {
      return A.PixelUint16$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelUint16$imageData(this);
      pixel = pixel0;
      pixel._pixel_uint16$_x = x;
      pixel._pixel_uint16$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_uint16$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataUint16(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    },
    get$palette() {
      return this.palette;
    }
  };
  A.ImageDataUint2.prototype = {
    ImageDataUint2$palette$3(width, height, palette) {
      var t1 = Math.max(this.rowStride * height, 1);
      t1 = new Uint8Array(t1);
      this.__ImageDataUint2_data_F !== $ && C.throwLateFieldAI("data");
      this.__ImageDataUint2_data_F = t1;
    },
    get$format() {
      return B.Format_1;
    },
    get$buffer(_) {
      var t1 = this.__ImageDataUint2_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return D.NativeUint8List_methods.get$buffer(t1);
    },
    get$iterator(_) {
      return A.PixelUint2$imageData(this);
    },
    get$length(_) {
      var t1 = this.__ImageDataUint2_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return t1.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var bpp, t1, t2;
      pixel = A.PixelUint2$imageData(this);
      pixel._pixel_uint2$_x = x;
      pixel._pixel_uint2$_y = y;
      bpp = pixel.get$bitsPerPixel();
      t1 = pixel._pixel_uint2$_y * pixel.image.rowStride;
      pixel._rowOffset = t1;
      t2 = pixel._pixel_uint2$_x * bpp;
      pixel._pixel_uint2$_index = t1 + D.JSInt_methods._shrOtherPositive$1(t2, 3);
      pixel._pixel_uint2$_bitIndex = t2 & 7;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataUint2(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    },
    get$rowStride() {
      return this.rowStride;
    },
    get$palette() {
      return this.palette;
    }
  };
  A.ImageDataUint32.prototype = {
    get$format() {
      return B.Format_5;
    },
    get$buffer(_) {
      return D.NativeUint32List_methods.get$buffer(this.data);
    },
    get$rowStride() {
      return this.width * this.numChannels * 4;
    },
    get$iterator(_) {
      return A.PixelUint32$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelUint32$imageData(this);
      pixel = pixel0;
      pixel._pixel_uint32$_x = x;
      pixel._pixel_uint32$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_uint32$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataUint32(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    }
  };
  A.ImageDataUint4.prototype = {
    ImageDataUint4$palette$3(width, height, palette) {
      var t1 = Math.max(this.rowStride * height, 1);
      t1 = new Uint8Array(t1);
      this.__ImageDataUint4_data_F !== $ && C.throwLateFieldAI("data");
      this.__ImageDataUint4_data_F = t1;
    },
    get$format() {
      return B.Format_2;
    },
    get$buffer(_) {
      var t1 = this.__ImageDataUint4_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return D.NativeUint8List_methods.get$buffer(t1);
    },
    get$iterator(_) {
      return A.PixelUint4$imageData(this);
    },
    get$length(_) {
      var t1 = this.__ImageDataUint4_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return t1.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, bpp, rowStride;
      pixel = A.PixelUint4$imageData(this);
      pixel._pixel_uint4$_x = x;
      pixel._pixel_uint4$_y = y;
      t1 = pixel.image;
      bpp = t1.numChannels * 4;
      rowStride = t1.rowStride;
      if (bpp === 4)
        t1 = y * rowStride + D.JSInt_methods._shrOtherPositive$1(x, 1);
      else if (bpp === 8)
        t1 = y * t1.width + x;
      else {
        t1 = y * rowStride;
        t1 = bpp === 16 ? t1 + (x << 1 >>> 0) : t1 + D.JSInt_methods._shrOtherPositive$1(x * bpp, 3);
      }
      pixel._pixel_uint4$_index = t1;
      t1 = x * bpp;
      pixel._bitIndex = bpp > 7 ? t1 & 4 : t1 & 7;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataUint4(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      type$.nullable_Color_2._as(c);
    },
    clear$0(_) {
      return this.clear$1(0, null);
    },
    get$rowStride() {
      return this.rowStride;
    },
    get$palette() {
      return this.palette;
    }
  };
  A.ImageDataUint8.prototype = {
    get$format() {
      return B.Format_3;
    },
    get$buffer(_) {
      return D.NativeUint8List_methods.get$buffer(this.data);
    },
    get$rowStride() {
      return this.width * this.numChannels;
    },
    get$iterator(_) {
      return A.PixelUint8$imageData(this);
    },
    get$length(_) {
      return this.data.byteLength;
    },
    getPixel$3(x, y, pixel) {
      var t1, t2,
        pixel0 = A.PixelUint8$imageData(this);
      pixel = pixel0;
      pixel._pixel_uint8$_x = x;
      pixel._pixel_uint8$_y = y;
      t1 = pixel.image;
      t2 = t1.numChannels;
      pixel._pixel_uint8$_index = y * t1.width * t2 + x * t2;
      return pixel;
    },
    toString$0(_) {
      return "ImageDataUint8(" + this.width + ", " + this.height + ", " + this.numChannels + ")";
    },
    clear$1(_, c) {
      var t1, u16, u32, p, t2, t3, t4, t5, _this = this;
      type$.nullable_Color_2._as(c);
      t1 = _this.numChannels;
      if (t1 === 1) {
        t1 = _this.data;
        D.NativeUint8List_methods.fillRange$3(t1, 0, t1.length, 0);
      } else if (t1 === 2) {
        u16 = J.asUint16List$2$x(D.NativeUint8List_methods.get$buffer(_this.data), 0, null);
        D.NativeUint16List_methods.fillRange$3(u16, 0, u16.length, 0);
      } else if (t1 === 4) {
        u32 = J.asUint32List$2$x(D.NativeUint8List_methods.get$buffer(_this.data), 0, null);
        D.NativeUint32List_methods.fillRange$3(u32, 0, u32.length, 0);
      } else
        for (p = A.PixelUint8$imageData(_this), t1 = p.image, t2 = t1.numChannels > 0, t1 = t1.data, t3 = t1.$flags | 0; p.moveNext$0();) {
          if (t2) {
            t4 = p._pixel_uint8$_index;
            t5 = D.JSNumber_methods.toInt$0(D.JSInt_methods.clamp$2(0, 0, 255));
            t3 & 2 && C.throwUnsupportedOperation(t1);
            if (!(t4 >= 0 && t4 < t1.length))
              return C.ioore(t1, t4);
            t1[t4] = t5;
          }
          p.set$g(0);
          p.set$b(0, 0);
        }
    },
    clear$0(_) {
      return this.clear$1(0, null);
    },
    get$palette() {
      return this.palette;
    }
  };
  A.PixelFloat16.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelFloat16(_this._pixel_float16$_x, _this._pixel_float16$_y, _this._pixel_float16$_index, _this.image);
    },
    get$format() {
      return B.Format_9;
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_float16$_x === t1.width) {
        _this._pixel_float16$_x = 0;
        if (++_this._pixel_float16$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_float16$_index + t1.numChannels;
      _this._pixel_float16$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = $.Float16__toFloatFloat32Data;
        t1 = t1 != null ? t1 : A.Float16__initialize();
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2, t3;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + i;
        t3 = A.Float16_doubleToFloat16(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = $.Float16__toFloatFloat32Data;
        t1 = t1 != null ? t1 : A.Float16__initialize();
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index;
        t3 = A.Float16_doubleToFloat16(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = $.Float16__toFloatFloat32Data;
        t1 = t1 != null ? t1 : A.Float16__initialize();
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + 1;
        t3 = A.Float16_doubleToFloat16(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = $.Float16__toFloatFloat32Data;
        t1 = t1 != null ? t1 : A.Float16__initialize();
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + 2;
        t3 = A.Float16_doubleToFloat16(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_float16$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = $.Float16__toFloatFloat32Data;
        t1 = t1 != null ? t1 : A.Float16__initialize();
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$a(_, a) {
      var d, t2, t3,
        t1 = this.image;
      if (t1.numChannels > 3) {
        d = this.get$g();
        t1 = t1.data;
        t2 = this._pixel_float16$_index + 3;
        t3 = A.Float16_doubleToFloat16(d);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelFloat16)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_float16$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_float16$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_float16$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_float16$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelFloat32.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelFloat32(_this._pixel_float32$_x, _this._pixel_float32$_y, _this._pixel_float32$_index, _this.image);
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$format() {
      return B.Format_10;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_float32$_x === t1.width) {
        _this._pixel_float32$_x = 0;
        if (++_this._pixel_float32$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_float32$_index + t1.numChannels;
      _this._pixel_float32$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + i;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = value;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = r;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + 1;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = g;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + 2;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = b;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 1;
      return t1;
    },
    set$a(_, a) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_float32$_index + 3;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = a;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelFloat32)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_float32$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_float32$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_float32$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_float32$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelFloat64.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelFloat64(_this._pixel_float64$_x, _this._pixel_float64$_y, _this._pixel_float64$_index, _this.image);
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$format() {
      return B.Format_11;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_float64$_x === t1.width) {
        _this._pixel_float64$_x = 0;
        if (++_this._pixel_float64$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_float64$_index + t1.numChannels;
      _this._pixel_float64$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + i;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = value;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = r;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + 1;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = g;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + 2;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = b;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$a(_, a) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_float64$_index + 3;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = a;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 1;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelFloat64)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_float64$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_float64$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_float64$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_float64$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelInt16.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelInt16(_this._pixel_int16$_x, _this._pixel_int16$_y, _this._pixel_int16$_index, _this.image);
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$format() {
      return B.Format_7;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_int16$_x === t1.width) {
        _this._pixel_int16$_x = 0;
        if (++_this._pixel_int16$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_int16$_index + t1.numChannels;
      _this._pixel_int16$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2, t3;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + i;
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index;
        t3 = D.JSNumber_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + 2;
        t3 = D.JSNumber_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$a(_, a) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_int16$_index + 3;
        t3 = D.JSNumber_methods.toInt$0(a);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 32767;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelInt16)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_int16$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_int16$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_int16$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_int16$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelInt32.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelInt32(_this._pixel_int32$_x, _this._pixel_int32$_y, _this._pixel_int32$_index, _this.image);
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$format() {
      return B.Format_8;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_int32$_x === t1.width) {
        _this._pixel_int32$_x = 0;
        if (++_this._pixel_int32$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_int32$_index + t1.numChannels;
      _this._pixel_int32$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2, t3;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + i;
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index;
        t3 = D.JSNumber_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + 2;
        t3 = D.JSNumber_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$a(_, a) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_int32$_index + 3;
        t3 = D.JSNumber_methods.toInt$0(a);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 2147483647;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelInt32)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_int32$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_int32$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_int32$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_int32$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelInt8.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelInt8(_this._pixel_int8$_x, _this._pixel_int8$_y, _this._pixel_int8$_index, _this.image);
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$format() {
      return B.Format_6;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_int8$_x === t1.width) {
        _this._pixel_int8$_x = 0;
        if (++_this._pixel_int8$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_int8$_index + t1.numChannels;
      _this._pixel_int8$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2, t3;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + i;
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index;
        t3 = D.JSNumber_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + 2;
        t3 = D.JSNumber_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$a(_, a) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_int8$_index + 3;
        t3 = D.JSNumber_methods.toInt$0(a);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 127;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelInt8)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_int8$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_int8$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_int8$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_int8$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUint1.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelUint1(_this._pixel_uint1$_x, _this._pixel_uint1$_y, _this._pixel_uint1$_index, _this._pixel_uint1$_bitIndex, _this._pixel_uint1$_rowOffset, _this.image);
    },
    get$length(_) {
      var t1 = this.image,
        t2 = t1.palette;
      t2 = t2 == null ? null : t2.numChannels;
      return t2 == null ? t1.numChannels : t2;
    },
    get$palette() {
      return this.image.palette;
    },
    get$format() {
      return B.Format_0;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var nc, _this = this,
        t1 = ++_this._pixel_uint1$_x,
        t2 = _this.image;
      if (t1 === t2.width) {
        _this._pixel_uint1$_x = 0;
        t1 = ++_this._pixel_uint1$_y;
        _this._pixel_uint1$_bitIndex = 0;
        ++_this._pixel_uint1$_index;
        _this._pixel_uint1$_rowOffset = _this._pixel_uint1$_rowOffset + t2.rowStride;
        return t1 < t2.height;
      }
      nc = t2.numChannels;
      if (t2.palette != null || nc === 1) {
        if (++_this._pixel_uint1$_bitIndex > 7) {
          _this._pixel_uint1$_bitIndex = 0;
          ++_this._pixel_uint1$_index;
        }
      } else {
        t1 *= nc;
        _this._pixel_uint1$_bitIndex = t1 & 7;
        _this._pixel_uint1$_index = _this._pixel_uint1$_rowOffset + D.JSInt_methods._shrOtherPositive$1(t1, 3);
      }
      t1 = _this._pixel_uint1$_index;
      t2 = t2.__ImageDataUint1_data_F;
      t2 === $ && C.throwLateFieldNI("data");
      return t1 < t2.byteLength;
    },
    _pixel_uint1$_get$1(_, ci) {
      var t1, t2,
        i = this._pixel_uint1$_index,
        bi = 7 - (this._pixel_uint1$_bitIndex + ci);
      if (bi < 0) {
        bi += 8;
        ++i;
      }
      t1 = this.image.__ImageDataUint1_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      t2 = t1.length;
      if (i >= t2)
        return 0;
      if (!(i >= 0))
        return C.ioore(t1, i);
      return D.JSInt_methods._shrReceiverPositive$1(t1[i], bi) & 1;
    },
    _pixel_uint1$_getChannel$1(ci) {
      var t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        t1 = t1.numChannels > ci ? this._pixel_uint1$_get$1(0, ci) : 0;
      else
        t1 = t2.$get$2(0, this._pixel_uint1$_get$1(0, 0), ci);
      return t1;
    },
    _pixel_uint1$_setChannel$2(ci, value) {
      var i, bi, v, vi, mask, t2,
        t1 = this.image;
      if (ci >= t1.numChannels)
        return;
      i = this._pixel_uint1$_index;
      bi = 7 - (this._pixel_uint1$_bitIndex + ci);
      if (bi < 0) {
        ++i;
        bi += 8;
      }
      t1 = t1.__ImageDataUint1_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      if (!(i >= 0 && i < t1.length))
        return C.ioore(t1, i);
      v = t1[i];
      vi = D.JSInt_methods.clamp$2(D.JSNumber_methods.toInt$0(value), 0, 1);
      if (!(bi >= 0 && bi < 8))
        return C.ioore(B.List_Kt5, bi);
      mask = B.List_Kt5[bi];
      t2 = D.JSInt_methods.$shl(vi, bi);
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      if (!(i < t1.length))
        return C.ioore(t1, i);
      t1[i] = (v & mask | t2) >>> 0;
    },
    $index(_, ci) {
      return this._pixel_uint1$_getChannel$1(C._asInt(ci));
    },
    $indexSet(_, ci, value) {
      return this._pixel_uint1$_setChannel$2(C._asInt(ci), C._asNum(value));
    },
    get$r(_) {
      return this._pixel_uint1$_getChannel$1(0);
    },
    set$r(_, r) {
      this._pixel_uint1$_setChannel$2(0, r);
    },
    get$g() {
      return this._pixel_uint1$_getChannel$1(1);
    },
    set$g(g) {
      this._pixel_uint1$_setChannel$2(1, g);
    },
    get$b(_) {
      return this._pixel_uint1$_getChannel$1(2);
    },
    set$b(_, b) {
      this._pixel_uint1$_setChannel$2(2, b);
    },
    get$a(_) {
      return this._pixel_uint1$_getChannel$1(3);
    },
    set$a(_, a) {
      this._pixel_uint1$_setChannel$2(3, a);
    },
    get$aNormalized() {
      var t1 = this._pixel_uint1$_getChannel$1(3),
        t2 = this.image.palette;
      t2 = t2 == null ? null : t2.get$maxChannelValue();
      return t1 / (t2 == null ? 1 : t2);
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, nc, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelUint1)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = _this.image;
        t2 = t1.palette;
        nc = t2 != null ? t2.numChannels : t1.numChannels;
        t1 = J.getInterceptor$asx(other);
        if (t1.get$length(other) !== nc)
          return false;
        if (_this._pixel_uint1$_getChannel$1(0) !== t1.$index(other, 0))
          return false;
        if (nc > 1) {
          if (_this._pixel_uint1$_getChannel$1(1) !== t1.$index(other, 1))
            return false;
          if (nc > 2) {
            if (_this._pixel_uint1$_getChannel$1(2) !== t1.$index(other, 2))
              return false;
            if (nc > 3)
              if (_this._pixel_uint1$_getChannel$1(3) !== t1.$index(other, 3))
                return false;
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUint16.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelUint16(_this._pixel_uint16$_x, _this._pixel_uint16$_y, _this._pixel_uint16$_index, _this.image);
    },
    get$length(_) {
      var t1 = this.image,
        t2 = t1.palette;
      t2 = t2 == null ? null : t2.numChannels;
      return t2 == null ? t1.numChannels : t2;
    },
    get$palette() {
      return this.image.palette;
    },
    get$format() {
      return B.Format_4;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_uint16$_x === t1.width) {
        _this._pixel_uint16$_x = 0;
        if (++_this._pixel_uint16$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_uint16$_index;
      t2 += t1.palette == null ? t1.numChannels : 1;
      _this._pixel_uint16$_index = t2;
      return t2 < t1.data.length;
    },
    $get$1(_, ci) {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 != null) {
        t1 = t1.data;
        t3 = this._pixel_uint16$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.$get$2(0, t1[t3], ci);
        t1 = t3;
      } else if (ci < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_uint16$_index + ci;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $index(_, i) {
      return this.$get$1(0, C._asInt(i));
    },
    $indexSet(_, i, value) {
      var t1, t2, t3;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_uint16$_index + i;
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        if (t1.numChannels > 0) {
          t1 = t1.data;
          t2 = this._pixel_uint16$_index;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      else {
        t1 = t1.data;
        t3 = this._pixel_uint16$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getRed$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_uint16$_index;
        t3 = D.JSNumber_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        if (t1.numChannels > 1) {
          t1 = t1.data;
          t2 = this._pixel_uint16$_index + 1;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      else {
        t1 = t1.data;
        t3 = this._pixel_uint16$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getGreen$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$g(g) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_uint16$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        if (t1.numChannels > 2) {
          t1 = t1.data;
          t2 = this._pixel_uint16$_index + 2;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      else {
        t1 = t1.data;
        t3 = this._pixel_uint16$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getBlue$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$b(_, b) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_uint16$_index + 2;
        t3 = D.JSNumber_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        if (t1.numChannels > 3) {
          t1 = t1.data;
          t2 = this._pixel_uint16$_index + 3;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      else {
        t1 = t1.data;
        t3 = this._pixel_uint16$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getAlpha$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$a(_, a) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_uint16$_index + 3;
        t3 = D.JSNumber_methods.toInt$0(a);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      var t1 = this.get$a(0),
        t2 = this.image.palette;
      t2 = t2 == null ? null : t2.get$maxChannelValue();
      return t1 / (t2 == null ? 65535 : t2);
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, nc, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelUint16)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = _this.image;
        t2 = t1.palette;
        nc = t2 != null ? t2.numChannels : t1.numChannels;
        t1 = J.getInterceptor$asx(other);
        if (t1.get$length(other) !== nc)
          return false;
        if (_this.$get$1(0, 0) !== t1.$index(other, 0))
          return false;
        if (nc > 1) {
          if (_this.$get$1(0, 1) !== t1.$index(other, 1))
            return false;
          if (nc > 2) {
            if (_this.$get$1(0, 2) !== t1.$index(other, 2))
              return false;
            if (nc > 3)
              if (_this.$get$1(0, 3) !== t1.$index(other, 3))
                return false;
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUint2.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelUint2(_this._pixel_uint2$_x, _this._pixel_uint2$_y, _this._pixel_uint2$_index, _this._pixel_uint2$_bitIndex, _this._rowOffset, _this.image);
    },
    get$length(_) {
      var t1 = this.image,
        t2 = t1.palette;
      t2 = t2 == null ? null : t2.numChannels;
      return t2 == null ? t1.numChannels : t2;
    },
    get$palette() {
      return this.image.palette;
    },
    get$format() {
      return B.Format_1;
    },
    get$bitsPerPixel() {
      var t1 = this.image;
      return t1.palette != null ? 2 : t1.numChannels << 1 >>> 0;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, bpp, _this = this,
        t1 = _this.image;
      if (++_this._pixel_uint2$_x === t1.width) {
        _this._pixel_uint2$_x = 0;
        t2 = ++_this._pixel_uint2$_y;
        _this._pixel_uint2$_bitIndex = 0;
        ++_this._pixel_uint2$_index;
        _this._rowOffset = _this._rowOffset + t1.rowStride;
        return t2 < t1.height;
      }
      if (t1.palette != null || t1.numChannels === 1) {
        t2 = _this._pixel_uint2$_bitIndex += 2;
        if (t2 > 7) {
          _this._pixel_uint2$_bitIndex = 0;
          ++_this._pixel_uint2$_index;
        }
      } else {
        bpp = _this.get$bitsPerPixel();
        t2 = _this._pixel_uint2$_x * bpp;
        _this._pixel_uint2$_bitIndex = t2 & 7;
        _this._pixel_uint2$_index = _this._rowOffset + D.JSInt_methods._shrOtherPositive$1(t2, 3);
      }
      t2 = _this._pixel_uint2$_index;
      t1 = t1.__ImageDataUint2_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return t2 < t1.length;
    },
    _pixel_uint2$_get$1(_, ci) {
      var t1,
        i = this._pixel_uint2$_index,
        bi = 6 - (this._pixel_uint2$_bitIndex + (ci << 1 >>> 0));
      if (bi < 0) {
        bi += 8;
        ++i;
      }
      t1 = this.image.__ImageDataUint2_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      if (!(i >= 0 && i < t1.length))
        return C.ioore(t1, i);
      return D.JSInt_methods._shrReceiverPositive$1(t1[i], bi) & 3;
    },
    _pixel_uint2$_getChannel$1(ci) {
      var t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        t1 = t1.numChannels > ci ? this._pixel_uint2$_get$1(0, ci) : 0;
      else
        t1 = t2.$get$2(0, this._pixel_uint2$_get$1(0, 0), ci);
      return t1;
    },
    _pixel_uint2$_setChannel$2(ci, value) {
      var i, bi, v, vi, t2, mask,
        t1 = this.image;
      if (ci >= t1.numChannels)
        return;
      i = this._pixel_uint2$_index;
      bi = 6 - (this._pixel_uint2$_bitIndex + (ci << 1 >>> 0));
      if (bi < 0) {
        ++i;
        bi += 8;
      }
      t1 = t1.__ImageDataUint2_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      if (!(i >= 0 && i < t1.length))
        return C.ioore(t1, i);
      v = t1[i];
      vi = D.JSInt_methods.clamp$2(D.JSNumber_methods.toInt$0(value), 0, 3);
      t2 = D.JSInt_methods._shrOtherPositive$1(bi, 1);
      if (!(t2 < 4))
        return C.ioore(B.List_252_243_207_63, t2);
      mask = B.List_252_243_207_63[t2];
      t2 = D.JSInt_methods.$shl(vi, bi);
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      if (!(i < t1.length))
        return C.ioore(t1, i);
      t1[i] = (v & mask | t2) >>> 0;
    },
    $index(_, i) {
      return this._pixel_uint2$_getChannel$1(C._asInt(i));
    },
    $indexSet(_, i, value) {
      return this._pixel_uint2$_setChannel$2(C._asInt(i), C._asNum(value));
    },
    get$r(_) {
      return this._pixel_uint2$_getChannel$1(0);
    },
    set$r(_, r) {
      this._pixel_uint2$_setChannel$2(0, r);
    },
    get$g() {
      return this._pixel_uint2$_getChannel$1(1);
    },
    set$g(g) {
      this._pixel_uint2$_setChannel$2(1, g);
    },
    get$b(_) {
      return this._pixel_uint2$_getChannel$1(2);
    },
    set$b(_, b) {
      this._pixel_uint2$_setChannel$2(2, b);
    },
    get$a(_) {
      return this._pixel_uint2$_getChannel$1(3);
    },
    set$a(_, a) {
      this._pixel_uint2$_setChannel$2(3, a);
    },
    get$aNormalized() {
      var t1 = this._pixel_uint2$_getChannel$1(3),
        t2 = this.image.palette;
      t2 = t2 == null ? null : t2.get$maxChannelValue();
      return t1 / (t2 == null ? 3 : t2);
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, nc, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelUint2)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = _this.image;
        t2 = t1.palette;
        nc = t2 != null ? t2.numChannels : t1.numChannels;
        t1 = J.getInterceptor$asx(other);
        if (t1.get$length(other) !== nc)
          return false;
        if (_this._pixel_uint2$_getChannel$1(0) !== t1.$index(other, 0))
          return false;
        if (nc > 1) {
          if (_this._pixel_uint2$_getChannel$1(1) !== t1.$index(other, 1))
            return false;
          if (nc > 2) {
            if (_this._pixel_uint2$_getChannel$1(2) !== t1.$index(other, 2))
              return false;
            if (nc > 3)
              if (_this._pixel_uint2$_getChannel$1(3) !== t1.$index(other, 3))
                return false;
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUint32.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelUint32(_this._pixel_uint32$_x, _this._pixel_uint32$_y, _this._pixel_uint32$_index, _this.image);
    },
    get$length(_) {
      return this.image.numChannels;
    },
    get$palette() {
      return null;
    },
    get$format() {
      return B.Format_5;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_uint32$_x === t1.width) {
        _this._pixel_uint32$_x = 0;
        if (++_this._pixel_uint32$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_uint32$_index + t1.numChannels;
      _this._pixel_uint32$_index = t2;
      return t2 < t1.data.length;
    },
    $index(_, i) {
      var t1, t2;
      C._asInt(i);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + i;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $indexSet(_, i, value) {
      var t1, t2, t3;
      C._asInt(i);
      C._asNum(value);
      t1 = this.image;
      if (i < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + i;
        t3 = D.JSNumber_methods.toInt$0(value);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index;
        t3 = D.JSNumber_methods.toInt$0(r);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + 1;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$g(g) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 1) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(g);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + 2;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$b(_, b) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 2) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + 2;
        t3 = D.JSNumber_methods.toInt$0(b);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t2,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + 3;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    set$a(_, a) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 3) {
        t1 = t1.data;
        t2 = this._pixel_uint32$_index + 3;
        t3 = D.JSNumber_methods.toInt$0(a);
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      return this.get$a(0) / 4294967295;
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, t3, t4, t5, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelUint32)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = J.getInterceptor$asx(other);
        t2 = _this.image;
        t3 = t2.numChannels;
        if (t1.get$length(other) !== t3)
          return false;
        t2 = t2.data;
        t4 = _this._pixel_uint32$_index;
        t5 = t2.length;
        if (!(t4 >= 0 && t4 < t5))
          return C.ioore(t2, t4);
        if (t2[t4] !== t1.$index(other, 0))
          return false;
        if (t3 > 1) {
          t4 = _this._pixel_uint32$_index + 1;
          if (!(t4 >= 0 && t4 < t5))
            return C.ioore(t2, t4);
          if (t2[t4] !== t1.$index(other, 1))
            return false;
          if (t3 > 2) {
            t4 = _this._pixel_uint32$_index + 2;
            if (!(t4 >= 0 && t4 < t5))
              return C.ioore(t2, t4);
            if (t2[t4] !== t1.$index(other, 2))
              return false;
            if (t3 > 3) {
              t3 = _this._pixel_uint32$_index + 3;
              if (!(t3 >= 0 && t3 < t5))
                return C.ioore(t2, t3);
              if (t2[t3] !== t1.$index(other, 3))
                return false;
            }
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUint4.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelUint4(_this._pixel_uint4$_x, _this._pixel_uint4$_y, _this._pixel_uint4$_index, _this._bitIndex, _this.image);
    },
    get$length(_) {
      var t1 = this.image,
        t2 = t1.palette;
      t2 = t2 == null ? null : t2.numChannels;
      return t2 == null ? t1.numChannels : t2;
    },
    get$palette() {
      return this.image.palette;
    },
    get$format() {
      return B.Format_2;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, nc, t3, _this = this,
        t1 = _this.image;
      if (++_this._pixel_uint4$_x === t1.width) {
        _this._pixel_uint4$_x = 0;
        t2 = ++_this._pixel_uint4$_y;
        _this._bitIndex = 0;
        _this._pixel_uint4$_index = t2 * t1.rowStride;
        return t2 < t1.height;
      }
      nc = t1.numChannels;
      t2 = t1.palette != null || nc === 1;
      t3 = _this._bitIndex;
      if (t2) {
        t2 = t3 + 4;
        _this._bitIndex = t2;
        if (t2 > 7) {
          _this._bitIndex = 0;
          ++_this._pixel_uint4$_index;
        }
      } else {
        t2 = _this._bitIndex = t3 + (nc << 2 >>> 0);
        for (; t2 > 7;) {
          t2 -= 8;
          _this._bitIndex = t2;
          ++_this._pixel_uint4$_index;
        }
      }
      t2 = _this._pixel_uint4$_index;
      t1 = t1.__ImageDataUint4_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      return t2 < t1.length;
    },
    _pixel_uint4$_get$1(_, ci) {
      var t1,
        i = this._pixel_uint4$_index,
        bi = 4 - (this._bitIndex + (ci << 2 >>> 0));
      if (bi < 0) {
        bi += 8;
        ++i;
      }
      t1 = this.image.__ImageDataUint4_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      if (!(i >= 0 && i < t1.length))
        return C.ioore(t1, i);
      return D.JSInt_methods._shrReceiverPositive$1(t1[i], bi) & 15;
    },
    _pixel_uint4$_getChannel$1(ci) {
      var t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        t1 = t1.numChannels > ci ? this._pixel_uint4$_get$1(0, ci) : 0;
      else
        t1 = t2.$get$2(0, this._pixel_uint4$_get$1(0, 0), ci);
      return t1;
    },
    _pixel_uint4$_setChannel$2(ci, value) {
      var index, bi, v, vi, mask, t2,
        t1 = this.image;
      if (ci >= t1.numChannels)
        return;
      index = this._pixel_uint4$_index;
      bi = 4 - (this._bitIndex + (ci << 2 >>> 0));
      if (bi < 0) {
        bi += 8;
        ++index;
      }
      t1 = t1.__ImageDataUint4_data_F;
      t1 === $ && C.throwLateFieldNI("data");
      if (!(index >= 0 && index < t1.length))
        return C.ioore(t1, index);
      v = t1[index];
      vi = D.JSInt_methods.clamp$2(D.JSNumber_methods.toInt$0(value), 0, 15);
      mask = bi === 4 ? 15 : 240;
      t2 = D.JSInt_methods.$shl(vi, bi);
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      if (!(index < t1.length))
        return C.ioore(t1, index);
      t1[index] = (v & mask | t2) >>> 0;
    },
    $index(_, i) {
      return this._pixel_uint4$_getChannel$1(C._asInt(i));
    },
    $indexSet(_, i, value) {
      return this._pixel_uint4$_setChannel$2(C._asInt(i), C._asNum(value));
    },
    get$r(_) {
      return this._pixel_uint4$_getChannel$1(0);
    },
    set$r(_, r) {
      this._pixel_uint4$_setChannel$2(0, r);
    },
    get$g() {
      return this._pixel_uint4$_getChannel$1(1);
    },
    set$g(g) {
      this._pixel_uint4$_setChannel$2(1, g);
    },
    get$b(_) {
      return this._pixel_uint4$_getChannel$1(2);
    },
    set$b(_, b) {
      this._pixel_uint4$_setChannel$2(2, b);
    },
    get$a(_) {
      return this._pixel_uint4$_getChannel$1(3);
    },
    set$a(_, a) {
      this._pixel_uint4$_setChannel$2(3, a);
    },
    get$aNormalized() {
      var t1 = this._pixel_uint4$_getChannel$1(3),
        t2 = this.image.palette;
      t2 = t2 == null ? null : t2.get$maxChannelValue();
      return t1 / (t2 == null ? 15 : t2);
    },
    get$luminance() {
      return A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var nc, t1, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelUint4)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        nc = _this.image.numChannels;
        t1 = J.getInterceptor$asx(other);
        if (t1.get$length(other) !== nc)
          return false;
        if (_this._pixel_uint4$_getChannel$1(0) !== t1.$index(other, 0))
          return false;
        if (nc > 1) {
          if (_this._pixel_uint4$_getChannel$1(1) !== t1.$index(other, 1))
            return false;
          if (nc > 2) {
            if (_this._pixel_uint4$_getChannel$1(2) !== t1.$index(other, 2))
              return false;
            if (nc > 3)
              if (_this._pixel_uint4$_getChannel$1(3) !== t1.$index(other, 3))
                return false;
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUint8.prototype = {
    clone$0(_) {
      var _this = this;
      return new A.PixelUint8(_this._pixel_uint8$_x, _this._pixel_uint8$_y, _this._pixel_uint8$_index, _this.image);
    },
    get$length(_) {
      var t1 = this.image,
        t2 = t1.palette;
      t2 = t2 == null ? null : t2.numChannels;
      return t2 == null ? t1.numChannels : t2;
    },
    get$palette() {
      return this.image.palette;
    },
    get$format() {
      return B.Format_3;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this.image;
      if (++_this._pixel_uint8$_x === t1.width) {
        _this._pixel_uint8$_x = 0;
        if (++_this._pixel_uint8$_y === t1.height)
          return false;
      }
      t2 = _this._pixel_uint8$_index;
      t2 += t1.palette == null ? t1.numChannels : 1;
      _this._pixel_uint8$_index = t2;
      return t2 < t1.data.length;
    },
    $get$1(_, ci) {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 != null) {
        t1 = t1.data;
        t3 = this._pixel_uint8$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.$get$2(0, t1[t3], ci);
        t1 = t3;
      } else if (ci < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index + ci;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t2 = t1[t2];
        t1 = t2;
      } else
        t1 = 0;
      return t1;
    },
    $index(_, ci) {
      return this.$get$1(0, C._asInt(ci));
    },
    $indexSet(_, ci, value) {
      var t1, t2, t3;
      C._asInt(ci);
      C._asNum(value);
      t1 = this.image;
      if (ci < t1.numChannels) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index + ci;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(value, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$r(_) {
      var t3,
        t1 = this.image,
        t2 = t1.palette;
      if (t2 == null)
        if (t1.numChannels > 0) {
          t1 = t1.data;
          t2 = this._pixel_uint8$_index;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      else {
        t1 = t1.data;
        t3 = this._pixel_uint8$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getRed$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$r(_, r) {
      var t2, t3,
        t1 = this.image;
      if (t1.numChannels > 0) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(r, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$g() {
      var t3, _this = this,
        t1 = _this.image,
        t2 = t1.palette;
      if (t2 == null) {
        t2 = t1.numChannels;
        if (t2 === 2) {
          t1 = t1.data;
          t2 = _this._pixel_uint8$_index;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else if (t2 > 1) {
          t1 = t1.data;
          t2 = _this._pixel_uint8$_index + 1;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      } else {
        t1 = t1.data;
        t3 = _this._pixel_uint8$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getGreen$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$g(g) {
      var t3,
        t1 = this.image,
        t2 = t1.numChannels;
      if (t2 === 2) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(g, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      } else if (t2 > 1) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(g, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$b(_) {
      var t3, _this = this,
        t1 = _this.image,
        t2 = t1.palette;
      if (t2 == null) {
        t2 = t1.numChannels;
        if (t2 === 2) {
          t1 = t1.data;
          t2 = _this._pixel_uint8$_index;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else if (t2 > 2) {
          t1 = t1.data;
          t2 = _this._pixel_uint8$_index + 2;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 0;
      } else {
        t1 = t1.data;
        t3 = _this._pixel_uint8$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getBlue$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$b(_, b) {
      var t3,
        t1 = this.image,
        t2 = t1.numChannels;
      if (t2 === 2) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(b, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      } else if (t2 > 2) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index + 2;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(b, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$a(_) {
      var t3, _this = this,
        t1 = _this.image,
        t2 = t1.palette;
      if (t2 == null) {
        t2 = t1.numChannels;
        if (t2 === 2) {
          t1 = t1.data;
          t2 = _this._pixel_uint8$_index + 1;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else if (t2 > 3) {
          t1 = t1.data;
          t2 = _this._pixel_uint8$_index + 3;
          if (!(t2 >= 0 && t2 < t1.length))
            return C.ioore(t1, t2);
          t2 = t1[t2];
          t1 = t2;
        } else
          t1 = 255;
      } else {
        t1 = t1.data;
        t3 = _this._pixel_uint8$_index;
        if (!(t3 >= 0 && t3 < t1.length))
          return C.ioore(t1, t3);
        t3 = t2.getAlpha$1(t1[t3]);
        t1 = t3;
      }
      return t1;
    },
    set$a(_, a) {
      var t3,
        t1 = this.image,
        t2 = t1.numChannels;
      if (t2 === 2) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index + 1;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(a, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      } else if (t2 > 3) {
        t1 = t1.data;
        t2 = this._pixel_uint8$_index + 3;
        t3 = D.JSNumber_methods.toInt$0(D.JSNumber_methods.clamp$2(a, 0, 255));
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        t1[t2] = t3;
      }
    },
    get$aNormalized() {
      var t1 = this.get$a(0),
        t2 = this.image.palette;
      t2 = t2 == null ? null : t2.get$maxChannelValue();
      return t1 / (t2 == null ? 255 : t2);
    },
    get$luminance() {
      return this.image.numChannels === 2 ? this.get$r(0) : A.getLuminance(this);
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    $eq(_, other) {
      var t1, t2, nc, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.PixelUint8)
        return C.Object_hashAll(C.List_List$of(_this, true, C._instanceType(_this)._eval$1("Iterable.E"))) === C.Object_hashAll(C.List_List$of(other, true, C._instanceType(other)._eval$1("Iterable.E")));
      if (type$.List_int._is(other)) {
        t1 = _this.image;
        t2 = t1.palette;
        nc = t2 != null ? t2.numChannels : t1.numChannels;
        t1 = J.getInterceptor$asx(other);
        if (t1.get$length(other) !== nc)
          return false;
        if (_this.$get$1(0, 0) !== t1.$index(other, 0))
          return false;
        if (nc > 1) {
          if (_this.$get$1(0, 1) !== t1.$index(other, 1))
            return false;
          if (nc > 2) {
            if (_this.$get$1(0, 2) !== t1.$index(other, 2))
              return false;
            if (nc > 3)
              if (_this.$get$1(0, 3) !== t1.$index(other, 3))
                return false;
          }
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return C.Object_hashAll(C.List_List$of(this, true, C._instanceType(this)._eval$1("Iterable.E")));
    },
    convert$1$format(format) {
      return A.convertColor(this, null, format, null);
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.PixelUndefined.prototype = {
    clone$0(_) {
      return new A.PixelUndefined();
    },
    get$length(_) {
      return 0;
    },
    get$format() {
      return B.Format_3;
    },
    get$palette() {
      return null;
    },
    $index(_, index) {
      C._asInt(index);
      return 0;
    },
    $indexSet(_, index, value) {
      C._asInt(index);
      C._asNum(value);
    },
    get$r(_) {
      return 0;
    },
    set$r(_, r) {
    },
    get$g() {
      return 0;
    },
    set$g(g) {
    },
    get$b(_) {
      return 0;
    },
    set$b(_, b) {
    },
    get$a(_) {
      return 0;
    },
    set$a(_, a) {
    },
    get$aNormalized() {
      return 0;
    },
    get$luminance() {
      return 0;
    },
    get$current(_) {
      return this;
    },
    moveNext$0() {
      return false;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.PixelUndefined;
    },
    get$hashCode(_) {
      return 0;
    },
    get$iterator(_) {
      return new A.ChannelIterator(this);
    },
    convert$1$format(format) {
      return this;
    },
    $isIterator: 1,
    $isColor1: 1,
    $isPixel: 1
  };
  A.ImageException.prototype = {
    toString$0(_) {
      return "ImageException: " + this.message;
    },
    $isException: 1
  };
  A.OutputBuffer.prototype = {
    clear$0(_) {
      this._output_buffer$_buffer = new Uint8Array(8192);
      this.length = 0;
    },
    writeByte$1(value) {
      var t1, t2, _this = this;
      if (_this.length === _this._output_buffer$_buffer.length)
        _this._expandBuffer$0();
      t1 = _this._output_buffer$_buffer;
      t2 = _this.length++;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      if (!(t2 < t1.length))
        return C.ioore(t1, t2);
      t1[t2] = value & 255;
    },
    writeBytes$1(bytes) {
      var len, t1, t2, t3, t4, _this = this;
      type$.List_int._as(bytes);
      len = bytes.length;
      for (; t1 = _this.length, t2 = t1 + len, t3 = _this._output_buffer$_buffer, t4 = t3.length, t2 > t4;)
        _this._expandBuffer$1(t2 - t4);
      D.NativeUint8List_methods.setRange$3(t3, t1, t2, bytes);
      _this.length += len;
    },
    writeUint16$1(value) {
      var _this = this;
      if (_this.bigEndian) {
        _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 8) & 255);
        _this.writeByte$1(value & 255);
        return;
      }
      _this.writeByte$1(value & 255);
      _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 8) & 255);
    },
    writeUint32$1(value) {
      var _this = this;
      if (_this.bigEndian) {
        _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 24) & 255);
        _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 16) & 255);
        _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 8) & 255);
        _this.writeByte$1(value & 255);
        return;
      }
      _this.writeByte$1(value & 255);
      _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 8) & 255);
      _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 16) & 255);
      _this.writeByte$1(D.JSInt_methods._shrOtherPositive$1(value, 24) & 255);
    },
    _expandBuffer$1(required) {
      var blockSize, t1, t2, newBuffer;
      if (required != null)
        blockSize = required;
      else {
        t1 = this._output_buffer$_buffer.length;
        blockSize = t1 === 0 ? 8192 : t1 * 2;
      }
      t1 = this._output_buffer$_buffer;
      t2 = t1.length;
      newBuffer = new Uint8Array(t2 + blockSize);
      D.NativeUint8List_methods.setRange$3(newBuffer, 0, t2, t1);
      this._output_buffer$_buffer = newBuffer;
    },
    _expandBuffer$0() {
      return this._expandBuffer$1(null);
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.Nested.prototype = {
    build$1(context) {
      throw C.wrapException(C.StateError$("implemented internally"));
    },
    createElement$0(_) {
      var t1 = new A._NestedElement(C.LinkedHashSet_LinkedHashSet$_empty(type$._NestedHookElement), null, this, D._ElementLifecycle_0, C.HashSet_HashSet(type$.Element));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Element_rqC.toString$0(0), "package:flutter/widgets.dart", t1);
      return t1;
    },
    $isSingleChildWidget: 1
  };
  A._NestedElement.prototype = {
    get$widget() {
      return type$.Nested._as(C.Element.prototype.get$widget.call(this));
    },
    build$0() {
      var t2, nestedHook, t3, t4, _this = this,
        t1 = _this.SingleChildWidgetElementMixin__parent,
        nextNode = t1 == null ? null : t1._injectedChild;
      if (nextNode == null)
        nextNode = type$.Nested._as(C.Element.prototype.get$widget.call(_this))._nested$_child;
      for (t1 = type$.Nested._as(C.Element.prototype.get$widget.call(_this))._nested$_children, t2 = C._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"), t1 = new C.ReversedListIterable(t1, t2), t1 = new C.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"), nestedHook = null; t1.moveNext$0(); nextNode = nestedHook) {
        t3 = t1.__internal$_current;
        nestedHook = new A._NestedHook(t3 == null ? t2._as(t3) : t3, nextNode, _this, null);
      }
      if (nestedHook != null)
        for (t1 = _this.nodes, t1 = C._LinkedHashSetIterator$(t1, t1._collection$_modifications, C._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          if (t3 == null)
            t3 = t2._as(t3);
          t4 = nestedHook.wrappedWidget;
          if (!J.$eq$(t3._wrappedChild, t4)) {
            t3._wrappedChild = t4;
            t3.markNeedsBuild$0();
          }
          nestedHook = nestedHook.injectedChild;
          t3.set$injectedChild(nestedHook);
          if (!(nestedHook instanceof A._NestedHook))
            break;
        }
      return nextNode;
    }
  };
  A._NestedHook.prototype = {
    createElement$0(_) {
      var t1 = new A._NestedHookElement(this, D._ElementLifecycle_0, C.HashSet_HashSet(type$.Element));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Element_rqC.toString$0(0), "package:flutter/widgets.dart", t1);
      return t1;
    },
    build$1(context) {
      return C.throwExpression(C.StateError$("handled internally"));
    }
  };
  A._NestedHookElement.prototype = {
    get$widget() {
      return type$._NestedHook._as(C.Element.prototype.get$widget.call(this));
    },
    set$injectedChild(value) {
      var t2,
        previous = this._injectedChild,
        t1 = false;
      if (value instanceof A._NestedHook)
        if (previous instanceof A._NestedHook) {
          t1 = value.wrappedWidget;
          t2 = previous.wrappedWidget;
          t1 = C.getRuntimeTypeOfDartObject(t1) === C.getRuntimeTypeOfDartObject(t2) && J.$eq$(t1.key, t2.key);
        }
      if (t1)
        return;
      if (!J.$eq$(previous, value)) {
        this._injectedChild = value;
        this.visitChildren$1(new A._NestedHookElement_injectedChild_closure());
      }
    },
    mount$2($parent, newSlot) {
      var _this = this,
        t1 = type$._NestedHook;
      t1._as(C.Element.prototype.get$widget.call(_this)).owner.nodes.add$1(0, _this);
      _this._wrappedChild = t1._as(C.Element.prototype.get$widget.call(_this)).wrappedWidget;
      _this._injectedChild = t1._as(C.Element.prototype.get$widget.call(_this)).injectedChild;
      _this.super$ComponentElement$mount($parent, newSlot);
    },
    unmount$0() {
      type$._NestedHook._as(C.Element.prototype.get$widget.call(this)).owner.nodes.remove$1(0, this);
      this.super$Element$unmount();
    },
    build$0() {
      var t1 = this._wrappedChild;
      t1.toString;
      return t1;
    }
  };
  A.SingleChildWidgetElementMixin.prototype = {};
  A.SingleChildStatelessWidget.prototype = {
    build$1(context) {
      return this.buildWithChild$2(context, this._nested$_child);
    },
    createElement$0(_) {
      return A.SingleChildStatelessElement$(this);
    },
    $isSingleChildWidget: 1
  };
  A.SingleChildStatelessElement.prototype = {
    build$0() {
      var _this = this;
      if (_this.SingleChildWidgetElementMixin__parent != null)
        return type$.SingleChildStatelessWidget._as(C.Element.prototype.get$widget.call(_this)).buildWithChild$2(_this, _this.SingleChildWidgetElementMixin__parent._injectedChild);
      return _this.super$StatelessElement$build();
    },
    get$widget() {
      return type$.SingleChildStatelessWidget._as(C.Element.prototype.get$widget.call(this));
    }
  };
  A.SingleChildStatefulWidget.prototype = {
    createElement$0(_) {
      return A.SingleChildStatefulElement$(this);
    },
    $isSingleChildWidget: 1
  };
  A.SingleChildState.prototype = {
    build$1(context) {
      return this.buildWithChild$2(context, this._widget._nested$_child);
    }
  };
  A.SingleChildStatefulElement.prototype = {
    get$widget() {
      return type$.SingleChildStatefulWidget._as(C.Element.prototype.get$widget.call(this));
    },
    get$state(_) {
      return type$.SingleChildState_SingleChildStatefulWidget._as(C.StatefulElement.prototype.get$state.call(this, 0));
    },
    build$0() {
      var t1, t2, _this = this;
      if (_this.SingleChildWidgetElementMixin__parent != null) {
        t1 = type$.SingleChildState_SingleChildStatefulWidget._as(C.StatefulElement.prototype.get$state.call(_this, 0));
        t2 = _this.SingleChildWidgetElementMixin__parent._injectedChild;
        t2.toString;
        return t1.buildWithChild$2(_this, t2);
      }
      return _this.super$StatefulElement$build();
    }
  };
  A.SingleChildBuilder.prototype = {
    buildWithChild$2(context, child) {
      return this.builder.call$2(context, child);
    }
  };
  A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin.prototype = {
    mount$2($parent, newSlot) {
      if (type$.nullable__NestedHookElement._is($parent))
        this.SingleChildWidgetElementMixin__parent = $parent;
      this.super$ComponentElement$mount($parent, newSlot);
    },
    activate$0() {
      this.super$StatefulElement$activate();
      this.visitAncestorElements$1(new A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure(this));
    }
  };
  A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin.prototype = {
    mount$2($parent, newSlot) {
      if (type$.nullable__NestedHookElement._is($parent))
        this.SingleChildWidgetElementMixin__parent = $parent;
      this.super$ComponentElement$mount($parent, newSlot);
    },
    activate$0() {
      this.super$Element$activate();
      this.visitAncestorElements$1(new A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure(this));
    }
  };
  A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin.prototype = {
    mount$2($parent, newSlot) {
      if (type$.nullable__NestedHookElement._is($parent))
        this.SingleChildWidgetElementMixin__parent = $parent;
      this.super$ComponentElement$mount($parent, newSlot);
    },
    activate$0() {
      this.super$Element$activate();
      this.visitAncestorElements$1(new A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure(this));
    }
  };
  A._PathOffset.prototype = {
    $add(_, other) {
      type$._PathOffset._as(other);
      return new A._PathOffset(this.dx + other.dx, this.dy + other.dy);
    },
    $sub(_, other) {
      type$._PathOffset._as(other);
      return new A._PathOffset(this.dx - other.dx, this.dy - other.dy);
    },
    $mul(_, operand) {
      return new A._PathOffset(this.dx * operand, this.dy * operand);
    },
    toString$0(_) {
      return "PathOffset{" + C.S(this.dx) + "," + C.S(this.dy) + "}";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._PathOffset && other.dx === this.dx && other.dy === this.dy;
    },
    get$hashCode(_) {
      return ((391 ^ D.JSNumber_methods.get$hashCode(this.dx)) * 23 ^ D.JSNumber_methods.get$hashCode(this.dy)) >>> 0;
    }
  };
  A.SvgPathStringSource.prototype = {
    _skipOptionalSvgSpaces$0() {
      var t1, t2, t3, t4, c, t5, _this = this;
      for (t1 = _this._path_parsing$_string, t2 = t1.length, t3 = _this._path_parsing$_length; true;) {
        t4 = _this._idx;
        if (t4 >= t3)
          return -1;
        if (!(t4 >= 0 && t4 < t2))
          return C.ioore(t1, t4);
        c = t1.charCodeAt(t4);
        if (c <= 32)
          t5 = c === 32 || c === 10 || c === 9 || c === 13 || c === 12;
        else
          t5 = false;
        if (!t5)
          return c;
        _this._idx = t4 + 1;
      }
    },
    _skipOptionalSvgSpacesOrDelimiter$0() {
      if (this._skipOptionalSvgSpaces$0() === 44) {
        ++this._idx;
        this._skipOptionalSvgSpaces$0();
      }
    },
    _maybeImplicitCommand$2(lookahead, nextCommand) {
      var t1;
      if (!(lookahead >= 48 && lookahead <= 57 || lookahead === 43 || lookahead === 45 || lookahead === 46) || this._previousCommand === B.SvgPathSegType_1)
        return nextCommand;
      t1 = this._previousCommand;
      if (t1 === B.SvgPathSegType_2)
        return B.SvgPathSegType_4;
      if (t1 === B.SvgPathSegType_3)
        return B.SvgPathSegType_5;
      return t1;
    },
    _readCodeUnit$0() {
      var t2, _this = this,
        t1 = _this._idx;
      if (t1 >= _this._path_parsing$_length)
        return -1;
      t2 = _this._path_parsing$_string;
      _this._idx = t1 + 1;
      if (!(t1 >= 0 && t1 < t2.length))
        return C.ioore(t2, t1);
      return t2.charCodeAt(t1);
    },
    _parseNumber$0() {
      var c, sign, integer, decimal, frac, number, t1, t2, exponentIsNegative, exponent, _this = this,
        _s16_ = "Numeric overflow";
      _this._skipOptionalSvgSpaces$0();
      c = _this._readCodeUnit$0();
      sign = 1;
      if (c === 43)
        c = _this._readCodeUnit$0();
      else if (c === 45) {
        c = _this._readCodeUnit$0();
        sign = -1;
      }
      if ((c < 48 || c > 57) && c !== 46)
        throw C.wrapException(C.StateError$("First character of a number must be one of [0-9+-.]."));
      integer = 0;
      while (true) {
        if (!(48 <= c && c <= 57))
          break;
        integer = integer * 10 + (c - 48);
        c = _this._readCodeUnit$0();
      }
      if (!(-17976931348623157e292 <= integer && integer <= 17976931348623157e292))
        throw C.wrapException(C.StateError$(_s16_));
      decimal = 0;
      if (c === 46) {
        c = _this._readCodeUnit$0();
        if (c < 48 || c > 57)
          throw C.wrapException(C.StateError$("There must be at least one digit following the ."));
        frac = 1;
        while (true) {
          if (!(48 <= c && c <= 57))
            break;
          frac *= 0.1;
          decimal += (c - 48) * frac;
          c = _this._readCodeUnit$0();
        }
      }
      number = (integer + decimal) * sign;
      t1 = _this._idx;
      t2 = false;
      if (t1 < _this._path_parsing$_length)
        if (c === 101 || c === 69) {
          t2 = _this._path_parsing$_string;
          if (!(t1 >= 0 && t1 < t2.length))
            return C.ioore(t2, t1);
          t1 = t2.charCodeAt(t1) !== 120 && t2.charCodeAt(t1) !== 109;
        } else
          t1 = t2;
      else
        t1 = t2;
      if (t1) {
        c = _this._readCodeUnit$0();
        if (c === 43) {
          c = _this._readCodeUnit$0();
          exponentIsNegative = false;
        } else {
          exponentIsNegative = c === 45;
          if (exponentIsNegative)
            c = _this._readCodeUnit$0();
        }
        if (c < 48 || c > 57)
          throw C.wrapException(C.StateError$("Missing exponent"));
        exponent = 0;
        while (true) {
          if (!(c >= 48 && c <= 57))
            break;
          exponent = exponent * 10 + (c - 48);
          c = _this._readCodeUnit$0();
        }
        if (exponentIsNegative)
          exponent = -exponent;
        if (!(-37 <= exponent && exponent <= 38))
          throw C.wrapException(C.StateError$("Invalid exponent " + exponent));
        if (exponent !== 0)
          number *= Math.pow(10, exponent);
      }
      if (!(-17976931348623157e292 <= number && number <= 17976931348623157e292))
        throw C.wrapException(C.StateError$(_s16_));
      if (c !== -1) {
        --_this._idx;
        _this._skipOptionalSvgSpacesOrDelimiter$0();
      }
      return number;
    },
    _parseArcFlag$0() {
      var t2, flagChar, _this = this,
        t1 = _this._idx;
      if (t1 >= _this._path_parsing$_length)
        throw C.wrapException(C.StateError$("Expected more data"));
      t2 = _this._path_parsing$_string;
      _this._idx = t1 + 1;
      if (!(t1 >= 0 && t1 < t2.length))
        return C.ioore(t2, t1);
      flagChar = t2.charCodeAt(t1);
      _this._skipOptionalSvgSpacesOrDelimiter$0();
      if (flagChar === 48)
        return false;
      else if (flagChar === 49)
        return true;
      else
        throw C.wrapException(C.StateError$("Invalid flag value"));
    },
    parseSegments$0() {
      return new C._SyncStarIterable(this.parseSegments$body$SvgPathStringSource(), type$._SyncStarIterable_PathSegmentData);
    },
    parseSegments$body$SvgPathStringSource() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1;
        return function $async$parseSegments$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._path_parsing$_length;
              case 2:
                // for condition
                if (!($async$self._idx < t1)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$goto = 4;
                return $async$iterator._async$_current = $async$self.parseSegment$0(), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    parseSegment$0() {
      var segment, t1, t2, lookahead, command, target, _this = this;
      C.assertHelper(_this._idx < _this._path_parsing$_length);
      segment = A.PathSegmentData$();
      t1 = _this._path_parsing$_string;
      t2 = _this._idx;
      if (!(t2 >= 0 && t2 < t1.length))
        return C.ioore(t1, t2);
      lookahead = t1.charCodeAt(t2);
      command = B.Map_42CKi.$index(0, lookahead);
      if (command == null)
        command = B.SvgPathSegType_0;
      if (_this._previousCommand === B.SvgPathSegType_0) {
        if (command !== B.SvgPathSegType_3 && command !== B.SvgPathSegType_2)
          throw C.wrapException(C.StateError$("Expected to find moveTo command"));
        ++_this._idx;
      } else if (command === B.SvgPathSegType_0) {
        command = _this._maybeImplicitCommand$2(lookahead, command);
        if (command === B.SvgPathSegType_0)
          throw C.wrapException(C.StateError$("Expected a path command"));
      } else
        ++_this._idx;
      segment.command = _this._previousCommand = command;
      switch (command.index) {
        case 7:
        case 6:
          target = 1;
          break;
        case 17:
        case 16:
          target = 2;
          break;
        case 3:
        case 2:
        case 5:
        case 4:
        case 19:
        case 18:
          target = 3;
          break;
        case 13:
        case 12:
          target = 4;
          break;
        case 15:
        case 14:
          target = 5;
          break;
        case 1:
          target = 6;
          break;
        case 9:
        case 8:
          target = 7;
          break;
        case 11:
        case 10:
          target = 8;
          break;
        case 0:
          target = 9;
          break;
        default:
          target = null;
          break;
      }
      if (target)
        c$0:
          for (; true;)
            switch (target) {
              case 1:
                segment.point1 = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                target = 2;
                continue c$0;
              case 2:
                segment.point2 = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                target = 3;
                continue c$0;
              case 3:
                segment.targetPoint = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                break c$0;
              case 4:
                segment.targetPoint = new A._PathOffset(_this._parseNumber$0(), segment.targetPoint.dy);
                break c$0;
              case 5:
                segment.targetPoint = new A._PathOffset(segment.targetPoint.dx, _this._parseNumber$0());
                break c$0;
              case 6:
                _this._skipOptionalSvgSpaces$0();
                break c$0;
              case 7:
                segment.point1 = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                segment.targetPoint = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                break c$0;
              case 8:
                segment.point1 = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                segment.point2 = new A._PathOffset(_this._parseNumber$0(), segment.point2.dy);
                segment.arcLarge = _this._parseArcFlag$0();
                segment.arcSweep = _this._parseArcFlag$0();
                segment.targetPoint = new A._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                break c$0;
              case 9:
                throw C.wrapException(C.StateError$("Unknown segment command"));
            }
      return segment;
    }
  };
  A.PathSegmentData.prototype = {
    toString$0(_) {
      var _this = this;
      return "PathSegmentData{" + _this.command.toString$0(0) + " " + _this.targetPoint.toString$0(0) + " " + _this.point1.toString$0(0) + " " + _this.point2.toString$0(0) + " " + _this.arcSweep + " " + _this.arcLarge + "}";
    }
  };
  A.SvgPathNormalizer.prototype = {
    emitSegment$2(segment, path) {
      var target, t1, t2, t3, t4, t5, t6, _this = this;
      switch (segment.command.index) {
        case 9:
          target = 1;
          break;
        case 7:
          target = 2;
          break;
        case 17:
          target = 3;
          break;
        case 3:
        case 5:
        case 13:
        case 15:
        case 19:
        case 11:
          target = 4;
          break;
        case 12:
          target = 5;
          break;
        case 14:
          target = 6;
          break;
        case 1:
          target = 7;
          break;
        default:
          target = 8;
          break;
      }
      c$0:
        for (; true;)
          switch (target) {
            case 1:
              t1 = segment.point1;
              t2 = _this._currentPoint;
              t3 = t2.dx;
              t2 = t2.dy;
              segment.point1 = new A._PathOffset(t1.dx + t3, t1.dy + t2);
              t1 = segment.targetPoint;
              segment.targetPoint = new A._PathOffset(t1.dx + t3, t1.dy + t2);
              break c$0;
            case 2:
              t1 = segment.point1;
              t2 = _this._currentPoint;
              segment.point1 = new A._PathOffset(t1.dx + t2.dx, t1.dy + t2.dy);
              target = 3;
              continue c$0;
            case 3:
              t1 = segment.point2;
              t2 = _this._currentPoint;
              segment.point2 = new A._PathOffset(t1.dx + t2.dx, t1.dy + t2.dy);
              target = 4;
              continue c$0;
            case 4:
              t1 = segment.targetPoint;
              t2 = _this._currentPoint;
              segment.targetPoint = new A._PathOffset(t1.dx + t2.dx, t1.dy + t2.dy);
              break c$0;
            case 5:
              segment.targetPoint = new A._PathOffset(segment.targetPoint.dx, _this._currentPoint.dy);
              break c$0;
            case 6:
              segment.targetPoint = new A._PathOffset(_this._currentPoint.dx, segment.targetPoint.dy);
              break c$0;
            case 7:
              segment.targetPoint = _this._subPathPoint;
              break c$0;
            case 8:
              break c$0;
          }
      switch (segment.command.index) {
        case 3:
        case 2:
          target = 1;
          break;
        case 5:
        case 4:
        case 13:
        case 12:
        case 15:
        case 14:
          target = 2;
          break;
        case 1:
          target = 3;
          break;
        case 17:
        case 16:
          target = 4;
          break;
        case 7:
        case 6:
          target = 5;
          break;
        case 19:
        case 18:
          target = 6;
          break;
        case 9:
        case 8:
          target = 7;
          break;
        case 11:
        case 10:
          target = 8;
          break;
        default:
          target = 9;
          break;
      }
      c$3:
        for (; true;)
          switch (target) {
            case 1:
              t1 = _this._subPathPoint = segment.targetPoint;
              D.JSArray_methods.add$1(path._path$_commands, new A.MoveToCommand(t1.dx, t1.dy, B.PathCommandType_0));
              break c$3;
            case 2:
              t1 = segment.targetPoint;
              D.JSArray_methods.add$1(path._path$_commands, new A.LineToCommand(t1.dx, t1.dy, B.PathCommandType_1));
              break c$3;
            case 3:
              D.JSArray_methods.add$1(path._path$_commands, B.CloseCommand_PathCommandType_3);
              break c$3;
            case 4:
              t1 = _this._lastCommand;
              t1 = t1 === B.SvgPathSegType_6 || t1 === B.SvgPathSegType_7 || t1 === B.SvgPathSegType_16 || t1 === B.SvgPathSegType_17;
              t2 = _this._currentPoint;
              if (!t1)
                segment.point1 = t2;
              else {
                t1 = _this._controlPoint;
                segment.point1 = new A._PathOffset(2 * t2.dx - t1.dx, 2 * t2.dy - t1.dy);
              }
              target = 5;
              continue c$3;
            case 5:
              t1 = _this._controlPoint = segment.point2;
              t2 = segment.point1;
              t3 = segment.targetPoint;
              D.JSArray_methods.add$1(path._path$_commands, new A.CubicToCommand(t2.dx, t2.dy, t1.dx, t1.dy, t3.dx, t3.dy, B.PathCommandType_2));
              break c$3;
            case 6:
              t1 = _this._lastCommand;
              t1 = t1 === B.SvgPathSegType_8 || t1 === B.SvgPathSegType_9 || t1 === B.SvgPathSegType_18 || t1 === B.SvgPathSegType_19;
              t2 = _this._currentPoint;
              if (!t1)
                segment.point1 = t2;
              else {
                t1 = _this._controlPoint;
                segment.point1 = new A._PathOffset(2 * t2.dx - t1.dx, 2 * t2.dy - t1.dy);
              }
              target = 7;
              continue c$3;
            case 7:
              t1 = _this._controlPoint = segment.point1;
              t2 = _this._currentPoint;
              t3 = 2 * t1.dx;
              t4 = (t2.dx + t3) * 0.3333333333333333;
              t1 = 2 * t1.dy;
              t2 = (t2.dy + t1) * 0.3333333333333333;
              segment.point1 = new A._PathOffset(t4, t2);
              t5 = segment.targetPoint;
              t6 = t5.dx;
              t3 = (t6 + t3) * 0.3333333333333333;
              t5 = t5.dy;
              t1 = (t5 + t1) * 0.3333333333333333;
              segment.point2 = new A._PathOffset(t3, t1);
              D.JSArray_methods.add$1(path._path$_commands, new A.CubicToCommand(t4, t2, t3, t1, t6, t5, B.PathCommandType_2));
              break c$3;
            case 8:
              if (!_this._decomposeArcToCubic$3(_this._currentPoint, segment, path)) {
                t1 = segment.targetPoint;
                D.JSArray_methods.add$1(path._path$_commands, new A.LineToCommand(t1.dx, t1.dy, B.PathCommandType_1));
              }
              break c$3;
            case 9:
              throw C.wrapException(C.StateError$("Invalid command type in path"));
          }
      t1 = segment.targetPoint;
      _this._currentPoint = t1;
      t2 = segment.command;
      if (!A.isCubicCommand(t2) && !A.isQuadraticCommand(t2))
        _this._controlPoint = t1;
      _this._lastCommand = t2;
    },
    _decomposeArcToCubic$3(currentPoint, arcSegment, path) {
      var angle, midPointDistance, pointTransform, transformedMidPoint, t2, t3, radiiScale, point1, point2, delta, scaleFactor, centerPoint, theta1, thetaArc, segments, i, startTheta, endTheta, t, sinStartTheta, cosStartTheta, sinEndTheta, cosEndTheta, t4, t5, t6, t7, _this = this,
        t1 = arcSegment.point1,
        rx = Math.abs(t1.dx),
        ry = Math.abs(t1.dy);
      if (rx === 0 || ry === 0)
        return false;
      if (arcSegment.targetPoint.$eq(0, currentPoint))
        return false;
      angle = arcSegment.point2.dx * 0.017453292519943295;
      midPointDistance = currentPoint.$sub(0, arcSegment.targetPoint).$mul(0, 0.5);
      pointTransform = new A.Matrix41(new Float32Array(16));
      pointTransform.setIdentity$0();
      t1 = -angle;
      pointTransform.rotateZ$1(t1);
      transformedMidPoint = _this._mapPoint$2(pointTransform, new A._PathOffset(midPointDistance.dx, midPointDistance.dy));
      t2 = transformedMidPoint.dx;
      t3 = transformedMidPoint.dy;
      radiiScale = t2 * t2 / (rx * rx) + t3 * t3 / (ry * ry);
      if (radiiScale > 1) {
        rx *= Math.sqrt(radiiScale);
        ry *= Math.sqrt(radiiScale);
      }
      pointTransform.setIdentity$0();
      pointTransform.scale$2(0, 1 / rx, 1 / ry);
      pointTransform.rotateZ$1(t1);
      point1 = _this._mapPoint$2(pointTransform, currentPoint);
      point2 = _this._mapPoint$2(pointTransform, arcSegment.targetPoint);
      delta = point2.$sub(0, point1);
      t1 = delta.dx;
      t2 = delta.dy;
      scaleFactor = Math.sqrt(Math.max(1 / (t1 * t1 + t2 * t2) - 0.25, 0));
      if (!isFinite(scaleFactor))
        scaleFactor = 0;
      delta = delta.$mul(0, arcSegment.arcSweep === arcSegment.arcLarge ? -scaleFactor : scaleFactor);
      t1 = point1.$add(0, point2).$mul(0, 0.5);
      t2 = t1.dx + -delta.dy;
      t1 = t1.dy + delta.dx;
      centerPoint = new A._PathOffset(t2, t1);
      point1 = point1.$sub(0, centerPoint);
      theta1 = Math.atan2(point1.dy, point1.dx);
      point2 = point2.$sub(0, centerPoint);
      thetaArc = Math.atan2(point2.dy, point2.dx) - theta1;
      if (thetaArc < 0 && arcSegment.arcSweep)
        thetaArc += 6.283185307179586;
      else if (thetaArc > 0 && !arcSegment.arcSweep)
        thetaArc -= 6.283185307179586;
      pointTransform.setIdentity$0();
      pointTransform.rotateZ$1(angle);
      pointTransform.scale$2(0, rx, ry);
      segments = D.JSNumber_methods.ceil$0(Math.abs(thetaArc / 1.5717963267948964));
      for (t3 = path._path$_commands, i = 0; i < segments;) {
        startTheta = theta1 + i * thetaArc / segments;
        ++i;
        endTheta = theta1 + i * thetaArc / segments;
        t = 1.3333333333333333 * Math.tan(0.25 * (endTheta - startTheta));
        if (!isFinite(t))
          return false;
        sinStartTheta = Math.sin(startTheta);
        cosStartTheta = Math.cos(startTheta);
        sinEndTheta = Math.sin(endTheta);
        cosEndTheta = Math.cos(endTheta);
        t4 = cosEndTheta + t2;
        t5 = sinEndTheta + t1;
        t6 = _this._mapPoint$2(pointTransform, new A._PathOffset(cosStartTheta - t * sinStartTheta + t2, sinStartTheta + t * cosStartTheta + t1));
        t7 = _this._mapPoint$2(pointTransform, new A._PathOffset(t4 + t * sinEndTheta, t5 + -t * cosEndTheta));
        t5 = _this._mapPoint$2(pointTransform, new A._PathOffset(t4, t5));
        D.JSArray_methods.add$1(t3, new A.CubicToCommand(t6.dx, t6.dy, t7.dx, t7.dy, t5.dx, t5.dy, B.PathCommandType_2));
      }
      return true;
    },
    _mapPoint$2(transform, point) {
      var t1 = transform._vector_math$_m4storage,
        t2 = point.dx,
        t3 = point.dy;
      return new A._PathOffset(t1[0] * t2 + t1[4] * t3 + t1[12], t1[1] * t2 + t1[5] * t3 + t1[13]);
    }
  };
  A.SvgPathSegType.prototype = {
    _enumToString$0() {
      return "SvgPathSegType." + this._name;
    }
  };
  A.Context1.prototype = {
    toString$0(_) {
      return "Context[" + A.Token_positionString(this.buffer, this.position) + "]";
    }
  };
  A.ParserException.prototype = {
    get$message(_) {
      return this.failure.message;
    },
    get$offset(_) {
      return this.failure.position;
    },
    get$source(_) {
      return this.failure.buffer;
    },
    toString$0(_) {
      var t1 = this.failure;
      return this.super$Object$toString(0) + ": " + t1.message + " (at " + A.Token_positionString(t1.buffer, t1.position) + ")";
    },
    $isException: 1,
    $isFormatException: 1
  };
  A.Parser.prototype = {
    fastParseOn$2(buffer, position) {
      var result = this.parseOn$1(new A.Context1(buffer, position));
      return result instanceof A.Failure ? -1 : result.position;
    },
    get$children(_) {
      return B.List_empty27;
    },
    replace$2(_, source, target) {
    },
    toString$0(_) {
      var result = this.super$Object$toString(0);
      return D.JSString_methods.startsWith$1(result, "Instance of '") ? D.JSString_methods.replaceFirst$2(D.JSString_methods.substring$1(result, 13), "'", "") : result;
    }
  };
  A.Result.prototype = {};
  A.Success.prototype = {
    get$message(_) {
      return C.throwExpression(C.UnsupportedError$("Successful parse results do not have a message."));
    },
    toString$0(_) {
      return "Success[" + A.Token_positionString(this.buffer, this.position) + "]: " + C.S(this.value);
    },
    get$value(receiver) {
      return this.value;
    }
  };
  A.Failure.prototype = {
    get$value(_) {
      return C.throwExpression(new A.ParserException(this));
    },
    toString$0(_) {
      return "Failure[" + A.Token_positionString(this.buffer, this.position) + "]: " + this.message;
    },
    get$message(receiver) {
      return this.message;
    }
  };
  A.Token0.prototype = {
    get$length(_) {
      return this.stop - this.start;
    },
    toString$0(_) {
      return "Token[" + A.Token_positionString(this.buffer, this.start) + "]: " + C.S(this.value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Token0 && J.$eq$(this.value, other.value) && this.start === other.start && this.stop === other.stop;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.value) + D.JSInt_methods.get$hashCode(this.start) + D.JSInt_methods.get$hashCode(this.stop);
    }
  };
  A.ReferenceParser.prototype = {
    parseOn$1(context) {
      return A._throwUnsupported();
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A.ReferenceParser) {
        t1 = J.$eq$(this.$function, other.$function);
        if (!t1)
          return false;
        for (t1 = this.$arguments; false;) {
          if (0 >= 0)
            return C.ioore(t1, 0);
          return false;
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.$function);
    },
    $isResolvableParser: 1
  };
  A.MatchesIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.MatchesIterator(_this.parser, _this.input, false, _this.start, _this.$ti._eval$1("MatchesIterator<1>"));
    }
  };
  A.MatchesIterator.prototype = {
    get$current(_) {
      var t1 = this.__MatchesIterator_current_A;
      t1 === $ && C.throwLateFieldNI("current");
      return t1;
    },
    moveNext$0() {
      var t1, t2, t3, t4, end, _this = this;
      for (t1 = _this.input, t2 = t1.length, t3 = _this.parser; t4 = _this.start, t4 <= t2;) {
        end = t3.delegate.fastParseOn$2(t1, t4);
        t4 = _this.start;
        if (end < 0)
          _this.start = t4 + 1;
        else {
          t1 = t3.parseOn$1(new A.Context1(t1, t4));
          _this.set$__MatchesIterator_current_A(_this.$ti._precomputed1._as(t1.get$value(t1)));
          t1 = _this.start;
          if (t1 === end)
            _this.start = t1 + 1;
          else
            _this.start = end;
          return true;
        }
      }
      return false;
    },
    set$__MatchesIterator_current_A(__MatchesIterator_current_A) {
      this.__MatchesIterator_current_A = this.$ti._precomputed1._as(__MatchesIterator_current_A);
    },
    $isIterator: 1
  };
  A.FlattenParser.prototype = {
    parseOn$1(context) {
      var output,
        t1 = context.buffer,
        t2 = context.position,
        position = this.delegate.fastParseOn$2(t1, t2);
      if (position < 0)
        return new A.Failure(this.message, t1, t2);
      output = D.JSString_methods.substring$2(t1, t2, position);
      return new A.Success(output, t1, position, type$.Success_String);
    },
    fastParseOn$2(buffer, position) {
      return this.delegate.fastParseOn$2(buffer, position);
    },
    toString$0(_) {
      var t1 = this.super$Parser$toString(0);
      return t1 + "[" + this.message + "]";
    }
  };
  A.MapParser.prototype = {
    parseOn$1(context) {
      var t1, t2,
        result = this.delegate.parseOn$1(context);
      if (result instanceof A.Failure)
        return result;
      t1 = this.$ti;
      t2 = t1._rest[1]._as(this.callback.call$1(result.get$value(result)));
      return new A.Success(t2, result.buffer, result.position, t1._eval$1("Success<2>"));
    },
    fastParseOn$2(buffer, position) {
      var t1 = this.delegate.fastParseOn$2(buffer, position);
      return t1;
    }
  };
  A.TokenParser.prototype = {
    parseOn$1(context) {
      var t1, t2, t3,
        result = this.delegate.parseOn$1(context);
      if (result instanceof A.Failure)
        return result;
      t1 = result.position;
      t2 = this.$ti;
      t3 = t2._eval$1("Token0<1>");
      t3 = t3._as(new A.Token0(result.get$value(result), context.buffer, context.position, t1, t3));
      return new A.Success(t3, result.buffer, t1, t2._eval$1("Success<Token0<1>>"));
    },
    fastParseOn$2(buffer, position) {
      return this.delegate.fastParseOn$2(buffer, position);
    }
  };
  A.SingleCharPredicate.prototype = {
    test$1(value) {
      return this.value === value;
    }
  };
  A.ConstantCharPredicate.prototype = {
    test$1(value) {
      return this.constant;
    }
  };
  A.LookupCharPredicate.prototype = {
    LookupCharPredicate$1(ranges) {
      var t1, t2, t3, t4, t5, _i, range, index, t6, t7, t8, t9;
      for (t1 = ranges.length, t2 = this.start, t3 = this.bits, t4 = t3.length, t5 = t3.$flags | 0, _i = 0; _i < t1; ++_i) {
        range = ranges[_i];
        for (index = range.start - t2, t6 = range.stop - t2; index <= t6; ++index) {
          t7 = D.JSInt_methods._shrOtherPositive$1(index, 5);
          if (!(t7 < t4))
            return C.ioore(t3, t7);
          t8 = t3[t7];
          t9 = B.List_w8c[index & 31];
          t5 & 2 && C.throwUnsupportedOperation(t3);
          t3[t7] = (t8 | t9) >>> 0;
        }
      }
    },
    test$1(value) {
      var t3,
        t1 = this.start,
        t2 = false;
      if (t1 <= value)
        if (value <= this.stop) {
          t1 = value - t1;
          t2 = this.bits;
          t3 = D.JSInt_methods._shrOtherPositive$1(t1, 5);
          if (!(t3 < t2.length))
            return C.ioore(t2, t3);
          t1 = (t2[t3] & B.List_w8c[t1 & 31]) >>> 0 !== 0;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    $isCharacterPredicate: 1
  };
  A.NotCharacterPredicate.prototype = {
    test$1(value) {
      return !this.predicate.test$1(value);
    }
  };
  A.CharacterPredicate.prototype = {};
  A.RangeCharPredicate.prototype = {
    test$1(value) {
      return this.start <= value && value <= this.stop;
    },
    $isCharacterPredicate: 1
  };
  A.WhitespaceCharPredicate.prototype = {
    test$1(value) {
      if (value < 256)
        switch (value) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (value) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    $isCharacterPredicate: 1
  };
  A.ChoiceParser.prototype = {
    parseOn$1(context) {
      var result, t3, failure, i,
        t1 = this.children,
        t2 = t1.length;
      if (0 >= t2)
        return C.ioore(t1, 0);
      result = t1[0].parseOn$1(context);
      if (!(result instanceof A.Failure))
        return result;
      for (t3 = this.failureJoiner, failure = result, i = 1; i < t2; ++i) {
        result = t1[i].parseOn$1(context);
        if (!(result instanceof A.Failure))
          return result;
        failure = t3.call$2(failure, result);
      }
      return failure;
    },
    fastParseOn$2(buffer, position) {
      var t1, t2, result, i;
      for (t1 = this.children, t2 = t1.length, result = -1, i = 0; i < t2; ++i) {
        result = t1[i].fastParseOn$2(buffer, position);
        if (result >= 0)
          return result;
      }
      return result;
    }
  };
  A.DelegateParser.prototype = {
    get$children(_) {
      return C._setArrayType([this.delegate], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.delegate.$eq(0, source))
        _this.set$delegate(C._instanceType(_this)._eval$1("Parser<DelegateParser.T>")._as(target));
    },
    set$delegate(delegate) {
      this.delegate = C._instanceType(this)._eval$1("Parser<DelegateParser.T>")._as(delegate);
    }
  };
  A.SequenceParser2.prototype = {
    parseOn$1(context) {
      var result2, t1,
        result1 = this.parser1.parseOn$1(context);
      if (result1 instanceof A.Failure)
        return result1;
      result2 = this.parser2.parseOn$1(result1);
      if (result2 instanceof A.Failure)
        return result2;
      t1 = this.$ti;
      result1 = t1._eval$1("+(1,2)")._as(new C._Record_2(result1.get$value(result1), result2.get$value(result2)));
      return new A.Success(result1, result2.buffer, result2.position, t1._eval$1("Success<+(1,2)>"));
    },
    fastParseOn$2(buffer, position) {
      position = this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      return C._setArrayType([this.parser1, this.parser2], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    }
  };
  A.SequenceParser3.prototype = {
    parseOn$1(context) {
      var result2, result3, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof A.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof A.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof A.Failure)
        return result3;
      t1 = _this.$ti;
      result2 = t1._eval$1("+(1,2,3)")._as(new C._Record_3(result1.get$value(result1), result2.get$value(result2), result3.get$value(result3)));
      return new A.Success(result2, result3.buffer, result3.position, t1._eval$1("Success<+(1,2,3)>"));
    },
    fastParseOn$2(buffer, position) {
      position = this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      return C._setArrayType([this.parser1, this.parser2, this.parser3], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    }
  };
  A.SequenceParser4.prototype = {
    parseOn$1(context) {
      var result2, result3, result4, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof A.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof A.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof A.Failure)
        return result3;
      result4 = _this.parser4.parseOn$1(result3);
      if (result4 instanceof A.Failure)
        return result4;
      t1 = _this.$ti;
      result3 = t1._eval$1("+(1,2,3,4)")._as(new C._Record_4([result1.get$value(result1), result2.get$value(result2), result3.get$value(result3), result4.get$value(result4)]));
      return new A.Success(result3, result4.buffer, result4.position, t1._eval$1("Success<+(1,2,3,4)>"));
    },
    fastParseOn$2(buffer, position) {
      var _this = this;
      position = _this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser4.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      var _this = this;
      return C._setArrayType([_this.parser1, _this.parser2, _this.parser3, _this.parser4], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
      if (_this.parser4.$eq(0, source))
        _this.set$parser4(_this.$ti._eval$1("Parser<4>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    },
    set$parser4(parser4) {
      this.parser4 = this.$ti._eval$1("Parser<4>")._as(parser4);
    }
  };
  A.SequenceParser5.prototype = {
    parseOn$1(context) {
      var result2, result3, result4, result5, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof A.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof A.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof A.Failure)
        return result3;
      result4 = _this.parser4.parseOn$1(result3);
      if (result4 instanceof A.Failure)
        return result4;
      result5 = _this.parser5.parseOn$1(result4);
      if (result5 instanceof A.Failure)
        return result5;
      t1 = _this.$ti;
      result4 = t1._eval$1("+(1,2,3,4,5)")._as(new C._Record_5([result1.get$value(result1), result2.get$value(result2), result3.get$value(result3), result4.get$value(result4), result5.get$value(result5)]));
      return new A.Success(result4, result5.buffer, result5.position, t1._eval$1("Success<+(1,2,3,4,5)>"));
    },
    fastParseOn$2(buffer, position) {
      var _this = this;
      position = _this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser4.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser5.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      var _this = this;
      return C._setArrayType([_this.parser1, _this.parser2, _this.parser3, _this.parser4, _this.parser5], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
      if (_this.parser4.$eq(0, source))
        _this.set$parser4(_this.$ti._eval$1("Parser<4>")._as(target));
      if (_this.parser5.$eq(0, source))
        _this.set$parser5(_this.$ti._eval$1("Parser<5>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    },
    set$parser4(parser4) {
      this.parser4 = this.$ti._eval$1("Parser<4>")._as(parser4);
    },
    set$parser5(parser5) {
      this.parser5 = this.$ti._eval$1("Parser<5>")._as(parser5);
    }
  };
  A.SequenceParser8.prototype = {
    parseOn$1(context) {
      var result2, result3, result4, result5, result6, result7, result8, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof A.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof A.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof A.Failure)
        return result3;
      result4 = _this.parser4.parseOn$1(result3);
      if (result4 instanceof A.Failure)
        return result4;
      result5 = _this.parser5.parseOn$1(result4);
      if (result5 instanceof A.Failure)
        return result5;
      result6 = _this.parser6.parseOn$1(result5);
      if (result6 instanceof A.Failure)
        return result6;
      result7 = _this.parser7.parseOn$1(result6);
      if (result7 instanceof A.Failure)
        return result7;
      result8 = _this.parser8.parseOn$1(result7);
      if (result8 instanceof A.Failure)
        return result8;
      t1 = _this.$ti;
      result7 = t1._eval$1("+(1,2,3,4,5,6,7,8)")._as(new C._Record_8([result1.get$value(result1), result2.get$value(result2), result3.get$value(result3), result4.get$value(result4), result5.get$value(result5), result6.get$value(result6), result7.get$value(result7), result8.get$value(result8)]));
      return new A.Success(result7, result8.buffer, result8.position, t1._eval$1("Success<+(1,2,3,4,5,6,7,8)>"));
    },
    fastParseOn$2(buffer, position) {
      var _this = this;
      position = _this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser4.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser5.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser6.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser7.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser8.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      var _this = this;
      return C._setArrayType([_this.parser1, _this.parser2, _this.parser3, _this.parser4, _this.parser5, _this.parser6, _this.parser7, _this.parser8], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
      if (_this.parser4.$eq(0, source))
        _this.set$parser4(_this.$ti._eval$1("Parser<4>")._as(target));
      if (_this.parser5.$eq(0, source))
        _this.set$parser5(_this.$ti._eval$1("Parser<5>")._as(target));
      if (_this.parser6.$eq(0, source))
        _this.set$parser6(_this.$ti._eval$1("Parser<6>")._as(target));
      if (_this.parser7.$eq(0, source))
        _this.set$parser7(_this.$ti._eval$1("Parser<7>")._as(target));
      if (_this.parser8.$eq(0, source))
        _this.set$parser8(_this.$ti._eval$1("Parser<8>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    },
    set$parser4(parser4) {
      this.parser4 = this.$ti._eval$1("Parser<4>")._as(parser4);
    },
    set$parser5(parser5) {
      this.parser5 = this.$ti._eval$1("Parser<5>")._as(parser5);
    },
    set$parser6(parser6) {
      this.parser6 = this.$ti._eval$1("Parser<6>")._as(parser6);
    },
    set$parser7(parser7) {
      this.parser7 = this.$ti._eval$1("Parser<7>")._as(parser7);
    },
    set$parser8(parser8) {
      this.parser8 = this.$ti._eval$1("Parser<8>")._as(parser8);
    }
  };
  A.ListParser.prototype = {
    replace$2(_, source, target) {
      var t1, t2, t3, i;
      this.super$Parser$replace(0, source, target);
      for (t1 = this.children, t2 = t1.length, t3 = this.$ti._eval$1("Parser<ListParser.R>"), i = 0; i < t2; ++i)
        if (t1[i].$eq(0, source))
          D.JSArray_methods.$indexSet(t1, i, t3._as(target));
    },
    get$children(receiver) {
      return this.children;
    }
  };
  A.OptionalParser.prototype = {
    parseOn$1(context) {
      var t1, t2,
        result = this.delegate.parseOn$1(context);
      if (!(result instanceof A.Failure))
        return result;
      t1 = this.$ti;
      t2 = t1._precomputed1._as(this.otherwise);
      return new A.Success(t2, context.buffer, context.position, t1._eval$1("Success<1>"));
    },
    fastParseOn$2(buffer, position) {
      var result = this.delegate.fastParseOn$2(buffer, position);
      return result < 0 ? position : result;
    }
  };
  A.SkipParser.prototype = {
    parseOn$1(context) {
      var resultContext, afterContext, t1, t2, _this = this,
        beforeContext = _this.before.parseOn$1(context);
      if (beforeContext instanceof A.Failure)
        return beforeContext;
      resultContext = _this.delegate.parseOn$1(beforeContext);
      if (resultContext instanceof A.Failure)
        return resultContext;
      afterContext = _this.after.parseOn$1(resultContext);
      if (afterContext instanceof A.Failure)
        return afterContext;
      t1 = _this.$ti;
      t2 = t1._precomputed1._as(resultContext.get$value(resultContext));
      return new A.Success(t2, afterContext.buffer, afterContext.position, t1._eval$1("Success<1>"));
    },
    fastParseOn$2(buffer, position) {
      position = this.before.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.delegate.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return this.after.fastParseOn$2(buffer, position);
    },
    get$children(_) {
      return C._setArrayType([this.before, this.delegate, this.after], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$DelegateParser$replace(0, source, target);
      if (_this.before.$eq(0, source))
        _this.before = target;
      if (_this.after.$eq(0, source))
        _this.after = target;
    }
  };
  A.EpsilonParser.prototype = {
    parseOn$1(context) {
      var t1 = this.$ti,
        t2 = t1._precomputed1._as(this.result);
      return new A.Success(t2, context.buffer, context.position, t1._eval$1("Success<1>"));
    },
    fastParseOn$2(buffer, position) {
      return position;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + C.S(this.result) + "]";
    }
  };
  A.NewlineParser.prototype = {
    parseOn$1(context) {
      var t2,
        buffer = context.buffer,
        position = context.position,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        switch (buffer.charCodeAt(position)) {
          case 10:
            return new A.Success("\n", buffer, position + 1, type$.Success_String);
          case 13:
            t2 = position + 1;
            if (t2 < t1 && buffer.charCodeAt(t2) === 10)
              return new A.Success("\r\n", buffer, position + 2, type$.Success_String);
            else
              return new A.Success("\r", buffer, t2, type$.Success_String);
        }
      }
      return new A.Failure(this.message, buffer, position);
    },
    fastParseOn$2(buffer, position) {
      var t2,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        switch (buffer.charCodeAt(position)) {
          case 10:
            return position + 1;
          case 13:
            t2 = position + 1;
            return t2 < t1 && buffer.charCodeAt(t2) === 10 ? position + 2 : t2;
        }
      }
      return -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    }
  };
  A.AnyCharacterParser.prototype = {
    parseOn$1(context) {
      var buffer = context.buffer,
        position = context.position,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        t1 = buffer[position];
        return new A.Success(t1, buffer, position + 1, type$.Success_String);
      }
      return new A.Failure(this.message, buffer, position);
    },
    fastParseOn$2(buffer, position) {
      return position < buffer.length ? position + 1 : -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    }
  };
  A.SingleCharacterParser.prototype = {
    parseOn$1(context) {
      var t2,
        buffer = context.buffer,
        position = context.position,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        t2 = this.predicate.test$1(buffer.charCodeAt(position));
      } else
        t2 = false;
      if (t2) {
        if (!(position >= 0 && position < t1))
          return C.ioore(buffer, position);
        t1 = buffer[position];
        return new A.Success(t1, buffer, position + 1, type$.Success_String);
      }
      return new A.Failure(this.message, buffer, position);
    },
    fastParseOn$2(buffer, position) {
      var t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        t1 = this.predicate.test$1(buffer.charCodeAt(position));
      } else
        t1 = false;
      return t1 ? position + 1 : -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    }
  };
  A.PredicateParser.prototype = {
    parseOn$1(context) {
      var result,
        start = context.position,
        $stop = start + this.length,
        t1 = context.buffer;
      if ($stop <= t1.length) {
        result = D.JSString_methods.substring$2(t1, start, $stop);
        if (C.boolConversionCheck(this.predicate.call$1(result)))
          return new A.Success(result, t1, $stop, type$.Success_String);
      }
      return new A.Failure(this.message, t1, start);
    },
    fastParseOn$2(buffer, position) {
      var $stop = position + this.length;
      return $stop <= buffer.length && C.boolConversionCheck(this.predicate.call$1(D.JSString_methods.substring$2(buffer, position, $stop))) ? $stop : -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.RepeatingCharacterParser.prototype = {
    parseOn$1(context) {
      var t1, t2, position, count, t3, _this = this,
        buffer = context.buffer,
        start = context.position,
        end = buffer.length;
      for (t1 = _this.min, t2 = _this.predicate, position = start, count = 0; count < t1;) {
        if (position < end) {
          if (!(position >= 0 && position < end))
            return C.ioore(buffer, position);
          t3 = !t2.test$1(buffer.charCodeAt(position));
        } else
          t3 = true;
        if (t3)
          return new A.Failure(_this.message, buffer, position);
        ++position;
        ++count;
      }
      t1 = _this.max;
      while (true) {
        if (!(position < end && count < t1))
          break;
        if (!(position >= 0 && position < end))
          return C.ioore(buffer, position);
        if (!t2.test$1(buffer.charCodeAt(position)))
          break;
        ++position;
        ++count;
      }
      t1 = D.JSString_methods.substring$2(buffer, start, position);
      return new A.Success(t1, buffer, position, type$.Success_String);
    },
    fastParseOn$2(buffer, position) {
      var t1, t2, count, t3,
        end = buffer.length;
      for (t1 = this.min, t2 = this.predicate, count = 0; count < t1;) {
        if (position < end) {
          if (!(position >= 0 && position < end))
            return C.ioore(buffer, position);
          t3 = !t2.test$1(buffer.charCodeAt(position));
        } else
          t3 = true;
        if (t3)
          return -1;
        ++position;
        ++count;
      }
      t1 = this.max;
      while (true) {
        if (!(position < end && count < t1))
          break;
        if (!(position >= 0 && position < end))
          return C.ioore(buffer, position);
        if (!t2.test$1(buffer.charCodeAt(position)))
          break;
        ++position;
        ++count;
      }
      return position;
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.super$Parser$toString(0),
        t2 = _this.max;
      return t1 + "[" + _this.message + ", " + _this.min + ".." + C.S(t2 === 9007199254740991 ? "*" : t2) + "]";
    }
  };
  A.LazyRepeatingParser.prototype = {
    parseOn$1(context) {
      var t2, current, result, limiter, _this = this,
        _s20_ = " must always consume",
        t1 = _this.$ti,
        elements = C._setArrayType([], t1._eval$1("JSArray<1>"));
      for (t2 = _this.min, current = context; elements.length < t2; current = result) {
        result = _this.delegate.parseOn$1(current);
        if (result instanceof A.Failure)
          return result;
        if (C.assertTest(current.position < result.position))
          C.assertThrow(_this.delegate.toString$0(0) + _s20_);
        D.JSArray_methods.add$1(elements, result.get$value(result));
      }
      for (t2 = _this.max; true; current = result) {
        limiter = _this.limit.parseOn$1(current);
        if (limiter instanceof A.Failure) {
          if (elements.length >= t2)
            return limiter;
          result = _this.delegate.parseOn$1(current);
          if (result instanceof A.Failure)
            return limiter;
          if (C.assertTest(current.position < result.position))
            C.assertThrow(_this.delegate.toString$0(0) + _s20_);
          D.JSArray_methods.add$1(elements, result.get$value(result));
        } else {
          t1._eval$1("List<1>")._as(elements);
          return new A.Success(elements, current.buffer, current.position, t1._eval$1("Success<List<1>>"));
        }
      }
    },
    fastParseOn$2(buffer, position) {
      var t1, current, count, result, _this = this,
        _s20_ = " must always consume";
      for (t1 = _this.min, current = position, count = 0; count < t1; current = result) {
        result = _this.delegate.fastParseOn$2(buffer, current);
        if (result < 0)
          return -1;
        if (C.assertTest(current < result))
          C.assertThrow(_this.delegate.toString$0(0) + _s20_);
        ++count;
      }
      for (t1 = _this.max; true; current = result)
        if (_this.limit.fastParseOn$2(buffer, current) < 0) {
          if (count >= t1)
            return -1;
          result = _this.delegate.fastParseOn$2(buffer, current);
          if (result < 0)
            return -1;
          if (C.assertTest(current < result))
            C.assertThrow(_this.delegate.toString$0(0) + _s20_);
          ++count;
        } else
          return current;
    }
  };
  A.LimitedRepeatingParser.prototype = {
    get$children(_) {
      return C._setArrayType([this.delegate, this.limit], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      this.super$DelegateParser$replace(0, source, target);
      if (this.limit.$eq(0, source))
        this.limit = target;
    }
  };
  A.PossessiveRepeatingParser.prototype = {
    parseOn$1(context) {
      var t2, current, result, _this = this,
        _s20_ = " must always consume",
        t1 = _this.$ti,
        elements = C._setArrayType([], t1._eval$1("JSArray<1>"));
      for (t2 = _this.min, current = context; elements.length < t2; current = result) {
        result = _this.delegate.parseOn$1(current);
        if (result instanceof A.Failure)
          return result;
        if (C.assertTest(current.position < result.position))
          C.assertThrow(_this.delegate.toString$0(0) + _s20_);
        D.JSArray_methods.add$1(elements, result.get$value(result));
      }
      for (t2 = _this.max; elements.length < t2; current = result) {
        result = _this.delegate.parseOn$1(current);
        if (result instanceof A.Failure)
          break;
        if (C.assertTest(current.position < result.position))
          C.assertThrow(_this.delegate.toString$0(0) + _s20_);
        D.JSArray_methods.add$1(elements, result.get$value(result));
      }
      t1._eval$1("List<1>")._as(elements);
      return new A.Success(elements, current.buffer, current.position, t1._eval$1("Success<List<1>>"));
    },
    fastParseOn$2(buffer, position) {
      var t1, current, count, result, _this = this,
        _s20_ = " must always consume";
      for (t1 = _this.min, current = position, count = 0; count < t1; current = result) {
        result = _this.delegate.fastParseOn$2(buffer, current);
        if (result < 0)
          return -1;
        if (C.assertTest(current < result))
          C.assertThrow(_this.delegate.toString$0(0) + _s20_);
        ++count;
      }
      for (t1 = _this.max; count < t1; current = result) {
        result = _this.delegate.fastParseOn$2(buffer, current);
        if (result < 0)
          break;
        if (C.assertTest(current < result))
          C.assertThrow(_this.delegate.toString$0(0) + _s20_);
        ++count;
      }
      return current;
    }
  };
  A.RepeatingParser.prototype = {
    toString$0(_) {
      var t1 = this.super$Parser$toString(0),
        t2 = this.max;
      return t1 + "[" + this.min + ".." + C.S(t2 === 9007199254740991 ? "*" : t2) + "]";
    }
  };
  A.ChangeNotifierProvider.prototype = {};
  A.Consumer.prototype = {
    buildWithChild$2(context, child) {
      return this.builder.call$3(context, A.Provider_of(context, true, this.$ti._precomputed1), child);
    }
  };
  A.ListenableProvider.prototype = {};
  A.ProviderNode.prototype = {};
  A.ProviderBinding.prototype = {
    set$_providerDetails(_providerDetails) {
      this._providerDetails = type$.Map_String_ProviderNode._as(_providerDetails);
    }
  };
  A.InheritedProvider.prototype = {
    debugFillProperties$1(properties) {
      this.super$Widget$debugFillProperties(properties);
      this._provider$_delegate.debugFillProperties$1(properties);
    },
    createElement$0(_) {
      var t1 = new A._InheritedProviderElement(null, this, D._ElementLifecycle_0, C.HashSet_HashSet(type$.Element), C._instanceType(this)._eval$1("_InheritedProviderElement<InheritedProvider.T>"));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Element_rqC.toString$0(0), "package:flutter/widgets.dart", t1);
      return t1;
    },
    buildWithChild$2(context, child) {
      return this._buildWithChild$1(child);
    },
    _buildWithChild$2$key(child, key) {
      var t1, t2, _this = this;
      if (C.assertTest(child != null))
        C.assertThrow(C.getRuntimeTypeOfDartObject(_this).toString$0(0) + " used outside of MultiProvider must specify a child");
      t1 = C.getRuntimeTypeOfDartObject(_this).toString$0(0);
      child.toString;
      t2 = C._instanceType(_this);
      C.assertHelper(t2._eval$1("InheritedProvider.T?")._is(null));
      return new A._InheritedProviderScope(_this, t1, child, key, t2._eval$1("_InheritedProviderScope<InheritedProvider.T?>"));
    },
    _buildWithChild$1(child) {
      return this._buildWithChild$2$key(child, null);
    }
  };
  A._InheritedProviderElement.prototype = {
    debugFillProperties$1(properties) {
      this.super$Element$debugFillProperties(properties);
      this.visitChildren$1(new A._InheritedProviderElement_debugFillProperties_closure(properties));
    }
  };
  A._InheritedProviderScope.prototype = {
    updateShouldNotify$1(oldWidget) {
      return false;
    },
    createElement$0(_) {
      var t1 = type$.Element;
      t1 = new A._InheritedProviderScopeElement(C.HashMap_HashMap(null, null, null, t1, type$.nullable_Object), this, D._ElementLifecycle_0, C.HashSet_HashSet(t1), this.$ti._eval$1("_InheritedProviderScopeElement<1>"));
      $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Element_rqC.toString$0(0), "package:flutter/widgets.dart", t1);
      return t1;
    }
  };
  A._Dependency.prototype = {};
  A._InheritedProviderScopeElement.prototype = {
    get$_delegateState() {
      var result, _this = this,
        value = _this.___InheritedProviderScopeElement__delegateState_FI;
      if (value === $) {
        result = _this.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(_this)).owner._provider$_delegate.createState$0();
        result.set$element(_this);
        _this.___InheritedProviderScopeElement__delegateState_FI !== $ && C.throwLateFieldADI("_delegateState");
        _this.set$___InheritedProviderScopeElement__delegateState_FI(result);
        value = result;
      }
      return value;
    },
    getElementForInheritedWidgetOfExactType$1$0(InheritedWidgetType) {
      var t1 = {};
      C.checkTypeBound(InheritedWidgetType, type$.InheritedWidget, "InheritedWidgetType", "getElementForInheritedWidgetOfExactType");
      t1.inheritedElement = null;
      this.visitAncestorElements$1(new A._InheritedProviderScopeElement_getElementForInheritedWidgetOfExactType_closure(t1, InheritedWidgetType));
      return t1.inheritedElement;
    },
    mount$2($parent, newSlot) {
      var t2, t3, _this = this,
        t1 = $._InheritedProviderScopeElement__nextProviderId;
      $._InheritedProviderScopeElement__nextProviderId = t1 + 1;
      _this.___InheritedProviderScopeElement__debugId_A = "" + t1;
      t1 = $.$get$ProviderBinding_debugInstance();
      t2 = C.LinkedHashMap_LinkedHashMap$of(t1._providerDetails, type$.String, type$.ProviderNode);
      t2.$indexSet(0, _this.___InheritedProviderScopeElement__debugId_A, new A.ProviderNode(_this.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(_this)).debugType, _this));
      type$.Map_String_ProviderNode._as(t2);
      t3 = type$.dynamic;
      A.debugPostEvent("provider:provider_list_changed", C.LinkedHashMap_LinkedHashMap$_empty(t3, t3));
      t1.set$_providerDetails(t2);
      _this.super$ComponentElement$mount($parent, newSlot);
    },
    get$widget() {
      return this.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(this));
    },
    reassemble$0() {
      this.super$Element$reassemble();
      if (this.get$_delegateState().get$hasValue()) {
        var t1 = this.get$_delegateState();
        t1.get$value(t1);
      }
    },
    updateDependencies$2(dependent, aspect) {
      var t3,
        t1 = this._dependents,
        dependencies = t1.$index(0, dependent),
        t2 = dependencies == null;
      if (!t2 && !this.$ti._eval$1("_Dependency<1>")._is(dependencies))
        return;
      t3 = this.$ti;
      if (t3._eval$1("bool(1)")._is(aspect)) {
        t2 = t2 ? new A._Dependency(C._setArrayType([], t3._eval$1("JSArray<bool(1)>")), t3._eval$1("_Dependency<1>")) : dependencies;
        t3._eval$1("_Dependency<1>")._as(t2);
        if (t2.shouldClearSelectors) {
          t2.shouldClearSelectors = false;
          D.JSArray_methods.clear$0(t3._eval$1("List<bool(1)>")._as(t2.selectors));
        }
        if (!t2.shouldClearMutationScheduled) {
          t2.shouldClearMutationScheduled = true;
          C.Future_Future$microtask(new A._InheritedProviderScopeElement_updateDependencies_closure(t2), type$.Null);
        }
        D.JSArray_methods.add$1(t3._eval$1("List<bool(1)>")._as(t2.selectors), aspect);
        t1.$indexSet(0, dependent, t2);
      } else
        t1.$indexSet(0, dependent, D.C_Object);
    },
    notifyDependent$2(oldWidget, dependent) {
      var shouldNotify, updateShouldNotify, t1, t2, _i, t3, _this = this,
        dependencies = _this._dependents.$index(0, dependent);
      $.$get$ProviderBinding_debugInstance();
      t1 = _this.___InheritedProviderScopeElement__debugId_A;
      t1 === $ && C.throwLateFieldNI("_debugId");
      t2 = type$.dynamic;
      A.debugPostEvent("provider:provider_changed", C.LinkedHashMap_LinkedHashMap$_literal(["id", t1], t2, t2));
      shouldNotify = false;
      if (dependencies != null) {
        t1 = _this.$ti;
        if (t1._eval$1("_Dependency<1>")._is(dependencies)) {
          if (dependent._dirty)
            return;
          for (t1 = t1._eval$1("List<bool(1)>")._as(dependencies.selectors), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
            updateShouldNotify = t1[_i];
            try {
              C.assertHelper(new A._InheritedProviderScopeElement_notifyDependent_closure().call$0());
              t3 = _this.get$_delegateState();
              shouldNotify = updateShouldNotify.call$1(t3.get$value(t3));
            } finally {
              C.assertHelper(new A._InheritedProviderScopeElement_notifyDependent_closure0().call$0());
            }
            if (C.boolConversionCheck(shouldNotify))
              break;
          }
        } else
          shouldNotify = true;
      }
      if (C.boolConversionCheck(shouldNotify))
        dependent.didChangeDependencies$0();
    },
    update$1(_, newWidget) {
      var _this = this;
      _this.$ti._eval$1("_InheritedProviderScope<1>")._as(newWidget);
      C.assertHelper(new A._InheritedProviderScopeElement_update_closure(_this, newWidget).call$0());
      _this._isBuildFromExternalSources = true;
      _this._updatedShouldNotify = _this.get$_delegateState().willUpdateDelegate$1(newWidget.owner._provider$_delegate);
      _this.super$ProxyElement$update(0, newWidget);
      _this._updatedShouldNotify = false;
    },
    updated$1(oldWidget) {
      type$.InheritedWidget._as(oldWidget);
      this.super$InheritedElement$updated(oldWidget);
      if (this._updatedShouldNotify)
        this.notifyClients$1(oldWidget);
    },
    didChangeDependencies$0() {
      this._isBuildFromExternalSources = true;
      this.super$Element$didChangeDependencies();
    },
    build$0() {
      var _this = this,
        t1 = _this.$ti._eval$1("_InheritedProviderScope<1>");
      t1._as(C.Element.prototype.get$widget.call(_this));
      _this.get$_delegateState().build$1$isBuildFromExternalSources(_this._isBuildFromExternalSources);
      _this._isBuildFromExternalSources = false;
      if (_this._shouldNotifyDependents) {
        _this._shouldNotifyDependents = false;
        _this.notifyClients$1(t1._as(C.Element.prototype.get$widget.call(_this)));
      }
      return _this.super$ProxyElement$build();
    },
    unmount$0() {
      var t1, t2, t3;
      this.get$_delegateState().dispose$0();
      t1 = $.$get$ProviderBinding_debugInstance();
      t2 = C.LinkedHashMap_LinkedHashMap$of(t1._providerDetails, type$.String, type$.ProviderNode);
      t3 = this.___InheritedProviderScopeElement__debugId_A;
      t3 === $ && C.throwLateFieldNI("_debugId");
      t2.remove$1(0, t3);
      type$.Map_String_ProviderNode._as(t2);
      t3 = type$.dynamic;
      A.debugPostEvent("provider:provider_list_changed", C.LinkedHashMap_LinkedHashMap$_empty(t3, t3));
      t1.set$_providerDetails(t2);
      this.super$Element$unmount();
    },
    markNeedsNotifyDependents$0() {
      if (!this._isNotifyDependentsEnabled)
        return;
      this.markNeedsBuild$0();
      this._shouldNotifyDependents = true;
    },
    _debugSetInheritedLock$1(value) {
      C.assertHelper(new A._InheritedProviderScopeElement__debugSetInheritedLock_closure(this, value).call$0());
      return true;
    },
    dependOnInheritedElement$2$aspect(ancestor, aspect) {
      C.assertHelper(new A._InheritedProviderScopeElement_dependOnInheritedElement_closure(this).call$0());
      return this.super$Element$dependOnInheritedElement(ancestor, aspect);
    },
    dependOnInheritedElement$1(ancestor) {
      return this.dependOnInheritedElement$2$aspect(ancestor, null);
    },
    debugFillProperties$1(properties) {
      this.super$Element$debugFillProperties(properties);
      this.get$_delegateState().debugFillProperties$1(properties);
    },
    set$___InheritedProviderScopeElement__delegateState_FI(___InheritedProviderScopeElement__delegateState_FI) {
      this.___InheritedProviderScopeElement__delegateState_FI = this.$ti._eval$1("_DelegateState<1,_Delegate<1>>")._as(___InheritedProviderScopeElement__delegateState_FI);
    },
    $isInheritedContext: 1
  };
  A._Delegate.prototype = {
    debugFillProperties$1(properties) {
    }
  };
  A._DelegateState.prototype = {
    willUpdateDelegate$1(newDelegate) {
      C._instanceType(this)._eval$1("_DelegateState.D")._as(newDelegate);
      return false;
    },
    dispose$0() {
    },
    debugFillProperties$1(properties) {
    },
    build$1$isBuildFromExternalSources(isBuildFromExternalSources) {
    },
    set$element(element) {
      this.element = C._instanceType(this)._eval$1("_InheritedProviderScopeElement<_DelegateState.T?>?")._as(element);
    }
  };
  A._CreateInheritedProvider.prototype = {
    createState$0() {
      return new A._CreateInheritedProviderState(this.$ti._eval$1("_CreateInheritedProviderState<1>"));
    }
  };
  A._CreateInheritedProviderState.prototype = {
    get$value(_) {
      var e, stackTrace, t2, t3, t4, t5, exception, _this = this, _null = null, t1 = {};
      if (_this._didInitValue && _this._initError != null) {
        t1 = C.createRuntimeType(_this.$ti._precomputed1).toString$0(0);
        t2 = _this._initError;
        t2 = t2 == null ? _null : t2.toString$0(0);
        throw C.wrapException(C.StateError$("Tried to read a provider that threw during the creation of its value.\nThe exception occurred during the creation of type " + t1 + ".\n\n" + C.S(t2)));
      }
      t1._debugPreviousIsInInheritedProviderUpdate = t1._debugPreviousIsInInheritedProviderCreate = null;
      C.assertHelper(new A._CreateInheritedProviderState_value_closure(t1).call$0());
      if (!_this._didInitValue) {
        _this._didInitValue = true;
        t2 = _this.element;
        t2.toString;
        t3 = _this.$ti;
        t4 = t3._eval$1("_DelegateState.D");
        t4._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate);
        _this.element._debugSetInheritedLock$1(true);
        try {
          C.assertHelper(new A._CreateInheritedProviderState_value_closure0().call$0());
          t2 = _this.element;
          t2.toString;
          t2 = t4._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate);
          t5 = _this.element;
          t5.toString;
          _this.set$_provider$_value(t2.create.call$1(t5));
        } catch (exception) {
          e = C.unwrapException(exception);
          stackTrace = C.getTraceFromException(exception);
          _this._initError = new C.FlutterErrorDetails(e, stackTrace, "provider", _null, _null, false);
          throw exception;
        } finally {
          C.assertHelper(new A._CreateInheritedProviderState_value_closure1(t1).call$0());
        }
        _this.element._debugSetInheritedLock$1(false);
        C.assertHelper(new A._CreateInheritedProviderState_value_closure2(_this).call$0());
        t2 = _this.element;
        t2.toString;
        t3 = t3._eval$1("1(BuildContext,1?)?");
        if (t3._as(t4._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).update) != null) {
          try {
            C.assertHelper(new A._CreateInheritedProviderState_value_closure3().call$0());
            t2 = _this.element;
            t2.toString;
            t2 = t3._as(t4._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).update);
            t2.toString;
            t4 = _this.element;
            t4.toString;
            _this.set$_provider$_value(t2.call$2(t4, _this._provider$_value));
          } finally {
            C.assertHelper(new A._CreateInheritedProviderState_value_closure4(t1).call$0());
          }
          C.assertHelper(new A._CreateInheritedProviderState_value_closure5(_this).call$0());
        }
      }
      t1 = _this.element;
      t1._isNotifyDependentsEnabled = false;
      if (_this._provider$_removeListener == null) {
        t2 = _this.$ti;
        t1 = t2._eval$1("~()(InheritedContext<1?>,1)?")._as(t2._eval$1("_DelegateState.D")._as(C._instanceType(t1)._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate).startListening);
        if (t1 == null)
          t1 = _null;
        else {
          t3 = _this.element;
          t3.toString;
          t4 = _this._provider$_value;
          t1 = t1.call$2(t3, t4 == null ? t2._precomputed1._as(t4) : t4);
        }
        _this.set$_provider$_removeListener(t1);
      }
      t1 = _this.element;
      t2 = t1._isNotifyDependentsEnabled = true;
      t3 = _this.$ti;
      C.assertHelper(t3._eval$1("~()(InheritedContext<1?>,1)?")._as(t3._eval$1("_DelegateState.D")._as(C._instanceType(t1)._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate).startListening) != null ? _this._provider$_removeListener != null : t2);
      t2 = _this._provider$_value;
      return t2 == null ? t3._precomputed1._as(t2) : t2;
    },
    dispose$0() {
      var t1, t2, t3, t4, _this = this;
      _this.super$_DelegateState$dispose();
      t1 = _this._provider$_removeListener;
      if (t1 != null)
        t1.call$0();
      if (_this._didInitValue) {
        t1 = _this.element;
        t1.toString;
        t2 = _this.$ti;
        t1 = t2._eval$1("~(BuildContext,1)?")._as(t2._eval$1("_DelegateState.D")._as(t1.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate).dispose);
        if (t1 != null) {
          t3 = _this.element;
          t3.toString;
          t4 = _this._provider$_value;
          t1.call$2(t3, t4 == null ? t2._precomputed1._as(t4) : t4);
        }
      }
    },
    debugFillProperties$1(properties) {
      var _this = this, _null = null;
      _this.super$_DelegateState$debugFillProperties(properties);
      if (_this._didInitValue) {
        properties.add$1(0, C.DiagnosticsProperty$("value", _this.get$value(0), true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, _this.$ti._precomputed1));
        properties.add$1(0, C.FlagProperty$("", false, _null, "listening to value", D.DiagnosticLevel_3, false, _this._provider$_removeListener != null));
      } else
        properties.add$1(0, C.FlagProperty$("value", _null, _null, "<not yet loaded>", D.DiagnosticLevel_3, true, true));
    },
    build$1$isBuildFromExternalSources(isBuildFromExternalSources) {
      var t2, previousValue, t3, t4, t5, shouldNotify, _this = this,
        t1 = false;
      if (isBuildFromExternalSources)
        if (_this._didInitValue) {
          t1 = _this.element;
          t1.toString;
          t2 = _this.$ti;
          t1 = t2._eval$1("1(BuildContext,1?)?")._as(t2._eval$1("_DelegateState.D")._as(t1.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate).update) != null;
        }
      if (t1) {
        t1 = {};
        previousValue = _this._provider$_value;
        t1._debugPreviousIsInInheritedProviderUpdate = t1._debugPreviousIsInInheritedProviderCreate = null;
        C.assertHelper(new A._CreateInheritedProviderState_build_closure(t1).call$0());
        try {
          C.assertHelper(new A._CreateInheritedProviderState_build_closure0().call$0());
          t2 = _this.element;
          t2.toString;
          t3 = _this.$ti;
          t2 = t3._eval$1("1(BuildContext,1?)?")._as(t3._eval$1("_DelegateState.D")._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).update);
          t2.toString;
          t4 = _this.element;
          t4.toString;
          t5 = _this._provider$_value;
          _this.set$_provider$_value(t2.call$2(t4, t5 == null ? t3._precomputed1._as(t5) : t5));
        } finally {
          C.assertHelper(new A._CreateInheritedProviderState_build_closure1(t1).call$0());
        }
        t1 = _this.element;
        t1.toString;
        t2 = _this.$ti;
        t2._eval$1("_DelegateState.D")._as(t1.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate);
        shouldNotify = !J.$eq$(_this._provider$_value, previousValue);
        if (shouldNotify) {
          C.assertHelper(new A._CreateInheritedProviderState_build_closure2(_this).call$0());
          t1 = _this._provider$_removeListener;
          if (t1 != null) {
            t1.call$0();
            _this.set$_provider$_removeListener(null);
          }
          t1 = _this._previousWidget;
          if (t1 != null) {
            t1 = t2._eval$1("~(BuildContext,1)?")._as(t1.dispose);
            if (t1 != null) {
              t3 = _this.element;
              t3.toString;
              t1.call$2(t3, previousValue == null ? t2._precomputed1._as(previousValue) : previousValue);
            }
          }
        }
      } else
        shouldNotify = false;
      if (shouldNotify)
        _this.element._shouldNotifyDependents = true;
      t1 = _this.element;
      t1.toString;
      _this.set$_previousWidget(_this.$ti._eval$1("_DelegateState.D")._as(t1.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate));
      return _this.super$_DelegateState$build(isBuildFromExternalSources);
    },
    get$hasValue() {
      return this._didInitValue;
    },
    set$_provider$_removeListener(_removeListener) {
      this._provider$_removeListener = type$.nullable_void_Function._as(_removeListener);
    },
    set$_provider$_value(_value) {
      this._provider$_value = this.$ti._eval$1("1?")._as(_value);
    },
    set$_previousWidget(_previousWidget) {
      this._previousWidget = this.$ti._eval$1("_CreateInheritedProvider<1>?")._as(_previousWidget);
    }
  };
  A._ValueInheritedProvider.prototype = {
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$_Delegate$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("value", this.value, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, this.$ti._precomputed1));
    },
    createState$0() {
      return new A._ValueInheritedProviderState(this.$ti._eval$1("_ValueInheritedProviderState<1>"));
    }
  };
  A._ValueInheritedProviderState.prototype = {
    get$value(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.element;
      t1._isNotifyDependentsEnabled = false;
      if (_this._provider$_removeListener == null) {
        t2 = _this.$ti;
        t3 = t2._eval$1("_DelegateState.D");
        t1 = t2._eval$1("~()(InheritedContext<1?>,1)?")._as(t3._as(C._instanceType(t1)._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate).startListening);
        if (t1 == null)
          t1 = null;
        else {
          t2 = _this.element;
          t2.toString;
          t2 = t1.call$2(t2, t3._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).value);
          t1 = t2;
        }
        _this.set$_provider$_removeListener(t1);
      }
      t1 = _this.element;
      t2 = t1._isNotifyDependentsEnabled = true;
      t3 = _this.$ti;
      t4 = t3._eval$1("_DelegateState.D");
      C.assertHelper(t3._eval$1("~()(InheritedContext<1?>,1)?")._as(t4._as(C._instanceType(t1)._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate).startListening) != null ? _this._provider$_removeListener != null : t2);
      t2 = _this.element;
      t2.toString;
      return t4._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).value;
    },
    willUpdateDelegate$1(newDelegate) {
      var t2, shouldNotify, _this = this,
        t1 = _this.$ti;
      t1._eval$1("_ValueInheritedProvider<1>")._as(newDelegate);
      t2 = _this.element;
      t2.toString;
      t1 = t1._eval$1("_DelegateState.D");
      t1._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate);
      t2 = _this.element;
      t2.toString;
      shouldNotify = !J.$eq$(newDelegate.value, t1._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).value);
      if (shouldNotify && _this._provider$_removeListener != null) {
        _this._provider$_removeListener.call$0();
        _this.set$_provider$_removeListener(null);
      }
      return shouldNotify;
    },
    dispose$0() {
      this.super$_DelegateState$dispose();
      var t1 = this._provider$_removeListener;
      if (t1 != null)
        t1.call$0();
    },
    debugFillProperties$1(properties) {
      this.super$_DelegateState$debugFillProperties(properties);
      properties.add$1(0, C.FlagProperty$("", false, null, "listening to value", D.DiagnosticLevel_3, false, this._provider$_removeListener != null));
    },
    get$hasValue() {
      return true;
    },
    set$_provider$_removeListener(_removeListener) {
      this._provider$_removeListener = type$.nullable_void_Function._as(_removeListener);
    }
  };
  A.MultiProvider.prototype = {};
  A.Provider.prototype = {};
  A.ProviderNullException.prototype = {
    toString$0(_) {
      var t1 = this.valueType;
      return "Error: The widget " + this.widgetType.toString$0(0) + " tried to read Provider<" + t1.toString$0(0) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + t1.toString$0(0) + "> to Provider<" + t1.toString$0(0) + "?>.\n";
    },
    $isException: 1
  };
  A.ProviderNotFoundException.prototype = {
    toString$0(_) {
      var t1 = this.valueType,
        t2 = this.widgetType;
      return "Error: Could not find the correct Provider<" + t1.toString$0(0) + "> above this " + t2.toString$0(0) + ' Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are "scoped". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that ' + t2.toString$0(0) + " is under your MultiProvider/Provider<" + t1.toString$0(0) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    },
    $isException: 1
  };
  A.ProxyProvider0.prototype = {};
  A.ProxyProvider.prototype = {};
  A.Selector0.prototype = {
    createState$0() {
      return new A._Selector0State(D._StateLifecycle_0, this.$ti._eval$1("_Selector0State<Selector0.T>"));
    },
    selector$1(arg0) {
      return this.selector.call$1(arg0);
    }
  };
  A._Selector0State.prototype = {
    buildWithChild$2(context, child) {
      var shouldInvalidateCache, _this = this,
        selected = _this._widget.selector$1(context),
        t1 = _this.oldWidget,
        t2 = _this._widget;
      t2.toString;
      shouldInvalidateCache = true;
      if (J.$eq$(t1, t2)) {
        _this._widget.toString;
        t1 = !D.DeepCollectionEquality_false.equals$2(_this.value, selected);
        shouldInvalidateCache = t1;
      }
      if (shouldInvalidateCache) {
        _this.set$value(0, selected);
        t1 = _this._widget;
        t1.toString;
        _this.oldWidget = t1;
        _this.cache = new C.Builder(new A._Selector0State_buildWithChild_closure(_this, selected, child), null);
      }
      t1 = _this.cache;
      t1.toString;
      return t1;
    },
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$State$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("value", this.value, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, this.$ti._precomputed1));
    },
    set$value(_, value) {
      this.value = this.$ti._eval$1("1?")._as(value);
    }
  };
  A.Selector2.prototype = {};
  A.ObserveDisplayingChildModel.prototype = {};
  A.ObserveDisplayingChildModelMixin.prototype = {
    get$layoutOffset() {
      var t1,
        parentData = this.renderObject.parentData;
      if (!(parentData instanceof C.SliverLogicalParentData))
        return 0;
      t1 = parentData.layoutOffset;
      return t1 == null ? 0 : t1;
    }
  };
  A.ObserveModel.prototype = {};
  A.ObserveScrollChildModel.prototype = {};
  A.ObservePrepareScrollToIndexModel.prototype = {};
  A.ObserverHandleContextsResultModel.prototype = {};
  A.ObserverIndexPositionModel.prototype = {};
  A.ObserverController.prototype = {
    fetchSliverContext$1$sliverContext(sliverContext) {
      return sliverContext == null && J.get$isNotEmpty$asx(this.sliverContexts) ? J.get$first$ax(this.sliverContexts) : sliverContext;
    },
    set$indexOffsetMap(indexOffsetMap) {
      this.indexOffsetMap = type$.Map_of_BuildContext_and_Map_int_ObserveScrollChildModel._as(indexOffsetMap);
    },
    set$sliverContexts(sliverContexts) {
      this.sliverContexts = type$.List_BuildContext._as(sliverContexts);
    },
    set$innerNeedOnceObserveCallBack(innerNeedOnceObserveCallBack) {
      this.innerNeedOnceObserveCallBack = type$.nullable_dynamic_Function._as(innerNeedOnceObserveCallBack);
    },
    set$innerReattachCallBack(innerReattachCallBack) {
      type$.nullable_dynamic_Function._as(innerReattachCallBack);
    }
  };
  A.ObserverControllerForNotification.prototype = {
    innerHandleDispatchOnceObserveComplete$1$resultModel(resultModel) {
      var completer, t1, resultType;
      C._instanceType(this)._eval$1("ObserverControllerForNotification.R?")._as(resultModel);
      completer = this.ObserverControllerForNotification_innerDispatchOnceObserveCompleter;
      if (completer == null)
        return;
      if ((completer.future._state & 30) === 0) {
        t1 = resultModel == null;
        resultType = !t1 ? B.ObserverWidgetObserveResultType_0 : B.ObserverWidgetObserveResultType_1;
        type$.nullable_SliverObserverHandleContextsResultModel_ObserveModel._as(resultModel);
        completer.complete$1(0, new A.ScrollViewOnceObserveNotificationResult(resultType, (t1 ? new A.SliverObserverHandleContextsResultModel(null, null, B.Map_empty7, type$.SliverObserverHandleContextsResultModel_ObserveModel) : resultModel).changeResultModel));
      }
      this.set$innerDispatchOnceObserveCompleter(null);
    },
    set$innerDispatchOnceObserveCompleter(innerDispatchOnceObserveCompleter) {
      this.ObserverControllerForNotification_innerDispatchOnceObserveCompleter = C._instanceType(this)._eval$1("Completer<ObserverControllerForNotification.S>?")._as(innerDispatchOnceObserveCompleter);
    }
  };
  A.ObserverControllerForInfo.prototype = {
    findCurrentFirstChild$1(obj) {
      var child, nextChild,
        firstChild = obj.ContainerRenderObjectMixin__firstChild;
      if (firstChild == null)
        return null;
      if (firstChild instanceof C.RenderIndexedSemantics)
        child = firstChild;
      else {
        nextChild = obj.childAfter$1(firstChild);
        child = nextChild instanceof C.RenderIndexedSemantics ? nextChild : null;
      }
      return child;
    },
    findCurrentLastChild$1(obj) {
      var child, previousChild,
        lastChild = obj.ContainerRenderObjectMixin__lastChild;
      if (lastChild == null)
        return null;
      if (lastChild instanceof C.RenderIndexedSemantics)
        child = lastChild;
      else {
        previousChild = obj.childBefore$1(lastChild);
        child = previousChild instanceof C.RenderIndexedSemantics ? previousChild : null;
      }
      return child;
    },
    viewportExtremeScrollExtent$2$obj$viewport(obj, viewport) {
      var t1,
        offset = type$.RenderViewportBase_ContainerParentDataMixin_RenderSliver._as(viewport)._viewport0$_offset;
      if (D.GrowthDirection_0 === type$.SliverConstraints._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection) {
        t1 = offset._maxScrollExtent;
        t1.toString;
      } else {
        t1 = offset._minScrollExtent;
        t1.toString;
      }
      return t1;
    }
  };
  A.ObserverControllerForScroll.prototype = {
    innerInitialIndexPosition$0() {
      var t1 = this.ObserverControllerForScroll_initialIndexModel.index;
      if (t1 <= 0)
        return;
      this.innerJumpTo$6$alignment$index$isFixedHeight$offset$padding$sliverContext(0, t1, false, null, D.EdgeInsets_0_0_0_0, null);
    },
    innerJumpTo$8$alignment$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      var t1;
      type$.nullable_double_Function_double._as(offset);
      t1 = new C._Future($.Zone__current, type$._Future_dynamic);
      this._observer_controller$_scrollToIndex$9$alignment$completer$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, new C._AsyncCompleter(t1, type$._AsyncCompleter_dynamic), index, false, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext);
      return t1;
    },
    innerJumpTo$6$alignment$index$isFixedHeight$offset$padding$sliverContext(alignment, index, isFixedHeight, offset, padding, sliverContext) {
      return this.innerJumpTo$8$alignment$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, index, isFixedHeight, offset, null, padding, null, sliverContext);
    },
    _observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, completer, curve, duration, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      return this._scrollToIndex$body$ObserverControllerForScroll(alignment, completer, curve, duration, index, false, type$.nullable_double_Function_double._as(offset), onPrepareScrollToIndex, padding, renderSliverType, sliverContext);
    },
    _observer_controller$_scrollToIndex$9$alignment$completer$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, completer, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      return this._observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, completer, null, null, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext);
    },
    _scrollToIndex$body$ObserverControllerForScroll(alignment, completer, curve, duration, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, _controller, ctx, t1, obj, viewport, isAnimateTo, extremeScrollExtent, maxScrollExtent, precedingScrollExtent, t2, paintScrollExtent, pixels, targetScrollExtent, viewportOffset, viewportSize, viewportBoundaryExtent, targetOffset, targetScrollChildModel, firstChild, lastChild;
      var $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (C.assertTest(D.JSInt_methods.clamp$2(alignment, 0, 1) === alignment))
                C.assertThrow("The [alignment] is expected to be a value in the range [0.0, 1.0]");
              _controller = $async$self.controller;
              ctx = $async$self.fetchSliverContext$1$sliverContext(sliverContext);
              if (ctx == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = _controller._positions.length;
              if (t1 === 0) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              obj = A.ObserverUtils_findRenderObject(ctx);
              if (!(obj instanceof C.RenderSliverMultiBoxAdaptor)) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              viewport = A.ObserverUtils_findViewport(obj);
              if (viewport == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.innerIsHandlingScroll = true;
              new A.ObserverScrollStartNotification().dispatch$1(ctx);
              isAnimateTo = duration != null && curve != null;
              t1 = obj._geometry;
              t1 = t1 == null ? null : t1.visible;
              $async$goto = t1 !== true && viewport._viewport0$_offset._pixels != null ? 3 : 4;
              break;
            case 3:
              // then
              extremeScrollExtent = $async$self.viewportExtremeScrollExtent$2$obj$viewport(obj, viewport);
              t1 = type$.SliverConstraints;
              maxScrollExtent = D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? extremeScrollExtent : -extremeScrollExtent;
              $async$goto = obj.ContainerRenderObjectMixin__firstChild == null ? 5 : 7;
              break;
            case 5:
              // then
              precedingScrollExtent = t1._as(C.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent;
              t2 = obj._geometry;
              t2 = t2 == null ? null : t2.maxPaintExtent;
              paintScrollExtent = precedingScrollExtent + (t2 == null ? 0 : t2);
              t2 = _controller.get$position(0)._pixels;
              t2.toString;
              if (D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection)
                pixels = t2;
              else
                pixels = -t2;
              targetScrollExtent = pixels > paintScrollExtent ? paintScrollExtent : precedingScrollExtent;
              if (targetScrollExtent > maxScrollExtent)
                targetScrollExtent = maxScrollExtent;
              $async$goto = 8;
              return C._asyncAwait(_controller.animateTo$3$curve$duration(D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? targetScrollExtent : -targetScrollExtent, D.Cubic_glB, B.Duration_1000), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 8:
              // returning from await.
              $async$goto = 9;
              return C._asyncAwait(C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).get$endOfFrame(), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              precedingScrollExtent = t1._as(C.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent;
              t2 = viewport._viewport0$_offset._pixels;
              t2.toString;
              if (D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection)
                viewportOffset = t2;
              else
                viewportOffset = -t2;
              viewportSize = C.axisDirectionToAxis(t1._as(C.RenderObject.prototype.get$constraints.call(obj)).axisDirection) === D.Axis_0 ? viewport.get$size(0)._dx : viewport.get$size(0)._dy;
              t2 = viewport._cacheExtent;
              viewportBoundaryExtent = viewportSize * 0.5 + t2;
              $async$goto = precedingScrollExtent > viewportOffset + viewportBoundaryExtent ? 10 : 11;
              break;
            case 10:
              // then
              targetOffset = precedingScrollExtent - viewportBoundaryExtent;
              if (targetOffset > maxScrollExtent)
                targetOffset = maxScrollExtent;
              $async$goto = 12;
              return C._asyncAwait(_controller.animateTo$3$curve$duration(D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? targetOffset : -targetOffset, D.Cubic_glB, B.Duration_1000), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 12:
              // returning from await.
              $async$goto = 13;
              return C._asyncAwait(C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).get$endOfFrame(), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 13:
              // returning from await.
            case 11:
              // join
            case 6:
              // join
            case 4:
              // join
              t1 = $async$self.indexOffsetMap.$index(0, ctx);
              targetScrollChildModel = t1 == null ? null : t1.$index(0, index);
              $async$goto = targetScrollChildModel != null ? 14 : 15;
              break;
            case 14:
              // then
              new A.ObserverScrollDecisionNotification().dispatch$1(ctx);
              $async$goto = 16;
              return C._asyncAwait($async$self._scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex($async$self._calculateTargetLayoutOffset$6$alignment$childLayoutOffset$childSize$obj$offset$padding(alignment, targetScrollChildModel.layoutOffset, targetScrollChildModel.size, obj, offset, padding), _controller, curve, duration, isAnimateTo, onPrepareScrollToIndex), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 16:
              // returning from await.
              $async$self._handleScrollEnd$2$completer$context(completer, ctx);
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // join
              firstChild = $async$self.findCurrentFirstChild$1(obj);
              lastChild = $async$self.findCurrentLastChild$1(obj);
              if (firstChild == null || lastChild == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._handleScrollToIndex$12$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChild._proxy_box$_index, index, lastChild._proxy_box$_index, obj, offset, onPrepareScrollToIndex, padding);
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext, $async$completer);
    },
    _handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, lastPageTurningOffset, obj, offset, onPrepareScrollToIndex, padding) {
      return this._handleScrollToIndex$body$ObserverControllerForScroll(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, lastPageTurningOffset, obj, type$.nullable_double_Function_double._as(offset), onPrepareScrollToIndex, padding);
    },
    _handleScrollToIndex$12$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, obj, offset, onPrepareScrollToIndex, padding) {
      return this._handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, null, obj, offset, onPrepareScrollToIndex, padding);
    },
    _handleScrollToIndex$body$ObserverControllerForScroll(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, lastPageTurningOffset, obj, offset, onPrepareScrollToIndex, padding) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, _controller, t1, viewport, extremeScrollExtent, maxScrollExtent, isHorizontal, isAnimateTo, precedingScrollExtent, t2, sliverSize, firstChild, parentData, childLayoutOffset, targetLeadingOffset, prevPageOffset, prevPageOffsetRectified, lastChild, childSize, nextPageOffset, nextPageOffsetRectified, targetChild, t3, t4, currentChildIndex, t5, childSize0, calcResult, _box_0;
      var $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.firstChildIndex = firstChildIndex;
              _box_0.lastChildIndex = lastChildIndex;
              _box_0.lastPageTurningOffset = lastPageTurningOffset;
              _controller = $async$self.controller;
              t1 = _controller._positions.length;
              if (t1 === 0) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              viewport = A.ObserverUtils_findViewport(obj);
              if (viewport == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              extremeScrollExtent = $async$self.viewportExtremeScrollExtent$2$obj$viewport(obj, viewport);
              t1 = type$.SliverConstraints;
              maxScrollExtent = D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? extremeScrollExtent : -extremeScrollExtent;
              isHorizontal = C.axisDirectionToAxis(t1._as(C.RenderObject.prototype.get$constraints.call(obj)).axisDirection) === D.Axis_0;
              isAnimateTo = duration != null && curve != null;
              precedingScrollExtent = t1._as(C.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent;
              $async$goto = index < firstChildIndex ? 3 : 5;
              break;
            case 3:
              // then
              if (isHorizontal) {
                t2 = obj.get$paintBounds();
                sliverSize = t2.right - t2.left;
              } else {
                t2 = obj.get$paintBounds();
                sliverSize = t2.bottom - t2.top;
              }
              firstChild = $async$self.findCurrentFirstChild$1(obj);
              parentData = firstChild == null ? null : firstChild.parentData;
              if (parentData instanceof C.SliverMultiBoxAdaptorParentData) {
                childLayoutOffset = parentData.layoutOffset;
                if (childLayoutOffset == null)
                  childLayoutOffset = 0;
              } else
                childLayoutOffset = 0;
              targetLeadingOffset = childLayoutOffset - sliverSize;
              prevPageOffset = (targetLeadingOffset < 0 ? 0 : targetLeadingOffset) + precedingScrollExtent;
              if (prevPageOffset < 0)
                prevPageOffset = 0;
              if (lastPageTurningOffset === prevPageOffset) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              _box_0.lastPageTurningOffset = prevPageOffset;
              prevPageOffsetRectified = D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? prevPageOffset : -prevPageOffset;
              $async$goto = isAnimateTo ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return C._asyncAwait(_controller.animateTo$3$curve$duration(prevPageOffsetRectified, D.Cubic_glB, B.Duration_1000), $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              _controller.jumpTo$1(prevPageOffsetRectified);
            case 7:
              // join
              C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A.ObserverControllerForScroll__handleScrollToIndex_closure(_box_0, $async$self, obj, ctx, completer, index, alignment, padding, duration, curve, offset, onPrepareScrollToIndex));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = index > lastChildIndex ? 10 : 12;
              break;
            case 10:
              // then
              lastChild = $async$self.findCurrentLastChild$1(obj);
              if (isHorizontal) {
                t2 = lastChild == null ? null : 0 + lastChild.get$size(0)._dx;
                childSize = t2;
              } else {
                t2 = lastChild == null ? null : 0 + lastChild.get$size(0)._dy;
                childSize = t2;
              }
              if (childSize == null)
                childSize = 0;
              parentData = lastChild == null ? null : lastChild.parentData;
              if (parentData instanceof C.SliverMultiBoxAdaptorParentData) {
                childLayoutOffset = parentData.layoutOffset;
                if (childLayoutOffset == null)
                  childLayoutOffset = 0;
              } else
                childLayoutOffset = 0;
              nextPageOffset = childLayoutOffset + childSize + precedingScrollExtent;
              if (nextPageOffset > maxScrollExtent)
                nextPageOffset = maxScrollExtent;
              if (lastPageTurningOffset === nextPageOffset) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              _box_0.lastPageTurningOffset = nextPageOffset;
              nextPageOffsetRectified = D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? nextPageOffset : -nextPageOffset;
              $async$goto = isAnimateTo ? 13 : 15;
              break;
            case 13:
              // then
              $async$goto = 16;
              return C._asyncAwait(_controller.animateTo$3$curve$duration(nextPageOffsetRectified, D.Cubic_glB, B.Duration_1000), $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding);
            case 16:
              // returning from await.
              // goto join
              $async$goto = 14;
              break;
            case 15:
              // else
              _controller.jumpTo$1(nextPageOffsetRectified);
            case 14:
              // join
              C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A.ObserverControllerForScroll__handleScrollToIndex_closure0(_box_0, $async$self, obj, ctx, completer, index, alignment, padding, duration, curve, offset, onPrepareScrollToIndex));
              // goto join
              $async$goto = 11;
              break;
            case 12:
              // else
              targetChild = obj.ContainerRenderObjectMixin__firstChild;
              t2 = C._instanceType(obj), t3 = t2._eval$1("ContainerRenderObjectMixin.0"), t2 = t2._eval$1("ContainerRenderObjectMixin.1");
            case 17:
              // for condition
              if (!(targetChild != null)) {
                // goto after for
                $async$goto = 18;
                break;
              }
              if (!(targetChild instanceof C.RenderIndexedSemantics)) {
                t3._as(targetChild);
                C.assertHelper(targetChild.get$parent(targetChild) === obj);
                t4 = targetChild.parentData;
                t4.toString;
                targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
                // goto for condition
                $async$goto = 17;
                break;
              }
              currentChildIndex = targetChild._proxy_box$_index;
              parentData = targetChild.parentData;
              if (parentData instanceof C.SliverMultiBoxAdaptorParentData) {
                childLayoutOffset = parentData.layoutOffset;
                if (childLayoutOffset == null)
                  childLayoutOffset = 0;
              } else
                childLayoutOffset = 0;
              t4 = C.axisDirectionToAxis(t1._as(C.RenderObject.prototype.get$constraints.call(obj)).axisDirection);
              t5 = targetChild.get$size(0);
              childSize = 0 + t5._dx;
              childSize0 = 0 + t5._dy;
              childSize = t4 === D.Axis_0 ? childSize : childSize0;
              $async$self._updateIndexOffsetMap$4$childLayoutOffset$childSize$ctx$index(childLayoutOffset, childSize, ctx, currentChildIndex);
              $async$goto = currentChildIndex !== index ? 19 : 21;
              break;
            case 19:
              // then
              t3._as(targetChild);
              C.assertHelper(targetChild.get$parent(0) === obj);
              t4 = targetChild.parentData;
              t4.toString;
              targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
              // goto for condition
              $async$goto = 17;
              break;
              // goto join
              $async$goto = 20;
              break;
            case 21:
              // else
              new A.ObserverScrollDecisionNotification().dispatch$1(ctx);
              calcResult = $async$self._calculateTargetLayoutOffset$6$alignment$childLayoutOffset$childSize$obj$offset$padding(alignment, childLayoutOffset, childSize, obj, offset, padding);
              t1 = isAnimateTo ? duration : null;
              $async$goto = 22;
              return C._asyncAwait($async$self._scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex(calcResult, _controller, isAnimateTo ? curve : null, t1, isAnimateTo, onPrepareScrollToIndex), $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding);
            case 22:
              // returning from await.
              $async$self._handleScrollEnd$2$completer$context(completer, ctx);
            case 20:
              // join
              // goto after for
              $async$goto = 18;
              break;
              // goto for condition
              $async$goto = 17;
              break;
            case 18:
              // after for
            case 11:
              // join
            case 4:
              // join
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding, $async$completer);
    },
    _scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex(calcResult, controller, curve, duration, isAnimateTo, onPrepareScrollToIndex) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, haveHandle, targetOffset, t2;
      var $async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              C.assertHelper(controller._positions.length !== 0);
              t1 = C._Future$value(null, type$.nullable_bool);
              $async$goto = 3;
              return C._asyncAwait(t1, $async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex);
            case 3:
              // returning from await.
              haveHandle = $async$result;
              if (haveHandle == null ? false : haveHandle) {
                // goto return
                $async$goto = 1;
                break;
              }
              targetOffset = calcResult.calculateTargetLayoutOffset;
              $async$goto = isAnimateTo ? 4 : 6;
              break;
            case 4:
              // then
              t1 = duration == null;
              C.assertHelper(!t1);
              t2 = curve == null;
              C.assertHelper(!t2);
              t1 = t1 ? B.Duration_1000 : duration;
              $async$goto = 7;
              return C._asyncAwait(controller.animateTo$3$curve$duration(targetOffset, t2 ? D.C__Linear : curve, t1), $async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex);
            case 7:
              // returning from await.
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              controller.jumpTo$1(targetOffset);
            case 5:
              // join
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex, $async$completer);
    },
    _calculateTargetLayoutOffset$6$alignment$childLayoutOffset$childSize$obj$offset$padding(alignment, childLayoutOffset, childSize, obj, offset, padding) {
      var t1, targetOffset, viewport, t2, scrollOffset, extremeScrollExtent, remainingBottomExtent, needScrollExtent, outerOffset;
      type$.nullable_double_Function_double._as(offset);
      t1 = type$.SliverConstraints;
      targetOffset = childLayoutOffset + t1._as(C.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent + childSize * alignment;
      viewport = A.ObserverUtils_findViewport(obj);
      if (viewport != null && viewport._viewport0$_offset._pixels != null) {
        t2 = viewport._viewport0$_offset._pixels;
        t2.toString;
        if (D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection)
          scrollOffset = t2;
        else
          scrollOffset = -t2;
        extremeScrollExtent = this.viewportExtremeScrollExtent$2$obj$viewport(obj, viewport);
        remainingBottomExtent = (D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? extremeScrollExtent : -extremeScrollExtent) - scrollOffset;
        needScrollExtent = targetOffset - scrollOffset;
      } else {
        scrollOffset = 0;
        remainingBottomExtent = 0;
        needScrollExtent = 0;
      }
      outerOffset = offset == null ? null : offset.call$1(targetOffset);
      needScrollExtent -= outerOffset == null ? 0 : outerOffset;
      targetOffset = D.JSNumber_methods.clamp$2(!(remainingBottomExtent >= needScrollExtent) ? remainingBottomExtent + scrollOffset : needScrollExtent + scrollOffset, 0, 17976931348623157e292);
      return new A.ObservePrepareScrollToIndexModel(D.GrowthDirection_0 === t1._as(C.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? targetOffset : -targetOffset);
    },
    _updateIndexOffsetMap$4$childLayoutOffset$childSize$ctx$index(childLayoutOffset, childSize, ctx, index) {
      var map;
      if (!this.ObserverControllerForScroll_cacheJumpIndexOffset)
        return;
      map = this.indexOffsetMap.$index(0, ctx);
      if (map == null)
        map = C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ObserveScrollChildModel);
      map.$indexSet(0, index, new A.ObserveScrollChildModel(childSize, childLayoutOffset));
      this.indexOffsetMap.$indexSet(0, ctx, map);
    },
    _handleScrollInterruption$2$completer$context(completer, context) {
      this.innerIsHandlingScroll = false;
      completer.complete$0(0);
      new A.ObserverScrollInterruptionNotification().dispatch$1(context);
    },
    _handleScrollEnd$2$completer$context(completer, context) {
      if (this.innerNeedOnceObserveCallBack != null)
        C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A.ObserverControllerForScroll__handleScrollEnd_closure(this, completer, context));
      else {
        this.innerIsHandlingScroll = false;
        completer.complete$0(0);
        new A.ObserverScrollEndNotification().dispatch$1(context);
      }
    }
  };
  A.CommonOnceObserveNotificationResult.prototype = {};
  A.ObserverAutoTriggerObserveType.prototype = {
    _enumToString$0() {
      return "ObserverAutoTriggerObserveType." + this._name;
    }
  };
  A.ObserverTriggerOnObserveType.prototype = {
    _enumToString$0() {
      return "ObserverTriggerOnObserveType." + this._name;
    }
  };
  A.ObserverRenderSliverType.prototype = {
    _enumToString$0() {
      return "ObserverRenderSliverType." + this._name;
    }
  };
  A.ObserverWidget.prototype = {
    createState$0() {
      var t1 = C._instanceType(this);
      return A.ObserverWidgetState$(t1._eval$1("ObserverWidget.C"), t1._eval$1("ObserverWidget.M"), t1._eval$1("ObserverWidget.N"), t1._eval$1("ObserverWidget<ObserverWidget.C,ObserverWidget.M,ObserverWidget.N>"));
    }
  };
  A.ObserverWidgetState.prototype = {
    get$innerAutoTriggerObserveScrollNotifications() {
      var t1, t2;
      this._widget.toString;
      t1 = C._setArrayType([B.ObserverAutoTriggerObserveType_0, B.ObserverAutoTriggerObserveType_1, B.ObserverAutoTriggerObserveType_2], type$.JSArray_ObserverAutoTriggerObserveType);
      t2 = type$.MappedListIterable_ObserverAutoTriggerObserveType_Type;
      return C.List_List$of(new C.MappedListIterable(t1, type$.Type_Function_ObserverAutoTriggerObserveType._as(new A.ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure()), t2), true, t2._eval$1("ListIterable.E"));
    },
    _observer_widget$_debugAssertNotDisposed$0() {
      C.assertHelper(new A.ObserverWidgetState__debugAssertNotDisposed_closure(this).call$0());
      return true;
    },
    initState$0() {
      this.super$State$initState();
      this._setupSliverController$1$isInitState(true);
    },
    didUpdateWidget$1(oldWidget) {
      C._instanceType(this)._eval$1("ObserverWidgetState.T")._as(oldWidget);
      this.super$State$didUpdateWidget(oldWidget);
      this._checkTagChange$1(oldWidget);
    },
    dispose$0() {
      var t1, _this = this;
      _this._observer_widget$_debugAssertNotDisposed$0();
      t1 = _this.innerListeners;
      if (t1 != null)
        t1.clear$0(0);
      _this.set$innerListeners(null);
      _this.super$State$dispose();
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = C._instanceType(_this),
        resultWidget = new C.NotificationListener(new A.ObserverWidgetState_build_closure(_this), new C.NotificationListener(new A.ObserverWidgetState_build_closure0(_this), new A.ObserverWidgetScope(_this, _this.get$_handleScopeContext(), _this._widget.child, _null, t1._eval$1("ObserverWidgetScope<ObserverWidgetState.C,ObserverWidgetState.M,ObserverWidgetState.N,ObserverWidgetState.T>")), _null, type$.NotificationListener_ScrollNotification), _null, t1._eval$1("NotificationListener<ObserverWidgetState.N>"));
      return context.dependOnInheritedWidgetOfExactType$1$0(type$.ObserverWidgetTagManager) == null ? new A.ObserverWidgetTagManager(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.BuildContext), resultWidget, _null) : resultWidget;
    },
    _setupSliverController$1$isInitState(isInitState) {
      var _this = this,
        sliverController = _this._widget.sliverController;
      sliverController.set$indexOffsetMap(C.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.Map_int_ObserveScrollChildModel));
      sliverController.innerIsHandlingScroll = false;
      sliverController.set$innerNeedOnceObserveCallBack(new A.ObserverWidgetState__setupSliverController_closure(_this));
      sliverController.set$innerReattachCallBack(new A.ObserverWidgetState__setupSliverController_closure0(_this));
      C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A.ObserverWidgetState__setupSliverController_closure1(_this, sliverController, isInitState));
    },
    _setupSliverController$0() {
      return this._setupSliverController$1$isInitState(false);
    },
    fetchTargetSliverContexts$0() {
      var visitor, sliverListContexts, _ctxs, exception, _this = this,
        ctxs = _this.targetSliverContexts;
      if (J.get$isEmpty$asx(ctxs)) {
        sliverListContexts = _this._widget.sliverContexts;
        if (sliverListContexts != null)
          ctxs = sliverListContexts.call$0();
        else {
          _ctxs = C._setArrayType([], type$.JSArray_BuildContext);
          visitor = new A.ObserverWidgetState_fetchTargetSliverContexts_visitor(_this, _ctxs);
          try {
            _this.get$context(0).visitChildElements$1(visitor);
          } catch (exception) {
          }
          ctxs = _ctxs;
        }
      }
      return ctxs;
    },
    fetchLeadingOffset$0() {
      var offset = this._widget.leadingOffset;
      return offset;
    },
    isTargetSliverContextType$1(obj) {
      this._widget.toString;
      return obj instanceof C.RenderSliverList;
    },
    updateInnerCanHandleObserve$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$updateInnerCanHandleObserve$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              $async$self.innerCanHandleObserve = true;
              // goto return
              $async$goto = 1;
              break;
              if (!$async$self.innerCanHandleObserve) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.innerCanHandleObserve = false;
              $async$goto = 3;
              return C._asyncAwait(C.Future_Future$delayed(D.Duration_0, null, type$.dynamic), $async$updateInnerCanHandleObserve$0);
            case 3:
              // returning from await.
              $async$self.innerCanHandleObserve = true;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$updateInnerCanHandleObserve$0, $async$completer);
    },
    handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, isIgnoreInnerCanHandleObserve) {
      var t1, t2, t3, isHandlingScroll, ctxs, resultMap, changeResultMap, changeResultModel, i, ctx, targetObserveModel, lastResultModel, _this = this, _null = null;
      if (!isIgnoreInnerCanHandleObserve) {
        if (!_this.innerCanHandleObserve)
          return _null;
        _this.updateInnerCanHandleObserve$0();
      }
      t1 = _this._widget;
      t1.toString;
      if (isDependObserveCallback) {
        t2 = false;
        t3 = _this.innerListeners;
        t2 = t3 == null ? _null : t3._collection$_length === 0;
        t2 = t2 !== false;
        if (t2)
          return _null;
      }
      isHandlingScroll = t1.sliverController.innerIsHandlingScroll;
      if (isHandlingScroll)
        return _null;
      ctxs = _this.fetchTargetSliverContexts$0();
      t1 = type$.BuildContext;
      t2 = C._instanceType(_this);
      t3 = t2._eval$1("ObserverWidgetState.M");
      resultMap = C.LinkedHashMap_LinkedHashMap$_empty(t1, t3);
      changeResultMap = C.LinkedHashMap_LinkedHashMap$_empty(t1, t3);
      for (t1 = J.getInterceptor$asx(ctxs), t3 = !isForceObserve, changeResultModel = _null, i = 0; i < t1.get$length(ctxs); ++i) {
        ctx = t1.$index(ctxs, i);
        targetObserveModel = _this.handleObserve$1(ctx);
        if (targetObserveModel == null)
          continue;
        resultMap.$indexSet(0, ctx, targetObserveModel);
        if (!t3 || _this._widget.triggerOnObserveType === B.ObserverTriggerOnObserveType_0)
          changeResultMap.$indexSet(0, ctx, targetObserveModel);
        else {
          lastResultModel = _this.lastResultMap.$index(0, ctx);
          if (lastResultModel == null)
            changeResultMap.$indexSet(0, ctx, targetObserveModel);
          else if (!lastResultModel.$eq(0, targetObserveModel))
            changeResultMap.$indexSet(0, ctx, targetObserveModel);
        }
        if (i === 0 && changeResultMap.$index(0, ctx) != null)
          changeResultModel = changeResultMap.$index(0, ctx);
      }
      _this.set$lastResultMap(resultMap);
      _this._observer_widget$_notifyListeners$1(changeResultMap);
      return new A.ObserverHandleContextsResultModel(changeResultModel, changeResultMap, t2._eval$1("ObserverHandleContextsResultModel<ObserverWidgetState.M>"));
    },
    handleContexts$1$isIgnoreInnerCanHandleObserve(isIgnoreInnerCanHandleObserve) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, isIgnoreInnerCanHandleObserve);
    },
    handleContexts$3$isDependObserveCallback$isForceObserve$isFromObserveNotification(isDependObserveCallback, isForceObserve, isFromObserveNotification) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, true);
    },
    handleContexts$0() {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, true);
    },
    handleObserve$1(ctx) {
      this._widget.toString;
      return null;
    },
    _handleScopeContext$1(ctx) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$_handleScopeContext$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.scopeContext = ctx;
              $async$self._widget.toString;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_handleScopeContext$1, $async$completer);
    },
    _checkTagChange$1(oldWidget) {
      return this._checkTagChange$body$ObserverWidgetState(C._instanceType(this)._eval$1("ObserverWidgetState.T")._as(oldWidget));
    },
    _checkTagChange$body$ObserverWidgetState(oldWidget) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, _scopeContext, tagManager;
      var $async$_checkTagChange$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              $async$goto = 3;
              return C._asyncAwait(C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).get$endOfFrame(), $async$_checkTagChange$1);
            case 3:
              // returning from await.
              _scopeContext = $async$self.scopeContext;
              if (_scopeContext == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              C.assertHelper(_scopeContext._widget != null);
              tagManager = _scopeContext.dependOnInheritedWidgetOfExactType$1$0(type$.ObserverWidgetTagManager);
              if (tagManager != null)
                tagManager._tagMap.remove$1(0, "");
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_checkTagChange$1, $async$completer);
    },
    _observer_widget$_notifyListeners$1(changeResultMap) {
      var entry, _sliverContext, result, exception, stack, _listeners, localListeners, t2, t3, _i, t4, exception0, t5, _this = this,
        t1 = C._instanceType(_this);
      t1._eval$1("Map<BuildContext,ObserverWidgetState.M>")._as(changeResultMap);
      if (changeResultMap.__js_helper$_length === 0)
        return;
      _listeners = _this.innerListeners;
      if (_listeners == null || _listeners._collection$_length === 0)
        return;
      localListeners = C.List_List$of(_listeners, true, t1._eval$1("ObserverListenerEntry<ObserverWidgetState.M>"));
      for (t2 = localListeners.length, t3 = t1._eval$1("~(Map<BuildContext,ObserverWidgetState.M>)?"), t1 = t1._eval$1("~(ObserverWidgetState.M)?"), _i = 0; _i < t2; ++_i) {
        entry = localListeners[_i];
        try {
          J.get$list$x(entry);
          t4 = t3._as(entry.get$onObserveAll());
          t4.call$1(changeResultMap);
          t1._as(entry.get$onObserve());
          _sliverContext = J.get$context$x(entry);
          if (_sliverContext == null && J.get$isNotEmpty$asx(_this.targetSliverContexts))
            _sliverContext = J.get$first$ax(_this.targetSliverContexts);
          result = changeResultMap.$index(0, _sliverContext);
          if (result == null)
            continue;
          t1._as(entry.get$onObserve()).call$1(result);
        } catch (exception0) {
          exception = C.unwrapException(exception0);
          stack = C.getTraceFromException(exception0);
          t4 = C.ErrorDescription$("while dispatching result for " + C.getRuntimeTypeOfDartObject(_this).toString$0(0));
          t5 = $.$get$FlutterError_onError();
          if (t5 != null)
            t5.call$1(new C.FlutterErrorDetails(exception, stack, "scrollview_observer", t4, new A.ObserverWidgetState__notifyListeners_closure(_this), false));
        }
      }
    },
    set$targetSliverContexts(targetSliverContexts) {
      this.targetSliverContexts = type$.List_BuildContext._as(targetSliverContexts);
    },
    set$lastResultMap(lastResultMap) {
      this.lastResultMap = C._instanceType(this)._eval$1("Map<BuildContext,ObserverWidgetState.M>")._as(lastResultMap);
    },
    set$innerListeners(innerListeners) {
      this.innerListeners = C._instanceType(this)._eval$1("LinkedList<ObserverListenerEntry<ObserverWidgetState.M>>?")._as(innerListeners);
    }
  };
  A.ObserverWidgetScope.prototype = {
    createElement$0(_) {
      var element = this.super$InheritedWidget$createElement(0);
      this.onCreateElement.call$1(element);
      return element;
    },
    updateShouldNotify$1(oldWidget) {
      return this.observerWidgetState !== type$.ObserverWidgetScope_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification._as(oldWidget).observerWidgetState;
    }
  };
  A.ObserverWidgetTagManager.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this._tagMap !== type$.ObserverWidgetTagManager._as(oldWidget)._tagMap;
    }
  };
  A.ObserverWidgetObserveResultType.prototype = {
    _enumToString$0() {
      return "ObserverWidgetObserveResultType." + this._name;
    }
  };
  A.GridViewObserveDisplayingChildModel.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.GridViewObserveDisplayingChildModel)
        return this.index === other.index && this.renderObject === other.renderObject;
      else
        return false;
    },
    get$hashCode(_) {
      return this.index + C.Primitives_objectHashCode(this.renderObject);
    }
  };
  A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin.prototype = {};
  A.GridViewObserveModel.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.GridViewObserveModel) {
        t1 = type$.GridViewObserveDisplayingChildModel;
        return C.listEquals(_this.firstGroupChildList, other.firstGroupChildList, t1) && C.listEquals(_this.displayingChildModelList, other.displayingChildModelList, t1) && C.mapEquals(_this.displayingChildModelMap, other.displayingChildModelMap, type$.int, t1);
      } else
        return false;
    },
    get$hashCode(_) {
      return C.Primitives_objectHashCode(this.firstGroupChildList) + C.Primitives_objectHashCode(this.displayingChildModelList) + C.Primitives_objectHashCode(this.displayingChildModelMap);
    }
  };
  A.ListViewObserveDisplayingChildModel.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.ListViewObserveDisplayingChildModel)
        return this.index === other.index && this.renderObject === other.renderObject;
      else
        return false;
    },
    get$hashCode(_) {
      return this.index + C.Primitives_objectHashCode(this.renderObject);
    }
  };
  A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin.prototype = {};
  A.ListViewObserveModel.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.ListViewObserveModel) {
        if (J.$eq$(_this.firstChild, other.firstChild)) {
          t1 = type$.ListViewObserveDisplayingChildModel;
          t1 = C.listEquals(_this.displayingChildModelList, other.displayingChildModelList, t1) && C.mapEquals(_this.displayingChildModelMap, other.displayingChildModelMap, type$.int, t1);
        } else
          t1 = false;
        return t1;
      } else
        return false;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.firstChild) + C.Primitives_objectHashCode(this.displayingChildModelList) + C.Primitives_objectHashCode(this.displayingChildModelMap);
    }
  };
  A.ObserverScrollNotification.prototype = {
    dispatch$1(target) {
      var t1 = target == null ? null : target._widget != null;
      if (t1 !== true)
        return;
      this.super$Notification$dispatch(target);
    }
  };
  A.ObserverScrollStartNotification.prototype = {};
  A.ObserverScrollInterruptionNotification.prototype = {};
  A.ObserverScrollDecisionNotification.prototype = {};
  A.ObserverScrollEndNotification.prototype = {};
  A.SliverObserverHandleContextsResultModel.prototype = {};
  A.SliverViewportObserveDisplayingChildModel.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.SliverViewportObserveDisplayingChildModel)
        return this.sliverContext === other.sliverContext && this.sliver === other.sliver;
      else
        return false;
    },
    get$hashCode(_) {
      return C.Primitives_objectHashCode(this.sliverContext) + C.Primitives_objectHashCode(this.sliver);
    }
  };
  A.SliverViewportObserveModel.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.SliverViewportObserveModel)
        return _this.viewport === other.viewport && _this.firstChild.$eq(0, other.firstChild) && C.listEquals(_this.displayingChildModelList, other.displayingChildModelList, type$.SliverViewportObserveDisplayingChildModel);
      else
        return false;
    },
    get$hashCode(_) {
      var t1 = this.firstChild;
      return C.Primitives_objectHashCode(this.viewport) + (C.Primitives_objectHashCode(t1.sliverContext) + C.Primitives_objectHashCode(t1.sliver)) + C.Primitives_objectHashCode(this.displayingChildModelList);
    }
  };
  A.SliverObserverController.prototype = {};
  A._SliverObserverController_ObserverController_ObserverControllerForInfo.prototype = {};
  A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll.prototype = {};
  A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification.prototype = {};
  A.ScrollViewOnceObserveNotificationResult.prototype = {};
  A.SliverViewObserver.prototype = {
    createState$0() {
      return new A.MixViewObserverState(new C.LinkedList(type$.LinkedList_SliverObserverListenerEntry), C._setArrayType([], type$.JSArray_BuildContext), C.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.ObserveModel), new C.LinkedList(type$.LinkedList_ObserverListenerEntry_ObserveModel), D._StateLifecycle_0);
    }
  };
  A.MixViewObserverState.prototype = {
    _sliver_observer_view$_debugAssertNotDisposed$0() {
      C.assertHelper(new A.MixViewObserverState__debugAssertNotDisposed_closure(this).call$0());
      return true;
    },
    dispose$0() {
      var t1, _this = this;
      _this._sliver_observer_view$_debugAssertNotDisposed$0();
      t1 = _this.innerSliverListeners;
      if (t1 != null)
        t1.clear$0(0);
      _this.set$innerSliverListeners(null);
      _this.super$ObserverWidgetState$dispose();
    },
    handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, isIgnoreInnerCanHandleObserve) {
      var observeViewportResult, handleContextsResult, t1, t2, _this = this, _null = null;
      if (!isIgnoreInnerCanHandleObserve) {
        if (!_this.innerCanHandleObserve)
          return _null;
        _this.updateInnerCanHandleObserve$0();
      }
      observeViewportResult = _this.handleObserveViewport$2$isDependObserveCallback$isForceObserve(isDependObserveCallback, isForceObserve);
      _this._notifySliverListeners$1(observeViewportResult);
      handleContextsResult = _this.super$ObserverWidgetState$handleContexts(isDependObserveCallback, isForceObserve, isFromObserveNotification, true);
      if (observeViewportResult == null && handleContextsResult == null)
        return _null;
      t1 = handleContextsResult == null;
      t2 = t1 ? _null : handleContextsResult.changeResultModel;
      t1 = t1 ? _null : handleContextsResult.changeResultMap;
      if (t1 == null)
        t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.ObserveModel);
      return new A.SliverObserverHandleContextsResultModel(observeViewportResult, t2, t1, type$.SliverObserverHandleContextsResultModel_ObserveModel);
    },
    handleContexts$1$isIgnoreInnerCanHandleObserve(isIgnoreInnerCanHandleObserve) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, isIgnoreInnerCanHandleObserve);
    },
    handleContexts$3$isDependObserveCallback$isForceObserve$isFromObserveNotification(isDependObserveCallback, isForceObserve, isFromObserveNotification) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, true);
    },
    handleContexts$0() {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, true);
    },
    handleObserve$1(ctx) {
      var _obj, _this = this;
      _this._widget.toString;
      _obj = A.ObserverUtils_findRenderObject(ctx);
      if (A.ListViewObserver_isSupportRenderSliverType(_obj))
        return A.ObserverCore_handleListObserve(ctx, null, _this.get$fetchLeadingOffset(), _this._widget.toNextOverPercent);
      else if (_obj instanceof A.RenderSliverGrid)
        return A.ObserverCore_handleGridObserve(ctx, null, _this.get$fetchLeadingOffset(), _this._widget.toNextOverPercent);
      _this._widget.toString;
      return null;
    },
    handleObserveViewport$2$isDependObserveCallback$isForceObserve(isDependObserveCallback, isForceObserve) {
      var t2, t3, isHandlingScroll, ctxs, objList, firstObj, viewport, viewportOffset, targetChild, offset, startCalcPixels, indexOfTargetChild, viewportBottomOffset, t4, t5, nextChild, firstChild, displayingChildModelList, model, canReturnResult, _this = this, _null = null,
        t1 = _this._widget;
      t1.toString;
      t2 = false;
      if (isDependObserveCallback) {
        t3 = _this.innerSliverListeners;
        t2 = t3 == null ? _null : t3._collection$_length === 0;
        t2 = t2 !== false;
      }
      if (t2)
        return _null;
      isHandlingScroll = t1.sliverController.innerIsHandlingScroll;
      if (isHandlingScroll)
        return _null;
      ctxs = _this.fetchTargetSliverContexts$0();
      t1 = J.getInterceptor$ax(ctxs);
      t2 = t1.map$1$1(ctxs, new A.MixViewObserverState_handleObserveViewport_closure(), type$.nullable_RenderObject);
      objList = C.List_List$of(t2, true, t2.$ti._eval$1("ListIterable.E"));
      if (objList.length === 0)
        return _null;
      firstObj = D.JSArray_methods.get$first(objList);
      if (firstObj == null)
        return _null;
      viewport = A.ObserverUtils_findViewport(firstObj);
      if (viewport == null)
        return _null;
      viewportOffset = viewport._viewport0$_offset;
      targetChild = viewport.ContainerRenderObjectMixin__firstChild;
      if (targetChild == null)
        return _null;
      offset = _this._widget.leadingOffset;
      t2 = viewportOffset._pixels;
      t2.toString;
      startCalcPixels = t2 + offset;
      indexOfTargetChild = D.JSArray_methods.indexOf$1(objList, targetChild);
      t3 = viewportOffset._viewportDimension;
      t3.toString;
      viewportBottomOffset = t2 + t3;
      t2 = C._instanceType(viewport);
      t3 = t2._eval$1("ContainerRenderObjectMixin.0");
      t2 = t2._eval$1("ContainerRenderObjectMixin.1");
      while (true) {
        t4 = indexOfTargetChild === -1;
        if (!(t4 || !A.ObserverUtils_isDisplayingSliverInViewport(targetChild, viewportBottomOffset, startCalcPixels)))
          break;
        t3._as(targetChild);
        C.assertHelper(targetChild.get$parent(0) === viewport);
        t5 = targetChild.parentData;
        t5.toString;
        nextChild = t2._as(t5).ContainerParentDataMixin_nextSibling;
        if (nextChild == null)
          break;
        indexOfTargetChild = D.JSArray_methods.indexOf$1(objList, nextChild);
        targetChild = nextChild;
      }
      if (t4)
        return _null;
      firstChild = new A.SliverViewportObserveDisplayingChildModel(t1.$index(ctxs, indexOfTargetChild), targetChild);
      displayingChildModelList = C._setArrayType([firstChild], type$.JSArray_SliverViewportObserveDisplayingChildModel);
      targetChild = viewport.childAfter$1(targetChild);
      for (; targetChild != null;) {
        if (!A.ObserverUtils_isDisplayingSliverInViewport(targetChild, viewportBottomOffset, startCalcPixels))
          break;
        indexOfTargetChild = D.JSArray_methods.indexOf$1(objList, targetChild);
        if (indexOfTargetChild !== -1)
          D.JSArray_methods.add$1(displayingChildModelList, new A.SliverViewportObserveDisplayingChildModel(t1.$index(ctxs, indexOfTargetChild), targetChild));
        t3._as(targetChild);
        C.assertHelper(targetChild.get$parent(0) === viewport);
        t4 = targetChild.parentData;
        t4.toString;
        targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
      }
      model = new A.SliverViewportObserveModel(viewport, firstChild, displayingChildModelList);
      if (isForceObserve || _this._widget.triggerOnObserveType === B.ObserverTriggerOnObserveType_0)
        canReturnResult = true;
      else
        canReturnResult = !model.$eq(0, _this.lastViewportObserveResultModel);
      _this.lastViewportObserveResultModel = model;
      return canReturnResult ? model : _null;
    },
    _notifySliverListeners$1(observeViewportResult) {
      var entry, exception, stack, listeners, localListeners, t1, _i, t2, exception0, t3;
      if (observeViewportResult == null)
        return;
      listeners = this.innerSliverListeners;
      if (listeners == null || listeners._collection$_length === 0)
        return;
      localListeners = C.List_List$of(listeners, true, type$.SliverObserverListenerEntry);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        entry = localListeners[_i];
        try {
          J.get$list$x(entry);
          t2 = entry.get$onObserveViewport();
          t2.call$1(observeViewportResult);
        } catch (exception0) {
          exception = C.unwrapException(exception0);
          stack = C.getTraceFromException(exception0);
          t2 = C.ErrorDescription$("while dispatching result for " + C.getRuntimeTypeOfDartObject(this).toString$0(0));
          t3 = $.$get$FlutterError_onError();
          if (t3 != null)
            t3.call$1(new C.FlutterErrorDetails(exception, stack, "scrollview_observer", t2, new A.MixViewObserverState__notifySliverListeners_closure(this), false));
        }
      }
    },
    set$innerSliverListeners(innerSliverListeners) {
      this.innerSliverListeners = type$.nullable_LinkedList_SliverObserverListenerEntry._as(innerSliverListeners);
    }
  };
  A.ShimmerDirection.prototype = {
    _enumToString$0() {
      return "ShimmerDirection." + this._name;
    }
  };
  A.Shimmer.prototype = {
    createState$0() {
      return new A._ShimmerState(null, null, D._StateLifecycle_0);
    },
    debugFillProperties$1(properties) {
      var _null = null;
      this.super$Widget$debugFillProperties(properties);
      properties.add$1(0, C.DiagnosticsProperty$("gradient", this.gradient, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Gradient));
      properties.add$1(0, C.EnumProperty$("direction", B.ShimmerDirection_0, D.C__NoDefaultValue, D.DiagnosticLevel_3, type$.ShimmerDirection));
      properties.add$1(0, C.DiagnosticsProperty$("period", this.period, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.Duration));
      properties.add$1(0, C.DiagnosticsProperty$("enabled", true, true, _null, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.bool));
      properties.add$1(0, C.DiagnosticsProperty$("loop", 0, true, 0, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.int));
    }
  };
  A._ShimmerState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this;
      _this.super$State$initState();
      t1 = C.AnimationController$(null, _this._widget.period, null, null, _this);
      t2 = type$.void_Function_AnimationStatus._as(new A._ShimmerState_initState_closure(_this));
      t1.didRegisterListener$0();
      t3 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t3.$ti._precomputed1._as(t2);
      t3._isDirty = true;
      D.JSArray_methods.add$1(t3._list, t2);
      _this.___ShimmerState__controller_A = t1;
      _this._widget.toString;
      t1.forward$0(0);
    },
    didUpdateWidget$1(oldWidget) {
      var t1;
      type$.Shimmer._as(oldWidget);
      this._widget.toString;
      t1 = this.___ShimmerState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.forward$0(0);
      this.super$State$didUpdateWidget(oldWidget);
    },
    build$1(context) {
      var t1 = this.___ShimmerState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      return C.AnimatedBuilder$(t1, new A._ShimmerState_build_closure(this), this._widget.child);
    },
    dispose$0() {
      var t1 = this.___ShimmerState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.dispose$0();
      this.super$__ShimmerState_State_SingleTickerProviderStateMixin$dispose();
    },
    $isTickerProvider: 1
  };
  A._Shimmer.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._ShimmerFilter(this.direction, this.gradient, this.percent, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, shimmer) {
      type$._ShimmerFilter._as(shimmer);
      shimmer.set$percent(0, this.percent);
      shimmer.set$gradient(this.gradient);
      shimmer.set$direction(0, this.direction);
    }
  };
  A._ShimmerFilter.prototype = {
    get$alwaysNeedsCompositing() {
      return this.RenderObjectWithChildMixin__child != null;
    },
    set$percent(_, newValue) {
      if (newValue === this._percent)
        return;
      this._percent = newValue;
      this.markNeedsPaint$0();
    },
    set$gradient(newValue) {
      if (newValue.$eq(0, this._gradient))
        return;
      this._gradient = newValue;
      this.markNeedsPaint$0();
    },
    set$direction(_, newDirection) {
      if (newDirection === this._shimmer$_direction)
        return;
      this._shimmer$_direction = newDirection;
      this.markNeedsLayout$0();
    },
    paint$2(context, offset) {
      var t1, width, height, rect, t2, t3, t4, t5, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        C.assertHelper(!_this._needsCompositingBitsUpdate);
        t1 = _this.__RenderObject__needsCompositing_A;
        t1 === $ && C.throwLateFieldNI("_needsCompositing");
        C.assertHelper(t1);
        width = _this.RenderObjectWithChildMixin__child.get$size(0)._dx;
        height = _this.RenderObjectWithChildMixin__child.get$size(0)._dy;
        t1 = _this._shimmer$_direction;
        if (t1 === B.ShimmerDirection_1) {
          t1 = width + (-width - width) * _this._percent - width;
          rect = new C.Rect(t1, 0, t1 + 3 * width, 0 + height);
        } else if (t1 === B.ShimmerDirection_2) {
          t1 = -height;
          t1 = t1 + (height - t1) * _this._percent - height;
          rect = new C.Rect(0, t1, 0 + width, t1 + 3 * height);
        } else {
          t2 = _this._percent;
          if (t1 === B.ShimmerDirection_3) {
            t1 = height + (-height - height) * t2 - height;
            rect = new C.Rect(0, t1, 0 + width, t1 + 3 * height);
          } else {
            t1 = -width;
            t2 = t1 + (width - t1) * t2 - width;
            rect = new C.Rect(t2, 0, t2 + 3 * width, 0 + height);
          }
        }
        t1 = type$.nullable_ShaderMaskLayer;
        if (t1._as(C.RenderObject.prototype.get$layer.call(_this, 0)) == null) {
          t2 = A.ShaderMaskLayer$();
          _this.get$isRepaintBoundary();
          _this._layerHandle.set$layer(0, t2);
        }
        t2 = t1._as(C.RenderObject.prototype.get$layer.call(_this, 0));
        t2.toString;
        t2.set$shader(_this._gradient.createShader$1(0, rect));
        t3 = _this.get$size(0);
        t4 = offset._dx;
        t5 = offset._dy;
        t2.set$maskRect(new C.Rect(t4, t5, t4 + t3._dx, t5 + t3._dy));
        t2.set$blendMode(D.BlendMode_5);
        t1 = t1._as(C.RenderObject.prototype.get$layer.call(_this, 0));
        t1.toString;
        context.pushLayer$3(t1, C.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
      } else {
        _this.get$isRepaintBoundary();
        _this._layerHandle.set$layer(0, null);
      }
    }
  };
  A.__ShimmerState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__ShimmerState_State_SingleTickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    },
    debugFillProperties$1(properties) {
      var t1, t2, _0_1, _0_3, t3, _0_5, t4, t5, _0_7, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.SingleTickerProviderStateMixin__ticker;
      t2 = t1 == null;
      _0_1 = t2 ? _null : t1._ticker$_future != null;
      t2 = t2 ? _null : t1._muted;
      $label0$0: {
        _0_3 = true === _0_1;
        t3 = _0_3;
        C.boolConversionCheck(t3);
        if (t3) {
          _0_5 = true === t2;
          t4 = _0_5;
        } else {
          _0_5 = _null;
          t4 = false;
        }
        t5 = _null;
        if (t4) {
          t2 = "active but muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_3)) {
          t2 = "active";
          break $label0$0;
        }
        _0_7 = false === _0_1;
        t4 = _0_7;
        if (C.boolConversionCheck(t4))
          t2 = C.boolConversionCheck(t3 ? _0_5 : true === t2);
        else
          t2 = false;
        if (t2) {
          t2 = "inactive and muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_7)) {
          t2 = "inactive";
          break $label0$0;
        }
        if (_0_1 == null) {
          t2 = t5;
          break $label0$0;
        }
        t2 = t5;
      }
      properties.add$1(0, C.DiagnosticsProperty$("ticker", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, false, D.DiagnosticsTreeStyle_8, _null, type$.Ticker));
    }
  };
  A.Orderable.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (C._instanceType(_this)._eval$1("Orderable.T")._is(other))
          if (C.getRuntimeTypeOfDartObject(_this) === C.getRuntimeTypeOfDartObject(other)) {
            t1 = _this._native;
            t2 = other._native;
            t2 = D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond) === 0;
            t1 = t2;
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._native;
      return (C.Primitives_objectHashCode(C.getRuntimeTypeOfDartObject(this)) ^ 1000 * t1._core$_value + t1._microsecond) >>> 0;
    }
  };
  A.Date.prototype = {};
  A.LocalDate.prototype = {
    minus$1$days(days) {
      return A.LocalDate$_(A.DateTimes_minus(this._native, days, 0, 0));
    },
    $add(_, period) {
      type$.Period._as(period);
      return A.LocalDate$_(A.DateTimes_plus(this._native, period.days, period.months, period.years));
    },
    $sub(_, period) {
      type$.Period._as(period);
      return A.LocalDate$_(A.DateTimes_minus(this._native, period.days, period.months, period.years));
    },
    copyWith$3$day$month$year(day, month, year) {
      var t1 = year == null ? C.Primitives_getYear(this._native) : year,
        t2 = month == null ? C.Primitives_getMonth(this._native) : month;
      return new A.LocalDate(C.DateTime$utc(t1, t2, day == null ? C.Primitives_getDay(this._native) : day, 0, 0, 0, 0, 0));
    },
    copyWith$1$month(month) {
      return this.copyWith$3$day$month$year(null, month, null);
    },
    copyWith$1$year(year) {
      return this.copyWith$3$day$month$year(null, null, year);
    },
    copyWith$1$day(day) {
      return this.copyWith$3$day$month$year(day, null, null);
    },
    compareTo$1(_, other) {
      var t1 = this._native,
        t2 = type$.LocalDate._as(other)._native;
      return D.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond);
    },
    toString$0(_) {
      var t2, sign,
        t1 = this._date$_string;
      if (t1 == null) {
        t1 = this._native;
        t2 = C.Primitives_getYear(t1);
        sign = t2 < 0 ? "-" : "";
        t1 = this._date$_string = sign + D.JSString_methods.padLeft$2(D.JSInt_methods.toString$0(Math.abs(t2)), 4, "0") + "-" + D.JSString_methods.padLeft$2(D.JSInt_methods.toString$0(C.Primitives_getMonth(t1)), 2, "0") + "-" + D.JSString_methods.padLeft$2(D.JSInt_methods.toString$0(C.Primitives_getDay(t1)), 2, "0");
      }
      return t1;
    },
    $isComparable: 1
  };
  A._LocalDate_Date_Orderable.prototype = {};
  A.Period.prototype = {
    $add(_, other) {
      var _this = this;
      type$.Period._as(other);
      return new A.Period(_this.years + other.years, _this.months + other.months, _this.days + other.days, _this.hours + other.hours, _this.minutes + other.minutes, _this.seconds + other.seconds, _this.milliseconds + other.milliseconds, _this.microseconds + other.microseconds);
    },
    $sub(_, other) {
      var _this = this;
      type$.Period._as(other);
      return new A.Period(_this.years - other.years, _this.months - other.months, _this.days - other.days, _this.hours - other.hours, _this.minutes - other.minutes, _this.seconds - other.seconds, _this.milliseconds - other.milliseconds, _this.microseconds - other.microseconds);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Period && C.getRuntimeTypeOfDartObject(_this) === C.getRuntimeTypeOfDartObject(other) && _this.years === other.years && _this.months === other.months && _this.days === other.days && _this.hours === other.hours && _this.minutes === other.minutes && _this.seconds === other.seconds && _this.milliseconds === other.milliseconds && _this.microseconds === other.microseconds;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return D.JSInt_methods.get$hashCode(_this.years) ^ D.JSInt_methods.get$hashCode(_this.months) ^ D.JSInt_methods.get$hashCode(_this.days) ^ D.JSInt_methods.get$hashCode(_this.hours) ^ D.JSInt_methods.get$hashCode(_this.minutes) ^ D.JSInt_methods.get$hashCode(_this.seconds) ^ D.JSInt_methods.get$hashCode(_this.milliseconds) ^ D.JSInt_methods.get$hashCode(_this.microseconds);
    },
    toString$0(_) {
      var _this = this;
      return "Period[" + _this.years + " years, " + _this.months + " months, " + _this.days + " days, " + _this.hours + " hours, " + _this.minutes + " minutes, " + _this.seconds + " seconds, " + _this.milliseconds + " milliseconds, " + _this.microseconds + " microseconds]";
    }
  };
  A.DateUnit.prototype = {
    _enumToString$0() {
      return "DateUnit." + this._name;
    }
  };
  A.TimeUnit.prototype = {
    _enumToString$0() {
      return "TimeUnit." + this._name;
    }
  };
  A.TDCheckboxStyle.prototype = {
    _enumToString$0() {
      return "TDCheckboxStyle." + this._name;
    }
  };
  A.TDContentDirection.prototype = {
    _enumToString$0() {
      return "TDContentDirection." + this._name;
    }
  };
  A.TDCheckBoxSize.prototype = {
    _enumToString$0() {
      return "TDCheckBoxSize." + this._name;
    }
  };
  A.TDCheckbox.prototype = {
    createState$0() {
      return new A.TDCheckboxState(D._StateLifecycle_0);
    },
    buildDefaultIcon$3(context, groupState, isChecked) {
      var style, theme, deSelectedColor, t2,
        t1 = this.style;
      if (t1 == null) {
        t1 = groupState == null ? null : groupState._widget.style;
        style = t1;
      } else
        style = t1;
      if (style == null)
        style = B.TDCheckboxStyle_0;
      theme = C.TDTheme_of(context);
      deSelectedColor = style === B.TDCheckboxStyle_2 ? D.Color_Edl : C.TDColors_get_grayColor4(theme);
      if (style === B.TDCheckboxStyle_0)
        t1 = isChecked ? B.IconData_57689_MaterialIcons_null_false : B.IconData_61267_MaterialIcons_null_false;
      else if (style === B.TDCheckboxStyle_1)
        t1 = isChecked ? B.IconData_57687_MaterialIcons_null_false : B.IconData_57688_MaterialIcons_null_false;
      else
        t1 = B.IconData_57687_MaterialIcons_null_false;
      if (isChecked)
        t2 = C.TDColors_get_brandNormalColor(theme);
      else
        t2 = deSelectedColor;
      return C.Icon$(t1, t2, null, 24);
    }
  };
  A.TDCheckboxState.prototype = {
    initState$0() {
      this._widget.toString;
      this.checked = false;
      this.super$State$initState();
    },
    didUpdateWidget$1(oldWidget) {
      type$.TDCheckbox._as(oldWidget);
      this._widget.toString;
      this.checked = false;
      this.super$State$didUpdateWidget(oldWidget);
    },
    _td_check_box$_getPadding$1(size) {
      this._widget.toString;
      switch (size.index) {
        case 1:
          return B.EdgeInsets_0_12_0_12;
        case 0:
          return B.EdgeInsets_0_16_0_16;
      }
    },
    build$1(context) {
      var t2, t3, icon, title, t4, $content, t5, t6, t7, t8, t9, current, _this = this, _null = null,
        _s7_ = "fontMap",
        _s14_ = "fontBodyMedium",
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.TDCheckboxGroupInherited),
        groupState = t1 == null ? _null : t1.state,
        id = _this._widget.id;
      t1 = groupState == null;
      if (!t1 && id != null) {
        t2 = _this.checked;
        t3 = groupState.checkBoxStates;
        if (t3.$index(0, id) == null)
          t3.$indexSet(0, id, t2);
        t2 = t3.$index(0, id);
        t2.toString;
        _this.checked = t2;
      }
      icon = _this._buildCheckboxIcon$3(context, groupState, _this.checked);
      t2 = _this._widget;
      title = t2.title;
      if (!t1)
        groupState._widget.toString;
      if (title != null) {
        t2 = t2.titleMaxLine;
        if (t2 == null)
          t2 = t1 ? _null : groupState._widget.titleMaxLine;
        t3 = C.TDColors_get_fontGyColor1(C.TDTheme_of(context));
        _this._widget.toString;
        t4 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
        t4 === $ && C.throwLateFieldNI(_s7_);
        t4 = t4.$index(0, "fontBodyLarge");
        $content = C.TDText$(title, _null, t4, _null, _null, false, false, false, D.Color_wst, _null, t2, D.TextOverflow_2, _null, _null, _null, _null, _null, _null, t3, _null, _null, _null, _null);
      } else
        $content = _null;
      if ($content != null) {
        t2 = _this._widget;
        t2.toString;
        if (!t1)
          groupState._widget.toString;
        if (!t1)
          groupState._widget.toString;
        switch (t2.contentDirection.index) {
          case 0:
            t1 = _this._td_check_box$_getPadding$1(t2.size);
            t2 = _this._widget.insetSpacing;
            t3 = type$.JSArray_Widget;
            t2 = C.Row$(C._setArrayType([C.Expanded$(new C.Padding(new C.EdgeInsets(t2 == null ? 16 : t2, 0, 0, 0), $content, _null), 1, _null), new C.SizedBox(8, _null, _null, _null), new C.Padding(B.EdgeInsets_0_0_16_0, icon, _null)], t3), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1);
            t4 = _this._widget;
            t5 = t4.subTitle;
            t6 = t5 == null;
            t7 = !t6 && t5 !== "";
            t8 = t4.insetSpacing;
            if (t8 == null)
              t8 = 16;
            if (t6)
              t5 = "";
            t4 = t4.subTitleMaxLine;
            t6 = C.TDColors_get_fontGyColor3(C.TDTheme_of(context));
            t9 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
            t9 === $ && C.throwLateFieldNI(_s7_);
            t7 = C.Column$(C._setArrayType([t2, A.Visibility$(new C.Padding(new C.EdgeInsets(t8, 0, 16, 0), C.TDText$(t5, _null, t9.$index(0, _s14_), _null, _null, false, false, false, D.Color_wst, _null, t4, D.TextOverflow_2, _null, _null, _null, _null, _null, _null, t6, _null, _null, _null, _null), _null), false, D.SizedBox_0_0_null_null, t7)], t3), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
            t2 = _this._widget.showDivider;
            current = new C.Stack(D.Alignment_0_1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([new C.Padding(t1, t7, _null), A.Visibility$(B.TDDivider_3M0, false, D.SizedBox_0_0_null_null, t2)], t3), _null);
            break;
          case 1:
            t1 = _this._td_check_box$_getPadding$1(t2.size);
            t2 = _this._widget;
            t2 = t2.insetSpacing;
            t3 = type$.JSArray_Widget;
            t2 = C.Row$(C._setArrayType([new C.Padding(new C.EdgeInsets(16, 0, 0, 0), icon, _null), new C.SizedBox(8, _null, _null, _null), C.Expanded$(new C.Padding(new C.EdgeInsets(0, 0, t2 == null ? 16 : t2, 0), $content, _null), 1, _null)], t3), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1);
            t4 = _this._widget;
            t5 = t4.subTitle;
            t6 = t5 == null;
            t7 = !t6 && t5 !== "";
            t8 = t4.insetSpacing;
            if (t8 == null)
              t8 = 16;
            if (t6)
              t5 = "";
            t4 = t4.subTitleMaxLine;
            t6 = C.TDColors_get_fontGyColor3(C.TDTheme_of(context));
            _this._widget.toString;
            t9 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
            t9 === $ && C.throwLateFieldNI(_s7_);
            t9 = t9.$index(0, _s14_);
            t2 = C.Column$(C._setArrayType([t2, A.Visibility$(new C.Padding(new C.EdgeInsets(48, 0, t8, 0), C.TDText$(t5, _null, t9, _null, _null, false, false, false, D.Color_wst, _null, t4, D.TextOverflow_2, _null, _null, _null, _null, _null, _null, t6, _null, _null, _null, _null), _null), false, D.SizedBox_0_0_null_null, t7)], t3), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
            t4 = _this._widget.showDivider;
            current = new C.Stack(D.Alignment_0_1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([new C.Padding(t1, t2, _null), A.Visibility$(B.TDDivider_QF6, false, D.SizedBox_0_0_null_null, t4)], t3), _null);
            break;
          default:
            current = icon;
        }
      } else
        current = icon;
      if (!(_this.canNotCancel && _this.checked)) {
        if (_this._pressed)
          current = C.Opacity$(current, 0.68);
        current = C.GestureDetector$(D.HitTestBehavior_2, current, D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.TDCheckboxState_build_closure(_this, id, groupState), new A.TDCheckboxState_build_closure0(_this), new A.TDCheckboxState_build_closure1(_this), new A.TDCheckboxState_build_closure2(_this), _null, _null, _null, _null, _null);
      }
      _this._widget.toString;
      t1 = C.TDColors_get_whiteColor1(C.TDTheme_of(context));
      t2 = _this._widget;
      t2.toString;
      t1 = C.BoxDecoration$(_null, _null, _null, _null, t1, _null, _null, D.BoxShape_0);
      return C.Container$(_null, new C.Stack(D.AlignmentDirectional_m1_m1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([current, C.Positioned$(_null, A.Visibility$(new A.RadioCornerIcon(28, 4, t2.selectColor, _null), false, D.SizedBox_0_0_null_null, false), _null, _null, 0, _null, 0, _null)], type$.JSArray_Widget), _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    _pressState$1(pressed) {
      this._widget.toString;
      this._pressed = pressed;
      this.setState$1(new A.TDCheckboxState__pressState_closure());
    },
    onValueChange$3(id, value, groupState) {
      this._widget.toString;
      this.setState$1(new A.TDCheckboxState_onValueChange_closure(this, value, groupState, id));
    },
    _buildCheckboxIcon$3(context, groupState, isCheck) {
      var t1 = this._widget;
      t1.toString;
      if (groupState != null)
        groupState._widget.toString;
      return t1.buildDefaultIcon$3(context, groupState, isCheck);
    }
  };
  A.RadioCornerIcon.prototype = {
    build$1(context) {
      var _null = null,
        t1 = this.length,
        t2 = C.TDColors_get_brandNormalColor(C.TDTheme_of(context));
      return new C.SizedBox(t1, t1, new C.Stack(D.Alignment_m1_m1, _null, D.StackFit_0, D.Clip_1, C._setArrayType([C.CustomPaint$(_null, _null, _null, new A.RadioCorner(t1, this.radius, t2, _null), D.Size_0_0), B.Positioned_QIX], type$.JSArray_Widget), _null), _null);
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.RadioCorner.prototype = {
    paint$2(canvas, size) {
      var t2, rect, path,
        t1 = $.$get$_renderer(),
        paint = t1.createPaint$0();
      paint.set$isAntiAlias(true);
      paint.set$strokeWidth(1);
      paint.set$color(0, this.fillColor);
      paint.set$style(0, D.PaintingStyle_0);
      t2 = this.radius;
      rect = C.Rect$fromCircle(new C.Offset(t2, t2), t2);
      path = t1.createPath$0();
      path.moveTo$2(0, 0, t2);
      path.addArc$3(rect, 3.1415, 1.57075);
      path.moveTo$2(0, t2, 0);
      t1 = this.length;
      path.lineTo$2(0, t1, 0);
      path.lineTo$2(0, 0, t1);
      path.lineTo$2(0, 0, t2);
      canvas.drawPath$2(path, paint);
    },
    shouldRepaint$1(oldDelegate) {
      return false;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.TDCheckboxGroup.prototype = {
    createState$0() {
      return new A.TDCheckboxGroupState(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.bool), D._StateLifecycle_0);
    }
  };
  A.TDCheckboxGroupState.prototype = {
    initState$0() {
      this.super$State$initState();
      var t1 = this._widget;
      this._syncCheckState$1(t1.checkedIds);
    },
    _syncCheckState$1(checkIds) {
      type$.nullable_List_String._as(checkIds);
      this.checkBoxStates.clear$0(0);
      if (checkIds != null)
        J.forEach$1$ax(checkIds, new A.TDCheckboxGroupState__syncCheckState_closure(this));
    },
    didUpdateWidget$1(oldWidget) {
      var newCheckIds;
      type$.TDCheckboxGroup._as(oldWidget);
      this.super$State$didUpdateWidget(oldWidget);
      newCheckIds = this._widget.checkedIds;
      if (!J.$eq$(oldWidget.checkedIds, newCheckIds))
        this._syncCheckState$1(newCheckIds);
    },
    toggle$3(_, id, check, notify) {
      var t1, t2, _this = this;
      if (_this._widget.maxChecked != null && check) {
        t1 = A.MapExt_count(_this.checkBoxStates, new A.TDCheckboxGroupState_toggle_closure(), type$.String, type$.bool);
        t2 = _this._widget.maxChecked;
        t2.toString;
        if (t1 >= t2)
          return false;
      }
      _this.checkBoxStates.$indexSet(0, id, check);
      if (notify)
        _this.setState$1(new A.TDCheckboxGroupState_toggle_closure0());
      _this._notifyChange$0();
      return true;
    },
    toggle$2(_, id, check) {
      return this.toggle$3(0, id, check, false);
    },
    _notifyChange$0() {
      var change = this._widget.onChangeGroup,
        t1 = A.MapExt_where(this.checkBoxStates, new A.TDCheckboxGroupState__notifyChange_closure(), type$.String, type$.bool),
        t2 = C._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>");
      change.call$1(C.List_List$of(new C.LinkedHashMapKeysIterable(t1, t2), true, t2._eval$1("Iterable.E")));
    },
    build$1(context) {
      return new A.TDCheckboxGroupInherited(this, this._widget.child, null);
    }
  };
  A.TDCheckboxGroupInherited.prototype = {
    updateShouldNotify$1(oldWidget) {
      type$.TDCheckboxGroupInherited._as(oldWidget);
      return true;
    }
  };
  A.TDCheckboxGroupContainer.prototype = {
    createState$0() {
      return new A.TDCheckboxGroupContainerState(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.bool), D._StateLifecycle_0);
    }
  };
  A.TDCheckboxGroupContainerState.prototype = {};
  A.TDConfirmDialog.prototype = {
    _buildButton$1(context) {
      var _null = null;
      return C.Container$(_null, C.TDDialogButton$(_null, this.buttonText, _null, D.FontWeight_5_600, _null, D.TDButtonTheme_1, _null, 40, new A.TDConfirmDialog__buildButton_closure(this, context)), D.Clip_0, _null, _null, _null, _null, _null, _null, _null, B.EdgeInsets_24_24_24_24, _null, _null, _null);
    },
    build$1(context) {
      var _null = null;
      return new C.TDDialogScaffold(new C.LayoutBuilder(new A.TDConfirmDialog_build_closure(this), _null), _null, D.Color_wst, 12, _null, _null);
    }
  };
  A.TDForm.prototype = {
    createState$0() {
      return new A._TDFormState(C._setArrayType([], type$.JSArray_Widget), C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic), D._StateLifecycle_0);
    },
    onSubmit$2($receiver, arg0, arg1) {
      return this.onSubmit.call$2(arg0, arg1);
    }
  };
  A._TDFormState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this.set$_formData(_this._widget.data);
      t1 = _this._widget.formController;
      t1.addListener$1(0, new A._TDFormState_initState_closure(_this));
    },
    onReset$0(_) {
      ++this._upDataCount;
      this.setState$1(new A._TDFormState_onReset_closure(this));
    },
    onSubmit$0(_) {
      var _this = this, t1 = {};
      ++_this._upDataCount;
      _this._isReset = false;
      t1.isValidateSuc = true;
      _this._formData.forEach$1(0, new A._TDFormState_onSubmit_closure(t1, _this));
      if (!t1.isValidateSuc)
        _this.setState$1(new A._TDFormState_onSubmit_closure0(_this));
      _this._widget.onSubmit$2(0, _this._formData, t1.isValidateSuc);
    },
    validate$2($name, value) {
      this._widget.rules.$index(0, $name);
      return true;
    },
    build$1(context) {
      var t4, t5, _this = this, _null = null,
        t1 = _this._widget.items,
        t2 = C._arrayInstanceType(t1),
        t3 = t2._eval$1("ExpandIterable<1,Widget>");
      _this.set$_formItems(C.List_List$of(new C.ExpandIterable(t1, t2._eval$1("Iterable<Widget>(1)")._as(new A._TDFormState_build_closure()), t3), true, t3._eval$1("Iterable.E")));
      t1 = _this._widget;
      t2 = _this._formItems;
      t1 = t1.btnGroup;
      D.JSArray_methods.addAll$1(t2, t1);
      t1 = _this._widget;
      t2 = t1.data;
      t3 = t1.labelWidth;
      t4 = _this._isValidate;
      t1 = t1.rules;
      t5 = _this._upDataCount;
      return new A.TDFormInherited(t2, t3, false, t4, t1, true, true, D.TextAlign_0, new A._TDFormState_build_closure0(_this), _this._isReset, t5, E.ListView$builder(500, _null, new A._TDFormState_build_closure1(_this), _this._formItems.length, _null, new A.NeverScrollableScrollPhysics(_null), D.Axis_1, true), _null);
    },
    set$_formItems(_formItems) {
      this._formItems = type$.List_Widget._as(_formItems);
    },
    set$_formData(_formData) {
      this._formData = type$.Map_String_dynamic._as(_formData);
    }
  };
  A.FormController.prototype = {
    submit$0(_) {
      this.eventType = "submit";
      this.notifyListeners$0();
    },
    set$formData(_, formData) {
      this.formData = type$.Map_String_dynamic._as(formData);
    },
    $isListenable: 1
  };
  A._FormController_Object_ChangeNotifier.prototype = {};
  A.TDFormInherited.prototype = {
    updateShouldNotify$1(oldWidget) {
      var t1, _this = this;
      type$.TDFormInherited._as(oldWidget);
      t1 = true;
      if (_this.updataCount === oldWidget.updataCount)
        if (_this.isReset === oldWidget.isReset)
          if (_this.labelWidth === oldWidget.labelWidth)
            if (_this.isValidate === oldWidget.isValidate)
              if (_this.rules === oldWidget.rules)
                t1 = _this.formContentAlign !== oldWidget.formContentAlign;
      return t1;
    }
  };
  A.TDFormItemType.prototype = {
    _enumToString$0() {
      return "TDFormItemType." + this._name;
    }
  };
  A.TDFormItem.prototype = {
    createState$0() {
      return new A._TDFormItemState(D._StateLifecycle_0);
    }
  };
  A._TDFormItemState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._widget.toString;
    },
    dispose$0() {
      this.super$State$dispose();
      this._widget.toString;
    },
    didChangeDependencies$0() {
      var _this = this;
      if (_this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited).isValidate)
        _this.startValidation$0();
      if (_this.get$FormIsReset())
        _this.errorMessage = "";
      _this.super$State$didChangeDependencies();
    },
    get$LabelWidth() {
      var t1,
        inherited = this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited);
      this._widget.toString;
      if ((inherited == null ? null : inherited.labelWidth) != null) {
        t1 = inherited.labelWidth;
        return t1;
      }
      return 8;
    },
    get$FormContentAlign() {
      var inherited = this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited);
      this._widget.toString;
      return inherited.formContentAlign;
    },
    get$FormIsHorizontal() {
      var inherited = this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited);
      if ((inherited == null && null) != null) {
        inherited.toString;
        return false;
      }
      return false;
    },
    get$FormIsReset() {
      var inherited = this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited);
      if ((inherited == null ? null : inherited.isReset) != null)
        return inherited.isReset;
      return false;
    },
    get$FormRequiredMark() {
      this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited).toString;
      return true;
    },
    get$ShowErrorMessage() {
      this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited);
      this._widget.toString;
      return true;
    },
    startValidation$0() {
      this.setState$1(new A._TDFormItemState_startValidation_closure(this));
    },
    validate$0() {
      this._widget.toString;
      null.toString;
      this.get$context(0).dependOnInheritedWidgetOfExactType$1$0(type$.TDFormInherited).rules.$index(0, null);
      return null;
    },
    build$1(context) {
      var t1, t2, t3, t4, labelContent, itemRowContent, itemColumnContent, t5, t6, t7, _this = this, _null = null,
        _s7_ = "fontMap",
        _s14_ = "fontBodyMedium",
        theme = C.TDTheme_of(context);
      _this._widget.toString;
      t1 = _this.get$LabelWidth();
      t2 = _this._widget.label;
      t3 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
      t3 === $ && C.throwLateFieldNI(_s7_);
      t3 = t3.$index(0, _s14_);
      _this._widget.toString;
      t4 = type$.JSArray_Widget;
      t3 = C._setArrayType([new C.Flexible(1, D.FlexFit_1, C.TDText$(t2, _null, t3, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Color_vnR, _null, _null, _null, _null), _null)], t4);
      t2 = _this.get$FormRequiredMark();
      if (t2)
        _this._widget.toString;
      if (t2) {
        _this._widget.toString;
        t3.push(new C.Padding(B.EdgeInsets_4_0_0_0, C.TDText$("*", _null, _null, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, F.TextStyle_yFz, _null, D.MaterialColor_nI1, _null, _null, _null, _null), _null));
      }
      t2 = C.Row$(t3, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
      labelContent = A.Visibility$(new C.SizedBox(t1, _null, t2, _null), false, D.SizedBox_0_0_null_null, true);
      _this.get$FormIsHorizontal();
      t2 = _this._widget.child;
      t1 = t2 == null;
      t3 = C.Expanded$(C.Align$(D.Alignment_1_0, t1 ? new C.SizedBox(_null, _null, _null, _null) : t2, _null, _null, _null), 1, _null);
      itemRowContent = C._setArrayType([labelContent, A.Visibility$(t3, false, t1 ? new C.SizedBox(_null, _null, _null, _null) : t2, false)], t4);
      _this.get$FormIsHorizontal();
      t2 = _this._widget.child;
      t1 = t2 == null;
      t3 = C.Expanded$(C.Align$(D.Alignment_1_0, t1 ? new C.SizedBox(_null, _null, _null, _null) : t2, _null, _null, _null), 1, _null);
      itemColumnContent = C._setArrayType([labelContent, new C.SizedBox(_null, 8, _null, _null), A.Visibility$(t3, false, t1 ? new C.SizedBox(_null, _null, _null, _null) : t2, false)], t4);
      switch (_this._widget.type.index) {
        case 0:
        case 5:
          t1 = C.TDColors_get_whiteColor1(C.TDTheme_of(context));
          t1 = C.BoxDecoration$(_null, _null, _null, _null, t1, _null, _null, D.BoxShape_0);
          _this.get$FormIsHorizontal();
          t2 = A.Visibility$(C.Row$(itemRowContent, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false, C.Column$(itemColumnContent, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false);
          return C.Container$(_null, new C.Padding(D.EdgeInsets_16_16_16_16, C.Column$(C._setArrayType([t2, _this._buildTipRow$2$left$top(0, B.TDFormItemType_5 === _this._widget.type ? 4 : 0)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null);
        case 1:
          t1 = C.TDColors_get_whiteColor1(C.TDTheme_of(context));
          t1 = C.BoxDecoration$(_null, _null, _null, _null, t1, _null, _null, D.BoxShape_0);
          _this.get$FormIsHorizontal();
          return C.Container$(_null, new C.Padding(D.EdgeInsets_16_16_16_16, C.Column$(C._setArrayType([A.Visibility$(C.Row$(itemRowContent, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false, C.Column$(itemColumnContent, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false), _this._buildTipRow$2$left$top(0, 4)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null);
        case 2:
        case 3:
          return _this._buildSelectRow$1(context);
        case 4:
          t1 = C.TDColors_get_whiteColor1(theme);
          t1 = C.BoxDecoration$(_null, _null, _null, _null, t1, _null, _null, D.BoxShape_0);
          _this.get$FormIsHorizontal();
          t2 = _this._widget.child;
          return C.Container$(_null, new C.Padding(D.EdgeInsets_16_16_16_16, C.Column$(C._setArrayType([A.Visibility$(C.Row$(C._setArrayType([labelContent, t2 == null ? new C.SizedBox(_null, _null, _null, _null) : t2], t4), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false, C.Column$(itemColumnContent, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false), _this._buildTipRow$3$left$right$top(0, 20, 4)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null);
        case 6:
          t1 = C.TDColors_get_whiteColor1(C.TDTheme_of(context));
          t1 = C.BoxDecoration$(_null, _null, _null, _null, t1, _null, _null, D.BoxShape_0);
          _this.get$FormIsHorizontal();
          t2 = _this._widget;
          t2.toString;
          t3 = A.Visibility$(labelContent, false, D.SizedBox_0_0_null_null, true);
          t2 = t2.child;
          t2 = C.Row$(C._setArrayType([t3, C.Expanded$(t2 == null ? new C.SizedBox(_null, _null, _null, _null) : t2, 1, _null)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
          _this._widget.toString;
          t3 = _this.get$LabelWidth();
          t5 = _this._widget.label;
          t6 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
          t6 === $ && C.throwLateFieldNI(_s7_);
          t6 = t6.$index(0, _s14_);
          t7 = _this._widget;
          t7.toString;
          t6 = C.TDText$(t5, _null, t6, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Color_vnR, _null, _null, _null, _null);
          t3 = A.Visibility$(new C.SizedBox(t3, _null, new C.Flexible(1, D.FlexFit_1, t6, _null), _null), false, D.SizedBox_0_0_null_null, true);
          t7 = t7.child;
          return C.Container$(_null, new C.Padding(D.EdgeInsets_16_16_16_16, C.Column$(C._setArrayType([A.Visibility$(t2, false, C.Column$(C._setArrayType([t3, t7 == null ? new C.SizedBox(_null, _null, _null, _null) : t7], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false), _this._buildTipRow$2$left$top(0, 8)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null);
        case 7:
          t1 = C.TDColors_get_whiteColor1(theme);
          t1 = C.BoxDecoration$(_null, _null, _null, _null, t1, _null, _null, D.BoxShape_0);
          _this.get$FormIsHorizontal();
          t2 = C.Row$(itemRowContent, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
          _this._widget.toString;
          t3 = _this.get$LabelWidth();
          t5 = _this._widget.label;
          t6 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
          t6 === $ && C.throwLateFieldNI(_s7_);
          t6 = t6.$index(0, _s14_);
          t7 = _this._widget;
          t7.toString;
          t6 = C.TDText$(t5, _null, t6, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Color_vnR, _null, _null, _null, _null);
          t3 = A.Visibility$(new C.SizedBox(t3, _null, new C.Flexible(1, D.FlexFit_1, t6, _null), _null), false, D.SizedBox_0_0_null_null, true);
          t7 = t7.child;
          return C.Container$(_null, new C.Padding(D.EdgeInsets_16_16_16_16, C.Column$(C._setArrayType([A.Visibility$(t2, false, C.Column$(C._setArrayType([t3, t7 == null ? new C.SizedBox(_null, _null, _null, _null) : t7], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false), _this._buildTipRow$1$top(0)], t4), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null);
      }
    },
    _buildSelectRow$1(context) {
      var t4, labelContent, t5, selectText, _this = this, _null = null,
        t1 = _this.get$LabelWidth(),
        t2 = _this._widget.label,
        t3 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
      t3 === $ && C.throwLateFieldNI("fontMap");
      t3 = t3.$index(0, "fontBodyMedium");
      _this._widget.toString;
      t4 = type$.JSArray_Widget;
      t3 = C._setArrayType([new C.Flexible(1, D.FlexFit_1, C.TDText$(t2, _null, t3, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, _null, _null, D.Color_vnR, _null, _null, _null, _null), _null)], t4);
      t2 = _this.get$FormRequiredMark();
      if (t2)
        _this._widget.toString;
      if (t2) {
        _this._widget.toString;
        t3.push(new C.Padding(B.EdgeInsets_4_0_0_0, C.TDText$("*", _null, _null, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, F.TextStyle_yFz, _null, D.MaterialColor_nI1, _null, _null, _null, _null), _null));
      }
      t2 = new C.Padding(new C.EdgeInsets(2, 0, 0, 0), C.Row$(t3, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null);
      labelContent = new C.SizedBox(t1, _null, t2, _null);
      t2 = _this.get$FormContentAlign();
      t1 = _this._widget.hintText;
      t3 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
      t3 === $ && C.throwLateFieldNI("fontMap");
      t3 = t3.$index(0, "fontBodyLarge");
      _this._widget.toString;
      t5 = C.TDColors_get_fontGyColor3(C.TDTheme_of(context)).withOpacity$1(0.4);
      selectText = C.TDText$(t1, _null, t3, _null, _null, false, false, false, D.Color_wst, _null, 1, D.TextOverflow_2, _null, _null, _null, _null, _null, t2, t5, _null, _null, _null, _null);
      t1 = C.Row$(C._setArrayType([C.Expanded$(selectText, 1, _null), new C.Padding(B.EdgeInsets_2_0_0_0, C.Icon$(D.IconData_57695_MaterialIcons_null_true, C.TDColors_get_fontGyColor3(C.TDTheme_of(context)).withOpacity$1(0.4), _null, _null), _null)], t4), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
      _this._widget.toString;
      t2 = C.TDColors_get_whiteColor1(C.TDTheme_of(context));
      _this.get$FormIsHorizontal();
      return C.GestureDetector$(D.HitTestBehavior_1, C.Container$(_null, C.Column$(C._setArrayType([A.Visibility$(C.Row$(C._setArrayType([labelContent, C.Expanded$(new C.Padding(D.EdgeInsets_0_2_0_0, t1, _null), 1, _null)], t4), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false, C.Row$(C._setArrayType([C.Expanded$(C.Column$(C._setArrayType([labelContent, new C.Padding(B.EdgeInsets_2_8_0_0, selectText, _null)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), 1, _null), new C.Padding(B.EdgeInsets_2_0_0_0, C.Icon$(D.IconData_57695_MaterialIcons_null_true, C.TDColors_get_fontGyColor3(C.TDTheme_of(context)).withOpacity$1(0.4), _null, _null), _null)], t4), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), false), _this._buildTipRow$2$right$top(28, 4)], t4), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, t2, _null, _null, _null, _null, _null, _null, D.EdgeInsets_16_16_16_16, _null, _null, _null), D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A._TDFormItemState__buildSelectRow_closure(_this, context), _null, _null, _null, _null, _null, _null, _null, _null);
    },
    _buildTipRow$3$left$right$top(left, right, $top) {
      var t3, t4, _this = this, _null = null,
        t1 = type$.JSArray_Widget,
        t2 = C._setArrayType([], t1);
      _this._widget.toString;
      _this.get$ShowErrorMessage();
      t3 = false;
      _this.get$ShowErrorMessage();
      t3 = _this.errorMessage;
      t3 = t3 != null && t3 !== "";
      if (t3) {
        t1 = C._setArrayType([], t1);
        _this._widget.toString;
        _this.get$FormIsHorizontal();
        t3 = _this.errorMessage;
        t4 = C.TDTheme_of(_this.get$context(0)).__TDThemeData_fontMap_A;
        t4 === $ && C.throwLateFieldNI("fontMap");
        t4 = t4.$index(0, "fontBodySmall");
        _this._widget.toString;
        t1.push(C.Expanded$(new C.Padding(new C.EdgeInsets(left, $top, right, 0), C.TDText$(t3, _null, t4, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, _null, D.TextAlign_0, C.Color$fromRGBO(213, 73, 65, 1), _null, _null, _null, _null), _null), 1, _null));
        t2.push(C.Row$(t1, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1));
      }
      return C.Column$(t2, D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
    },
    _buildTipRow$2$left$top(left, $top) {
      return this._buildTipRow$3$left$right$top(left, 20, $top);
    },
    _buildTipRow$1$top($top) {
      return this._buildTipRow$3$left$right$top(4, 20, $top);
    },
    _buildTipRow$2$right$top(right, $top) {
      return this._buildTipRow$3$left$right$top(4, right, $top);
    }
  };
  A.TDInputView.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        t1 = _this.textAlign;
      if (t1 == null)
        t1 = D.TextAlign_4;
      return C.TextField$(true, D.List_empty, false, _this.get$_buildCounter(), true, _null, C.text_field0_TextField__defaultContextMenuBuilder$closure(), _this.controller, _this.cursorColor, _null, _this.inputDecoration, D.DragStartBehavior_1, true, _null, true, _null, false, _this.focusNode, D.Type_EditableText_O5i, _null, _this.inputFormatters, _null, _this.inputType, _null, _this.maxLength, _null, _this.maxLines, _null, _null, false, "\u2022", _null, _this.onChanged, _this.onEditingComplete, _this.onSubmitted, _null, false, _this.onTapOutside, false, _null, _null, D.EdgeInsets_20_20_20_20, _null, _null, _null, _null, _null, _null, _null, _this.textStyle, true, t1, _null, D.TextCapitalization_30, _null, _this.inputAction, _null);
    },
    _buildCounter$4$currentLength$isFocused$maxLength(context, currentLength, isFocused, maxLength) {
      return null;
    }
  };
  A.TDInputType.prototype = {
    _enumToString$0() {
      return "TDInputType." + this._name;
    }
  };
  A.TDInputSize.prototype = {
    _enumToString$0() {
      return "TDInputSize." + this._name;
    }
  };
  A.TDInput.prototype = {
    getInputPadding$0() {
      switch (1) {
        case 1:
          return 16;
      }
    },
    _measureTextWidth$3(text, style, context) {
      return 0;
    },
    buildInputView$1(context) {
      var labelWidth = this._measureTextWidth$3(null, null, context);
      this._leftLabelWidth = 0 + labelWidth + 0 + 4;
      switch (0) {
        case 0:
          return this.buildNormalInput$1(context);
      }
    },
    _getBottomDividerMarginLeft$0() {
      switch (0) {
        case 0:
        case 1:
        case 4:
        case 5:
          var t1 = this.spacer.labelInputSpace;
          return t1 == null ? 16 : t1;
      }
    },
    buildNormalInput$1(context) {
      var t8, t9, t10, t11, t12, _this = this, _null = null,
        _s7_ = "fontMap",
        _s13_ = "fontBodyLarge",
        cardStyleDecoration = _this._getCardStylePreDecoration$1(context),
        t1 = cardStyleDecoration == null ? _null : cardStyleDecoration,
        t2 = A.Visibility$(new C.SizedBox(16, _null, _null, _null), false, D.SizedBox_0_0_null_null, false),
        t3 = _this._leftLabelWidth,
        t4 = A.Visibility$(new C.SizedBox(24, _null, D.SizedBox_0_0_null_null, _null), false, D.SizedBox_0_0_null_null, false),
        t5 = _this.getInputPadding$0(),
        t6 = _this.getInputPadding$0(),
        t7 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
      t7 === $ && C.throwLateFieldNI(_s7_);
      t6 = A.Visibility$(C.Container$(_null, C.TDText$(_null, _null, t7.$index(0, _s13_), _null, D.FontWeight_3_400, false, false, false, D.Color_wst, _null, 1, D.TextOverflow_3, _null, _null, _null, _null, B.TextStyle_IpK, _null, D.Color_vnR, _null, _null, _null, _null), D.Clip_0, _null, new C.BoxConstraints(0, t3, 0, 1 / 0), _null, _null, _null, _null, _null, new C.EdgeInsets(0, t5, 0, t6), _null, _null, _null), false, D.SizedBox_0_0_null_null, false);
      t5 = A.Visibility$(D.SizedBox_0_0_null_null, false, D.SizedBox_0_0_null_null, false);
      t7 = C.TextStyle$(_null, _null, C.TDColors_get_errorColor6(C.TDTheme_of(context)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null);
      t8 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
      t8 === $ && C.throwLateFieldNI(_s7_);
      t9 = type$.JSArray_Widget;
      t7 = C.GestureDetector$(_null, C.Row$(C._setArrayType([t4, t6, t5, A.Visibility$(new C.Padding(B.EdgeInsets_4_0_0_0, C.TDText$("*", _null, t8.$index(0, _s13_), _null, D.FontWeight_3_400, false, false, false, D.Color_wst, _null, 1, _null, _null, _null, _null, _null, t7, _null, D.Color_vnR, _null, _null, _null, _null), _null), false, D.SizedBox_0_0_null_null, false)], t9), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t4 = C.TextStyle$(_null, _null, C.TDColors_get_fontGyColor1(C.TDTheme_of(context)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null);
      t5 = C.TextStyle$(_null, _null, C.TDColors_get_fontGyColor3(C.TDTheme_of(context)), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null);
      t6 = _this.controller;
      t8 = _this.spacer;
      t10 = t8.labelInputSpace;
      if (t10 == null)
        t10 = 16;
      t11 = t8.inputRightSpace;
      t11 = t11 != null ? t11 / 2 : 16;
      t12 = _this.getInputPadding$0();
      t10 = new C.EdgeInsets(t10, _this.getInputPadding$0(), t11, t12);
      t4 = A.TDInputView$(false, t10, t6, _null, _null, _null, t5, _null, _this.inputDecoration, _null, _null, true, 500, 1, false, _this.onChanged, _null, _null, _null, false, D.TextAlign_4, _null, t4);
      t5 = t8.additionInfoSpace;
      if (t5 == null)
        t5 = 16;
      t10 = _this.getInputPadding$0();
      t11 = C.TDTheme_of(context).__TDThemeData_fontMap_A;
      t11 === $ && C.throwLateFieldNI(_s7_);
      t11 = t11.$index(0, "fontBodySmall");
      t12 = C.TDColors_get_fontGyColor3(C.TDTheme_of(context));
      t4 = C.Expanded$(C.Column$(C._setArrayType([t4, A.Visibility$(C.Container$(_null, C.TDText$("", _null, t11, _null, _null, false, false, false, D.Color_wst, _null, _null, _null, _null, _null, _null, _null, _null, D.TextAlign_4, t12, _null, _null, _null, _null), D.Clip_0, _null, _null, _null, _null, _null, _null, _null, new C.EdgeInsets(t5, 0, 0, t10), _null, _null, 1 / 0), false, D.SizedBox_0_0_null_null, false)], t9), D.CrossAxisAlignment_0, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), 1, _null);
      t5 = A.Visibility$(C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, new C.EdgeInsets(0, _this.getInputPadding$0(), 16, _this.getInputPadding$0()), _null, _null, _null, _null), false, D.SizedBox_0_0_null_null, false);
      if (t6 != null)
        t6 = t6._change_notifier$_value.text.length !== 0;
      else
        t6 = false;
      t10 = t8.inputRightSpace;
      t10 = t10 != null ? t10 / 2 : 8;
      t11 = t8.rightSpace;
      if (t11 == null)
        t11 = 16;
      t12 = C.TDColors_get_fontGyColor3(C.TDTheme_of(context));
      t10 = C.Container$(_null, C.Icon$(B._TDIconsData_pHz, t12, _null, _null), D.Clip_0, _null, _null, _null, _null, _null, _null, new C.EdgeInsets(t10, 0, t11, 0), _null, _null, _null, _null);
      t10 = C.GestureDetector$(_null, t10, D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.TDInput_buildNormalInput_closure(_this), _null, _null, _null, _null, _null, _null, _null, _null);
      t11 = t8.inputRightSpace;
      t11 = t11 != null ? t11 / 2 : 8;
      t8 = t8.rightSpace;
      if (t8 == null)
        t8 = 16;
      t1 = C._setArrayType([C.Container$(D.Alignment_m1_0, C.Row$(C._setArrayType([t2, new C.SizedBox(t3, _null, t7, _null), t4, t5, A.Visibility$(t10, false, A.Visibility$(C.GestureDetector$(_null, C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, new C.EdgeInsets(t11, 0, t8, 0), _null, _null, _null, _null), D.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, D.SizedBox_0_0_null_null, false), t6)], t9), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null)], t9);
      t1.push(A.Visibility$(A.TDDivider$(new C.EdgeInsets(_this._getBottomDividerMarginLeft$0(), 0, 0, 0)), false, D.SizedBox_0_0_null_null, true));
      return new C.Stack(D.Alignment_0_1, _null, D.StackFit_0, D.Clip_1, t1, _null);
    },
    _getCardStylePreDecoration$1(context) {
      return null;
    },
    build$1(context) {
      var t1, t2;
      C.debugCheckHasMediaQuery(context);
      t1 = C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data;
      t2 = this.buildInputView$1(context);
      return new C.SizedBox(t1.size._dx, null, t2, null);
    }
  };
  A.TDInputSpacer.prototype = {};
  A.TDRadioStyle.prototype = {
    _enumToString$0() {
      return "TDRadioStyle." + this._name;
    }
  };
  A.TDRadio.prototype = {
    buildDefaultIcon$3(context, groupState, isSelected) {
      var t1, theme, iconData;
      if (groupState instanceof A.TDRadioGroupState) {
        t1 = groupState._widget;
        t1.toString;
        type$.TDRadioGroup._as(t1);
      }
      theme = C.TDTheme_of(context);
      switch (0) {
        default:
          iconData = isSelected ? B.IconData_57689_MaterialIcons_null_false : B.IconData_61267_MaterialIcons_null_false;
          break;
      }
      if (iconData != null) {
        if (isSelected)
          t1 = C.TDColors_get_brandNormalColor(theme);
        else
          t1 = C.TDColors_get_grayColor4(theme);
        return C.Icon$(iconData, t1, null, 24);
      } else
        return new C.SizedBox(24, 24, null, null);
    },
    createState$0() {
      return new A.TDRadioState(D._StateLifecycle_0);
    }
  };
  A.TDRadioState.prototype = {
    build$1(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.TDCheckboxGroupInherited),
        groupState = t1 == null ? null : t1.state;
      if (groupState instanceof A.TDRadioGroupState) {
        t1 = groupState._widget;
        t1.toString;
        type$.TDRadioGroup._as(t1);
        this.canNotCancel = true;
      }
      return this.super$TDCheckboxState$build(context);
    }
  };
  A.TDRadioGroup.prototype = {
    createState$0() {
      return new A.TDRadioGroupState(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.bool), D._StateLifecycle_0);
    }
  };
  A.TDRadioGroupState.prototype = {
    toggle$2(_, id, check) {
      this.checkBoxStates.forEach$1(0, new A.TDRadioGroupState_toggle_closure(this));
      return this.super$TDCheckboxGroupState$toggle(0, id, check, true);
    }
  };
  A.TDSkeletonAnimation.prototype = {
    _enumToString$0() {
      return "TDSkeletonAnimation." + this._name;
    }
  };
  A.TDSkeletonTheme.prototype = {
    _enumToString$0() {
      return "TDSkeletonTheme." + this._name;
    }
  };
  A.TDSkeleton.prototype = {
    createState$0() {
      return new A._TDSkeletonState(null, null, D._StateLifecycle_0);
    }
  };
  A._TDSkeletonState.prototype = {
    initState$0() {
      var t1, t2, _this = this, _null = null,
        _s11_ = "_controller",
        _s10_ = "_animation";
      _this.super$State$initState();
      switch (_this._widget.animation.index) {
        case 0:
          t1 = C.AnimationController$(_null, D.Duration_1500000, _null, _null, _this);
          t1.repeat$0(0);
          _this.___TDSkeletonState__controller_F !== $ && C.throwLateFieldAI(_s11_);
          _this.___TDSkeletonState__controller_F = t1;
          t2 = type$.Tween_double;
          type$.Animation_double._as(t1);
          t1.addListener$1(0, type$.void_Function._as(new A._TDSkeletonState_initState_closure(_this)));
          t2 = type$.nullable_Animation_double._as(new C._AnimatedEvaluation(t1, new C.Tween(-1, 1, t2), t2._eval$1("_AnimatedEvaluation<Animatable.T>")));
          _this.___TDSkeletonState__animation_F !== $ && C.throwLateFieldAI(_s10_);
          _this.set$___TDSkeletonState__animation_F(t2);
          break;
        case 1:
          t1 = C.AnimationController$(_null, D.Duration_1000000, _null, _null, _this);
          t1.repeat$1$reverse(0, true);
          _this.___TDSkeletonState__controller_F !== $ && C.throwLateFieldAI(_s11_);
          _this.___TDSkeletonState__controller_F = t1;
          t2 = type$.Tween_double;
          type$.Animation_double._as(t1);
          t1.addListener$1(0, type$.void_Function._as(new A._TDSkeletonState_initState_closure0(_this)));
          t2 = type$.nullable_Animation_double._as(new C._AnimatedEvaluation(t1, new C.Tween(1, 0.3, t2), t2._eval$1("_AnimatedEvaluation<Animatable.T>")));
          _this.___TDSkeletonState__animation_F !== $ && C.throwLateFieldAI(_s10_);
          _this.set$___TDSkeletonState__animation_F(t2);
          break;
        default:
          _this.___TDSkeletonState__controller_F !== $ && C.throwLateFieldAI(_s11_);
          _this.___TDSkeletonState__controller_F = null;
          _this.___TDSkeletonState__animation_F !== $ && C.throwLateFieldAI(_s10_);
          _this.set$___TDSkeletonState__animation_F(_null);
      }
      C.Future_Future$delayed(C.Duration$(0, _this._widget.delay), new A._TDSkeletonState_initState_closure1(_this), type$.void);
    },
    _buildObj$1(context) {
      return new A._TDSkeletonState__buildObj_closure(this, context);
    },
    build$1(context) {
      var t1, t2, t3, skeletonRows, skeletonRowCol, _this = this, _null = null;
      if (_this._isLoading)
        return $.$get$_TDSkeletonState__loadingWidget();
      t1 = _this._widget.rowCol.objects;
      if (t1.length === 1) {
        if (D.JSArray_methods.get$first(t1).length === 1)
          t1 = _this._buildObj$1(context).call$1(D.JSArray_methods.get$first(D.JSArray_methods.get$first(_this._widget.rowCol.objects)));
        else {
          t1 = D.JSArray_methods.get$first(_this._widget.rowCol.objects);
          t2 = C._arrayInstanceType(t1);
          t3 = t2._eval$1("MappedListIterable<1,Widget>");
          t3 = new C.Flexible(1, D.FlexFit_1, C.Row$(C.List_List$of(new C.MappedListIterable(t1, t2._eval$1("Widget(1)")._as(_this._buildObj$1(context)), t3), true, t3._eval$1("ListIterable.E")), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), _null);
          t1 = t3;
        }
        return t1;
      }
      t2 = C._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Row>");
      skeletonRows = C.List_List$of(new C.MappedListIterable(t1, t2._eval$1("Row(1)")._as(new A._TDSkeletonState_build_closure(_this, context)), t3), true, t3._eval$1("ListIterable.E"));
      _this._widget.toString;
      t1 = A.TDSkeletonRowColStyle__defaultRowSpacing(context);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = C._arrayInstanceType(skeletonRows);
        t2 = t1._eval$1("ExpandIterable<1,Widget>");
        skeletonRows = C.List_List$of(new C.ExpandIterable(skeletonRows, t1._eval$1("Iterable<Widget>(1)")._as(new A._TDSkeletonState_build_closure0(_this, context)), t2), true, t2._eval$1("Iterable.E"));
        D.JSArray_methods.removeLast$0(skeletonRows);
      }
      skeletonRowCol = C.Column$(skeletonRows, D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1);
      return D.JSArray_methods.any$1(_this._widget.rowCol.objects, new A._TDSkeletonState_build_closure1()) ? new C.Flexible(1, D.FlexFit_1, C.Container$(_null, skeletonRowCol, D.Clip_0, _null, new C.BoxConstraints(0, 1 / 0, 0, _this._widget.rowCol.visualHeight$1(context)), _null, _null, _null, _null, _null, _null, _null, _null, _null), _null) : skeletonRowCol;
    },
    dispose$0() {
      var t1 = this.___TDSkeletonState__controller_F;
      t1 === $ && C.throwLateFieldNI("_controller");
      if (t1 != null)
        t1.dispose$0();
      this.super$__TDSkeletonState_State_SingleTickerProviderStateMixin$dispose();
    },
    set$___TDSkeletonState__animation_F(___TDSkeletonState__animation_F) {
      this.___TDSkeletonState__animation_F = type$.nullable_Animation_double._as(___TDSkeletonState__animation_F);
    },
    $isTickerProvider: 1
  };
  A.__TDSkeletonState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var t1, _this = this;
      C.assertHelper(new A.__TDSkeletonState_State_SingleTickerProviderStateMixin_dispose_closure(_this).call$0());
      t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    },
    debugFillProperties$1(properties) {
      var t1, t2, _0_1, _0_3, t3, _0_5, t4, t5, _0_7, _null = null;
      this.super$State$debugFillProperties(properties);
      t1 = this.SingleTickerProviderStateMixin__ticker;
      t2 = t1 == null;
      _0_1 = t2 ? _null : t1._ticker$_future != null;
      t2 = t2 ? _null : t1._muted;
      $label0$0: {
        _0_3 = true === _0_1;
        t3 = _0_3;
        C.boolConversionCheck(t3);
        if (t3) {
          _0_5 = true === t2;
          t4 = _0_5;
        } else {
          _0_5 = _null;
          t4 = false;
        }
        t5 = _null;
        if (t4) {
          t2 = "active but muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_3)) {
          t2 = "active";
          break $label0$0;
        }
        _0_7 = false === _0_1;
        t4 = _0_7;
        if (C.boolConversionCheck(t4))
          t2 = C.boolConversionCheck(t3 ? _0_5 : true === t2);
        else
          t2 = false;
        if (t2) {
          t2 = "inactive and muted";
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_7)) {
          t2 = "inactive";
          break $label0$0;
        }
        if (_0_1 == null) {
          t2 = t5;
          break $label0$0;
        }
        t2 = t5;
      }
      properties.add$1(0, C.DiagnosticsProperty$("ticker", t1, true, _null, t2, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, false, D.DiagnosticsTreeStyle_8, _null, type$.Ticker));
    }
  };
  A.TDSkeletonRowColStyle.prototype = {};
  A.TDSkeletonRowCol.prototype = {
    visualHeight$1(context) {
      var t1, t2,
        rowSpacing = A.TDSkeletonRowColStyle__defaultRowSpacing(context);
      C.assertHelper(rowSpacing >= 0);
      if (rowSpacing < 0)
        rowSpacing = 0;
      t1 = this.objects;
      t2 = C._arrayInstanceType(t1);
      return new C.MappedListIterable(t1, t2._eval$1("double(1)")._as(new A.TDSkeletonRowCol_visualHeight_closure()), t2._eval$1("MappedListIterable<1,double>")).fold$1$2(0, 0, new A.TDSkeletonRowCol_visualHeight_closure0(), type$.double) + rowSpacing * (t1.length - 1);
    }
  };
  A.TDSkeletonRowColObjStyle.prototype = {};
  A.TDSkeletonRowColObj.prototype = {
    get$visualHeight() {
      var t1 = this.height;
      return t1 == null ? 0 : t1;
    }
  };
  A.TDSlider.prototype = {
    createState$0() {
      return new A.TDSliderState(new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), D._StateLifecycle_0);
    }
  };
  A.TDSliderState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.value = this._widget.value;
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.TDSlider._as(oldWidget));
      this.value = this._widget.value;
    },
    build$1(context) {
      var t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = _this._widget,
        tdSliderThemeData = t1.sliderThemeData,
        t2 = tdSliderThemeData.showScaleValue || tdSliderThemeData.showThumbValue ? 16 : 0;
      t1 = t1.leftLabel;
      if (t1.length !== 0)
        t1 = new C.Padding(B.EdgeInsets_16_0_0_0, C.Text$(t1, _null, _null, _null, _null, _null, _null, _null, C.TextStyle$(_null, _null, D.Color_PYr, _null, _null, _null, _null, _null, _null, _null, _null, 16, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null), _null);
      else
        t1 = C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t3 = tdSliderThemeData.get$sliderThemeData();
      t4 = _this.value;
      t5 = tdSliderThemeData.min;
      t6 = tdSliderThemeData.max;
      t7 = tdSliderThemeData.divisions;
      _this._widget.toString;
      C.assertHelper(t5 <= t6);
      if (C.assertTest(t4 >= t5 && t4 <= t6))
        C.assertThrow("Value " + C.S(t4) + " is not between minimum " + C.S(t5) + " and maximum " + C.S(t6));
      C.assertHelper(t7 == null || t7 > 0);
      t3 = C.Expanded$(C.Listener$(D.HitTestBehavior_0, A.SliderTheme$(new A.Slider0(t4, new A.TDSliderState_build_closure(_this), _null, _null, t5, t6, t7, _this._sliderKey), t3), _null, new A.TDSliderState_build_closure0(_this), _null, _null, _null), 1, _null);
      t4 = _this._widget.rightLabel;
      if (t4.length !== 0)
        t4 = new C.Padding(B.EdgeInsets_0_0_16_0, C.Text$(t4, _null, _null, _null, _null, _null, _null, _null, C.TextStyle$(_null, _null, D.Color_PYr, _null, _null, _null, _null, _null, _null, _null, _null, 16, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null), _null);
      else
        t4 = C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      return C.Listener$(D.HitTestBehavior_0, C.Container$(_null, C.Row$(C._setArrayType([t1, D.SizedBox_8_null_null_null, t3, D.SizedBox_8_null_null_null, t4], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, _null, _null, B.BoxDecoration_6xp, _null, _null, _null, _null, new C.EdgeInsets(0, t2 + 8, 0, 8), _null, _null, _null), _null, new A.TDSliderState_build_closure1(_this, tdSliderThemeData), _null, _null, _null);
    }
  };
  A.TDRangeSlider.prototype = {
    createState$0() {
      return new A._TDRangeSliderState(B.RangeValues_0_100, new C.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), D._StateLifecycle_0);
    }
  };
  A._TDRangeSliderState.prototype = {
    initState$0() {
      this.super$State$initState();
      this.rangeValues = this._widget.value;
    },
    didUpdateWidget$1(oldWidget) {
      this.super$State$didUpdateWidget(type$.TDRangeSlider._as(oldWidget));
      this.rangeValues = this._widget.value;
    },
    build$1(context) {
      var t3, t4, t5, t6, t7, t8, t9, _this = this, _null = null,
        t1 = _this._widget,
        tdSliderThemeData = t1.sliderThemeData,
        t2 = tdSliderThemeData.showScaleValue || tdSliderThemeData.showThumbValue ? 16 : 0;
      t1 = t1.leftLabel;
      if (t1.length !== 0)
        t1 = new C.Padding(B.EdgeInsets_16_0_0_0, C.Text$(t1, _null, _null, _null, _null, _null, _null, _null, C.TextStyle$(_null, _null, D.Color_PYr, _null, _null, _null, _null, _null, _null, _null, _null, 16, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null), _null);
      else
        t1 = C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t3 = tdSliderThemeData.get$sliderThemeData();
      t4 = _this.rangeValues;
      t5 = tdSliderThemeData.min;
      t6 = tdSliderThemeData.max;
      t7 = tdSliderThemeData.divisions;
      _this._widget.toString;
      C.assertHelper(t5 <= t6);
      t8 = t4.start;
      t9 = t4.end;
      C.assertHelper(t8 <= t9);
      C.assertHelper(t8 >= t5 && t8 <= t6);
      C.assertHelper(t9 >= t5 && t9 <= t6);
      C.assertHelper(t7 == null || t7 > 0);
      t3 = C.Expanded$(C.Listener$(D.HitTestBehavior_0, A.SliderTheme$(new A.RangeSlider(t4, new A._TDRangeSliderState_build_closure(_this), _null, _null, t5, t6, t7, _this._sliderRangeKey), t3), _null, new A._TDRangeSliderState_build_closure0(_this, context), _null, _null, _null), 1, _null);
      t4 = _this._widget.rightLabel;
      if (t4.length !== 0)
        t4 = new C.Padding(B.EdgeInsets_0_0_16_0, C.Text$(t4, _null, _null, _null, _null, _null, _null, _null, C.TextStyle$(_null, _null, D.Color_PYr, _null, _null, _null, _null, _null, _null, _null, _null, 16, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null), _null);
      else
        t4 = C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      return C.Listener$(D.HitTestBehavior_0, C.Container$(_null, C.Row$(C._setArrayType([t1, D.SizedBox_8_null_null_null, t3, D.SizedBox_8_null_null_null, t4], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, _null, _null, D.VerticalDirection_1), D.Clip_0, _null, _null, B.BoxDecoration_6xp, _null, _null, _null, _null, new C.EdgeInsets(0, t2 + 8, 0, 8), _null, _null, _null), _null, new A._TDRangeSliderState_build_closure1(_this, tdSliderThemeData), _null, _null, _null);
    }
  };
  A.TDSliderThemeData.prototype = {
    get$sliderThemeData() {
      var t2, t3, t4, t5, t6, _this = this, _null = null,
        t1 = _this._sliderThemeData;
      if (t1 == null) {
        t1 = C.TDColors_get_brandNormalColor(C.TDTheme_of(_null));
        t2 = C.TDColors_get_grayColor4(C.TDTheme_of(_null));
        t3 = C.TDColors_get_brandDisabledColor(C.TDTheme_of(_null));
        t4 = C.TDColors_get_grayColor2(C.TDTheme_of(_null));
        t5 = C.TDColors_get_brandNormalColor(C.TDTheme_of(_null));
        t6 = C.TDColors_get_grayColor4(C.TDTheme_of(_null));
        t2 = C.SliderThemeData$(t5, t1, _null, C.TDColors_get_brandDisabledColor(C.TDTheme_of(_null)), t3, C.TDColors_get_grayColor2(C.TDTheme_of(_null)), t4, _null, D.Color_wst, t6, t2, _null, _null, _null, _null, B.C_TDNoOverlayShape, _null, new A.TDRoundRangeSliderThumbShape(_this), new A.TDRoundRangeSliderTickMarkShape(_this), new A.TDRoundedRectRangeSliderTrackShape(_this), _null, _null, B.ShowValueIndicator_3, D.Color_wst, _null, new A.TDRoundSliderThumbShape(_this), _null, new A.TDRoundSliderTickMarkShape(_this), _null, 4, new A.TDRoundedRectSliderTrackShape(_this), _null, _null, _null, _null, _null);
        t1 = t2;
        t1 = _this._sliderThemeData = t1;
      }
      return t1;
    }
  };
  A.SliderMeasureData.prototype = {};
  A.TDRoundedRectSliderTrackShape.prototype = {
    paint$10$enableAnimation$isDiscrete$isEnabled$parentBox$secondaryOffset$sliderTheme$textDirection$thumbCenter(context, offset, enableAnimation, isDiscrete, isEnabled, parentBox, secondaryOffset, sliderTheme, textDirection, thumbCenter) {
      var t1, t2, t3, t4, t5, activePaint, inactivePaint, rightTrackPaint, leftTrackPaint, trackRect, trackRadius, activeTrackRadius, t6, t7, t8, t9;
      type$.Animation_double._as(enableAnimation);
      t1 = sliderTheme.disabledActiveTrackColor;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.disabledInactiveTrackColor;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.activeTrackColor;
      C.assertHelper(t3 != null);
      t4 = sliderTheme.inactiveTrackColor;
      C.assertHelper(t4 != null);
      C.assertHelper(sliderTheme.thumbShape != null);
      t5 = sliderTheme.trackHeight;
      if (t5 == null || t5 <= 0)
        return;
      t5 = $.$get$_renderer();
      activePaint = t5.createPaint$0();
      t3 = new C.ColorTween(t1, t3).transform$1(0, enableAnimation.get$value(0));
      t3.toString;
      activePaint.set$color(0, t3);
      inactivePaint = t5.createPaint$0();
      t4 = new C.ColorTween(t2, t4).transform$1(0, enableAnimation.get$value(0));
      t4.toString;
      inactivePaint.set$color(0, t4);
      switch (textDirection.index) {
        case 1:
          rightTrackPaint = inactivePaint;
          leftTrackPaint = activePaint;
          break;
        case 0:
          rightTrackPaint = activePaint;
          leftTrackPaint = inactivePaint;
          break;
        default:
          leftTrackPaint = null;
          rightTrackPaint = null;
      }
      trackRect = this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme);
      this.themeData.sliderMeasureData.trackerRect = trackRect;
      t1 = trackRect.bottom;
      t2 = trackRect.top;
      t3 = t1 - t2;
      t4 = t3 / 2;
      trackRadius = new C.Radius(t4, t4);
      t3 = (t3 + 2) / 2;
      activeTrackRadius = new C.Radius(t3, t3);
      t3 = context.get$canvas(context);
      t4 = textDirection === D.TextDirection_0;
      t5 = t4 ? t2 - 1 : t2;
      t6 = thumbCenter._dx;
      t7 = t4 ? t1 + 1 : t1;
      t8 = textDirection === D.TextDirection_1;
      t9 = t8 ? activeTrackRadius : trackRadius;
      t8 = t8 ? activeTrackRadius : trackRadius;
      t3.drawRRect$2(C.RRect$fromLTRBAndCorners(trackRect.left, t5, t6, t7, t8, D.Radius_0_0, t9, D.Radius_0_0), leftTrackPaint);
      t9 = context.get$canvas(context);
      if (t4)
        --t2;
      if (t4)
        ++t1;
      t3 = t4 ? activeTrackRadius : trackRadius;
      t4 = t4 ? activeTrackRadius : trackRadius;
      t9.drawRRect$2(C.RRect$fromLTRBAndCorners(t6, t2, trackRect.right, t1, D.Radius_0_0, t4, D.Radius_0_0, t3), rightTrackPaint);
    }
  };
  A.TDRoundSliderThumbShape.prototype = {
    getPreferredSize$2(isEnabled, isDiscrete) {
      return new C.Size(20, 20);
    },
    paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, center, activationAnimation, enableAnimation, isDiscrete, labelPainter, parentBox, sizeWithOverflow, sliderTheme, textDirection, textScaleFactor, value) {
      var t2, canvas, t3, radius, evaluatedElevation, path, t4, trackerRect, t5, t6, t7, formatterValue, painter, paint, _null = null,
        t1 = type$.Animation_double;
      t1._as(activationAnimation);
      t1._as(enableAnimation);
      t1 = sliderTheme.disabledThumbColor;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.thumbColor;
      C.assertHelper(t2 != null);
      canvas = context.get$canvas(context);
      t3 = type$.Tween_double;
      t2 = new C.ColorTween(t1, t2).transform$1(0, enableAnimation.get$value(0));
      t2.toString;
      radius = new C.Tween(10, 10, t3).transform$1(0, enableAnimation.get$value(0));
      evaluatedElevation = new C.Tween(4, 4, t3).transform$1(0, activationAnimation.get$value(0));
      t3 = $.$get$_renderer();
      path = t3.createPath$0();
      t1 = 2 * radius;
      path.addArc$3(C.Rect$fromCenter(center, t1, t1), 0, 6.283185307179586);
      canvas.drawShadow$4(path, B.Color_SHX, evaluatedElevation, true);
      t1 = this.themeData;
      if (t1.showThumbValue && t1.sliderMeasureData.trackerRect != null) {
        t4 = t1.sliderMeasureData;
        trackerRect = t4.trackerRect;
        t5 = center._dx;
        t6 = trackerRect.left;
        t7 = t1.min;
        value = (t1.max - t7) * ((t5 - t6) / (trackerRect.right - t6)) + t7;
        t6 = t1.scaleFormatter;
        formatterValue = t6 == null ? D.JSNumber_methods.toStringAsFixed$1(value, 2) : t6.call$1(value);
        painter = C.TextPainter$(_null, _null, _null, _null, C.TextSpan$(_null, enableAnimation.get$value(0) > 0 ? t1.thumbTextStyle : t1.disabledThumbTextStyle, formatterValue), D.TextAlign_2, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
        painter.layout$1$maxWidth(100);
        t1 = painter.get$width(0);
        t6 = center._dy;
        painter.get$_debugAssertTextLayoutIsValid();
        t7 = painter._layoutCache.layout._paragraph;
        t7 = t7.get$height(t7);
        painter.paint$2(context.get$canvas(context), new C.Offset(t5 - t1 / 2, t6 - t7 - 14));
        t5 -= painter.get$width(0) / 2;
        painter.get$_debugAssertTextLayoutIsValid();
        t7 = painter._layoutCache.layout._paragraph;
        t7 = t6 - t7.get$height(t7) - 14;
        t6 = painter.get$width(0);
        painter.get$_debugAssertTextLayoutIsValid();
        t1 = painter._layoutCache.layout._paragraph;
        t4.thumbTextRect = new C.Rect(t5, t7, t5 + t6, t7 + t1.get$height(t1));
      }
      paint = t3.createPaint$0();
      paint.set$color(0, t2);
      canvas.drawCircle$3(center, radius, paint);
      t1 = C.Rect$fromCircle(center, radius);
      t3 = t3.createPaint$0();
      t3.set$style(0, D.PaintingStyle_1);
      t3.set$strokeWidth(1);
      t3.set$color(0, C.TDColors_get_grayColor3(C.TDTheme_of(_null)));
      canvas.drawArc$5(t1, 0, 6.283185307179586, false, t3);
    }
  };
  A.TDNoOverlayShape.prototype = {
    getPreferredSize$2(isEnabled, isDiscrete) {
      return B.Size_0_40;
    },
    paint$12$activationAnimation$enableAnimation$isDiscrete$labelPainter$parentBox$sizeWithOverflow$sliderTheme$textDirection$textScaleFactor$value(context, center, activationAnimation, enableAnimation, isDiscrete, labelPainter, parentBox, sizeWithOverflow, sliderTheme, textDirection, textScaleFactor, value) {
      var t1 = type$.Animation_double;
      t1._as(activationAnimation);
      t1._as(enableAnimation);
    }
  };
  A.TDRoundSliderTickMarkShape.prototype = {
    getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme) {
      C.assertHelper(sliderTheme.trackHeight != null);
      return new C.Size(8, 8);
    },
    paint$8$enableAnimation$isEnabled$parentBox$sliderTheme$textDirection$thumbCenter(context, center, enableAnimation, isEnabled, parentBox, sliderTheme, textDirection, thumbCenter) {
      var begin, begin0, end, end0, isTickMarkRightOfThumb, isTickMarkLeftOfThumb, paint, t1, tickMarkRadius, t2, t3, rect, trackHeight, t4, perWidth, index, value, valueFormatter, painter, x, _null = null;
      type$.Animation_double._as(enableAnimation);
      begin = sliderTheme.disabledActiveTickMarkColor;
      C.assertHelper(begin != null);
      begin0 = sliderTheme.disabledInactiveTickMarkColor;
      C.assertHelper(begin0 != null);
      end = sliderTheme.activeTickMarkColor;
      C.assertHelper(end != null);
      end0 = sliderTheme.inactiveTickMarkColor;
      C.assertHelper(end0 != null);
      switch (textDirection.index) {
        case 1:
          isTickMarkRightOfThumb = center._dx > thumbCenter._dx;
          if (isTickMarkRightOfThumb)
            begin = begin0;
          if (isTickMarkRightOfThumb)
            end = end0;
          break;
        case 0:
          isTickMarkLeftOfThumb = center._dx < thumbCenter._dx;
          if (isTickMarkLeftOfThumb)
            begin = begin0;
          if (isTickMarkLeftOfThumb)
            end = end0;
          break;
        default:
          end = _null;
          begin = end;
      }
      paint = $.$get$_renderer().createPaint$0();
      t1 = new C.ColorTween(begin, end).transform$1(0, enableAnimation.get$value(0));
      t1.toString;
      paint.set$color(0, t1);
      tickMarkRadius = this.getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme)._dx / 2;
      if (tickMarkRadius > 0 && this.themeData.showScaleValue) {
        t1 = this.themeData;
        t2 = t1.divisions;
        C.assertHelper(t2 != null);
        t3 = sliderTheme.trackShape;
        rect = t3 == null ? _null : t3.getPreferredRect$2$parentBox$sliderTheme(parentBox, sliderTheme);
        if (rect != null) {
          t2.toString;
          t3 = t2 > 0;
        } else
          t3 = false;
        if (t3) {
          trackHeight = rect.bottom - rect.top;
          t3 = rect.right;
          t4 = rect.left;
          t2.toString;
          perWidth = (t3 - t4 - trackHeight) / t2;
          C.assertHelper(perWidth > 0);
          t3 = center._dx;
          index = D.JSNumber_methods.round$0((t3 - (t4 + trackHeight / 2)) / perWidth);
          t4 = t1.min;
          value = t4 + index * ((t1.max - t4) / t2);
          t4 = t1.scaleFormatter;
          valueFormatter = t4 != null ? t4.call$1(value) : D.JSNumber_methods.toString$0(value);
          painter = C.TextPainter$(_null, _null, _null, _null, C.TextSpan$(_null, enableAnimation.get$value(0) > 0 ? t1.scaleTextStyle : t1.disabledScaleTextStyle, valueFormatter), D.TextAlign_2, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
          painter.layout$1$maxWidth(100);
          x = t3 - painter.get$size(0)._dx / 2;
          if (index === 0)
            x = t3 - trackHeight;
          else if (index === t2)
            x = t3 - painter.get$size(0)._dx + trackHeight;
          t1 = context.get$canvas(context);
          painter.get$_debugAssertTextLayoutIsValid();
          t2 = painter._layoutCache.layout._paragraph;
          painter.paint$2(t1, new C.Offset(x, center._dy - t2.get$height(t2) - 14));
        }
        context.get$canvas(context).drawCircle$3(center, tickMarkRadius, paint);
      }
    }
  };
  A.TDBaseRangeSliderTrackShape.prototype = {
    getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme) {
      var t2, thumbWidth, overlayWidth, trackLeft, trackTop, trackRight,
        t1 = sliderTheme.rangeThumbShape;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.overlayShape;
      C.assertHelper(t2 != null);
      thumbWidth = t1.getPreferredSize$2(isEnabled, isDiscrete)._dx;
      overlayWidth = t2.getPreferredSize$2(isEnabled, isDiscrete)._dx;
      t2 = sliderTheme.trackHeight;
      t2.toString;
      C.assertHelper(overlayWidth >= 0);
      C.assertHelper(t2 >= 0);
      trackLeft = offset._dx + Math.max(overlayWidth / 2, thumbWidth / 2);
      trackTop = offset._dy + (parentBox.get$size(0)._dy - t2) / 2;
      trackRight = trackLeft + parentBox.get$size(0)._dx - Math.max(thumbWidth, overlayWidth);
      return new C.Rect(Math.min(trackLeft, trackRight), trackTop, Math.max(trackLeft, trackRight), trackTop + t2);
    },
    getPreferredRect$3$isDiscrete$parentBox$sliderTheme(isDiscrete, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, D.Offset_0_0, parentBox, sliderTheme);
    },
    getPreferredRect$4$isDiscrete$offset$parentBox$sliderTheme(isDiscrete, offset, parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, false, offset, parentBox, sliderTheme);
    },
    getPreferredRect$2$parentBox$sliderTheme(parentBox, sliderTheme) {
      return this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(false, false, D.Offset_0_0, parentBox, sliderTheme);
    }
  };
  A.TDRoundedRectRangeSliderTrackShape.prototype = {
    paint$10$enableAnimation$endThumbCenter$isDiscrete$isEnabled$parentBox$sliderTheme$startThumbCenter$textDirection(context, offset, enableAnimation, endThumbCenter, isDiscrete, isEnabled, parentBox, sliderTheme, startThumbCenter, textDirection) {
      var t1, t2, t3, t4, t5, t6, activePaint, inactivePaint, rightThumbOffset, leftThumbOffset, trackRect, trackRadius;
      type$.Animation_double._as(enableAnimation);
      t1 = sliderTheme.disabledActiveTrackColor;
      C.assertHelper(t1 != null);
      t2 = sliderTheme.disabledInactiveTrackColor;
      C.assertHelper(t2 != null);
      t3 = sliderTheme.activeTrackColor;
      C.assertHelper(t3 != null);
      t4 = sliderTheme.inactiveTrackColor;
      C.assertHelper(t4 != null);
      t5 = sliderTheme.rangeThumbShape;
      C.assertHelper(t5 != null);
      t6 = sliderTheme.trackHeight;
      if (t6 == null || t6 <= 0)
        return;
      t6 = $.$get$_renderer();
      activePaint = t6.createPaint$0();
      t3 = new C.ColorTween(t1, t3).transform$1(0, enableAnimation.get$value(0));
      t3.toString;
      activePaint.set$color(0, t3);
      inactivePaint = t6.createPaint$0();
      t4 = new C.ColorTween(t2, t4).transform$1(0, enableAnimation.get$value(0));
      t4.toString;
      inactivePaint.set$color(0, t4);
      switch (textDirection.index) {
        case 1:
          rightThumbOffset = endThumbCenter;
          leftThumbOffset = startThumbCenter;
          break;
        case 0:
          rightThumbOffset = startThumbCenter;
          leftThumbOffset = endThumbCenter;
          break;
        default:
          leftThumbOffset = null;
          rightThumbOffset = null;
      }
      C.assertHelper(t5.getPreferredSize$2(isEnabled, isDiscrete)._dx / 2 > 0);
      trackRect = this.getPreferredRect$5$isDiscrete$isEnabled$offset$parentBox$sliderTheme(isDiscrete, isEnabled, offset, parentBox, sliderTheme);
      this.themeData.sliderMeasureData.trackerRect = trackRect;
      t1 = trackRect.bottom;
      t2 = trackRect.top;
      t3 = (t1 - t2) / 2;
      trackRadius = new C.Radius(t3, t3);
      t3 = context.get$canvas(context);
      t4 = leftThumbOffset._dx;
      t3.drawRRect$2(C.RRect$fromLTRBAndCorners(trackRect.left, t2, t4, t1, trackRadius, D.Radius_0_0, trackRadius, D.Radius_0_0), inactivePaint);
      t3 = context.get$canvas(context);
      t5 = rightThumbOffset._dx;
      t3.drawRect$2(new C.Rect(t4, t2, t5, t1 + 0), activePaint);
      context.get$canvas(context).drawRRect$2(C.RRect$fromLTRBAndCorners(t5, t2, trackRect.right, t1, D.Radius_0_0, trackRadius, D.Radius_0_0, trackRadius), inactivePaint);
    }
  };
  A.TDRoundRangeSliderThumbShape.prototype = {
    getPreferredSize$2(isEnabled, isDiscrete) {
      return new C.Size(20, 20);
    },
    paint$10$activationAnimation$enableAnimation$isDiscrete$isOnTop$isPressed$sliderTheme$textDirection$thumb(context, center, activationAnimation, enableAnimation, isDiscrete, isOnTop, isPressed, sliderTheme, textDirection, thumb) {
      var canvas, t2, radius, strokePaint, evaluatedElevation, shadowPath, t3, t4, trackerRect, t5, t6, t7, value, formatterValue, painter, _null = null,
        t1 = type$.Animation_double;
      t1._as(activationAnimation);
      t1._as(enableAnimation);
      C.assertHelper(sliderTheme.showValueIndicator != null);
      t1 = sliderTheme.overlappingShapeStrokeColor;
      C.assertHelper(t1 != null);
      canvas = context.get$canvas(context);
      t2 = type$.Tween_double;
      radius = new C.Tween(10, 10, t2).transform$1(0, enableAnimation.get$value(0));
      if (isOnTop) {
        strokePaint = $.$get$_renderer().createPaint$0();
        t1.toString;
        strokePaint.set$color(0, t1);
        strokePaint.set$strokeWidth(1);
        strokePaint.set$style(0, D.PaintingStyle_1);
        canvas.drawCircle$3(center, radius, strokePaint);
      }
      t1 = new C.ColorTween(sliderTheme.disabledThumbColor, sliderTheme.thumbColor).transform$1(0, enableAnimation.get$value(0));
      t1.toString;
      evaluatedElevation = isPressed ? new C.Tween(3, 3, t2).transform$1(0, activationAnimation.get$value(0)) : 3;
      t2 = $.$get$_renderer();
      shadowPath = t2.createPath$0();
      t3 = 2 * radius;
      shadowPath.addArc$3(C.Rect$fromCenter(center, t3, t3), 0, 6.283185307179586);
      canvas.drawShadow$4(shadowPath, B.Color_SHX, evaluatedElevation, true);
      t3 = this.themeData;
      if (t3.showThumbValue && t3.sliderMeasureData.trackerRect != null) {
        t4 = t3.sliderMeasureData;
        trackerRect = t4.trackerRect;
        t5 = center._dx;
        t6 = trackerRect.left;
        t7 = t3.min;
        value = (t3.max - t7) * ((t5 - t6) / (trackerRect.right - t6)) + t7;
        t6 = t3.scaleFormatter;
        formatterValue = t6 == null ? D.JSNumber_methods.toStringAsFixed$1(value, 2) : t6.call$1(value);
        painter = C.TextPainter$(_null, _null, _null, _null, C.TextSpan$(_null, enableAnimation.get$value(0) > 0 ? t3.thumbTextStyle : t3.disabledThumbTextStyle, formatterValue), D.TextAlign_2, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
        painter.layout$1$maxWidth(100);
        t3 = painter.get$width(0);
        t6 = center._dy;
        painter.get$_debugAssertTextLayoutIsValid();
        t7 = painter._layoutCache.layout._paragraph;
        t7 = t7.get$height(t7);
        painter.paint$2(context.get$canvas(context), new C.Offset(t5 - t3 / 2, t6 - t7 - 14));
        if (thumb === B.Thumb_0) {
          t3 = t5 - painter.get$width(0) / 2;
          painter.get$_debugAssertTextLayoutIsValid();
          t5 = painter._layoutCache.layout._paragraph;
          t5 = t6 - t5.get$height(t5) - 14;
          t6 = painter.get$width(0);
          painter.get$_debugAssertTextLayoutIsValid();
          t7 = painter._layoutCache.layout._paragraph;
          t4.startRangeThumbTextRect = new C.Rect(t3, t5, t3 + t6, t5 + t7.get$height(t7));
        } else {
          t3 = t5 - painter.get$width(0) / 2;
          painter.get$_debugAssertTextLayoutIsValid();
          t5 = painter._layoutCache.layout._paragraph;
          t5 = t6 - t5.get$height(t5) - 14;
          t6 = painter.get$width(0);
          painter.get$_debugAssertTextLayoutIsValid();
          t7 = painter._layoutCache.layout._paragraph;
          t4.endRangeThumbTextRect = new C.Rect(t3, t5, t3 + t6, t5 + t7.get$height(t7));
        }
      }
      t2 = t2.createPaint$0();
      t2.set$color(0, t1);
      canvas.drawCircle$3(center, radius, t2);
    }
  };
  A.TDRoundRangeSliderTickMarkShape.prototype = {
    getPreferredSize$2$isEnabled$sliderTheme(isEnabled, sliderTheme) {
      return new C.Size(8, 8);
    },
    paint$9$enableAnimation$endThumbCenter$isEnabled$parentBox$sliderTheme$startThumbCenter$textDirection(context, center, enableAnimation, endThumbCenter, isEnabled, parentBox, sliderTheme, startThumbCenter, textDirection) {
      var begin, begin0, end, end0, t1, isBetweenThumbs, paint, t2, t3, rect, trackHeight, t4, perWidth, index, value, valueFormatter, painter, x, _null = null;
      type$.Animation_double._as(enableAnimation);
      begin = sliderTheme.disabledActiveTickMarkColor;
      C.assertHelper(begin != null);
      begin0 = sliderTheme.disabledInactiveTickMarkColor;
      C.assertHelper(begin0 != null);
      end = sliderTheme.activeTickMarkColor;
      C.assertHelper(end != null);
      end0 = sliderTheme.inactiveTickMarkColor;
      C.assertHelper(end0 != null);
      switch (textDirection.index) {
        case 1:
          t1 = center._dx;
          isBetweenThumbs = startThumbCenter._dx < t1 && t1 < endThumbCenter._dx;
          break;
        case 0:
          t1 = center._dx;
          isBetweenThumbs = endThumbCenter._dx < t1 && t1 < startThumbCenter._dx;
          break;
        default:
          isBetweenThumbs = _null;
      }
      C.boolConversionCheck(isBetweenThumbs);
      begin = isBetweenThumbs ? begin : begin0;
      end = isBetweenThumbs ? end : end0;
      paint = $.$get$_renderer().createPaint$0();
      t1 = new C.ColorTween(begin, end).transform$1(0, enableAnimation.get$value(0));
      t1.toString;
      paint.set$color(0, t1);
      t1 = this.themeData;
      if (t1.showScaleValue) {
        t2 = t1.divisions;
        C.assertHelper(t2 != null);
        t3 = sliderTheme.rangeTrackShape;
        rect = t3 == null ? _null : t3.getPreferredRect$2$parentBox$sliderTheme(parentBox, sliderTheme);
        if (rect != null) {
          t2.toString;
          t3 = t2 > 0;
        } else
          t3 = false;
        if (t3) {
          trackHeight = rect.bottom - rect.top;
          t3 = rect.right;
          t4 = rect.left;
          t2.toString;
          perWidth = (t3 - t4 - trackHeight) / t2;
          C.assertHelper(perWidth > 0);
          t3 = center._dx;
          index = D.JSNumber_methods.round$0((t3 - (t4 + trackHeight / 2)) / perWidth);
          t4 = t1.min;
          value = t4 + index * ((t1.max - t4) / t2);
          t4 = t1.scaleFormatter;
          valueFormatter = t4 != null ? t4.call$1(value) : D.JSNumber_methods.toString$0(value);
          painter = C.TextPainter$(_null, _null, _null, _null, C.TextSpan$(_null, enableAnimation.get$value(0) > 0 ? t1.scaleTextStyle : t1.disabledScaleTextStyle, valueFormatter), D.TextAlign_2, D.TextDirection_1, _null, D._LinearTextScaler_1, D.TextWidthBasis_0);
          painter.layout$1$maxWidth(100);
          x = t3 - painter.get$size(0)._dx / 2;
          if (index === 0)
            x = t3 - trackHeight;
          else if (index === t2)
            x = t3 - painter.get$size(0)._dx + trackHeight;
          t1 = context.get$canvas(context);
          painter.get$_debugAssertTextLayoutIsValid();
          t2 = painter._layoutCache.layout._paragraph;
          painter.paint$2(t1, new C.Offset(x, center._dy - t2.get$height(t2) - 14));
        }
        context.get$canvas(context).drawCircle$3(center, 4, paint);
      }
    }
  };
  A._TDRoundedRectRangeSliderTrackShape_RangeSliderTrackShape_TDBaseRangeSliderTrackShape.prototype = {};
  A._TDRoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape.prototype = {};
  A.ByteWriter.prototype = {
    writeUint16$1(value) {
      var _this = this,
        t1 = _this.data,
        t2 = _this.i;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 10);
      t1.setUint16(t2, value, D.C_Endian === _this.endian);
      _this.i += 2;
    },
    writeUint32$1(value) {
      var _this = this,
        t1 = _this.data,
        t2 = _this.i;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 11);
      t1.setUint32(t2, value, D.C_Endian === _this.endian);
      _this.i += 4;
    }
  };
  A.Channel.prototype = {
    Channel$2(nx, ny) {
      var t1, t2, n, cy, cx, t3;
      for (t1 = this.ny, t2 = this.nx, n = 0, cy = 0; cy < t1; ++cy) {
        cx = cy > 0 ? 0 : 1;
        t3 = t2 * (t1 - cy);
        for (; cx * t1 < t3; ++cx)
          ++n;
      }
      this.set$__Channel_ac_A(type$.List_double._as(C.List_List$filled(n, 0, false, type$.double)));
    },
    decode$4(_, hash, start, index, scale) {
      var t2, t3,
        t1 = hash.length,
        i = 0;
      while (true) {
        t2 = this.__Channel_ac_A;
        t2 === $ && C.throwLateFieldNI("ac");
        if (!(i < t2.length))
          break;
        t3 = start + (index >>> 1);
        if (!(t3 < t1))
          return C.ioore(hash, t3);
        D.JSArray_methods.$indexSet(t2, i, ((D.JSInt_methods._shrBothPositive$1(hash[t3], (index & 1) << 2) & 15) / 7.5 - 1) * scale);
        ++index;
        ++i;
      }
      return index;
    },
    set$__Channel_ac_A(__Channel_ac_A) {
      this.__Channel_ac_A = type$.List_double._as(__Channel_ac_A);
    }
  };
  A.Image1.prototype = {};
  A.Tuple2.prototype = {
    toList$0(_) {
      return C.List_List$from([this.item1, this.item2], false, type$.dynamic);
    },
    toString$0(_) {
      return "[" + C.S(this.item1) + ", " + C.S(this.item2) + "]";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Tuple2 && other.item1 === this.item1 && other.item2 === this.item2;
    },
    get$hashCode(_) {
      return C.Object_hash(D.JSNumber_methods.get$hashCode(this.item1), D.JSNumber_methods.get$hashCode(this.item2), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.Tuple3.prototype = {
    toList$0(_) {
      return C.List_List$from([this.item1, this.item2, this.item3], false, type$.dynamic);
    },
    toString$0(_) {
      return "[" + this.item1.toString$0(0) + ", " + C.S(this.item2) + ", " + C.S(this.item3) + "]";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A.Tuple3)
        t1 = other.item1.$eq(0, this.item1);
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(this.item1.get$hashCode(0), D.JSNull_methods.get$hashCode(this.item2), D.JSNull_methods.get$hashCode(this.item3), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.RenderWebVectorGraphic.prototype = {
    set$assetKey(value) {
      if (value.$eq(0, this._html_render_vector_graphics$_assetKey))
        return;
      this._html_render_vector_graphics$_assetKey = value;
    },
    set$pictureInfo(value) {
      if (value === this._html_render_vector_graphics$_pictureInfo)
        return;
      this._html_render_vector_graphics$_pictureInfo = value;
      this.markNeedsPaint$0();
    },
    set$colorFilter(value) {
      if (this._html_render_vector_graphics$_colorFilter == value)
        return;
      this._html_render_vector_graphics$_colorFilter = value;
      this.markNeedsPaint$0();
    },
    set$opacity(_, value) {
      return;
    },
    _html_render_vector_graphics$_updateOpacity$0() {
      return;
    },
    hitTestSelf$1(position) {
      return true;
    },
    get$sizedByParent() {
      return true;
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0));
    },
    attach$1(owner) {
      this._html_render_vector_graphics$_updateOpacity$0();
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$RenderObject$detach(0);
    },
    dispose$0() {
      var _this = this;
      _this._transformLayer.set$layer(0, null);
      _this._html_render_vector_graphics$_opacityHandle.set$layer(0, null);
      _this._filterLayer.set$layer(0, null);
      _this.super$RenderObject$dispose();
    },
    paint$2(context, offset) {
      var t1, _this = this;
      C.assertHelper(_this.get$size(0).$eq(0, _this._html_render_vector_graphics$_pictureInfo.size));
      if (_this._html_render_vector_graphics$_opacityValue <= 0)
        return;
      t1 = _this._transformLayer;
      t1.set$layer(0, context.pushTransform$5$oldLayer(true, offset, _this._html_render_vector_graphics$_transform, new A.RenderWebVectorGraphic_paint_closure(_this), t1._layer));
    }
  };
  A.PictureInfo.prototype = {};
  A._PatternConfig.prototype = {};
  A._PatternState.prototype = {};
  A._DefaultPictureFactory.prototype = {$isPictureFactory: 1};
  A.FlutterVectorGraphicsListener.prototype = {
    toPicture$0() {
      var image, pattern, t1, t2, t3, _this = this;
      C.assertHelper(!_this._done);
      _this._done = true;
      try {
        t1 = _this._recorder.endRecording$0();
        t2 = _this._listener0$_size;
        return new A.PictureInfo(t1, t2);
      } finally {
        for (t1 = _this._images, t2 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();) {
          image = t2.__js_helper$_current;
          image.dispose$0();
        }
        t1.clear$0(0);
        for (t1 = _this._patterns, t2 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();) {
          pattern = t2.__js_helper$_current;
          t3 = pattern.shader;
          if (t3 != null)
            t3.dispose$0();
        }
        t1.clear$0(0);
      }
    },
    onDrawPath$3(pathId, paintId, patternId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, path, paint, t1;
      var $async$onDrawPath$3 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._paths;
              if (!(pathId < t1.length)) {
                $async$returnValue = C.ioore(t1, pathId);
                // goto return
                $async$goto = 1;
                break;
              }
              path = t1[pathId];
              t1 = $async$self._paints;
              if (!(paintId < t1.length)) {
                $async$returnValue = C.ioore(t1, paintId);
                // goto return
                $async$goto = 1;
                break;
              }
              paint = t1[paintId];
              if (patternId != null)
                paint.set$shader($async$self._patterns.$index(0, patternId).shader);
              t1 = $async$self._currentPattern;
              if (t1 != null) {
                t1 = $async$self._patterns.$index(0, t1._patternId).canvas;
                t1.drawPath$2(path, paint);
              } else {
                t1 = paint;
                $async$self._listener0$_canvas.drawPath$2(path, t1);
              }
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$onDrawPath$3, $async$completer);
    },
    onPaintObject$9$blendMode$color$id$paintStyle$shaderId$strokeCap$strokeJoin$strokeMiterLimit$strokeWidth(blendMode, color, id, paintStyle, shaderId, strokeCap, strokeJoin, strokeMiterLimit, strokeWidth) {
      var paint, t2,
        t1 = this._paints;
      if (C.assertTest(t1.length === id))
        C.assertThrow("Expect ID to be " + t1.length);
      paint = $.$get$_renderer().createPaint$0();
      paint.set$color(0, C.Color$(color));
      if (blendMode !== 0) {
        if (!(blendMode >= 0 && blendMode < 29))
          return C.ioore(B.List_AAT, blendMode);
        paint.set$blendMode(B.List_AAT[blendMode]);
      }
      if (shaderId != null) {
        t2 = this._shaders;
        if (shaderId >>> 0 !== shaderId || shaderId >= t2.length)
          return C.ioore(t2, shaderId);
        paint.set$shader(t2[shaderId]);
      }
      if (paintStyle === 1) {
        paint.set$style(0, D.PaintingStyle_1);
        if (strokeCap != null && strokeCap !== 0)
          paint.set$strokeCap(D.JSArray_methods.$index(B.List_s5R, strokeCap));
        if (strokeJoin != null && strokeJoin !== 0)
          paint.set$strokeJoin(D.JSArray_methods.$index(B.List_ykM, strokeJoin));
        if (strokeMiterLimit != null && strokeMiterLimit !== 4)
          paint.set$strokeMiterLimit(strokeMiterLimit);
        if (strokeWidth != null && strokeWidth !== 0)
          paint.set$strokeWidth(strokeWidth);
      }
      D.JSArray_methods.add$1(t1, paint);
    },
    onLinearGradient$8(fromX, fromY, toX, toY, colors, offsets, tileMode, id) {
      var t2, t3, i,
        t1 = this._shaders;
      C.assertHelper(t1.length === id);
      t2 = C._setArrayType([], type$.JSArray_Color);
      for (t3 = colors.length, i = 0; i < t3; ++i)
        t2.push(C.Color$(colors[i]));
      if (!(tileMode >= 0 && tileMode < 4))
        return C.ioore(B.List_Lm4, tileMode);
      D.JSArray_methods.add$1(t1, C.Gradient_Gradient$linear(new C.Offset(fromX, fromY), new C.Offset(toX, toY), t2, offsets, B.List_Lm4[tileMode], null));
    },
    onRadialGradient$10(centerX, centerY, radius, focalX, focalY, colors, offsets, transform, tileMode, id) {
      var center, focal, t2, t3, i, hasFocal,
        t1 = this._shaders;
      C.assertHelper(t1.length === id);
      center = new C.Offset(centerX, centerY);
      if (focalX == null)
        focal = null;
      else {
        focalY.toString;
        focal = new C.Offset(focalX, focalY);
      }
      t2 = C._setArrayType([], type$.JSArray_Color);
      for (t3 = colors.length, i = 0; i < t3; ++i)
        t2.push(C.Color$(colors[i]));
      hasFocal = !J.$eq$(focal, center) && focal != null;
      if (!(tileMode >= 0 && tileMode < 4))
        return C.ioore(B.List_Lm4, tileMode);
      t3 = B.List_Lm4[tileMode];
      D.JSArray_methods.add$1(t1, A.Gradient_Gradient$radial(center, radius, t2, offsets, t3, transform, hasFocal ? focal : null));
    },
    onDrawText$4(textId, fillId, strokeId, patternId) {
      return this.onDrawText$body$FlutterVectorGraphicsListener(textId, fillId, strokeId, patternId);
    },
    onDrawText$body$FlutterVectorGraphicsListener(textId, fillId, strokeId, patternId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, textConfig, dx, dy, t1, t2;
      var $async$onDrawText$4 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = $async$self._textConfig;
              if (!(textId < t2.length)) {
                $async$returnValue = C.ioore(t2, textId);
                // goto return
                $async$goto = 1;
                break;
              }
              textConfig = t2[textId];
              dx = $async$self._accumulatedTextPositionX;
              if (dx == null)
                dx = 0;
              dy = $async$self._textPositionY;
              t1.paragraphWidth = 0;
              t2 = new A.FlutterVectorGraphicsListener_onDrawText_draw(t1, $async$self, patternId, textConfig, dx, dy);
              if (fillId != null)
                t2.call$1(fillId);
              if (strokeId != null)
                t2.call$1(strokeId);
              $async$self._accumulatedTextPositionX = dx + t1.paragraphWidth;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$onDrawText$4, $async$completer);
    },
    onImage$3(imageId, format, data) {
      var cacheCompleter, listener,
        t1 = new C._Future($.Zone__current, type$._Future_void),
        completer = new C._AsyncCompleter(t1, type$._AsyncCompleter_void);
      D.JSArray_methods.add$1(this._listener0$_pendingImages, t1);
      t1 = C.BindingBase_checkInstance($.PaintingBinding__instance, type$.PaintingBinding).PaintingBinding___PaintingBinding__imageCache_A;
      t1 === $ && C.throwLateFieldNI("_imageCache");
      cacheCompleter = t1.putIfAbsent$2(0, C.Object_hash(this._listener0$_id, imageId, format, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue), new A.FlutterVectorGraphicsListener_onImage_closure(data));
      if (cacheCompleter == null) {
        completer.completeError$1("Failed to load image");
        return;
      }
      listener = C._Cell$named("listener");
      listener._value = new C.ImageStreamListener(new A.FlutterVectorGraphicsListener_onImage_closure0(this, cacheCompleter, listener, imageId, completer), null, new A.FlutterVectorGraphicsListener_onImage_closure1(completer, cacheCompleter, listener, null));
      cacheCompleter.addListener$1(0, listener._readLocal$0());
    },
    onDrawImage$6(imageId, x, y, width, height, transform) {
      var t2,
        image = this._images.$index(0, imageId),
        t1 = image == null;
      if (C.assertTest(!t1))
        C.assertThrow("Invalid imageId: " + imageId + ". Image not found in _images.");
      if (t1)
        return;
      t1 = transform != null;
      if (t1) {
        t2 = this._listener0$_canvas;
        t2.save$0(0);
        t2.transform$1(0, transform);
      }
      t2 = this._listener0$_canvas;
      t2.drawImageRect$4(image, new C.Rect(0, 0, image.get$width(image), image.get$height(image)), new C.Rect(x, y, x + width, y + height), $.$get$_renderer().createPaint$0());
      if (t1)
        t2.restore$0(0);
    }
  };
  A._TextPosition.prototype = {};
  A._TextConfig.prototype = {};
  A.VectorGraphicsDecodeException.prototype = {
    toString$0(_) {
      return "VectorGraphicsDecodeException: Failed to decode vector graphic from " + this.source.toString$0(0) + ".\n\nAdditional error: " + C.S(this.originalException);
    },
    $isException: 1
  };
  A.BytesLoader.prototype = {};
  A.RasterKey.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.RasterKey && other.assetKey.$eq(0, this.assetKey) && other.width === this.width && other.height === this.height;
    },
    get$hashCode(_) {
      return C.Object_hash(this.assetKey, this.width, this.height, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  A.RasterData.prototype = {};
  A.RenderVectorGraphic.prototype = {
    set$assetKey(value) {
      if (value.$eq(0, this._assetKey))
        return;
      this._assetKey = value;
    },
    set$pictureInfo(value) {
      if (value === this._render_vector_graphic$_pictureInfo)
        return;
      this._render_vector_graphic$_pictureInfo = value;
      this.markNeedsPaint$0();
    },
    set$colorFilter(value) {
      if (this._render_vector_graphic$_colorFilter == value)
        return;
      this._render_vector_graphic$_colorFilter = value;
      this.markNeedsPaint$0();
    },
    set$devicePixelRatio(_, value) {
      if (value === this._render_vector_graphic$_devicePixelRatio)
        return;
      this._render_vector_graphic$_devicePixelRatio = value;
      this.markNeedsPaint$0();
    },
    set$opacity(_, value) {
      return;
    },
    _render_vector_graphic$_updateOpacity$0() {
      return;
    },
    set$scale(_, value) {
      C.assertHelper(value !== 0);
      if (value === this._render_vector_graphic$_scale)
        return;
      this._render_vector_graphic$_scale = value;
      this.markNeedsPaint$0();
    },
    hitTestSelf$1(position) {
      return true;
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0));
    },
    _maybeReleaseRaster$1(data) {
      var t1;
      if (data == null)
        return;
      if (--data.count === 0 && $.RenderVectorGraphic__liveRasterCache.containsKey$1(0, data.key)) {
        $.RenderVectorGraphic__liveRasterCache.remove$1(0, data.key);
        t1 = data._render_vector_graphic$_image;
        if (t1 != null)
          t1.dispose$0();
        data._render_vector_graphic$_image = null;
      }
    },
    _maybeUpdateRaster$0() {
      var t4, recorder, canvas, data, _this = this,
        t1 = _this._render_vector_graphic$_pictureInfo.size,
        t2 = _this._render_vector_graphic$_devicePixelRatio,
        t3 = _this._render_vector_graphic$_scale,
        scaledWidth = D.JSNumber_methods.round$0(t1._dx * t2 / t3),
        scaledHeight = D.JSNumber_methods.round$0(t1._dy * t2 / t3),
        key = new A.RasterKey(_this._assetKey, scaledWidth, scaledHeight);
      if ($.RenderVectorGraphic__liveRasterCache.containsKey$1(0, key)) {
        t1 = $.RenderVectorGraphic__liveRasterCache.$index(0, key);
        t1.toString;
        t2 = _this._rasterData;
        if (t1 !== t2) {
          _this._maybeReleaseRaster$1(t2);
          ++t1.count;
        }
        _this._rasterData = t1;
        return;
      }
      t1 = _this._render_vector_graphic$_devicePixelRatio;
      t2 = _this._render_vector_graphic$_scale;
      t3 = _this._render_vector_graphic$_pictureInfo;
      t4 = $.$get$_renderer();
      recorder = t4.createPictureRecorder$0();
      canvas = t4.createCanvas$2(recorder, null);
      canvas.scale$1(0, t1 / t2);
      canvas.drawPicture$1(t3.picture);
      data = new A.RasterData(recorder.endRecording$0().toImageSync$2(scaledWidth, scaledHeight), key, 0);
      data.count = 1;
      C.assertHelper(!$.RenderVectorGraphic__liveRasterCache.containsKey$1(0, key));
      t3 = _this.get$debugDisposed();
      t3.toString;
      C.assertHelper(!t3);
      $.RenderVectorGraphic__liveRasterCache.$indexSet(0, key, data);
      _this._maybeReleaseRaster$1(_this._rasterData);
      _this._rasterData = data;
    },
    attach$1(owner) {
      this._render_vector_graphic$_updateOpacity$0();
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$RenderObject$detach(0);
    },
    dispose$0() {
      this._maybeReleaseRaster$1(this._rasterData);
      this.super$RenderObject$dispose();
    },
    paint$2(context, offset) {
      var t1, t2, colorPaint, t3, t4, t5, _this = this;
      C.assertHelper(_this.get$size(0).$eq(0, _this._render_vector_graphic$_pictureInfo.size));
      if (_this._opacityValue <= 0)
        return;
      _this._maybeUpdateRaster$0();
      t1 = _this._rasterData;
      t2 = t1._render_vector_graphic$_image;
      t2.toString;
      t1 = t1.key;
      colorPaint = $.$get$_renderer().createPaint$0();
      colorPaint.set$filterQuality(D.FilterQuality_1);
      t3 = _this._render_vector_graphic$_colorFilter;
      if (t3 != null)
        colorPaint.set$colorFilter(t3);
      colorPaint.set$color(0, C.Color$fromRGBO(0, 0, 0, _this._opacityValue));
      t3 = offset._dx;
      t4 = offset._dy;
      t5 = _this._render_vector_graphic$_pictureInfo.size;
      context.get$canvas(context).drawImageRect$4(t2, new C.Rect(0, 0, t1.width, t1.height), new C.Rect(t3, t4, t3 + t5._dx, t4 + t5._dy), colorPaint);
    }
  };
  A.RenderPictureVectorGraphic.prototype = {
    set$pictureInfo(value) {
      if (value === this._render_vector_graphic$_pictureInfo)
        return;
      this._render_vector_graphic$_pictureInfo = value;
      this.markNeedsPaint$0();
    },
    set$colorFilter(value) {
      if (this._render_vector_graphic$_colorFilter == value)
        return;
      this._render_vector_graphic$_colorFilter = value;
      this.markNeedsPaint$0();
    },
    set$opacity(_, value) {
      return;
    },
    _render_vector_graphic$_updateOpacity$0() {
      return;
    },
    hitTestSelf$1(position) {
      return true;
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(constraints.constrainWidth$1(0), constraints.constrainHeight$1(0));
    },
    attach$1(owner) {
      this._render_vector_graphic$_updateOpacity$0();
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$RenderObject$detach(0);
    },
    dispose$0() {
      this.super$RenderObject$dispose();
    },
    paint$2(context, offset) {
      var colorPaint, t1, saveCount, t2, _this = this;
      C.assertHelper(_this.get$size(0).$eq(0, _this._render_vector_graphic$_pictureInfo.size));
      if (_this._opacityValue <= 0)
        return;
      colorPaint = $.$get$_renderer().createPaint$0();
      t1 = _this._render_vector_graphic$_colorFilter;
      if (t1 != null)
        colorPaint.set$colorFilter(t1);
      colorPaint.set$color(0, C.Color$fromRGBO(0, 0, 0, _this._opacityValue));
      saveCount = context.get$canvas(context).getSaveCount$0();
      if (!offset.$eq(0, D.Offset_0_0)) {
        context.get$canvas(context).save$0(0);
        context.get$canvas(context).translate$2(0, offset._dx, offset._dy);
      }
      if (_this._opacityValue !== 1 || _this._render_vector_graphic$_colorFilter != null) {
        context.get$canvas(context).save$0(0);
        t1 = context.get$canvas(context);
        t2 = _this.get$size(0);
        t1.clipRect$1(new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
        t2 = context.get$canvas(context);
        t1 = _this.get$size(0);
        t2.saveLayer$2(new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy), colorPaint);
      }
      context.get$canvas(context).drawPicture$1(_this._render_vector_graphic$_pictureInfo.picture);
      context.get$canvas(context).restoreToCount$1(saveCount);
    }
  };
  A.RenderingStrategy.prototype = {
    _enumToString$0() {
      return "RenderingStrategy." + this._name;
    }
  };
  A.VectorGraphic.prototype = {
    createState$0() {
      return new A._VectorGraphicWidgetState(D._StateLifecycle_0);
    }
  };
  A._PictureData.prototype = {};
  A._PictureKey.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.cacheKey, _this.locale, _this.textDirection, _this.clipViewbox, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A._PictureKey && other.cacheKey.$eq(0, _this.cacheKey) && J.$eq$(other.locale, _this.locale) && other.textDirection == _this.textDirection && other.clipViewbox === _this.clipViewbox;
    }
  };
  A._VectorGraphicWidgetState.prototype = {
    didChangeDependencies$0() {
      var _this = this;
      _this.locale = C.Localizations_maybeLocaleOf(_this.get$context(0));
      _this.textDirection = C.Directionality_maybeOf(_this.get$context(0));
      _this._loadAssetBytes$0();
      _this.super$State$didChangeDependencies();
    },
    didUpdateWidget$1(oldWidget) {
      type$.VectorGraphic._as(oldWidget);
      if (!oldWidget.loader.$eq(0, this._widget.loader))
        this._loadAssetBytes$0();
      this.super$State$didUpdateWidget(oldWidget);
    },
    dispose$0() {
      var _this = this;
      _this._maybeReleasePicture$1(_this._pictureInfo);
      _this._pictureInfo = null;
      _this.super$State$dispose();
    },
    _maybeReleasePicture$1(data) {
      if (data == null)
        return;
      if (--data.count === 0 && $._VectorGraphicWidgetState__livePictureCache.containsKey$1(0, data.key)) {
        $._VectorGraphicWidgetState__livePictureCache.remove$1(0, data.key);
        data.pictureInfo.picture.dispose$0();
      }
    },
    _loadPicture$3(context, key, loader) {
      var t1, result;
      if ($._VectorGraphicWidgetState__pendingPictures.containsKey$1(0, key)) {
        t1 = $._VectorGraphicWidgetState__pendingPictures.$index(0, key);
        t1.toString;
        return t1;
      }
      result = loader.loadBytes$1(context).then$1$1(0, new A._VectorGraphicWidgetState__loadPicture_closure(key, loader), type$.PictureInfo).then$1$1(0, new A._VectorGraphicWidgetState__loadPicture_closure0(key), type$._PictureData);
      $._VectorGraphicWidgetState__pendingPictures.$indexSet(0, key, result);
      result.whenComplete$1(new A._VectorGraphicWidgetState__loadPicture_closure1(key));
      return result;
    },
    _vector_graphics$_handleError$2(error, stackTrace) {
      type$.nullable_StackTrace._as(stackTrace);
      if (this._framework$_element == null)
        return;
      this.setState$1(new A._VectorGraphicWidgetState__handleError_closure(this, error, stackTrace));
    },
    _loadAssetBytes$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, loader, data, error, stackTrace, exception, key, data0, $async$exception;
      var $async$_loadAssetBytes$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              key = new A._PictureKey($async$self._widget.loader.cacheKey$1($async$self.get$context(0)), $async$self.locale, $async$self.textDirection, $async$self._widget.clipViewbox);
              data0 = $._VectorGraphicWidgetState__livePictureCache.$index(0, key);
              if (data0 != null) {
                ++data0.count;
                $async$self.setState$1(new A._VectorGraphicWidgetState__loadAssetBytes_closure($async$self, data0));
                // goto return
                $async$goto = 1;
                break;
              }
              loader = $async$self._widget.loader;
              $async$handler = 4;
              $async$goto = 7;
              return C._asyncAwait($async$self._loadPicture$3($async$self.get$context(0), key, loader), $async$_loadAssetBytes$0);
            case 7:
              // returning from await.
              data = $async$result;
              data.count = data.count + 1;
              if ($async$self._framework$_element == null || !J.$eq$(loader, $async$self._widget.loader)) {
                $async$self._maybeReleasePicture$1(data);
                // goto return
                $async$goto = 1;
                break;
              }
              if (data.count === 1)
                $._VectorGraphicWidgetState__livePictureCache.$indexSet(0, key, data);
              $async$self.setState$1(new A._VectorGraphicWidgetState__loadAssetBytes_closure0($async$self, data));
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              error = C.unwrapException($async$exception);
              stackTrace = C.getTraceFromException($async$exception);
              $async$self._vector_graphics$_handleError$2(error, stackTrace);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$_loadAssetBytes$0, $async$completer);
    },
    build$1(context) {
      var width, height, t2, scale, t3, child, t4, t5, t6, _this = this, _null = null,
        t1 = _this._pictureInfo,
        pictureInfo = t1 == null ? _null : t1.pictureInfo;
      if (pictureInfo != null) {
        t1 = _this._widget;
        width = t1.width;
        height = t1.height;
        t1 = pictureInfo.size;
        t2 = t1.get$isEmpty(0);
        if (!t2)
          width = height / t1._dy * t1._dx;
        else {
          t2 = t1.get$isEmpty(0);
          if (!t2)
            height = width / t1._dx * t1._dy;
        }
        t1 = pictureInfo.size;
        scale = Math.min(t1._dx / width, t1._dy / height);
        if ($.$get$_VectorGraphicWidgetState__webRenderObject()) {
          t2 = _this._pictureInfo.key;
          t3 = _this._widget;
          child = new A._RawWebVectorGraphicWidget(pictureInfo, t3.colorFilter, t3.opacity, t2, _null, _null);
          t2 = t3;
        } else {
          t2 = _this._widget;
          t3 = t2.strategy;
          t4 = _this._pictureInfo;
          t5 = t2.colorFilter;
          t6 = t2.opacity;
          if (t3 === B.RenderingStrategy_0)
            child = new A._RawVectorGraphicWidget(pictureInfo, t5, scale, t6, t4.key, _null, _null);
          else {
            t4.toString;
            child = new A._RawPictureVectorGraphicWidget(pictureInfo, t5, t6, _null, _null);
          }
        }
        child = new C.SizedBox(width, height, C.FittedBox$(t2.alignment, C.SizedBox$fromSize(child, t1), t2.clipBehavior, t2.fit), _null);
      } else {
        if (_this._vector_graphics$_error != null)
          _this._widget.toString;
        t1 = _this._widget;
        child = new C.SizedBox(t1.width, t1.height, _null, _null);
      }
      child = new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, "", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, child, _null);
      return child;
    }
  };
  A._RawVectorGraphicWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.MediaQuery__maybeOf(context, null);
      t1 = t1 == null ? null : t1.devicePixelRatio;
      if (t1 == null)
        t1 = 1;
      t1 = new A.RenderVectorGraphic(_this.assetKey, _this.pictureInfo, _this.colorFilter, t1, _this.opacity, _this.scale, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._render_vector_graphic$_updateOpacity$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderVectorGraphic._as(renderObject);
      renderObject.set$pictureInfo(_this.pictureInfo);
      renderObject.set$assetKey(_this.assetKey);
      renderObject.set$colorFilter(_this.colorFilter);
      t1 = C.MediaQuery__maybeOf(context, null);
      t1 = t1 == null ? null : t1.devicePixelRatio;
      renderObject.set$devicePixelRatio(0, t1 == null ? 1 : t1);
      renderObject.set$opacity(0, _this.opacity);
      renderObject.set$scale(0, _this.scale);
    }
  };
  A._RawWebVectorGraphicWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.LayerHandle$(type$.TransformLayer),
        t2 = C.LayerHandle$(type$.OpacityLayer),
        t3 = C.LayerHandle$(type$.ColorFilterLayer),
        t4 = new C.Matrix40(new Float64Array(16));
      t4.setIdentity$0();
      t4 = new A.RenderWebVectorGraphic(_this.assetKey, _this.pictureInfo, _this.colorFilter, _this.opacity, t1, t2, t3, t4, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t4.RenderObject$0();
      t4._html_render_vector_graphics$_updateOpacity$0();
      return t4;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.RenderWebVectorGraphic._as(renderObject);
      renderObject.set$pictureInfo(_this.pictureInfo);
      renderObject.set$assetKey(_this.assetKey);
      renderObject.set$colorFilter(_this.colorFilter);
      renderObject.set$opacity(0, _this.opacity);
    }
  };
  A._RawPictureVectorGraphicWidget.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderPictureVectorGraphic(this.pictureInfo, this.colorFilter, this.opacity, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._render_vector_graphic$_updateOpacity$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderPictureVectorGraphic._as(renderObject);
      renderObject.set$pictureInfo(this.pictureInfo);
      renderObject.set$colorFilter(this.colorFilter);
      renderObject.set$opacity(0, this.opacity);
    }
  };
  A.DecodeResponse.prototype = {};
  A.VectorGraphicsCodec.prototype = {
    decode$3$response(_, data, listener, response) {
      var buffer, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, readImage, t11, type, value, value0, value1, value2, value3, value4, colors, focalY, focalX, blendMode, strokeCap, strokeJoin, vertices, indices, vertexData, paint, patternId, t12, t13, patternListener, pictureInfo, image, pattern, fontWeight, decoration, decorationStyle, list, fontFamily, text, decorations, fillId, strokeId, format, transform, recorder, newCanvas, t14, t15, position, _null = null,
        _s57_ = "The provided data was not a vector_graphics binary asset.";
      if (response == null) {
        buffer = new A._ReadBuffer(data);
        if (data.byteLength < 5)
          throw C.wrapException(C.StateError$(_s57_));
        if (buffer.getUint32$0(0) !== 8924514)
          throw C.wrapException(C.StateError$(_s57_));
        if (buffer.getUint8$0(0) !== 1)
          throw C.wrapException(C.StateError$("The provided data does not match the currently supported version."));
      } else {
        t1 = response._vector_graphics_codec$_buffer;
        t1.toString;
        buffer = t1;
      }
      $label0$1:
        for (t1 = buffer.data, t2 = listener._textPositions, t3 = listener._patterns, t4 = listener._textConfig, t5 = type$.JSArray_TextDecoration, t6 = type$.List_int, t7 = listener._listener0$_canvas, t8 = listener._paths, t9 = listener._clipViewbox, t10 = listener._paints, readImage = false; t11 = buffer._vector_graphics_codec$_position, t11 < t1.byteLength;) {
          buffer._vector_graphics_codec$_position = t11 + 1;
          type = t1.getUint8(t11);
          switch (type) {
            case 48:
              if (readImage)
                return new A.DecodeResponse(false, buffer);
              continue $label0$1;
            case 39:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value3 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value4 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              colors = buffer.getInt32List$1(value4);
              value4 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onLinearGradient$8(value0, value1, value2, value3, colors, buffer.getFloat32List$1(value4), t1.getUint8(buffer._vector_graphics_codec$_position++), value);
              continue $label0$1;
            case 40:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              if (t1.getUint8(t11) === 1) {
                value3 = t1.getFloat32(buffer._vector_graphics_codec$_position, true);
                t11 = buffer._vector_graphics_codec$_position += 4;
                value4 = t1.getFloat32(t11, true);
                buffer._vector_graphics_codec$_position += 4;
                focalY = value4;
                focalX = value3;
              } else {
                focalY = _null;
                focalX = focalY;
              }
              value3 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              colors = buffer.getInt32List$1(value3);
              value3 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onRadialGradient$10(value0, value1, value2, focalX, focalY, colors, buffer.getFloat32List$1(value3), buffer.getTransform$0(), t1.getUint8(buffer._vector_graphics_codec$_position++), value);
              continue $label0$1;
            case 28:
              value = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              blendMode = t1.getUint8(t11);
              value0 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value1 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onPaintObject$9$blendMode$color$id$paintStyle$shaderId$strokeCap$strokeJoin$strokeMiterLimit$strokeWidth(blendMode, value, value0, 0, value1 === 65535 ? _null : value1, _null, _null, _null, _null);
              continue $label0$1;
            case 29:
              value = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              strokeCap = t1.getUint8(t11);
              strokeJoin = t1.getUint8(buffer._vector_graphics_codec$_position++);
              blendMode = t1.getUint8(buffer._vector_graphics_codec$_position++);
              value0 = t1.getFloat32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value3 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onPaintObject$9$blendMode$color$id$paintStyle$shaderId$strokeCap$strokeJoin$strokeMiterLimit$strokeWidth(blendMode, value, value2, 1, value3 === 65535 ? _null : value3, strokeCap, strokeJoin, value0, value1);
              continue $label0$1;
            case 27:
              this._readPath$3$half(buffer, listener, false);
              continue $label0$1;
            case 52:
              this._readPath$3$half(buffer, listener, true);
              continue $label0$1;
            case 30:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value1 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onDrawPath$3(value, value0, value1 === 65535 ? _null : value1);
              continue $label0$1;
            case 31:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              vertices = buffer.getFloat32List$1(value0);
              value0 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              indices = value0 !== 0 ? buffer.getUint16List$1(value0) : _null;
              t11 = value !== 65535 ? value : _null;
              vertexData = $.$get$_renderer().createVerticesRaw$5$colors$indices$textureCoordinates(D.VertexMode_0, vertices, _null, indices, _null);
              if (t11 != null) {
                if (t11 >>> 0 !== t11 || t11 >= t10.length)
                  return C.ioore(t10, t11);
                paint = t10[t11];
              } else
                paint = _null;
              t7.drawVertices$3(vertexData, D.BlendMode_3, paint == null ? $.$get$FlutterVectorGraphicsListener__emptyPaint() : paint);
              vertexData.dispose$0();
              continue $label0$1;
            case 38:
              t11 = listener._currentPattern;
              if (t11 != null) {
                patternId = t11._patternId;
                t12 = t3.$index(0, patternId).recorder;
                t13 = t3.$index(0, patternId).canvas;
                t13.toString;
                t12.toString;
                patternListener = A.FlutterVectorGraphicsListener$_(0, listener._pictureFactory, t12, t13, listener._listener0$_locale, listener._listener0$_textDirection, t9, _null);
                t13 = t11._listener0$_width;
                t12 = t11._listener0$_height;
                patternListener._listener0$_size = new C.Size(t13, t12);
                pictureInfo = patternListener.toPicture$0();
                listener._currentPattern = null;
                image = pictureInfo.picture.toImageSync$2(D.JSNumber_methods.round$0(t13), D.JSNumber_methods.round$0(t12));
                t11 = t11._listener0$_transform;
                pattern = $.$get$_renderer().createImageShader$5(image, D.TileMode_1, D.TileMode_1, t11, _null);
                t3.$index(0, patternId).shader = pattern;
                image.dispose$0();
              } else
                t7.restore$0(0);
              continue $label0$1;
            case 37:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              if (!(value < t10.length))
                return C.ioore(t10, value);
              t7.saveLayer$2(_null, t10[value]);
              continue $label0$1;
            case 41:
              value = t1.getFloat32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value0 = t1.getFloat32(t11, true);
              buffer._vector_graphics_codec$_position += 4;
              if (t9)
                t7.clipRect$1(new C.Rect(0, 0, 0 + value, 0 + value0));
              listener._listener0$_size = new C.Size(value, value0);
              continue $label0$1;
            case 42:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              t7.save$0(0);
              if (!(value < t8.length))
                return C.ioore(t8, value);
              t7.clipPath$1(0, t8[value]);
              continue $label0$1;
            case 43:
              t7.saveLayer$2(_null, $.$get$FlutterVectorGraphicsListener__grayscaleDstInPaint());
              continue $label0$1;
            case 45:
              t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              fontWeight = t1.getUint8(t11);
              decoration = t1.getUint8(buffer._vector_graphics_codec$_position++);
              decorationStyle = t1.getUint8(buffer._vector_graphics_codec$_position++);
              value1 = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              if (value2 > 0) {
                list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._vector_graphics_codec$_position, value2);
                buffer._vector_graphics_codec$_position += value2;
                t6._as(list);
                fontFamily = new C._Utf8Decoder(false)._convertGeneral$4(list, 0, _null, true);
              } else
                fontFamily = _null;
              value2 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._vector_graphics_codec$_position, value2);
              buffer._vector_graphics_codec$_position += value2;
              t6._as(list);
              text = new C._Utf8Decoder(false)._convertGeneral$4(list, 0, _null, true);
              decorations = C._setArrayType([], t5);
              if ((decoration & 1) !== 0)
                D.JSArray_methods.add$1(decorations, D.TextDecoration_1);
              if ((decoration & 2) !== 0)
                D.JSArray_methods.add$1(decorations, D.TextDecoration_2);
              if ((decoration & 4) !== 0)
                D.JSArray_methods.add$1(decorations, D.TextDecoration_4);
              if (!(fontWeight >= 0 && fontWeight < 9))
                return C.ioore(D.List_qq2, fontWeight);
              t11 = D.List_qq2[fontWeight];
              t12 = A.TextDecoration_TextDecoration$combine(decorations);
              if (!(decorationStyle >= 0 && decorationStyle < 5))
                return C.ioore(B.List_U9x, decorationStyle);
              D.JSArray_methods.add$1(t4, new A._TextConfig(text, fontFamily, value0, value, t11, t12, B.List_U9x[decorationStyle], C.Color$(value1)));
              continue $label0$1;
            case 44:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              fillId = value0 === 65535 ? _null : value0;
              value0 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              strokeId = value0 === 65535 ? _null : value0;
              C.assertHelper(fillId != null || strokeId != null);
              value0 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onDrawText$4(value, fillId, strokeId, value0 === 65535 ? _null : value0);
              continue $label0$1;
            case 46:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              buffer._vector_graphics_codec$_position = t11 + 1;
              format = t1.getUint8(t11);
              value0 = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 4;
              list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._vector_graphics_codec$_position, value0);
              buffer._vector_graphics_codec$_position += value0;
              listener.onImage$3(value, format, list);
              readImage = true;
              continue $label0$1;
            case 47:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value3 = t1.getFloat32(t11, true);
              buffer._vector_graphics_codec$_position += 4;
              listener.onDrawImage$6(value, value0, value1, value2, value3, buffer.getTransform$0());
              continue $label0$1;
            case 49:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value3 = t1.getFloat32(t11, true);
              buffer._vector_graphics_codec$_position += 4;
              transform = buffer.getTransform$0();
              transform.toString;
              C.assertHelper(listener._currentPattern == null);
              listener._currentPattern = new A._PatternConfig(value, value2, value3, transform);
              t11 = $.$get$_renderer();
              recorder = t11.createPictureRecorder$0();
              newCanvas = t11.createCanvas$2(recorder, _null);
              newCanvas.clipRect$1(new C.Rect(value0, value1, value0 + value2, value1 + value3));
              t11 = new A._PatternState();
              t11.recorder = recorder;
              t11.canvas = newCanvas;
              t3.$indexSet(0, value, t11);
              continue $label0$1;
            case 50:
              t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              t11 = t1.getUint8(t11);
              transform = buffer.getTransform$0();
              t12 = isNaN(value) ? _null : value;
              t13 = isNaN(value0) ? _null : value0;
              t14 = isNaN(value1) ? _null : value1;
              t15 = isNaN(value2) ? _null : value2;
              D.JSArray_methods.add$1(t2, new A._TextPosition(t12, t13, t14, t15, t11 !== 0, transform));
              continue $label0$1;
            case 51:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              if (!(value < t2.length))
                return C.ioore(t2, value);
              position = t2[value];
              if (position.reset)
                listener._textPositionY = listener._accumulatedTextPositionX = 0;
              t11 = position.x;
              if (t11 != null)
                listener._accumulatedTextPositionX = t11;
              t11 = position.y;
              if (t11 != null)
                listener._textPositionY = t11;
              t11 = position.dx;
              if (t11 != null) {
                t12 = listener._accumulatedTextPositionX;
                listener._accumulatedTextPositionX = (t12 == null ? 0 : t12) + t11;
              }
              t11 = position.dy;
              if (t11 != null)
                listener._textPositionY += t11;
              listener._textTransform = position.transform;
              continue $label0$1;
            default:
              throw C.wrapException(C.StateError$("Unknown type tag " + type));
          }
        }
      return B.DecodeResponse_true_null;
    },
    decode$2(_, data, listener) {
      return this.decode$3$response(0, data, listener, null);
    },
    writeDrawPath$4(buffer, pathId, paintId, patternId) {
      buffer._checkPhase$1(B._CurrentSection_7);
      buffer._addCommandsTag$0();
      C.assertHelper(!buffer._vector_graphics_codec$_isDone);
      D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 30);
      buffer._putUint16$1(pathId);
      buffer._putUint16$1(paintId);
      buffer._putUint16$1(patternId == null ? 65535 : patternId);
    },
    _decodeFromHalfPrecision$1(list) {
      var i, t2,
        t1 = list.length,
        output = new Float32Array(t1),
        buffer = new DataView(new ArrayBuffer(8));
      for (i = 0; i < t1; ++i) {
        buffer.setUint16(0, list[i], false);
        t2 = A.toDouble(buffer);
        if (!(i < t1))
          return C.ioore(output, i);
        output[i] = t2;
      }
      return output;
    },
    _readPath$3$half(buffer, listener, half) {
      var t1, path, t2, i, j, t3, t4, t5, t6, t7, t8,
        fillType = buffer.getUint8$0(0),
        id = buffer.getUint16$0(0),
        tagLength = buffer.getUint32$0(0),
        tags = buffer.getUint8List$1(tagLength),
        pointLength = buffer.getUint32$0(0),
        points = half ? this._decodeFromHalfPrecision$1(buffer.getUint16List$1(pointLength)) : buffer.getFloat32List$1(pointLength);
      C.assertHelper(listener._currentPath == null);
      t1 = listener._paths;
      if (C.assertTest(t1.length === id))
        C.assertThrow("Expected Id to be " + id);
      path = $.$get$_renderer().createPath$0();
      if (!(fillType >= 0 && fillType < 2))
        return C.ioore(B.List_PathFillType_0_PathFillType_1, fillType);
      path.set$fillType(B.List_PathFillType_0_PathFillType_1[fillType]);
      D.JSArray_methods.add$1(t1, path);
      listener._currentPath = path;
      $label0$1:
        for (t1 = tags.length, t2 = points.length, i = 0, j = 0; i < tagLength; ++i) {
          if (!(i < t1))
            return C.ioore(tags, i);
          switch (tags[i]) {
            case 0:
              if (!(j < t2))
                return C.ioore(points, j);
              t3 = points[j];
              t4 = j + 1;
              if (!(t4 < t2))
                return C.ioore(points, t4);
              t4 = points[t4];
              listener._currentPath.moveTo$2(0, t3, t4);
              j += 2;
              continue $label0$1;
            case 1:
              if (!(j < t2))
                return C.ioore(points, j);
              t3 = points[j];
              t4 = j + 1;
              if (!(t4 < t2))
                return C.ioore(points, t4);
              t4 = points[t4];
              listener._currentPath.lineTo$2(0, t3, t4);
              j += 2;
              continue $label0$1;
            case 2:
              if (!(j < t2))
                return C.ioore(points, j);
              t3 = points[j];
              t4 = j + 1;
              if (!(t4 < t2))
                return C.ioore(points, t4);
              t4 = points[t4];
              t5 = j + 2;
              if (!(t5 < t2))
                return C.ioore(points, t5);
              t5 = points[t5];
              t6 = j + 3;
              if (!(t6 < t2))
                return C.ioore(points, t6);
              t6 = points[t6];
              t7 = j + 4;
              if (!(t7 < t2))
                return C.ioore(points, t7);
              t7 = points[t7];
              t8 = j + 5;
              if (!(t8 < t2))
                return C.ioore(points, t8);
              t8 = points[t8];
              listener._currentPath.cubicTo$6(t3, t4, t5, t6, t7, t8);
              j += 6;
              continue $label0$1;
            case 3:
              listener._currentPath.close$0(0);
              continue $label0$1;
            default:
              C.assertHelper(false);
          }
        }
      listener._currentPath = null;
    }
  };
  A.VectorGraphicsCodecListener.prototype = {};
  A._CurrentSection.prototype = {
    _enumToString$0() {
      return "_CurrentSection." + this._name;
    }
  };
  A.VectorGraphicsBuffer.prototype = {
    _addCommandsTag$0() {
      var _this = this;
      if (_this._addedCommandTag)
        return;
      C.assertHelper(!_this._vector_graphics_codec$_isDone);
      D.JSArray_methods.add$1(_this._vector_graphics_codec$_buffer, 48);
      _this._addedCommandTag = true;
    },
    _checkPhase$1(expected) {
      var $name;
      if (this._decodePhase.index > expected.index) {
        $name = expected._name;
        if (0 >= $name.length)
          return C.ioore($name, 0);
        throw C.wrapException(C.StateError$(D.JSString_methods.toUpperCase$0($name[0]) + D.JSString_methods.substring$1($name, 1) + " must be encoded together (current phase is " + this._decodePhase._name + ")."));
      }
      this._decodePhase = expected;
    },
    _writeTransform$1(transform) {
      var t2, _this = this,
        t1 = !_this._vector_graphics_codec$_isDone;
      if (transform != null) {
        t2 = transform.length;
        C.assertHelper(t1);
        D.JSArray_methods.add$1(_this._vector_graphics_codec$_buffer, t2);
        C.assertHelper(!_this._vector_graphics_codec$_isDone);
        _this._vector_graphics_codec$_alignTo$1(8);
        D.JSArray_methods.addAll$1(_this._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(transform), transform.byteOffset, 8 * t2));
      } else {
        C.assertHelper(t1);
        D.JSArray_methods.add$1(_this._vector_graphics_codec$_buffer, 0);
      }
    },
    _putUint16$1(value) {
      var t1, t2, _this = this;
      C.assertHelper(!_this._vector_graphics_codec$_isDone);
      t1 = _this._vector_graphics_codec$_eightBytes;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 10);
      t1.setUint16(0, value, true);
      t1 = _this._vector_graphics_codec$_buffer;
      t2 = _this.__VectorGraphicsBuffer__eightBytesAsList_A;
      t2 === $ && C.throwLateFieldNI("_eightBytesAsList");
      D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(2, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
    },
    _putUint32$1(value) {
      var t1, t2, _this = this;
      C.assertHelper(!_this._vector_graphics_codec$_isDone);
      t1 = _this._vector_graphics_codec$_eightBytes;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 11);
      t1.setUint32(0, value, true);
      t1 = _this._vector_graphics_codec$_buffer;
      t2 = _this.__VectorGraphicsBuffer__eightBytesAsList_A;
      t2 === $ && C.throwLateFieldNI("_eightBytesAsList");
      D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(4, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
    },
    _putInt32List$1(list) {
      C.assertHelper(!this._vector_graphics_codec$_isDone);
      this._vector_graphics_codec$_alignTo$1(4);
      D.JSArray_methods.addAll$1(this._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeInt32List_methods.get$buffer(list), list.byteOffset, 4 * list.length));
    },
    _putFloat32$1(value) {
      var t1, t2, _this = this;
      C.assertHelper(!_this._vector_graphics_codec$_isDone);
      t1 = _this._vector_graphics_codec$_eightBytes;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 12);
      t1.setFloat32(0, value, true);
      t1 = _this._vector_graphics_codec$_buffer;
      t2 = _this.__VectorGraphicsBuffer__eightBytesAsList_A;
      t2 === $ && C.throwLateFieldNI("_eightBytesAsList");
      D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(4, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
    },
    _putFloat32List$1(list) {
      C.assertHelper(!this._vector_graphics_codec$_isDone);
      this._vector_graphics_codec$_alignTo$1(4);
      D.JSArray_methods.addAll$1(this._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat32List_methods.get$buffer(list), list.byteOffset, 4 * list.length));
    },
    _vector_graphics_codec$_alignTo$1(alignment) {
      var t1, mod, t2;
      C.assertHelper(!this._vector_graphics_codec$_isDone);
      t1 = this._vector_graphics_codec$_buffer;
      mod = D.JSInt_methods.$mod(t1.length, alignment);
      if (mod !== 0) {
        t2 = $.$get$VectorGraphicsBuffer__zeroBuffer();
        D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(alignment - mod, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
      }
    },
    set$_vector_graphics_codec$_buffer(_buffer) {
      this._vector_graphics_codec$_buffer = type$.List_int._as(_buffer);
    }
  };
  A._ReadBuffer.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this._vector_graphics_codec$_position++);
    },
    getUint16$0(_) {
      var value = this.data.getUint16(this._vector_graphics_codec$_position, true);
      this._vector_graphics_codec$_position += 2;
      return value;
    },
    getUint32$0(_) {
      var value = this.data.getUint32(this._vector_graphics_codec$_position, true);
      this._vector_graphics_codec$_position += 4;
      return value;
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + this._vector_graphics_codec$_position, $length);
      this._vector_graphics_codec$_position += $length;
      return list;
    },
    getUint16List$1($length) {
      var t1, list, _this = this;
      _this._vector_graphics_codec$_alignTo$1(2);
      t1 = _this.data;
      list = J.asUint16List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, $length);
      _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 2 * $length;
      return list;
    },
    getInt32List$1($length) {
      var t1, list, _this = this;
      _this._vector_graphics_codec$_alignTo$1(4);
      t1 = _this.data;
      list = J.asInt32List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, $length);
      _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 4 * $length;
      return list;
    },
    getFloat32List$1($length) {
      var t1, list, _this = this;
      _this._vector_graphics_codec$_alignTo$1(4);
      t1 = _this.data;
      list = J.asFloat32List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, $length);
      _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 4 * $length;
      return list;
    },
    _vector_graphics_codec$_alignTo$1(alignment) {
      var t1 = this._vector_graphics_codec$_position,
        mod = D.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._vector_graphics_codec$_position = t1 + (alignment - mod);
    },
    getTransform$0() {
      var t1, list, _this = this,
        transformLength = _this.getUint8$0(0);
      if (transformLength > 0) {
        C.assertHelper(transformLength === 16);
        _this._vector_graphics_codec$_alignTo$1(8);
        t1 = _this.data;
        list = J.asFloat64List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, transformLength);
        _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 8 * transformLength;
        return list;
      }
      return null;
    }
  };
  A.DrawCommandBuilder.prototype = {
    _getOrGenerateId$1$2(object, map, $T) {
      $T._as(object);
      $T._eval$1("Map<0,int>")._as(map);
      return map.putIfAbsent$2(0, object, new A.DrawCommandBuilder__getOrGenerateId_closure(map));
    },
    addSaveLayer$1(paint) {
      var _null = null;
      D.JSArray_methods.add$1(this._commands, new A.DrawCommand(_null, B.DrawCommandType_2, _null, this._getOrGenerateId$1$2(paint, this._draw_command_builder$_paints, type$.Paint), _null, _null));
    },
    addPath$4(_, path, paint, debugString, patternId) {
      var pathId, paintId, t1, _this = this;
      if (path._path$_commands.length === 0)
        return;
      pathId = _this._getOrGenerateId$1$2(path, _this._draw_command_builder$_paths, type$.Path);
      paintId = _this._getOrGenerateId$1$2(paint, _this._draw_command_builder$_paints, type$.Paint);
      t1 = patternId != null ? _this._draw_command_builder$_patterns.$index(0, patternId) : null;
      D.JSArray_methods.add$1(_this._commands, new A.DrawCommand(debugString, B.DrawCommandType_0, pathId, paintId, t1, null));
    }
  };
  A.Point.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Point && other.x === this.x && other.y === this.y;
    },
    $mul(_, multiplicand) {
      return new A.Point(this.x * multiplicand, this.y * multiplicand);
    },
    $add(_, other) {
      type$.Point._as(other);
      return new A.Point(this.x + other.x, this.y + other.y);
    },
    toString$0(_) {
      return "Point(" + C.S(this.x) + ", " + C.S(this.y) + ")";
    }
  };
  A.Rect0.prototype = {
    get$isEmpty(_) {
      var _this = this;
      return _this.right - _this.left === 0 || _this.bottom - _this.top === 0;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.left, _this.top, _this.right, _this.bottom, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.Rect0 && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    toString$0(_) {
      var _this = this;
      return "Rect.fromLTRB(" + C.S(_this.left) + ", " + C.S(_this.top) + ", " + C.S(_this.right) + ", " + C.S(_this.bottom) + ")";
    }
  };
  A.ImageData.prototype = {};
  A.DrawImageData.prototype = {};
  A.AffineMatrix.prototype = {
    scaleStrokeWidth$1(width) {
      var t1, t2, xScale, yScale, _this = this;
      if (width != null)
        t1 = _this.a === 1 && _this.d === 1;
      else
        t1 = true;
      if (t1)
        return width;
      t1 = _this.a;
      t2 = _this.c;
      xScale = Math.sqrt(t1 * t1 + t2 * t2);
      t2 = _this.b;
      t1 = _this.d;
      yScale = Math.sqrt(t2 * t2 + t1 * t1);
      if (typeof width !== "number")
        return C.iae(width);
      return (xScale + yScale) / 2 * width;
    },
    rotated$1(radians) {
      var cosAngle, sinAngle, t1, t2, t3, t4, t5, _this = this;
      if (radians === 0)
        return _this;
      cosAngle = Math.cos(radians);
      sinAngle = Math.sin(radians);
      t1 = _this.a;
      t2 = _this.c;
      t3 = _this.b;
      t4 = _this.d;
      t5 = -sinAngle;
      return A.AffineMatrix$(t1 * cosAngle + t2 * sinAngle, t3 * cosAngle + t4 * sinAngle, t1 * t5 + t2 * cosAngle, t3 * t5 + t4 * cosAngle, _this.e, _this.f, _this._m4_10);
    },
    get$encodableInRect() {
      var _this = this,
        t1 = _this.a;
      return t1 > 0 && _this.b === 0 && _this.c === 0 && _this.d > 0 && _this._m4_10 === t1;
    },
    scaled$2(x, y) {
      var _this = this;
      if (x === 1 && y === 1)
        return _this;
      return A.AffineMatrix$(_this.a * x, _this.b * x, _this.c * y, _this.d * y, _this.e, _this.f, _this._m4_10 * x);
    },
    translated$2(x, y) {
      var _this = this,
        t1 = _this.a,
        t2 = _this.b,
        t3 = _this.c,
        t4 = _this.d;
      return A.AffineMatrix$(t1, t2, t3, t4, t1 * x + t3 * y + _this.e, t2 * x + t4 * y + _this.f, _this._m4_10);
    },
    multiplied$1(other) {
      var _this = this,
        t1 = _this.a,
        t2 = other.a,
        t3 = _this.c,
        t4 = other.b,
        t5 = _this.b,
        t6 = _this.d,
        t7 = other.c,
        t8 = other.d,
        t9 = other.e,
        t10 = other.f;
      return A.AffineMatrix$(t1 * t2 + t3 * t4, t5 * t2 + t6 * t4, t1 * t7 + t3 * t8, t5 * t7 + t6 * t8, t1 * t9 + t3 * t10 + _this.e, t5 * t9 + t6 * t10 + _this.f, _this._m4_10 * other._m4_10);
    },
    transformPoint$1(_, point) {
      var _this = this,
        t1 = point.x,
        t2 = point.y;
      return new A.Point(_this.a * t1 + _this.c * t2 + _this.e, _this.b * t1 + _this.d * t2 + _this.f);
    },
    toMatrix4$0() {
      var _this = this;
      return new Float64Array(C._ensureNativeList(C._setArrayType([_this.a, _this.b, 0, 0, _this.c, _this.d, 0, 0, 0, 0, _this._m4_10, 0, _this.e, _this.f, 0, 1], type$.JSArray_double)));
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.a, _this.b, _this.c, _this.d, _this.e, _this.f, _this._m4_10, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.AffineMatrix && other.a === _this.a && other.b === _this.b && other.c === _this.c && other.d === _this.d && other.e === _this.e && other.f === _this.f && other._m4_10 === _this._m4_10;
    },
    toString$0(_) {
      var _this = this;
      return "[ " + C.S(_this.a) + ", " + C.S(_this.c) + ", " + C.S(_this.e) + " ]\n[ " + C.S(_this.b) + ", " + C.S(_this.d) + ", " + C.S(_this.f) + " ]\n[ 0.0, 0.0, 1.0 ] // _m4_10 = " + C.S(_this._m4_10) + "\n";
    }
  };
  A.PathFillType0.prototype = {
    _enumToString$0() {
      return "PathFillType." + this._name;
    }
  };
  A.PathCommandType.prototype = {
    _enumToString$0() {
      return "PathCommandType." + this._name;
    }
  };
  A.PathCommand.prototype = {};
  A.LineToCommand.prototype = {
    transformed$1(matrix) {
      var xy = matrix.transformPoint$1(0, new A.Point(this.x, this.y));
      return new A.LineToCommand(xy.x, xy.y, B.PathCommandType_1);
    },
    get$hashCode(_) {
      return C.Object_hash(this.type, this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.LineToCommand && other.x === this.x && other.y === this.y;
    },
    toString$0(_) {
      return "LineToCommand(" + C.S(this.x) + ", " + C.S(this.y) + ")";
    }
  };
  A.MoveToCommand.prototype = {
    transformed$1(matrix) {
      var xy = matrix.transformPoint$1(0, new A.Point(this.x, this.y));
      return new A.MoveToCommand(xy.x, xy.y, B.PathCommandType_0);
    },
    get$hashCode(_) {
      return C.Object_hash(this.type, this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.MoveToCommand && other.x === this.x && other.y === this.y;
    },
    toString$0(_) {
      return "MoveToCommand(" + C.S(this.x) + ", " + C.S(this.y) + ")";
    }
  };
  A.CubicToCommand.prototype = {
    computeLength$1(start) {
      var _this = this;
      return new A.CubicToCommand_computeLength_compute().call$5(start, new A.Point(_this.x1, _this.y1), new A.Point(_this.x2, _this.y2), new A.Point(_this.x3, _this.y3), 0);
    },
    transformed$1(matrix) {
      var _this = this,
        xy1 = matrix.transformPoint$1(0, new A.Point(_this.x1, _this.y1)),
        xy2 = matrix.transformPoint$1(0, new A.Point(_this.x2, _this.y2)),
        xy3 = matrix.transformPoint$1(0, new A.Point(_this.x3, _this.y3));
      return new A.CubicToCommand(xy1.x, xy1.y, xy2.x, xy2.y, xy3.x, xy3.y, B.PathCommandType_2);
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.type, _this.x1, _this.y1, _this.x2, _this.y2, _this.x3, _this.y3, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.CubicToCommand && other.x1 === _this.x1 && other.y1 === _this.y1 && other.x2 === _this.x2 && other.y2 === _this.y2 && other.x3 === _this.x3 && other.y3 === _this.y3;
    },
    toString$0(_) {
      var _this = this;
      return "CubicToCommand(" + C.S(_this.x1) + ", " + C.S(_this.y1) + ", " + C.S(_this.x2) + ", " + C.S(_this.y2) + ", " + C.S(_this.x3) + ", " + C.S(_this.y3) + ")";
    }
  };
  A.CloseCommand.prototype = {
    transformed$1(matrix) {
      return this;
    },
    get$hashCode(_) {
      return C.Primitives_objectHashCode(this.type);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.CloseCommand;
    },
    toString$0(_) {
      return "CloseCommand()";
    }
  };
  A.PathBuilder.prototype = {
    addOval$1(oval) {
      var t5, t6, t7, t8, t9, t10, t11,
        t1 = oval.left,
        t2 = (oval.right - t1) * 0.5,
        t3 = oval.top,
        t4 = (oval.bottom - t3) * 0.5;
      t1 += t2;
      t3 += t4;
      t5 = 0.551915024494 * t2;
      t6 = 0.551915024494 * t4;
      t7 = t3 - t4;
      t8 = this._path$_commands;
      D.JSArray_methods.add$1(t8, new A.MoveToCommand(t1, t7, B.PathCommandType_0));
      t9 = t1 + t5;
      t10 = t1 + t2;
      t11 = t3 - t6;
      D.JSArray_methods.add$1(t8, new A.CubicToCommand(t9, t7, t10, t11, t10, t3, B.PathCommandType_2));
      t6 = t3 + t6;
      t4 = t3 + t4;
      D.JSArray_methods.add$1(t8, new A.CubicToCommand(t10, t6, t9, t4, t1, t4, B.PathCommandType_2));
      t5 = t1 - t5;
      t2 = t1 - t2;
      D.JSArray_methods.add$1(t8, new A.CubicToCommand(t5, t4, t2, t6, t2, t3, B.PathCommandType_2));
      D.JSArray_methods.add$1(t8, new A.CubicToCommand(t2, t11, t5, t7, t1, t7, B.PathCommandType_2));
      D.JSArray_methods.add$1(t8, B.CloseCommand_PathCommandType_3);
      return this;
    },
    addRect$1(rect) {
      var t4,
        t1 = rect.left,
        t2 = rect.top,
        t3 = this._path$_commands;
      D.JSArray_methods.add$1(t3, new A.MoveToCommand(t1, t2, B.PathCommandType_0));
      t4 = rect.right;
      D.JSArray_methods.add$1(t3, new A.LineToCommand(t4, t2, B.PathCommandType_1));
      t2 = rect.bottom;
      D.JSArray_methods.add$1(t3, new A.LineToCommand(t4, t2, B.PathCommandType_1));
      D.JSArray_methods.add$1(t3, new A.LineToCommand(t1, t2, B.PathCommandType_1));
      D.JSArray_methods.add$1(t3, B.CloseCommand_PathCommandType_3);
      return this;
    },
    addRRect$3(rect, rx, ry) {
      var magicRadius, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13;
      if (rx === 0 && ry === 0)
        return this.addRect$1(rect);
      magicRadius = new A.Point(rx, ry).$mul(0, 0.551915024494);
      t1 = rect.left;
      t2 = t1 + rx;
      t3 = rect.top;
      t4 = this._path$_commands;
      D.JSArray_methods.add$1(t4, new A.MoveToCommand(t2, t3, B.PathCommandType_0));
      t5 = t1 + (rect.right - t1);
      t6 = t5 - rx;
      D.JSArray_methods.add$1(t4, new A.LineToCommand(t6, t3, B.PathCommandType_1));
      t7 = magicRadius.x;
      t8 = t6 + t7;
      t9 = t3 + ry;
      t10 = magicRadius.y;
      t11 = t9 - t10;
      D.JSArray_methods.add$1(t4, new A.CubicToCommand(t8, t3, t5, t11, t5, t9, B.PathCommandType_2));
      t12 = t3 + (rect.bottom - t3);
      t13 = t12 - ry;
      D.JSArray_methods.add$1(t4, new A.LineToCommand(t5, t13, B.PathCommandType_1));
      t10 = t13 + t10;
      D.JSArray_methods.add$1(t4, new A.CubicToCommand(t5, t10, t8, t12, t6, t12, B.PathCommandType_2));
      D.JSArray_methods.add$1(t4, new A.LineToCommand(t2, t12, B.PathCommandType_1));
      t7 = t2 - t7;
      D.JSArray_methods.add$1(t4, new A.CubicToCommand(t7, t12, t1, t10, t1, t13, B.PathCommandType_2));
      D.JSArray_methods.add$1(t4, new A.LineToCommand(t1, t9, B.PathCommandType_1));
      D.JSArray_methods.add$1(t4, new A.CubicToCommand(t1, t11, t7, t3, t2, t3, B.PathCommandType_2));
      D.JSArray_methods.add$1(t4, B.CloseCommand_PathCommandType_3);
      return this;
    },
    toPath$1$reset(reset) {
      var path,
        t1 = this._path$_commands,
        t2 = this.__PathBuilder_fillType_A;
      t2 === $ && C.throwLateFieldNI("fillType");
      path = A.Path$(t1, t2);
      if (reset)
        D.JSArray_methods.clear$0(t1);
      return path;
    },
    toPath$0() {
      return this.toPath$1$reset(true);
    },
    $isPathProxy: 1
  };
  A.Path.prototype = {
    withFillType$1(type) {
      if (type === this.fillType)
        return this;
      return A.Path$(this._path$_commands, type);
    },
    get$isEmpty(_) {
      return this._path$_commands.length === 0;
    },
    transformed$1(matrix) {
      var t1, t2, _i,
        commands = C._setArrayType([], type$.JSArray_PathCommand);
      for (t1 = this._path$_commands, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        D.JSArray_methods.add$1(commands, t1[_i].transformed$1(matrix));
      return A.Path$(commands, this.fillType);
    },
    get$hashCode(_) {
      return C.Object_hash(C.Object_hashAll(this._path$_commands), this.fillType, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Path && A.listEquals1(this._path$_commands, other._path$_commands, type$.PathCommand) && other.fillType === this.fillType;
    },
    dashed$1(intervals) {
      type$.List_double._as(intervals);
      if (intervals.length === 0)
        return this;
      return A._PathDasher$(intervals).dash$1(this);
    },
    bounds$0(_) {
      var t3, t4, t5, t6, largestY, largestX, smallestY, smallestX, _i, command, t7, t8, _i0, pair, t9, _179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 = 17976931348623157e292, __179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 = -17976931348623157e292,
        t1 = this._path$_commands,
        t2 = t1.length;
      if (t2 === 0)
        return B.Rect_0_0_0_00;
      for (t3 = type$.JSArray_double, t4 = type$.CubicToCommand, t5 = type$.LineToCommand, t6 = type$.MoveToCommand, largestY = __179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368, largestX = largestY, smallestY = _179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368, smallestX = smallestY, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        command = t1[_i];
        switch (command.type.index) {
          case 0:
            t6._as(command);
            t7 = command.x;
            smallestX = Math.min(t7, smallestX);
            t8 = command.y;
            smallestY = Math.min(t8, smallestY);
            largestX = Math.max(t7, largestX);
            largestY = Math.max(t8, largestY);
            break;
          case 1:
            t5._as(command);
            t7 = command.x;
            smallestX = Math.min(t7, smallestX);
            t8 = command.y;
            smallestY = Math.min(t8, smallestY);
            largestX = Math.max(t7, largestX);
            largestY = Math.max(t8, largestY);
            break;
          case 2:
            t4._as(command);
            for (t7 = [C._setArrayType([command.x1, command.y1], t3), C._setArrayType([command.x2, command.y2], t3), C._setArrayType([command.x3, command.y3], t3)], _i0 = 0; _i0 < 3; ++_i0) {
              pair = t7[_i0];
              t8 = pair.length;
              if (0 >= t8)
                return C.ioore(pair, 0);
              t9 = pair[0];
              smallestX = Math.min(t9, smallestX);
              if (1 >= t8)
                return C.ioore(pair, 1);
              t8 = pair[1];
              smallestY = Math.min(t8, smallestY);
              largestX = Math.max(t9, largestX);
              largestY = Math.max(t8, largestY);
            }
            break;
          case 3:
            break;
        }
      }
      return new A.Rect0(smallestX, smallestY, largestX, largestY);
    },
    toString$0(_) {
      var t2,
        t1 = this._path$_commands;
      t1 = t1.length !== 0 ? "Path(" + ("\n  commands: <PathCommand>" + C.S(t1) + ",") : "Path(";
      t2 = this.fillType;
      t1 = (t2 !== B.PathFillType_00 ? t1 + ("\n  fillType: " + t2.toString$0(0) + ",") : t1) + "\n)";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._CircularIntervalList.prototype = {
    get$next(_) {
      var _this = this,
        t1 = _this._path$_idx,
        t2 = _this._vals,
        t3 = t2.length;
      if (t1 >= t3)
        t1 = _this._path$_idx = 0;
      _this._path$_idx = t1 + 1;
      if (!(t1 < t3))
        return C.ioore(t2, t1);
      return t2[t1];
    }
  };
  A._PathDasher.prototype = {
    get$length(_) {
      var t1 = this.___PathDasher_length_A;
      t1 === $ && C.throwLateFieldNI("length");
      return t1;
    },
    _dashLineTo$1(target) {
      var t1, t2, t3, t4, t5, t6, t7, t, t8, t9, t10, t11, _this = this,
        distance = A.Point_distance(_this.currentPoint, target);
      if (!(distance <= 0)) {
        t1 = _this.___PathDasher_length_A;
        t1 === $ && C.throwLateFieldNI("length");
        t1 = t1 <= 0;
      } else
        t1 = true;
      if (t1)
        return;
      t1 = _this._dashedCommands;
      t2 = target.x;
      t3 = isFinite(t2);
      t4 = target.y;
      t5 = isFinite(t4);
      t6 = _this._path$_intervals;
      while (true) {
        t7 = _this.___PathDasher_length_A;
        t7 === $ && C.throwLateFieldNI("length");
        if (!(distance >= t7))
          break;
        t = t7 / distance;
        t7 = _this.currentPoint;
        t8 = t7.x;
        C.assertHelper(isFinite(t8));
        C.assertHelper(t3);
        t9 = t <= 1;
        C.assertHelper(t9);
        t10 = t >= 0;
        C.assertHelper(t10);
        t11 = 1 - t;
        t7 = t7.y;
        C.assertHelper(isFinite(t7));
        C.assertHelper(t5);
        C.assertHelper(t9);
        C.assertHelper(t10);
        _this.currentPoint = new A.Point(t11 * t8 + t * t2, t11 * t7 + t * t4);
        _this.___PathDasher_length_A = t6.get$next(0);
        t7 = _this.___PathDasher_draw_A;
        t7 === $ && C.throwLateFieldNI("draw");
        t8 = _this.currentPoint;
        t9 = t8.x;
        t8 = t8.y;
        if (t7)
          D.JSArray_methods.add$1(t1, new A.LineToCommand(t9, t8, B.PathCommandType_1));
        else
          D.JSArray_methods.add$1(t1, new A.MoveToCommand(t9, t8, B.PathCommandType_0));
        distance = A.Point_distance(_this.currentPoint, target);
        _this.___PathDasher_draw_A = !_this.___PathDasher_draw_A;
      }
      if (distance > 0) {
        _this.___PathDasher_length_A = t7 - distance;
        t3 = _this.___PathDasher_draw_A;
        t3 === $ && C.throwLateFieldNI("draw");
        if (t3)
          D.JSArray_methods.add$1(t1, new A.LineToCommand(t2, t4, B.PathCommandType_1));
      }
      _this.currentPoint = target;
    },
    _dashCubicTo$1(cubic) {
      var t3, dividedPoints, t4, list, t5, _this = this, _null = null,
        distance = cubic.computeLength$1(_this.currentPoint),
        t1 = _this._path$_intervals,
        t2 = _this._dashedCommands;
      while (true) {
        t3 = _this.___PathDasher_length_A;
        t3 === $ && C.throwLateFieldNI("length");
        if (!(distance >= t3))
          break;
        dividedPoints = A.CubicToCommand_subdivide(_this.currentPoint, new A.Point(cubic.x1, cubic.y1), new A.Point(cubic.x2, cubic.y2), new A.Point(cubic.x3, cubic.y3), t3 / distance);
        t3 = _this.currentPoint = dividedPoints[3];
        t4 = _this.___PathDasher_draw_A;
        t4 === $ && C.throwLateFieldNI("draw");
        if (t4) {
          t3 = C._arrayInstanceType(dividedPoints);
          t4 = new C.SubListIterable(dividedPoints, 1, _null, t3._eval$1("SubListIterable<1>"));
          t4.SubListIterable$3(dividedPoints, 1, _null, t3._precomputed1);
          list = t4.take$1(0, 3).toList$0(0);
          C.assertHelper(list.length === 3);
          t4 = list.length;
          if (0 >= t4)
            return C.ioore(list, 0);
          t3 = list[0];
          if (1 >= t4)
            return C.ioore(list, 1);
          t5 = list[1];
          if (2 >= t4)
            return C.ioore(list, 2);
          t4 = list[2];
          D.JSArray_methods.add$1(t2, new A.CubicToCommand(t3.x, t3.y, t5.x, t5.y, t4.x, t4.y, B.PathCommandType_2));
        } else
          D.JSArray_methods.add$1(t2, new A.MoveToCommand(t3.x, t3.y, B.PathCommandType_0));
        t3 = C._arrayInstanceType(dividedPoints);
        t4 = new C.SubListIterable(dividedPoints, 4, _null, t3._eval$1("SubListIterable<1>"));
        t4.SubListIterable$3(dividedPoints, 4, _null, t3._precomputed1);
        list = t4.take$1(0, 3).toList$0(0);
        C.assertHelper(list.length === 3);
        t4 = list.length;
        if (0 >= t4)
          return C.ioore(list, 0);
        t3 = list[0];
        if (1 >= t4)
          return C.ioore(list, 1);
        t5 = list[1];
        if (2 >= t4)
          return C.ioore(list, 2);
        t4 = list[2];
        cubic = new A.CubicToCommand(t3.x, t3.y, t5.x, t5.y, t4.x, t4.y, B.PathCommandType_2);
        _this.___PathDasher_length_A = t1.get$next(0);
        distance = cubic.computeLength$1(_this.currentPoint);
        _this.___PathDasher_draw_A = !_this.___PathDasher_draw_A;
      }
      _this.___PathDasher_length_A = t3 - distance;
      _this.currentPoint = new A.Point(cubic.x3, cubic.y3);
      t1 = _this.___PathDasher_draw_A;
      t1 === $ && C.throwLateFieldNI("draw");
      if (t1)
        D.JSArray_methods.add$1(t2, cubic);
    },
    dash$1(path) {
      var t1, t2, t3, t4, t5, t6, _i, command, _this = this;
      _this.___PathDasher_length_A = _this._path$_intervals.get$next(0);
      _this.___PathDasher_draw_A = true;
      for (t1 = path._path$_commands, t2 = t1.length, t3 = type$.CubicToCommand, t4 = type$.LineToCommand, t5 = type$.MoveToCommand, t6 = _this._dashedCommands, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        command = t1[_i];
        switch (command.type.index) {
          case 0:
            t5._as(command);
            _this.currentSubpathPoint = _this.currentPoint = new A.Point(command.x, command.y);
            D.JSArray_methods.add$1(t6, command);
            break;
          case 1:
            t4._as(command);
            _this._dashLineTo$1(new A.Point(command.x, command.y));
            break;
          case 2:
            _this._dashCubicTo$1(t3._as(command));
            break;
          case 3:
            _this._dashLineTo$1(_this.currentSubpathPoint);
            _this.currentPoint = _this.currentSubpathPoint;
            break;
        }
      }
      return A.Path$(t6, path.fillType);
    }
  };
  A.PatternData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.x, _this.y, _this.width, _this.height, _this.transform, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.PatternData && other.x === _this.x && other.y === _this.y && other.width === _this.width && other.height === _this.height && other.transform.$eq(0, _this.transform);
    }
  };
  A.ImageFormat.prototype = {
    _enumToString$0() {
      return "ImageFormat." + this._name;
    }
  };
  A.ImageSizeData.prototype = {};
  A.PngImageSizeData.prototype = {};
  A.GifImageSizeData.prototype = {};
  A.JpegImageSizeData.prototype = {};
  A.WebPImageSizeData.prototype = {};
  A.BmpImageSizeData.prototype = {};
  A.Color0.prototype = {
    toString$0(_) {
      return "Color(0x" + D.JSString_methods.padLeft$2(D.JSInt_methods.toRadixString$1(this.value, 16), 8, "0") + ")";
    },
    get$hashCode(_) {
      return this.value;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Color0 && other.value === this.value;
    }
  };
  A.Gradient0.prototype = {};
  A.LinearGradient0.prototype = {
    applyBounds$2(bounds, transform) {
      var t2, accumulatedTransform, t3, t4, t5, _this = this,
        t1 = _this.offsets;
      C.assertHelper(t1 != null);
      t2 = _this.colors;
      C.assertHelper(t2 != null);
      accumulatedTransform = _this.transform;
      if (accumulatedTransform == null)
        accumulatedTransform = B.AffineMatrix_qrl;
      t3 = _this.unitMode;
      switch ((t3 == null ? B.GradientUnitMode_0 : t3).index) {
        case 0:
          t3 = bounds.left;
          t4 = bounds.top;
          accumulatedTransform = transform.translated$2(t3, t4).scaled$2(bounds.right - t3, bounds.bottom - t4).multiplied$1(accumulatedTransform);
          break;
        case 1:
          accumulatedTransform = transform.multiplied$1(accumulatedTransform);
          break;
        case 2:
          break;
      }
      t3 = accumulatedTransform.transformPoint$1(0, _this.from);
      t4 = accumulatedTransform.transformPoint$1(0, _this.to);
      t5 = _this.tileMode;
      if (t5 == null)
        t5 = B.TileMode_00;
      return new A.LinearGradient0(t3, t4, _this.id, t2, t1, t5, B.GradientUnitMode_2, null);
    },
    applyProperties$1(ref) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.colors;
      if (t1 == null)
        t1 = ref.colors;
      t2 = _this.offsets;
      if (t2 == null)
        t2 = ref.offsets;
      t3 = _this.tileMode;
      if (t3 == null)
        t3 = ref.tileMode;
      t4 = _this.unitMode;
      if (t4 == null)
        t4 = ref.unitMode;
      t5 = _this.transform;
      if (t5 == null)
        t5 = ref.transform;
      return new A.LinearGradient0(_this.from, _this.to, _this.id, t1, t2, t3, t4, t5);
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.colors;
      t1 = C.Object_hashAll(t1 == null ? C._setArrayType([], type$.JSArray_Color_2) : t1);
      t2 = _this.offsets;
      return C.Object_hash(_this.id, _this.from, _this.to, t1, C.Object_hashAll(t2 == null ? C._setArrayType([], type$.JSArray_double) : t2), _this.tileMode, _this.unitMode, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.LinearGradient0 && other.id === _this.id && other.from.$eq(0, _this.from) && other.to.$eq(0, _this.to) && A.listEquals1(other.colors, _this.colors, type$.Color_3) && A.listEquals1(other.offsets, _this.offsets, type$.double) && other.tileMode == _this.tileMode && other.unitMode == _this.unitMode;
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.from.toString$0(0),
        t2 = _this.to.toString$0(0),
        t3 = C.S(_this.colors),
        t4 = C.S(_this.offsets),
        t5 = C.S(_this.tileMode),
        t6 = _this.transform;
      t6 = t6 == null ? "" : "Float64List.fromList(" + C.S(t6.toMatrix4$0()) + "), ";
      return "LinearGradient(id: '" + _this.id + "', from: " + t1 + ", to: " + t2 + ", colors: <Color>" + t3 + ", offsets: <double>" + t4 + ", tileMode: " + t5 + ", " + t6 + "unitMode: " + C.S(_this.unitMode) + ")";
    }
  };
  A.GradientUnitMode.prototype = {
    _enumToString$0() {
      return "GradientUnitMode." + this._name;
    }
  };
  A.RadialGradient.prototype = {
    applyBounds$2(bounds, transform) {
      var t2, accumulatedTransform, t3, t4, _this = this,
        t1 = _this.offsets;
      C.assertHelper(t1 != null);
      t2 = _this.colors;
      C.assertHelper(t2 != null);
      accumulatedTransform = _this.transform;
      if (accumulatedTransform == null)
        accumulatedTransform = B.AffineMatrix_qrl;
      t3 = _this.unitMode;
      switch ((t3 == null ? B.GradientUnitMode_0 : t3).index) {
        case 0:
          t3 = bounds.left;
          t4 = bounds.top;
          accumulatedTransform = transform.translated$2(t3, t4).scaled$2(bounds.right - t3, bounds.bottom - t4).multiplied$1(accumulatedTransform);
          break;
        case 1:
          accumulatedTransform = transform.multiplied$1(accumulatedTransform);
          break;
        case 2:
          break;
      }
      t3 = _this.tileMode;
      if (t3 == null)
        t3 = B.TileMode_00;
      return new A.RadialGradient(_this.center, _this.radius, _this.focalPoint, _this.id, t2, t1, t3, B.GradientUnitMode_2, accumulatedTransform);
    },
    applyProperties$1(ref) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.colors;
      if (t1 == null)
        t1 = ref.colors;
      t2 = _this.offsets;
      if (t2 == null)
        t2 = ref.offsets;
      t3 = _this.transform;
      if (t3 == null)
        t3 = ref.transform;
      t4 = _this.unitMode;
      if (t4 == null)
        t4 = ref.unitMode;
      t5 = _this.tileMode;
      if (t5 == null)
        t5 = ref.tileMode;
      return new A.RadialGradient(_this.center, _this.radius, _this.focalPoint, _this.id, t1, t2, t5, t4, t3);
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.colors;
      t1 = C.Object_hashAll(t1 == null ? C._setArrayType([], type$.JSArray_Color_2) : t1);
      t2 = _this.offsets;
      return C.Object_hash(_this.id, _this.center, _this.radius, t1, C.Object_hashAll(t2 == null ? C._setArrayType([], type$.JSArray_double) : t2), _this.tileMode, _this.transform, _this.focalPoint, _this.unitMode, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.RadialGradient && other.id === _this.id && other.center.$eq(0, _this.center) && other.radius === _this.radius && J.$eq$(other.focalPoint, _this.focalPoint) && A.listEquals1(other.colors, _this.colors, type$.Color_3) && A.listEquals1(other.offsets, _this.offsets, type$.double) && J.$eq$(other.transform, _this.transform) && other.tileMode == _this.tileMode && other.unitMode == _this.unitMode;
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.center.toString$0(0),
        t2 = C.S(_this.colors),
        t3 = C.S(_this.offsets),
        t4 = C.S(_this.tileMode),
        t5 = _this.transform;
      t5 = t5 == null ? "" : "transform: Float64List.fromList(<double>" + C.S(t5.toMatrix4$0()) + ") ,";
      return "RadialGradient(id: '" + _this.id + "', center: " + t1 + ", radius: " + C.S(_this.radius) + ", colors: <Color>" + t2 + ", offsets: <double>" + t3 + ", tileMode: " + t4 + ", " + t5 + "focalPoint: " + C.S(_this.focalPoint) + ", unitMode: " + C.S(_this.unitMode) + ")";
    }
  };
  A.Paint.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.blendMode, this.stroke, this.fill, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Paint && other.blendMode === this.blendMode && J.$eq$(other.stroke, this.stroke) && J.$eq$(other.fill, this.fill);
    },
    toString$0(_) {
      var t1 = "Paint(blendMode: " + this.blendMode.toString$0(0),
        t2 = this.stroke;
      if (t2 != null)
        t1 += ", stroke: " + t2.toString$0(0);
      t2 = this.fill;
      t1 = (t2 != null ? t1 + (", fill: " + t2.toString$0(0)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Stroke.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(B.PaintingStyle_10, _this.color, _this.shader, _this.cap, _this.join, _this.miterLimit, _this.width, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (other instanceof A.Stroke) {
        t1 = other.color;
        t1 = _this.color.value === t1.value && J.$eq$(other.shader, _this.shader) && other.cap == _this.cap && other.join == _this.join && other.miterLimit == _this.miterLimit && other.width == _this.width;
      } else
        t1 = false;
      return t1;
    },
    toString$0(_) {
      var _this = this,
        t1 = "Stroke(color: " + _this.color.toString$0(0),
        t2 = _this.shader;
      if (t2 != null)
        t1 += ", shader: " + t2.toString$0(0);
      t2 = _this.cap;
      if (t2 != null)
        t1 += ", cap: " + t2.toString$0(0);
      t2 = _this.join;
      if (t2 != null)
        t1 += ", join: " + t2.toString$0(0);
      t2 = _this.miterLimit;
      if (t2 != null)
        t1 += ", miterLimit: " + C.S(t2);
      t2 = _this.width;
      t1 = (t2 != null ? t1 + (", width: " + C.S(t2)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Fill.prototype = {
    get$hashCode(_) {
      return C.Object_hash(B.PaintingStyle_00, this.color, this.shader, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A.Fill) {
        t1 = other.color;
        t1 = this.color.value === t1.value && J.$eq$(other.shader, this.shader);
      } else
        t1 = false;
      return t1;
    },
    toString$0(_) {
      var t1 = "Fill(color: " + this.color.toString$0(0),
        t2 = this.shader;
      t1 = (t2 != null ? t1 + (", shader: " + t2.toString$0(0)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.BlendMode0.prototype = {
    _enumToString$0() {
      return "BlendMode." + this._name;
    }
  };
  A.PaintingStyle0.prototype = {
    _enumToString$0() {
      return "PaintingStyle." + this._name;
    }
  };
  A.StrokeCap0.prototype = {
    _enumToString$0() {
      return "StrokeCap." + this._name;
    }
  };
  A.StrokeJoin0.prototype = {
    _enumToString$0() {
      return "StrokeJoin." + this._name;
    }
  };
  A.TileMode0.prototype = {
    _enumToString$0() {
      return "TileMode." + this._name;
    }
  };
  A.TextPosition0.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.x, _this.y, _this.dx, _this.dy, _this.reset, _this.transform, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.TextPosition0 && other.x == _this.x && other.y == _this.y && other.dx == _this.dx && other.dy == _this.dy && other.reset === _this.reset && J.$eq$(other.transform, _this.transform);
    },
    toString$0(_) {
      var _this = this,
        t1 = "" + ("TextPosition(reset: " + _this.reset),
        t2 = _this.x;
      if (t2 != null)
        t1 += ", x: " + C.S(t2);
      t2 = _this.y;
      if (t2 != null)
        t1 += ", y: " + C.S(t2);
      t2 = _this.dx;
      if (t2 != null)
        t1 += ", dx: " + C.S(t2);
      t2 = _this.dy;
      if (t2 != null)
        t1 += ", dy: " + C.S(t2);
      t2 = _this.transform;
      t1 = (t2 != null ? t1 + (", transform: " + t2.toString$0(0)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.TextConfig.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.text, _this.xAnchorMultiplier, _this.fontSize, _this.fontFamily, _this.fontWeight, _this.decoration, _this.decorationStyle, _this.decorationColor, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof A.TextConfig)
        if (other.text === _this.text)
          if (other.xAnchorMultiplier === _this.xAnchorMultiplier)
            if (other.fontSize === _this.fontSize)
              if (other.fontFamily == _this.fontFamily)
                if (other.fontWeight === _this.fontWeight) {
                  t2 = other.decoration;
                  if (_this.decoration.mask === t2.mask)
                    if (other.decorationStyle === _this.decorationStyle)
                      t1 = _this.decorationColor.value === other.decorationColor.value;
                }
      return t1;
    },
    toString$0(_) {
      var _this = this;
      return "TextConfig('" + _this.text + "', " + C.S(_this.xAnchorMultiplier) + ", '" + C.S(_this.fontFamily) + "', " + _this.fontWeight.toString$0(0) + ", " + C.S(_this.fontSize) + ", " + _this.decoration.toString$0(0) + ", " + _this.decorationStyle.toString$0(0) + ", " + _this.decorationColor.toString$0(0) + ",)";
    }
  };
  A.FontWeight0.prototype = {
    _enumToString$0() {
      return "FontWeight." + this._name;
    }
  };
  A.TextDecorationStyle0.prototype = {
    _enumToString$0() {
      return "TextDecorationStyle." + this._name;
    }
  };
  A.TextDecoration0.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.TextDecoration0 && other.mask === this.mask;
    },
    get$hashCode(_) {
      return D.JSInt_methods.get$hashCode(this.mask);
    },
    toString$0(_) {
      var values,
        t1 = this.mask;
      if (t1 === 0)
        return "TextDecoration.none";
      values = C._setArrayType([], type$.JSArray_String);
      if ((t1 & 1) !== 0)
        D.JSArray_methods.add$1(values, "underline");
      if ((t1 & 2) !== 0)
        D.JSArray_methods.add$1(values, "overline");
      if ((t1 & 4) !== 0)
        D.JSArray_methods.add$1(values, "lineThrough");
      t1 = values.length;
      if (t1 === 1) {
        if (0 >= t1)
          return C.ioore(values, 0);
        return "TextDecoration." + values[0];
      }
      return "TextDecoration.combine([" + D.JSArray_methods.join$1(values, ", ") + "])";
    }
  };
  A.Node0.prototype = {
    applyAttributes$2$replace(newAttributes, replace) {
      return this;
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  A._EmptyNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitEmptyNode$2(this, $V._as(data));
    }
  };
  A.TransformableNode.prototype = {
    concatTransform$1(currentTransform) {
      var t1 = this.transform;
      if (t1.$eq(0, B.AffineMatrix_qrl))
        return currentTransform;
      return currentTransform.multiplied$1(t1);
    }
  };
  A.AttributedNode.prototype = {};
  A.ViewportNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitViewportNode$2(this, $V._as(data));
    }
  };
  A.ParentNode.prototype = {
    addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(child, clipId, clipResolver, maskId, maskResolver, patternId, patternResolver) {
      var t1, wrappedChild;
      type$.List_Path_Function_String._as(clipResolver);
      t1 = type$.nullable_AttributedNode_Function_String;
      t1._as(maskResolver);
      t1._as(patternResolver);
      wrappedChild = clipId != null ? new A.ClipNode(clipResolver, clipId, child, child.attributes.transform) : child;
      if (maskId != null) {
        t1 = child.attributes;
        wrappedChild = new A.MaskNode(maskId, wrappedChild, t1.blendMode, maskResolver, t1.transform);
      }
      if (patternId != null)
        wrappedChild = new A.PatternNode(patternId, wrappedChild, patternResolver, child.attributes.transform);
      D.JSArray_methods.add$1(this._node$_children, wrappedChild);
    },
    addChild$4$clipResolver$maskResolver$patternResolver(child, clipResolver, maskResolver, patternResolver) {
      return this.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(child, null, clipResolver, null, maskResolver, null, patternResolver);
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = A.ParentNode$(this.attributes.applyParent$1(newAttributes), null, this.transform);
      D.JSArray_methods.addAll$1(t1._node$_children, this._node$_children);
      return t1;
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    createLayerPaint$0() {
      var t4, needsLayer, _null = null,
        t1 = this.attributes,
        t2 = t1.fill,
        t3 = t2 == null,
        fillOpacity = t3 ? _null : t2.opacity;
      t1 = t1.blendMode;
      t4 = t1 == null;
      if (t4)
        needsLayer = fillOpacity != null && fillOpacity !== 1 && fillOpacity !== 0;
      else
        needsLayer = true;
      if (needsLayer) {
        t2 = t3 ? _null : t2.toFill$2(B.Rect_NUV0, this.transform);
        if (t2 == null) {
          t2 = A.Color$fromRGBO0(0, 0, 0, fillOpacity == null ? 1 : fillOpacity);
          t2 = new A.Fill(t2, _null);
        }
        return new A.Paint(t4 ? B.BlendMode_30 : t1, _null, t2);
      }
      return _null;
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitParentNode$2(this, $V._as(data));
    }
  };
  A.TextPositionNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitTextPositionNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = A.TextPositionNode$(this.attributes.applyParent$1(newAttributes), this.reset);
      D.JSArray_methods.addAll$1(t1._node$_children, this._node$_children);
      return t1;
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  A.SaveLayerNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitSaveLayerNode$2(this, $V._as(data));
    }
  };
  A.ClipNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitClipNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this;
      return new A.ClipNode(_this.resolver, _this.clipId, _this.child.applyAttributes$2$replace(newAttributes, replace), _this.transform);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  A.MaskNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitMaskNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this;
      return new A.MaskNode(_this.maskId, _this.child.applyAttributes$2$replace(newAttributes, replace), _this.blendMode, _this.resolver, _this.transform);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  A.PathNode.prototype = {
    computePaint$2(bounds, transform) {
      var fill,
        t1 = this.attributes,
        t2 = t1.stroke,
        stroke = t2 == null ? null : t2.toStroke$2(bounds, transform);
      t2 = t1.fill;
      fill = t2 == null ? null : t2.toFill$3$defaultColor(bounds, transform, B.Color_4278190080);
      if (fill == null && stroke == null)
        return null;
      t1 = t1.blendMode;
      return new A.Paint(t1 == null ? B.BlendMode_30 : t1, stroke, fill);
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = this.attributes;
      t1 = replace ? newAttributes.applyParent$2$transformOverride(t1, this.transform) : t1.applyParent$1(newAttributes);
      return A.PathNode$(this.path, t1);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitPathNode$2(this, $V._as(data));
    }
  };
  A.DeferredNode.prototype = {
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this,
        t1 = _this.attributes;
      t1 = replace ? newAttributes.applyParent$2$transformOverride(t1, _this.transform) : t1.applyParent$1(newAttributes);
      return A.DeferredNode$(t1, _this.refId, _this.resolver);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitDeferredNode$2(this, $V._as(data));
    }
  };
  A.TextNode.prototype = {
    computePaint$2(bounds, transform) {
      var stroke,
        t1 = this.attributes,
        t2 = t1.fill,
        fill = t2 == null ? null : t2.toFill$3$defaultColor(bounds, transform, B.Color_4278190080);
      t2 = t1.stroke;
      stroke = t2 == null ? null : t2.toStroke$2(bounds, transform);
      if (fill == null && stroke == null)
        return null;
      t1 = t1.blendMode;
      return new A.Paint(t1 == null ? B.BlendMode_30 : t1, stroke, fill);
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = this.attributes,
        resolvedAttributes = replace ? newAttributes.applyParent$2$transformOverride(t1, this.transform) : t1.applyParent$1(newAttributes);
      return A.TextNode$(this.text, resolvedAttributes);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitTextNode$2(this, $V._as(data));
    }
  };
  A.ImageNode.prototype = {
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this,
        t1 = _this.attributes;
      t1 = replace ? newAttributes.applyParent$2$transformOverride(t1, _this.transform) : t1.applyParent$1(newAttributes);
      return A.ImageNode$(_this.data, _this.format, t1);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitImageNode$2(this, $V._as(data));
    }
  };
  A.PatternNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitPatternNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this;
      return new A.PatternNode(_this.patternId, _this.child.applyAttributes$2$replace(newAttributes, replace), _this.resolver, _this.transform);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  A._SvgGroupTuple.prototype = {};
  A.SvgParser.prototype = {
    _discardSubtree$0() {
      var t1, t2, _this = this,
        subtreeStartDepth = _this.depth;
      for (t1 = _this._eventIterator; t1.moveNext$0();) {
        t2 = t1._iterator$_current;
        t2.toString;
        if (t2 instanceof A.XmlStartElementEvent && !t2.isSelfClosing)
          ++_this.depth;
        else if (t2 instanceof A.XmlEndElementEvent)
          C.assertHelper(--_this.depth >= 0);
        _this._currentAttributes = B.SvgAttributes_781;
        _this._currentStartElement = null;
        if (_this.depth < subtreeStartDepth)
          return;
      }
    },
    _readSubtree$0() {
      return new C._SyncStarIterable(this._readSubtree$body$SvgParser(), type$._SyncStarIterable_XmlEvent);
    },
    _readSubtree$body$SvgParser() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 2, $async$errorStack = [], t1, t2, t3, t4, t5, color, id, t6, opacity, color0, rawX, rawY, rawDx, rawDy, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, isSelfClosing, subtreeStartDepth;
        return function $async$_readSubtree$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                subtreeStartDepth = $async$self.depth;
                t1 = $async$self._eventIterator, t2 = type$.Map_String_String, t3 = $async$self.theme.currentColor;
              case 3:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                t4 = t1._iterator$_current;
                t4.toString;
                if (t4 instanceof A.XmlStartElementEvent) {
                  t5 = t2._as($async$self._createAttributeMap$1(t4.attributes));
                  if (!(t5.$index(0, "display") !== "none" && t5.$index(0, "visibility") !== "hidden")) {
                    if (!t4.isSelfClosing) {
                      ++$async$self.depth;
                      $async$self._discardSubtree$0();
                    }
                    // goto for condition
                    $async$goto = 3;
                    break;
                  }
                  $async$self._currentStartElement = t4;
                  color = $async$self.depth === 0 ? t3 : null;
                  id = t5.$index(0, "id");
                  t6 = A.parseDouble(t5.$index(0, "opacity"), false);
                  opacity = t6 == null ? null : D.JSNumber_methods.clamp$2(t6, 0, 1);
                  color0 = $async$self.parseColor$3$attributeName$id(t5.$index(0, "color"), "color", id);
                  color = color0 == null ? color : color0;
                  rawX = t5.$index(0, "x");
                  rawY = t5.$index(0, "y");
                  rawDx = t5.$index(0, "dx");
                  rawDy = t5.$index(0, "dy");
                  t6 = A.DoubleOrPercentage_fromString(rawX);
                  t7 = A.DoubleOrPercentage_fromString(rawY);
                  t8 = A.DoubleOrPercentage_fromString(rawDx);
                  t9 = A.DoubleOrPercentage_fromString(rawDy);
                  t10 = t5.$index(0, "href");
                  t11 = t5.$index(0, "color");
                  t11 = (t11 == null ? null : t11.toLowerCase()) === "none" ? B.ColorOrNone_true_null : new A.ColorOrNone(false, color);
                  t12 = $async$self._parseStrokeAttributes$4(t5, opacity, color, id);
                  t13 = $async$self._parseFillAttributes$4(t5, opacity, color, id);
                  t14 = A.parseRawFillRule(t5.$index(0, "fill-rule"));
                  t15 = A.parseRawFillRule(t5.$index(0, "clip-rule"));
                  t16 = t5.$index(0, "clip-path");
                  t17 = B.Map_imLTu.$index(0, t5.$index(0, "mix-blend-mode"));
                  t18 = A.parseTransform(t5.$index(0, "transform"));
                  if (t18 == null)
                    t18 = B.AffineMatrix_qrl;
                  $async$self._currentAttributes = new A.SvgAttributes(t5, id, t10, t11, t12, t13, t18, t14, t15, t16, t17, t5.$index(0, "font-family"), $async$self.parseFontWeight$1(t5.$index(0, "font-weight")), $async$self.parseFontSize$1(t5.$index(0, "font-size")), $async$self.parseTextDecoration$1(t5.$index(0, "text-decoration")), $async$self.parseTextDecorationStyle$1(t5.$index(0, "text-decoration-style")), $async$self.parseColor$3$attributeName$id(t5.$index(0, "text-decoration-color"), "text-decoration-color", id), null, null, t6, $async$self.parseTextAnchor$1(t5.$index(0, "text-anchor")), t7, t8, t9);
                  ++$async$self.depth;
                  isSelfClosing = t4.isSelfClosing;
                } else
                  isSelfClosing = false;
                $async$goto = 5;
                return $async$iterator._async$_current = t4, 1;
              case 5:
                // after yield
                if (isSelfClosing || t4 instanceof A.XmlEndElementEvent) {
                  C.assertHelper(--$async$self.depth >= 0);
                  $async$self._currentAttributes = B.SvgAttributes_781;
                  $async$self._currentStartElement = null;
                }
                if ($async$self.depth < subtreeStartDepth) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
              case 1:
                // return
                return 0;
              case 2:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    _appendText$1(text) {
      var t1, textHasNonWhitespace, t2, prependSpace, t3, t4, _this = this;
      C.assertHelper(_this.get$_inTextOrTSpan());
      t1 = $.$get$_whitespacePattern();
      C.assertHelper(t1.pattern === "\\s");
      textHasNonWhitespace = D.JSString_methods.trim$0(text) !== "";
      if (_this._currentAttributes.x == null) {
        t2 = _this._lastEndElementEvent;
        t2 = (t2 == null ? null : t2.get$localName(0)) === "tspan" && textHasNonWhitespace;
      } else
        t2 = false;
      prependSpace = t2 || _this._lastTextEndedWithSpace;
      _this._lastTextEndedWithSpace = textHasNonWhitespace && D.JSString_methods.startsWith$2(text, t1, text.length - 1);
      t1 = C.stringReplaceAllUnchecked(text, "\n", "");
      t1 = D.JSString_methods.trim$0(C.stringReplaceAllUnchecked(t1, "\t", " "));
      t2 = $.$get$SvgParser__contiguousSpaceMatcher();
      text = C.stringReplaceAllUnchecked(t1, t2, " ");
      if (text.length === 0)
        return;
      t1 = _this._parentDrawables;
      C.assertHelper(!t1.get$isEmpty(0));
      t1 = t1.get$last(0).drawable;
      t2 = prependSpace ? " " + text : text;
      t3 = _this._definitions;
      t4 = t3.get$getDrawable();
      t1.addChild$4$clipResolver$maskResolver$patternResolver(A.TextNode$(t2, _this._currentAttributes), t3.get$getClipPath(), t4, t4);
    },
    get$_inTextOrTSpan() {
      var t1 = this._parentDrawables;
      if (!t1.get$isEmpty(0))
        t1 = t1.get$last(0).name === "text" || t1.get$last(0).name === "tspan";
      else
        t1 = false;
      return t1;
    },
    _parseTree$0() {
      var t1, t2, t3, t4, parseFunc, t5, _this = this;
      for (t1 = _this._readSubtree$0(), t2 = t1.$ti, t1 = new C._SyncStarIterator(t1._outerHelper(), t2._eval$1("_SyncStarIterator<1>")), t3 = _this._parentDrawables, t2 = t2._precomputed1; t1.moveNext$0();) {
        t4 = t1._async$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 instanceof A.XmlStartElementEvent) {
          if (_this.startElement$1(t4))
            continue;
          parseFunc = B.Map_VVevv.$index(0, t4.name);
          if (parseFunc == null) {
            if (!t4.isSelfClosing)
              _this._discardSubtree$0();
            C.assertHelper(new A.SvgParser__parseTree_closure(_this, t4).call$0());
          } else
            parseFunc.call$2(_this, false);
        } else if (t4 instanceof A.XmlEndElementEvent)
          _this.endElement$1(0, t4);
        else {
          if (!t3.get$isEmpty(0))
            t5 = t3.get$last(0).name === "text" || t3.get$last(0).name === "tspan";
          else
            t5 = false;
          if (t5)
            if (t4 instanceof A.XmlCDATAEvent)
              _this._appendText$1(t4.value);
            else if (t4 instanceof A.XmlRawTextEvent)
              _this._appendText$1(t4.get$value(0));
        }
      }
      if (_this._parser$_root == null)
        throw C.wrapException(C.StateError$("Invalid SVG data"));
      t1 = _this._definitions;
      C.assertHelper(t1._deferredShaders.__js_helper$_length === 0);
      t1._sealed = true;
    },
    attribute$2$def($name, def) {
      var t1 = this._currentAttributes.raw.$index(0, $name);
      return t1 == null ? def : t1;
    },
    attribute$1($name) {
      return this.attribute$2$def($name, null);
    },
    checkForIri$1(drawable) {
      var iri,
        t1 = this._currentAttributes;
      C.assertHelper("#" + C.S(t1.id) !== t1.href);
      iri = "url(#" + C.S(this._currentAttributes.id) + ")";
      if (iri !== "url(#)") {
        this._definitions.addDrawable$2(iri, drawable);
        return true;
      }
      return false;
    },
    addGroup$2($event, drawable) {
      var t1 = this._parentDrawables;
      t1._collection$_add$1(0, t1.$ti._precomputed1._as(new A._SvgGroupTuple($event.name, drawable)));
      this.checkForIri$1(drawable);
    },
    addShape$1($event) {
      var $parent, path, drawable, t1, t2, _this = this,
        pathFunc = B.Map_BvFKH.$index(0, $event.name);
      if (pathFunc == null)
        return false;
      $parent = _this._parentDrawables.get$last(0).drawable;
      path = pathFunc.call$1(_this);
      if (path == null)
        return false;
      drawable = A.PathNode$(path, _this._currentAttributes);
      _this.checkForIri$1(drawable);
      t1 = _this._definitions;
      t2 = t1.get$getDrawable();
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(drawable, _this._currentAttributes.clipPathId, t1.get$getClipPath(), _this.attribute$1("mask"), t2, t1.getPattern$1(_this), t2);
      return true;
    },
    startElement$1($event) {
      if ($event.name === "defs")
        if (!$event.isSelfClosing) {
          this.addGroup$2($event, A.ParentNode$(this._currentAttributes, null, null));
          return true;
        }
      return this.addShape$1($event);
    },
    endElement$1(_, $event) {
      var t1 = this._parentDrawables,
        t2 = $event.name;
      while (true) {
        if (t2 === t1.get$last(0).name)
          t1.get$last(0).toString;
        if (!false)
          break;
        t1.removeLast$0(0);
      }
      if (t2 === t1.get$last(0).name)
        t1.removeLast$0(0);
      this._lastEndElementEvent = $event;
      if (t2 === "text")
        this._lastTextEndedWithSpace = false;
    },
    parseFontSize$1(raw) {
      var ret;
      if (raw == null || raw === "")
        return null;
      ret = A.parseDoubleWithUnits(raw, this.theme, true);
      if (ret != null)
        return ret;
      raw = D.JSString_methods.trim$0(raw.toLowerCase());
      ret = $.SvgParser__kTextSizeMap.$index(0, raw);
      if (ret != null)
        return ret;
      throw C.wrapException(C.StateError$("Could not parse font-size: " + raw));
    },
    parseTextDecoration$1(textDecoration) {
      if (textDecoration == null)
        return null;
      switch (textDecoration) {
        case "none":
          return B.TextDecoration_00;
        case "underline":
          return B.TextDecoration_10;
        case "overline":
          return B.TextDecoration_20;
        case "line-through":
          return B.TextDecoration_40;
      }
      throw C.wrapException(C.UnsupportedError$('Attribute value for text-decoration="' + textDecoration + '" is not supported'));
    },
    parseTextDecorationStyle$1(textDecorationStyle) {
      if (textDecorationStyle == null)
        return null;
      switch (textDecorationStyle) {
        case "solid":
          return B.TextDecorationStyle_0;
        case "dashed":
          return B.TextDecorationStyle_3;
        case "dotted":
          return B.TextDecorationStyle_2;
        case "double":
          return B.TextDecorationStyle_1;
        case "wavy":
          return B.TextDecorationStyle_4;
      }
      throw C.wrapException(C.UnsupportedError$('Attribute value for text-decoration-style="' + textDecorationStyle + '" is not supported'));
    },
    parseTextAnchor$1(raw) {
      switch (raw) {
        case "end":
          return 1;
        case "middle":
          return 0.5;
        case "start":
          return 0;
        case "inherit":
        default:
          return null;
      }
    },
    _parseRawWidthHeight$1(raw) {
      var t1;
      if (raw === "100%" || raw === "")
        return 1 / 0;
      C.assertHelper(new A.SvgParser__parseRawWidthHeight_closure(raw).call$0());
      t1 = A.parseDoubleWithUnits(raw, this.theme, true);
      return t1 == null ? 1 / 0 : t1;
    },
    _parseViewBox$0() {
      var rawWidth, rawHeight, t1, parts, t2, t3, t4, _this = this,
        viewBox = _this.attribute$1("viewBox");
      if (viewBox == null)
        viewBox = "";
      rawWidth = _this.attribute$1("width");
      if (rawWidth == null)
        rawWidth = "";
      rawHeight = _this.attribute$1("height");
      if (rawHeight == null)
        rawHeight = "";
      t1 = viewBox === "";
      if (t1 && rawWidth === "" && rawHeight === "")
        throw C.wrapException(C.StateError$("SVG did not specify dimensions\n\nThe SVG library looks for a `viewBox` or `width` and `height` attribute to determine the viewport boundary of the SVG.  Note that these attributes, as with all SVG attributes, are case sensitive.\nDuring processing, the following attributes were found:\n  " + _this._currentAttributes.raw.toString$0(0)));
      if (t1)
        return new A._Viewport(_this._parseRawWidthHeight$1(rawWidth), _this._parseRawWidthHeight$1(rawHeight), B.AffineMatrix_qrl);
      parts = D.JSString_methods.split$1(viewBox, C.RegExp_RegExp("[ ,]+", true, false, false, false));
      if (parts.length < 4)
        throw C.wrapException(C.StateError$("viewBox element must be 4 elements long"));
      t1 = A.parseDouble(parts[2], false);
      t1.toString;
      if (3 >= parts.length)
        return C.ioore(parts, 3);
      t2 = A.parseDouble(parts[3], false);
      t2.toString;
      if (0 >= parts.length)
        return C.ioore(parts, 0);
      t3 = A.parseDouble(parts[0], false);
      t3.toString;
      if (1 >= parts.length)
        return C.ioore(parts, 1);
      t4 = A.parseDouble(parts[1], false);
      t4.toString;
      return new A._Viewport(t1, t2, B.AffineMatrix_qrl.translated$2(-t3, -t4));
    },
    parseTileMode$0() {
      switch (this.attribute$1("spreadMethod")) {
        case "pad":
          return B.TileMode_00;
        case "repeat":
          return B.TileMode_10;
        case "reflect":
          return B.TileMode_20;
      }
      return null;
    },
    parseGradientUnitMode$0() {
      switch (this.attribute$1("gradientUnits")) {
        case "userSpaceOnUse":
          return B.GradientUnitMode_1;
        case "objectBoundingBox":
          return B.GradientUnitMode_0;
      }
      return null;
    },
    _parseCap$2(raw, definitionPaint) {
      switch (raw) {
        case "butt":
          return B.StrokeCap_00;
        case "round":
          return B.StrokeCap_10;
        case "square":
          return B.StrokeCap_2;
        default:
          return null;
      }
    },
    _parseJoin$2(raw, definitionPaint) {
      switch (raw) {
        case "miter":
          return B.StrokeJoin_00;
        case "bevel":
          return B.StrokeJoin_2;
        case "round":
          return B.StrokeJoin_10;
        default:
          return null;
      }
    },
    _parseDashArray$1(rawDashArray) {
      var parts, doubles, t1, t2, atLeastOneNonZeroDash, _i, t3;
      if (rawDashArray == null || rawDashArray === "")
        return null;
      else if (rawDashArray === "none")
        return D.List_empty26;
      parts = J.split$1$s(rawDashArray, C.RegExp_RegExp("[ ,]+", true, false, false, false));
      doubles = C._setArrayType([], type$.JSArray_double);
      for (t1 = parts.length, t2 = this.theme, atLeastOneNonZeroDash = false, _i = 0; _i < parts.length; parts.length === t1 || (0, C.throwConcurrentModificationError)(parts), ++_i) {
        t3 = A.parseDoubleWithUnits(parts[_i], t2, false);
        t3.toString;
        if (t3 !== 0)
          atLeastOneNonZeroDash = true;
        D.JSArray_methods.add$1(doubles, t3);
      }
      if (doubles.length === 0 || !atLeastOneNonZeroDash)
        return null;
      return doubles;
    },
    applyTransformIfNeeded$2(path, parentTransform) {
      var transform = A.parseTransform(this.attribute$1("transform"));
      if (transform != null)
        return path.transformed$1(transform);
      else
        return path;
    },
    parseFontWeight$1(fontWeight) {
      if (fontWeight == null)
        return null;
      switch (fontWeight) {
        case "normal":
          return B.FontWeight_3;
        case "bold":
          return B.FontWeight_6;
        case "100":
          return B.FontWeight_0;
        case "200":
          return B.FontWeight_1;
        case "300":
          return B.FontWeight_2;
        case "400":
          return B.FontWeight_3;
        case "500":
          return B.FontWeight_4;
        case "600":
          return B.FontWeight_5;
        case "700":
          return B.FontWeight_6;
        case "800":
          return B.FontWeight_7;
        case "900":
          return B.FontWeight_8;
      }
      throw C.wrapException(C.StateError$('Invalid "font-weight": ' + fontWeight));
    },
    parseColor$3$attributeName$id(colorString, attributeName, id) {
      var t1, substituteColor, _this = this,
        parsed = _this._parseColor$2$currentColor(colorString, null);
      if (parsed == null || _this._colorMapper == null)
        return parsed;
      t1 = _this._colorMapper;
      if (t1 == null)
        t1 = type$.ColorMapper._as(t1);
      substituteColor = t1.colorMapper.substitute$4(id, _this._currentStartElement.get$localName(0), attributeName, C.Color$(type$.Color_3._as(parsed).value));
      return new A.Color0(substituteColor.get$value(substituteColor));
    },
    _parseColor$2$currentColor(colorString, currentColor) {
      var t1, r, g, b, color, rawColorElements, t2, t3, rgb, t4, values, hue, luminance, alpha, a, namedColor;
      if (colorString == null || colorString.length === 0)
        return null;
      if (colorString === "none")
        return null;
      if (colorString.toLowerCase() === "currentcolor")
        return this.theme.currentColor;
      t1 = colorString.length;
      if (0 >= t1)
        return C.ioore(colorString, 0);
      if (colorString[0] === "#") {
        if (t1 === 4) {
          if (1 >= t1)
            return C.ioore(colorString, 1);
          r = colorString[1];
          if (2 >= t1)
            return C.ioore(colorString, 2);
          g = colorString[2];
          if (3 >= t1)
            return C.ioore(colorString, 3);
          b = colorString[3];
          colorString = "#" + r + r + g + g + b + b;
        }
        t1 = colorString.length;
        if (t1 === 7 || t1 === 9) {
          color = C.int_parse(D.JSString_methods.substring$2(colorString, 1, 7), 16);
          return new A.Color0((color | (t1 === 9 ? C.int_parse(D.JSString_methods.substring$2(colorString, 7, 9), 16) : 255) << 24) >>> 0);
        }
      }
      if (D.JSString_methods.startsWith$1(colorString.toLowerCase(), "rgba")) {
        t1 = type$.MappedListIterable_String_String;
        rawColorElements = C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(colorString, D.JSString_methods.indexOf$1(colorString, "(") + 1, D.JSString_methods.indexOf$1(colorString, ")")).split(","), type$.JSArray_String), type$.String_Function_String._as(new A.SvgParser__parseColor_closure()), t1), true, t1._eval$1("ListIterable.E"));
        t1 = A.parseDouble(D.JSArray_methods.removeLast$0(rawColorElements), false);
        t1.toString;
        t2 = C._arrayInstanceType(rawColorElements);
        t3 = t2._eval$1("MappedListIterable<1,int>");
        rgb = C.List_List$of(new C.MappedListIterable(rawColorElements, t2._eval$1("int(1)")._as(new A.SvgParser__parseColor_closure0()), t3), true, t3._eval$1("ListIterable.E"));
        t3 = rgb.length;
        if (0 >= t3)
          return C.ioore(rgb, 0);
        t2 = rgb[0];
        if (1 >= t3)
          return C.ioore(rgb, 1);
        t4 = rgb[1];
        if (2 >= t3)
          return C.ioore(rgb, 2);
        return A.Color$fromRGBO0(t2, t4, rgb[2], t1);
      }
      if (D.JSString_methods.startsWith$1(colorString.toLowerCase(), "hsl")) {
        t1 = type$.MappedListIterable_String_int;
        values = C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(colorString, D.JSString_methods.indexOf$1(colorString, "(") + 1, D.JSString_methods.indexOf$1(colorString, ")")).split(","), type$.JSArray_String), type$.int_Function_String._as(new A.SvgParser__parseColor_closure1()), t1), true, t1._eval$1("ListIterable.E"));
        t1 = values.length;
        if (0 >= t1)
          return C.ioore(values, 0);
        hue = D.JSNumber_methods.$mod(values[0] / 360, 1);
        if (1 >= t1)
          return C.ioore(values, 1);
        t2 = values[1];
        if (2 >= t1)
          return C.ioore(values, 2);
        luminance = values[2] / 100;
        alpha = t1 > 3 ? values[3] : 255;
        rgb = C._setArrayType([0, 0, 0], type$.JSArray_double);
        if (hue < 0.16666666666666666) {
          D.JSArray_methods.$indexSet(rgb, 0, 1);
          D.JSArray_methods.$indexSet(rgb, 1, hue * 6);
        } else if (hue < 0.3333333333333333) {
          D.JSArray_methods.$indexSet(rgb, 0, 2 - hue * 6);
          D.JSArray_methods.$indexSet(rgb, 1, 1);
        } else if (hue < 0.5) {
          D.JSArray_methods.$indexSet(rgb, 1, 1);
          D.JSArray_methods.$indexSet(rgb, 2, hue * 6 - 2);
        } else if (hue < 0.6666666666666666) {
          D.JSArray_methods.$indexSet(rgb, 1, 4 - hue * 6);
          D.JSArray_methods.$indexSet(rgb, 2, 1);
        } else {
          t1 = hue * 6;
          if (hue < 0.8333333333333334) {
            D.JSArray_methods.$indexSet(rgb, 0, t1 - 4);
            D.JSArray_methods.$indexSet(rgb, 2, 1);
          } else {
            D.JSArray_methods.$indexSet(rgb, 0, 1);
            D.JSArray_methods.$indexSet(rgb, 2, 6 - t1);
          }
        }
        t1 = type$.MappedListIterable_double_double;
        rgb = C.List_List$of(new C.MappedListIterable(rgb, type$.double_Function_double._as(new A.SvgParser__parseColor_closure2(t2 / 100)), t1), true, t1._eval$1("ListIterable.E"));
        t1 = C._arrayInstanceType(rgb);
        t2 = t1._eval$1("double(1)");
        t1 = t1._eval$1("MappedListIterable<1,double>");
        rgb = luminance < 0.5 ? C.List_List$of(new C.MappedListIterable(rgb, t2._as(new A.SvgParser__parseColor_closure3(luminance)), t1), true, t1._eval$1("ListIterable.E")) : C.List_List$of(new C.MappedListIterable(rgb, t2._as(new A.SvgParser__parseColor_closure4(luminance)), t1), true, t1._eval$1("ListIterable.E"));
        t1 = C._arrayInstanceType(rgb);
        t2 = t1._eval$1("MappedListIterable<1,double>");
        rgb = C.List_List$of(new C.MappedListIterable(rgb, t1._eval$1("double(1)")._as(new A.SvgParser__parseColor_closure5()), t2), true, t2._eval$1("ListIterable.E"));
        t2 = rgb.length;
        if (0 >= t2)
          return C.ioore(rgb, 0);
        t1 = D.JSNumber_methods.round$0(rgb[0]);
        if (1 >= t2)
          return C.ioore(rgb, 1);
        t3 = D.JSNumber_methods.round$0(rgb[1]);
        if (2 >= t2)
          return C.ioore(rgb, 2);
        return A.Color$fromARGB0(alpha, t1, t3, D.JSNumber_methods.round$0(rgb[2]));
      }
      if (D.JSString_methods.startsWith$1(colorString.toLowerCase(), "rgb")) {
        t1 = type$.MappedListIterable_String_int;
        rgb = C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(colorString, D.JSString_methods.indexOf$1(colorString, "(") + 1, D.JSString_methods.indexOf$1(colorString, ")")).split(","), type$.JSArray_String), type$.int_Function_String._as(new A.SvgParser__parseColor_closure6()), t1), true, t1._eval$1("ListIterable.E"));
        t1 = rgb.length;
        a = t1 > 3 ? rgb[3] : 255;
        if (0 >= t1)
          return C.ioore(rgb, 0);
        t2 = rgb[0];
        if (1 >= t1)
          return C.ioore(rgb, 1);
        t3 = rgb[1];
        if (2 >= t1)
          return C.ioore(rgb, 2);
        return A.Color$fromARGB0(a, t2, t3, rgb[2]);
      }
      namedColor = B.Map_Ymznx.$index(0, colorString);
      if (namedColor != null)
        return namedColor;
      return null;
    },
    _createAttributeMap$1(attributes) {
      var t2, value, index, t3, _i, style, styleParts, attributeValue,
        t1 = type$.String,
        attributeMap = C.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t1 = J.get$iterator$ax(type$.List_XmlEventAttribute._as(attributes)); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        value = D.JSString_methods.trim$0(t2.value);
        t2 = t2.name;
        index = D.JSString_methods.indexOf$1(t2, ":");
        t3 = index > 0;
        if ((t3 ? D.JSString_methods.substring$1(t2, index + 1) : t2) === "style")
          for (t2 = value.split(";"), t3 = t2.length, _i = 0; _i < t3; ++_i) {
            style = t2[_i];
            if (style.length === 0)
              continue;
            styleParts = style.split(":");
            if (1 >= styleParts.length)
              return C.ioore(styleParts, 1);
            attributeValue = D.JSString_methods.trim$0(styleParts[1]);
            if (attributeValue === "inherit")
              continue;
            attributeMap.$indexSet(0, D.JSString_methods.trim$0(styleParts[0]), attributeValue);
          }
        else if (value !== "inherit")
          attributeMap.$indexSet(0, t3 ? D.JSString_methods.substring$1(t2, index + 1) : t2, value);
      }
      return attributeMap;
    },
    _parseStrokeAttributes$4(attributeMap, uniformOpacity, currentColor, id) {
      var rawStroke, rawStrokeOpacity, t1, opacity, rawStrokeCap, rawLineJoin, rawMiterLimit, rawStrokeWidth, rawStrokeDashArray, rawStrokeDashOffset, t2, anyStrokeAttribute, hasPattern, shaderId, strokeColor, t3, _this = this, _null = null;
      type$.Map_String_String._as(attributeMap);
      rawStroke = attributeMap.$index(0, "stroke");
      rawStrokeOpacity = attributeMap.$index(0, "stroke-opacity");
      if (rawStrokeOpacity != null) {
        t1 = A.parseDouble(rawStrokeOpacity, false);
        t1.toString;
        opacity = D.JSNumber_methods.clamp$2(t1, 0, 1);
      } else
        opacity = _null;
      if (uniformOpacity != null)
        opacity = opacity == null ? uniformOpacity : opacity * uniformOpacity;
      rawStrokeCap = attributeMap.$index(0, "stroke-linecap");
      rawLineJoin = attributeMap.$index(0, "stroke-linejoin");
      rawMiterLimit = attributeMap.$index(0, "stroke-miterlimit");
      rawStrokeWidth = attributeMap.$index(0, "stroke-width");
      rawStrokeDashArray = attributeMap.$index(0, "stroke-dasharray");
      rawStrokeDashOffset = attributeMap.$index(0, "stroke-dashoffset");
      t1 = rawStroke == null;
      t2 = t1 ? rawStrokeCap : rawStroke;
      if (t2 == null)
        t2 = rawLineJoin;
      if (t2 == null)
        t2 = rawMiterLimit;
      if (t2 == null)
        t2 = rawStrokeWidth;
      anyStrokeAttribute = t2 == null ? rawStrokeDashArray : t2;
      if ((anyStrokeAttribute == null ? rawStrokeDashOffset : anyStrokeAttribute) == null)
        return _null;
      t1 = t1 ? _null : D.JSString_methods.startsWith$1(rawStroke, "url");
      if (t1 === true) {
        hasPattern = _this.patternIds.contains$1(0, rawStroke) ? true : _null;
        shaderId = rawStroke;
        strokeColor = B.Color_4294967295;
      } else {
        strokeColor = _this.parseColor$3$attributeName$id(rawStroke, "stroke", id);
        hasPattern = _null;
        shaderId = hasPattern;
      }
      t1 = rawStroke === "none" ? B.ColorOrNone_true_null : new A.ColorOrNone(false, strokeColor);
      t2 = _this._parseCap$2(rawStrokeCap, _null);
      t3 = _this.theme;
      return new A.SvgStrokeAttributes(_this._definitions, t1, shaderId, _this._parseJoin$2(rawLineJoin, _null), t2, A.parseDouble(rawMiterLimit, false), A.parseDoubleWithUnits(rawStrokeWidth, t3, true), _this._parseDashArray$1(rawStrokeDashArray), A.parseDoubleWithUnits(rawStrokeDashOffset, t3, false), hasPattern, opacity);
    },
    _parseFillAttributes$4(attributeMap, uniformOpacity, currentColor, id) {
      var rawFill, rawFillOpacity, t1, opacity, hasPattern, fillColor, _this = this, _null = null;
      type$.Map_String_String._as(attributeMap);
      rawFill = attributeMap.$index(0, "fill");
      if (rawFill == null)
        rawFill = "";
      rawFillOpacity = attributeMap.$index(0, "fill-opacity");
      if (rawFillOpacity != null) {
        t1 = A.parseDouble(rawFillOpacity, false);
        t1.toString;
        opacity = D.JSNumber_methods.clamp$2(t1, 0, 1);
      } else
        opacity = _null;
      if (uniformOpacity != null)
        opacity = opacity == null ? uniformOpacity : opacity * uniformOpacity;
      if (D.JSString_methods.startsWith$1(rawFill, "url")) {
        hasPattern = _this.patternIds.contains$1(0, rawFill) ? true : _null;
        return new A.SvgFillAttributes(_this._definitions, B.ColorOrNone_false_Color_4294967295, opacity, rawFill, hasPattern);
      }
      fillColor = _this.parseColor$3$attributeName$id(rawFill, "fill", id);
      t1 = fillColor == null ? _null : fillColor.value >>> 24;
      if ((t1 == null ? 255 : t1) !== 255) {
        t1 = fillColor.value;
        opacity = (t1 >>> 24) / 255;
        fillColor = A.Color$fromRGBO0(t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255, 1);
      }
      t1 = rawFill === "none" ? B.ColorOrNone_true_null : new A.ColorOrNone(false, fillColor);
      return new A.SvgFillAttributes(_this._definitions, t1, opacity, _null, _null);
    }
  };
  A._Resolver.prototype = {
    getDrawable$1(ref) {
      C.assertHelper(this._sealed);
      return this._drawables.$index(0, ref);
    },
    getClipPath$1(ref) {
      var nodes, pathBuilders, t1 = {};
      C.assertHelper(this._sealed);
      nodes = this._clips.$index(0, ref);
      if (nodes == null)
        return C._setArrayType([], type$.JSArray_Path);
      pathBuilders = C._setArrayType([], type$.JSArray_PathBuilder);
      t1.currentPath = null;
      J.forEach$1$ax(nodes, new A._Resolver_getClipPath_extractPathsFromNode(t1, pathBuilders));
      t1 = type$.MappedListIterable_PathBuilder_Path;
      return C.List_List$of(new C.MappedListIterable(pathBuilders, type$.Path_Function_PathBuilder._as(new A._Resolver_getClipPath_closure()), t1), false, t1._eval$1("ListIterable.E"));
    },
    getPattern$1(parserState) {
      var fill, stroke;
      if (parserState.attribute$1("fill") != null) {
        fill = parserState.attribute$1("fill");
        fill.toString;
        if (D.JSString_methods.startsWith$1(fill, "url") && parserState.patternIds.contains$1(0, fill))
          return fill;
      }
      if (parserState.attribute$1("stroke") != null) {
        stroke = parserState.attribute$1("stroke");
        stroke.toString;
        if (D.JSString_methods.startsWith$1(stroke, "url") && parserState.patternIds.contains$1(0, stroke))
          return stroke;
      }
      return null;
    },
    getGradient$1$1(ref, $T) {
      C.checkTypeBound($T, type$.Gradient_2, "T", "getGradient");
      C.assertHelper(this._sealed);
      return $T._eval$1("0?")._as(this._parser$_shaders.$index(0, ref));
    },
    addDeferredGradient$2(ref, gradient) {
      C.assertHelper(!this._sealed);
      J.add$1$ax(this._deferredShaders.putIfAbsent$2(0, ref, new A._Resolver_addDeferredGradient_closure()), gradient);
    },
    addGradient$2(gradient, href) {
      var t1, t2, gradientRef, t3, _this = this;
      C.assertHelper(!_this._sealed);
      t1 = _this._parser$_shaders;
      t2 = gradient.id;
      if (t1.containsKey$1(0, t2))
        return;
      t1.$indexSet(0, t2, gradient);
      if (href != null) {
        href = "url(" + href + ")";
        gradientRef = t1.$index(0, href);
        if (gradientRef != null)
          t1.$indexSet(0, t2, gradient.applyProperties$1(gradientRef));
        else
          _this.addDeferredGradient$2(href, gradient);
      } else {
        t2 = _this._deferredShaders.remove$1(0, t2);
        t2 = J.get$iterator$ax(t2 == null ? C._setArrayType([], type$.JSArray_Gradient) : t2);
        for (; t2.moveNext$0();) {
          t3 = t2.get$current(t2);
          t1.$indexSet(0, t3.id, t3.applyProperties$1(gradient));
        }
      }
    },
    addClipPath$2(ref, pathNodes) {
      type$.List_Node._as(pathNodes);
      C.assertHelper(!this._sealed);
      this._clips.putIfAbsent$2(0, ref, new A._Resolver_addClipPath_closure(pathNodes));
    },
    addDrawable$2(ref, drawable) {
      C.assertHelper(!this._sealed);
      this._drawables.putIfAbsent$2(0, ref, new A._Resolver_addDrawable_closure(drawable));
    }
  };
  A._Viewport.prototype = {};
  A.SvgAttributes.prototype = {
    get$heritable() {
      var t1 = this.raw;
      t1 = t1.get$entries(t1);
      return t1.where$1(t1, new A.SvgAttributes_heritable_closure());
    },
    applyParent$2$transformOverride($parent, transformOverride) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, _this = this, _null = null,
        t1 = type$.String;
      t1 = C.LinkedHashMap_LinkedHashMap$of(C.Map_Map$fromEntries($parent.get$heritable(), t1, t1), t1, t1);
      t1.addAll$1(0, _this.raw);
      t2 = t1.$index(0, "id");
      t3 = t1.$index(0, "href");
      t4 = transformOverride == null ? _this.transform : transformOverride;
      t5 = _this.color._applyParent$1($parent.color);
      t6 = _this.stroke;
      if (t6 == null)
        t6 = _null;
      else {
        t7 = $parent.stroke;
        t8 = t6._definitions;
        t9 = t6.color;
        t10 = t7 == null;
        t9 = t9._applyParent$1(t10 ? _null : t7.color);
        t11 = t6.shaderId;
        if (t11 == null)
          t11 = t10 ? _null : t7.shaderId;
        t12 = t6.join;
        if (t12 == null)
          t12 = t10 ? _null : t7.join;
        t13 = t6.cap;
        if (t13 == null)
          t13 = t10 ? _null : t7.cap;
        t14 = t6.miterLimit;
        if (t14 == null)
          t14 = t10 ? _null : t7.miterLimit;
        t15 = t6.width;
        if (t15 == null)
          t15 = t10 ? _null : t7.width;
        t16 = t6.dashArray;
        if (t16 == null)
          t16 = t10 ? _null : t7.dashArray;
        t17 = t6.dashOffset;
        if (t17 == null)
          t17 = t10 ? _null : t7.dashOffset;
        t18 = t6.hasPattern;
        if (t18 == null)
          t18 = t10 ? _null : t7.hasPattern;
        t6 = t6.opacity;
        if (t6 == null)
          t6 = t10 ? _null : t7.opacity;
        t6 = new A.SvgStrokeAttributes(t8, t9, t11, t12, t13, t14, t15, t16, t17, t18, t6);
      }
      if (t6 == null)
        t6 = $parent.stroke;
      t7 = _this.fill;
      if (t7 == null)
        t7 = _null;
      else {
        t8 = $parent.fill;
        t9 = t7._definitions;
        t10 = t7.color;
        t11 = t8 == null;
        t10 = t10._applyParent$1(t11 ? _null : t8.color);
        t12 = t7.shaderId;
        if (t12 == null)
          t12 = t11 ? _null : t8.shaderId;
        t13 = t7.hasPattern;
        if (t13 == null)
          t13 = t11 ? _null : t8.hasPattern;
        t7 = t7.opacity;
        if (t7 == null)
          t7 = t11 ? _null : t8.opacity;
        t13 = new A.SvgFillAttributes(t9, t10, t7, t12, t13);
        t7 = t13;
      }
      if (t7 == null)
        t7 = $parent.fill;
      t8 = _this.fillRule;
      if (t8 == null)
        t8 = $parent.fillRule;
      t9 = _this.clipRule;
      if (t9 == null)
        t9 = $parent.clipRule;
      t10 = _this.clipPathId;
      if (t10 == null)
        t10 = $parent.clipPathId;
      t11 = _this.blendMode;
      if (t11 == null)
        t11 = $parent.blendMode;
      t12 = _this.fontFamily;
      if (t12 == null)
        t12 = $parent.fontFamily;
      t13 = _this.fontWeight;
      if (t13 == null)
        t13 = $parent.fontWeight;
      t14 = _this.fontSize;
      if (t14 == null)
        t14 = $parent.fontSize;
      t15 = _this.textDecoration;
      if (t15 == null)
        t15 = $parent.textDecoration;
      t16 = _this.textDecorationStyle;
      if (t16 == null)
        t16 = $parent.textDecorationStyle;
      t17 = _this.textDecorationColor;
      if (t17 == null)
        t17 = $parent.textDecorationColor;
      t18 = _this.textAnchorMultiplier;
      if (t18 == null)
        t18 = $parent.textAnchorMultiplier;
      t19 = _this.height;
      if (t19 == null)
        t19 = $parent.height;
      t20 = _this.width;
      if (t20 == null)
        t20 = $parent.width;
      return A.SvgAttributes$_(t11, t10, t9, t5, _this.dx, _this.dy, t7, t8, t12, t14, t13, t19, t3, t2, t1, t6, t18, t15, t17, t16, t4, t20, _this.x, _this.y);
    },
    applyParent$1($parent) {
      return this.applyParent$2$transformOverride($parent, null);
    }
  };
  A.DoubleOrPercentage.prototype = {
    calculate$1(bound) {
      if (this._isPercentage)
        return this._parser$_value * bound;
      return this._parser$_value;
    },
    get$hashCode(_) {
      return C.Object_hash(this._parser$_value, this._isPercentage, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DoubleOrPercentage && other._isPercentage === this._isPercentage && other._parser$_value === this._parser$_value;
    }
  };
  A.SvgStrokeAttributes.prototype = {
    toStroke$2(shaderBounds, transform) {
      var t2, shader, _this = this, _null = null,
        t1 = _this.color;
      if (!t1.isNone)
        t2 = t1.color == null && _this.hasPattern == null && _this.shaderId == null || _this.width === 0;
      else
        t2 = true;
      if (t2)
        return _null;
      if (_this.hasPattern === true)
        return new A.Stroke(B.Color_4278190080, _null, _this.cap, _this.join, _this.miterLimit, _this.width);
      t2 = _this.shaderId;
      if (t2 != null) {
        t2 = _this._definitions.getGradient$1$1(t2, type$.Gradient_2);
        shader = t2 == null ? _null : t2.applyBounds$2(shaderBounds, transform);
        if (shader == null)
          return _null;
      } else
        shader = _null;
      t2 = _this.opacity;
      t1 = t1.color;
      if (!(t2 == null)) {
        t1 = t1.value;
        t2 = A.Color$fromRGBO0(t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255, t2);
        t1 = t2;
      }
      t2 = transform.scaleStrokeWidth$1(_this.width);
      if (t1 == null)
        t1 = B.Color_4278190080;
      return new A.Stroke(t1, shader, _this.cap, _this.join, _this.miterLimit, t2);
    }
  };
  A.SvgFillAttributes.prototype = {
    toFill$3$defaultColor(shaderBounds, transform, defaultColor) {
      var resolvedColor, t2, shader, _this = this, _null = null,
        t1 = _this.color;
      if (t1.isNone)
        return _null;
      t1 = t1.color;
      if (t1 == null)
        resolvedColor = _null;
      else {
        t2 = _this.opacity;
        if (t2 == null)
          t2 = 1;
        t1 = t1.value;
        t2 = A.Color$fromRGBO0(t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255, t2);
        resolvedColor = t2;
      }
      if (resolvedColor == null)
        if (defaultColor == null)
          resolvedColor = _null;
        else {
          t1 = _this.opacity;
          if (t1 == null)
            t1 = 1;
          t2 = defaultColor.value;
          t1 = A.Color$fromRGBO0(t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255, t1);
          resolvedColor = t1;
        }
      if (resolvedColor == null)
        return _null;
      if (_this.hasPattern === true)
        return new A.Fill(resolvedColor, _null);
      t1 = _this.shaderId;
      if (t1 != null) {
        t1 = _this._definitions.getGradient$1$1(t1, type$.Gradient_2);
        shader = t1 == null ? _null : t1.applyBounds$2(shaderBounds, transform);
        if (shader == null)
          return _null;
      } else
        shader = _null;
      return new A.Fill(resolvedColor, shader);
    },
    toFill$2(shaderBounds, transform) {
      return this.toFill$3$defaultColor(shaderBounds, transform, null);
    },
    toString$0(_) {
      var _this = this;
      return "SvgFillAttributes(definitions: " + _this._definitions.toString$0(0) + ", color: " + _this.color.toString$0(0) + ", shaderId: " + C.S(_this.shaderId) + ", hasPattern: " + C.S(_this.hasPattern) + ", oapctiy: " + C.S(_this.opacity) + ")";
    }
  };
  A.ColorOrNone.prototype = {
    _applyParent$1($parent) {
      var t1, _this = this;
      if ($parent == null || _this.isNone)
        return _this;
      if ($parent.isNone && _this.color == null)
        return B.ColorOrNone_true_null;
      t1 = _this.color;
      return new A.ColorOrNone(false, t1 == null ? $parent.color : t1);
    },
    toString$0(_) {
      var t1;
      if (this.isNone)
        t1 = '"none"';
      else {
        t1 = this.color;
        t1 = t1 == null ? null : t1.toString$0(0);
        if (t1 == null)
          t1 = "null";
      }
      return t1;
    }
  };
  A.ResolvingVisitor.prototype = {
    visitClipNode$2(clipNode, data) {
      var childTransform, t2, t3,
        t1 = type$.AffineMatrix;
      t1._as(data);
      childTransform = clipNode.concatTransform$1(data);
      t2 = C._setArrayType([], type$.JSArray_Path);
      for (t3 = J.get$iterator$ax(clipNode.resolver.call$1(clipNode.clipId)); t3.moveNext$0();)
        t2.push(t3.get$current(t3).transformed$1(childTransform));
      if (t2.length === 0)
        return clipNode.child.accept$2$2(0, this, data, type$.Node, t1);
      return new A.ResolvedClipNode(t2, clipNode.child.accept$2$2(0, this, data, type$.Node, t1));
    },
    visitMaskNode$2(maskNode, data) {
      var resolvedMask, t2, child,
        t1 = type$.AffineMatrix;
      t1._as(data);
      resolvedMask = maskNode.resolver.call$1(maskNode.maskId);
      if (resolvedMask == null)
        return maskNode.child.accept$2$2(0, this, data, type$.Node, t1);
      t2 = type$.Node;
      child = maskNode.child.accept$2$2(0, this, data, t2, t1);
      return new A.ResolvedMaskNode(resolvedMask.accept$2$2(0, this, maskNode.concatTransform$1(data), t2, t1), child, maskNode.blendMode);
    },
    visitParentNode$2(parentNode, data) {
      var t3, t4, t5, t6, _i, result, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, child, t29, _null = null,
        t1 = type$.AffineMatrix,
        nextTransform = parentNode.concatTransform$1(t1._as(data)),
        saveLayerPaint = parentNode.createLayerPaint$0(),
        t2 = type$.JSArray_Node;
      if (saveLayerPaint == null) {
        t2 = C._setArrayType([], t2);
        for (t3 = parentNode._node$_children, t4 = t3.length, t5 = parentNode.attributes, t6 = type$.Node, _i = 0; _i < t3.length; t3.length === t4 || (0, C.throwConcurrentModificationError)(t3), ++_i)
          t2.push(t3[_i].applyAttributes$1(t5).accept$2$2(0, this, nextTransform, t6, t1));
        result = A.ParentNode$(B.SvgAttributes_781, t2, B.AffineMatrix_qrl);
      } else {
        t2 = C._setArrayType([], t2);
        for (t3 = parentNode._node$_children, t4 = t3.length, t5 = type$.Node, t6 = parentNode.attributes, t7 = t6.raw, t8 = t6.id, t9 = t6.href, t10 = t6.transform, t11 = t6.color, t12 = t6.stroke, t13 = t6.fillRule, t14 = t6.clipRule, t15 = t6.clipPathId, t16 = t6.blendMode, t17 = t6.fontFamily, t18 = t6.fontWeight, t19 = t6.fontSize, t20 = t6.textDecoration, t21 = t6.textDecorationStyle, t22 = t6.textDecorationColor, t23 = t6.x, t24 = t6.textAnchorMultiplier, t25 = t6.y, t26 = t6.width, t27 = t6.height, t6 = t6.fill, t28 = t12 == null, _i = 0; _i < t3.length; t3.length === t4 || (0, C.throwConcurrentModificationError)(t3), ++_i) {
          child = t3[_i];
          t29 = t28 ? _null : new A.SvgStrokeAttributes(t12._definitions, t12.color, t12.shaderId, t12.join, t12.cap, t12.miterLimit, t12.width, t12.dashArray, t12.dashOffset, t12.hasPattern, _null);
          t2.push(child.applyAttributes$1(new A.SvgAttributes(t7, t8, t9, t11, t29, t6 == null ? _null : new A.SvgFillAttributes(t6._definitions, t6.color, _null, t6.shaderId, t6.hasPattern), t10, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t26, t27, t23, t24, t25, _null, _null)).accept$2$2(0, this, nextTransform, t5, t1));
        }
        result = A.SaveLayerNode$(B.SvgAttributes_781, t2, saveLayerPaint);
      }
      return result;
    },
    visitPathNode$2(pathNode, data) {
      var children, $parent, _null = null,
        t1 = pathNode.attributes,
        transform = type$.AffineMatrix._as(data).multiplied$1(t1.transform),
        t2 = pathNode.path,
        t3 = t2.transformed$1(transform),
        t4 = t1.fillRule,
        transformedPath = t3.withFillType$1(t4 == null ? t2.fillType : t4),
        originalBounds = t2.bounds$0(0),
        newBounds = transformedPath.bounds$0(0),
        paint = pathNode.computePaint$2(originalBounds, transform);
      if (paint != null) {
        t2 = t1.stroke;
        if ((t2 == null ? _null : t2.dashArray) != null) {
          children = C._setArrayType([], type$.JSArray_Node);
          $parent = A.ParentNode$(t1, children, _null);
          t1 = paint.fill;
          if (t1 != null) {
            t3 = paint.blendMode;
            D.JSArray_methods.add$1(children, new A.ResolvedPathNode(new A.Paint(t3, _null, t1), newBounds, transformedPath));
          }
          t1 = paint.stroke;
          if (t1 != null) {
            t3 = paint.blendMode;
            t2 = t2.dashArray;
            t2.toString;
            D.JSArray_methods.add$1(children, new A.ResolvedPathNode(new A.Paint(t3, t1, _null), newBounds, transformedPath.dashed$1(t2)));
          }
          return $parent;
        }
        return new A.ResolvedPathNode(paint, newBounds, transformedPath);
      }
      return B.C__EmptyNode;
    },
    visitTextPositionNode$2(textPositionNode, data) {
      var nextTransform, t2, computedTransform, t3, t4, x, y, dx, dy, hasXY, hasDxDy, consumeTransform, baseline, t5, t6, t7, _i, _null = null,
        t1 = type$.AffineMatrix;
      t1._as(data);
      nextTransform = textPositionNode.concatTransform$1(data);
      t2 = this.__ResolvingVisitor__bounds_A;
      t2 === $ && C.throwLateFieldNI("_bounds");
      computedTransform = textPositionNode.concatTransform$1(data);
      t3 = textPositionNode.attributes;
      t4 = t3.x;
      x = t4 == null ? _null : t4.calculate$1(t2.right - t2.left);
      t4 = t3.y;
      y = t4 == null ? _null : t4.calculate$1(t2.bottom - t2.top);
      t4 = t3.dx;
      dx = t4 == null ? _null : t4.calculate$1(t2.right - t2.left);
      t4 = t3.dy;
      dy = t4 == null ? _null : t4.calculate$1(t2.bottom - t2.top);
      hasXY = x != null && y != null;
      hasDxDy = dx != null && dy != null;
      if (!computedTransform.$eq(0, B.AffineMatrix_qrl))
        if (computedTransform.get$encodableInRect()) {
          t2 = hasXY || hasDxDy;
          consumeTransform = t2;
        } else
          consumeTransform = false;
      else
        consumeTransform = true;
      if (hasXY) {
        baseline = consumeTransform ? computedTransform.transformPoint$1(0, new A.Point(x, y)) : new A.Point(x, y);
        x = baseline.x;
        y = baseline.y;
      }
      if (hasDxDy) {
        baseline = consumeTransform ? computedTransform.transformPoint$1(0, new A.Point(dx, dy)) : new A.Point(dx, dy);
        dx = baseline.x;
        dy = baseline.y;
      }
      t2 = consumeTransform ? _null : computedTransform;
      t4 = C._setArrayType([], type$.JSArray_Node);
      for (t5 = textPositionNode._node$_children, t6 = t5.length, t7 = type$.Node, _i = 0; _i < t5.length; t5.length === t6 || (0, C.throwConcurrentModificationError)(t5), ++_i)
        t4.push(t5[_i].applyAttributes$1(t3).accept$2$2(0, this, nextTransform, t7, t1));
      return new A.ResolvedTextPositionNode(new A.TextPosition0(x, dx, y, dy, textPositionNode.reset, t2), t4);
    },
    visitTextNode$2(textNode, data) {
      var t1, paint, t2, t3, t4, t5, t6, t7, t8;
      type$.AffineMatrix._as(data);
      t1 = this.__ResolvingVisitor__bounds_A;
      t1 === $ && C.throwLateFieldNI("_bounds");
      paint = textNode.computePaint$2(t1, data);
      t1 = textNode.text;
      t2 = textNode.attributes;
      t3 = t2.textAnchorMultiplier;
      if (t3 == null)
        t3 = 0;
      t4 = t2.fontWeight;
      if (t4 == null)
        t4 = B.FontWeight_3;
      t5 = t2.fontSize;
      if (t5 == null)
        t5 = 16;
      t6 = t2.textDecoration;
      if (t6 == null)
        t6 = B.TextDecoration_00;
      t7 = t2.textDecorationStyle;
      if (t7 == null)
        t7 = B.TextDecorationStyle_0;
      t8 = t2.textDecorationColor;
      if (t8 == null)
        t8 = B.Color_4278190080;
      if (paint != null && D.JSString_methods.trim$0(t1).length !== 0)
        return new A.ResolvedTextNode(new A.TextConfig(t1, t3, t5, t2.fontFamily, t4, t6, t7, t8), paint);
      return B.C__EmptyNode;
    },
    visitViewportNode$2(viewportNode, data) {
      var t2, t3, transform, t4, t5, t6, t7, t8, _i,
        t1 = type$.AffineMatrix;
      t1._as(data);
      t2 = viewportNode.width;
      t3 = viewportNode.height;
      this.__ResolvingVisitor__bounds_A = new A.Rect0(0, 0, 0 + t2, 0 + t3);
      transform = viewportNode.concatTransform$1(data);
      t4 = C._setArrayType([], type$.JSArray_Node);
      for (t5 = viewportNode._node$_children, t6 = t5.length, t7 = viewportNode.attributes, t8 = type$.Node, _i = 0; _i < t5.length; t5.length === t6 || (0, C.throwConcurrentModificationError)(t5), ++_i)
        t4.push(t5[_i].applyAttributes$1(t7).accept$2$2(0, this, transform, t8, t1));
      return A.ViewportNode$(B.SvgAttributes_781, t4, t3, B.AffineMatrix_qrl, t2);
    },
    visitDeferredNode$2(deferredNode, data) {
      var resolvedNode,
        t1 = type$.AffineMatrix;
      t1._as(data);
      resolvedNode = deferredNode.resolver.call$1(deferredNode.refId);
      if (resolvedNode == null)
        return B.C__EmptyNode;
      return resolvedNode.applyAttributes$2$replace(deferredNode.attributes, true).accept$2$2(0, this, data, type$.Node, t1);
    },
    visitEmptyNode$2(node, data) {
      type$.AffineMatrix._as(data);
      return node;
    },
    visitResolvedText$2(textNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return textNode;
    },
    visitResolvedTextPositionNode$2(textPositionNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return textPositionNode;
    },
    visitResolvedPath$2(pathNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return pathNode;
    },
    visitResolvedClipNode$2(clipNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return clipNode;
    },
    visitResolvedMaskNode$2(maskNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return maskNode;
    },
    visitSaveLayerNode$2(layerNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return layerNode;
    },
    visitImageNode$2(imageNode, data) {
      var $top, width, height, rect,
        childTransform = imageNode.concatTransform$1(type$.AffineMatrix._as(data)),
        t1 = imageNode.attributes.raw,
        t2 = t1.$index(0, "x"),
        left = C.double_parse(t2 == null ? "0" : t2);
      t2 = t1.$index(0, "y");
      $top = C.double_parse(t2 == null ? "0" : t2);
      t2 = t1.$index(0, "width");
      width = C.Primitives_parseDouble(t2 == null ? "" : t2);
      t1 = t1.$index(0, "height");
      height = C.Primitives_parseDouble(t1 == null ? "" : t1);
      t1 = width == null;
      if (t1 || height == null) {
        data = A.ImageSizeData_ImageSizeData$fromBytes(imageNode.data);
        if (t1)
          width = data.width;
        if (height == null)
          height = data.height;
      }
      rect = new A.Rect0(left, $top, left + width, $top + height);
      if (childTransform.get$encodableInRect())
        return new A.ResolvedImageNode(imageNode.data, imageNode.format, A._transformRect(childTransform.toMatrix4$0(), rect), null);
      return new A.ResolvedImageNode(imageNode.data, imageNode.format, rect, childTransform);
    },
    visitResolvedImageNode$2(resolvedImageNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return resolvedImageNode;
    },
    visitPatternNode$2(patternNode, data) {
      var t2, resolvedPattern, t3, child, pattern, t4, t5,
        t1 = type$.AffineMatrix;
      t1._as(data);
      t2 = patternNode.patternId;
      resolvedPattern = patternNode.resolver.call$1(t2);
      if (resolvedPattern == null)
        return patternNode.child.accept$2$2(0, this, data, type$.Node, t1);
      t3 = type$.Node;
      child = patternNode.child.accept$2$2(0, this, data, t3, t1);
      pattern = resolvedPattern.accept$2$2(0, this, patternNode.concatTransform$1(data), t3, t1);
      t1 = resolvedPattern.attributes;
      t3 = t1.x;
      t3 = t3 == null ? null : t3.calculate$1(0);
      if (t3 == null)
        t3 = 0;
      t4 = t1.y;
      t4 = t4 == null ? null : t4.calculate$1(0);
      if (t4 == null)
        t4 = 0;
      t5 = t1.width;
      t5.toString;
      t1 = t1.height;
      t1.toString;
      return new A.ResolvedPatternNode(child, pattern, t3, t4, t5, t1, t2, data);
    },
    visitResolvedPatternNode$2(patternNode, data) {
      type$.AffineMatrix._as(data);
      C.assertHelper(false);
      return patternNode;
    }
  };
  A.ResolvedTextPositionNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedTextPositionNode$2(this, $V._as(data));
    }
  };
  A.ResolvedTextNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedText$2(this, $V._as(data));
    }
  };
  A.ResolvedPathNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedPath$2(this, $V._as(data));
    }
  };
  A.ResolvedClipNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedClipNode$2(this, $V._as(data));
    }
  };
  A.ResolvedMaskNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedMaskNode$2(this, $V._as(data));
    }
  };
  A.ResolvedImageNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedImageNode$2(this, $V._as(data));
    }
  };
  A.ResolvedPatternNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedPatternNode$2(this, $V._as(data));
    }
  };
  A.SvgTheme0.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(_this))
        return false;
      if (other instanceof A.SvgTheme0) {
        t1 = other.currentColor;
        t1 = t1.value === _this.currentColor.value && _this.fontSize === other.fontSize && _this.xHeight === other.xHeight;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(this.currentColor, this.fontSize, this.xHeight, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "SvgTheme(currentColor: " + this.currentColor.toString$0(0) + ", fontSize: " + this.fontSize + ", xHeight: " + C.S(this.xHeight) + ")";
    }
  };
  A.Visitor.prototype = {};
  A.ErrorOnUnResolvedNode.prototype = {
    get$_visitor$_message() {
      return "Cannot visit unresolved nodes with " + this.toString$0(0);
    },
    visitDeferredNode$2(deferredNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitMaskNode$2(maskNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitClipNode$2(clipNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitTextPositionNode$2(textPositionNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitTextNode$2(textNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitImageNode$2(imageNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitPatternNode$2(patternNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    }
  };
  A.CommandBuilderVisitor.prototype = {
    visitEmptyNode$2(node, data) {
    },
    visitParentNode$2(parentNode, data) {
      var t1, t2, t3, _i;
      for (t1 = parentNode._node$_children, t2 = t1.length, t3 = type$.void, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].accept$2$2(0, this, data, t3, t3);
    },
    visitPathNode$2(pathNode, data) {
      C.assertHelper(false);
    },
    visitResolvedClipNode$2(clipNode, data) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _i, _null = null;
      for (t1 = clipNode.clips, t2 = t1.length, t3 = this._builder, t4 = t3._draw_command_builder$_paths, t5 = type$.Path, t6 = t3._commands, t7 = clipNode.child, t8 = type$.void, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        D.JSArray_methods.add$1(t6, new A.DrawCommand(_null, B.DrawCommandType_4, t3._getOrGenerateId$1$2(t1[_i], t4, t5), _null, _null, _null));
        t7.accept$2$2(0, this, data, t8, t8);
        D.JSArray_methods.add$1(t6, B.DrawCommand_AWW);
      }
    },
    visitResolvedMaskNode$2(maskNode, data) {
      var t1 = this._builder,
        t2 = maskNode.blendMode;
      t1.addSaveLayer$1(new A.Paint(t2 == null ? B.BlendMode_30 : t2, null, B.Fill_Color_4278190080_null));
      t2 = type$.void;
      maskNode.child.accept$2$2(0, this, data, t2, t2);
      t1 = t1._commands;
      D.JSArray_methods.add$1(t1, B.DrawCommand_2Th);
      maskNode.mask.accept$2$2(0, this, data, t2, t2);
      D.JSArray_methods.add$1(t1, B.DrawCommand_AWW);
      D.JSArray_methods.add$1(t1, B.DrawCommand_AWW);
    },
    visitResolvedPath$2(pathNode, data) {
      this._builder.addPath$4(0, pathNode.path, pathNode.paint, null, this.currentPatternId);
    },
    visitResolvedTextPositionNode$2(textPositionNode, data) {
      var _null = null,
        t1 = this._builder;
      D.JSArray_methods.add$1(t1._commands, new A.DrawCommand(_null, B.DrawCommandType_9, t1._getOrGenerateId$1$2(textPositionNode.textPosition, t1._draw_command_builder$_textPositions, type$.TextPosition), _null, _null, _null));
      D.JSArray_methods.forEach$1(textPositionNode.children, type$.void_Function_Node._as(new A.CommandBuilderVisitor_visitResolvedTextPositionNode_closure(this, data)));
    },
    visitResolvedText$2(textNode, data) {
      var t1 = this._builder,
        t2 = this.currentPatternId,
        paintId = t1._getOrGenerateId$1$2(textNode.paint, t1._draw_command_builder$_paints, type$.Paint),
        styleId = t1._getOrGenerateId$1$2(textNode.textConfig, t1._draw_command_builder$_text, type$.TextConfig),
        t3 = t2 != null,
        t4 = t3 ? t1._draw_command_builder$_patterns.$index(0, t2) : null;
      t2 = t3 ? t1._patternData.$index(0, t2) : null;
      D.JSArray_methods.add$1(t1._commands, new A.DrawCommand(null, B.DrawCommandType_6, styleId, paintId, t4, t2));
    },
    visitViewportNode$2(viewportNode, data) {
      var t1, t2, t3, _i;
      this.__CommandBuilderVisitor__width_A = viewportNode.width;
      this.__CommandBuilderVisitor__height_A = viewportNode.height;
      for (t1 = viewportNode._node$_children, t2 = t1.length, t3 = type$.void, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].accept$2$2(0, this, data, t3, t3);
    },
    visitSaveLayerNode$2(layerNode, data) {
      var t2, t3, t4, _i,
        t1 = this._builder;
      t1.addSaveLayer$1(layerNode.paint);
      for (t2 = layerNode._node$_children, t3 = t2.length, t4 = type$.void, _i = 0; _i < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].accept$2$2(0, this, data, t4, t4);
      D.JSArray_methods.add$1(t1._commands, B.DrawCommand_AWW);
    },
    visitResolvedImageNode$2(resolvedImageNode, data) {
      var _null = null,
        t1 = this._builder;
      D.JSArray_methods.add$1(t1._commands, new A.DrawCommand(_null, B.DrawCommandType_7, t1._getOrGenerateId$1$2(new A.DrawImageData(t1._getOrGenerateId$1$2(new A.ImageData(resolvedImageNode.data, resolvedImageNode.format.index), t1._draw_command_builder$_images, type$.ImageData), resolvedImageNode.rect, resolvedImageNode.transform), t1._drawImages, type$.DrawImageData), _null, _null, _null));
    },
    visitResolvedPatternNode$2(patternNode, data) {
      var _this = this,
        t1 = _this._builder,
        t2 = patternNode.id,
        t3 = t1._commands;
      D.JSArray_methods.add$1(t3, new A.DrawCommand(null, B.DrawCommandType_8, t1._getOrGenerateId$1$2(t2, t1._draw_command_builder$_patterns, type$.Object), null, null, t1._getOrGenerateId$1$2(new A.PatternData(patternNode.x, patternNode.y, patternNode.width, patternNode.height, patternNode.transform), t1._patternData, type$.PatternData)));
      t1 = type$.void;
      patternNode.pattern.accept$2$2(0, _this, data, t1, t1);
      D.JSArray_methods.add$1(t3, B.DrawCommand_AWW);
      _this.currentPatternId = t2;
      patternNode.child.accept$2$2(0, _this, data, t1, t1);
      _this.currentPatternId = null;
    }
  };
  A._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode.prototype = {};
  A.VectorInstructions.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.width, _this.height, C.Object_hashAll(_this.patternData), C.Object_hashAll(_this.paints), C.Object_hashAll(_this.paths), C.Object_hashAll(_this.vertices), C.Object_hashAll(_this.text), C.Object_hashAll(_this.commands), C.Object_hashAll(_this.images), C.Object_hashAll(_this.drawImages), C.Object_hashAll(_this.textPositions), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.VectorInstructions && other.width === _this.width && other.height === _this.height && A.listEquals1(other.patternData, _this.patternData, type$.PatternData) && A.listEquals1(other.paints, _this.paints, type$.Paint) && A.listEquals1(other.paths, _this.paths, type$.Path) && A.listEquals1(other.vertices, _this.vertices, type$.IndexedVertices) && A.listEquals1(other.text, _this.text, type$.TextConfig) && A.listEquals1(other.commands, _this.commands, type$.DrawCommand) && A.listEquals1(other.images, _this.images, type$.ImageData) && A.listEquals1(other.drawImages, _this.drawImages, type$.DrawImageData) && A.listEquals1(other.textPositions, _this.textPositions, type$.TextPosition);
    },
    toString$0(_) {
      return "VectorInstructions(" + C.S(this.width) + ", " + C.S(this.height) + ")";
    }
  };
  A.DrawCommandType.prototype = {
    _enumToString$0() {
      return "DrawCommandType." + this._name;
    }
  };
  A.DrawCommand.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.type, _this.objectId, _this.paintId, _this.debugString, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DrawCommand && other.type === this.type && other.objectId == this.objectId && other.paintId == this.paintId;
    },
    toString$0(_) {
      var _this = this,
        t1 = "DrawCommand(" + _this.type.toString$0(0),
        t2 = _this.objectId;
      if (t2 != null)
        t1 += ", objectId: " + C.S(t2);
      t2 = _this.paintId;
      if (t2 != null)
        t1 += ", paintId: " + C.S(t2);
      t2 = _this.patternId;
      if (t2 != null)
        t1 += ", patternId: " + C.S(t2);
      t2 = _this.patternDataId;
      t1 = (t2 != null ? t1 + (", patternDataId: " + C.S(t2)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Matrix41.prototype = {
    setFrom$1(arg) {
      var argStorage = arg._vector_math$_m4storage,
        t1 = this._vector_math$_m4storage,
        t2 = argStorage[15];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[15] = t2;
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    toString$0(_) {
      var _this = this;
      return "[0] " + _this.getRow$1(0).toString$0(0) + "\n[1] " + _this.getRow$1(1).toString$0(0) + "\n[2] " + _this.getRow$1(2).toString$0(0) + "\n[3] " + _this.getRow$1(3).toString$0(0) + "\n";
    },
    $index(_, i) {
      var t1;
      C._asInt(i);
      t1 = this._vector_math$_m4storage;
      if (!(i < 16))
        return C.ioore(t1, i);
      return t1[i];
    },
    $indexSet(_, i, v) {
      D.NativeFloat32List_methods.$indexSet(this._vector_math$_m4storage, C._asInt(i), C._asDouble(v));
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Matrix41) {
        t1 = this._vector_math$_m4storage;
        t2 = t1[0];
        t3 = other._vector_math$_m4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hashAll(this._vector_math$_m4storage);
    },
    getRow$1(row) {
      var t3,
        t1 = new Float32Array(4),
        t2 = this._vector_math$_m4storage;
      if (!(row < 16))
        return C.ioore(t2, row);
      t1[0] = t2[row];
      t3 = 4 + row;
      if (!(t3 < 16))
        return C.ioore(t2, t3);
      t1[1] = t2[t3];
      t3 = 8 + row;
      if (!(t3 < 16))
        return C.ioore(t2, t3);
      t1[2] = t2[t3];
      t3 = 12 + row;
      if (!(t3 < 16))
        return C.ioore(t2, t3);
      t1[3] = t2[t3];
      return new A.Vector40(t1);
    },
    $mul(_, arg) {
      var t1 = new A.Matrix41(new Float32Array(16));
      t1.setFrom$1(this);
      t1.scale$3(0, arg, null, null);
      return t1;
    },
    $add(_, arg) {
      var t1, t2, oStorage;
      type$.Matrix4_2._as(arg);
      t1 = new Float32Array(16);
      t2 = new A.Matrix41(t1);
      t2.setFrom$1(this);
      oStorage = arg._vector_math$_m4storage;
      t1[0] = t1[0] + oStorage[0];
      t1[1] = t1[1] + oStorage[1];
      t1[2] = t1[2] + oStorage[2];
      t1[3] = t1[3] + oStorage[3];
      t1[4] = t1[4] + oStorage[4];
      t1[5] = t1[5] + oStorage[5];
      t1[6] = t1[6] + oStorage[6];
      t1[7] = t1[7] + oStorage[7];
      t1[8] = t1[8] + oStorage[8];
      t1[9] = t1[9] + oStorage[9];
      t1[10] = t1[10] + oStorage[10];
      t1[11] = t1[11] + oStorage[11];
      t1[12] = t1[12] + oStorage[12];
      t1[13] = t1[13] + oStorage[13];
      t1[14] = t1[14] + oStorage[14];
      t1[15] = t1[15] + oStorage[15];
      return t2;
    },
    $sub(_, arg) {
      var t1, t2, oStorage;
      type$.Matrix4_2._as(arg);
      t1 = new Float32Array(16);
      t2 = new A.Matrix41(t1);
      t2.setFrom$1(this);
      oStorage = arg._vector_math$_m4storage;
      t1[0] = t1[0] - oStorage[0];
      t1[1] = t1[1] - oStorage[1];
      t1[2] = t1[2] - oStorage[2];
      t1[3] = t1[3] - oStorage[3];
      t1[4] = t1[4] - oStorage[4];
      t1[5] = t1[5] - oStorage[5];
      t1[6] = t1[6] - oStorage[6];
      t1[7] = t1[7] - oStorage[7];
      t1[8] = t1[8] - oStorage[8];
      t1[9] = t1[9] - oStorage[9];
      t1[10] = t1[10] - oStorage[10];
      t1[11] = t1[11] - oStorage[11];
      t1[12] = t1[12] - oStorage[12];
      t1[13] = t1[13] - oStorage[13];
      t1[14] = t1[14] - oStorage[14];
      t1[15] = t1[15] - oStorage[15];
      return t2;
    },
    rotateZ$1(angle) {
      var cosAngle = Math.cos(angle),
        sinAngle = Math.sin(angle),
        t1 = this._vector_math$_m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[1],
        t5 = t1[5],
        t6 = t1[2],
        t7 = t1[6],
        t8 = t1[3],
        t9 = t1[7],
        t10 = -sinAngle;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * cosAngle + t3 * sinAngle;
      t1[1] = t4 * cosAngle + t5 * sinAngle;
      t1[2] = t6 * cosAngle + t7 * sinAngle;
      t1[3] = t8 * cosAngle + t9 * sinAngle;
      t1[4] = t2 * t10 + t3 * cosAngle;
      t1[5] = t4 * t10 + t5 * cosAngle;
      t1[6] = t6 * t10 + t7 * cosAngle;
      t1[7] = t8 * t10 + t9 * cosAngle;
    },
    scale$3(_, x, y, z) {
      var sy = y == null ? x : y,
        sz = x,
        t1 = this._vector_math$_m4storage,
        t2 = t1[0];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * x;
      t1[1] = t1[1] * x;
      t1[2] = t1[2] * x;
      t1[3] = t1[3] * x;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * sz;
      t1[9] = t1[9] * sz;
      t1[10] = t1[10] * sz;
      t1[11] = t1[11] * sz;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
      t1[15] = t1[15];
    },
    scale$2(_, x, y) {
      return this.scale$3(0, x, y, null);
    },
    setIdentity$0() {
      var t1 = this._vector_math$_m4storage;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    }
  };
  A.Vector40.prototype = {
    setFrom$1(other) {
      var otherStorage = other._vector_math$_v4storage,
        t1 = this._vector_math$_v4storage,
        t2 = otherStorage[3];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[3] = t2;
      t1[2] = otherStorage[2];
      t1[1] = otherStorage[1];
      t1[0] = otherStorage[0];
    },
    toString$0(_) {
      var t1 = this._vector_math$_v4storage;
      return C.S(t1[0]) + "," + C.S(t1[1]) + "," + C.S(t1[2]) + "," + C.S(t1[3]);
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Vector40) {
        t1 = this._vector_math$_v4storage;
        t2 = t1[0];
        t3 = other._vector_math$_v4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hashAll(this._vector_math$_v4storage);
    },
    $sub(_, other) {
      var t1, t2, argStorage;
      type$.Vector4._as(other);
      t1 = new Float32Array(4);
      t2 = new A.Vector40(t1);
      t2.setFrom$1(this);
      argStorage = other._vector_math$_v4storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $add(_, other) {
      var t1, t2, argStorage;
      type$.Vector4._as(other);
      t1 = new Float32Array(4);
      t2 = new A.Vector40(t1);
      t2.setFrom$1(this);
      argStorage = other._vector_math$_v4storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
      return t2;
    },
    $mul(_, scale) {
      var t1 = new A.Vector40(new Float32Array(4));
      t1.setFrom$1(this);
      t1.scale$1(0, scale);
      return t1;
    },
    $index(_, i) {
      var t1;
      C._asInt(i);
      t1 = this._vector_math$_v4storage;
      if (!(i < 4))
        return C.ioore(t1, i);
      return t1[i];
    },
    $indexSet(_, i, v) {
      D.NativeFloat32List_methods.$indexSet(this._vector_math$_v4storage, C._asInt(i), C._asDouble(v));
    },
    get$length(_) {
      var t1 = this._vector_math$_v4storage,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    },
    scale$1(_, arg) {
      var t1 = this._vector_math$_v4storage,
        t2 = t1[0];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * arg;
      t1[1] = t1[1] * arg;
      t1[2] = t1[2] * arg;
      t1[3] = t1[3] * arg;
    },
    round$0(_) {
      var t1 = this._vector_math$_v4storage,
        t2 = D.JSNumber_methods.roundToDouble$0(t1[0]);
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2;
      t1[1] = D.JSNumber_methods.roundToDouble$0(t1[1]);
      t1[2] = D.JSNumber_methods.roundToDouble$0(t1[2]);
      t1[3] = D.JSNumber_methods.roundToDouble$0(t1[3]);
    }
  };
  A.Quaternion.prototype = {
    setFrom$1(source) {
      var sourceStorage = source._qStorage,
        t1 = this._qStorage,
        t2 = sourceStorage[0];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2;
      t1[1] = sourceStorage[1];
      t1[2] = sourceStorage[2];
      t1[3] = sourceStorage[3];
    },
    setFromRotation$1(rotationMatrix) {
      var s, i, j, k, t4, t5, t6,
        rotationMatrixStorage = rotationMatrix._m3storage,
        t1 = rotationMatrixStorage[0],
        t2 = rotationMatrixStorage[4],
        t3 = rotationMatrixStorage[8],
        t = 0 + t1 + t2 + t3;
      if (t > 0) {
        s = Math.sqrt(t + 1);
        t1 = this._qStorage;
        t1.$flags & 2 && C.throwUnsupportedOperation(t1);
        t1[3] = s * 0.5;
        s = 0.5 / s;
        t1[0] = (rotationMatrixStorage[5] - rotationMatrixStorage[7]) * s;
        t1[1] = (rotationMatrixStorage[6] - rotationMatrixStorage[2]) * s;
        t1[2] = (rotationMatrixStorage[1] - rotationMatrixStorage[3]) * s;
      } else {
        if (t1 < t2)
          i = t2 < t3 ? 2 : 1;
        else
          i = t1 < t3 ? 2 : 0;
        j = (i + 1) % 3;
        k = (i + 2) % 3;
        t1 = i * 3;
        t2 = t1 + i;
        if (!(t2 < 9))
          return C.ioore(rotationMatrixStorage, t2);
        t2 = rotationMatrixStorage[t2];
        t3 = j * 3;
        t4 = t3 + j;
        if (!(t4 < 9))
          return C.ioore(rotationMatrixStorage, t4);
        t4 = rotationMatrixStorage[t4];
        t5 = k * 3;
        t6 = t5 + k;
        if (!(t6 < 9))
          return C.ioore(rotationMatrixStorage, t6);
        s = Math.sqrt(t2 - t4 - rotationMatrixStorage[t6] + 1);
        t6 = this._qStorage;
        t6.$flags & 2 && C.throwUnsupportedOperation(t6);
        t6[i] = s * 0.5;
        s = 0.5 / s;
        t4 = t3 + k;
        if (!(t4 < 9))
          return C.ioore(rotationMatrixStorage, t4);
        t4 = rotationMatrixStorage[t4];
        t2 = t5 + j;
        if (!(t2 < 9))
          return C.ioore(rotationMatrixStorage, t2);
        t6[3] = (t4 - rotationMatrixStorage[t2]) * s;
        t2 = t1 + j;
        if (!(t2 < 9))
          return C.ioore(rotationMatrixStorage, t2);
        t2 = rotationMatrixStorage[t2];
        t3 += i;
        if (!(t3 < 9))
          return C.ioore(rotationMatrixStorage, t3);
        t6[j] = (t2 + rotationMatrixStorage[t3]) * s;
        t1 += k;
        if (!(t1 < 9))
          return C.ioore(rotationMatrixStorage, t1);
        t1 = rotationMatrixStorage[t1];
        t5 += i;
        if (!(t5 < 9))
          return C.ioore(rotationMatrixStorage, t5);
        t6[k] = (t1 + rotationMatrixStorage[t5]) * s;
      }
    },
    normalize$0(_) {
      var d, t1, t2,
        l = Math.sqrt(this.get$length2());
      if (l === 0)
        return 0;
      d = 1 / l;
      t1 = this._qStorage;
      t2 = t1[0];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * d;
      t1[1] = t1[1] * d;
      t1[2] = t1[2] * d;
      t1[3] = t1[3] * d;
      return l;
    },
    get$length2() {
      var t1 = this._qStorage,
        x = t1[0],
        y = t1[1],
        z = t1[2],
        w = t1[3];
      return x * x + y * y + z * z + w * w;
    },
    get$length(_) {
      var t1 = this._qStorage,
        x = t1[0],
        y = t1[1],
        z = t1[2],
        w = t1[3];
      return Math.sqrt(x * x + y * y + z * z + w * w);
    },
    scaled$1(scale) {
      var t1 = new Float64Array(4),
        t2 = new A.Quaternion(t1);
      t2.setFrom$1(this);
      t1[3] = t1[3] * scale;
      t1[2] = t1[2] * scale;
      t1[1] = t1[1] * scale;
      t1[0] = t1[0] * scale;
      return t2;
    },
    $mul(_, other) {
      var t1, _w, _z, _y, _x, otherStorage, ow, oz, oy, ox, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
      type$.Quaternion._as(other);
      t1 = this._qStorage;
      _w = t1[3];
      _z = t1[2];
      _y = t1[1];
      _x = t1[0];
      otherStorage = other.get$_qStorage();
      ow = otherStorage.$index(0, 3);
      oz = otherStorage.$index(0, 2);
      oy = otherStorage.$index(0, 1);
      ox = otherStorage.$index(0, 0);
      t1 = D.JSNumber_methods.$mul(_w, ox);
      t2 = D.JSNumber_methods.$mul(_x, ow);
      t3 = D.JSNumber_methods.$mul(_y, oz);
      t4 = D.JSNumber_methods.$mul(_z, oy);
      t5 = D.JSNumber_methods.$mul(_w, oy);
      t6 = D.JSNumber_methods.$mul(_y, ow);
      t7 = D.JSNumber_methods.$mul(_z, ox);
      t8 = D.JSNumber_methods.$mul(_x, oz);
      t9 = D.JSNumber_methods.$mul(_w, oz);
      t10 = D.JSNumber_methods.$mul(_z, ow);
      t11 = D.JSNumber_methods.$mul(_x, oy);
      t12 = D.JSNumber_methods.$mul(_y, ox);
      t13 = D.JSNumber_methods.$mul(_w, ow);
      t14 = D.JSNumber_methods.$mul(_x, ox);
      t15 = D.JSNumber_methods.$mul(_y, oy);
      t16 = D.JSNumber_methods.$mul(_z, oz);
      t17 = new Float64Array(4);
      t17[0] = t1 + t2 + t3 - t4;
      t17[1] = t5 + t6 + t7 - t8;
      t17[2] = t9 + t10 + t11 - t12;
      t17[3] = t13 - t14 - t15 - t16;
      return new A.Quaternion(t17);
    },
    $add(_, other) {
      var t1, t2, argStorage;
      type$.Quaternion._as(other);
      t1 = new Float64Array(4);
      t2 = new A.Quaternion(t1);
      t2.setFrom$1(this);
      argStorage = other._qStorage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
      return t2;
    },
    $sub(_, other) {
      var t1, t2, argStorage;
      type$.Quaternion._as(other);
      t1 = new Float64Array(4);
      t2 = new A.Quaternion(t1);
      t2.setFrom$1(this);
      argStorage = other._qStorage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $index(_, i) {
      var t1;
      C._asInt(i);
      t1 = this._qStorage;
      if (!(i < 4))
        return C.ioore(t1, i);
      return t1[i];
    },
    $indexSet(_, i, arg) {
      D.NativeFloat64List_methods.$indexSet(this._qStorage, C._asInt(i), C._asDouble(arg));
    },
    toString$0(_) {
      var t1 = this._qStorage;
      return C.S(t1[0]) + ", " + C.S(t1[1]) + ", " + C.S(t1[2]) + " @ " + C.S(t1[3]);
    }
  };
  A.DtdExternalId.prototype = {
    toString$0(_) {
      var t2, _this = this,
        t1 = _this.publicId;
      if (t1 != null) {
        t2 = _this.publicIdType.token;
        t2 = "" + "PUBLIC " + t2 + t1 + t2;
        t1 = t2;
      } else
        t1 = "" + "SYSTEM";
      t2 = _this.systemIdType.token;
      t2 = t1 + " " + t2 + _this.systemId + t2;
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    get$hashCode(_) {
      return C.Object_hash(this.systemId, this.publicId, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DtdExternalId;
    }
  };
  A.XmlDefaultEntityMapping.prototype = {
    decodeEntity$1(input) {
      var t1 = input.length;
      if (t1 > 1 && input[0] === "#") {
        if (t1 > 2) {
          t1 = input[1];
          t1 = t1 === "x" || t1 === "X";
        } else
          t1 = false;
        if (t1)
          return this._decodeNumericEntity$2(D.JSString_methods.substring$1(input, 2), 16);
        else
          return this._decodeNumericEntity$2(D.JSString_methods.substring$1(input, 1), 10);
      } else
        return B.Map_D0Awe.$index(0, input);
    },
    _decodeNumericEntity$2(input, radix) {
      var value = C.Primitives_parseInt(input, radix);
      if (value == null || value < 0 || 1114111 < value)
        return null;
      return C.Primitives_stringFromCharCode(value);
    },
    encodeAttributeValue$2(input, type) {
      switch (type.index) {
        case 0:
          return C.stringReplaceAllFuncUnchecked(input, $.$get$_singeQuoteAttributePattern(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(A.default_mapping___singeQuoteAttributeReplace$closure())), null);
        case 1:
          return C.stringReplaceAllFuncUnchecked(input, $.$get$_doubleQuoteAttributePattern(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(A.default_mapping___doubleQuoteAttributeReplace$closure())), null);
      }
    }
  };
  A.XmlEntityMapping.prototype = {
    decode$1(_, input) {
      var t1, index, value, next,
        start = D.JSString_methods.indexOf$2(input, "&", 0);
      if (start < 0)
        return input;
      t1 = D.JSString_methods.substring$2(input, 0, start);
      for (; true; start = next) {
        ++start;
        index = D.JSString_methods.indexOf$2(input, ";", start);
        if (start < index) {
          value = this.decodeEntity$1(D.JSString_methods.substring$2(input, start, index));
          if (value != null) {
            t1 += value;
            start = index + 1;
          } else
            t1 += "&";
        } else
          t1 += "&";
        next = D.JSString_methods.indexOf$2(input, "&", start);
        if (next === -1) {
          t1 += D.JSString_methods.substring$1(input, start);
          break;
        }
        t1 += D.JSString_methods.substring$2(input, start, next);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.XmlAttributeType.prototype = {
    _enumToString$0() {
      return "XmlAttributeType." + this._name;
    }
  };
  A.XmlNodeType.prototype = {
    _enumToString$0() {
      return "XmlNodeType." + this._name;
    }
  };
  A.XmlException.prototype = {$isException: 1,
    get$message(receiver) {
      return this.message;
    }
  };
  A.XmlFormatException.prototype = {
    get$_lineAndColumn() {
      var result, _this = this,
        value = _this.XmlFormatException___XmlFormatException__lineAndColumn_FI;
      if (value === $) {
        _this.get$buffer(_this);
        _this.get$position(_this);
        result = A.Token_lineAndColumnOf(_this.get$buffer(_this), _this.get$position(_this));
        _this.XmlFormatException___XmlFormatException__lineAndColumn_FI !== $ && C.throwLateFieldADI("_lineAndColumn");
        _this.set$__XmlFormatException__lineAndColumn_FI(result);
        value = result;
      }
      return value;
    },
    get$locationString() {
      var value, result, value0, t1, _this = this;
      _this.get$buffer(_this);
      _this.get$position(_this);
      value = _this.XmlFormatException___XmlFormatException_line_FI;
      if (value === $) {
        result = _this.get$_lineAndColumn()[0];
        _this.XmlFormatException___XmlFormatException_line_FI !== $ && C.throwLateFieldADI("line");
        _this.XmlFormatException___XmlFormatException_line_FI = result;
        value = result;
      }
      value0 = _this.XmlFormatException___XmlFormatException_column_FI;
      if (value0 === $) {
        result = _this.get$_lineAndColumn()[1];
        _this.XmlFormatException___XmlFormatException_column_FI !== $ && C.throwLateFieldADI("column");
        _this.XmlFormatException___XmlFormatException_column_FI = result;
        value0 = result;
      }
      t1 = " at " + C.S(value) + ":" + C.S(value0);
      return t1;
    },
    get$source(_) {
      return this.get$buffer(this);
    },
    get$offset(_) {
      return this.get$position(this);
    },
    set$__XmlFormatException__lineAndColumn_FI(__XmlFormatException__lineAndColumn_FI) {
      this.XmlFormatException___XmlFormatException__lineAndColumn_FI = type$.List_int._as(__XmlFormatException__lineAndColumn_FI);
    }
  };
  A.XmlParserException.prototype = {
    toString$0(_) {
      return "XmlParserException: " + this.message + this.get$locationString();
    },
    $isFormatException: 1,
    get$buffer(receiver) {
      return this.buffer;
    },
    get$position(receiver) {
      return this.position;
    }
  };
  A._XmlParserException_XmlException_XmlFormatException.prototype = {};
  A.XmlCache.prototype = {
    $index(_, key) {
      var t1, t2, t3, it, _this = this;
      _this.$ti._precomputed1._as(key);
      t1 = _this._cache0$_values;
      if (!t1.containsKey$1(0, key)) {
        t1.$indexSet(0, key, _this._loader.call$1(key));
        for (t2 = _this._maxSize, t3 = C._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"); t1.__js_helper$_length > t2;) {
          it = new C.LinkedHashMapKeysIterable(t1, t3).get$iterator(0);
          if (!it.moveNext$0())
            C.throwExpression(C.IterableElementError_noElement());
          t1.remove$1(0, it.get$current(0));
        }
      }
      t1 = t1.$index(0, key);
      t1.toString;
      return t1;
    }
  };
  A.XmlCharacterDataParser.prototype = {
    parseOn$1(context) {
      var t1,
        buffer = context.buffer,
        position = context.position,
        end = buffer.length,
        index = position < end ? D.JSString_methods.indexOf$2(buffer, this._stopper, position) : end;
      end = index === -1 ? end : index;
      if (end - position < this._character_data_parser$_minLength)
        return new A.Failure("Unable to parse character data.", buffer, position);
      else {
        t1 = D.JSString_methods.substring$2(buffer, position, end);
        return new A.Success(t1, buffer, end, type$.Success_String);
      }
    },
    fastParseOn$2(buffer, position) {
      var end = buffer.length,
        index = position < end ? D.JSString_methods.indexOf$2(buffer, this._stopper, position) : end;
      end = index === -1 ? end : index;
      return end - position < this._character_data_parser$_minLength ? -1 : end;
    }
  };
  A.XmlAnnotator.prototype = {
    annotate$4$buffer$start$stop($event, buffer, start, $stop) {
    }
  };
  A.XmlHasBuffer.prototype = {};
  A.XmlHasLocation.prototype = {};
  A.XmlHasParent.prototype = {};
  A.XmlEventEncoder.prototype = {
    convert$1(input) {
      var buffer, t1;
      type$.List_XmlEvent._as(input);
      buffer = new C.StringBuffer("");
      t1 = type$.Sink_String._as(new A.ConversionSink(buffer.get$write(buffer), type$.ConversionSink_String));
      J.forEach$1$ax(input, new A._XmlEventEncoderSink(t1, this.entityMapping).get$visit());
      t1.close$0(0);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    startChunkedConversion$1(sink) {
      return new A._XmlEventEncoderSink(type$.Sink_String._as(sink), this.entityMapping);
    }
  };
  A._XmlEventEncoderSink.prototype = {
    add$1(_, chunk) {
      return J.forEach$1$ax(type$.List_XmlEvent._as(chunk), this.get$visit());
    },
    close$0(_) {
      return this.sink.close$0(0);
    },
    addAttributes$1(attributes) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = J.get$iterator$ax(type$.List_XmlEventAttribute._as(attributes)), t2 = this.sink, t3 = this.entityMapping; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        t2.add$1(0, " ");
        t2.add$1(0, t4.name);
        t2.add$1(0, "=");
        t5 = t4.value;
        t4 = t4.attributeType;
        t6 = t4.token;
        t2.add$1(0, t6 + t3.encodeAttributeValue$2(t5, t4) + t6);
      }
    },
    $isSink: 1
  };
  A.__XmlEventEncoderSink_Object_XmlEventVisitor.prototype = {};
  A.XmlEvent.prototype = {
    toString$0(_) {
      return new A.XmlEventEncoder(B.C_XmlDefaultEntityMapping).convert$1(C._setArrayType([this], type$.JSArray_XmlEvent));
    }
  };
  A._XmlEvent_Object_XmlHasParent.prototype = {};
  A._XmlEvent_Object_XmlHasParent_XmlHasLocation.prototype = {};
  A._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer.prototype = {};
  A.XmlCDATAEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<![CDATA[");
      t1.add$1(0, this.value);
      t1.add$1(0, "]]>");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_1, this.value, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlCDATAEvent && other.value === this.value;
    }
  };
  A.XmlCommentEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<!--");
      t1.add$1(0, this.value);
      t1.add$1(0, "-->");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_2, this.value, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlCommentEvent && other.value === this.value;
    }
  };
  A.XmlDeclarationEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<?xml");
      visitor.addAttributes$1(this.attributes);
      t1.add$1(0, "?>");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_3, B.ListEquality_DefaultEquality0.hash$1(0, this.attributes), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlDeclarationEvent && B.ListEquality_DefaultEquality0.equals$2(other.attributes, this.attributes);
    }
  };
  A.XmlDoctypeEvent.prototype = {
    accept$1(_, visitor) {
      var externalId, intSubset,
        t1 = visitor.sink;
      t1.add$1(0, "<!DOCTYPE");
      t1.add$1(0, " ");
      t1.add$1(0, this.name);
      externalId = this.externalId;
      if (externalId != null) {
        t1.add$1(0, " ");
        t1.add$1(0, externalId.toString$0(0));
      }
      intSubset = this.internalSubset;
      if (intSubset != null) {
        t1.add$1(0, " ");
        t1.add$1(0, "[");
        t1.add$1(0, intSubset);
        t1.add$1(0, "]");
      }
      t1.add$1(0, ">");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_4, this.name, this.externalId, this.internalSubset, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlDoctypeEvent && this.name === other.name && J.$eq$(this.externalId, other.externalId) && this.internalSubset == other.internalSubset;
    }
  };
  A.XmlEndElementEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "</");
      t1.add$1(0, this.name);
      t1.add$1(0, ">");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_7, this.name, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlEndElementEvent && other.name === this.name;
    },
    get$name(receiver) {
      return this.name;
    }
  };
  A._XmlEndElementEvent_XmlEvent_XmlNamed.prototype = {};
  A.XmlProcessingEvent.prototype = {
    accept$1(_, visitor) {
      var t2,
        t1 = visitor.sink;
      t1.add$1(0, "<?");
      t1.add$1(0, this.target);
      t2 = this.value;
      if (t2.length !== 0) {
        t1.add$1(0, " ");
        t1.add$1(0, t2);
      }
      t1.add$1(0, "?>");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_10, this.value, this.target, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlProcessingEvent && other.target === this.target && other.value === this.value;
    }
  };
  A.XmlStartElementEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<");
      t1.add$1(0, this.name);
      visitor.addAttributes$1(this.attributes);
      if (this.isSelfClosing)
        t1.add$1(0, "/>");
      else
        t1.add$1(0, ">");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_7, this.name, this.isSelfClosing, B.ListEquality_DefaultEquality0.hash$1(0, this.attributes), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlStartElementEvent && other.name === this.name && other.isSelfClosing === this.isSelfClosing && B.ListEquality_DefaultEquality0.equals$2(other.attributes, this.attributes);
    },
    get$name(receiver) {
      return this.name;
    }
  };
  A._XmlStartElementEvent_XmlEvent_XmlNamed.prototype = {};
  A.XmlRawTextEvent.prototype = {
    get$value(_) {
      var result, _this = this,
        value = _this.__XmlRawTextEvent_value_FI;
      if (value === $) {
        result = _this.entityMapping.decode$1(0, _this.raw);
        _this.__XmlRawTextEvent_value_FI !== $ && C.throwLateFieldADI("value");
        _this.__XmlRawTextEvent_value_FI = result;
        value = result;
      }
      return value;
    },
    accept$1(_, visitor) {
      visitor.sink.add$1(0, C.stringReplaceAllFuncUnchecked(this.get$value(0), $.$get$_textPattern(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(A.default_mapping___textReplace$closure())), null));
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(B.XmlNodeType_11, this.get$value(0), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlRawTextEvent && other.get$value(0) === this.get$value(0);
    },
    $isXmlTextEvent: 1
  };
  A.XmlEventIterable.prototype = {
    get$iterator(_) {
      var t1 = C._setArrayType([], type$.JSArray_XmlEvent),
        t2 = C._setArrayType([], type$.JSArray_XmlStartElementEvent);
      return new A.XmlEventIterator($.$get$eventParserCache().$index(0, this.entityMapping), new A.XmlAnnotator(false, false, false, false, false, t1, t2), new A.Failure("", this.input, 0));
    }
  };
  A.XmlEventIterator.prototype = {
    get$current(_) {
      var t1 = this._iterator$_current;
      t1.toString;
      return t1;
    },
    moveNext$0() {
      var result, t1, t2, t3, _this = this,
        context = _this._iterator$_context;
      if (context != null) {
        result = _this._eventParser.parseOn$1(context);
        if (result instanceof A.Success) {
          _this.set$_iterator$_context(result);
          t1 = result.value;
          _this.set$_iterator$_current(t1);
          _this._annotator.annotate$4$buffer$start$stop(t1, context.buffer, context.position, result.position);
          return true;
        } else {
          t1 = context.position;
          t2 = context.buffer;
          if (t1 < t2.length) {
            t3 = result.get$message(result);
            _this.set$_iterator$_context(new A.Failure(t3, t2, t1 + 1));
            _this._iterator$_current = null;
            throw C.wrapException(A.XmlParserException$(result.get$message(result), result.buffer, result.position));
          } else {
            _this.set$_iterator$_context(null);
            _this._iterator$_current = null;
            return false;
          }
        }
      }
      return false;
    },
    set$_iterator$_context(_context) {
      this._iterator$_context = type$.nullable_Result_XmlEvent._as(_context);
    },
    set$_iterator$_current(_current) {
      this._iterator$_current = type$.nullable_XmlEvent._as(_current);
    },
    $isIterator: 1
  };
  A.XmlEventParser.prototype = {
    event$0() {
      var _this = this;
      return A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(_this.get$characterData(), D.List_empty10, type$.ReferenceParser_XmlTextEvent), new A.ReferenceParser(_this.get$startElement(), D.List_empty10, type$.ReferenceParser_XmlStartElementEvent), new A.ReferenceParser(_this.get$endElement(_this), D.List_empty10, type$.ReferenceParser_XmlEndElementEvent), new A.ReferenceParser(_this.get$comment(), D.List_empty10, type$.ReferenceParser_XmlCommentEvent), new A.ReferenceParser(_this.get$cdata(), D.List_empty10, type$.ReferenceParser_XmlCDATAEvent), new A.ReferenceParser(_this.get$declaration(), D.List_empty10, type$.ReferenceParser_XmlDeclarationEvent), new A.ReferenceParser(_this.get$processing(), D.List_empty10, type$.ReferenceParser_XmlProcessingEvent), new A.ReferenceParser(_this.get$doctype(), D.List_empty10, type$.ReferenceParser_XmlDoctypeEvent)], type$.JSArray_Parser_XmlEvent), A.failure_joiner__selectFarthest$closure(), type$.XmlEvent);
    },
    characterData$0() {
      return A.MapParserExtension_map(A.XmlCharacterDataParser$("<", 1), new A.XmlEventParser_characterData_closure(this), false, type$.String, type$.XmlTextEvent);
    },
    startElement$0() {
      var _this = this,
        t1 = type$.ReferenceParser_String,
        t2 = type$.String,
        t3 = type$.List_XmlEventAttribute;
      return A.RecordParserExtension5_map5(A.seq5(A.PredicateStringExtension_toParser("<"), new A.ReferenceParser(_this.get$nameToken(), D.List_empty10, t1), new A.ReferenceParser(_this.get$attributes(_this), D.List_empty10, type$.ReferenceParser_List_XmlEventAttribute), new A.ReferenceParser(_this.get$spaceOptional(), D.List_empty10, t1), A.ChoiceParser$(C._setArrayType([A.PredicateStringExtension_toParser(">"), A.PredicateStringExtension_toParser("/>")], type$.JSArray_Parser_String), A.failure_joiner__selectFirst$closure(), t2), t2, t2, t3, t2, t2), new A.XmlEventParser_startElement_closure(), t2, t2, t3, t2, t2, type$.XmlStartElementEvent);
    },
    attributes$0(_) {
      return A.PossessiveRepeatingParserExtension_repeat(new A.ReferenceParser(this.get$attribute(), D.List_empty10, type$.ReferenceParser_XmlEventAttribute), 0, 9007199254740991, type$.XmlEventAttribute);
    },
    attribute$0() {
      var _this = this,
        t1 = type$.ReferenceParser_String,
        t2 = type$.String,
        t3 = type$.Record_2_String_and_XmlAttributeType;
      return A.RecordParserExtension3_map3(A.seq3(new A.ReferenceParser(_this.get$space(), D.List_empty10, t1), new A.ReferenceParser(_this.get$nameToken(), D.List_empty10, t1), new A.ReferenceParser(_this.get$attributeAssignment(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), t2, t2, t3), new A.XmlEventParser_attribute_closure(_this), t2, t2, t3, type$.XmlEventAttribute);
    },
    attributeAssignment$0() {
      var t1 = this.get$spaceOptional(),
        t2 = type$.ReferenceParser_String,
        t3 = type$.String,
        t4 = type$.Record_2_String_and_XmlAttributeType;
      return new A.OptionalParser(B.Record2_wb7, A.RecordParserExtension4_map4(A.seq4(new A.ReferenceParser(t1, D.List_empty10, t2), A.PredicateStringExtension_toParser("="), new A.ReferenceParser(t1, D.List_empty10, t2), new A.ReferenceParser(this.get$attributeValue(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), t3, t3, t3, t4), new A.XmlEventParser_attributeAssignment_closure(), t3, t3, t3, t4, t4), type$.OptionalParser_Record_2_String_and_XmlAttributeType);
    },
    attributeValue$0() {
      var t1 = type$.ReferenceParser_Record_2_String_and_XmlAttributeType;
      return A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(this.get$attributeValueDoubleQuote(), D.List_empty10, t1), new A.ReferenceParser(this.get$attributeValueSingleQuote(), D.List_empty10, t1), new A.ReferenceParser(this.get$attributeValueNoQuote(), D.List_empty10, t1)], type$.JSArray_Parser_Record_2_String_and_XmlAttributeType), null, type$.Record_2_String_and_XmlAttributeType);
    },
    attributeValueDoubleQuote$0() {
      var t1 = type$.String;
      return A.RecordParserExtension3_map3(A.seq3(A.PredicateStringExtension_toParser('"'), A.XmlCharacterDataParser$('"', 0), A.PredicateStringExtension_toParser('"'), t1, t1, t1), new A.XmlEventParser_attributeValueDoubleQuote_closure(), t1, t1, t1, type$.Record_2_String_and_XmlAttributeType);
    },
    attributeValueSingleQuote$0() {
      var t1 = type$.String;
      return A.RecordParserExtension3_map3(A.seq3(A.PredicateStringExtension_toParser("'"), A.XmlCharacterDataParser$("'", 0), A.PredicateStringExtension_toParser("'"), t1, t1, t1), new A.XmlEventParser_attributeValueSingleQuote_closure(), t1, t1, t1, type$.Record_2_String_and_XmlAttributeType);
    },
    attributeValueNoQuote$0() {
      return A.MapParserExtension_map(new A.ReferenceParser(this.get$nameToken(), D.List_empty10, type$.ReferenceParser_String), new A.XmlEventParser_attributeValueNoQuote_closure(), false, type$.String, type$.Record_2_String_and_XmlAttributeType);
    },
    endElement$0(_) {
      var t1 = type$.ReferenceParser_String,
        t2 = type$.String;
      return A.RecordParserExtension4_map4(A.seq4(A.PredicateStringExtension_toParser("</"), new A.ReferenceParser(this.get$nameToken(), D.List_empty10, t1), new A.ReferenceParser(this.get$spaceOptional(), D.List_empty10, t1), A.PredicateStringExtension_toParser(">"), t2, t2, t2, t2), new A.XmlEventParser_endElement_closure(), t2, t2, t2, t2, type$.XmlEndElementEvent);
    },
    comment$0() {
      var t1 = type$.String;
      return A.RecordParserExtension3_map3(A.seq3(A.PredicateStringExtension_toParser("<!--"), new A.FlattenParser('"-->" expected', A.LazyRepeatingParser$(new A.AnyCharacterParser("input expected"), A.PredicateStringExtension_toParser("-->"), 0, 9007199254740991, t1)), A.PredicateStringExtension_toParser("-->"), t1, t1, t1), new A.XmlEventParser_comment_closure(), t1, t1, t1, type$.XmlCommentEvent);
    },
    cdata$0() {
      var t1 = type$.String;
      return A.RecordParserExtension3_map3(A.seq3(A.PredicateStringExtension_toParser("<![CDATA["), new A.FlattenParser('"]]>" expected', A.LazyRepeatingParser$(new A.AnyCharacterParser("input expected"), A.PredicateStringExtension_toParser("]]>"), 0, 9007199254740991, t1)), A.PredicateStringExtension_toParser("]]>"), t1, t1, t1), new A.XmlEventParser_cdata_closure(), t1, t1, t1, type$.XmlCDATAEvent);
    },
    declaration$0() {
      var t1 = type$.String,
        t2 = type$.List_XmlEventAttribute;
      return A.RecordParserExtension4_map4(A.seq4(A.PredicateStringExtension_toParser("<?xml"), new A.ReferenceParser(this.get$attributes(this), D.List_empty10, type$.ReferenceParser_List_XmlEventAttribute), new A.ReferenceParser(this.get$spaceOptional(), D.List_empty10, type$.ReferenceParser_String), A.PredicateStringExtension_toParser("?>"), t1, t2, t1, t1), new A.XmlEventParser_declaration_closure(), t1, t2, t1, t1, type$.XmlDeclarationEvent);
    },
    processing$0() {
      var t1 = type$.ReferenceParser_String,
        t2 = type$.String;
      return A.RecordParserExtension4_map4(A.seq4(A.PredicateStringExtension_toParser("<?"), new A.ReferenceParser(this.get$nameToken(), D.List_empty10, t1), new A.OptionalParser("", A.RecordParserExtension2_map2(A.seq2(new A.ReferenceParser(this.get$space(), D.List_empty10, t1), new A.FlattenParser('"?>" expected', A.LazyRepeatingParser$(new A.AnyCharacterParser("input expected"), A.PredicateStringExtension_toParser("?>"), 0, 9007199254740991, t2)), t2, t2), new A.XmlEventParser_processing_closure(), t2, t2, t2), type$.OptionalParser_String), A.PredicateStringExtension_toParser("?>"), t2, t2, t2, t2), new A.XmlEventParser_processing_closure0(), t2, t2, t2, t2, type$.XmlProcessingEvent);
    },
    doctype$0() {
      var _this = this,
        t1 = A.PredicateStringExtension_toParser("<!DOCTYPE"),
        t2 = _this.get$space(),
        t3 = type$.ReferenceParser_String,
        t4 = _this.get$spaceOptional(),
        t5 = type$.String;
      return A.RecordParserExtension8_map8(new A.SequenceParser8(t1, new A.ReferenceParser(t2, D.List_empty10, t3), new A.ReferenceParser(_this.get$nameToken(), D.List_empty10, t3), new A.OptionalParser(null, new A.SkipParser(new A.ReferenceParser(t2, D.List_empty10, type$.ReferenceParser_void), new A.EpsilonParser(null, type$.EpsilonParser_void), new A.ReferenceParser(_this.get$doctypeExternalId(), D.List_empty10, type$.ReferenceParser_DtdExternalId), type$.SkipParser_DtdExternalId), type$.OptionalParser_nullable_DtdExternalId), new A.ReferenceParser(t4, D.List_empty10, t3), new A.OptionalParser(null, new A.ReferenceParser(_this.get$doctypeIntSubset(), D.List_empty10, t3), type$.OptionalParser_nullable_String), new A.ReferenceParser(t4, D.List_empty10, t3), A.PredicateStringExtension_toParser(">"), type$.SequenceParser8_of_String_and_String_and_String_and_nullable_DtdExternalId_and_String_and_nullable_String_and_String_and_String), new A.XmlEventParser_doctype_closure(), t5, t5, t5, type$.nullable_DtdExternalId, t5, type$.nullable_String, t5, t5, type$.XmlDoctypeEvent);
    },
    doctypeExternalId$0() {
      var t1 = type$.ReferenceParser_DtdExternalId;
      return A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(this.get$doctypeExternalIdSystem(), D.List_empty10, t1), new A.ReferenceParser(this.get$doctypeExternalIdPublic(), D.List_empty10, t1)], type$.JSArray_Parser_DtdExternalId), null, type$.DtdExternalId);
    },
    doctypeExternalIdSystem$0() {
      var t1 = type$.String,
        t2 = type$.Record_2_String_and_XmlAttributeType;
      return A.RecordParserExtension3_map3(A.seq3(A.PredicateStringExtension_toParser("SYSTEM"), new A.ReferenceParser(this.get$space(), D.List_empty10, type$.ReferenceParser_String), new A.ReferenceParser(this.get$attributeValue(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), t1, t1, t2), new A.XmlEventParser_doctypeExternalIdSystem_closure(), t1, t1, t2, type$.DtdExternalId);
    },
    doctypeExternalIdPublic$0() {
      var t1 = this.get$space(),
        t2 = type$.ReferenceParser_String,
        t3 = this.get$attributeValue(),
        t4 = type$.ReferenceParser_Record_2_String_and_XmlAttributeType,
        t5 = type$.String,
        t6 = type$.Record_2_String_and_XmlAttributeType;
      return A.RecordParserExtension5_map5(A.seq5(A.PredicateStringExtension_toParser("PUBLIC"), new A.ReferenceParser(t1, D.List_empty10, t2), new A.ReferenceParser(t3, D.List_empty10, t4), new A.ReferenceParser(t1, D.List_empty10, t2), new A.ReferenceParser(t3, D.List_empty10, t4), t5, t5, t6, t5, t6), new A.XmlEventParser_doctypeExternalIdPublic_closure(), t5, t5, t6, t5, t6, type$.DtdExternalId);
    },
    doctypeIntSubset$0() {
      var _this = this,
        t1 = type$.ReferenceParser_dynamic,
        t2 = type$.dynamic,
        t3 = type$.String;
      return A.RecordParserExtension3_map3(A.seq3(A.PredicateStringExtension_toParser("["), new A.FlattenParser('"]" expected', A.LazyRepeatingParser$(A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(_this.get$doctypeElementDecl(), D.List_empty10, t1), new A.ReferenceParser(_this.get$doctypeAttlistDecl(), D.List_empty10, t1), new A.ReferenceParser(_this.get$doctypeEntityDecl(), D.List_empty10, t1), new A.ReferenceParser(_this.get$doctypeNotationDecl(), D.List_empty10, t1), new A.ReferenceParser(_this.get$processing(), D.List_empty10, type$.ReferenceParser_XmlProcessingEvent), new A.ReferenceParser(_this.get$comment(), D.List_empty10, type$.ReferenceParser_XmlCommentEvent), new A.ReferenceParser(_this.get$doctypeReference(), D.List_empty10, t1), new A.AnyCharacterParser("input expected")], type$.JSArray_Parser_dynamic), null, t2), A.PredicateStringExtension_toParser("]"), 0, 9007199254740991, t2)), A.PredicateStringExtension_toParser("]"), t3, t3, t3), new A.XmlEventParser_doctypeIntSubset_closure(), t3, t3, t3, t3);
    },
    doctypeElementDecl$0() {
      var t1 = type$.Object,
        t2 = type$.String;
      return A.seq3(A.PredicateStringExtension_toParser("<!ELEMENT"), A.LazyRepeatingParser$(A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(this.get$nameToken(), D.List_empty10, type$.ReferenceParser_String), new A.ReferenceParser(this.get$attributeValue(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new A.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, t1), A.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t1), A.PredicateStringExtension_toParser(">"), t2, type$.List_Object, t2);
    },
    doctypeAttlistDecl$0() {
      var t1 = type$.Object,
        t2 = type$.String;
      return A.seq3(A.PredicateStringExtension_toParser("<!ATTLIST"), A.LazyRepeatingParser$(A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(this.get$nameToken(), D.List_empty10, type$.ReferenceParser_String), new A.ReferenceParser(this.get$attributeValue(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new A.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, t1), A.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t1), A.PredicateStringExtension_toParser(">"), t2, type$.List_Object, t2);
    },
    doctypeEntityDecl$0() {
      var t1 = type$.Object,
        t2 = type$.String;
      return A.seq3(A.PredicateStringExtension_toParser("<!ENTITY"), A.LazyRepeatingParser$(A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(this.get$nameToken(), D.List_empty10, type$.ReferenceParser_String), new A.ReferenceParser(this.get$attributeValue(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new A.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, t1), A.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t1), A.PredicateStringExtension_toParser(">"), t2, type$.List_Object, t2);
    },
    doctypeNotationDecl$0() {
      var t1 = type$.Object,
        t2 = type$.String;
      return A.seq3(A.PredicateStringExtension_toParser("<!NOTATION"), A.LazyRepeatingParser$(A.ChoiceParser$(C._setArrayType([new A.ReferenceParser(this.get$nameToken(), D.List_empty10, type$.ReferenceParser_String), new A.ReferenceParser(this.get$attributeValue(), D.List_empty10, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new A.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, t1), A.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t1), A.PredicateStringExtension_toParser(">"), t2, type$.List_Object, t2);
    },
    doctypeReference$0() {
      var t1 = type$.String;
      return A.seq3(A.PredicateStringExtension_toParser("%"), new A.ReferenceParser(this.get$nameToken(), D.List_empty10, type$.ReferenceParser_String), A.PredicateStringExtension_toParser(";"), t1, t1, t1);
    },
    space$0() {
      var _s19_ = "whitespace expected";
      return A.RepeatingCharacterParserExtension_repeatString(new A.SingleCharacterParser(B.C_WhitespaceCharPredicate, _s19_), 1, 9007199254740991, _s19_);
    },
    spaceOptional$0() {
      var _s19_ = "whitespace expected";
      return A.RepeatingCharacterParserExtension_repeatString(new A.SingleCharacterParser(B.C_WhitespaceCharPredicate, _s19_), 0, 9007199254740991, _s19_);
    },
    nameToken$0() {
      var t1 = type$.ReferenceParser_String,
        t2 = type$.String;
      return new A.FlattenParser("name expected", A.seq2(new A.ReferenceParser(this.get$nameStartChar(), D.List_empty10, t1), A.PossessiveRepeatingParserExtension_repeat(new A.ReferenceParser(this.get$nameChar(), D.List_empty10, t1), 0, 9007199254740991, t2), t2, type$.List_String));
    },
    nameStartChar$0() {
      return A.pattern(":A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd", null);
    },
    nameChar$0() {
      return A.pattern(":A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd-.0-9\xb7\u0300-\u036f\u203f-\u2040", null);
    }
  };
  A.ConversionSink.prototype = {
    add$1(_, data) {
      this.$ti._precomputed1._as(data);
      return this.callback.call$1(data);
    },
    close$0(_) {
    },
    $isSink: 1
  };
  A.XmlEventAttribute.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.name, this.value, this.attributeType, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.XmlEventAttribute && other.name === this.name && other.value === this.value && other.attributeType === this.attributeType;
    },
    get$name(receiver) {
      return this.name;
    }
  };
  A._XmlEventAttribute_Object_XmlNamed.prototype = {};
  A._XmlEventAttribute_Object_XmlNamed_XmlHasParent.prototype = {};
  A.XmlNamed.prototype = {
    get$localName(_) {
      var _this = this,
        index = D.JSString_methods.indexOf$1(_this.get$name(_this), ":");
      return index > 0 ? D.JSString_methods.substring$1(_this.get$name(_this), index + 1) : _this.get$name(_this);
    }
  };
  A.XmlEventVisitor.prototype = {
    visit$1($event) {
      return type$.XmlEvent._as($event).accept$1(0, this);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["GreenNode(TexParser,FunctionContext)", "double(double)", "~()", "~(SvgParser,bool)", "MacroExpansion(MacroContext)", "String(MacroContext)", "~(bool)", "GreenNode(TexParser,EnvContext)", "~(LocalDate)", "AffineMatrix(List<double>,AffineMatrix)", "Parser<String>()", "Path(SvgParser)", "Parser<+(String,XmlAttributeType)>()", "Parser<@>()", "~(double)", "Widget(BuildContext,int)", "double(BuildContext)", "~(int)", "EquationRowNode(List<EquationRowNode>)", "Failure(Failure,Failure)", "bool(DelimiterConf)", "SymbolNode(String)", "String(Token)", "String(MatrixSeparatorStyle)", "Widget(BuildContext,@,ChatCustomMessage,~(),bool,ChatTheme)", "Parser<DtdExternalId>()", "~(DragStartDetails)", "String(Match)", "~(TapDownDetails)", "bool(LocalDate)", "String(TextSegment)", "+bodyMedium,labelSmall,onPrimary,onSurface,primary,shape,surfaceContainer(TextStyle,TextStyle,Color,Color,Color,BorderRadiusGeometry,Color)(ChatTheme)", "~(DragUpdateDetails)", "~(DragEndDetails)", "String(GreenNode)", "List<GreenNode>(EquationRowNode)", "String(Measurement)", "int(GreenNode)", "String(LocalDate)", "SelectableAdapter(BuildContext,String,TextStyle,bool)", "Text(FlutterMathException)", "~(TDCheckbox)", "~(TDRadio)", "~(_NodeSpacingConf?,_NodeSpacingConf?)", "List<GreenNode>(GreenNode)", "List<BuildResult>(BuildResult?)", "bool(List<TDSkeletonRowColObj>)", "Map<String,Object?>(GreenNode)", "+(String,XmlAttributeType)(String,String,String)", "AlignmentGeometryTween(@)", "~(ChatOperation)", "List<EquationRowNode?>(List<EquationRowNode?>)", "Color(BuildContext)", "double(Measurement)", "Map<String,Object?>(EquationRowNode)", "Path?(SvgParser)", "DateTime(int[int,int,int,int,int,int,int])", "~(TapUpDetails)", "bool(Measurement)", "FlyerChatTextStreamMessage(BuildContext,TextStreamMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "FlyerChatImageMessage(BuildContext,ImageMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "ChatCustomMessage(BuildContext,CustomMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "LineElement(int)", "QuestionnairePage()", "bool(List<EquationRowNode?>)", "int(List<EquationRowNode?>)", "~(Map<String,@>,bool)", "CustomLayoutId<int>?(int,BuildResult?)", "String(MatrixColumnAlign)", "Future<int>()", "bool(MatrixSeparatorStyle)", "Iterable<Map<String,Object?>?>(List<EquationRowNode?>)", "Map<String,Object?>?(EquationRowNode?)", "ShiftBaseline(BuildContext,BoxConstraints)", "~(DragEndDetails{isClosing:bool?})", "~(bool?)", "TDFormItem(Question)", "~(RangeValues)", "Thumb?(TextDirection,RangeValues,double,Size,Size,double)", "MathOptions(BuildResult)", "_NodeSpacingConf(int)", "TDCheckboxGroupContainer(BuildContext,BoxConstraints)", "Widget(BuildContext,FlutterMathMode,Widget?)", "TextSelection(BuildContext,MathController,TextSelection?)", "Tuple3<TextSelection,LayerLink?,LayerLink?>(BuildContext,TextSelection,Tuple2<LayerLink,LayerLink>)", "EditableLine(BuildContext,Tuple3<TextSelection,LayerLink?,LayerLink?>,Widget?)", "~(List<String>,EnvSpec)", "TDCheckbox(@)", "TDRadioGroup(BuildContext,BoxConstraints)", "TDRadio(@)", "~(List<String>,FunctionSpec<GreenNode>)", "TexSymbolConfig(String)", "bool(TexSymbolConfig)", "EquationRowNode(List<GreenNode>)", "bool(GreenNode?)", "String(GreenNode?)", "List<Token>(int)", "~(TapDragUpDetails)", "~(TextSelection,SelectionChangedCause?)", "TDConfirmDialog(BuildContext,~(~()))", "+labelSmall,onSurface,shape,surfaceContainerLow(TextStyle,Color,BorderRadiusGeometry,Color)(ChatTheme)", "Widget(BuildContext,AsyncSnapshot<double>)", "FCalendar(Map<DateTime,int>)", "bool(TextSegment)", "TextSpan(TextSegment)", "Header(BuildContext,LocalDate,Widget?)", "StatefulWidget(BuildContext,FCalendarPickerType,Widget?)", "FutureBuilder<Map<DateTime,int>>(BuildContext,~(~()))", "FDialog(BuildContext,AsyncSnapshot<Map<DateTime,int>>)", "BoxConstraintsTween(@)", "Matrix4Tween(@)", "~(NextFocusIntent)", "~(PreviousFocusIntent)", "~(DirectionalFocusIntent)", "VerticalContent(BuildContext,FDialogStyle)", "String(MarkdownComponent)", "~([Intent?])", "~([TapUpDetails?])", "CustomImageError(BuildContext,Object,StackTrace?)", "int(RangeCharPredicate,RangeCharPredicate)", "int(int,RangeCharPredicate)", "RangeCharPredicate(String)", "RangeCharPredicate(String,String,String)", "CharacterPredicate(String?,CharacterPredicate)", "double()", "~(BuildContext)", "Type(ObserverAutoTriggerObserveType)", "_Shimmer(BuildContext,Widget?)", "Widget(BuildContext,Message,int,Animation<double>{isRemoved:bool?,messageGroupingTimeoutInSeconds:int?,messagesGroupingMode:MessagesGroupingMode?})", "Expanded(TDCheckbox)", "List<Widget>(TDFormItem)", "@()", "Widget?(BuildContext{currentLength!int,isFocused!bool,maxLength!int?})", "UserCache(BuildContext)", "Expanded(TDRadio)", "Widget(TDSkeletonRowColObj)", "Row(List<TDSkeletonRowColObj>)", "ComposerHeightNotifier(BuildContext)", "bool(TDSkeletonRowColObj)", "double(List<TDSkeletonRowColObj>)", "double(double,TDSkeletonRowColObj)", "Future<PictureInfo>()", "PictureInfo(~)", "OneFrameImageStreamCompleter()", "Future<PictureInfo>(ByteData)", "_PictureData(PictureInfo)", "double(Point,Point,Point,Point,double)", "AttributedNode?(String)", "List<Path>(String)", "~(Node0?)", "Path(PathBuilder)", "List<Gradient0>()", "List<Node0>()", "AttributedNode()", "~(Node0)", "Parser<XmlEvent>()", "Parser<XmlTextEvent>()", "Parser<XmlStartElementEvent>()", "Parser<List<XmlEventAttribute>>()", "Parser<XmlEventAttribute>()", "LoadMoreNotifier(BuildContext)", "Parser<XmlEndElementEvent>()", "Parser<XmlCommentEvent>()", "Parser<XmlCDATAEvent>()", "Parser<XmlDeclarationEvent>()", "Parser<XmlProcessingEvent>()", "Parser<XmlDoctypeEvent>()", "Future<~>(String{alignment:double,curve:Curve,duration:Duration,offset:double})", "Future<~>(int{alignment:double,curve:Curve,duration:Duration,offset:double})", "Future<User>(String)", "XmlRawTextEvent(String)", "XmlStartElementEvent(String,String,List<XmlEventAttribute>,String,String)", "XmlEventAttribute(String,String,+(String,XmlAttributeType))", "+(String,XmlAttributeType)(String,String,String,+(String,XmlAttributeType))", "SliverPadding(BuildContext,ComposerHeightNotifier,Widget?)", "+(String,XmlAttributeType)(String)", "XmlEndElementEvent(String,String,String,String)", "XmlCommentEvent(String,String,String)", "XmlCDATAEvent(String,String,String)", "XmlDeclarationEvent(String,List<XmlEventAttribute>,String,String)", "XmlProcessingEvent(String,String,String,String)", "XmlDoctypeEvent(String,String,String,DtdExternalId?,String,String?,String,String)", "DtdExternalId(String,String,+(String,XmlAttributeType))", "DtdExternalId(String,String,+(String,XmlAttributeType),String,+(String,XmlAttributeType))", "Parser<XmlEvent>(XmlEntityMapping)", "~(XmlEvent)", "int(_Diagonal,_Diagonal)", "Widget(BuildContext,EditableTextState)", "Size(RenderBox)", "~(Offset,RenderBox)", "KeyEventResult(FocusNode,KeyEvent)", "~(String)", "Widget(FlutterMathException)", "Widget(BuildContext,+current,date,selectable,selected,style,today(bool,DateTime,bool,bool,FCalendarDayPickerStyle,bool),Widget?)", "bool(DateTime)", "CharacterPredicate(Iterable<RangeCharPredicate>)", "~(BuildContext,ChangeNotifier?)", "~()(InheritedContext<Listenable?>,Listenable?)", "+bodyMedium,onSurface,primary,surfaceContainerHigh,surfaceContainerLow(TextStyle,Color,Color,Color,Color)(ChatTheme)", "+bodyLarge,onSurface(TextStyle,Color)(ChatTheme)", "+onSurface,surfaceContainer(Color,Color)(ChatTheme)", "Positioned(BuildContext,ComposerHeightNotifier,Widget?)", "Composer(BuildContext)", "ResetDimension(BuildContext,BoxConstraints)", "FlyerChatTextMessage(BuildContext,TextMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "String(int)", "Widget(BuildResult?)", "~(_AdjustSliderIntent)"]);
  A._asyncStarHelper_closure.prototype = {
    call$0() {
      var t3,
        t1 = this.controller,
        t2 = t1.___AsyncStarStreamController_controller_A;
      t2 === $ && C.throwLateFieldNI("controller");
      t3 = t2._state;
      if ((t3 & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t3 & 2) === 0) {
        t1.isSuspended = true;
        return;
      }
      t1 = t1.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(t1, null);
    },
    $signature: 0
  };
  A._asyncStarHelper_closure0.prototype = {
    call$1(__wc0_formal) {
      var errorCode = this.controller.cancelationFuture != null ? 2 : 0;
      this.bodyFunction.call$2(errorCode, null);
    },
    $signature: 18
  };
  A._AsyncStarStreamController__resumeBody.prototype = {
    call$0() {
      C.scheduleMicrotask(new A._AsyncStarStreamController__resumeBody_closure(this.body));
    },
    $signature: 11
  };
  A._AsyncStarStreamController__resumeBody_closure.prototype = {
    call$0() {
      this.body.call$2(0, null);
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure0.prototype = {
    call$0() {
      this._resumeBody.call$0();
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.isSuspended) {
        t1.isSuspended = false;
        this._resumeBody.call$0();
      }
    },
    $signature: 0
  };
  A._AsyncStarStreamController_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___AsyncStarStreamController_controller_A;
      t2 === $ && C.throwLateFieldNI("controller");
      if ((t2._state & 4) === 0) {
        t1.cancelationFuture = new C._Future($.Zone__current, type$._Future_dynamic);
        if (t1.isSuspended) {
          t1.isSuspended = false;
          C.scheduleMicrotask(new A._AsyncStarStreamController__closure(this.body));
        }
        return t1.cancelationFuture;
      }
    },
    $signature: 773
  };
  A._AsyncStarStreamController__closure.prototype = {
    call$0() {
      this.body.call$2(2, null);
    },
    $signature: 0
  };
  A._File_length_closure.prototype = {
    call$1(response) {
      A._checkForErrorResponse(response, "Cannot retrieve length of file", this.$this._io$_path);
      return response;
    },
    $signature: 92
  };
  A.ChatCustomMessageState_refresh_closure.prototype = {
    call$0() {
      return this.$this._custom_message$_initialized = true;
    },
    $signature: 0
  };
  A.EventRegistry_builders_closure.prototype = {
    call$6(context, data, widget, __wc0_formal, isSentByMe, theme) {
      var t1;
      type$.void_Function._as(__wc0_formal);
      type$.Questionnaire._as(data);
      t1 = J.any$1$ax(data.questions, new A.EventRegistry_builders__closure0()) ? "\u5df2\u63d0\u4ea4\u95ee\u5377" : "\u70b9\u51fb\u67e5\u770b\u95ee\u5377";
      return A.buildCard(context, isSentByMe, theme, t1, new A.EventRegistry_builders__closure1(data, widget), data.title);
    },
    $signature: typesOffset + 24
  };
  A.EventRegistry_builders__closure0.prototype = {
    call$1(q) {
      var t1 = type$.Question._as(q).answer;
      return t1 != null && J.toString$0$(t1).length !== 0;
    },
    $signature: 278
  };
  A.EventRegistry_builders__closure1.prototype = {
    call$0() {
      var t1 = this.widget,
        t2 = type$.dynamic,
        t3 = C.GetNavigation_to($.$get$Get(), new A.EventRegistry_builders___closure(this.data, t1), t2);
      return t3 == null ? null : t3.then$1$1(0, new A.EventRegistry_builders___closure0(t1), t2);
    },
    $signature: 0
  };
  A.EventRegistry_builders___closure.prototype = {
    call$0() {
      return new A.QuestionnairePage(this.data, null);
    },
    $signature: typesOffset + 63
  };
  A.EventRegistry_builders___closure0.prototype = {
    call$1(value) {
      var t1;
      if (value != null) {
        $.$get$Get();
        t1 = $.$get$GetNavigation__getxController()._key;
        t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null;
      } else
        t1 = false;
      if (t1) {
        t1 = this.widget;
        t1 = t1.sendMessage.call$2(type$.CustomMessage._as(value), t1.sessionId);
      } else
        t1 = null;
      return t1;
    },
    $signature: 41
  };
  A.EventRegistry_builders_closure0.prototype = {
    call$6(context, data, widget, refresh, isSentByMe, theme) {
      var t1, t2;
      type$.void_Function._as(refresh);
      if (J.get$isEmpty$asx(type$.Map_dynamic_dynamic._as(data)))
        t1 = A.buildUnsupportedCard(context, isSentByMe, theme, "\u8bb0\u5f55\u5df2\u5220\u9664");
      else {
        t1 = $.$get$recordBuilders();
        t2 = widget.message.get$metadata(0);
        t2.toString;
        t1 = t1.$index(0, J.$index$asx(J.$index$asx(t2, "data"), "type")) == null ? A.buildUnsupportedCard(context, isSentByMe, theme, "\u6682\u4e0d\u652f\u6301\u7684\u8bb0\u5f55\u7c7b\u578b") : A.buildCard(context, isSentByMe, theme, "\u70b9\u51fb\u67e5\u770b\u8be6\u60c5\u6216\u624b\u52a8\u4fee\u6b63", new A.EventRegistry_builders__closure(widget, refresh), "\u8bb0\u5f55\u5df2\u66f4\u65b0");
      }
      return t1;
    },
    $signature: typesOffset + 24
  };
  A.EventRegistry_builders__closure.prototype = {
    call$0() {
      var t1 = $.$get$Get(),
        t2 = this.widget.message.get$metadata(0);
      t2.toString;
      return C.ExtensionDialog_dialog(t1, new E.RecordDetailDialog(t2, this.refresh, null), type$.dynamic);
    },
    $signature: 0
  };
  A.EventRegistry_builders_closure1.prototype = {
    call$6(context, data, widget, __wc1_formal, isSentByMe, theme) {
      var t1, t2, _null = null;
      type$.void_Function._as(__wc1_formal);
      t1 = J.toString$0$(data);
      t2 = A.messageCardColor(isSentByMe, true, true);
      t2 = C.BoxDecoration$(_null, _null, C.BorderRadius$circular(12), C._setArrayType([C.BoxShadow$(6, D.BlurStyle_0, $.$get$shadowColor(), B.Offset_0_3, 0)], type$.JSArray_BoxShadow), t2, _null, _null, D.BoxShape_0);
      return C.Container$(_null, C.Text$(t1, _null, _null, _null, _null, _null, _null, _null, theme.typography.bodyMedium.copyWith$1$color(A.messageCardColor(isSentByMe, false, true)), _null, _null, _null, _null, _null), D.Clip_0, _null, _null, t2, _null, _null, _null, D.EdgeInsets_12_6_12_6, D.EdgeInsets_16_12_16_12, _null, _null, _null);
    },
    $signature: typesOffset + 24
  };
  A._QuestionnairePageState_initState_closure.prototype = {
    call$1(e) {
      return J.toString$0$(e);
    },
    $signature: 83
  };
  A._QuestionnairePageState__onReset_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._QuestionnairePageState__onChanged_closure.prototype = {
    call$1(q) {
      return type$.Question._as(q).id === this.qid;
    },
    $signature: 278
  };
  A._QuestionnairePageState_build_closure.prototype = {
    call$1(q) {
      var _0_0, t1, t2, _this = this;
      type$.Question._as(q);
      _0_0 = q.type;
      if ("multi" === _0_0)
        return A.TDFormItem$(_this.$this._checkbox$3(_this.context, q.options, q.id), "", q.text, B.TDFormItemType_1);
      if ("single" === _0_0)
        return A.TDFormItem$(_this.$this._radio$3(_this.context, q.options, q.id), "", q.text, B.TDFormItemType_1);
      if ("number" === _0_0) {
        t1 = J.map$1$1$ax(q.options, new A._QuestionnairePageState_build__closure(), type$.double);
        return A.TDFormItem$(_this.$this._slider$3(_this.context, C.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")), q.id), "", q.text, B.TDFormItemType_4);
      }
      if ("text" === _0_0) {
        t1 = q.options;
        t2 = J.getInterceptor$asx(t1);
        t1 = t2.get$isEmpty(t1) ? "\u8bf7\u8f93\u5165" : t2.get$first(t1);
        return A.TDFormItem$(_this.$this._questionnaire_page$_input$3(_this.context, t1, q.id), "", q.text, B.TDFormItemType_0);
      }
      t1 = q.text;
      return A.TDFormItem$(null, "\u8bf7\u8f93\u5165" + t1, t1, B.TDFormItemType_0);
    },
    $signature: typesOffset + 76
  };
  A._QuestionnairePageState_build__closure.prototype = {
    call$1(e) {
      return C.double_parse(C._asString(e));
    },
    $signature: 775
  };
  A._QuestionnairePageState__checkbox_closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this;
      t2 = this.qid;
      t3 = type$.nullable_List_String._as(t1._questionnaire_page$_controller.$index(0, t2));
      t4 = J.map$1$1$ax(this.options, new A._QuestionnairePageState__checkbox__closure(), type$.TDCheckbox);
      return A.TDCheckboxGroupContainer$(D.Axis_1, C.List_List$of(t4, true, t4.$ti._eval$1("ListIterable.E")), new A._QuestionnairePageState__checkbox__closure0(t1, t2), t3);
    },
    $signature: typesOffset + 81
  };
  A._QuestionnairePageState__checkbox__closure.prototype = {
    call$1(opt) {
      var t1, t2, t3, _null = null;
      if (type$.Map_dynamic_dynamic._is(opt)) {
        t1 = J.getInterceptor$asx(opt);
        t2 = t1.$index(opt, "id");
        t2.toString;
        C._asStringQ(t2);
        t3 = t1.$index(opt, "title");
        t3.toString;
        C._asStringQ(t3);
        t1 = t1.$index(opt, "subTitle");
        t1.toString;
        t3 = A.TDCheckbox$(_null, false, _null, B.TDContentDirection_1, _null, _null, _null, _null, true, t2, 16, _null, _null, false, B.TDCheckBoxSize_1, _null, B.TDCheckboxStyle_1, C._asStringQ(t1), _null, _null, 1, t3, _null, _null, _null);
        t1 = t3;
      } else {
        t1 = J.getInterceptor$(opt);
        t1 = A.TDCheckbox$(_null, false, _null, B.TDContentDirection_1, _null, _null, _null, _null, true, t1.toString$0(opt), 16, _null, _null, false, B.TDCheckBoxSize_1, _null, B.TDCheckboxStyle_1, _null, _null, _null, 1, t1.toString$0(opt), _null, _null, _null);
      }
      return t1;
    },
    $signature: typesOffset + 87
  };
  A._QuestionnairePageState__checkbox__closure0.prototype = {
    call$1(v) {
      return this.$this._onChanged$2(this.qid, type$.List_String._as(v));
    },
    $signature: 138
  };
  A._QuestionnairePageState__radio_closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this;
      t2 = this.qid;
      t3 = C._asStringQ(t1._questionnaire_page$_controller.$index(0, t2));
      t4 = J.map$1$1$ax(this.options, new A._QuestionnairePageState__radio__closure(), type$.TDRadio);
      return A.TDRadioGroup$(D.Axis_1, C.List_List$of(t4, true, t4.$ti._eval$1("ListIterable.E")), new A._QuestionnairePageState__radio__closure0(t1, t2), t3);
    },
    $signature: typesOffset + 88
  };
  A._QuestionnairePageState__radio__closure.prototype = {
    call$1(opt) {
      var t1, t2, t3;
      if (type$.Map_dynamic_dynamic._is(opt)) {
        t1 = J.getInterceptor$asx(opt);
        t2 = t1.$index(opt, "id");
        t2.toString;
        C._asStringQ(t2);
        t3 = t1.$index(opt, "title");
        t3.toString;
        C._asStringQ(t3);
        t1 = t1.$index(opt, "subTitle");
        t1.toString;
        t3 = A.TDRadio$(t2, false, C._asStringQ(t1), t3);
        t1 = t3;
      } else {
        t1 = J.getInterceptor$(opt);
        t1 = A.TDRadio$(t1.toString$0(opt), false, null, t1.toString$0(opt));
      }
      return t1;
    },
    $signature: typesOffset + 89
  };
  A._QuestionnairePageState__radio__closure0.prototype = {
    call$1(v) {
      return this.$this._onChanged$2(this.qid, v);
    },
    $signature: 147
  };
  A._QuestionnairePageState__slider_closure.prototype = {
    call$1(v) {
      return this.$this._onChanged$2(this.qid, v);
    },
    $signature: 44
  };
  A._QuestionnairePageState__input_closure.prototype = {
    call$1(v) {
      return this.$this._onChanged$2(this.qid, v);
    },
    $signature: 35
  };
  A._SliderState_toggleRange_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._widget.controller,
        t3 = this.min;
      t2.set$value(0, t2._change_notifier$_value instanceof A.RangeValues ? t3 : new A.RangeValues(t3, this.max));
      t1 = t1._widget;
      t1.onChanged$1(t1.controller._change_notifier$_value);
    },
    $signature: 0
  };
  A._SliderState_build_closure.prototype = {
    call$1(v) {
      return D.JSNumber_methods.toStringAsFixed$1(v, 1);
    },
    $signature: 154
  };
  A._SliderState_build_closure0.prototype = {
    call$1(v) {
      return D.JSNumber_methods.toStringAsFixed$1(v, 0);
    },
    $signature: 154
  };
  A._SliderState_build_closure1.prototype = {
    call$3(__wc0_formal, value, __wc1_formal) {
      var t6, t7, _this = this, _null = null,
        t1 = _this.$this,
        t2 = _this.min,
        t3 = _this.max,
        t4 = C.StyledList_toRow(C._setArrayType([C.IconButton$(_null, _null, _null, C.Icon$(t1._widget.controller._change_notifier$_value instanceof A.RangeValues ? B.IconData_58917_MaterialIcons_null_false : B.IconData_58919_MaterialIcons_null_false, _null, _null, _null), _null, _null, new A._SliderState_build__closure(t1, t2, t3), _null, _null, _null, _null)], type$.JSArray_IconButton), D.CrossAxisAlignment_2, D.MainAxisAlignment_1, D.MainAxisSize_1, _null),
        t5 = _this.sTD;
      if (t1._widget.controller._change_notifier$_value instanceof A.RangeValues) {
        t6 = D.JSNumber_methods.toString$0(t2);
        t7 = D.JSNumber_methods.toString$0(t3);
        t2 = value == null ? new A.RangeValues(t2, t3) : value;
        t5 = new A.TDRangeSlider(type$.RangeValues._as(t2), t6, t7, new A._SliderState_build__closure0(t1), t5, _null);
        t1 = t5;
      } else
        t1 = new A.TDSlider(C._asDouble(value == null ? t2 : value), D.JSNumber_methods.toString$0(t2), D.JSNumber_methods.toString$0(t3), new A._SliderState_build__closure1(t1), t5, _null);
      return C.StyledList_toColumn(C._setArrayType([t4, t1], type$.JSArray_Widget), D.CrossAxisAlignment_2, D.MainAxisAlignment_0, D.MainAxisSize_1);
    },
    $signature: 777
  };
  A._SliderState_build__closure.prototype = {
    call$0() {
      return this.$this.toggleRange$2(this.min, this.max);
    },
    $signature: 0
  };
  A._SliderState_build__closure0.prototype = {
    call$1(v) {
      return this.$this._widget.onChanged$1(v);
    },
    $signature: 280
  };
  A._SliderState_build__closure1.prototype = {
    call$1(v) {
      return this.$this._widget.onChanged$1(v);
    },
    $signature: 86
  };
  A.GetChatController_insertMessage_closure.prototype = {
    call$1(m) {
      var t1;
      type$.Message._as(m);
      t1 = this.message;
      return m.get$id(m) === t1.get$id(t1);
    },
    $signature: 79
  };
  A.GetChatController_removeMessage_closure.prototype = {
    call$1(m) {
      var t1;
      type$.Message._as(m);
      t1 = this.message;
      return m.get$id(m) === t1.get$id(t1);
    },
    $signature: 79
  };
  A.GetChatController_updateMessage_closure.prototype = {
    call$1(m) {
      var t1;
      type$.Message._as(m);
      t1 = this.oldMessage;
      return m.get$id(m) === t1.get$id(t1);
    },
    $signature: 79
  };
  A.GetChatController_handleSendMessage_closure.prototype = {
    call$1(msg) {
      return this.$call$body$GetChatController_handleSendMessage_closure(type$.Map_String_dynamic._as(msg));
    },
    $call$body$GetChatController_handleSendMessage_closure(msg) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, token, t2, t3, t4, t5, t1;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx(msg);
              switch (t1.$index(msg, "event")) {
                case "message":
                  token = C._asString(t1.$index(msg, "data"));
                  t1 = $async$self._box_0;
                  t1.accumulatedText = D.JSString_methods.$add(t1.accumulatedText, token);
                  if (J.get$length$asx(token) !== 0) {
                    t2 = $async$self.$this.sSM;
                    t3 = $async$self.streamId;
                    t1 = t1.accumulatedText;
                    t4 = t2.accumulatedTexts;
                    t5 = t4.$ti;
                    t5._precomputed1._as(t3);
                    t5._rest[1]._as(t1);
                    t5 = t4.RxObjectMixin___RxObjectMixin__value_A;
                    t5 === $ && C.throwLateFieldNI("_value");
                    J.$indexSet$ax(t5, t3, t1);
                    t4.NotifyManager_subject.add$1(0, t4.get$value(0));
                    t4 = t2.states;
                    t5 = t4.$ti;
                    t5._precomputed1._as(t3);
                    t1 = t5._rest[1]._as(new C.StreamStateStreaming(t1));
                    t5 = t4.RxObjectMixin___RxObjectMixin__value_A;
                    t5 === $ && C.throwLateFieldNI("_value");
                    J.$indexSet$ax(t5, t3, t1);
                    t4.NotifyManager_subject.add$1(0, t4.get$value(0));
                    t2.update$1(0, C._setArrayType([t3], type$.JSArray_Object));
                  }
                  break;
                default:
                  D.JSArray_methods.add$1($async$self.customs, msg);
              }
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 780
  };
  A.GetChatController_handleSendMessage_closure1.prototype = {
    call$1(err) {
      var t5,
        t1 = this.$this.sSM,
        t2 = this.streamId,
        t3 = err == null ? type$.Object._as(err) : err,
        t4 = t1.accumulatedTexts,
        accumulatedText = J.$index$asx(t4.get$value(0), t4.$ti._precomputed1._as(t2));
      t4 = t1.states;
      t5 = t4.$ti;
      t5._precomputed1._as(t2);
      t3 = t5._rest[1]._as(new C.StreamStateError(t3, accumulatedText));
      t5 = t4.RxObjectMixin___RxObjectMixin__value_A;
      t5 === $ && C.throwLateFieldNI("_value");
      J.$indexSet$ax(t5, t2, t3);
      t4.NotifyManager_subject.add$1(0, t4.get$value(0));
      t1.update$1(0, C._setArrayType([t2], type$.JSArray_Object));
    },
    $signature: 18
  };
  A.GetChatController_handleSendMessage_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, finalText, index, finalMessage, custom, qMessage, t6, t7, t8, _i, t9, t10, t1, t2, t3, t4, t5;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1.sSM;
              t3 = t2.accumulatedTexts;
              t4 = t3.get$value(0);
              t5 = t3.$ti._precomputed1._as($async$self.streamId);
              t4 = J.$index$asx(t4, t5);
              finalText = t4 == null ? "" : t4;
              t4 = t1._messages;
              index = D.JSArray_methods.indexWhere$1(t4, new A.GetChatController_handleSendMessage__closure(t5));
              $async$goto = !J.$eq$(index, -1) ? 2 : 3;
              break;
            case 2:
              // then
              finalMessage = C.TextMessage$(null, "server", new C.DateTime(Date.now(), 0, false).toUtc$0(), null, null, null, null, t5, null, null, null, null, null, null, null, null, finalText, null);
              $async$goto = 4;
              return C._asyncAwait(t1.updateMessage$2(D.JSArray_methods.$index(t4, index), finalMessage), $async$call$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return C._asyncAwait(t1._get_chat_controller$_storage.insert$2(0, t1.cSM.currentSessionId.get$value(0), finalMessage), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // join
              t4 = $async$self.customs, t6 = t4.length, t7 = t1._get_chat_controller$_storage, t8 = t1.cSM.currentSessionId, _i = 0;
            case 6:
              // for condition
              if (!(_i < t4.length)) {
                // goto after for
                $async$goto = 8;
                break;
              }
              custom = t4[_i];
              t9 = D.C_Uuid.v4$0();
              t10 = new C.DateTime(Date.now(), 0, false).toUtc$0();
              qMessage = new C.CustomMessage(t9, "server", null, t10, null, null, null, null, null, null, null, null, custom, null, "custom");
              $async$goto = 9;
              return C._asyncAwait(t1.insertMessage$1(qMessage), $async$call$0);
            case 9:
              // returning from await.
              t9 = $.RxInterface_proxy;
              if (t9 != null)
                t9.addListener$1(0, t8.NotifyManager_subject);
              t9 = t8.RxObjectMixin___RxObjectMixin__value_A;
              t9 === $ && C.throwLateFieldNI("_value");
              $async$goto = 10;
              return C._asyncAwait(t7.insert$2(0, t9, qMessage), $async$call$0);
            case 10:
              // returning from await.
            case 7:
              // for update
              t4.length === t6 || (0, C.throwConcurrentModificationError)(t4), ++_i;
              // goto for condition
              $async$goto = 6;
              break;
            case 8:
              // after for
              t2.states.remove$1(0, t5);
              t3.remove$1(0, t5);
              t2.update$1(0, C._setArrayType([t5], type$.JSArray_Object));
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A.GetChatController_handleSendMessage__closure.prototype = {
    call$1(m) {
      type$.Message._as(m);
      return m.get$id(m) === this.streamId;
    },
    $signature: 79
  };
  A.GetChatController_handleAttachmentTap_closure.prototype = {
    call$1(context) {
      var _null = null;
      return G.StyledWidget_safeArea(A.Wrap$(B.WrapAlignment_0, C._setArrayType([E.ListTile$(B.Icon_Sl6, _null, new A.GetChatController_handleAttachmentTap__closure(this.$this, type$.BuildContext._as(context), this.onUpdate), _null, B.Text_4Da)], type$.JSArray_ListTile), D.Clip_0, B.WrapCrossAlignment_0, D.Axis_0, _null, B.WrapAlignment_0, 0, 0, _null, D.VerticalDirection_1));
    },
    $signature: 24
  };
  A.GetChatController_handleAttachmentTap__closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, e, t1, t2, exception, $async$exception, $async$temp1, $async$temp2;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              t1 = $async$self.context;
              t2 = type$.nullable_Object;
              C.Navigator_of(t1, false).pop$1$1(null, t2);
              C.Navigator_of(t1, false).pop$1$1(null, t2);
              $async$temp1 = D.JSArray_methods;
              $async$temp2 = $async$self.$this._pendingImagePaths;
              $async$goto = 6;
              return C._asyncAwait(A.pickMediaPaths(), $async$call$0);
            case 6:
              // returning from await.
              $async$temp1.addAll$1($async$temp2, $async$result);
              $async$self.onUpdate.call$0();
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              e = C.unwrapException($async$exception);
              t1 = $.$get$Get();
              t2 = J.toString$0$(e);
              t1.log.call$1(t2);
              C.showError("\u4e0a\u4f20\u5931\u8d25");
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return C._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A.GetChatController_removeMessagesAfter_closure.prototype = {
    call$1(m) {
      type$.Message._as(m);
      return m.get$id(m) === this.messageId;
    },
    $signature: 79
  };
  A.__ChatPageState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._ChatPageState__initAsync_closure.prototype = {
    call$1(s) {
      var t2,
        t1 = type$.SessionInfo._as(s).date;
      t1 = C.DateTime$(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0);
      t2 = new C.DateTime(Date.now(), 0, false);
      return t1.$eq(0, C.DateTime$(C.Primitives_getYear(t2), C.Primitives_getMonth(t2), C.Primitives_getDay(t2), 0, 0, 0, 0, 0));
    },
    $signature: 781
  };
  A._ChatPageState__initAsync_closure0.prototype = {
    call$0() {
      return this.$this._chat_page$_initialized = true;
    },
    $signature: 0
  };
  A._ChatPageState__switchSession_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      t2.cSM.currentSessionId.set$value(0, this.sessionId);
      t1.___ChatPageState__cC_A.loadMessagesFromStorage$1(t1.get$context(0));
    },
    $signature: 0
  };
  A._ChatPageState__deleteSession_closure.prototype = {
    call$0() {
      return C.GetNavigation_back($.$get$Get(), false, type$.bool);
    },
    $signature: 0
  };
  A._ChatPageState__deleteSession_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$errorStack = [], $async$self = this, e, t1, t2, exception, $async$exception;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              t1 = $async$self.$this;
              t2 = t1.___ChatPageState__cC_A;
              t2 === $ && C.throwLateFieldNI("_cC");
              $async$goto = 6;
              return C._asyncAwait(t2.cSM.deleteSession$2(t2.uSM.get$currentToken(), $async$self.sessionId), $async$call$0);
            case 6:
              // returning from await.
              t1._switchSession$1(t1.___ChatPageState__cC_A.cSM.currentSessionId.get$value(0));
              C.GetNavigation_back($.$get$Get(), true, type$.bool);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              e = C.unwrapException($async$exception);
              $.$get$Get();
              t1 = $.$get$GetNavigation__getxController()._key;
              if (C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null)
                C.showError(e);
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return C._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 57
  };
  A._ChatPageState__showSessionSwitchDialog_closure.prototype = {
    call$2(context, setState) {
      var t1, t2, t3, t4, _null = null;
      type$.BuildContext._as(context);
      type$.void_Function_void_Function._as(setState);
      t1 = this.$this;
      t2 = this.sessions;
      t3 = J.getInterceptor$asx(t2);
      t4 = E.ListView$builder(_null, _null, new A._ChatPageState__showSessionSwitchDialog__closure(t1, t2, setState), t3.get$length(t2), _null, _null, D.Axis_1, false);
      return new A.TDConfirmDialog("\u9009\u62e9\u4f1a\u8bdd", C.StyledList_toColumn(C._setArrayType([new C.SizedBox(320, t3.get$length(t2) > 5 ? 300 : t3.get$length(t2) * 60, t4, _null)], type$.JSArray_SizedBox), D.CrossAxisAlignment_2, D.MainAxisAlignment_0, D.MainAxisSize_0), "\u65b0\u589e\u4f1a\u8bdd", new A._ChatPageState__showSessionSwitchDialog__closure0(t1, setState, this.date), _null);
    },
    $signature: typesOffset + 99
  };
  A._ChatPageState__showSessionSwitchDialog__closure0.prototype = {
    call$0() {
      return this.setState.call$1(new A._ChatPageState__showSessionSwitchDialog___closure(this.$this, this.date));
    },
    $signature: 0
  };
  A._ChatPageState__showSessionSwitchDialog___closure.prototype = {
    call$0() {
      var t1 = this.date,
        t2 = C.DateTime$(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0),
        t3 = new C.DateTime(Date.now(), 0, false);
      if (t2.$eq(0, C.DateTime$(C.Primitives_getYear(t3), C.Primitives_getMonth(t3), C.Primitives_getDay(t3), 0, 0, 0, 0, 0)))
        t1 = null;
      this.$this._createSession$1(0, t1);
      t1 = $.$get$Get();
      t2 = type$.dynamic;
      C.GetNavigation_back(t1, null, t2);
      C.GetNavigation_back(t1, null, t2);
    },
    $signature: 0
  };
  A._ChatPageState__showSessionSwitchDialog__closure.prototype = {
    call$2(__wc0_formal, index) {
      var t1, session, t2, t3, t4, _null = null;
      type$.BuildContext._as(__wc0_formal);
      C._asInt(index);
      t1 = this.sessions;
      session = J.$index$asx(t1, index);
      t2 = this.$this;
      t3 = t2.___ChatPageState__cC_A;
      t3 === $ && C.throwLateFieldNI("_cC");
      t3 = t3.cSM.currentSessionId.get$value(0);
      t4 = C.Text$(session.date.toString$0(0), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      return A.StyledWidget_toMaterial(E.ListTile$(C.Icon$(session.sessionId === t3 ? B.IconData_58627_MaterialIcons_null_false : B.IconData_58628_MaterialIcons_null_false, _null, _null, _null), new A._ChatPageState__showSessionSwitchDialog___closure0(t2, session, this.setState, t1, index), new A._ChatPageState__showSessionSwitchDialog___closure1(t2, session), _null, t4));
    },
    $signature: 782
  };
  A._ChatPageState__showSessionSwitchDialog___closure1.prototype = {
    call$0() {
      this.$this._switchSession$1(this.session.sessionId);
      C.GetNavigation_back($.$get$Get(), null, type$.dynamic);
    },
    $signature: 0
  };
  A._ChatPageState__showSessionSwitchDialog___closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return C._asyncAwait($async$self.$this._deleteSession$1($async$self.session.sessionId), $async$call$0);
            case 2:
              // returning from await.
              t1 = $async$result;
              if (C.boolConversionCheck(t1 == null ? false : t1))
                $async$self.setState.call$1(new A._ChatPageState__showSessionSwitchDialog____closure($async$self.sessions, $async$self.index));
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A._ChatPageState__showSessionSwitchDialog____closure.prototype = {
    call$0() {
      return J.removeAt$1$ax(this.sessions, this.index);
    },
    $signature: 0
  };
  A._ChatPageState__showCalendarDialog_closure.prototype = {
    call$1(s) {
      var t1 = type$.SessionInfo._as(s).date;
      return C.DateTime$(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0);
    },
    $signature: 282
  };
  A._ChatPageState__showCalendarDialog_calendar.prototype = {
    call$1(scores) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _this = this;
      type$.Map_DateTime_int._as(scores);
      t1 = _this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      t2 = t2.cSM;
      t2 = A.FCalendarController_date(t2._localStorage.getSessionDate$1(t2.currentSessionId.get$value(0)));
      t3 = t1.___ChatPageState__cC_A.cSM;
      t3 = t3._localStorage.getSessionDate$1(t3.currentSessionId.get$value(0));
      t4 = C.DateTime$(2025, 1, 1, 0, 0, 0, 0, 0);
      t5 = Date.now();
      t6 = Date.now();
      t7 = _this.ftheme.calendarStyle;
      t8 = _this.tileSize;
      t9 = _this.sessionMap;
      return A.FCalendar$(t2, new A._ChatPageState__showCalendarDialog_calendar_closure(t9, scores, t8), new C.DateTime(t5, 0, false), t3, B.FCalendarPickerType_0, new A._ChatPageState__showCalendarDialog_calendar_closure0(t1, t9), new A._ChatPageState__showCalendarDialog_calendar_closure1(t1, t9), t4, t7.copyWith$1$dayPickerStyle(t7.dayPickerStyle.copyWith$1$tileSize(t8)), new C.DateTime(t6, 0, false));
    },
    $signature: typesOffset + 102
  };
  A._ChatPageState__showCalendarDialog_calendar_closure1.prototype = {
    call$1(date) {
      return this.$call$body$_ChatPageState__showCalendarDialog_calendar_closure(type$.DateTime._as(date));
    },
    $call$body$_ChatPageState__showCalendarDialog_calendar_closure(date) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, matching;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              matching = $async$self.sessionMap.$index(0, C.DateTime$(C.Primitives_getYear(date), C.Primitives_getMonth(date), C.Primitives_getDay(date), 0, 0, 0, 0, 0));
              if (matching == null)
                matching = C._setArrayType([], type$.JSArray_SessionInfo);
              t1 = J.getInterceptor$asx(matching);
              if (t1.get$isEmpty(matching)) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = t1.get$length(matching) > 1 ? 3 : 5;
              break;
            case 3:
              // then
              $.$get$Get();
              t1 = $.$get$GetNavigation__getxController()._key;
              t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
              t1.toString;
              $async$goto = 6;
              return C._asyncAwait($async$self.$this._showSessionSwitchDialog$3(t1, matching, date), $async$call$1);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              if (t1.get$length(matching) === 1)
                $async$self.$this._switchSession$1(t1.get$first(matching).sessionId);
            case 4:
              // join
              C.GetNavigation_back($.$get$Get(), null, type$.dynamic);
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 136
  };
  A._ChatPageState__showCalendarDialog_calendar_closure0.prototype = {
    call$1(date) {
      return this.$call$body$_ChatPageState__showCalendarDialog_calendar_closure0(type$.DateTime._as(date));
    },
    $call$body$_ChatPageState__showCalendarDialog_calendar_closure0(date) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, matching;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              matching = $async$self.sessionMap.$index(0, C.DateTime$(C.Primitives_getYear(date), C.Primitives_getMonth(date), C.Primitives_getDay(date), 0, 0, 0, 0, 0));
              if (matching == null)
                matching = C._setArrayType([], type$.JSArray_SessionInfo);
              $.$get$Get();
              t1 = $.$get$GetNavigation__getxController()._key;
              t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
              t1.toString;
              $async$goto = 2;
              return C._asyncAwait($async$self.$this._showSessionSwitchDialog$3(t1, matching, date), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 136
  };
  A._ChatPageState__showCalendarDialog_calendar_closure.prototype = {
    call$3(context, data, child) {
      var t1, day, matching, score, t2, t3, t4, t5, _null = null;
      type$.BuildContext._as(context);
      type$.Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today._as(data);
      type$.nullable_Widget._as(child);
      t1 = data._values[1];
      day = C.DateTime$(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0);
      matching = this.sessionMap.$index(0, day);
      if (matching == null)
        matching = C._setArrayType([], type$.JSArray_SessionInfo);
      score = J.$index$asx(this.scores, day);
      if (child instanceof A.EntryContent && J.get$isEmpty$asx(matching)) {
        t1 = child.style;
        t2 = child.borderRadius;
        t3 = child.text;
        t4 = child.current;
        t5 = C.LinkedHashSet_LinkedHashSet$of(child.states, type$.WidgetState);
        t5.add$1(0, D.WidgetState_6);
        child = new A.EntryContent(t1, t2, t3, t5, t4, _null);
      }
      child.toString;
      t1 = score == null;
      t2 = t1 ? _null : D.JSInt_methods.toString$0(score);
      if (t2 == null)
        t2 = "";
      t2 = C._setArrayType([child, A.StyledWidget_positioned(C.Text$(t2, _null, _null, _null, _null, _null, _null, _null, C.TextStyle$(_null, _null, !t1 ? A.colorForScore(score) : D.Color_Edl, _null, _null, _null, _null, _null, _null, _null, _null, 10, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null), 0, _null, _null)], type$.JSArray_Widget);
      t1 = J.getInterceptor$asx(matching);
      if (t1.get$length(matching) > 1)
        t2.push(A.StyledWidget_positioned(C.Text$(D.JSInt_methods.toString$0(t1.get$length(matching)), _null, _null, _null, _null, _null, _null, _null, B.TextStyle_iiK, _null, _null, _null, _null, _null), _null, 2, 2));
      t1 = this.tileSize;
      return new C.SizedBox(t1, t1, A.StyledList_toStack(t2, D.Alignment_0_0), _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 284
  };
  A._ChatPageState__showCalendarDialog_closure0.prototype = {
    call$2(context, setState) {
      var t2, t1 = {};
      type$.BuildContext._as(context);
      type$.void_Function_void_Function._as(setState);
      t1.scores = C.LinkedHashMap_LinkedHashMap$_empty(type$.DateTime, type$.int);
      t2 = this.$this.___ChatPageState__hDM_A;
      t2 === $ && C.throwLateFieldNI("_hDM");
      return new A.FutureBuilder(t2.getScores$0(), new A._ChatPageState__showCalendarDialog__closure(t1, this.calendar, this.ftheme), null, type$.FutureBuilder_Map_DateTime_int);
    },
    $signature: typesOffset + 107
  };
  A._ChatPageState__showCalendarDialog__closure.prototype = {
    call$2(context, snapshot) {
      var t1, _this = this;
      type$.AsyncSnapshot_Map_DateTime_int._as(snapshot);
      if (snapshot.connectionState === B.ConnectionState_3 && snapshot.data != null) {
        t1 = snapshot.data;
        t1.toString;
        _this._box_0.scores = t1;
      } else if (snapshot.error != null)
        C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).addPostFrameCallback$1(new A._ChatPageState__showCalendarDialog___closure(snapshot));
      return A.FDialog$(C._setArrayType([], type$.JSArray_Widget), _this.calendar.call$1(_this._box_0.scores), _this.ftheme.dialogStyle.copyWith$1$insetPadding(new C.EdgeInsets(0, 0, 0, 0)));
    },
    $signature: typesOffset + 108
  };
  A._ChatPageState__showCalendarDialog___closure.prototype = {
    call$1(__wc0_formal) {
      var t1;
      type$.Duration._as(__wc0_formal);
      $.$get$Get();
      t1 = $.$get$GetNavigation__getxController()._key;
      return C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null ? C.showError(this.snapshot.error) : null;
    },
    $signature: 3
  };
  A._ChatPageState__buildPendingImagesPreview_closure.prototype = {
    call$2(context, index) {
      var t1, t2, t3, _null = null;
      type$.BuildContext._as(context);
      C._asInt(index);
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      t2 = C.List_List$unmodifiable(t2._pendingImagePaths, type$.String);
      if (!(index >= 0 && index < t2.length))
        return C.ioore(t2, index);
      t2 = A.File_File(t2[index]);
      C.assertThrow("Image.file is not supported on Flutter Web. Consider using either Image.asset or Image.network instead.");
      t2 = A.ResizeImage_resizeIfNeeded(_null, _null, new A.FileImage(t2, 1));
      t2 = C.StyledWidget_padding(new C.Image(t2, _null, _null, _null, 70, 70, D.BoxFit_2, _null, _null), 4, _null, _null);
      t3 = C.Icon$(D.IconData_57706_MaterialIcons_null_false, D.Color_wst, _null, 16);
      return A.StyledList_toStack(C._setArrayType([t2, A.StyledWidget_positioned(A.StyledWidget_gestures(new A.CircleAvatar(t3, D.MaterialColor_wdy, 10, _null), new A._ChatPageState__buildPendingImagesPreview__closure(t1, index)), _null, 0, 0)], type$.JSArray_Widget), D.AlignmentDirectional_m1_m1);
    },
    $signature: 137
  };
  A._ChatPageState__buildPendingImagesPreview__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.setState$1(new A._ChatPageState__buildPendingImagesPreview___closure(t1, this.index));
    },
    $signature: 0
  };
  A._ChatPageState__buildPendingImagesPreview___closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      t2 = this.index;
      return t2 >= 0 && t2 < t1._pendingImagePaths.length ? D.JSArray_methods.removeAt$1(t1._pendingImagePaths, t2) : null;
    },
    $signature: 0
  };
  A._ChatPageState_build_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      return t1._showCalendarDialog$1(t2.cSM._localStorage.getAllSessionsSync$0());
    },
    $signature: 0
  };
  A._ChatPageState_build_onUpdate.prototype = {
    call$0() {
      return this.$this.setState$1(new A._ChatPageState_build_onUpdate_closure());
    },
    $signature: 0
  };
  A._ChatPageState_build_onUpdate_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ChatPageState_build_onError.prototype = {
    call$1(msg) {
      return C.showError(msg);
    },
    $signature: 44
  };
  A._ChatPageState_build_closure0.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      return t1._deleteSession$1(t2.cSM.currentSessionId.get$value(0));
    },
    $signature: 0
  };
  A._ChatPageState_build_closure1.prototype = {
    call$0() {
      return this.$this._createSession$1(0, null);
    },
    $signature: 0
  };
  A._ChatPageState_build_closure2.prototype = {
    call$1(id) {
      return this.$call$body$_ChatPageState_build_closure0(C._asString(id));
    },
    $call$body$_ChatPageState_build_closure0(id) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.User),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.___ChatPageState__cC_A;
              t1 === $ && C.throwLateFieldNI("_cC");
              t1 = t1.uSM.session.get$value(0);
              t1 = t1 == null ? null : t1.name;
              $async$returnValue = new A._User(id, t1 == null ? "" : t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: typesOffset + 169
  };
  A._ChatPageState_build_closure9.prototype = {
    call$1(t) {
      var t1;
      C._asString(t);
      t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      return t1.handleSendMessage$3(t, this.onUpdate, this.onError);
    },
    $signature: 35
  };
  A._ChatPageState_build_closure11.prototype = {
    call$0() {
      var t2,
        t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      $.$get$Get();
      t2 = $.$get$GetNavigation__getxController()._key;
      t2 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t2);
      t2.toString;
      return t1.handleAttachmentTap$2(t2, this.onUpdate);
    },
    $signature: 0
  };
  A._ChatPageState_build_closure10.prototype = {
    call$4$details$index(__wc0_formal, msg, details, index) {
      return this.$call$body$_ChatPageState_build_closure(type$.BuildContext._as(__wc0_formal), type$.Message._as(msg), type$.nullable_LongPressStartDetails._as(details), C._asIntQ(index));
    },
    call$2(__wc0_formal, msg) {
      return this.call$4$details$index(__wc0_formal, msg, null, null);
    },
    call$3$index(__wc0_formal, msg, index) {
      return this.call$4$details$index(__wc0_formal, msg, null, index);
    },
    call$3$details(__wc0_formal, msg, details) {
      return this.call$4$details$index(__wc0_formal, msg, details, null);
    },
    "call*": "call$4$details$index",
    $requiredArgCount: 2,
    $defaultValues() {
      return {details: null, index: null};
    },
    $call$body$_ChatPageState_build_closure(__wc0_formal, msg, details, index) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, overlay, t3, t4, selected;
      var $async$call$4$details$index = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (details == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $.$get$Get();
              t1 = $.$get$GetNavigation__getxController()._key;
              t2 = type$.WidgetsBinding;
              t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
              t1.toString;
              overlay = type$.RenderBox._as(C.Overlay_of(t1, null, false).get$context(0).findRenderObject$0());
              t1 = $.$get$GetNavigation__getxController()._key;
              t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
              t1.toString;
              t2 = details.globalPosition;
              t3 = t2._dx;
              t2 = t2._dy;
              t4 = overlay.get$size(0);
              t4 = C.RelativeRect$fromRect(new C.Rect(t3, t2, t3 + 40, t2 + 40), new C.Rect(0, 0, 0 + t4._dx, 0 + t4._dy));
              t2 = type$.String;
              t3 = C._setArrayType([A.PopupMenuItem$(C.Text$("\u5220\u9664", null, null, null, null, null, null, null, null, null, null, null, null, null), "delete", t2)], type$.JSArray_PopupMenuItem_String);
              if (msg.get$authorId() === "user")
                t3.push(A.PopupMenuItem$(C.Text$("\u91cd\u53d1", null, null, null, null, null, null, null, null, null, null, null, null, null), "resend", t2));
              $async$goto = 3;
              return C._asyncAwait(E.showMenu(D.Clip_0, null, null, t1, null, null, t3, null, null, t4, null, null, null, null, null, null, false, t2), $async$call$4$details$index);
            case 3:
              // returning from await.
              selected = $async$result;
              if (selected === "delete") {
                t1 = $async$self.$this.___ChatPageState__cC_A;
                t1 === $ && C.throwLateFieldNI("_cC");
                t1.removeMessage$1(msg);
              } else if (selected === "resend") {
                t1 = $async$self.$this.___ChatPageState__cC_A;
                t1 === $ && C.throwLateFieldNI("_cC");
                t1.resendMessage$3(msg, $async$self.onUpdate, $async$self.onError);
              }
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$4$details$index, $async$completer);
    },
    $signature: 787
  };
  A._ChatPageState_build_closure7.prototype = {
    call$1(__wc1_formal) {
      type$.BuildContext._as(__wc1_formal);
      return new A.Composer(this.$this._buildPendingImagesPreview$0(), "\u8f93\u5165\u6d88\u606f...", null);
    },
    $signature: typesOffset + 202
  };
  A._ChatPageState_build_closure8.prototype = {
    call$1(__wc2_formal) {
      var _null = null;
      type$.BuildContext._as(__wc2_formal);
      return C.StyledWidget_center(C.Text$("\u6682\u65e0\u6d88\u606f", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
    },
    $signature: 24
  };
  A._ChatPageState_build_closure3.prototype = {
    call$5$groupStatus$isSentByMe(__wc3_formal, msg, i, groupStatus, isSentByMe) {
      type$.BuildContext._as(__wc3_formal);
      type$.TextMessage._as(msg);
      C._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      C._asBool(isSentByMe);
      return new A.FlyerChatTextMessage(msg, this.constraints, null);
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: D.C__Required};
    },
    $signature: typesOffset + 204
  };
  A._ChatPageState_build_closure4.prototype = {
    call$5$groupStatus$isSentByMe(__wc4_formal, msg, i, groupStatus, isSentByMe) {
      var t1;
      type$.BuildContext._as(__wc4_formal);
      type$.TextStreamMessage._as(msg);
      C._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      C._asBool(isSentByMe);
      $.$get$Get();
      t1 = $.GetInstance__getInstance;
      if (t1 == null)
        t1 = $.GetInstance__getInstance = D.C_GetInstance;
      t1 = t1.find$1$1$tag(0, null, type$.StreamStateController).states;
      t1 = J.$index$asx(t1.get$value(0), t1.$ti._precomputed1._as(msg.streamId));
      return new A.FlyerChatTextStreamMessage(msg, t1 == null ? D.C_StreamStateLoading : t1, false, B.TextStreamMessageMode_1, null);
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: D.C__Required};
    },
    $signature: typesOffset + 59
  };
  A._ChatPageState_build_closure5.prototype = {
    call$5$groupStatus$isSentByMe(__wc5_formal, msg, i, groupStatus, isSentByMe) {
      var t1, _null = null;
      type$.BuildContext._as(__wc5_formal);
      type$.ImageMessage._as(msg);
      C._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      C._asBool(isSentByMe);
      t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      return new A.FlyerChatImageMessage(msg, new C.CachedNetworkImage(msg.source, C.CrossCache$(C.BaseOptions$("", _null, C.LinkedHashMap_LinkedHashMap$_literal(["Authorization", "Bearer " + t1.uSM.get$currentToken()], type$.String, type$.dynamic), _null, _null)), _null), _null);
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: D.C__Required};
    },
    $signature: typesOffset + 60
  };
  A._ChatPageState_build_closure6.prototype = {
    call$5$groupStatus$isSentByMe(__wc6_formal, msg, i, groupStatus, isSentByMe) {
      var t1, t2;
      type$.BuildContext._as(__wc6_formal);
      type$.CustomMessage._as(msg);
      C._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      C._asBool(isSentByMe);
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && C.throwLateFieldNI("_cC");
      return new A.ChatCustomMessage(msg, t2.cSM.currentSessionId.get$value(0), new A._ChatPageState_build__closure(t1, this.onUpdate, this.onError), new C.ValueKey(msg.id, type$.ValueKey_String));
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: D.C__Required};
    },
    $signature: typesOffset + 61
  };
  A._ChatPageState_build__closure.prototype = {
    call$2(message, sessionId) {
      var t1;
      type$.CustomMessage._as(message);
      C._asString(sessionId);
      t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && C.throwLateFieldNI("_cC");
      return t1.handleSendMessage$3(message, this.onUpdate, this.onError);
    },
    $signature: 788
  };
  A.debugItems_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.cC.uSM.__UserSessionController_dio_F;
              t1 === $ && C.throwLateFieldNI("dio");
              $async$goto = 2;
              return C._asyncAwait(t1.post$1$1("/reload/root", type$.ResponseBody), $async$call$0);
            case 2:
              // returning from await.
              $.$get$Get();
              t1 = $.$get$GetNavigation__getxController()._key;
              t2 = type$.WidgetsBinding;
              if (C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1) != null) {
                t1 = $.$get$GetNavigation__getxController()._key;
                t1 = C.BindingBase_checkInstance($.WidgetsBinding__instance, t2).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1);
                t1.toString;
                C.TDMessage_showMessage("\u5237\u65b0\u6210\u529f", t1, 3000, null);
              }
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A.debugItems_closure0.prototype = {
    call$0() {
      return A._showCalendarDialog(this.context, this.cC);
    },
    $signature: 0
  };
  A._showCalendarDialog_closure.prototype = {
    call$1(s) {
      var t1 = type$.SessionInfo._as(s).date;
      return C.DateTime$(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0);
    },
    $signature: 282
  };
  A._showCalendarDialog_closure1.prototype = {
    call$1(date) {
      return this.$call$body$_showCalendarDialog_closure(type$.DateTime._as(date));
    },
    $call$body$_showCalendarDialog_closure(date) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        day;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              day = C.DateTime$(C.Primitives_getYear(date), C.Primitives_getMonth(date), C.Primitives_getDay(date), 0, 0, 0, 0, 0);
              $async$goto = 2;
              return C._asyncAwait(C.ExtensionDialog_dialog($.$get$Get(), A.FDialog$(C._setArrayType([C.FButton$(C.Text$("\u65e5\u603b\u7ed3", null, null, null, null, null, null, null, null, null, null, null, null, null), new A._showCalendarDialog__closure(day)), C.FButton$(C.Text$("\u5468\u603b\u7ed3", null, null, null, null, null, null, null, null, null, null, null, null, null), new A._showCalendarDialog__closure0(day)), C.FButton$(C.Text$("\u6708\u603b\u7ed3", null, null, null, null, null, null, null, null, null, null, null, null, null), new A._showCalendarDialog__closure1(day))], type$.JSArray_Widget), null, null), type$.dynamic), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 136
  };
  A._showCalendarDialog__closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.dynamic;
              C.GetNavigation_back($.$get$Get(), null, t1);
              t2 = $.GetInstance__getInstance;
              if (t2 == null)
                t2 = $.GetInstance__getInstance = D.C_GetInstance;
              t2 = t2.find$1$1$tag(0, null, type$.HealthDataController).__HealthDataController_dio_F;
              t2 === $ && C.throwLateFieldNI("dio");
              $async$goto = 2;
              return C._asyncAwait(t2.post$1$2$queryParameters("/review/generate/daily", C.LinkedHashMap_LinkedHashMap$_literal(["day", $async$self.day], type$.String, t1), t1), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A._showCalendarDialog__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.dynamic;
              C.GetNavigation_back($.$get$Get(), null, t1);
              t2 = $.GetInstance__getInstance;
              if (t2 == null)
                t2 = $.GetInstance__getInstance = D.C_GetInstance;
              t2 = t2.find$1$1$tag(0, null, type$.HealthDataController).__HealthDataController_dio_F;
              t2 === $ && C.throwLateFieldNI("dio");
              $async$goto = 2;
              return C._asyncAwait(t2.post$1$2$queryParameters("/review/generate/weekly", C.LinkedHashMap_LinkedHashMap$_literal(["day", $async$self.day], type$.String, t1), t1), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A._showCalendarDialog__closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.dynamic;
              C.GetNavigation_back($.$get$Get(), null, t1);
              t2 = $.GetInstance__getInstance;
              if (t2 == null)
                t2 = $.GetInstance__getInstance = D.C_GetInstance;
              t2 = t2.find$1$1$tag(0, null, type$.HealthDataController).__HealthDataController_dio_F;
              t2 === $ && C.throwLateFieldNI("dio");
              $async$goto = 2;
              return C._asyncAwait(t2.post$1$2$queryParameters("/review/generate/monthly", C.LinkedHashMap_LinkedHashMap$_literal(["day", $async$self.day], type$.String, t1), t1), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A._showCalendarDialog_closure0.prototype = {
    call$3(context, data, child) {
      var t1, matching, t2, t3, t4, t5, _null = null;
      type$.BuildContext._as(context);
      type$.Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today._as(data);
      type$.nullable_Widget._as(child);
      t1 = data._values[1];
      matching = this.sessionMap.$index(0, C.DateTime$(C.Primitives_getYear(t1), C.Primitives_getMonth(t1), C.Primitives_getDay(t1), 0, 0, 0, 0, 0));
      if (matching == null)
        matching = C._setArrayType([], type$.JSArray_SessionInfo);
      if (child instanceof A.EntryContent && J.get$isEmpty$asx(matching)) {
        t1 = child.style;
        t2 = child.borderRadius;
        t3 = child.text;
        t4 = child.current;
        t5 = C.LinkedHashSet_LinkedHashSet$of(child.states, type$.WidgetState);
        t5.add$1(0, D.WidgetState_6);
        child = new A.EntryContent(t1, t2, t3, t5, t4, _null);
      }
      child.toString;
      t1 = C._setArrayType([child], type$.JSArray_Widget);
      t2 = J.getInterceptor$asx(matching);
      if (t2.get$length(matching) > 1)
        t1.push(A.StyledWidget_positioned(C.Text$(D.JSInt_methods.toString$0(t2.get$length(matching)), _null, _null, _null, _null, _null, _null, _null, B.TextStyle_iiK, _null, _null, _null, _null, _null), _null, 2, 2));
      t2 = this.tileSize;
      return new C.SizedBox(t2, t2, A.StyledList_toStack(t1, D.Alignment_0_0), _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 284
  };
  A.pickMediaPaths_closure.prototype = {
    call$1(img) {
      var t1 = type$.XFile._as(img).__XFile__path_A;
      t1 === $ && C.throwLateFieldNI("_path");
      return t1;
    },
    $signature: 789
  };
  A.HiveMessageStorage_loadAll_closure.prototype = {
    call$1(m) {
      return m instanceof C.Message;
    },
    $signature: 790
  };
  A.ListDiffDelegate_closure.prototype = {
    call$2(a, b) {
      var t1 = this.T;
      return J.$eq$(t1._as(a), t1._as(b));
    },
    $signature() {
      return this.T._eval$1("bool(0,0)");
    }
  };
  A.FormData__init_closure.prototype = {
    call$2(key, value) {
      var t1 = value == null ? null : J.toString$0$(value);
      if (t1 == null)
        t1 = "";
      D.JSArray_methods.add$1(this.$this.fields, new C.MapEntry(key, t1, type$.MapEntry_String_String));
      return null;
    },
    $signature: 791
  };
  A.FormData__headerForFile_closure.prototype = {
    call$2(key, values) {
      var t1, t2, value;
      type$.List_String._as(values);
      for (t1 = values.get$iterator(values), t2 = this._box_0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        t2.header = t2.header + "\r\n" + C.S(key) + ": " + C.S(value);
      }
    },
    $signature: 233
  };
  A.FormData_finalize_writeLine.prototype = {
    call$0() {
      return this.controller.add$1(0, $.$get$_rnU8());
    },
    $signature: 0
  };
  A.FormData_finalize_writeUtf8.prototype = {
    call$1(s) {
      var t1 = D.C_Utf8Encoder.convert$1(s);
      return this.controller.add$1(0, t1);
    },
    $signature: 35
  };
  A.FormData_finalize_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, t4, t5, t6, t7, _i, file, t8;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, t2 = t1.files, t3 = t2.length, t4 = $async$self.writeUtf8, t5 = $async$self.controller, t6 = type$.Uint8List, t7 = $async$self.writeLine, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2.length)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              file = t2[_i];
              t8 = t1.__FormData__boundary_A;
              t8 === $ && C.throwLateFieldNI("_boundary");
              t4.call$1("--" + t8 + "\r\n");
              t4.call$1(t1._headerForFile$1(file));
              $async$goto = 5;
              return C._asyncAwait(A.writeStreamToSink(file.value.finalize$0(), t5, t6), $async$call$0);
            case 5:
              // returning from await.
              t7.call$0();
            case 3:
              // for update
              t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A.FormData_finalize_closure0.prototype = {
    call$1(_) {
      var t1 = this.$this.__FormData__boundary_A;
      t1 === $ && C.throwLateFieldNI("_boundary");
      this.writeUtf8.call$1("--" + t1 + "--\r\n");
    },
    $signature: 26
  };
  A.FormData_finalize_closure1.prototype = {
    call$0() {
      this.controller.close$0(0);
    },
    $signature: 11
  };
  A.writeStreamToSink_closure.prototype = {
    call$0() {
      return this.completer.complete$0(0);
    },
    $signature: 0
  };
  A._ModalBottomSheetState_build_closure0.prototype = {
    call$0() {
      if (this.$this._widget.route.get$isCurrent())
        C.Navigator_of(this.context, false).pop$1$1(null, type$.nullable_Object);
    },
    $signature: 0
  };
  A._ModalBottomSheetState_build_closure.prototype = {
    call$2(context, child) {
      var t1, _null = null;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      t1 = C.ClipRect$(new A._BottomSheetLayoutWithSizeListener(new A._ModalBottomSheetState_build__closure(t1), t1.animationCurve.transform$1(0, t1._widget.route._animationProxy.get$value(0)), false, t1._widget.scrollControlDisabledMaxHeightRatio, child, _null), D.Clip_1);
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, this.routeLabel, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, true, false, false, t1, _null);
    },
    $signature: 183
  };
  A._ModalBottomSheetState_build__closure.prototype = {
    call$1(size) {
      type$.Size._as(size);
      this.$this._widget.route._didChangeBarrierSemanticsClip$1(new C.EdgeInsets(0, 0, 0, size._dy));
    },
    $signature: 286
  };
  A.ModalBottomSheetRoute_buildPage_closure.prototype = {
    call$1(context) {
      var sheetTheme, defaults, t1, t2, t3, t4;
      type$.BuildContext._as(context);
      sheetTheme = C.Theme_of(context).bottomSheetTheme;
      C.Theme_of(context);
      defaults = C._BottomSheetDefaultsM3$(context);
      t1 = this.$this;
      t2 = sheetTheme.modalBackgroundColor;
      if (t2 == null)
        t2 = sheetTheme.backgroundColor;
      if (t2 == null)
        t2 = defaults.get$backgroundColor(0);
      t3 = sheetTheme.modalElevation;
      if (t3 == null)
        t3 = sheetTheme.elevation;
      if (t3 == null)
        t3 = defaults.modalElevation;
      t4 = t1.showDragHandle;
      t4 = false;
      return new A._ModalBottomSheet(t1, false, t1.scrollControlDisabledMaxHeightRatio, t2, t3, t1.shape, t1.clipBehavior, t1.constraints, true, t4, null, t1.$ti._eval$1("_ModalBottomSheet<1>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("_ModalBottomSheet<1>(BuildContext)");
    }
  };
  A._CheckboxState__widgetFillColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_6))
        return null;
      if (states.contains$1(0, D.WidgetState_4)) {
        this.$this._widget.toString;
        return null;
      }
      return null;
    },
    $signature: 68
  };
  A._CheckboxState_build_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      this.$this._widget.toString;
      t1 = C.WidgetStateProperty_resolveAs(null, states, type$.nullable_MouseCursor);
      if (t1 == null)
        t1 = null;
      return t1 == null ? C.WidgetStateMouseCursor__clickable(states) : t1;
    },
    $signature: 105
  };
  A._CheckboxDefaultsM3_side_closure.prototype = {
    call$1(states) {
      var t1, t2, _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_6)) {
        if (states.contains$1(0, D.WidgetState_4))
          return B.BorderSide_fqe;
        return new C.BorderSide(_this.$this._checkbox$_colors.onSurface.withOpacity$1(0.38), 2, D.BorderStyle_1, -1);
      }
      if (states.contains$1(0, D.WidgetState_4))
        return B.BorderSide_5XO;
      if (states.contains$1(0, D.WidgetState_7))
        return new C.BorderSide(_this.$this._checkbox$_colors.error, 2, D.BorderStyle_1, -1);
      if (states.contains$1(0, D.WidgetState_2))
        return new C.BorderSide(_this.$this._checkbox$_colors.onSurface, 2, D.BorderStyle_1, -1);
      if (states.contains$1(0, D.WidgetState_0))
        return new C.BorderSide(_this.$this._checkbox$_colors.onSurface, 2, D.BorderStyle_1, -1);
      if (states.contains$1(0, D.WidgetState_1))
        return new C.BorderSide(_this.$this._checkbox$_colors.onSurface, 2, D.BorderStyle_1, -1);
      t1 = _this.$this._checkbox$_colors;
      t2 = t1._onSurfaceVariant;
      return new C.BorderSide(t2 == null ? t1.onSurface : t2, 2, D.BorderStyle_1, -1);
    },
    $signature: 116
  };
  A._CheckboxDefaultsM3_fillColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_6)) {
        if (states.contains$1(0, D.WidgetState_4))
          return this.$this._checkbox$_colors.onSurface.withOpacity$1(0.38);
        return D.Color_Edl;
      }
      if (states.contains$1(0, D.WidgetState_4)) {
        if (states.contains$1(0, D.WidgetState_7))
          return this.$this._checkbox$_colors.error;
        return this.$this._checkbox$_colors.primary;
      }
      return D.Color_Edl;
    },
    $signature: 7
  };
  A._CheckboxDefaultsM3_checkColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_6)) {
        if (states.contains$1(0, D.WidgetState_4))
          return this.$this._checkbox$_colors.surface;
        return D.Color_Edl;
      }
      if (states.contains$1(0, D.WidgetState_4)) {
        if (states.contains$1(0, D.WidgetState_7))
          return this.$this._checkbox$_colors.onError;
        return this.$this._checkbox$_colors.onPrimary;
      }
      return D.Color_Edl;
    },
    $signature: 7
  };
  A._CheckboxDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_7)) {
        if (states.contains$1(0, D.WidgetState_2))
          return _this.$this._checkbox$_colors.error.withOpacity$1(0.1);
        if (states.contains$1(0, D.WidgetState_0))
          return _this.$this._checkbox$_colors.error.withOpacity$1(0.08);
        if (states.contains$1(0, D.WidgetState_1))
          return _this.$this._checkbox$_colors.error.withOpacity$1(0.1);
      }
      if (states.contains$1(0, D.WidgetState_4)) {
        if (states.contains$1(0, D.WidgetState_2))
          return _this.$this._checkbox$_colors.onSurface.withOpacity$1(0.1);
        if (states.contains$1(0, D.WidgetState_0))
          return _this.$this._checkbox$_colors.primary.withOpacity$1(0.08);
        if (states.contains$1(0, D.WidgetState_1))
          return _this.$this._checkbox$_colors.primary.withOpacity$1(0.1);
        return D.Color_Edl;
      }
      if (states.contains$1(0, D.WidgetState_2))
        return _this.$this._checkbox$_colors.primary.withOpacity$1(0.1);
      if (states.contains$1(0, D.WidgetState_0))
        return _this.$this._checkbox$_colors.onSurface.withOpacity$1(0.08);
      if (states.contains$1(0, D.WidgetState_1))
        return _this.$this._checkbox$_colors.onSurface.withOpacity$1(0.1);
      return D.Color_Edl;
    },
    $signature: 7
  };
  A.__CheckboxState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._RadioState__widgetFillColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_6))
        return null;
      if (states.contains$1(0, D.WidgetState_4)) {
        this.$this._widget.toString;
        return null;
      }
      return null;
    },
    $signature: 68
  };
  A._RadioState_build_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      this.$this._widget.toString;
      t1 = C.WidgetStateProperty_resolveAs(null, states, type$.nullable_MouseCursor);
      if (t1 == null)
        t1 = null;
      return t1 == null ? C.WidgetStateProperty_resolveAs(D._WidgetStateMouseCursor_nmO, states, type$.MouseCursor) : t1;
    },
    $signature: 105
  };
  A._RadioDefaultsM3_fillColor_closure.prototype = {
    call$1(states) {
      var t1, t2, _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_4)) {
        if (states.contains$1(0, D.WidgetState_6))
          return _this.$this.get$_radio$_colors().onSurface.withOpacity$1(0.38);
        if (states.contains$1(0, D.WidgetState_2))
          return _this.$this.get$_radio$_colors().primary;
        if (states.contains$1(0, D.WidgetState_0))
          return _this.$this.get$_radio$_colors().primary;
        if (states.contains$1(0, D.WidgetState_1))
          return _this.$this.get$_radio$_colors().primary;
        return _this.$this.get$_radio$_colors().primary;
      }
      if (states.contains$1(0, D.WidgetState_6))
        return _this.$this.get$_radio$_colors().onSurface.withOpacity$1(0.38);
      if (states.contains$1(0, D.WidgetState_2))
        return _this.$this.get$_radio$_colors().onSurface;
      if (states.contains$1(0, D.WidgetState_0))
        return _this.$this.get$_radio$_colors().onSurface;
      if (states.contains$1(0, D.WidgetState_1))
        return _this.$this.get$_radio$_colors().onSurface;
      t1 = _this.$this.get$_radio$_colors();
      t2 = t1._onSurfaceVariant;
      return t2 == null ? t1.onSurface : t2;
    },
    $signature: 7
  };
  A._RadioDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_4)) {
        if (states.contains$1(0, D.WidgetState_2))
          return _this.$this.get$_radio$_colors().onSurface.withOpacity$1(0.1);
        if (states.contains$1(0, D.WidgetState_0))
          return _this.$this.get$_radio$_colors().primary.withOpacity$1(0.08);
        if (states.contains$1(0, D.WidgetState_1))
          return _this.$this.get$_radio$_colors().primary.withOpacity$1(0.1);
        return D.Color_Edl;
      }
      if (states.contains$1(0, D.WidgetState_2))
        return _this.$this.get$_radio$_colors().primary.withOpacity$1(0.1);
      if (states.contains$1(0, D.WidgetState_0))
        return _this.$this.get$_radio$_colors().onSurface.withOpacity$1(0.08);
      if (states.contains$1(0, D.WidgetState_1))
        return _this.$this.get$_radio$_colors().onSurface.withOpacity$1(0.1);
      return D.Color_Edl;
    },
    $signature: 7
  };
  A.__RadioState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._RangeSliderState__handleHoverChanged_closure.prototype = {
    call$0() {
      this.$this._range_slider$_hovering = this.hovering;
    },
    $signature: 0
  };
  A._RangeSliderState_build_effectiveOverlayColor.prototype = {
    call$0() {
      var t1, _this = this;
      _this.$this._widget.toString;
      t1 = C.WidgetStateProperty_resolveAs(_this._box_0.sliderTheme.overlayColor, _this.states, type$.nullable_Color);
      return t1 == null ? _this.theme.colorScheme.primary.withOpacity$1(0.12) : t1;
    },
    $signature: 135
  };
  A._RangeSliderState_build_screenSize.prototype = {
    call$0() {
      var t1 = this.context;
      C.debugCheckHasMediaQuery(t1);
      return C.InheritedModel_inheritFrom(t1, D._MediaQueryAspect_0, type$.MediaQuery).data.size;
    },
    $signature: 169
  };
  A._RangeSliderState_showValueIndicator_closure.prototype = {
    call$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.$this;
      return C.CompositedTransformFollower$(new A._ValueIndicatorRenderObjectWidget0(t1, null), t1._range_slider$_layerLink, D.Offset_0_0, true);
    },
    $signature: 288
  };
  A._RenderRangeSlider_closure.prototype = {
    call$1($status) {
      var t1, t2;
      if (type$.AnimationStatus._as($status) === D.AnimationStatus_0) {
        t1 = this.$this._range_slider$_state;
        t2 = t1.overlayEntry;
        if (t2 != null)
          t2.remove$0(0);
        t2 = t1.overlayEntry;
        if (t2 != null)
          t2.dispose$0();
        t1.overlayEntry = null;
      }
    },
    $signature: 12
  };
  A._RenderRangeSlider__maxSliderPartWidth_closure.prototype = {
    call$1(size) {
      return type$.Size._as(size)._dx;
    },
    $signature: 91
  };
  A._RenderRangeSlider__maxSliderPartHeight_closure.prototype = {
    call$1(size) {
      return type$.Size._as(size)._dy;
    },
    $signature: 91
  };
  A._RenderRangeSlider__startInteraction_closure.prototype = {
    call$0() {
      var _s24_ = "valueIndicatorController",
        t1 = this.$this,
        t2 = t1._range_slider$_state;
      t2.interactionTimer = null;
      if (!t1._range_slider$_active) {
        t1 = t2.___RangeSliderState_valueIndicatorController_A;
        t1 === $ && C.throwLateFieldNI(_s24_);
        t1 = t1.get$status(0) === D.AnimationStatus_3;
      } else
        t1 = false;
      if (t1) {
        t1 = t2.___RangeSliderState_valueIndicatorController_A;
        t1 === $ && C.throwLateFieldNI(_s24_);
        t1.reverse$0(0);
      }
    },
    $signature: 0
  };
  A.__RangeSliderState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._SelectableTextState__onControllerChanged_closure.prototype = {
    call$0() {
      this.$this._selectable_text$_showSelectionHandles = this.showSelectionHandles;
    },
    $signature: 0
  };
  A._SelectableTextState__handleSelectionChanged_closure.prototype = {
    call$0() {
      this.$this._selectable_text$_showSelectionHandles = this.willShowSelectionHandles;
    },
    $signature: 0
  };
  A._SelectableTextState_build_closure.prototype = {
    call$0() {
      this.$this.get$_selectable_text$_effectiveFocusNode().requestFocus$0();
    },
    $signature: 0
  };
  A._SliderState__handleFocusHighlightChanged_closure.prototype = {
    call$0() {
      this.$this._slider$_focused = this.focused;
    },
    $signature: 0
  };
  A._SliderState__handleHoverChanged_closure.prototype = {
    call$0() {
      this.$this._slider$_hovering = this.hovering;
    },
    $signature: 0
  };
  A._SliderState__buildMaterialSlider_effectiveOverlayColor.prototype = {
    call$0() {
      var t1, t2, t3, _this = this;
      _this.$this._widget.toString;
      t1 = _this.states;
      t2 = type$.nullable_Color;
      t3 = C.WidgetStateProperty_resolveAs(_this._box_0.sliderTheme.overlayColor, t1, t2);
      return t3 == null ? C.WidgetStateProperty_resolveAs(_this.defaults.get$overlayColor(), t1, t2) : t3;
    },
    $signature: 135
  };
  A._SliderState__buildMaterialSlider_screenSize.prototype = {
    call$0() {
      var t1 = this.context;
      C.debugCheckHasMediaQuery(t1);
      return C.InheritedModel_inheritFrom(t1, D._MediaQueryAspect_0, type$.MediaQuery).data.size;
    },
    $signature: 169
  };
  A._SliderState__buildMaterialSlider_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (!t1.get$focusNode(0).get$hasFocus()) {
        t2 = t1.get$focusNode(0);
        t2 = t2._canRequestFocus && D.JSArray_methods.every$1(t2.get$ancestors(), C.focus_manager_FocusNode__allowDescendantsToBeFocused$closure());
      } else
        t2 = false;
      if (t2)
        t1.get$focusNode(0).requestFocus$0();
    },
    $signature: 0
  };
  A._SliderState_showValueIndicator_closure.prototype = {
    call$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.$this;
      return C.CompositedTransformFollower$(new A._ValueIndicatorRenderObjectWidget(t1, null), t1._layerLink, D.Offset_0_0, true);
    },
    $signature: 288
  };
  A._RenderSlider_closure.prototype = {
    call$1($status) {
      var t1, t2;
      if (type$.AnimationStatus._as($status) === D.AnimationStatus_0) {
        t1 = this.$this._slider$_state;
        t2 = t1.overlayEntry;
        if (t2 != null)
          t2.remove$0(0);
        t2 = t1.overlayEntry;
        if (t2 != null)
          t2.dispose$0();
        t1.overlayEntry = null;
      }
    },
    $signature: 12
  };
  A._RenderSlider__maxSliderPartWidth_closure.prototype = {
    call$1(size) {
      return type$.Size._as(size)._dx;
    },
    $signature: 91
  };
  A._RenderSlider__maxSliderPartHeight_closure.prototype = {
    call$1(size) {
      return type$.Size._as(size)._dy;
    },
    $signature: 91
  };
  A._RenderSlider__startInteraction_closure.prototype = {
    call$0() {
      var _s24_ = "valueIndicatorController",
        t1 = this.$this,
        t2 = t1._slider$_state;
      t2.interactionTimer = null;
      if (!t1._slider$_active) {
        t1 = t2.___SliderState_valueIndicatorController_A;
        t1 === $ && C.throwLateFieldNI(_s24_);
        t1 = t1.get$status(0) === D.AnimationStatus_3;
      } else
        t1 = false;
      if (t1) {
        t1 = t2.___SliderState_valueIndicatorController_A;
        t1 === $ && C.throwLateFieldNI(_s24_);
        t1.reverse$0(0);
      }
    },
    $signature: 0
  };
  A._SliderDefaultsM3Year2023_overlayColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, D.WidgetState_3))
        return this.$this.get$_slider$_colors().primary.withOpacity$1(0.1);
      if (states.contains$1(0, D.WidgetState_0))
        return this.$this.get$_slider$_colors().primary.withOpacity$1(0.08);
      if (states.contains$1(0, D.WidgetState_1))
        return this.$this.get$_slider$_colors().primary.withOpacity$1(0.1);
      return D.Color_Edl;
    },
    $signature: 7
  };
  A.__SliderState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A.RoundSliderThumbShape_paint_closure.prototype = {
    call$0() {
      return true;
    },
    $signature: 1
  };
  A.RoundRangeSliderThumbShape_paint_closure.prototype = {
    call$0() {
      return true;
    },
    $signature: 1
  };
  A.NetworkImage__imageStreamInformationCollector_closure.prototype = {
    call$0() {
      this._box_0.collector = new A.NetworkImage__imageStreamInformationCollector__closure(this.$this, this.key);
      return true;
    },
    $signature: 1
  };
  A.NetworkImage__imageStreamInformationCollector__closure.prototype = {
    call$0() {
      var _null = null,
        t1 = type$.NetworkImage_2;
      return C._setArrayType([C.DiagnosticsProperty$("Image provider", this.$this, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, type$.ImageProvider_Object), C.DiagnosticsProperty$("Image key", t1._as(this.key), true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_8, _null, t1)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 9
  };
  A.NetworkImage__loadAsync_loadViaDecode.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageStreamCompleter),
        $async$returnValue, $async$self = this, t1, t2, t3, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.chunkEvents;
              t3 = $async$self.key;
              $async$temp1 = C;
              $async$temp2 = new C._ControllerStream(t2, C._instanceType(t2)._eval$1("_ControllerStream<1>"));
              $async$temp3 = C;
              $async$goto = 3;
              return C._asyncAwait(t1._fetchImageBytes$1($async$self.decode), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.MultiFrameImageStreamCompleter$($async$temp2, $async$temp3.Future_Future$value($async$result, type$.Codec), t3.url, t1._imageStreamInformationCollector$1(t3), 1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 290
  };
  A.NetworkImage__loadAsync_loadViaImgElement.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageStreamCompleter),
        $async$returnValue, $async$self = this, imageElement, t1, t2;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              imageElement = A._imgElementFactory();
              t1 = $async$self.key;
              t2 = t1.url;
              imageElement.src = t2;
              $async$goto = 3;
              return C._asyncAwait(C.promiseToFuture(type$.JSObject._as(imageElement.decode()), type$.nullable_Object), $async$call$0);
            case 3:
              // returning from await.
              t1 = A.OneFrameImageStreamCompleter$(C.Future_Future$value(new A.WebImageInfo(imageElement, t2), type$.ImageInfo), $async$self.$this._imageStreamInformationCollector$1(t1));
              t1.debugLabel = t2;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 290
  };
  A.NetworkImage__loadAsync_closure.prototype = {
    call$2(bytes, total) {
      this.chunkEvents.add$1(0, C.ImageChunkEvent$(bytes, total));
    },
    $signature: 239
  };
  A.NetworkImage__fetchImageBytes_closure.prototype = {
    call$1(e) {
      var t1, $status, accepted, unknownRedirect, success, t2;
      type$.JSObject._as(e);
      t1 = this.request;
      $status = C._asInt(t1.status);
      accepted = $status >= 200 && $status < 300;
      unknownRedirect = $status > 307 && $status < 400;
      success = accepted || $status === 0 || $status === 304 || unknownRedirect;
      t2 = this.completer;
      if (success)
        t2.complete$1(0, t1);
      else {
        t1 = this.resolved;
        t2.completeError$1(new A.NetworkImageLoadException("HTTP request failed, statusCode: " + $status + ", " + t1.toString$0(0), t1));
      }
    },
    $signature: 22
  };
  A.NetworkImage__fetchImageBytes_closure0.prototype = {
    call$1(e) {
      var t1;
      type$.JSObject._as(e);
      t1 = this.resolved;
      return this.completer.completeError$1(new A.NetworkImageLoadException("HTTP request failed, statusCode: " + C._asInt(this.request.status) + ", " + t1.toString$0(0), t1));
    },
    $signature: 46
  };
  A._ForwardingImageStreamCompleter_closure.prototype = {
    call$1(value) {
      var t1, t2;
      type$.ImageStreamCompleter._as(value);
      t1 = this.$this;
      t1.resolved = true;
      if (t1.__network_image_web$_disposed) {
        value.addListener$1(0, new C.ImageStreamListener(new A._ForwardingImageStreamCompleter__closure(), null, null));
        value._maybeDispose$0();
        return;
      }
      t1.___ForwardingImageStreamCompleter_completer_F !== $ && C.throwLateFieldAI("completer");
      t1.___ForwardingImageStreamCompleter_completer_F = value;
      if (value._image_stream$_disposed)
        C.throwExpression(C.StateError$("Stream has been disposed.\nAn ImageStream is considered disposed once at least one listener has been added and subsequently all listeners have been removed and no handles are outstanding from the keepAlive method.\nTo resolve this error, maintain at least one listener on the stream, or create an ImageStreamCompleterHandle from the keepAlive method, or create a new stream for the image."));
      t2 = new C.ImageStreamCompleterHandle(value);
      t2.ImageStreamCompleterHandle$_$1(value);
      t1.___ForwardingImageStreamCompleter_handle_F !== $ && C.throwLateFieldAI("handle");
      t1.___ForwardingImageStreamCompleter_handle_F = t2;
      value.addListener$1(0, new C.ImageStreamListener(new A._ForwardingImageStreamCompleter__closure0(t1), new A._ForwardingImageStreamCompleter__closure1(t1), new A._ForwardingImageStreamCompleter__closure2(t1)));
    },
    $signature: 797
  };
  A._ForwardingImageStreamCompleter__closure.prototype = {
    call$2(__wc0_formal, __wc1_formal) {
      type$.ImageInfo._as(__wc0_formal);
      C._asBool(__wc1_formal);
    },
    $signature: 90
  };
  A._ForwardingImageStreamCompleter__closure0.prototype = {
    call$2(image, synchronousCall) {
      type$.ImageInfo._as(image);
      C._asBool(synchronousCall);
      this.$this.setImage$1(image);
    },
    $signature: 90
  };
  A._ForwardingImageStreamCompleter__closure1.prototype = {
    call$1($event) {
      this.$this.reportImageChunkEvent$1(type$.ImageChunkEvent._as($event));
    },
    $signature: 165
  };
  A._ForwardingImageStreamCompleter__closure2.prototype = {
    call$2(exception, stackTrace) {
      this.$this.reportError$2$exception$stack(type$.Object._as(exception), type$.nullable_StackTrace._as(stackTrace));
    },
    $signature: 81
  };
  A._ForwardingImageStreamCompleter_closure0.prototype = {
    call$2(error, stack) {
      type$.Object._as(error);
      type$.StackTrace._as(stack);
      this.$this.reportError$5$context$exception$informationCollector$silent$stack(C.ErrorDescription$("resolving an image stream completer"), error, this.informationCollector, true, stack);
    },
    $signature: 33
  };
  A.FileImage_loadBuffer_closure.prototype = {
    call$0() {
      return C._setArrayType([C.ErrorDescription$("Path: " + this.$this.file._io$_path)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 9
  };
  A.FileImage_loadImage_closure.prototype = {
    call$0() {
      return C._setArrayType([C.ErrorDescription$("Path: " + this.$this.file._io$_path)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 9
  };
  A.OneFrameImageStreamCompleter_closure.prototype = {
    call$2(error, stack) {
      type$.Object._as(error);
      type$.StackTrace._as(stack);
      this.$this.reportError$5$context$exception$informationCollector$silent$stack(C.ErrorDescription$("resolving a single-frame image stream"), error, this.informationCollector, true, stack);
    },
    $signature: 33
  };
  A.RenderAspectRatio__applyAspectRatio_closure.prototype = {
    call$0() {
      var t1 = this.constraints;
      if (!(t1.maxWidth < 1 / 0) && !(t1.maxHeight < 1 / 0)) {
        t1 = this.$this;
        throw C.wrapException(C.FlutterError_FlutterError(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + " has unbounded constraints.\nThis " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + " was given an aspect ratio of " + C.S(t1._aspectRatio) + " but was given both unbounded width and unbounded height constraints. Because both constraints were unbounded, this render object doesn't know how much size to consume."));
      }
      return true;
    },
    $signature: 1
  };
  A.RenderShaderMask_paint_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      type$.nullable_ShaderMaskLayer._as(C.RenderObject.prototype.get$layer.call(t1, 0)).debugCreator = t1.debugCreator;
      return true;
    },
    $signature: 1
  };
  A.RenderWrap_computeDryBaseline_findHighestBaseline.prototype = {
    call$2(offset, child) {
      var t1 = this._box_0;
      t1.baselineOffset = C.BaselineOffset_minOf(t1.baselineOffset, C.BaselineOffset__(child.getDryBaseline$2(this.childConstraints, this.baseline), offset._dy));
    },
    $signature: 798
  };
  A.RenderWrap_computeDryBaseline_getChildSize.prototype = {
    call$1(child) {
      return child._computeIntrinsics$2$3(D.C__DryLayout, this.childConstraints, child.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
    },
    $signature: 799
  };
  A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._incomingItems;
      D.JSArray_methods.add$1(t2, this.incomingItem);
      D.JSArray_methods.sort$0(t2);
      ++t1._itemsCount;
    },
    $signature: 0
  };
  A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure0.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this;
      t1._removeActiveItemAt$2(t1._incomingItems, this.incomingItem.itemIndex).controller.dispose$0();
    },
    $signature: 26
  };
  A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure.prototype = {
    call$0() {
      var t1 = this.$this._outgoingItems;
      D.JSArray_methods.add$1(t1, this.outgoingItem);
      D.JSArray_methods.sort$0(t1);
    },
    $signature: 0
  };
  A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure0.prototype = {
    call$1(value) {
      var t4, t5, _i, item, t6,
        t1 = this.$this,
        t2 = t1._outgoingItems,
        t3 = this.outgoingItem;
      t1._removeActiveItemAt$2(t2, t3.itemIndex).controller.dispose$0();
      for (t4 = t1._incomingItems, t5 = t4.length, _i = 0; _i < t5; ++_i) {
        item = t4[_i];
        t6 = item.itemIndex;
        if (t6 > t3.itemIndex)
          item.itemIndex = t6 - 1;
      }
      for (t4 = t2.length, _i = 0; _i < t4; ++_i) {
        item = t2[_i];
        t5 = item.itemIndex;
        if (t5 > t3.itemIndex)
          item.itemIndex = t5 - 1;
      }
      t1.setState$1(new A._SliverAnimatedMultiBoxAdaptorState_removeItem__closure(t1));
    },
    $signature: 26
  };
  A._SliverAnimatedMultiBoxAdaptorState_removeItem__closure.prototype = {
    call$0() {
      return --this.$this._itemsCount;
    },
    $signature: 0
  };
  A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._StreamBuilderBaseState__subscribe_closure.prototype = {
    call$1(data) {
      var t1 = this.$this;
      t1.setState$1(new A._StreamBuilderBaseState__subscribe__closure1(t1, t1.$ti._precomputed1._as(data)));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A._StreamBuilderBaseState__subscribe__closure1.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._widget;
      t2.toString;
      t3 = t1.___StreamBuilderBaseState__summary_A;
      t3 === $ && C.throwLateFieldNI("_summary");
      t2 = t2.$ti;
      t2._eval$1("AsyncSnapshot<1>")._as(t3);
      t2 = t2._precomputed1;
      t1.set$___StreamBuilderBaseState__summary_A(t1.$ti._rest[1]._as(A.AsyncSnapshot$withData(B.ConnectionState_2, t2._as(this.data), t2)));
    },
    $signature: 0
  };
  A._StreamBuilderBaseState__subscribe_closure1.prototype = {
    call$2(error, stackTrace) {
      var t1 = this.$this;
      t1.setState$1(new A._StreamBuilderBaseState__subscribe__closure(t1, type$.Object._as(error), type$.StackTrace._as(stackTrace)));
    },
    $signature: 33
  };
  A._StreamBuilderBaseState__subscribe__closure.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._widget;
      t2.toString;
      t3 = t1.___StreamBuilderBaseState__summary_A;
      t3 === $ && C.throwLateFieldNI("_summary");
      t2 = t2.$ti;
      t2._eval$1("AsyncSnapshot<1>")._as(t3);
      t1.set$___StreamBuilderBaseState__summary_A(t1.$ti._rest[1]._as(A.AsyncSnapshot$withError(B.ConnectionState_2, this.error, this.stackTrace, t2._precomputed1)));
    },
    $signature: 0
  };
  A._StreamBuilderBaseState__subscribe_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.setState$1(new A._StreamBuilderBaseState__subscribe__closure0(t1));
    },
    $signature: 0
  };
  A._StreamBuilderBaseState__subscribe__closure0.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1._widget;
      t2.toString;
      t3 = t1.___StreamBuilderBaseState__summary_A;
      t3 === $ && C.throwLateFieldNI("_summary");
      t2.$ti._eval$1("AsyncSnapshot<1>")._as(t3);
      t1.set$___StreamBuilderBaseState__summary_A(t1.$ti._rest[1]._as(A.AsyncSnapshot$_(B.ConnectionState_3, t3.data, t3.error, t3.stackTrace, t3.$ti._precomputed1)));
    },
    $signature: 0
  };
  A._FutureBuilderState__subscribe_closure.prototype = {
    call$1(data) {
      var t1 = this.$this;
      t1.$ti._precomputed1._as(data);
      if (t1._activeCallbackIdentity === this.callbackIdentity)
        t1.setState$1(new A._FutureBuilderState__subscribe__closure1(t1, data));
    },
    $signature() {
      return this.$this.$ti._eval$1("Null(1)");
    }
  };
  A._FutureBuilderState__subscribe__closure1.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.$ti;
      t1.set$___FutureBuilderState__snapshot_A(t2._eval$1("AsyncSnapshot<1>")._as(A.AsyncSnapshot$withData(B.ConnectionState_3, this.data, t2._precomputed1)));
    },
    $signature: 0
  };
  A._FutureBuilderState__subscribe_closure0.prototype = {
    call$2(error, stackTrace) {
      var t1;
      type$.Object._as(error);
      type$.StackTrace._as(stackTrace);
      t1 = this.$this;
      if (t1._activeCallbackIdentity === this.callbackIdentity)
        t1.setState$1(new A._FutureBuilderState__subscribe__closure(t1, error, stackTrace));
      C.assertHelper(new A._FutureBuilderState__subscribe__closure0(error, stackTrace).call$0());
    },
    $signature: 33
  };
  A._FutureBuilderState__subscribe__closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.$ti;
      t1.set$___FutureBuilderState__snapshot_A(t2._eval$1("AsyncSnapshot<1>")._as(A.AsyncSnapshot$withError(B.ConnectionState_3, this.error, this.stackTrace, t2._precomputed1)));
    },
    $signature: 0
  };
  A._FutureBuilderState__subscribe__closure0.prototype = {
    call$0() {
      return true;
    },
    $signature: 1
  };
  A.precacheImage_closure.prototype = {
    call$2(image, sync) {
      var t1;
      type$.nullable_ImageInfo._as(image);
      C._asBool(sync);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$0(0);
      C.BindingBase_checkInstance($.SchedulerBinding__instance, type$.SchedulerBinding).addPostFrameCallback$2$debugLabel(new A.precacheImage__closure(this._box_0, image, this.stream), "precacheImage.removeListener");
    },
    $signature: 180
  };
  A.precacheImage__closure.prototype = {
    call$1(timeStamp) {
      var t1;
      type$.Duration._as(timeStamp);
      t1 = this.image;
      if (t1 != null)
        t1.dispose$0();
      t1 = this._box_0.listener;
      t1.toString;
      this.stream.removeListener$1(0, t1);
    },
    $signature: 3
  };
  A.precacheImage_closure0.prototype = {
    call$2(exception, stackTrace) {
      var t1;
      type$.Object._as(exception);
      type$.nullable_StackTrace._as(stackTrace);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$0(0);
      t1 = this._box_0.listener;
      t1.toString;
      this.stream.removeListener$1(0, t1);
      t1 = C.ErrorDescription$("image failed to precache");
      C.FlutterError_reportError(new C.FlutterErrorDetails(exception, stackTrace, "image resource service", t1, null, true));
    },
    $signature: 81
  };
  A._AnimatedContainerState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.AlignmentGeometryTween(type$.AlignmentGeometry._as(value), null);
    },
    $signature: typesOffset + 49
  };
  A._AnimatedContainerState_forEachTween_closure0.prototype = {
    call$1(value) {
      return new C.EdgeInsetsGeometryTween(type$.EdgeInsetsGeometry._as(value), null);
    },
    $signature: 126
  };
  A._AnimatedContainerState_forEachTween_closure1.prototype = {
    call$1(value) {
      return new C.DecorationTween(type$.Decoration._as(value), null);
    },
    $signature: 291
  };
  A._AnimatedContainerState_forEachTween_closure2.prototype = {
    call$1(value) {
      return new C.DecorationTween(type$.Decoration._as(value), null);
    },
    $signature: 291
  };
  A._AnimatedContainerState_forEachTween_closure3.prototype = {
    call$1(value) {
      return new E.BoxConstraintsTween(type$.BoxConstraints._as(value), null);
    },
    $signature: typesOffset + 109
  };
  A._AnimatedContainerState_forEachTween_closure4.prototype = {
    call$1(value) {
      return new C.EdgeInsetsGeometryTween(type$.EdgeInsetsGeometry._as(value), null);
    },
    $signature: 126
  };
  A._AnimatedContainerState_forEachTween_closure5.prototype = {
    call$1(value) {
      return new A.Matrix4Tween(type$.Matrix4._as(value), null);
    },
    $signature: typesOffset + 110
  };
  A._AnimatedContainerState_forEachTween_closure6.prototype = {
    call$1(value) {
      return new A.AlignmentGeometryTween(type$.AlignmentGeometry._as(value), null);
    },
    $signature: typesOffset + 49
  };
  A.MediaQuery_withNoTextScaling_closure.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      C.debugCheckHasMediaQuery(context);
      C.debugCheckHasMediaQuery(context);
      return C.MediaQuery$(this.child, C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data.copyWith$1$textScaler(D._LinearTextScaler_1));
    },
    $signature: 225
  };
  A._PageViewState_build_closure.prototype = {
    call$1(notification) {
      var t1, metrics, t2, t3, currentPage;
      type$.ScrollNotification._as(notification);
      if (notification.ViewportNotificationMixin__depth === 0) {
        this.$this._widget.toString;
        t1 = notification instanceof C.ScrollUpdateNotification;
      } else
        t1 = false;
      if (t1) {
        metrics = type$.PageMetrics._as(notification.metrics);
        t1 = metrics._scroll_metrics$_pixels;
        t1.toString;
        t2 = metrics._scroll_metrics$_minScrollExtent;
        t2.toString;
        t3 = metrics._scroll_metrics$_maxScrollExtent;
        t3.toString;
        t3 = Math.max(0, C.clampDouble(t1, t2, t3));
        t2 = metrics._scroll_metrics$_viewportDimension;
        t2.toString;
        currentPage = D.JSNumber_methods.round$0(t3 / Math.max(1, t2 * metrics.viewportFraction));
        t1 = this.$this;
        if (currentPage !== t1._lastReportedPage) {
          t1._lastReportedPage = currentPage;
          t1._widget.onPageChanged.call$1(currentPage);
        }
      }
      return false;
    },
    $signature: 62
  };
  A._PageViewState_build_closure0.prototype = {
    call$2(context, position) {
      var t1, t2;
      type$.BuildContext._as(context);
      type$.ViewportOffset._as(position);
      t1 = this.$this;
      t2 = t1._widget;
      t2.toString;
      t1.___PageViewState__controller_A === $ && C.throwLateFieldNI("_controller");
      return C.Viewport$(0, this.axisDirection, 0, D.CacheExtentStyle_1, null, D.Clip_1, position, C._setArrayType([new A.SliverFillViewport(1, true, t2.childrenDelegate, null)], type$.JSArray_Widget));
    },
    $signature: 801
  };
  A.ToggleableStateMixin__handleTapDown_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__downPosition = this.details.localPosition;
    },
    $signature: 0
  };
  A.ToggleableStateMixin__handleTapEnd_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__downPosition = null;
    },
    $signature: 0
  };
  A.ToggleableStateMixin__handleFocusHighlightChanged_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__focused = this.focused;
    },
    $signature: 0
  };
  A.ToggleableStateMixin__handleHoverChanged_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__hovering = this.hovering;
    },
    $signature: 0
  };
  A._ChatState_build_closure.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this.___ChatState__userCache_F;
      t1 === $ && C.throwLateFieldNI("_userCache");
      return t1;
    },
    $signature: typesOffset + 133
  };
  A._ChatState_build_closure0.prototype = {
    call$1(__wc1_formal) {
      return new A.ComposerHeightNotifier($.$get$ChangeNotifier__emptyListeners());
    },
    $signature: typesOffset + 137
  };
  A._ChatState_build_closure1.prototype = {
    call$1(__wc2_formal) {
      return new A.LoadMoreNotifier($.$get$ChangeNotifier__emptyListeners());
    },
    $signature: typesOffset + 160
  };
  A._ChatAnimatedListState_initState_closure.prototype = {
    call$1($event) {
      var t1 = this.$this;
      D.JSArray_methods.add$1(t1._operationsQueue, type$.ChatOperation._as($event));
      t1._processOperationsQueue$0();
    },
    $signature: typesOffset + 50
  };
  A._ChatAnimatedListState_onKeyboardHeightChanged_closure.prototype = {
    call$1(__wc0_formal) {
      return this.$call$body$_ChatAnimatedListState_onKeyboardHeightChanged_closure(type$.Duration._as(__wc0_formal));
    },
    $call$body$_ChatAnimatedListState_onKeyboardHeightChanged_closure(__wc0_formal) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, t3, t4, t1;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              if (t1._framework$_element != null) {
                t2 = t1.___ChatAnimatedListState__scrollController_F;
                t2 === $ && C.throwLateFieldNI("_scrollController");
                t2 = t2._positions.length === 0 || $async$self.height === 0;
              } else
                t2 = true;
              if (t2) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1._widget.toString;
              t2 = t1.___ChatAnimatedListState__scrollController_F;
              t2 === $ && C.throwLateFieldNI("_scrollController");
              t3 = t2.get$position(0)._pixels;
              t3.toString;
              t4 = t2.get$position(0)._maxScrollExtent;
              t4.toString;
              t4 = Math.min(t3 + $async$self.height, t4);
              t1._widget.toString;
              $async$goto = 3;
              return C._asyncAwait(t2.animateTo$3$curve$duration(t4, D.Cubic_O6W, D.Duration_250000), $async$call$1);
            case 3:
              // returning from await.
              t1 = t1._scrollToBottomShowTimer;
              if (t1 != null)
                t1.cancel$0(0);
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 802
  };
  A._ChatAnimatedListState_build_closure.prototype = {
    call$3(context, index, animation) {
      var t1, t2, t3, message;
      type$.BuildContext._as(context);
      C._asInt(index);
      type$.Animation_double._as(animation);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__oldList_A;
      t2 === $ && C.throwLateFieldNI("_oldList");
      t3 = t1.visualPosition$1(index);
      if (!(t3 >= 0 && t3 < t2.length))
        return C.ioore(t2, t3);
      message = t2[t3];
      t3 = t1._widget;
      t3.toString;
      t2 = t1.visualPosition$1(index);
      t1._widget.toString;
      return t3.itemBuilder$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, t2, animation, null, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 803
  };
  A._ChatAnimatedListState_build_buildSlivers.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._widget.toString;
      t2 = C._setArrayType([], type$.JSArray_Widget);
      t1._widget.toString;
      t2.push(new C.SliverPadding(new C.EdgeInsets(0, 8, 0, 0), null, null));
      t1._widget.toString;
      t2.push(this.sliverAnimatedList);
      t1._widget.toString;
      t2.push(t1._buildComposerHeightSliver$1(this.context));
      return t2;
    },
    $signature: 804
  };
  A._ChatAnimatedListState_build_closure0.prototype = {
    call$1(notification) {
      var t1, t2;
      if (notification instanceof C.ScrollMetricsNotification) {
        t1 = this.$this;
        t1._adjustInitialScrollPosition$0();
        t1._handleToggleScrollToBottom$0();
        t1._handlePagination$0();
      }
      if (notification instanceof C.UserScrollNotification) {
        t1 = notification.direction;
        t2 = this.$this;
        t2._widget.toString;
        if (t1 === D.ScrollDirection_1)
          t2._userHasScrolled = t2._paginationShouldTrigger = true;
        else {
          if (t1 === D.ScrollDirection_2)
            t2._startPaginationShouldTrigger = true;
          if (t2.get$_isAtChatEndScrollPosition())
            t2._userHasScrolled = false;
        }
      }
      if (notification instanceof C.ScrollUpdateNotification)
        this.$this._handleToggleScrollToBottom$0();
      return false;
    },
    $signature: 805
  };
  A._ChatAnimatedListState_build_closure1.prototype = {
    call$0() {
      var context = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this.$this._listKey),
        t1 = C._setArrayType([], type$.JSArray_BuildContext);
      if (context != null)
        t1.push(context);
      return t1;
    },
    $signature: 806
  };
  A._ChatAnimatedListState_build_closure2.prototype = {
    call$3(context, isEmpty, child) {
      var t1;
      if (C._asBool(isEmpty)) {
        t1 = this.builders.emptyChatListBuilder;
        t1 = t1 == null ? null : t1.call$1(context);
        return C.Positioned$fill(0, t1 == null ? B.EmptyChatList_null : t1);
      }
      return D.SizedBox_0_0_null_null;
    },
    $signature: 145
  };
  A._ChatAnimatedListState__scrollToEnd_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2;
      type$.Duration._as(__wc0_formal);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__scrollController_F;
      t2 === $ && C.throwLateFieldNI("_scrollController");
      if (t2._positions.length === 0 || t1._framework$_element == null)
        return;
      t1._widget.toString;
      t2 = t2.get$position(0)._maxScrollExtent;
      t2.toString;
      if (t2 === 0)
        t1._initialScrollToEnd$0();
      else
        t1._subsequentScrollToEnd$1(this.data);
    },
    $signature: 3
  };
  A._ChatAnimatedListState__adjustInitialScrollPosition_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2, t3;
      type$.Duration._as(__wc0_formal);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__scrollController_F;
      t2 === $ && C.throwLateFieldNI("_scrollController");
      if (t2._positions.length === 0 || t1._framework$_element == null)
        return;
      t3 = t1.___ChatAnimatedListState__oldList_A;
      t3 === $ && C.throwLateFieldNI("_oldList");
      if (t3.length === 0) {
        t1.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = false;
        return;
      }
      t3 = t1.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A;
      t3 === $ && C.throwLateFieldNI("_needsInitialScrollPositionAdjustment");
      if (t3) {
        t3 = t2.get$position(0)._maxScrollExtent;
        t3.toString;
        if (t3 === 0)
          return;
        t3 = t2.get$position(0)._pixels;
        t3.toString;
        if (t3 === t1.get$_chatEndScrollPosition())
          t1.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = false;
        else
          t2.jumpTo$1(t1.get$_chatEndScrollPosition());
      }
    },
    $signature: 3
  };
  A._ChatAnimatedListState__handleScrollToBottom_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2, t3, t4;
      type$.Duration._as(__wc0_formal);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__scrollController_F;
      t2 === $ && C.throwLateFieldNI("_scrollController");
      if (t2._positions.length === 0 || t1._framework$_element == null)
        return;
      t1._isScrollingToBottom = true;
      t3 = t1.___ChatAnimatedListState__scrollToBottomController_F;
      t3 === $ && C.throwLateFieldNI("_scrollToBottomController");
      t3.reverse$0(0);
      t1._widget.toString;
      t3 = t1.___ChatAnimatedListState__scrollAnimationController_F;
      t3 === $ && C.throwLateFieldNI("_scrollAnimationController");
      t4 = t2.get$position(0)._pixels;
      t4.toString;
      t2 = t2.get$position(0)._maxScrollExtent;
      t2.toString;
      t3.set$value(0, t4 / t2);
      t3.fling$0();
      t1._isScrollingToBottom = t1._userHasScrolled = false;
      t1._startPaginationShouldTrigger = true;
    },
    $signature: 3
  };
  A._ChatAnimatedListState__handleToggleScrollToBottom_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._framework$_element != null) {
        t1._userHasScrolled = true;
        t1 = t1.___ChatAnimatedListState__scrollToBottomController_F;
        t1 === $ && C.throwLateFieldNI("_scrollToBottomController");
        t1.forward$0(0);
      }
    },
    $signature: 0
  };
  A._ChatAnimatedListState__scrollToMessageId_closure.prototype = {
    call$1(m) {
      type$.Message._as(m);
      m.get$id(m);
      return false;
    },
    $signature: 79
  };
  A._ChatAnimatedListState__scrollToIndex_closure.prototype = {
    call$1(targetOffset) {
      return this.offset;
    },
    $signature: 2
  };
  A._ChatAnimatedListState__scrollToIndex_closure0.prototype = {
    call$1(targetOffset) {
      return this.offset;
    },
    $signature: 2
  };
  A._ChatAnimatedListState__onRemoved_closure.prototype = {
    call$2(context, animation) {
      type$.Animation_double._as(animation);
      return this.$this._widget.itemBuilder$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, this.data, this.position, animation, true, null, null);
    },
    $signature: 807
  };
  A._ChatAnimatedListState__onDiffUpdate_closure0.prototype = {
    call$2(pos, data) {
      return this.$this._onInserted$3(pos, type$.Message._as(data), this.animated);
    },
    $signature: 292
  };
  A._ChatAnimatedListState__onDiffUpdate_closure2.prototype = {
    call$2(pos, data) {
      return this.$this._onRemoved$3(pos, type$.Message._as(data), this.animated);
    },
    $signature: 292
  };
  A._ChatAnimatedListState__onDiffUpdate_closure.prototype = {
    call$3(pos, oldData, newData) {
      var t2,
        t1 = type$.Message;
      t1._as(oldData);
      t1._as(newData);
      t1 = this.$this;
      t2 = this.animated;
      t1._onRemoved$3(pos, oldData, t2);
      t1._onInserted$3(pos, newData, t2);
      return null;
    },
    $signature: 809
  };
  A._ChatAnimatedListState__onDiffUpdate_closure1.prototype = {
    call$3(oldPos, newPos, data) {
      var t1, t2, t3;
      type$.Message._as(data);
      t1 = this.$this;
      t2 = this.animated;
      t1._onRemoved$3(oldPos, data, t2);
      t3 = t1.___ChatAnimatedListState__oldList_A;
      t3 === $ && C.throwLateFieldNI("_oldList");
      t3 = t3.length;
      t1._onInserted$3(t3 !== 0 ? D.JSInt_methods.clamp$2(newPos, 0, t3) : 0, data, t2);
      return null;
    },
    $signature: 810
  };
  A.__ChatAnimatedListState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._SliverSpacingState_build_closure.prototype = {
    call$3(context, heightNotifier, child) {
      var t1, t2;
      type$.BuildContext._as(context);
      type$.ComposerHeightNotifier._as(heightNotifier);
      type$.nullable_Widget._as(child);
      t1 = heightNotifier._composer_height_notifier$_height;
      t2 = this.$this._widget.bottomPadding;
      return new C.SliverPadding(new C.EdgeInsets(0, 0, 0, t1 + t2 + this.safeArea), null, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 174
  };
  A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (t1._framework$_element != null) {
        t2 = Math.max(this.keyboardHeight / this.pixelRatio - t1.KeyboardMixin__initialSafeArea, 0);
        t1 = t1._widget.onKeyboardHeightChanged;
        if (t1 != null)
          t1.call$1(t2);
      }
    },
    $signature: 0
  };
  A.ChatMessage_build_closure1.prototype = {
    call$1(details) {
      var t2,
        t1 = this.onMessageTap;
      if (t1 == null)
        t1 = null;
      else {
        t2 = this.$this;
        t2 = t1.call$4$details$index(this.context, t2.message, details, t2.index);
        t1 = t2;
      }
      return t1;
    },
    $signature: 60
  };
  A.ChatMessage_build_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.onMessageDoubleTap;
      if (t1 == null)
        t1 = null;
      else {
        t2 = this.$this;
        t2 = t1.call$3$index(this.context, t2.message, t2.index);
        t1 = t2;
      }
      return t1;
    },
    $signature: 0
  };
  A.ChatMessage_build_closure0.prototype = {
    call$1(details) {
      var t2,
        t1 = this.onMessageLongPress;
      if (t1 == null)
        t1 = null;
      else {
        t2 = this.$this;
        t2 = t1.call$4$details$index(this.context, t2.message, details, t2.index);
        t1 = t2;
      }
      return t1;
    },
    $signature: 170
  };
  A._ChatMessageInternalState_initState_closure.prototype = {
    call$1($event) {
      var t1, t2, t3;
      type$.ChatOperation._as($event);
      switch ($event.type.index) {
        case 2:
          t1 = $event.oldMessage;
          if (C.assertTest(t1 != null))
            C.assertThrow("Old message must be provided when updating a message.");
          if (C.assertTest($event.message != null))
            C.assertThrow("Message must be provided when updating a message.");
          t2 = this.$this;
          t3 = t2.___ChatMessageInternalState__updatedMessage_A;
          t3 === $ && C.throwLateFieldNI("_updatedMessage");
          if (t3.get$id(t3) === t1.get$id(t1))
            t2.setState$1(new A._ChatMessageInternalState_initState__closure(t2, $event));
          break;
        default:
          break;
      }
    },
    $signature: typesOffset + 50
  };
  A._ChatMessageInternalState_initState__closure.prototype = {
    call$0() {
      var t1 = this.event.message;
      t1.toString;
      this.$this.___ChatMessageInternalState__updatedMessage_A = t1;
    },
    $signature: 0
  };
  A._ComposerState_initState_closure.prototype = {
    call$1(__wc0_formal) {
      type$.Duration._as(__wc0_formal);
      return this.$this._measure$0();
    },
    $signature: 3
  };
  A._ComposerState_didUpdateWidget_closure.prototype = {
    call$1(__wc0_formal) {
      type$.Duration._as(__wc0_formal);
      return this.$this._measure$0();
    },
    $signature: 3
  };
  A._ComposerState_build_closure.prototype = {
    call$1(t) {
      var t1;
      type$.ChatTheme._as(t);
      t1 = t.colors;
      return new C._Record_5_bodyMedium_onSurface_primary_surfaceContainerHigh_surfaceContainerLow([t.typography.bodyMedium, t1.onSurface, t1.primary, t1.surfaceContainerHigh, t1.surfaceContainerLow]);
    },
    $signature: typesOffset + 198
  };
  A._ComposerState_build_closure0.prototype = {
    call$1(value) {
      var t1 = this.$this.___ComposerState__hasTextNotifier_F;
      t1 === $ && C.throwLateFieldNI("_hasTextNotifier");
      t1.set$value(0, D.JSString_methods.trim$0(value).length !== 0);
    },
    $signature: 35
  };
  A._ComposerState_build_closure1.prototype = {
    call$3(context, hasText, child) {
      var t1, t2, _null = null;
      C._asBool(hasText);
      t1 = this.$this;
      t1._widget.toString;
      if (hasText)
        t2 = this.theme._values[1].withValues$1$alpha(0.5);
      else
        t2 = this.theme._values[1].withValues$1$alpha(0.5);
      t1._widget.toString;
      return C.IconButton$(t2, _null, _null, B.Icon_kve, _null, _null, !hasText ? _null : new A._ComposerState_build__closure(t1), _null, _null, _null, _null);
    },
    $signature: 145
  };
  A._ComposerState_build__closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ComposerState__textController_F;
      t2 === $ && C.throwLateFieldNI("_textController");
      return t1._handleSubmitted$1(t2._change_notifier$_value.text);
    },
    $signature: 0
  };
  A._EmptyChatListState_initState_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._framework$_element != null) {
        t1 = t1.___EmptyChatListState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t1.forward$0(0);
      }
    },
    $signature: 11
  };
  A._EmptyChatListState_build_closure.prototype = {
    call$1(t) {
      type$.ChatTheme._as(t);
      return new C._Record_2_bodyLarge_onSurface(t.typography.bodyLarge, t.colors.onSurface);
    },
    $signature: typesOffset + 199
  };
  A.__EmptyChatListState_State_SingleTickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.SingleTickerProviderStateMixin__ticker;
      if (t2 == null || t2._ticker$_future == null)
        return true;
      throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatS), C.ErrorHint$(string$.Ticker), t1.SingleTickerProviderStateMixin__ticker.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
    },
    $signature: 1
  };
  A.ScrollToBottom_build_closure0.prototype = {
    call$1(t) {
      var t1 = type$.ChatTheme._as(t).colors;
      return new C._Record_2_onSurface_surfaceContainer(t1.onSurface, t1.surfaceContainer);
    },
    $signature: typesOffset + 200
  };
  A.ScrollToBottom_build_closure.prototype = {
    call$3(context, heightNotifier, child) {
      var t1, t2, t3, _null = null;
      type$.BuildContext._as(context);
      type$.ComposerHeightNotifier._as(heightNotifier);
      type$.nullable_Widget._as(child);
      t1 = heightNotifier._composer_height_notifier$_height;
      t1 = t1 + 20 + this.bottomSafeArea;
      t2 = this.$this;
      t3 = this.theme;
      return C.Positioned$(t1, C.ScaleTransition$(D.Alignment_0_0, C.FloatingActionButton$(t3._1, B.Icon_Ngt, t3._0, _null, _null, true, t2.onPressed, D.CircleBorder_oSW), t2.animation), _null, _null, _null, 16, _null, _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 201
  };
  A.SimpleTextMessage_build_closure.prototype = {
    call$1(t) {
      var t1, t2;
      type$.ChatTheme._as(t);
      t1 = t.typography;
      t2 = t.colors;
      return new C._Record_7_bodyMedium_labelSmall_onPrimary_onSurface_primary_shape_surfaceContainer([t1.bodyMedium, t1.labelSmall, t2.onPrimary, t2.onSurface, t2.primary, t.shape, t2.surfaceContainer]);
    },
    $signature: typesOffset + 31
  };
  A.AccentNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1;
      type$.BoxConstraints._as(constraints);
      t1 = this.options;
      t1 = new A.Measurement(t1.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(t1);
      return A.ResetDimension$(A.ShiftBaseline$(this._box_0.accentSymbolWidget, -t1, 1), 0, null, D.CrossAxisAlignment_2, constraints.minWidth);
    },
    $signature: typesOffset + 203
  };
  A.AccentNode_buildWidget_closure0.prototype = {
    call$2(context, constraints) {
      var t1, defaultRuleThickness, accentRenderConfig, t2, t3, svgWidget, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this.label;
      if (t1 === "\xaf") {
        t1 = this.options;
        defaultRuleThickness = new A.Measurement(t1.get$fontMetrics().defaultRuleThickness, B.Unit_16).toLpUnder$1(t1);
        return new C.Padding(new C.EdgeInsets(0, 0, 0, 3 * defaultRuleThickness), C.Container$(_null, _null, D.Clip_0, t1.color, _null, _null, _null, defaultRuleThickness, _null, _null, _null, _null, _null, constraints.minWidth), _null);
      } else {
        accentRenderConfig = B.Map_8zs6u.$index(0, t1);
        if (accentRenderConfig == null || accentRenderConfig.overImageName == null)
          return C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
        t2 = accentRenderConfig.overImageName;
        t2.toString;
        t3 = this.options;
        svgWidget = A.strechySvgSpan(t2, constraints.minWidth, t3);
        if (t1 === "\u23de")
          return new C.Padding(new C.EdgeInsets(0, 0, 0, new A.Measurement(0.1, B.Unit_16).toLpUnder$1(t3)), svgWidget, _null);
        else
          return svgWidget;
      }
    },
    $signature: 109
  };
  A.AccentNode_buildWidget_closure1.prototype = {
    call$1(width) {
      return new C.BoxConstraints(C._asDouble(width) - 2 * this.skew, 1 / 0, 0, 1 / 0);
    },
    $signature: 128
  };
  A.AccentUnderNode_buildWidget_closure0.prototype = {
    call$1(width) {
      return new C.BoxConstraints(C._asDouble(width), 1 / 0, 0, 1 / 0);
    },
    $signature: 128
  };
  A.AccentUnderNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1, defaultRuleThickness, accentRenderConfig, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this.label;
      if (t1 === "\xaf") {
        t1 = this.options;
        defaultRuleThickness = new A.Measurement(t1.get$fontMetrics().defaultRuleThickness, B.Unit_16).toLpUnder$1(t1);
        return new C.Padding(new C.EdgeInsets(0, 3 * defaultRuleThickness, 0, 0), C.Container$(_null, _null, D.Clip_0, t1.color, _null, _null, _null, defaultRuleThickness, _null, _null, _null, _null, _null, constraints.minWidth), _null);
      } else {
        accentRenderConfig = B.Map_8zs6u.$index(0, t1);
        if (accentRenderConfig == null || accentRenderConfig.underImageName == null)
          return C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
        t1 = accentRenderConfig.underImageName;
        t1.toString;
        return A.strechySvgSpan(t1, constraints.minWidth, this.options);
      }
    },
    $signature: 109
  };
  A.EnclosureNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4, t5, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = constraints.constrainWidth$0();
      t2 = constraints.constrainHeight$0();
      t3 = this.options;
      t4 = new A.Measurement(0.046, B.Unit_16).toLpUnder$1(t3);
      t5 = this.$this.bordercolor;
      return C.CustomPaint$(_null, _null, _null, new A.LinePainter(0, 1, 1, 0, t4, t5 == null ? t3.color : t5, _null), new C.Size(t1, t2));
    },
    $signature: 295
  };
  A.EnclosureNode_buildWidget_closure0.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4, t5, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = constraints.constrainWidth$0();
      t2 = constraints.constrainHeight$0();
      t3 = this.options;
      t4 = new A.Measurement(0.046, B.Unit_16).toLpUnder$1(t3);
      t5 = this.$this.bordercolor;
      return C.CustomPaint$(_null, _null, _null, new A.LinePainter(0, 0, 1, 1, t4, t5 == null ? t3.color : t5, _null), new C.Size(t1, t2));
    },
    $signature: 295
  };
  A.EquationArrayNode_buildWidget_closure.prototype = {
    call$1(e) {
      return type$.Measurement._as(e).toLpUnder$1(this.options);
    },
    $signature: typesOffset + 53
  };
  A.EquationArrayNode_buildWidget_closure0.prototype = {
    call$1(e) {
      return type$.nullable_BuildResult._as(e).widget;
    },
    $signature: typesOffset + 206
  };
  A.EquationArrayNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.EquationRowNode._as(e).toJson$0();
    },
    $signature: typesOffset + 54
  };
  A.EquationArrayNode_toJson_closure0.prototype = {
    call$1(e) {
      return type$.MatrixSeparatorStyle._as(e)._enumToString$0();
    },
    $signature: typesOffset + 23
  };
  A.EquationArrayNode_toJson_closure1.prototype = {
    call$1(e) {
      var t1;
      type$.Measurement._as(e);
      t1 = B.Map_Dgfp9.$index(0, e.unit);
      t1.toString;
      return C.S(e.value) + t1;
    },
    $signature: typesOffset + 36
  };
  A.LeftRightNode_buildWidget_closure.prototype = {
    call$1(index) {
      var t1, t2, t3, t4, t5, _this = this;
      if (D.JSInt_methods.$mod(index, 2) === 0) {
        t1 = _this.options;
        t2 = _this.numElements;
        if (index === t2 - 1)
          t3 = 0;
        else {
          t3 = index === 0 ? B.AtomType_4 : B.AtomType_3;
          t4 = _this.$this.body;
          t5 = D.JSInt_methods._tdivFast$1(index + 1, 2);
          if (!(t5 < t4.length))
            return C.ioore(t4, t5);
          t5 = t4[t5].overrideType;
          t4 = t5 == null ? B.AtomType_0 : t5;
          t4 = A.getSpacingSize(t3, t4, t1.style).toLpUnder$1(t1);
          t3 = t4;
        }
        return A.LineElement$(false, false, new A.LayoutBuilderPreserveBaseline(new A.LeftRightNode_buildWidget__closure(_this.$this, index, t2, t1), null), new A.LeftRightNode_buildWidget__closure0(_this.a, t1), t3);
      } else {
        t1 = _this.$this.body;
        t2 = D.JSInt_methods._tdivFast$1(index, 2);
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t1 = t1[t2].overrideType;
        if (t1 == null)
          t1 = B.AtomType_0;
        t3 = index === _this.numElements - 2 ? B.AtomType_5 : B.AtomType_3;
        t4 = _this.options;
        t4 = A.getSpacingSize(t1, t3, t4.style).toLpUnder$1(t4);
        t3 = _this.childBuildResults;
        if (!(t2 < t3.length))
          return C.ioore(t3, t2);
        return A.LineElement$(false, false, t3[t2].widget, null, t4);
      }
    },
    $signature: typesOffset + 62
  };
  A.LeftRightNode_buildWidget__closure0.prototype = {
    call$2(height, depth) {
      var t1 = this.a,
        delta = Math.max(C._asDouble(height) - t1, C._asDouble(depth) + t1);
      return new C.BoxConstraints(0, 1 / 0, Math.max(delta / 500 * 901, 2 * delta - B.Measurement_5_Unit_0.toLpUnder$1(this.options)), 1 / 0);
    },
    $signature: 814
  };
  A.LeftRightNode_buildWidget__closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, _this = this;
      type$.BoxConstraints._as(constraints);
      t1 = _this.index;
      if (t1 === 0)
        t1 = _this.$this.leftDelim;
      else {
        t2 = _this.$this;
        if (t1 === _this.numElements - 1)
          t1 = t2.rightDelim;
        else {
          t2 = t2.middle;
          t1 = D.JSInt_methods._tdivFast$1(t1, 2) - 1;
          if (!(t1 >= 0 && t1 < t2.length))
            return C.ioore(t2, t1);
          t1 = t2[t1];
        }
      }
      return A.buildCustomSizedDelimWidget(t1, constraints.minHeight, _this.options);
    },
    $signature: 109
  };
  A.LeftRightNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.EquationRowNode._as(e).toJson$0();
    },
    $signature: typesOffset + 54
  };
  A.buildCustomSizedDelimWidget_closure.prototype = {
    call$1(element) {
      type$.DelimiterConf._as(element);
      return A.getHeightForDelim(this.delim, element.font.get$fontName(), this.options, element.style) > this.minDelimiterHeight;
    },
    $signature: typesOffset + 20
  };
  A.MatrixNode$__closure.prototype = {
    call$1(row) {
      return J.get$length$asx(type$.List_nullable_EquationRowNode._as(row)) === this.cols;
    },
    $signature: typesOffset + 64
  };
  A.MatrixNode_MatrixNode_closure.prototype = {
    call$1(row) {
      return J.get$length$asx(type$.List_nullable_EquationRowNode._as(row));
    },
    $signature: typesOffset + 65
  };
  A.MatrixNode_MatrixNode_closure0.prototype = {
    call$1(row) {
      return A.ListExtension_extendToByFill(type$.List_nullable_EquationRowNode._as(row), this.cols, null, type$.nullable_EquationRowNode);
    },
    $signature: typesOffset + 51
  };
  A.MatrixNode_buildWidget_closure.prototype = {
    call$1(e) {
      return type$.Measurement._as(e).toLpUnder$1(this.options);
    },
    $signature: typesOffset + 53
  };
  A.MatrixNode_buildWidget_closure0.prototype = {
    call$2(index, result) {
      return result == null ? null : A.CustomLayoutId$(result.widget, index, type$.int);
    },
    $signature: typesOffset + 67
  };
  A.MatrixNode_computeChildren_closure.prototype = {
    call$1(row) {
      return type$.List_nullable_EquationRowNode._as(row);
    },
    $signature: typesOffset + 51
  };
  A.MatrixNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.MatrixColumnAlign._as(e)._enumToString$0();
    },
    $signature: typesOffset + 68
  };
  A.MatrixNode_toJson_closure0.prototype = {
    call$1(e) {
      return type$.MatrixSeparatorStyle._as(e)._enumToString$0();
    },
    $signature: typesOffset + 23
  };
  A.MatrixNode_toJson_closure1.prototype = {
    call$1(element) {
      return type$.Measurement._as(element).value === 0;
    },
    $signature: typesOffset + 58
  };
  A.MatrixNode_toJson_closure2.prototype = {
    call$1(e) {
      var t1;
      type$.Measurement._as(e);
      t1 = B.Map_Dgfp9.$index(0, e.unit);
      t1.toString;
      return C.S(e.value) + t1;
    },
    $signature: typesOffset + 36
  };
  A.MatrixNode_toJson_closure3.prototype = {
    call$1(element) {
      return type$.MatrixSeparatorStyle._as(element) === B.MatrixSeparatorStyle_2;
    },
    $signature: typesOffset + 70
  };
  A.MatrixNode_toJson_closure4.prototype = {
    call$1(e) {
      return type$.MatrixSeparatorStyle._as(e)._enumToString$0();
    },
    $signature: typesOffset + 23
  };
  A.MatrixNode_toJson_closure5.prototype = {
    call$1(e) {
      return J.map$1$1$ax(type$.List_nullable_EquationRowNode._as(e), new A.MatrixNode_toJson__closure(), type$.nullable_Map_of_String_and_nullable_Object);
    },
    $signature: typesOffset + 71
  };
  A.MatrixNode_toJson__closure.prototype = {
    call$1(e) {
      type$.nullable_EquationRowNode._as(e);
      return e == null ? null : e.toJson$0();
    },
    $signature: typesOffset + 72
  };
  A.MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure.prototype = {
    call$1(index) {
      var t2, t3, _this = this,
        t1 = _this.$this,
        col = D.JSInt_methods.$mod(index, t1.cols);
      switch (J.$index$asx(t1.columnAligns, col).index) {
        case 0:
          t1 = _this.colPos;
          if (!(col >= 0 && col < t1.length))
            return C.ioore(t1, col);
          return t1[col];
        case 2:
          t1 = _this.colPos;
          if (!(col >= 0 && col < t1.length))
            return C.ioore(t1, col);
          t1 = t1[col];
          t2 = _this.colWidths;
          if (!(col < t2.length))
            return C.ioore(t2, col);
          t2 = t2[col];
          t3 = _this.childWidths;
          if (!(index < t3.length))
            return C.ioore(t3, index);
          return t1 + t2 - t3[index];
        case 1:
        default:
          t1 = _this.colPos;
          if (!(col >= 0 && col < t1.length))
            return C.ioore(t1, col);
          t1 = t1[col];
          t2 = _this.colWidths;
          if (!(col < t2.length))
            return C.ioore(t2, col);
          t2 = t2[col];
          t3 = _this.childWidths;
          if (!(index < t3.length))
            return C.ioore(t3, index);
          return t1 + (t2 - t3[index]) / 2;
      }
    },
    $signature: 134
  };
  A.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure.prototype = {
    call$1(index) {
      var t1,
        height = this.childrenBaselines.$index(0, index);
      if (height != null) {
        t1 = this.childrenHeights.$index(0, index);
        t1.toString;
        t1 -= height;
      } else
        t1 = 0;
      return t1;
    },
    $signature: 134
  };
  A.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0.prototype = {
    call$1(index) {
      var t2,
        row = D.JSInt_methods.$tdiv(index, this.$this.cols),
        t1 = this.rowBaselinePos;
      if (!(row >= 0 && row < t1.length))
        return C.ioore(t1, row);
      t1 = t1[row];
      t2 = this.childHeights;
      if (!(index < t2.length))
        return C.ioore(t2, index);
      return t1 - t2[index];
    },
    $signature: 134
  };
  A.SqrtNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      type$.BoxConstraints._as(constraints);
      return A.sqrtSvg(constraints.minWidth, constraints.minHeight, this.options);
    },
    $signature: 109
  };
  A.getSqrtAdvanceWidth_closure.prototype = {
    call$1(element) {
      type$.DelimiterConf._as(element);
      return A.getHeightForDelim("\u221a", element.font.get$fontName(), this.options, element.style) > this.minDelimiterHeight;
    },
    $signature: typesOffset + 20
  };
  A.sqrtSvg_closure.prototype = {
    call$1(element) {
      type$.DelimiterConf._as(element);
      return A.getHeightForDelim("\u221a", element.font.get$fontName(), this.options, element.style) > this.minDelimiterHeight;
    },
    $signature: typesOffset + 20
  };
  A.StretchyOpNode_buildWidget_closure0.prototype = {
    call$1(width) {
      return new C.BoxConstraints(C._asDouble(width) + new A.Measurement(1, B.Unit_16).toLpUnder$1(this.options), 1 / 0, 0, 1 / 0);
    },
    $signature: 128
  };
  A.StretchyOpNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4;
      type$.BoxConstraints._as(constraints);
      t1 = this.options;
      t2 = new A.Measurement(t1.get$fontMetrics().xHeight, B.Unit_16).toLpUnder$1(t1);
      t3 = this.$this.symbol;
      t4 = B.Map_mkQGg.$index(0, t3);
      t3 = t4 == null ? t3 : t4;
      return A.ShiftBaseline$(A.strechySvgSpan(t3, constraints.minWidth, t1), t2, 0.5);
    },
    $signature: typesOffset + 73
  };
  A.StyleNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.GreenNode._as(e).toJson$0();
    },
    $signature: typesOffset + 47
  };
  A.SymbolNode_buildWidget_closure.prototype = {
    call$1(code) {
      var ch = C.Primitives_stringFromCharCode(C._asInt(code)),
        t1 = B.Map_3Abhf.$index(0, ch);
      t1 = t1 == null ? null : C._setArrayType(t1.split(""), type$.JSArray_String);
      return t1 == null ? C._setArrayType([ch], type$.JSArray_String) : t1;
    },
    $signature: 816
  };
  A.stringToNode_closure.prototype = {
    call$1(ch) {
      return A.SymbolNode$(this.mode, null, null, C._asString(ch), false);
    },
    $signature: typesOffset + 21
  };
  A.SlotableNode_computeWidth_closure.prototype = {
    call$1(child) {
      var t1;
      C._instanceType(this.$this)._eval$1("SlotableNode.T")._as(child);
      t1 = child == null ? null : child.get$editingWidth() - 1;
      return t1 == null ? 0 : t1;
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("int(SlotableNode.T)");
    }
  };
  A.TransparentNode_computeWidth_closure.prototype = {
    call$1(child) {
      return type$.GreenNode._as(child).get$editingWidth();
    },
    $signature: typesOffset + 37
  };
  A.TransparentNode_computeChildPositions_closure.prototype = {
    call$1(index) {
      var t1;
      if (index === 0)
        return this._box_0.curPos;
      t1 = this._box_0;
      return t1.curPos = t1.curPos + J.$index$asx(this.$this.children, index - 1).get$editingWidth();
    },
    $signature: 42
  };
  A.TransparentNode_buildWidget_closure.prototype = {
    call$1(result) {
      var t1;
      type$.nullable_BuildResult._as(result);
      t1 = result.results;
      return t1 == null ? C._setArrayType([result], type$.JSArray_BuildResult) : t1;
    },
    $signature: typesOffset + 45
  };
  A.TransparentNode_flattenedChildList_closure.prototype = {
    call$1(child) {
      type$.GreenNode._as(child);
      return child instanceof A.StyleNode ? child.get$flattenedChildList() : C._setArrayType([child], type$.JSArray_GreenNode);
    },
    $signature: typesOffset + 44
  };
  A.EquationRowNode_computeWidth_closure.prototype = {
    call$1(child) {
      return type$.GreenNode._as(child).get$editingWidth();
    },
    $signature: typesOffset + 37
  };
  A.EquationRowNode_computeChildPositions_closure.prototype = {
    call$1(index) {
      var t1;
      if (index === 0)
        return this._box_0.curPos;
      t1 = this._box_0;
      return t1.curPos = t1.curPos + J.$index$asx(this.$this.children, index - 1).get$editingWidth();
    },
    $signature: 42
  };
  A.EquationRowNode_flattenedChildList_closure.prototype = {
    call$1(child) {
      type$.GreenNode._as(child);
      return child instanceof A.StyleNode ? child.get$flattenedChildList() : C._setArrayType([child], type$.JSArray_GreenNode);
    },
    $signature: typesOffset + 44
  };
  A.EquationRowNode_computeCaretPositions_closure.prototype = {
    call$1(index) {
      var t1, t2, t3, t4;
      if (index === 0)
        return this._box_0.curPos;
      t1 = this._box_0;
      t2 = t1.curPos;
      t3 = this.$this.get$flattenedChildList();
      t4 = index - 1;
      if (!(t4 >= 0 && t4 < t3.length))
        return C.ioore(t3, t4);
      return t1.curPos = t2 + t3[t4].get$editingWidth();
    },
    $signature: 42
  };
  A.EquationRowNode_buildWidget_closure.prototype = {
    call$1(result) {
      var t1;
      type$.nullable_BuildResult._as(result);
      t1 = result.results;
      return t1 == null ? C._setArrayType([result], type$.JSArray_BuildResult) : t1;
    },
    $signature: typesOffset + 45
  };
  A.EquationRowNode_buildWidget_closure0.prototype = {
    call$1(e) {
      return type$.BuildResult._as(e).options;
    },
    $signature: typesOffset + 79
  };
  A.EquationRowNode_buildWidget_closure1.prototype = {
    call$1(index) {
      var e, t2, t3,
        t1 = this.$this.get$flattenedChildList();
      if (!(index < t1.length))
        return C.ioore(t1, index);
      e = t1[index];
      t1 = e.get$leftType();
      t2 = e.get$rightType();
      t3 = this.flattenedChildOptions;
      if (!(index < t3.length))
        return C.ioore(t3, index);
      return new A._NodeSpacingConf(t1, t2, t3[index], 0);
    },
    $signature: typesOffset + 80
  };
  A.EquationRowNode_buildWidget_closure2.prototype = {
    call$2(prev, curr) {
      var t2, _null = null,
        t1 = prev == null;
      if ((t1 ? _null : prev.rightType) === B.AtomType_2)
        t2 = B.Set_APva8.contains$1(0, curr == null ? _null : curr.leftType);
      else
        t2 = false;
      if (t2) {
        prev.rightType = B.AtomType_0;
        if (prev.leftType === B.AtomType_2)
          prev.leftType = B.AtomType_0;
      } else {
        if ((curr == null ? _null : curr.leftType) === B.AtomType_2) {
          t2 = B.Set_ifAq1.contains$1(0, t1 ? _null : prev.rightType);
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          curr.leftType = B.AtomType_0;
          if (curr.rightType === B.AtomType_2)
            curr.rightType = B.AtomType_0;
        }
      }
    },
    $signature: typesOffset + 43
  };
  A.EquationRowNode_buildWidget_closure3.prototype = {
    call$2(prev, curr) {
      var t1, t2, t3;
      if (prev != null && curr != null) {
        t1 = prev.rightType;
        t2 = curr.leftType;
        t3 = curr.options;
        prev.spacingAfter = A.getSpacingSize(t1, t2, t3.style).toLpUnder$1(t3);
      }
    },
    $signature: typesOffset + 43
  };
  A.EquationRowNode_buildWidget_closure4.prototype = {
    call$3(context, mode, child) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      type$.FlutterMathMode._as(mode);
      type$.nullable_Widget._as(child);
      if (mode === B.FlutterMathMode_2) {
        t1 = _this.$this._syntax_tree$_key;
        t1.toString;
        return A.Line$(_this.lineChildren, t1);
      }
      t1 = _this.$this;
      t2 = type$.TextSelection;
      return A.ProxyProvider$(A.Selector2$(new A.EquationRowNode_buildWidget__closure(t1, _this.lineChildren, _this.options), new A.EquationRowNode_buildWidget__closure0(t1), t2, type$.Tuple2_LayerLink_LayerLink, type$.Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink), new A.EquationRowNode_buildWidget__closure1(), new A.EquationRowNode_buildWidget__closure2(t1), type$.MathController, t2);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 82
  };
  A.EquationRowNode_buildWidget__closure1.prototype = {
    call$1(_) {
      return D.TextSelection_kab;
    },
    $signature: 817
  };
  A.EquationRowNode_buildWidget__closure2.prototype = {
    call$3(context, controller, _) {
      var selection, t1, t2, t3;
      type$.MathController._as(controller);
      type$.nullable_TextSelection._as(_);
      selection = controller.get$selection();
      t1 = selection.get$baseOffset(selection);
      t2 = this.$this;
      t3 = t2.PositionDependentMixin_range;
      t3 = A.IntExt_clampInt(t1, t3.start - 1, t3.end + 1);
      t1 = selection.get$extentOffset(selection);
      t2 = t2.PositionDependentMixin_range;
      return selection.copyWith$2$baseOffset$extentOffset(t3, A.IntExt_clampInt(t1, t2.start - 1, t2.end + 1));
    },
    $signature: typesOffset + 83
  };
  A.EquationRowNode_buildWidget__closure0.prototype = {
    call$3(context, selection, handleLayerLinks) {
      var t1, t2, start, end, caretStart, caretEnd, caretSelection, startHandleLayerLink, endHandleLayerLink;
      type$.TextSelection._as(selection);
      type$.Tuple2_LayerLink_LayerLink._as(handleLayerLinks);
      t1 = this.$this;
      t2 = t1.PositionDependentMixin_range.start - 1;
      start = selection.start - t2;
      end = selection.end - t2;
      t2 = type$.int;
      caretStart = D.JSNumber_methods.ceil$0(A.NumListSearchExt_slotFor(t1.get$caretPositions(), start, t2));
      caretEnd = D.JSNumber_methods.floor$0(A.NumListSearchExt_slotFor(t1.get$caretPositions(), end, t2));
      if (caretStart <= caretEnd)
        caretSelection = selection.baseOffset <= selection.extentOffset ? C.TextSelection$(D.TextAffinity_1, caretStart, caretEnd, false) : C.TextSelection$(D.TextAffinity_1, caretEnd, caretStart, false);
      else
        caretSelection = D.TextSelection_kab;
      startHandleLayerLink = D.JSArray_methods.contains$1(t1.get$caretPositions(), start) ? handleLayerLinks.item1 : null;
      endHandleLayerLink = D.JSArray_methods.contains$1(t1.get$caretPositions(), end) ? handleLayerLinks.item2 : null;
      return new A.Tuple3(caretSelection, startHandleLayerLink, endHandleLayerLink, type$.Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink);
    },
    $signature: typesOffset + 84
  };
  A.EquationRowNode_buildWidget__closure.prototype = {
    call$3(context, conf, _) {
      var value, t1, t2, t3;
      type$.Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink._as(conf);
      value = A.Provider_of(context, true, type$.SelectionStyle);
      t1 = this.$this;
      t2 = t1._syntax_tree$_key;
      C.debugCheckHasMediaQuery(context);
      t3 = C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data;
      return new A.EditableLine(J.get$value$x(A.Provider_of(context, true, type$.Wrapper_AnimationController)), value.get$cursorColor(), value.get$cursorOffset(), value.get$cursorRadius(), value.get$cursorWidth(), value.get$cursorHeight(), t3.devicePixelRatio, value.get$hintingColor(), t1, value.get$paintCursorAboveText(), this.options.fontSize, conf.item1, value.get$selectionColor(), value.get$showCursor(), conf.item2, conf.item3, this.lineChildren, t2);
    },
    $signature: typesOffset + 85
  };
  A.EquationRowNode_toJson_closure.prototype = {
    call$1(child) {
      return type$.GreenNode._as(child).toJson$0();
    },
    $signature: typesOffset + 47
  };
  A.textFontMetrics_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asString(key), J.$index$asx(type$.List_double._as(value), 0), type$.MapEntry_String_double);
    },
    $signature: 166
  };
  A.scriptFontMetrics_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asString(key), J.$index$asx(type$.List_double._as(value), 1), type$.MapEntry_String_double);
    },
    $signature: 166
  };
  A.scriptscriptFontMetrics_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asString(key), J.$index$asx(type$.List_double._as(value), 2), type$.MapEntry_String_double);
    },
    $signature: 166
  };
  A.allBlocks_closure.prototype = {
    call$1(entry) {
      return type$.MapEntry_of_String_and_List_List_int._as(entry).value;
    },
    $signature: 819
  };
  A.supportedCodepoint_closure.prototype = {
    call$1(block) {
      var t1, t2;
      type$.List_int._as(block);
      t1 = this.codepoint;
      t2 = J.getInterceptor$asx(block);
      return t1 >= t2.$index(block, 0) && t1 <= t2.$index(block, 1);
    },
    $signature: 820
  };
  A.environments_closure.prototype = {
    call$2(key, value) {
      var t1;
      type$.List_String._as(key);
      type$.EnvSpec._as(value);
      for (t1 = J.get$iterator$ax(key); t1.moveNext$0();)
        $._environments.$indexSet(0, t1.get$current(t1), value);
    },
    $signature: typesOffset + 86
  };
  A._casesHandler_closure.prototype = {
    call$1(cells) {
      var t1, t2, t3, i, _null = null;
      type$.List_EquationRowNode._as(cells);
      t1 = type$.JSArray_GreenNode;
      t2 = C._setArrayType([A.SpaceNode$alignerOrSpacer()], t1);
      t3 = J.getInterceptor$asx(cells);
      if (t3.get$length(cells) >= 1)
        D.JSArray_methods.addAll$1(t2, t3.$index(cells, 0).children);
      if (t3.get$length(cells) > 1)
        t2.push(A.SpaceNode$alignerOrSpacer());
      if (t3.get$length(cells) > 1)
        t2.push(A.SpaceNode$(_null, false, B.Measurement_0_Unit_0, B.Mode_0, B.Measurement_0_Unit_0, new A.Measurement(1, B.Unit_13)));
      for (i = 1; i < t3.get$length(cells); ++i) {
        D.JSArray_methods.add$1(t2, new A.SpaceNode(B.Measurement_0_Unit_0, B.Measurement_0_Unit_0, B.Measurement_0_Unit_0, _null, true, B.Mode_0, true));
        D.JSArray_methods.addAll$1(t2, t3.$index(cells, i).children);
        D.JSArray_methods.add$1(t2, new A.SpaceNode(B.Measurement_0_Unit_0, B.Measurement_0_Unit_0, B.Measurement_0_Unit_0, _null, true, B.Mode_0, true));
      }
      t3 = this.context.envName;
      if (t3 === "dcases" || t3 === "drcases")
        return A.EquationRowNode$(C._setArrayType([A.StyleNode$(t2, new A.OptionsDiff(B.MathStyle_0, _null, _null, _null, _null))], t1), _null);
      else
        return A.EquationRowNode$(t2, _null);
    },
    $signature: typesOffset + 18
  };
  A._alignedHandler_closure.prototype = {
    call$1(cells) {
      var t1 = J.expand$1$1$ax(type$.List_EquationRowNode._as(cells), new A._alignedHandler__closure(), type$.GreenNode);
      return A.EquationRowNode$(C.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), null);
    },
    $signature: typesOffset + 18
  };
  A._alignedHandler__closure.prototype = {
    call$1(cell) {
      var t1 = C.List_List$of(type$.EquationRowNode._as(cell).children, true, type$.GreenNode);
      t1.push(A.SpaceNode$alignerOrSpacer());
      return t1;
    },
    $signature: typesOffset + 35
  };
  A._alignedAtHandler_closure.prototype = {
    call$1(e) {
      return A.assertNodeType(type$.GreenNode._as(e), type$.SymbolNode).symbol;
    },
    $signature: typesOffset + 34
  };
  A._alignedAtHandler_closure0.prototype = {
    call$1(cells) {
      var t1, t2;
      type$.List_EquationRowNode._as(cells);
      t1 = J.getInterceptor$asx(cells);
      t2 = 2 * this.cols;
      if (t1.get$length(cells) > t2)
        throw C.wrapException(A.ParseException$("Too many math in a row: expected " + t2 + ", but got " + t1.get$length(cells), null));
      t1 = t1.expand$1$1(cells, new A._alignedAtHandler__closure(), type$.GreenNode);
      return A.EquationRowNode$(C.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), null);
    },
    $signature: typesOffset + 18
  };
  A._alignedAtHandler__closure.prototype = {
    call$1(cell) {
      var t1 = C.List_List$of(type$.EquationRowNode._as(cell).children, true, type$.GreenNode);
      t1.push(A.SpaceNode$alignerOrSpacer());
      return t1;
    },
    $signature: typesOffset + 35
  };
  A.RegisterFunctionExt_registerFunctions_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      type$.List_String._as(key);
      type$.FunctionSpec_GreenNode._as(value);
      for (t1 = J.get$iterator$ax(key), t2 = this._this; t1.moveNext$0();)
        t2.$indexSet(0, t1.get$current(t1), value);
    },
    $signature: typesOffset + 90
  };
  A._charHandler_closure.prototype = {
    call$1(child) {
      return A.assertNodeType(type$.GreenNode._as(child), type$.SymbolNode).symbol;
    },
    $signature: typesOffset + 34
  };
  A._delimiterSymbols_closure.prototype = {
    call$1(command) {
      var t1 = B.Map_MYH09.$index(0, C._asString(command));
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 91
  };
  A._checkDelimiter_closure.prototype = {
    call$1(symbol) {
      var t1;
      type$.TexSymbolConfig._as(symbol);
      t1 = this.delim;
      return symbol.symbol === t1.symbol && symbol.variantForm === t1.variantForm;
    },
    $signature: typesOffset + 92
  };
  A._leftHandler_closure.prototype = {
    call$1(part) {
      return A.GreenNodeListWrappingExt_wrapWithEquationRow(type$.List_GreenNode._as(part));
    },
    $signature: typesOffset + 93
  };
  A._enviromentHandler_closure.prototype = {
    call$1(element) {
      return !(type$.nullable_GreenNode._as(element) instanceof A.SymbolNode);
    },
    $signature: typesOffset + 94
  };
  A._enviromentHandler_closure0.prototype = {
    call$1(node) {
      return type$.SymbolNode._as(type$.nullable_GreenNode._as(node)).symbol;
    },
    $signature: typesOffset + 95
  };
  A.MacroExpander_consumeArgs_closure.prototype = {
    call$1(i) {
      var t2, t3, t4, arg, depth,
        t1 = this.$this;
      t1.consumeSpaces$0();
      t1.future$0();
      t2 = t1.stack;
      if (0 >= t2.length)
        return C.ioore(t2, -1);
      t3 = t2.pop();
      t4 = t3.text;
      if (t4 === "{") {
        arg = C._setArrayType([], type$.JSArray_Token);
        for (t1 = t1.lexer, depth = 1; depth !== 0;) {
          if (t2.length === 0)
            D.JSArray_methods.add$1(t2, t1.lex$0());
          D.JSArray_methods.get$last(t2);
          if (0 >= t2.length)
            return C.ioore(t2, -1);
          t4 = t2.pop();
          D.JSArray_methods.add$1(arg, t4);
          switch (t4.text) {
            case "{":
              ++depth;
              break;
            case "}":
              --depth;
              break;
            case "EOF":
              throw C.wrapException(A.ParseException$("End of input in macro argument", t3));
          }
        }
        if (0 >= arg.length)
          return C.ioore(arg, -1);
        arg.pop();
        t1 = type$.ReversedListIterable_Token;
        return C.List_List$of(new C.ReversedListIterable(arg, t1), true, t1._eval$1("ListIterable.E"));
      } else if (t4 === "EOF")
        throw C.wrapException(A.ParseException$("End of input expecting macro argument", null));
      else
        return C._setArrayType([t3], type$.JSArray_Token);
    },
    $signature: typesOffset + 96
  };
  A.MacroExpander_expandMacroAsText_closure.prototype = {
    call$1(token) {
      return type$.Token._as(token).text;
    },
    $signature: typesOffset + 22
  };
  A.MacroDefinition$fromString_closure.prototype = {
    call$1(context) {
      return A.MacroExpansion_fromString(this.output, type$.MacroContext._as(context));
    },
    $signature: typesOffset + 4
  };
  A.MacroDefinition$fromCtxString_closure.prototype = {
    call$1(context) {
      type$.MacroContext._as(context);
      return A.MacroExpansion_fromString(this.expand.call$1(context), context);
    },
    $signature: typesOffset + 4
  };
  A.MacroDefinition$fromMacroExpansion_closure.prototype = {
    call$1(_) {
      type$.MacroContext._as(_);
      return this.output;
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure.prototype = {
    call$1(context) {
      var t1, t2, t3;
      type$.MacroContext._as(context);
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t1 = t1.pop();
      t2 = t1.text;
      t3 = context.macros.$get$1(0, t2) != null || null;
      if (t3 == null ? $.$get$functions().containsKey$1(0, t2) : t3)
        t1.noexpand = true;
      return new A.MacroExpansion(C._setArrayType([t1], type$.JSArray_Token), 0);
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure0.prototype = {
    call$1(context) {
      var t1;
      type$.MacroContext._as(context);
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t1 = t1.pop();
      context.expandOnce$1(true);
      return new A.MacroExpansion(C._setArrayType([t1], type$.JSArray_Token), 0);
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure1.prototype = {
    call$1(context) {
      var args = type$.MacroContext._as(context).consumeArgs$1(2);
      if (0 >= args.length)
        return C.ioore(args, 0);
      return new A.MacroExpansion(args[0], 0);
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure2.prototype = {
    call$1(context) {
      var args = type$.MacroContext._as(context).consumeArgs$1(2);
      if (1 >= args.length)
        return C.ioore(args, 1);
      return new A.MacroExpansion(args[1], 0);
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure3.prototype = {
    call$1(context) {
      var args, nextToken, t1, t2, t3;
      type$.MacroContext._as(context);
      args = context.consumeArgs$1(3);
      context.consumeSpaces$0();
      nextToken = context.future$0();
      t1 = args.length;
      if (0 >= t1)
        return C.ioore(args, 0);
      t2 = args[0];
      t3 = t2.length;
      if (t3 === 1) {
        if (0 >= t3)
          return C.ioore(t2, 0);
        t2 = t2[0].text === nextToken.text;
      } else
        t2 = false;
      if (t2) {
        if (1 >= t1)
          return C.ioore(args, 1);
        return new A.MacroExpansion(args[1], 0);
      } else {
        if (2 >= t1)
          return C.ioore(args, 2);
        return new A.MacroExpansion(args[2], 0);
      }
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure4.prototype = {
    call$1(context) {
      var args, t1, t2;
      type$.MacroContext._as(context);
      args = context.consumeArgs$1(2);
      t1 = context.mode;
      t2 = args.length;
      if (t1 === B.Mode_1) {
        if (0 >= t2)
          return C.ioore(args, 0);
        return new A.MacroExpansion(args[0], 0);
      } else {
        if (1 >= t2)
          return C.ioore(args, 1);
        return new A.MacroExpansion(args[1], 0);
      }
    },
    $signature: typesOffset + 4
  };
  A.builtinMacros_closure5.prototype = {
    call$1(context) {
      var t1, token, t2, number, base, t3, digit, _null = null;
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      token = t1.pop();
      t2 = token.text;
      number = _null;
      if (t2 === "'") {
        context.future$0();
        if (0 >= t1.length)
          return C.ioore(t1, -1);
        token = t1.pop();
        base = 8;
      } else if (t2 === '"') {
        context.future$0();
        if (0 >= t1.length)
          return C.ioore(t1, -1);
        token = t1.pop();
        base = 16;
      } else if (t2 === "`") {
        context.future$0();
        if (0 >= t1.length)
          return C.ioore(t1, -1);
        token = t1.pop();
        t2 = token.text;
        t3 = t2.length;
        if (0 >= t3)
          return C.ioore(t2, 0);
        if (t2[0] === "\\") {
          if (1 >= t3)
            return C.ioore(t2, 1);
          number = t2.charCodeAt(1);
        } else if (t2 === "EOF")
          throw C.wrapException(A.ParseException$("\\char` missing argument", _null));
        else
          number = t2.charCodeAt(0);
        base = _null;
      } else
        base = 10;
      if (base != null) {
        t2 = token.text;
        number = B.Map_hxXwm.$index(0, t2);
        if (number == null || number >= base)
          throw C.wrapException(A.ParseException$("Invalid base-" + C.S(base) + " digit " + t2, _null));
        t2 = context.lexer;
        while (true) {
          if (t1.length === 0)
            D.JSArray_methods.add$1(t1, t2.lex$0());
          digit = B.Map_hxXwm.$index(0, D.JSArray_methods.get$last(t1).text);
          if (!(digit != null && digit < base))
            break;
          number.toString;
          if (typeof digit !== "number")
            return C.iae(digit);
          number = number * base + digit;
          if (t1.length === 0)
            D.JSArray_methods.add$1(t1, t2.lex$0());
          D.JSArray_methods.get$last(t1);
          if (0 >= t1.length)
            return C.ioore(t1, -1);
          t1.pop();
        }
      }
      return "\\@char{" + C.S(number) + "}";
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros_closure6.prototype = {
    call$1(context) {
      return A.newcommand(context, false, true);
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros_closure7.prototype = {
    call$1(context) {
      return A.newcommand(context, true, false);
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros_closure8.prototype = {
    call$1(context) {
      return A.newcommand(context, true, true);
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros_closure9.prototype = {
    call$1(context) {
      var arg,
        t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = C._arrayInstanceType(arg)._eval$1("ReversedListIterable<1>");
      new C.MappedListIterable(new C.ReversedListIterable(arg, t1), t1._eval$1("String(ListIterable.E)")._as(new A.builtinMacros__closure0()), t1._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, "");
      return "";
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros__closure0.prototype = {
    call$1(token) {
      return type$.Token._as(token).text;
    },
    $signature: typesOffset + 22
  };
  A.builtinMacros_closure10.prototype = {
    call$1(context) {
      var arg,
        t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = C._arrayInstanceType(arg)._eval$1("ReversedListIterable<1>");
      new C.MappedListIterable(new C.ReversedListIterable(arg, t1), t1._eval$1("String(ListIterable.E)")._as(new A.builtinMacros__closure()), t1._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, "");
      return "";
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros__closure.prototype = {
    call$1(token) {
      return type$.Token._as(token).text;
    },
    $signature: typesOffset + 22
  };
  A.builtinMacros_closure11.prototype = {
    call$1(context) {
      var t1, $name;
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t1 = t1.pop();
      $name = t1.text;
      t1.toString$0(0);
      C.S(context.macros.$get$1(0, $name));
      C.S($.$get$functions().$index(0, $name));
      C.S(B.Map_MYH09.$index(0, $name));
      C.S(B.Map_SXdse.$index(0, $name));
      return "";
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros_closure12.prototype = {
    call$1(context) {
      var next, t1, thedots;
      context.expandOnce$0();
      next = context.future$0().text;
      if (B.Map_chCvV.containsKey$1(0, next)) {
        t1 = B.Map_chCvV.$index(0, next);
        t1.toString;
        thedots = t1;
      } else if (next.length >= 4 && D.JSString_methods.substring$2(next, 0, 4) === "\\not")
        thedots = "\\dotsb";
      else if (B.Map_MYH09.containsKey$1(0, next)) {
        t1 = B.Map_MYH09.$index(0, next).type;
        thedots = t1 === B.AtomType_2 || t1 === B.AtomType_3 ? "\\dotsb" : "\\dotso";
      } else
        thedots = "\\dotso";
      return thedots;
    },
    $signature: typesOffset + 5
  };
  A.builtinMacros_closure13.prototype = {
    call$1(context) {
      if (context.macros.$get$1(0, "\\df@tag") != null)
        throw C.wrapException(A.ParseException$("Multiple \\tag", null));
      return "\\gdef\\df@tag{\\text{#1}}";
    },
    $signature: typesOffset + 5
  };
  A.Namespace_endGroup_closure.prototype = {
    call$2(key, value) {
      var t1;
      C._asString(key);
      t1 = this.$this;
      t1.$ti._eval$1("1?")._as(value);
      t1 = t1.current;
      if (value == null)
        t1.remove$1(0, key);
      else
        t1.$indexSet(0, key, value);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(String,1?)");
    }
  };
  A.ParseException_closure.prototype = {
    call$1(match) {
      return C.S(match.$index(0, 0)) + "\u0332";
    },
    $signature: 97
  };
  A.TexParser__parseSymbol_closure.prototype = {
    call$1(char) {
      return A.SymbolNode$(B.Mode_1, null, B.FontOptions_nwN, C._asString(char), false);
    },
    $signature: typesOffset + 21
  };
  A.RenderCustomLayout_childrenTable_closure.prototype = {
    call$0() {
      var t3, t4, _this = this,
        t1 = _this.childParentData,
        t2 = t1.id;
      if (t2 == null)
        throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$("Every child of a RenderCustomLayout must have an ID in its parent data."), _this._box_0.child.describeForError$1("The following child has no ID")], type$.JSArray_DiagnosticsNode)));
      t3 = _this.res;
      if (t3.containsKey$1(0, t2)) {
        t2 = C.ErrorSummary$("Every child of a RenderCustomLayout must have a unique ID.");
        t4 = _this._box_0.child;
        t4.toString;
        t4 = t4.describeForError$1("The following child has a ID of " + C.S(t1.id));
        t1 = t1.id;
        t1.toString;
        throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([t2, t4, t3.$index(0, t1).describeForError$1("While the following child has the same ID")], type$.JSArray_DiagnosticsNode)));
      }
      return true;
    },
    $signature: 1
  };
  A.RenderCustomLayout_computeMinIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      return child.getMinIntrinsicWidth$1(extent);
    },
    $signature: 28
  };
  A.RenderCustomLayout_computeMaxIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      return child.getMaxIntrinsicWidth$1(extent);
    },
    $signature: 28
  };
  A.RenderCustomLayout_computeMinIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      return child.getMinIntrinsicHeight$1(extent);
    },
    $signature: 28
  };
  A.RenderCustomLayout_computeMaxIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      return child.getMaxIntrinsicHeight$1(extent);
    },
    $signature: 28
  };
  A.IntrinsicLayoutDelegate_getIntrinsicSize_closure.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), this.childSize.call$2(type$.RenderBox._as(value), 1 / 0), t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  A.IntrinsicLayoutDelegate_getIntrinsicSize_closure0.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), this.childSize.call$2(type$.RenderBox._as(value), 1 / 0), t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  A.IntrinsicLayoutDelegate_computeLayout_closure.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), type$.Size._as(value)._dx, t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,Size)");
    }
  };
  A.IntrinsicLayoutDelegate_computeLayout_closure0.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), type$.Size._as(value)._dy, t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,Size)");
    }
  };
  A.IntrinsicLayoutDelegate_computeLayout_closure1.prototype = {
    call$2(key, value) {
      var t2,
        t1 = C._instanceType(this.$this);
      t1._eval$1("IntrinsicLayoutDelegate.T")._as(key);
      type$.RenderBox._as(value);
      if (this.dry)
        t2 = 0;
      else {
        t2 = value.getDistanceToBaseline$2$onlyReal(D.TextBaseline_0, true);
        t2.toString;
      }
      return new C.MapEntry(key, t2, t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  A.IntrinsicLayoutDelegate_computeLayout_closure2.prototype = {
    call$2(id, child) {
      var t1, t2;
      C._instanceType(this.$this)._eval$1("IntrinsicLayoutDelegate.T")._as(id);
      type$.RenderBox._as(child);
      t1 = this.hconf.offsetTable.$index(0, id);
      t1.toString;
      t2 = this.vconf.offsetTable.$index(0, id);
      t2.toString;
      return type$.BoxParentData._as(child.parentData).offset = new C.Offset(t1, t2);
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("~(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  A.RenderEqnArray__computeLayout_closure.prototype = {
    call$1(size) {
      return type$.Size._as(size)._dx;
    },
    $signature: 91
  };
  A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure.prototype = {
    call$0() {
      return this.$this.DebugOverflowIndicatorMixin__overflowReportNeeded = true;
    },
    $signature: 1
  };
  A._RenderLayoutBuilderPreserveBaseline__debugThrowIfNotCheckingIntrinsics_closure.prototype = {
    call$0() {
      if (!$.RenderObject_debugCheckingIntrinsics)
        throw C.wrapException(C.FlutterError_FlutterError("LayoutBuilder does not support returning intrinsic dimensions.\nCalculating the intrinsic dimensions would require running the layout callback speculatively, which might mutate the live render object tree."));
      return true;
    },
    $signature: 1
  };
  A.RenderLine_computeMinIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      return child.getMinIntrinsicWidth$1(extent);
    },
    $signature: 28
  };
  A.RenderLine_computeMaxIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      return child.getMaxIntrinsicWidth$1(extent);
    },
    $signature: 28
  };
  A.RenderLine_computeMinIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      return child.getMinIntrinsicHeight$1(extent);
    },
    $signature: 28
  };
  A.RenderLine_computeMaxIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      return child.getMaxIntrinsicHeight$1(extent);
    },
    $signature: 28
  };
  A.RenderLine_paint_closure.prototype = {
    call$0() {
      var t4,
        t1 = this.$this,
        debugOverflowHints = C._setArrayType([C.ErrorDescription$("The edge of the " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20that_ + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + "."), C.ErrorHint$(string$.Consid + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20to_fi), C.ErrorHint$(string$.This_i)], type$.JSArray_DiagnosticsNode),
        t2 = t1.get$size(0),
        t3 = t1._line$_overflow;
      t3.toString;
      t4 = t1.get$size(0);
      t1.paintOverflowIndicator$5$overflowHints(this.context, this.offset, new C.Rect(0, 0, 0 + t4._dx, 0 + t4._dy), new C.Rect(0, 0, 0 + (t2._dx + t3), 0), debugOverflowHints);
      return true;
    },
    $signature: 1
  };
  A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure.prototype = {
    call$0() {
      return this.$this.DebugOverflowIndicatorMixin__overflowReportNeeded = true;
    },
    $signature: 1
  };
  A.RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      return child.getMinIntrinsicWidth$1(extent);
    },
    $signature: 28
  };
  A.RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      return child.getMaxIntrinsicWidth$1(extent);
    },
    $signature: 28
  };
  A.RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      return child.getMinIntrinsicHeight$1(extent);
    },
    $signature: 28
  };
  A.RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      return child.getMaxIntrinsicHeight$1(extent);
    },
    $signature: 28
  };
  A.RenderRelativeWidthColumn_paint_closure.prototype = {
    call$0() {
      var t4,
        t1 = this.$this,
        debugOverflowHints = C._setArrayType([C.ErrorDescription$("The edge of the " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20that_ + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + "."), C.ErrorHint$(string$.Consid + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20to_fi), C.ErrorHint$(string$.This_i)], type$.JSArray_DiagnosticsNode),
        t2 = t1.get$size(0),
        t3 = t1._vlist$_overflow;
      t3.toString;
      t4 = t1.get$size(0);
      t1.paintOverflowIndicator$5$overflowHints(this.context, this.offset, new C.Rect(0, 0, 0 + t4._dx, 0 + t4._dy), new C.Rect(0, 0, 0, 0 + (t2._dy + t3)), debugOverflowHints);
      return true;
    },
    $signature: 1
  };
  A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure.prototype = {
    call$0() {
      return this.$this.DebugOverflowIndicatorMixin__overflowReportNeeded = true;
    },
    $signature: 1
  };
  A.makeDecoratedEqualSymbol_closure.prototype = {
    call$1(symbol) {
      return A.SymbolNode$(this.mode, null, null, C._asString(symbol), false);
    },
    $signature: typesOffset + 21
  };
  A.makeBaseSymbol_closure.prototype = {
    call$1(e) {
      var t1;
      C._asString(e);
      t1 = this._box_0.font;
      return A.makeChar(e, t1, A.getCharacterMetrics(e, t1.get$fontName(), this.mode), this.options, false);
    },
    $signature: 821
  };
  A.unicodeLiteral_closure.prototype = {
    call$1(e) {
      C._asString(e);
      if (0 >= e.length)
        return C.ioore(e, 0);
      if (e.charCodeAt(0) > 126 || e.charCodeAt(0) < 32)
        return "\\u" + D.JSString_methods.padLeft$2(D.JSInt_methods.toRadixString$1(e.charCodeAt(0), 16).toUpperCase(), 4, "0");
      else
        return e;
    },
    $signature: 21
  };
  A.Cache_putIfAbsent_closure.prototype = {
    call$1(data) {
      var t1, t2;
      type$.ByteData._as(data);
      t1 = this.$this;
      t2 = this.key;
      t1._cache$_pending.remove$1(0, t2);
      t1._cache$_add$2(0, t2, data);
      this._box_0.result = data;
    },
    $signature: 822
  };
  A.SvgLoader__load_closure.prototype = {
    call$1(message) {
      var t1 = this.$this,
        t2 = C._instanceType(t1)._eval$1("SvgLoader.T?");
      return A._testCompute(new A.SvgLoader__load__closure(t1, this.theme), t2._as(message), "Load Bytes", t2, type$.ByteData);
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("Future<ByteData>(SvgLoader.T?)");
    }
  };
  A.SvgLoader__load__closure.prototype = {
    call$1(message) {
      var t2, t3, t4, parser, newRoot, t5, t6, t7, t8, t9, t10, commandVisitor, t11, t12, t13, t14, t15, t16,
        _s36_ = "PathOps library was not initialized.",
        t1 = this.$this;
      C._instanceType(t1)._eval$1("SvgLoader.T?")._as(message);
      t2 = D.Color_vnR.toARGB32$0();
      t3 = type$.String;
      t4 = C.ListQueue$(10, type$._SvgGroupTuple);
      parser = new A.SvgParser(new A.SvgTheme0(new A.Color0(t2), 14, 7), null, new A.XmlEventIterable(t1._svg, B.C_XmlDefaultEntityMapping, false, false, false, false, false).get$iterator(0), "Svg loader", false, new A._Resolver(C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.AttributedNode), C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Gradient_2), C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.List_Node), C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.List_Gradient)), t4, C.LinkedHashSet_LinkedHashSet$_empty(t3), B.SvgAttributes_781);
      parser.enableOverdrawOptimizer = parser.enableClippingOptimizer = parser.enableMaskingOptimizer = false;
      parser._parseTree$0();
      t1 = parser._parser$_root;
      t1.toString;
      newRoot = type$.Visitor_Node_AffineMatrix._as(new A.ResolvingVisitor()).visitViewportNode$2(t1, B.AffineMatrix_qrl);
      if (parser.enableMaskingOptimizer)
        C.throwExpression(C.Exception_Exception(_s36_));
      if (parser.enableClippingOptimizer)
        C.throwExpression(C.Exception_Exception(_s36_));
      if (parser.enableOverdrawOptimizer)
        C.throwExpression(C.Exception_Exception(_s36_));
      t1 = type$.int;
      t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.Paint, t1);
      t3 = C.LinkedHashMap_LinkedHashMap$_empty(type$.Path, t1);
      t4 = C.LinkedHashMap_LinkedHashMap$_empty(type$.TextConfig, t1);
      t5 = C.LinkedHashMap_LinkedHashMap$_empty(type$.ImageData, t1);
      t6 = C.LinkedHashMap_LinkedHashMap$_empty(type$.DrawImageData, t1);
      t7 = C.LinkedHashMap_LinkedHashMap$_empty(type$.IndexedVertices, t1);
      t8 = C._setArrayType([], type$.JSArray_DrawCommand);
      t9 = C.LinkedHashMap_LinkedHashMap$_empty(type$.PatternData, t1);
      t10 = C.LinkedHashMap_LinkedHashMap$_empty(type$.TextPosition, t1);
      commandVisitor = new A.CommandBuilderVisitor(new A.DrawCommandBuilder(t2, t3, t4, t5, t6, t7, t8, C.LinkedHashMap_LinkedHashMap$_empty(type$.Object, t1), t9, t10));
      commandVisitor.visitViewportNode$2(newRoot, null);
      t1 = commandVisitor.__CommandBuilderVisitor__width_A;
      t1 === $ && C.throwLateFieldNI("_width");
      t11 = commandVisitor.__CommandBuilderVisitor__height_A;
      t11 === $ && C.throwLateFieldNI("_height");
      t12 = t2.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t12 = C.List_List$of(new C.LinkedHashMapKeysIterable(t2, t12), true, t12._eval$1("Iterable.E"));
      t2 = t3.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t2 = C.List_List$of(new C.LinkedHashMapKeysIterable(t3, t2), true, t2._eval$1("Iterable.E"));
      t3 = t4.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t3 = C.List_List$of(new C.LinkedHashMapKeysIterable(t4, t3), true, t3._eval$1("Iterable.E"));
      t4 = t7.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t13 = t5.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t14 = t6.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t15 = t9.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t16 = t10.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      return J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(A._encodeInstructions(new A.VectorInstructions(t1, t11, t12, t2, C.List_List$of(new C.LinkedHashMapKeysIterable(t7, t4), true, t4._eval$1("Iterable.E")), t3, C.List_List$of(new C.LinkedHashMapKeysIterable(t5, t13), true, t13._eval$1("Iterable.E")), C.List_List$of(new C.LinkedHashMapKeysIterable(t6, t14), true, t14._eval$1("Iterable.E")), C.List_List$of(new C.LinkedHashMapKeysIterable(t9, t15), true, t15._eval$1("Iterable.E")), C.List_List$of(new C.LinkedHashMapKeysIterable(t10, t16), true, t16._eval$1("Iterable.E")), t8), false)));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("ByteData(SvgLoader.T?)");
    }
  };
  A.SvgLoader_loadBytes_closure.prototype = {
    call$0() {
      return this.$this._load$1(this.context);
    },
    $signature: 823
  };
  A._FlyerChatImageMessageState_initState_closure.prototype = {
    call$1(dimensions) {
      var t1, t2, t3, t4;
      type$.Record_2_double_and_double._as(dimensions);
      t1 = this.$this;
      if (t1._framework$_element != null) {
        t2 = dimensions._0;
        t3 = dimensions._1;
        t1.___FlyerChatImageMessageState__aspectRatio_A = t2 / t3;
        t4 = t1.___FlyerChatImageMessageState__chatController_F;
        t4 === $ && C.throwLateFieldNI("_chatController");
        t1 = t1._widget.message;
        t4.updateMessage$2(t1, t1.copyWith$2$height$width(t3, t2));
      }
    },
    $signature: 824
  };
  A._FlyerChatImageMessageState_didUpdateWidget_closure.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this;
      if (t1._framework$_element != null)
        t1.set$___FlyerChatImageMessageState__imageProvider_A(type$.ImageProvider_Object._as(this.newImage));
    },
    $signature: 26
  };
  A._FlyerChatImageMessageState_build_closure.prototype = {
    call$1(t) {
      var t1;
      type$.ChatTheme._as(t);
      t1 = t.colors;
      return new C._Record_4_labelSmall_onSurface_shape_surfaceContainerLow([t.typography.labelSmall, t1.onSurface, t.shape, t1.surfaceContainerLow]);
    },
    $signature: typesOffset + 100
  };
  A._FlyerChatImageMessageState__buildStack_closure0.prototype = {
    call$3(context, child, loadingProgress) {
      var t1, t2, t3, _null = null;
      type$.BuildContext._as(context);
      type$.Widget._as(child);
      type$.nullable_ImageChunkEvent._as(loadingProgress);
      if (loadingProgress == null)
        return child;
      t1 = this.$this;
      t1._widget.toString;
      t2 = this.theme._values;
      t3 = t2[3].withValues$1$alpha(0.5);
      t1._widget.toString;
      t1 = t2[1].withValues$1$alpha(0.8);
      t2 = loadingProgress.expectedTotalBytes;
      return C.Container$(_null, C.Center$(E.CircularProgressIndicator$(_null, t1, _null, _null, _null, _null, D.StrokeCap_1, _null, t2 != null ? loadingProgress.cumulativeBytesLoaded / t2 : _null, _null), _null, _null, _null), D.Clip_0, t3, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 161
  };
  A._FlyerChatImageMessageState__buildStack_closure.prototype = {
    call$4(context, child, frame, wasSynchronouslyLoaded) {
      type$.BuildContext._as(context);
      type$.Widget._as(child);
      C._asIntQ(frame);
      C._asBool(wasSynchronouslyLoaded);
      this.$this._widget.toString;
      if (wasSynchronouslyLoaded)
        return child;
      return C.AnimatedOpacity$(child, D.Cubic_O6W, D.Duration_250000, frame == null ? 0 : 1);
    },
    "call*": "call$4",
    $requiredArgCount: 4,
    $signature: 253
  };
  A._FlyerChatImageMessageState__buildStack_closure1.prototype = {
    call$2(context, snapshot) {
      var t1, t2, t3, t4, _null = null;
      type$.BuildContext._as(context);
      t1 = type$.AsyncSnapshot_double._as(snapshot).data;
      if (t1 != null) {
        if (typeof t1 !== "number")
          return t1.$ge();
        t2 = t1 >= 1;
      } else
        t2 = true;
      if (t2)
        return D.SizedBox_null_null_null_null;
      t2 = this.$this;
      t2._widget.toString;
      t3 = this.theme._values;
      t4 = t3[3].withValues$1$alpha(0.5);
      t2._widget.toString;
      t2 = t3[1].withValues$1$alpha(0.8);
      return C.Container$(_null, C.Center$(E.CircularProgressIndicator$(_null, t2, _null, _null, _null, _null, D.StrokeCap_1, _null, t1, _null), _null, _null, _null), D.Clip_0, t4, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $signature: typesOffset + 101
  };
  A.__FlyerChatImageMessageState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A.getImageDimensions_closure.prototype = {
    call$1(key) {
      var stream, t1, listener;
      type$.Object._as(key);
      stream = this.provider.resolve$1(D.ImageConfiguration_Sfv);
      t1 = this.completer;
      listener = new C.ImageStreamListener(new A.getImageDimensions__closure(t1), null, new A.getImageDimensions__closure0(t1));
      stream.addListener$1(0, listener);
      t1.future.whenComplete$1(new A.getImageDimensions__closure1(stream, listener));
    },
    $signature: 265
  };
  A.getImageDimensions__closure.prototype = {
    call$2(image, synchronousCall) {
      var t1, t2;
      type$.ImageInfo._as(image);
      C._asBool(synchronousCall);
      t1 = image.get$image(image);
      t1 = t1.get$width(t1);
      t2 = image.get$image(image);
      this.completer.complete$1(0, new C._Record_2(t1, t2.get$height(t2)));
    },
    $signature: 90
  };
  A.getImageDimensions__closure0.prototype = {
    call$2(exception, stackTrace) {
      this.completer.completeError$2(type$.Object._as(exception), type$.nullable_StackTrace._as(stackTrace));
    },
    $signature: 81
  };
  A.getImageDimensions__closure1.prototype = {
    call$0() {
      this.stream.removeListener$1(0, this.listener);
    },
    $signature: 11
  };
  A.getImageDimensions_closure0.prototype = {
    call$1(error) {
      var t1 = error == null ? type$.Object._as(error) : error;
      this.completer.completeError$1(t1);
    },
    $signature: 18
  };
  A.FlyerChatTextMessage_build_closure.prototype = {
    call$1(t) {
      var t1, t2;
      type$.ChatTheme._as(t);
      t1 = t.typography;
      t2 = t.colors;
      return new C._Record_7_bodyMedium_labelSmall_onPrimary_onSurface_primary_shape_surfaceContainer([t1.bodyMedium, t1.labelSmall, t2.onPrimary, t2.onSurface, t2.primary, t.shape, t2.surfaceContainer]);
    },
    $signature: typesOffset + 31
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s).text;
    },
    $signature: typesOffset + 30
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0.prototype = {
    call$0() {
      var t1 = C._setArrayType([], type$.JSArray_TextSegment),
        t2 = this.newText;
      if (t2.length !== 0)
        t1.push(new A.StaticSegment(t2));
      this.$this.set$_segments(t1);
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s).text;
    },
    $signature: typesOffset + 30
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s) instanceof A.AnimatingSegment;
    },
    $signature: typesOffset + 103
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3.prototype = {
    call$0() {
      var t1 = C._setArrayType([], type$.JSArray_TextSegment),
        t2 = this._box_0.finalText;
      if (t2.length !== 0)
        t1.push(new A.StaticSegment(t2));
      this.$this.set$_segments(t1);
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._framework$_element != null)
        t1.setState$1(new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure());
    },
    $signature: 11
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0.prototype = {
    call$1($status) {
      var _this = this;
      if (type$.AnimationStatus._as($status) === D.AnimationStatus_3) {
        _this.controller.removeListener$1(0, _this.listener);
        _this.$this._finalizeChunkAnimation$1(_this.newSegment);
      }
    },
    $signature: 12
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1.prototype = {
    call$0() {
      D.JSArray_methods.add$1(this.$this._segments, this.newSegment);
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.completedSegment,
        index = D.JSArray_methods.indexOf$1(t1._segments, t2);
      if (index !== -1) {
        D.JSArray_methods.$indexSet(t1._segments, index, new A.StaticSegment(t2.text));
        t2.controller.dispose$0();
      }
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState_build_closure.prototype = {
    call$1(t) {
      var t1, t2;
      type$.ChatTheme._as(t);
      t1 = t.typography;
      t2 = t.colors;
      return new C._Record_7_bodyMedium_labelSmall_onPrimary_onSurface_primary_shape_surfaceContainer([t1.bodyMedium, t1.labelSmall, t2.onPrimary, t2.onSurface, t2.primary, t.shape, t2.surfaceContainer]);
    },
    $signature: typesOffset + 31
  };
  A._FlyerChatTextStreamMessageState__buildTextContent_closure.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s).text;
    },
    $signature: typesOffset + 30
  };
  A._FlyerChatTextStreamMessageState__buildTextContent_closure0.prototype = {
    call$1(segment) {
      var currentOpacity, t1, t2, animatingStyle, _null = null;
      type$.TextSegment._as(segment);
      if (segment instanceof A.StaticSegment)
        return C.TextSpan$(_null, _null, segment.text);
      else if (segment instanceof A.AnimatingSegment) {
        currentOpacity = segment.fadeAnimation.get$value(0);
        t1 = this.paragraphStyle;
        t2 = t1.color;
        animatingStyle = t1.copyWith$1$color(t2 == null ? _null : t2.withValues$1$alpha(currentOpacity));
        return C.TextSpan$(_null, animatingStyle, segment.text);
      }
      return B.TextSpan_DuQ;
    },
    $signature: typesOffset + 104
  };
  A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1.TickerProviderStateMixin__tickers;
      if (t2 != null)
        for (t2 = C._LinkedHashSetIterator$(t2, t2._collection$_modifications, C._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
          t4 = t2._collection$_current;
          if (t4 == null)
            t4 = t3._as(t4);
          if (t4._ticker$_future != null)
            throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatT), C.ErrorHint$(string$.Ticker), t4.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
        }
      return true;
    },
    $signature: 1
  };
  A._State_build_closure0.prototype = {
    call$3(__wc0_formal, month, __wc1_formal) {
      var t1;
      type$.LocalDate._as(month);
      t1 = this.$this.___State__type_A;
      t1 === $ && C.throwLateFieldNI("_type");
      return new A.Header(this.style.headerStyle, t1, month, null);
    },
    $signature: typesOffset + 105
  };
  A._State_build_closure1.prototype = {
    call$3(__wc2_formal, value, __wc3_formal) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      switch (type$.FCalendarPickerType._as(value).index) {
        case 0:
          t1 = _this.$this;
          t2 = t1._widget;
          t3 = t2.dayBuilder;
          t2 = t2.start;
          t2 = C.DateTime$utc(C.Primitives_getYear(t2), C.Primitives_getMonth(t2), C.Primitives_getDay(t2), 0, 0, 0, 0, 0);
          t4 = t1._widget.end;
          t4 = C.DateTime$utc(C.Primitives_getYear(t4), C.Primitives_getMonth(t4), C.Primitives_getDay(t4), 0, 0, 0, 0, 0);
          t5 = t1._widget.today;
          t5 = C.DateTime$utc(C.Primitives_getYear(t5), C.Primitives_getMonth(t5), C.Primitives_getDay(t5), 0, 0, 0, 0, 0);
          t6 = t1.___State__month_A;
          t6 === $ && C.throwLateFieldNI("_month");
          t5 = A.PagedDayPicker$(t3, new A.LocalDate(t4), t6._change_notifier$_value, new A._State_build__closure(t1), new A._State_build__closure0(t1), new A._State_build__closure1(t1), new A._State_build__closure2(t1), new A._State_build__closure3(t1), new A.LocalDate(t2), _this.style, new A.LocalDate(t5));
          t1 = t5;
          break;
        case 1:
          t1 = _this.$this;
          t2 = t1._widget.start;
          t2 = C.DateTime$utc(C.Primitives_getYear(t2), C.Primitives_getMonth(t2), C.Primitives_getDay(t2), 0, 0, 0, 0, 0);
          t3 = t1._widget.end;
          t3 = C.DateTime$utc(C.Primitives_getYear(t3), C.Primitives_getMonth(t3), C.Primitives_getDay(t3), 0, 0, 0, 0, 0);
          t4 = t1._widget.today;
          t4 = C.DateTime$utc(C.Primitives_getYear(t4), C.Primitives_getMonth(t4), C.Primitives_getDay(t4), 0, 0, 0, 0, 0);
          t5 = t1.___State__month_A;
          t5 === $ && C.throwLateFieldNI("_month");
          t1 = t1.___State__type_A;
          t1 === $ && C.throwLateFieldNI("_type");
          t1 = new A.YearMonthPicker(_this.style, new A.LocalDate(t2), new A.LocalDate(t3), new A.LocalDate(t4), t5, t1, null);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: typesOffset + 106
  };
  A._State_build__closure2.prototype = {
    call$1(date) {
      return this.$this._widget.controller.selectable$1(date._native);
    },
    $signature: typesOffset + 29
  };
  A._State_build__closure3.prototype = {
    call$1(date) {
      type$.LocalDate._as(date);
      return this.$this._widget.controller.selected$1(0, date._native);
    },
    $signature: typesOffset + 29
  };
  A._State_build__closure0.prototype = {
    call$1(date) {
      var t1, t2;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t2 = t1.___State__month_A;
      t2 === $ && C.throwLateFieldNI("_month");
      t2.set$value(0, date);
      t1._widget.toString;
    },
    $signature: typesOffset + 8
  };
  A._State_build__closure1.prototype = {
    call$1(date) {
      var native = type$.LocalDate._as(date)._native,
        t1 = this.$this;
      t1._widget.controller.select$1(0, native);
      t1._widget.onPress.call$1(native);
    },
    $signature: typesOffset + 8
  };
  A._State_build__closure.prototype = {
    call$1(date) {
      var t1;
      type$.LocalDate._as(date);
      t1 = this.$this._widget.onLongPress;
      return t1 == null ? null : t1.call$1(date._native);
    },
    $signature: typesOffset + 8
  };
  A._PagedDayPickerState_buildItem_closure.prototype = {
    call$1(date) {
      var t1;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t1.setState$1(new A._PagedDayPickerState_buildItem__closure(t1, date));
      t1._widget.onPress$1(date);
    },
    $signature: typesOffset + 8
  };
  A._PagedDayPickerState_buildItem__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._gridFocused)
        t1.focusedDate = this.date;
    },
    $signature: 0
  };
  A._PagedDayPickerState_onPageChange_closure.prototype = {
    call$0() {
      var _0_0,
        t1 = this.$this,
        changed = A.LocalDate$_(A.DateTimes_plus(A.LocalDate$_(A.DateTimes_truncate(t1._widget.start._native, B.DateUnit_1))._native, 0, this.page, 0)),
        t2 = t1.__PagedPickerState_current_A;
      t2 === $ && C.throwLateFieldNI("current");
      if (t2.$eq(0, changed))
        return;
      t1.__PagedPickerState_current_A = changed;
      t1._widget.onMonthChange.call$1(changed);
      _0_0 = t1.focusedDate;
      if (_0_0 != null)
        t2 = A.LocalDate$_(A.DateTimes_truncate(_0_0._native, B.DateUnit_1)).$eq(0, t1.__PagedPickerState_current_A);
      else
        t2 = false;
      if (t2)
        t1.focusedDate = t1._focusableDayForMonth$2(t1.__PagedPickerState_current_A, C.Primitives_getDay(t1.focusedDate._native));
      if (C.Localizations_of(t1.get$context(0), D.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      t2 = t1.__PagedPickerState_current_A;
      t2 = C.DateFormat$yMMMMd(null).format$1(t2._native);
      t1 = t1.__PagedPickerState_textDirection_A;
      t1 === $ && C.throwLateFieldNI("textDirection");
      C.SemanticsService_announce(t2, t1, D.Assertiveness_00);
    },
    $signature: 0
  };
  A._PagedDayPickerState_onGridFocusChange_closure.prototype = {
    call$0() {
      var t3, preferred,
        t1 = this.$this,
        t2 = t1._gridFocused = this.focused;
      if (t2 && t1.focusedDate == null) {
        t2 = A.LocalDate$_(A.DateTimes_truncate(t1._widget.today._native, B.DateUnit_1));
        t3 = t1.__PagedPickerState_current_A;
        t3 === $ && C.throwLateFieldNI("current");
        preferred = t2.$eq(0, t3) ? C.Primitives_getDay(t1._widget.today._native) : 1;
        t1.focusedDate = t1._focusableDayForMonth$2(t1.__PagedPickerState_current_A, preferred);
      } else if (!t2)
        t1.focusedDate = null;
    },
    $signature: 0
  };
  A._MonthPickerState_build_closure.prototype = {
    call$1(date) {
      if (C.Localizations_of(this.context, D.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      return C.DateFormat$MMM().format$1(date._native);
    },
    $signature: typesOffset + 38
  };
  A._PagedMonthPickerState_onGridFocusChange_closure.prototype = {
    call$0() {
      var t1, currentMonth, t2;
      if (this.focused && this.$this.focusedDate == null) {
        t1 = this.$this;
        currentMonth = A.LocalDate$_(A.DateTimes_truncate(t1._widget.today._native, B.DateUnit_1));
        t2 = t1._widget;
        if (C.Primitives_getYear(t2.initial._native) === C.Primitives_getYear(t2.today._native))
          t2 = currentMonth;
        else {
          t2 = t1.__PagedPickerState_current_A;
          t2 === $ && C.throwLateFieldNI("current");
        }
        t1.focusedDate = t1._focusableMonth$1(t2);
      }
    },
    $signature: 0
  };
  A.Entry_Entry$day_builder.prototype = {
    call$3(context, states, __wc0_formal) {
      var t1, yesterday, tomorrow, t2, t3, t4, t5, t6, _this = this;
      type$.BuildContext._as(context);
      type$.Set_WidgetState._as(states);
      type$.nullable_Widget._as(__wc0_formal);
      t1 = _this.isSelected;
      yesterday = t1 && C.boolConversionCheck(_this.selected.call$1(_this.date.minus$1$days(1))) ? D.Radius_0_0 : _this.entryStyle.radius;
      tomorrow = t1 && C.boolConversionCheck(_this.selected.call$1(A.LocalDate$_(A.DateTimes_plus(_this.date._native, 1, 0, 0)))) ? D.Radius_0_0 : _this.entryStyle.radius;
      t2 = _this.date._native;
      t3 = _this.today;
      t4 = _this.canSelect;
      if (C.Localizations_of(context, D.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      t5 = C.DateFormat$d(null).format$1(t2);
      t6 = C.LinkedHashSet_LinkedHashSet$of(states, type$.WidgetState);
      if (!t4)
        t6.add$1(0, D.WidgetState_6);
      return _this.dayBuilder.call$3(context, new C._Record_6_current_date_selectable_selected_style_today([_this.current, t2, t4, t1, _this.style, t3]), new A.EntryContent(_this.entryStyle, new A.BorderRadiusDirectional(yesterday, tomorrow, yesterday, tomorrow), t5, t6, t3, null));
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 168
  };
  A.Entry_Entry$yearMonth_builder.prototype = {
    call$3(__wc0_formal, states, __wc1_formal) {
      var t1, t2, t3, t4, _this = this;
      type$.BuildContext._as(__wc0_formal);
      type$.Set_WidgetState._as(states);
      type$.nullable_Widget._as(__wc1_formal);
      t1 = _this.style;
      t2 = C.BorderRadius$all(t1.radius);
      t3 = _this.format.call$1(_this.date);
      t4 = C.LinkedHashSet_LinkedHashSet$of(states, type$.WidgetState);
      if (!_this.selectable)
        t4.add$1(0, D.WidgetState_6);
      return new A.EntryContent(t1, t2, t3, t4, _this.current, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 168
  };
  A._SelectableEntry_build_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.onPress.call$1(t1.date);
    },
    $signature: 0
  };
  A._SelectableEntry_build_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.onLongPress;
      return t2 == null ? null : t2.call$1(t1.date);
    },
    $signature: 0
  };
  A._HeaderState_build_closure0.prototype = {
    call$0() {
      var t2,
        t1 = this.$this._widget.type;
      switch (t1._change_notifier$_value) {
        case B.FCalendarPickerType_0:
          t2 = B.FCalendarPickerType_1;
          break;
        case B.FCalendarPickerType_1:
          t2 = B.FCalendarPickerType_0;
          break;
        default:
          t2 = null;
      }
      t1.set$value(0, t2);
      return t2;
    },
    $signature: 0
  };
  A._HeaderState_build_closure.prototype = {
    call$3(__wc0_formal, states, __wc1_formal) {
      var t1, t2, t3, t4, t5, _null = null;
      type$.BuildContext._as(__wc0_formal);
      type$.Set_WidgetState._as(states);
      type$.nullable_Widget._as(__wc1_formal);
      t1 = this.context;
      if (C.Localizations_of(t1, D.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      t2 = this.$this;
      t3 = t2._widget.month;
      t3 = C.Text$(C.DateFormat$yMMMM(_null).format$1(t3._native), _null, _null, _null, _null, _null, _null, _null, t2._widget.style.headerTextStyle, _null, _null, _null, _null, _null);
      t1 = C.Directionality_maybeOf(t1) === D.TextDirection_0 ? -0.25 : 0.25;
      t4 = type$.Tween_double;
      t5 = t2.___HeaderState__controller_A;
      t5 === $ && C.throwLateFieldNI("_controller");
      type$.Animation_double._as(t5);
      return new C.SizedBox(_null, 31, new C.Padding(B.EdgeInsets_15_0_15_0, C.Row$(C._setArrayType([t3, C.RotationTransition$(new C.Padding(B.EdgeInsets_2_2_2_2, C.IconTheme$(B.Icon_pPk, t2._widget.style.buttonStyle.iconContentStyle.iconStyle.resolve$1(states).copyWith$1$color(t2._widget.style.headerTextStyle.color), _null), _null), new C._AnimatedEvaluation(t5, new C.Tween(0, t1, t4), t4._eval$1("_AnimatedEvaluation<Animatable.T>")))], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_2, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1), _null), _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 826
  };
  A.__HeaderState_State_SingleTickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.SingleTickerProviderStateMixin__ticker;
      if (t2 == null || t2._ticker$_future == null)
        return true;
      throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatS), C.ErrorHint$(string$.Ticker), t1.SingleTickerProviderStateMixin__ticker.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
    },
    $signature: 1
  };
  A.PagedPicker_closure.prototype = {
    call$1(date) {
      var t1, t2, t3;
      type$.LocalDate._as(date);
      t1 = this.start;
      t2 = t1._native;
      t1 = C._instanceType(t1)._eval$1("Orderable.T")._as(date)._native;
      t1 = 1000 * t1._core$_value + t1._microsecond;
      t3 = false;
      if (D.JSInt_methods.compareTo$1(1000 * t2._core$_value + t2._microsecond, t1) <= 0) {
        t2 = C._instanceType(date)._eval$1("Orderable.T")._as(this.end)._native;
        if (D.JSInt_methods.compareTo$1(t1, 1000 * t2._core$_value + t2._microsecond) <= 0) {
          t1 = this.selectable;
          t1 = t1 == null ? null : t1.call$1(date);
          t1 = C.boolConversionCheck(t1 == null ? true : t1);
        } else
          t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    $signature: typesOffset + 29
  };
  A.PagedPickerState__onDirectionFocus_closure.prototype = {
    call$0() {
      var _0_0, t3, t4, page,
        t1 = this.$this,
        t2 = t1.focusedDate;
      t2.toString;
      _0_0 = t1._nextDate$2(t2, this.intent.direction);
      if (_0_0 != null) {
        t1.focusedDate = _0_0;
        t2 = t1.delta$2(t1._widget.start, _0_0);
        t3 = t1._widget.start;
        t4 = t1.__PagedPickerState_current_A;
        t4 === $ && C.throwLateFieldNI("current");
        if (t2 !== t1.delta$2(t3, t4)) {
          t2 = t1.focusedDate;
          t2.toString;
          page = t1.delta$2(t1._widget.start, t2);
          t2 = t1.__PagedPickerState__controller_A;
          t2 === $ && C.throwLateFieldNI("_controller");
          t2.animateToPage$3$curve$duration(page, D.Cubic_glB, t1._widget.style.pageAnimationDuration);
        }
      }
    },
    $signature: 0
  };
  A._PagedYearPickerState_onGridFocusChange_closure.prototype = {
    call$0() {
      var t1, currentYear, t2;
      if (this.focused && this.$this.focusedDate == null) {
        t1 = this.$this;
        currentYear = A.LocalDate$_(A.DateTimes_truncate(t1._widget.today._native, B.DateUnit_0));
        t2 = t1.__PagedPickerState_current_A;
        t2 === $ && C.throwLateFieldNI("current");
        t1.focusedDate = t1._focusableYear$2(t2, currentYear.$eq(0, t2) ? currentYear : t1.__PagedPickerState_current_A);
      }
    },
    $signature: 0
  };
  A._PagedYearPickerState_onPageChange_closure.prototype = {
    call$0() {
      var _0_0, t3,
        t1 = this.$this,
        changed = A.LocalDate$_(A.DateTimes_plus(A.LocalDate$_(A.DateTimes_truncate(t1._widget.start._native, B.DateUnit_0))._native, 0, 0, this.page * 15)),
        t2 = t1.__PagedPickerState_current_A;
      t2 === $ && C.throwLateFieldNI("current");
      if (t2.$eq(0, changed))
        return;
      t1.__PagedPickerState_current_A = changed;
      _0_0 = t1.focusedDate;
      if (_0_0 != null)
        t2 = A.LocalDate$_(A.DateTimes_truncate(_0_0._native, B.DateUnit_0)).$eq(0, t1.__PagedPickerState_current_A);
      else
        t2 = false;
      if (t2) {
        t2 = t1.__PagedPickerState_current_A;
        t3 = t1.focusedDate;
        t3.toString;
        t1.focusedDate = t1._focusableYear$2(t2, t3);
      }
      t2 = t1.__PagedPickerState_current_A.toString$0(0);
      t1 = t1.__PagedPickerState_textDirection_A;
      t1 === $ && C.throwLateFieldNI("textDirection");
      C.SemanticsService_announce(t2, t1, D.Assertiveness_00);
    },
    $signature: 0
  };
  A._YearPickerState_build_closure.prototype = {
    call$1(date) {
      if (C.Localizations_of(this.context, D.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      return C.DateFormat$y(null).format$1(date._native);
    },
    $signature: typesOffset + 38
  };
  A._YearMonthPickerState_build_closure.prototype = {
    call$1(date) {
      var t1, t2, _0_0, t3, t4, t5, t6;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t2 = t1._widget.month;
      _0_0 = t2._change_notifier$_value.copyWith$1$year(C.Primitives_getYear(date._native));
      $label0$0: {
        t3 = t1._widget;
        t4 = C._instanceType(_0_0)._eval$1("Orderable.T")._as(t3.start);
        t5 = _0_0._native;
        t5 = 1000 * t5._core$_value + t5._microsecond;
        t6 = t4._native;
        t6 = D.JSInt_methods.compareTo$1(t5, 1000 * t6._core$_value + t6._microsecond);
        if (t6 < 0) {
          t3 = t4;
          break $label0$0;
        }
        t3 = t3.end;
        C._instanceType(t3)._eval$1("Orderable.T")._as(_0_0);
        t4 = t3._native;
        t5 = D.JSInt_methods.compareTo$1(1000 * t4._core$_value + t4._microsecond, t5);
        if (t5 < 0)
          break $label0$0;
        t3 = _0_0;
        break $label0$0;
      }
      t2.set$value(0, t3);
      t1.setState$1(new A._YearMonthPickerState_build__closure(t1));
    },
    $signature: typesOffset + 8
  };
  A._YearMonthPickerState_build__closure.prototype = {
    call$0() {
      this.$this._year = false;
    },
    $signature: 0
  };
  A._YearMonthPickerState_build_closure0.prototype = {
    call$1(date) {
      var t1, t2, _1_0, t3, t4, t5, t6;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t2 = t1._widget.month;
      _1_0 = t2._change_notifier$_value.copyWith$1$month(C.Primitives_getMonth(date._native));
      $label1$1: {
        t3 = t1._widget;
        t4 = C._instanceType(_1_0)._eval$1("Orderable.T")._as(t3.start);
        t5 = _1_0._native;
        t5 = 1000 * t5._core$_value + t5._microsecond;
        t6 = t4._native;
        t6 = D.JSInt_methods.compareTo$1(t5, 1000 * t6._core$_value + t6._microsecond);
        if (t6 < 0) {
          t3 = t4;
          break $label1$1;
        }
        t3 = t3.end;
        C._instanceType(t3)._eval$1("Orderable.T")._as(_1_0);
        t4 = t3._native;
        t5 = D.JSInt_methods.compareTo$1(1000 * t4._core$_value + t4._microsecond, t5);
        if (t5 < 0)
          break $label1$1;
        t3 = _1_0;
        break $label1$1;
      }
      t2.set$value(0, t3);
      t1._widget.type.set$value(0, B.FCalendarPickerType_0);
    },
    $signature: typesOffset + 8
  };
  A.FDialog_closure.prototype = {
    call$2(__wc1_formal, style) {
      type$.BuildContext._as(__wc1_formal);
      return new A.VerticalContent(type$.FDialogStyle._as(style).verticalStyle, D.CrossAxisAlignment_2, this.title, D.TextAlign_2, this.body, D.TextAlign_2, this.actions, null);
    },
    $signature: typesOffset + 114
  };
  A._FRootHeader_build_closure.prototype = {
    call$1(action) {
      return C._setArrayType([new C.SizedBox(10, null, null, null), type$.Widget._as(action)], type$.JSArray_Widget);
    },
    $signature: 299
  };
  A._CodeFieldState_build_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return C._asyncAwait(C.Clipboard_setData(new C.ClipboardData(t1._widget.codes)).then$1$1(0, new A._CodeFieldState_build__closure(t1), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              $async$goto = 3;
              return C._asyncAwait(C.Future_Future$delayed(D.Duration_2000000, null, type$.dynamic), $async$call$0);
            case 3:
              // returning from await.
              t1.setState$1(new A._CodeFieldState_build__closure0(t1));
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 14
  };
  A._CodeFieldState_build__closure.prototype = {
    call$1(value) {
      var t1 = this.$this;
      t1.setState$1(new A._CodeFieldState_build___closure(t1));
    },
    $signature: 26
  };
  A._CodeFieldState_build___closure.prototype = {
    call$0() {
      this.$this._copied = true;
    },
    $signature: 0
  };
  A._CodeFieldState_build__closure0.prototype = {
    call$0() {
      this.$this._copied = false;
    },
    $signature: 0
  };
  A.CustomRb_build_closure.prototype = {
    call$1(value) {
    },
    $signature: 300
  };
  A.CustomCb_build_closure.prototype = {
    call$1(value) {
    },
    $signature: 300
  };
  A._LinkButtonState_build_closure2.prototype = {
    call$1(__wc0_formal) {
      type$.PointerEnterEvent._as(__wc0_formal);
      return this.$this._link_button$_handleHover$1(true);
    },
    $signature: 55
  };
  A._LinkButtonState_build_closure3.prototype = {
    call$1(__wc1_formal) {
      type$.PointerExitEvent._as(__wc1_formal);
      return this.$this._link_button$_handleHover$1(false);
    },
    $signature: 51
  };
  A._LinkButtonState_build_closure0.prototype = {
    call$1(__wc2_formal) {
      return this.$this._handlePress$1(true);
    },
    $signature: 43
  };
  A._LinkButtonState_build_closure1.prototype = {
    call$1(__wc3_formal) {
      return this.$this._handlePress$1(false);
    },
    $signature: 60
  };
  A._LinkButtonState_build_closure.prototype = {
    call$0() {
      return this.$this._handlePress$1(false);
    },
    $signature: 0
  };
  A._LinkButtonState__handleHover_closure.prototype = {
    call$0() {
      this.$this._link_button$_isHovering = this.hover;
    },
    $signature: 0
  };
  A._LinkButtonState__handlePress_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.MarkdownComponent_generate_closure.prototype = {
    call$1(e) {
      return type$.MarkdownComponent._as(e).get$exp().pattern;
    },
    $signature: typesOffset + 115
  };
  A.MarkdownComponent_generate_closure0.prototype = {
    call$1(p0) {
      var t1, t2, _i, each, t3, t4, exp, _this = this,
        element = p0.$index(0, 0);
      if (element == null)
        element = "";
      for (t1 = _this.components, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        each = t1[_i];
        t3 = each.get$exp();
        t4 = each.get$exp()._nativeRegExp.multiline;
        exp = C.RegExp_RegExp("^" + t3.pattern + "$", true, each.get$exp()._nativeRegExp.dotAll, t4, false);
        if (exp._nativeRegExp.test(element)) {
          D.JSArray_methods.add$1(_this.spans, each.span$3(0, _this.context, element, _this.config));
          return "";
        }
      }
      return "";
    },
    $signature: 97
  };
  A.MarkdownComponent_generate_closure1.prototype = {
    call$1(p0) {
      var _this = this;
      if (p0.length === 0)
        return "";
      if (_this.includeGlobalComponents) {
        D.JSArray_methods.addAll$1(_this.spans, A.MarkdownComponent_generate(_this.context, p0, _this.config.copyWith$0(), false));
        return "";
      }
      D.JSArray_methods.add$1(_this.spans, C.TextSpan$(null, _this.config.style, p0));
      return "";
    },
    $signature: 21
  };
  A.LatexMathMultiLine_build_closure.prototype = {
    call$1(tex) {
      return tex;
    },
    $signature: 21
  };
  A.LatexMathMultiLine_build_closure0.prototype = {
    call$4(context, tex, textStyle, inline) {
      var t5, t6, _null = null,
        t1 = this.config,
        t2 = t1.style,
        t3 = t2 == null,
        t4 = t3 ? _null : t2.color;
      if (t4 == null)
        t4 = C.Theme_of(context).colorScheme.onSurface;
      t5 = t3 ? _null : t2.fontSize;
      if (t5 == null) {
        t5 = C.Theme_of(context).textTheme.bodyMedium;
        t5 = t5 == null ? _null : t5.fontSize;
      }
      t6 = t3 ? _null : t2.fontWeight;
      if (t6 == null)
        t6 = D.FontWeight_3_400;
      t2 = t3 ? _null : t2.fontWeight;
      if (t2 == null)
        t2 = D.FontWeight_3_400;
      return new A.SelectableAdapter(A.Math_Math$tex(tex, B.MathStyle_0, new A.LatexMathMultiLine_build__closure(this.workaround, this.mathText, t1, textStyle, context), A.MathOptions_MathOptions(t4, t5, _null, new A.FontOptions("Main", t6, D.FontStyle_0, B.List_empty21), B.MathSize_6, B.MathStyle_0, new A.FontOptions("Main", t2, D.FontStyle_0, B.List_empty21)), B.TexParserSettings_Strict_0, 1, textStyle), tex, _null);
    },
    $signature: typesOffset + 39
  };
  A.LatexMathMultiLine_build__closure.prototype = {
    call$1(err) {
      var _this = this, _null = null;
      type$.FlutterMathException._as(err);
      return C.Text$(_this.workaround.call$1(_this.mathText), _null, _null, _null, _null, _null, _null, _null, _this.textStyle.copyWith$1$color(C.Theme_of(_this.context).colorScheme.error), _null, _this.config.textDirection, _null, _null, _null);
    },
    $signature: typesOffset + 40
  };
  A.LatexMath_span_closure.prototype = {
    call$1(tex) {
      return tex;
    },
    $signature: 21
  };
  A.LatexMath_span_closure0.prototype = {
    call$4(context, tex, textStyle, inline) {
      var t5, t6, _null = null,
        t1 = this.config,
        t2 = t1.style,
        t3 = t2 == null,
        t4 = t3 ? _null : t2.color;
      if (t4 == null)
        t4 = C.Theme_of(context).colorScheme.onSurface;
      t5 = t3 ? _null : t2.fontSize;
      if (t5 == null) {
        t5 = C.Theme_of(context).textTheme.bodyMedium;
        t5 = t5 == null ? _null : t5.fontSize;
      }
      t6 = t3 ? _null : t2.fontWeight;
      if (t6 == null)
        t6 = D.FontWeight_3_400;
      t2 = t3 ? _null : t2.fontWeight;
      if (t2 == null)
        t2 = D.FontWeight_3_400;
      return new A.SelectableAdapter(A.Math_Math$tex(tex, B.MathStyle_0, new A.LatexMath_span__closure(this.workaround, this.mathText, t1, textStyle, context), A.MathOptions_MathOptions(t4, t5, _null, new A.FontOptions("Main", t6, D.FontStyle_0, B.List_empty21), B.MathSize_6, B.MathStyle_0, new A.FontOptions("Main", t2, D.FontStyle_0, B.List_empty21)), B.TexParserSettings_Strict_0, 1, textStyle), tex, _null);
    },
    $signature: typesOffset + 39
  };
  A.LatexMath_span__closure.prototype = {
    call$1(err) {
      var _this = this, _null = null;
      type$.FlutterMathException._as(err);
      return C.Text$(_this.workaround.call$1(_this.mathText), _null, _null, _null, _null, _null, _null, _null, _this.textStyle.copyWith$1$color(C.Theme_of(_this.context).colorScheme.error), _null, _this.config.textDirection, _null, _null, _null);
    },
    $signature: typesOffset + 40
  };
  A.ATagMd_span_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.ImageMd_span_closure0.prototype = {
    call$3(context, child, loadingProgress) {
      var t1;
      type$.BuildContext._as(context);
      type$.Widget._as(child);
      type$.nullable_ImageChunkEvent._as(loadingProgress);
      if (loadingProgress == null)
        return child;
      t1 = loadingProgress.expectedTotalBytes;
      return new A.CustomImageLoading(t1 != null ? loadingProgress.cumulativeBytesLoaded / t1 : 1, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 161
  };
  A.ImageMd_span_closure.prototype = {
    call$3(context, error, stackTrace) {
      return B.CustomImageError_null;
    },
    $signature: typesOffset + 118
  };
  A.TableMd_build_closure.prototype = {
    call$1(e) {
      var t1 = type$.WhereIterable_String;
      t1 = C.List_List$of(new C.WhereIterable(C._setArrayType(D.JSString_methods.trim$0(C._asString(e)).split("|"), type$.JSArray_String), type$.bool_Function_String._as(new A.TableMd_build__closure0()), t1), true, t1._eval$1("Iterable.E"));
      return new C.ListMapView(t1, C._arrayInstanceType(t1)._eval$1("ListMapView<1>"));
    },
    $signature: 829
  };
  A.TableMd_build__closure0.prototype = {
    call$1(element) {
      return C._asString(element).length !== 0;
    },
    $signature: 48
  };
  A.TableMd_build_closure0.prototype = {
    call$1(index) {
      var hasLeftColon, hasRightColon,
        separator = J.$index$asx(this.separatorRow, index);
      separator = D.JSString_methods.trim$0(separator == null ? "" : separator);
      hasLeftColon = D.JSString_methods.startsWith$1(separator, ":");
      hasRightColon = D.JSString_methods.endsWith$1(separator, ":");
      if (hasLeftColon && hasRightColon)
        return D.TextAlign_2;
      else if (hasRightColon)
        return D.TextAlign_1;
      else if (hasLeftColon)
        return D.TextAlign_0;
      else
        return D.TextAlign_0;
    },
    $signature: 830
  };
  A.TableMd_build_closure1.prototype = {
    call$1(entry) {
      type$.MapEntry_of_int_and_Map_int_String._as(entry);
      if (this.hasHeader && J.$eq$(entry.key, 1))
        return false;
      return true;
    },
    $signature: 831
  };
  A.TableMd_build_closure2.prototype = {
    call$1(entry) {
      var t1, t2, _this = this, _null = null;
      type$.MapEntry_of_int_and_Map_int_String._as(entry);
      if (_this.hasHeader && J.$eq$(entry.key, 0)) {
        t1 = C.Theme_of(_this.context).colorScheme;
        t2 = t1._surfaceContainerHighest;
        t1 = C.BoxDecoration$(_null, _null, _null, _null, t2 == null ? t1.surface : t2, _null, _null, D.BoxShape_0);
      } else
        t1 = _null;
      t2 = _this._box_0;
      return new C.TableRow(t1, C.List_List$generate(t2.maxCol, new A.TableMd_build__closure(t2, entry, _this.context, _this.config), true, type$.Widget));
    },
    $signature: 832
  };
  A.TableMd_build__closure.prototype = {
    call$1(index) {
      var t2, t3, $content, _this = this, _null = null,
        e = _this.entry.value,
        t1 = J.getInterceptor$asx(e),
        data = t1.$index(e, index);
      if (data == null)
        data = "";
      t2 = C.RegExp_RegExp("^:?--+:?$", true, false, false, false);
      t3 = D.JSString_methods.trim$0(data);
      if (t2._nativeRegExp.test(t3) || t3.length === 0)
        return D.SizedBox_null_null_null_null;
      t1 = t1.$index(e, index);
      $content = new C.Padding(D.EdgeInsets_8_4_8_4, new A.MdWidget(D.JSString_methods.trim$0(t1 == null ? "" : t1), _this.context, false, _this.config, _null), _null);
      t1 = _this._box_0.columnAlignments;
      if (!(index < t1.length))
        return C.ioore(t1, index);
      switch (t1[index].index) {
        case 2:
          $content = C.Center$($content, _null, _null, _null);
          break;
        case 1:
          $content = C.Align$(D.Alignment_1_0, $content, _null, _null, _null);
          break;
        case 0:
        default:
          $content = C.Align$(D.Alignment_m1_0, $content, _null, _null, _null);
          break;
      }
      return $content;
    },
    $signature: 833
  };
  A._NestedHookElement_injectedChild_closure.prototype = {
    call$1(e) {
      return e.markNeedsBuild$0();
    },
    $signature: 15
  };
  A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure.prototype = {
    call$1($parent) {
      if ($parent instanceof A._NestedHookElement)
        this.$this.SingleChildWidgetElementMixin__parent = $parent;
      return false;
    },
    $signature: 20
  };
  A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure.prototype = {
    call$1($parent) {
      if ($parent instanceof A._NestedHookElement)
        this.$this.SingleChildWidgetElementMixin__parent = $parent;
      return false;
    },
    $signature: 20
  };
  A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure.prototype = {
    call$1($parent) {
      if ($parent instanceof A._NestedHookElement)
        this.$this.SingleChildWidgetElementMixin__parent = $parent;
      return false;
    },
    $signature: 20
  };
  A.optimizedRanges_closure.prototype = {
    call$2(first, second) {
      var t2,
        t1 = type$.RangeCharPredicate;
      t1._as(first);
      t1._as(second);
      t1 = first.start;
      t2 = second.start;
      return t1 !== t2 ? t1 - t2 : first.stop - second.stop;
    },
    $signature: typesOffset + 119
  };
  A.optimizedRanges_closure0.prototype = {
    call$2(current, range) {
      C._asInt(current);
      type$.RangeCharPredicate._as(range);
      return current + (range.stop - range.start + 1);
    },
    $signature: typesOffset + 120
  };
  A._single_closure.prototype = {
    call$1(element) {
      var t1, t2;
      C._asString(element);
      t1 = A.toCharCode(element);
      t2 = A.toCharCode(element);
      if (C.assertTest(t1 <= t2))
        C.assertThrow("Invalid range character range: " + t1 + "-" + t2);
      return new A.RangeCharPredicate(t1, t2);
    },
    $signature: typesOffset + 121
  };
  A._range_closure.prototype = {
    call$3(start, _, $stop) {
      var t1, t2;
      C._asString(start);
      C._asString(_);
      C._asString($stop);
      t1 = A.toCharCode(start);
      t2 = A.toCharCode($stop);
      if (C.assertTest(t1 <= t2))
        C.assertThrow("Invalid range character range: " + t1 + "-" + t2);
      return new A.RangeCharPredicate(t1, t2);
    },
    $signature: typesOffset + 122
  };
  A._pattern_closure.prototype = {
    call$2(negation, sequence) {
      var t1;
      C._asStringQ(negation);
      type$.CharacterPredicate._as(sequence);
      if (negation == null)
        t1 = sequence;
      else
        t1 = sequence instanceof A.ConstantCharPredicate ? new A.ConstantCharPredicate(!sequence.constant) : new A.NotCharacterPredicate(sequence);
      return t1;
    },
    $signature: typesOffset + 123
  };
  A.RecordParserExtension2_map2_closure.prototype = {
    call$1(record) {
      this.T1._eval$1("@<0>")._bind$1(this.T2)._eval$1("+(1,2)")._as(record);
      return this.callback.call$2(record._0, record._1);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T1)._bind$1(this.T2)._eval$1("1(+(2,3))");
    }
  };
  A.RecordParserExtension3_map3_closure.prototype = {
    call$1(record) {
      var _this = this;
      _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._eval$1("+(1,2,3)")._as(record);
      return _this.callback.call$3(record._0, record._1, record._2);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._eval$1("1(+(2,3,4))");
    }
  };
  A.RecordParserExtension4_map4_closure.prototype = {
    call$1(record) {
      var _this = this,
        t1 = _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._eval$1("+(1,2,3,4)")._as(record)._values;
      return _this.callback.call$4(t1[0], t1[1], t1[2], t1[3]);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._eval$1("1(+(2,3,4,5))");
    }
  };
  A.RecordParserExtension5_map5_closure.prototype = {
    call$1(record) {
      var _this = this,
        t1 = _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._eval$1("+(1,2,3,4,5)")._as(record)._values;
      return _this.callback.call$5(t1[0], t1[1], t1[2], t1[3], t1[4]);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._eval$1("1(+(2,3,4,5,6))");
    }
  };
  A.RecordParserExtension8_map8_closure.prototype = {
    call$1(record) {
      var _this = this,
        t1 = _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._bind$1(_this.T6)._bind$1(_this.T7)._bind$1(_this.T8)._eval$1("+(1,2,3,4,5,6,7,8)")._as(record)._values;
      return _this.callback.call$8(t1[0], t1[1], t1[2], t1[3], t1[4], t1[5], t1[6], t1[7]);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._bind$1(_this.T6)._bind$1(_this.T7)._bind$1(_this.T8)._eval$1("1(+(2,3,4,5,6,7,8,9))");
    }
  };
  A.string_closure.prototype = {
    call$1(each) {
      return this.element === each;
    },
    $signature: 48
  };
  A.ListenableProvider__startListening_closure.prototype = {
    call$0() {
      var t1 = this.value;
      return t1 == null ? null : t1.removeListener$1(0, this.e.get$markNeedsNotifyDependents());
    },
    $signature: 0
  };
  A._InheritedProviderElement_debugFillProperties_closure.prototype = {
    call$1(e) {
      return e.debugFillProperties$1(this.properties);
    },
    $signature: 15
  };
  A.SelectContext_select_closure.prototype = {
    call$0() {
      return $._debugIsSelecting = true;
    },
    $signature: 1
  };
  A.SelectContext_select_closure0.prototype = {
    call$1(newValue) {
      var _this = this,
        t1 = _this.T;
      t1._eval$1("0?")._as(newValue);
      if (!t1._is(newValue))
        throw C.wrapException(A.ProviderNullException$(C.createRuntimeType(t1), C.getRuntimeTypeOfDartObject(_this._this.get$widget())));
      return !D.DeepCollectionEquality_false.equals$2(_this.selector.call$1(newValue), _this.selected);
    },
    $signature() {
      return this.T._eval$1("bool(0?)");
    }
  };
  A.SelectContext_select_closure1.prototype = {
    call$0() {
      $._debugIsSelecting = false;
      return true;
    },
    $signature: 1
  };
  A._InheritedProviderScopeElement_getElementForInheritedWidgetOfExactType_closure.prototype = {
    call$1($parent) {
      var t1 = this.InheritedWidgetType;
      if (C.getRuntimeTypeOfDartObject($parent.get$widget()) === C.createRuntimeType(t1)) {
        this._box_0.inheritedElement = type$.InheritedElement._as($parent);
        return false;
      }
      this._box_0.inheritedElement = $parent.getElementForInheritedWidgetOfExactType$1$0(t1);
      return false;
    },
    $signature: 20
  };
  A._InheritedProviderScopeElement_updateDependencies_closure.prototype = {
    call$0() {
      var t1 = this.selectorDependency;
      t1.shouldClearMutationScheduled = false;
      t1.shouldClearSelectors = true;
    },
    $signature: 11
  };
  A._InheritedProviderScopeElement_notifyDependent_closure.prototype = {
    call$0() {
      return $._debugIsSelecting = true;
    },
    $signature: 1
  };
  A._InheritedProviderScopeElement_notifyDependent_closure0.prototype = {
    call$0() {
      $._debugIsSelecting = false;
      return true;
    },
    $signature: 1
  };
  A._InheritedProviderScopeElement_update_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (C.getRuntimeTypeOfDartObject(t1.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t1)).owner._provider$_delegate) !== C.getRuntimeTypeOfDartObject(this.newWidget.owner._provider$_delegate))
        throw C.wrapException(C.StateError$("Rebuilt " + t1.get$widget().toString$0(0) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
      return true;
    },
    $signature: 1
  };
  A._InheritedProviderScopeElement__debugSetInheritedLock_closure.prototype = {
    call$0() {
      this.$this._debugInheritLocked = this.value;
      return true;
    },
    $signature: 1
  };
  A._InheritedProviderScopeElement_dependOnInheritedElement_closure.prototype = {
    call$0() {
      if (this.$this._debugInheritLocked)
        throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$("Tried to listen to an InheritedWidget in a life-cycle that will never be called again."), C.ErrorDescription$('This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn\'t make sense, such as:\n- initState of a StatefulWidget\n- the "create" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n')], type$.JSArray_DiagnosticsNode)));
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure.prototype = {
    call$0() {
      var t1 = this._box_0;
      t1._debugPreviousIsInInheritedProviderCreate = $.debugIsInInheritedProviderCreate;
      t1._debugPreviousIsInInheritedProviderUpdate = $.debugIsInInheritedProviderUpdate;
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure0.prototype = {
    call$0() {
      $.debugIsInInheritedProviderCreate = true;
      $.debugIsInInheritedProviderUpdate = false;
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure1.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1._debugPreviousIsInInheritedProviderCreate;
      t2.toString;
      $.debugIsInInheritedProviderCreate = t2;
      t1 = t1._debugPreviousIsInInheritedProviderUpdate;
      t1.toString;
      $.debugIsInInheritedProviderUpdate = t1;
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure2.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1.element;
      t2.toString;
      t3 = t1.$ti;
      t2 = t3._eval$1("~(1)?")._as(t3._eval$1("_DelegateState.D")._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).debugCheckInvalidValueType);
      if (t2 != null) {
        t1 = t1._provider$_value;
        t2.call$1(t1 == null ? t3._precomputed1._as(t1) : t1);
      }
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure3.prototype = {
    call$0() {
      $.debugIsInInheritedProviderCreate = false;
      return $.debugIsInInheritedProviderUpdate = true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure4.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1._debugPreviousIsInInheritedProviderCreate;
      t2.toString;
      $.debugIsInInheritedProviderCreate = t2;
      t1 = t1._debugPreviousIsInInheritedProviderUpdate;
      t1.toString;
      $.debugIsInInheritedProviderUpdate = t1;
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_value_closure5.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1.element;
      t2.toString;
      t3 = t1.$ti;
      t2 = t3._eval$1("~(1)?")._as(t3._eval$1("_DelegateState.D")._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).debugCheckInvalidValueType);
      if (t2 != null) {
        t1 = t1._provider$_value;
        t2.call$1(t1 == null ? t3._precomputed1._as(t1) : t1);
      }
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_build_closure.prototype = {
    call$0() {
      var t1 = this._box_0;
      t1._debugPreviousIsInInheritedProviderCreate = $.debugIsInInheritedProviderCreate;
      t1._debugPreviousIsInInheritedProviderUpdate = $.debugIsInInheritedProviderUpdate;
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_build_closure0.prototype = {
    call$0() {
      $.debugIsInInheritedProviderCreate = false;
      return $.debugIsInInheritedProviderUpdate = true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_build_closure1.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1._debugPreviousIsInInheritedProviderCreate;
      t2.toString;
      $.debugIsInInheritedProviderCreate = t2;
      t1 = t1._debugPreviousIsInInheritedProviderUpdate;
      t1.toString;
      $.debugIsInInheritedProviderUpdate = t1;
      return true;
    },
    $signature: 1
  };
  A._CreateInheritedProviderState_build_closure2.prototype = {
    call$0() {
      var t3,
        t1 = this.$this,
        t2 = t1.element;
      t2.toString;
      t3 = t1.$ti;
      t2 = t3._eval$1("~(1)?")._as(t3._eval$1("_DelegateState.D")._as(t2.$ti._eval$1("_InheritedProviderScope<1>")._as(C.Element.prototype.get$widget.call(t2)).owner._provider$_delegate).debugCheckInvalidValueType);
      if (t2 != null) {
        t1 = t1._provider$_value;
        t2.call$1(t1 == null ? t3._precomputed1._as(t1) : t1);
      }
      return true;
    },
    $signature: 1
  };
  A.MultiProvider__collapseProviders_closure.prototype = {
    call$1(child) {
      var t1 = this.provider;
      return t1._buildWithChild$2$key(child, t1.key);
    },
    $signature: 301
  };
  A.MultiProvider__collapseProviders_closure0.prototype = {
    call$1(child) {
      var t1 = this.provider;
      return this.p.call$1(t1._buildWithChild$2$key(child, t1.key));
    },
    $signature: 301
  };
  A.MultiProvider__collapseProviders_closure1.prototype = {
    call$2(context, child) {
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      return this._box_0.previous.call$1(child);
    },
    $signature: 72
  };
  A.Provider$value_closure.prototype = {
    call$0() {
      $.$get$Provider_debugCheckInvalidValueType().call$1$1(this.value, this.T);
      return true;
    },
    $signature: 1
  };
  A.Provider_debugCheckInvalidValueType_closure.prototype = {
    call$1$1(value, $T) {
      C.assertHelper(new A.Provider_debugCheckInvalidValueType__closure($T._as(value), $T).call$0());
    },
    call$1(value) {
      return this.call$1$1(value, type$.dynamic);
    },
    $signature: 835
  };
  A.Provider_debugCheckInvalidValueType__closure.prototype = {
    call$0() {
      var t1 = this.value;
      if (type$.Listenable._is(t1) || t1 instanceof C.Stream) {
        t1 = this.T;
        throw C.wrapException(C.FlutterError_FlutterError("Tried to use Provider with a subtype of Listenable/Stream (" + C.createRuntimeType(t1).toString$0(0) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + C.createRuntimeType(t1).toString$0(0) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
      }
      return true;
    },
    $signature: 1
  };
  A.ProxyProvider0_closure.prototype = {
    call$1(value) {
      var t1 = this.R;
      t1._as(value);
      t1 = $.$get$Provider_debugCheckInvalidValueType().call$1$1(value, t1);
      return t1;
    },
    $signature() {
      return this.R._eval$1("~(0)");
    }
  };
  A.ProxyProvider_closure.prototype = {
    call$2(context, value) {
      this.R._eval$1("0?")._as(value);
      return this.update.call$3(context, A.Provider_of(context, true, this.T), value);
    },
    $signature() {
      return this.R._eval$1("0(BuildContext,0?)");
    }
  };
  A._Selector0State_buildWithChild_closure.prototype = {
    call$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.$this;
      return t1.$ti._eval$1("Widget(BuildContext,1,Widget?)")._as(t1._widget.builder).call$3(context, this.selected, this.child);
    },
    $signature: 24
  };
  A.Selector2_closure.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      return this.selector.call$3(context, A.Provider_of(context, true, this.A), A.Provider_of(context, true, this.B));
    },
    $signature() {
      return this.S._eval$1("0(BuildContext)");
    }
  };
  A.ObserverControllerForScroll__handleScrollToIndex_closure.prototype = {
    call$1(_) {
      var t1, t2, firstChild, lastChild, firstChildIndex, t3, lastChildIndex, _this = this;
      type$.Duration._as(_);
      t1 = _this.$this;
      t2 = _this.obj;
      firstChild = t1.findCurrentFirstChild$1(t2);
      lastChild = t1.findCurrentLastChild$1(t2);
      if (firstChild == null || lastChild == null) {
        t1._handleScrollInterruption$2$completer$context(_this.completer, _this.ctx);
        return;
      }
      firstChildIndex = firstChild._proxy_box$_index;
      t3 = _this._box_0;
      t3.firstChildIndex = firstChildIndex;
      lastChildIndex = lastChild._proxy_box$_index;
      t3.lastChildIndex = lastChildIndex;
      t1._handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(_this.alignment, _this.completer, _this.ctx, _this.curve, _this.duration, firstChildIndex, _this.index, lastChildIndex, t3.lastPageTurningOffset, t2, _this.offset, _this.onPrepareScrollToIndex, _this.padding);
    },
    $signature: 3
  };
  A.ObserverControllerForScroll__handleScrollToIndex_closure0.prototype = {
    call$1(_) {
      var t1, t2, firstChild, lastChild, firstChildIndex, t3, lastChildIndex, _this = this;
      type$.Duration._as(_);
      t1 = _this.$this;
      t2 = _this.obj;
      firstChild = t1.findCurrentFirstChild$1(t2);
      lastChild = t1.findCurrentLastChild$1(t2);
      if (firstChild == null || lastChild == null) {
        t1._handleScrollInterruption$2$completer$context(_this.completer, _this.ctx);
        return;
      }
      firstChildIndex = firstChild._proxy_box$_index;
      t3 = _this._box_0;
      t3.firstChildIndex = firstChildIndex;
      lastChildIndex = lastChild._proxy_box$_index;
      t3.lastChildIndex = lastChildIndex;
      t1._handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(_this.alignment, _this.completer, _this.ctx, _this.curve, _this.duration, firstChildIndex, _this.index, lastChildIndex, t3.lastPageTurningOffset, t2, _this.offset, _this.onPrepareScrollToIndex, _this.padding);
    },
    $signature: 3
  };
  A.ObserverControllerForScroll__handleScrollEnd_closure.prototype = {
    call$1(_) {
      var t1;
      type$.Duration._as(_);
      t1 = this.$this;
      t1.innerIsHandlingScroll = false;
      t1.innerNeedOnceObserveCallBack.call$0();
      this.completer.complete$0(0);
      new A.ObserverScrollEndNotification().dispatch$1(this.context);
    },
    $signature: 3
  };
  A.ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure.prototype = {
    call$1(type) {
      switch (type$.ObserverAutoTriggerObserveType._as(type).index) {
        case 0:
          return B.Type_ScrollStartNotification_Ezb;
        case 1:
          return B.Type_ScrollUpdateNotification_nu7;
        case 2:
          return B.Type_ScrollEndNotification_axn;
      }
    },
    $signature: typesOffset + 126
  };
  A.ObserverWidgetState__debugAssertNotDisposed_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.innerListeners == null)
        throw C.wrapException(C.FlutterError_FlutterError("A " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20was_u + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + ", it can no longer be used."));
      return true;
    },
    $signature: 1
  };
  A.ObserverWidgetState_build_closure.prototype = {
    call$1(notification) {
      var result, sliverController,
        t1 = this.$this;
      C._instanceType(t1)._eval$1("ObserverWidgetState.N")._as(notification);
      result = t1.handleContexts$3$isDependObserveCallback$isForceObserve$isFromObserveNotification(false, true, true);
      sliverController = t1._widget.sliverController;
      if (sliverController instanceof A.SliverObserverController)
        sliverController.innerHandleDispatchOnceObserveComplete$1$resultModel(result);
      return true;
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("bool(ObserverWidgetState.N)");
    }
  };
  A.ObserverWidgetState_build_closure0.prototype = {
    call$1(notification) {
      var t1, t2;
      type$.ScrollNotification._as(notification);
      t1 = this.$this;
      t1._widget.toString;
      if (D.JSArray_methods.contains$1(t1.get$innerAutoTriggerObserveScrollNotifications(), C.getRuntimeTypeOfDartObject(notification))) {
        t2 = C.getRuntimeTypeOfDartObject(notification);
        C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).get$endOfFrame().then$1$1(0, new A.ObserverWidgetState_build__closure(t1, B.Type_ScrollUpdateNotification_nu7 !== t2), type$.Null);
      }
      return false;
    },
    $signature: 62
  };
  A.ObserverWidgetState_build__closure.prototype = {
    call$1(_) {
      this.$this.handleContexts$1$isIgnoreInnerCanHandleObserve(this.isIgnoreInnerCanHandleObserve);
    },
    $signature: 26
  };
  A.ObserverWidgetState__setupSliverController_closure.prototype = {
    call$0() {
      this.$this.handleContexts$0();
    },
    $signature: 11
  };
  A.ObserverWidgetState__setupSliverController_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      J.clear$0$ax(t1.targetSliverContexts);
      t1._setupSliverController$0();
    },
    $signature: 11
  };
  A.ObserverWidgetState__setupSliverController_closure1.prototype = {
    call$1(timeStamp) {
      var t1, t2;
      type$.Duration._as(timeStamp);
      t1 = this.$this;
      t1.set$targetSliverContexts(t1.fetchTargetSliverContexts$0());
      t2 = this.sliverController;
      t2.set$sliverContexts(t1.targetSliverContexts);
      if (this.isInitState)
        t2.innerInitialIndexPosition$0();
    },
    $signature: 3
  };
  A.ObserverWidgetState_fetchTargetSliverContexts_visitor.prototype = {
    call$1(element) {
      type$.Element._as(element);
      if (this.$this.isTargetSliverContextType$1(element.get$renderObject())) {
        D.JSArray_methods.add$1(this._ctxs, element);
        return;
      }
      element.visitChildren$1(this);
    },
    $signature: 15
  };
  A.ObserverWidgetState__notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return C._setArrayType([C.DiagnosticsProperty$("The " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending result was", t1, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_9, _null, type$.ObserverWidgetState_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 9
  };
  A.MixViewObserverState__debugAssertNotDisposed_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.innerSliverListeners == null)
        throw C.wrapException(C.FlutterError_FlutterError("A " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20was_u + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + ", it can no longer be used."));
      return true;
    },
    $signature: 1
  };
  A.MixViewObserverState_handleObserveViewport_closure.prototype = {
    call$1(e) {
      return A.ObserverUtils_findRenderObject(type$.BuildContext._as(e));
    },
    $signature: 836
  };
  A.MixViewObserverState__notifySliverListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return C._setArrayType([C.DiagnosticsProperty$("The " + C.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending result was", t1, true, D.C__NoDefaultValue, _null, false, _null, _null, D.DiagnosticLevel_3, _null, false, true, true, D.DiagnosticsTreeStyle_9, _null, type$.ObserverWidgetState_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 9
  };
  A._ShimmerState_initState_closure.prototype = {
    call$1($status) {
      var t1;
      if (type$.AnimationStatus._as($status) !== D.AnimationStatus_3)
        return;
      t1 = this.$this;
      ++t1._shimmer$_count;
      t1._widget.toString;
      t1 = t1.___ShimmerState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.repeat$0(0);
    },
    $signature: 12
  };
  A._ShimmerState_build_closure.prototype = {
    call$2(context, child) {
      var t1, t2;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      t2 = t1._widget.gradient;
      t1 = t1.___ShimmerState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1 = t1.__AnimationController__value_A;
      t1 === $ && C.throwLateFieldNI("_value");
      return new A._Shimmer(t1, B.ShimmerDirection_0, t2, child, null);
    },
    $signature: typesOffset + 127
  };
  A.__ShimmerState_State_SingleTickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.SingleTickerProviderStateMixin__ticker;
      if (t2 == null || t2._ticker$_future == null)
        return true;
      throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatS), C.ErrorHint$(string$.Ticker), t1.SingleTickerProviderStateMixin__ticker.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
    },
    $signature: 1
  };
  A.StyledWidget_gestures_closure1.prototype = {
    call$1(tapDownDetails) {
    },
    $signature: 43
  };
  A.StyledWidget_gestures_closure0.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.StyledWidget_gestures_closure.prototype = {
    call$0() {
      this.onTap.call$0();
    },
    $signature: 0
  };
  A.DateTimes_truncate_closure.prototype = {
    call$1(time) {
      return time;
    },
    $signature: 42
  };
  A.TDCheckboxState_build_closure1.prototype = {
    call$1(detail) {
      this.$this._pressState$1(true);
    },
    $signature: 43
  };
  A.TDCheckboxState_build_closure2.prototype = {
    call$1(detail) {
      this.$this._pressState$1(false);
    },
    $signature: 60
  };
  A.TDCheckboxState_build_closure0.prototype = {
    call$0() {
      this.$this._pressState$1(false);
    },
    $signature: 0
  };
  A.TDCheckboxState_build_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.onValueChange$3(this.id, !t1.checked, this.groupState);
    },
    $signature: 0
  };
  A.TDCheckboxState__pressState_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.TDCheckboxState_onValueChange_closure.prototype = {
    call$0() {
      var t3, _this = this,
        t1 = _this.$this,
        t2 = _this.value;
      t1.checked = t2;
      t3 = _this.groupState;
      if (t3 != null && _this.id != null)
        t3.toggle$2(0, _this.id, t2);
      t1._widget.toString;
    },
    $signature: 0
  };
  A.TDCheckboxGroupState__syncCheckState_closure.prototype = {
    call$1(element) {
      this.$this.checkBoxStates.$indexSet(0, C._asString(element), true);
    },
    $signature: 35
  };
  A.TDCheckboxGroupState_toggle_closure.prototype = {
    call$2(k, v) {
      C._asString(k);
      return C._asBool(v);
    },
    $signature: 302
  };
  A.TDCheckboxGroupState_toggle_closure0.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.TDCheckboxGroupState__notifyChange_closure.prototype = {
    call$2(k, v) {
      C._asString(k);
      return C._asBool(v);
    },
    $signature: 302
  };
  A.TDCheckboxGroupContainer_closure.prototype = {
    call$0() {
      var t1, t2, t3;
      if (this.direction === D.Axis_0) {
        t1 = {};
        t2 = this.directionalTdCheckboxes;
        D.JSArray_methods.forEach$1(t2, new A.TDCheckboxGroupContainer__closure());
        t1.maxWordCount = 2;
        t3 = t2.length;
        if (t3 === 2)
          t1.maxWordCount = 7;
        if (t3 === 3)
          t1.maxWordCount = 4;
        if (t3 === 4)
          t1.maxWordCount = 2;
        D.JSArray_methods.forEach$1(t2, new A.TDCheckboxGroupContainer__closure0(t1, "[TDCheckboxGroupContainer] checkbox title please not exceed 2 words.\n2tabs: 7words maximum\n3tabs: 4words maximum\n4tabs: 2words maximum"));
      }
      return true;
    },
    $signature: 1
  };
  A.TDCheckboxGroupContainer__closure.prototype = {
    call$1(element) {
      if (type$.TDCheckbox._as(element).subTitle != null)
        throw C.wrapException(C.FlutterError_FlutterError("horizontal checkbox style should not have subTilte, because there left no room for it"));
    },
    $signature: typesOffset + 41
  };
  A.TDCheckboxGroupContainer__closure0.prototype = {
    call$1(checkbox) {
      var t1 = type$.TDCheckbox._as(checkbox).title;
      t1 = t1 == null ? null : t1.length;
      if (t1 == null)
        t1 = 0;
      if (t1 > this._box_0.maxWordCount)
        throw C.wrapException(C.FlutterError_FlutterError(this.tips));
    },
    $signature: typesOffset + 41
  };
  A.TDCheckboxGroupContainer_closure0.prototype = {
    call$2(context, index) {
      var _null = null,
        t1 = this.directionalTdCheckboxes;
      if (!(index >= 0 && index < t1.length))
        return C.ioore(t1, index);
      return C.Container$(_null, t1[index], D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $signature: 303
  };
  A.TDCheckboxGroupContainer_closure1.prototype = {
    call$2(context, index) {
      return D.SizedBox_0_0_null_null;
    },
    $signature: 96
  };
  A.TDCheckboxGroupContainer_closure2.prototype = {
    call$1(e) {
      return C.Expanded$(type$.TDCheckbox._as(e), 1, null);
    },
    $signature: typesOffset + 129
  };
  A.TDCheckboxGroupContainer_closure3.prototype = {
    call$1(ids) {
      type$.List_String._as(ids);
      this._box_1.selectIds = ids;
      this.onCheckBoxGroupChange.call$1(ids);
    },
    $signature: 138
  };
  A.TDConfirmDialog__buildButton_closure.prototype = {
    call$0() {
      this.$this.action.call$0();
    },
    $signature: 11
  };
  A.TDConfirmDialog_build_closure.prototype = {
    call$2(context, constraints) {
      var t1, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this;
      return C.Column$(C._setArrayType([new C.Flexible(1, D.FlexFit_1, C.SingleChildScrollView$(C.TDDialogInfoWidget$(_null, _null, constraints.maxHeight * 0.6, t1.contentWidget, D.EdgeInsets_24_32_24_0, t1.title, _null, D.Color_PYr), _null, D.DragStartBehavior_1, _null, D.ClampingScrollPhysics_null, D.Axis_1), _null), t1._buildButton$1(context)], type$.JSArray_Widget), D.CrossAxisAlignment_2, _null, D.MainAxisAlignment_0, D.MainAxisSize_0, 0, _null, _null, D.VerticalDirection_1);
    },
    $signature: 839
  };
  A._TDFormState_initState_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._widget.formController.eventType;
      if (t2 === "submit")
        t1.onSubmit$0(0);
      else if (t2 === "reset")
        t1.onReset$0(0);
    },
    $signature: 0
  };
  A._TDFormState_onReset_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.set$_formData(t1._widget.formController.formData);
      t1._isReset = true;
    },
    $signature: 0
  };
  A._TDFormState_onSubmit_closure.prototype = {
    call$2(key, value) {
      var t1;
      C._asString(key);
      t1 = this._box_0;
      if (t1.isValidateSuc)
        t1.isValidateSuc = this.$this.validate$2(key, C.S(value));
    },
    $signature: 19
  };
  A._TDFormState_onSubmit_closure0.prototype = {
    call$0() {
      this.$this._isValidate = true;
    },
    $signature: 0
  };
  A._TDFormState_build_closure.prototype = {
    call$1(item) {
      return C._setArrayType([type$.TDFormItem._as(item), new C.SizedBox(null, 1, null, null)], type$.JSArray_Widget);
    },
    $signature: typesOffset + 130
  };
  A._TDFormState_build_closure0.prototype = {
    call$1(value) {
      this.$this.set$_formData(type$.Map_String_dynamic._as(value));
    },
    $signature: 18
  };
  A._TDFormState_build_closure1.prototype = {
    call$2(context, index) {
      var t1;
      type$.BuildContext._as(context);
      C._asInt(index);
      t1 = this.$this._formItems;
      if (!(index >= 0 && index < t1.length))
        return C.ioore(t1, index);
      return t1[index];
    },
    $signature: 137
  };
  A._TDFormItemState_startValidation_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1.errorMessage = t1.validate$0();
    },
    $signature: 0
  };
  A._TDFormItemState__buildSelectRow_closure.prototype = {
    call$0() {
      this.$this._widget.toString;
    },
    $signature: 0
  };
  A.TDInput_buildNormalInput_closure.prototype = {
    call$0() {
      var t1 = this.$this.controller;
      if (t1 != null)
        t1.set$text(0, "");
    },
    $signature: 0
  };
  A.TDRadioGroup_closure.prototype = {
    call$0() {
      var t1, t2, t3;
      if (this.direction === D.Axis_0) {
        t1 = {};
        t2 = this.directionalTdRadios;
        D.JSArray_methods.forEach$1(t2, new A.TDRadioGroup__closure());
        t1.maxWordCount = 2;
        t3 = t2.length;
        if (t3 === 2)
          t1.maxWordCount = 7;
        if (t3 === 3)
          t1.maxWordCount = 4;
        if (t3 === 4)
          t1.maxWordCount = 2;
        D.JSArray_methods.forEach$1(t2, new A.TDRadioGroup__closure0(t1, "[TDRadioGroup] radio title please not exceed 2 words.\n2tabs: 7words maximum\n3tabs: 4words maximum\n4tabs: 2words maximum"));
      }
      return true;
    },
    $signature: 1
  };
  A.TDRadioGroup__closure.prototype = {
    call$1(element) {
      if (type$.TDRadio._as(element).subTitle != null)
        throw C.wrapException(C.FlutterError_FlutterError("horizontal radios style should not have subTilte, because there left no room for it"));
    },
    $signature: typesOffset + 42
  };
  A.TDRadioGroup__closure0.prototype = {
    call$1(radio) {
      var t1 = type$.TDRadio._as(radio).title;
      t1 = t1 == null ? null : t1.length;
      if (t1 == null)
        t1 = 0;
      if (t1 > this._box_0.maxWordCount)
        throw C.wrapException(C.FlutterError_FlutterError(this.tips));
    },
    $signature: typesOffset + 42
  };
  A.TDRadioGroup_closure0.prototype = {
    call$2(context, index) {
      var _null = null,
        t1 = this.directionalTdRadios;
      if (!(index >= 0 && index < t1.length))
        return C.ioore(t1, index);
      return C.Container$(_null, t1[index], D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    },
    $signature: 303
  };
  A.TDRadioGroup_closure1.prototype = {
    call$2(context, index) {
      return D.SizedBox_0_0_null_null;
    },
    $signature: 96
  };
  A.TDRadioGroup_closure2.prototype = {
    call$1(e) {
      return C.Expanded$(type$.TDRadio._as(e), 1, null);
    },
    $signature: typesOffset + 134
  };
  A.TDRadioGroup_closure3.prototype = {
    call$1(ids) {
      var t1;
      type$.List_String._as(ids);
      t1 = ids.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return C.ioore(ids, 0);
        t1 = ids[0];
      } else
        t1 = null;
      this.onRadioGroupChange.call$1(t1);
    },
    $signature: 138
  };
  A.TDRadioGroupState_toggle_closure.prototype = {
    call$2(key, value) {
      C._asString(key);
      C._asBool(value);
      this.$this.checkBoxStates.$indexSet(0, key, false);
    },
    $signature: 840
  };
  A._TDSkeletonState_initState_closure.prototype = {
    call$0() {
      return this.$this.setState$1(new A._TDSkeletonState_initState__closure1());
    },
    $signature: 0
  };
  A._TDSkeletonState_initState__closure1.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._TDSkeletonState_initState_closure0.prototype = {
    call$0() {
      return this.$this.setState$1(new A._TDSkeletonState_initState__closure0());
    },
    $signature: 0
  };
  A._TDSkeletonState_initState__closure0.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._TDSkeletonState_initState_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.setState$1(new A._TDSkeletonState_initState__closure(t1));
    },
    $signature: 0
  };
  A._TDSkeletonState_initState__closure.prototype = {
    call$0() {
      return this.$this._isLoading = false;
    },
    $signature: 0
  };
  A._TDSkeletonState__buildObj_closure.prototype = {
    call$1(obj) {
      var t1, t2, t3, skeletonObj, _null = null;
      type$.TDSkeletonRowColObj._as(obj);
      t1 = obj.style;
      t2 = this.context;
      t3 = t1.background.call$1(t2);
      skeletonObj = C.Container$(_null, _null, D.Clip_0, _null, _null, C.BoxDecoration$(_null, _null, C.BorderRadius$circular(t1.borderRadius.call$1(t2)), _null, t3, _null, _null, D.BoxShape_0), _null, obj.height, _null, D.EdgeInsets_0_0_0_0, _null, _null, _null, obj.width);
      t1 = this.$this;
      switch (t1._widget.animation.index) {
        case 0:
          skeletonObj = new A.ShaderMask(new A._TDSkeletonState__buildObj__closure(t1, t2), D.BlendMode_9, skeletonObj, _null);
          break;
        case 1:
          t1 = t1.___TDSkeletonState__animation_F;
          t1 === $ && C.throwLateFieldNI("_animation");
          t2 = t1._evaluatable;
          t1 = type$.Animation_double._as(t1.parent);
          skeletonObj = C.Opacity$(skeletonObj, t2.transform$1(0, t1.get$value(t1)));
          break;
      }
      t1 = obj.flex;
      return t1 == null ? skeletonObj : new C.Flexible(t1, D.FlexFit_1, skeletonObj, _null);
    },
    $signature: typesOffset + 135
  };
  A._TDSkeletonState__buildObj__closure.prototype = {
    call$1(bounds) {
      var t1, t2, t3, t4;
      type$.Rect._as(bounds);
      t1 = C._setArrayType([D.Color_Edl, C.TDColors_get_grayColor4(C.TDTheme_of(this.context)), D.Color_Edl], type$.JSArray_Color);
      t2 = bounds.right - bounds.left;
      t3 = this.$this.___TDSkeletonState__animation_F;
      t3 === $ && C.throwLateFieldNI("_animation");
      t4 = t3._evaluatable;
      t3 = type$.Animation_double._as(t3.parent);
      t3 = t4.transform$1(0, t3.get$value(t3));
      if (typeof t3 !== "number")
        return C.iae(t3);
      t3 = t2 * t3;
      return new A.LinearGradient(B.Alignment_yfV, B.Alignment_Q0E, D.TileMode_0, t1, null, null).createShader$1(0, new C.Rect(t3, 0, t3 + t2, 0 + (bounds.bottom - bounds.top)));
    },
    $signature: 841
  };
  A._TDSkeletonState_build_closure.prototype = {
    call$1(row) {
      var t1 = J.map$1$1$ax(type$.List_TDSkeletonRowColObj._as(row), this.$this._buildObj$1(this.context), type$.Widget);
      return C.Row$(C.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")), D.CrossAxisAlignment_2, null, D.MainAxisAlignment_0, D.MainAxisSize_1, 0, null, null, D.VerticalDirection_1);
    },
    $signature: typesOffset + 136
  };
  A._TDSkeletonState_build_closure0.prototype = {
    call$1(row) {
      type$.Widget._as(row);
      this.$this._widget.toString;
      return C._setArrayType([row, new C.SizedBox(null, A.TDSkeletonRowColStyle__defaultRowSpacing(this.context), null, null)], type$.JSArray_Widget);
    },
    $signature: 299
  };
  A._TDSkeletonState_build_closure1.prototype = {
    call$1(row) {
      return J.any$1$ax(type$.List_TDSkeletonRowColObj._as(row), new A._TDSkeletonState_build__closure());
    },
    $signature: typesOffset + 46
  };
  A._TDSkeletonState_build__closure.prototype = {
    call$1(obj) {
      return type$.TDSkeletonRowColObj._as(obj).flex != null;
    },
    $signature: typesOffset + 138
  };
  A.__TDSkeletonState_State_SingleTickerProviderStateMixin_dispose_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.SingleTickerProviderStateMixin__ticker;
      if (t2 == null || t2._ticker$_future == null)
        return true;
      throw C.wrapException(C.FlutterError$fromParts(C._setArrayType([C.ErrorSummary$(t1.toString$0(0) + " was disposed with an active Ticker."), C.ErrorDescription$(C.getRuntimeTypeOfDartObject(t1).toString$0(0) + string$.x20creatS), C.ErrorHint$(string$.Ticker), t1.SingleTickerProviderStateMixin__ticker.describeForError$1("The offending ticker was")], type$.JSArray_DiagnosticsNode)));
    },
    $signature: 1
  };
  A.TDSkeletonRowCol_closure.prototype = {
    call$1(row) {
      return J.get$isNotEmpty$asx(type$.List_TDSkeletonRowColObj._as(row));
    },
    $signature: typesOffset + 46
  };
  A.TDSkeletonRowCol_visualHeight_closure.prototype = {
    call$1(row) {
      return J.fold$1$2$ax(type$.List_TDSkeletonRowColObj._as(row), 0, new A.TDSkeletonRowCol_visualHeight__closure(), type$.double);
    },
    $signature: typesOffset + 139
  };
  A.TDSkeletonRowCol_visualHeight__closure.prototype = {
    call$2(a, b) {
      C._asDouble(a);
      type$.TDSkeletonRowColObj._as(b);
      return a > b.get$visualHeight() ? a : b.get$visualHeight();
    },
    $signature: typesOffset + 140
  };
  A.TDSkeletonRowCol_visualHeight_closure0.prototype = {
    call$2(a, b) {
      return C._asDouble(a) + C._asDouble(b);
    },
    $signature: 131
  };
  A.TDSliderState_build_closure1.prototype = {
    call$1($event) {
      var t1, t2;
      type$.PointerDownEvent._as($event);
      t1 = this.$this;
      t2 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._sliderKey);
      t2 = t2 == null ? null : t2.findRenderObject$0();
      if (type$.nullable_RenderBox._as(t2) != null)
        t1._widget.toString;
      return;
    },
    $signature: 50
  };
  A.TDSliderState_build_closure0.prototype = {
    call$1($event) {
      type$.PointerDownEvent._as($event);
      this.$this._widget.toString;
      return;
    },
    $signature: 50
  };
  A.TDSliderState_build_closure.prototype = {
    call$1(slideValue) {
      var t1 = this.$this;
      t1.setState$1(new A.TDSliderState_build__closure(t1, C._asDouble(slideValue)));
    },
    $signature: 86
  };
  A.TDSliderState_build__closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.slideValue;
      t1.value = t2;
      t1._widget.onChanged.call$1(t2);
    },
    $signature: 0
  };
  A._TDRangeSliderState_build_closure1.prototype = {
    call$1($event) {
      var t1, t2, t3;
      type$.PointerDownEvent._as($event);
      t1 = this.$this;
      t2 = C.BindingBase_checkInstance($.WidgetsBinding__instance, type$.WidgetsBinding).WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._sliderRangeKey);
      t2 = t2 == null ? null : t2.findRenderObject$0();
      type$.nullable_RenderBox._as(t2);
      t3 = t2 == null;
      if (!t3)
        t2.globalToLocal$1($event.get$position($event));
      if (!t3)
        t1._widget.toString;
      return;
    },
    $signature: 50
  };
  A._TDRangeSliderState_build_closure0.prototype = {
    call$1($event) {
      type$.PointerDownEvent._as($event);
      this.$this._widget.toString;
      return;
    },
    $signature: 50
  };
  A._TDRangeSliderState_build_closure.prototype = {
    call$1(slideValue) {
      var t1 = this.$this;
      t1.setState$1(new A._TDRangeSliderState_build__closure(t1, type$.RangeValues._as(slideValue)));
    },
    $signature: 280
  };
  A._TDRangeSliderState_build__closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.slideValue;
      t1.rangeValues = t2;
      t1._widget.onChanged.call$1(t2);
    },
    $signature: 0
  };
  A.MapExt_count_closure.prototype = {
    call$2(key, value) {
      var _this = this;
      if (C.boolConversionCheck(_this.test.call$2(_this.K._as(key), _this.V._as(value))))
        ++_this._box_0.count;
    },
    $signature() {
      return this.K._eval$1("@<0>")._bind$1(this.V)._eval$1("~(1,2)");
    }
  };
  A.MapExt_where_closure.prototype = {
    call$2(key, value) {
      var _this = this;
      _this.K._as(key);
      _this.V._as(value);
      if (C.boolConversionCheck(_this.test.call$2(key, value)))
        _this.r.$indexSet(0, key, value);
    },
    $signature() {
      return this.K._eval$1("@<0>")._bind$1(this.V)._eval$1("~(1,2)");
    }
  };
  A.RenderWebVectorGraphic_paint_closure.prototype = {
    call$2(context, offset) {
      var t1 = this.$this,
        t2 = t1._html_render_vector_graphics$_opacityHandle;
      t2.set$layer(0, context.pushOpacity$4$oldLayer(offset, D.JSInt_methods.round$0(t1._html_render_vector_graphics$_opacityValue * 255), new A.RenderWebVectorGraphic_paint__closure(t1), t2._layer));
    },
    $signature: 23
  };
  A.RenderWebVectorGraphic_paint__closure.prototype = {
    call$2(context, offset) {
      var t4, layer,
        t1 = this.$this,
        t2 = t1._html_render_vector_graphics$_colorFilter,
        t3 = t1._filterLayer;
      if (t2 != null) {
        t4 = t3._layer;
        t1 = type$.void_Function_PaintingContext_Offset._as(new A.RenderWebVectorGraphic_paint___closure(t1));
        type$.nullable_ColorFilterLayer._as(t4);
        if (t4 == null) {
          layer = new C.ColorFilterLayer(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), C.LayerHandle$(type$.Layer));
          $.$get$FlutterMemoryAllocations_instance().dispatchObjectCreated$3$className$library$object(D.Type_Layer_qb8.toString$0(0), "package:flutter/rendering.dart", layer);
        } else
          layer = t4;
        if (t2 !== layer._layer$_colorFilter) {
          layer._layer$_colorFilter = t2;
          layer.markNeedsAddToScene$0();
        }
        context.pushLayer$3(layer, t1, offset);
        t3.set$layer(0, layer);
      } else {
        t3.set$layer(0, null);
        context.get$canvas(context).drawPicture$1(t1._html_render_vector_graphics$_pictureInfo.picture);
      }
    },
    $signature: 23
  };
  A.RenderWebVectorGraphic_paint___closure.prototype = {
    call$2(context, offset) {
      context.get$canvas(context).drawPicture$1(this.$this._html_render_vector_graphics$_pictureInfo.picture);
    },
    $signature: 23
  };
  A.decodeVectorGraphics_closure.prototype = {
    call$0() {
      var t1 = $.Zone__current,
        useZone = t1 !== D.C__RootZone && !J.$eq$(t1.get$scheduleMicrotask(), D.C__RootZone.get$scheduleMicrotask());
      this._box_1.useZone = useZone;
      return true;
    },
    $signature: 1
  };
  A.decodeVectorGraphics_process.prototype = {
    call$0() {
      var response, _this = this, t1 = {},
        t2 = _this.loader,
        t3 = C.Object_hash(t2._svg, t2.theme, t2.colorMapper, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue),
        t4 = $.$get$_renderer(),
        recorder = t4.createPictureRecorder$0(),
        listener = A.FlutterVectorGraphicsListener$_(t3, B.C__DefaultPictureFactory, recorder, t4.createCanvas$2(recorder, null), _this.locale, _this.textDirection, _this.clipViewbox, _this.onError);
      t4 = _this.data;
      response = B.C_VectorGraphicsCodec.decode$2(0, t4, listener);
      t1.response = response;
      if (response.complete)
        return new C.SynchronousFuture(listener.toPicture$0(), type$.SynchronousFuture_PictureInfo);
      C.assertHelper(new A.decodeVectorGraphics_process_closure(t2).call$0());
      t3 = listener._listener0$_pendingImages;
      C.assertHelper(t3.length !== 0);
      return C.Future_wait(t3, false, type$.void).then$1$1(0, new A.decodeVectorGraphics_process_closure0(t1, t4, listener, t2), type$.PictureInfo);
    },
    $signature: typesOffset + 141
  };
  A.decodeVectorGraphics_process_closure.prototype = {
    call$0() {
      $._pendingDecodes.$indexSet(0, this.loader, new C._AsyncCompleter(new C._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      return true;
    },
    $signature: 1
  };
  A.decodeVectorGraphics_process_closure0.prototype = {
    call$1(_) {
      var _this = this,
        t1 = _this.listener,
        t2 = _this._box_0,
        response = B.C_VectorGraphicsCodec.decode$3$response(0, _this.data, t1, t2.response);
      t2.response = response;
      C.assertHelper(response.complete);
      C.assertHelper(new A.decodeVectorGraphics_process__closure(_this.loader).call$0());
      return t1.toPicture$0();
    },
    $signature: typesOffset + 142
  };
  A.decodeVectorGraphics_process__closure.prototype = {
    call$0() {
      var t1 = $._pendingDecodes.remove$1(0, this.loader);
      if (t1 != null)
        t1.complete$0(0);
      return true;
    },
    $signature: 1
  };
  A.decodeVectorGraphics_closure0.prototype = {
    call$4($self, $parent, zone, f) {
      C._rootScheduleMicrotask(null, null, D.C__RootZone, type$.void_Function._as(f));
    },
    $signature: 842
  };
  A.decodeVectorGraphics_closure1.prototype = {
    call$5($self, $parent, zone, duration, f) {
      return C.Timer__createTimer(type$.Duration._as(duration), type$.void_Function._as(f));
    },
    $signature: 304
  };
  A.decodeVectorGraphics_closure2.prototype = {
    call$5($self, $parent, zone, period, f) {
      return C.Timer__createPeriodicTimer(type$.Duration._as(period), type$.void_Function_Timer._as(f));
    },
    $signature: 305
  };
  A.FlutterVectorGraphicsListener_onDrawText_draw.prototype = {
    call$1(paintId) {
      var paint, builder, paragraph, t3, t4, _this = this, _null = null,
        t1 = _this.$this,
        t2 = t1._paints;
      if (!(paintId < t2.length))
        return C.ioore(t2, paintId);
      paint = t2[paintId];
      t2 = _this.patternId;
      if (t2 != null)
        paint.set$shader(t1._patterns.$index(0, t2).shader);
      t2 = C.ParagraphStyle_ParagraphStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1._listener0$_textDirection, _null);
      builder = $.$get$_renderer().createParagraphBuilder$1(t2);
      t2 = _this.textConfig;
      builder.pushStyle$1(C.TextStyle_TextStyle(_null, _null, t2.decoration, t2.decorationColor, t2.decorationStyle, _null, t2.fontFamily, _null, _null, t2.fontSize, _null, _null, t2.fontWeight, paint, _null, _null, _null, t1._listener0$_locale, _null, _null, _null));
      builder.addText$1(t2.text);
      paragraph = builder.build$0();
      paragraph.layout$1(D.ParagraphConstraints_t5V);
      _this._box_0.paragraphWidth = paragraph.get$maxIntrinsicWidth();
      if (t1._textTransform != null) {
        t3 = t1._listener0$_canvas;
        t3.save$0(0);
        t4 = t1._textTransform;
        t4.toString;
        t3.transform$1(0, t4);
      }
      t3 = t1._listener0$_canvas;
      t3.drawParagraph$2(paragraph, new C.Offset(_this.dx - paragraph.get$maxIntrinsicWidth() * t2.xAnchorMultiplier, _this.dy - paragraph.get$alphabeticBaseline(paragraph)));
      paragraph.dispose$0();
      if (t1._textTransform != null)
        t3.restore$0(0);
    },
    $signature: 37
  };
  A.FlutterVectorGraphicsListener_onImage_closure.prototype = {
    call$0() {
      return A.OneFrameImageStreamCompleter$(C.ImmutableBuffer_fromUint8List(this.data).then$1$1(0, new A.FlutterVectorGraphicsListener_onImage__closure(), type$.ImageInfo), null);
    },
    $signature: typesOffset + 143
  };
  A.FlutterVectorGraphicsListener_onImage__closure.prototype = {
    call$1(buffer) {
      return this.$call$body$FlutterVectorGraphicsListener_onImage__closure(type$.ImmutableBuffer._as(buffer));
    },
    $call$body$FlutterVectorGraphicsListener_onImage__closure(buffer) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageInfo),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], descriptor, codec, info, image, t1;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$goto = 6;
              return C._asyncAwait(A.ImageDescriptor_encoded(buffer), $async$call$1);
            case 6:
              // returning from await.
              descriptor = $async$result;
              $async$goto = 7;
              return C._asyncAwait(descriptor.instantiateCodec$0(), $async$call$1);
            case 7:
              // returning from await.
              codec = $async$result;
              $async$goto = 8;
              return C._asyncAwait(codec.getNextFrame$0(), $async$call$1);
            case 8:
              // returning from await.
              info = $async$result;
              image = J.get$image$z(info);
              descriptor._ui$_data = null;
              codec.dispose$0();
              t1 = C.ImageInfo$(null, image, 1);
              $async$returnValue = t1;
              $async$next = [1];
              // goto finally
              $async$goto = 4;
              break;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              buffer._ui$_list = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 845
  };
  A.FlutterVectorGraphicsListener_onImage_closure0.prototype = {
    call$2(image, synchronousCall) {
      var _this = this;
      type$.ImageInfo._as(image);
      C._asBool(synchronousCall);
      _this.cacheCompleter.removeListener$1(0, _this.listener._readLocal$0());
      _this.$this._images.$indexSet(0, _this.imageId, image.get$image(image));
      _this.completer.complete$0(0);
    },
    $signature: 90
  };
  A.FlutterVectorGraphicsListener_onImage_closure1.prototype = {
    call$2(exception, stackTrace) {
      var t1;
      type$.Object._as(exception);
      type$.nullable_StackTrace._as(stackTrace);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$0(0);
      this.cacheCompleter.removeListener$1(0, this.listener._readLocal$0());
      t1 = C.ErrorDescription$("Failed to load image");
      C.FlutterError_reportError(new C.FlutterErrorDetails(exception, stackTrace, "image resource service", t1, null, true));
    },
    $signature: 81
  };
  A._VectorGraphicWidgetState__loadPicture_closure.prototype = {
    call$1(data) {
      var t1 = this.key;
      return A.decodeVectorGraphics(type$.ByteData._as(data), t1.clipViewbox, this.loader, t1.locale, t1.textDirection);
    },
    $signature: typesOffset + 144
  };
  A._VectorGraphicWidgetState__loadPicture_closure0.prototype = {
    call$1(pictureInfo) {
      return new A._PictureData(type$.PictureInfo._as(pictureInfo), this.key, 0);
    },
    $signature: typesOffset + 145
  };
  A._VectorGraphicWidgetState__loadPicture_closure1.prototype = {
    call$0() {
      $._VectorGraphicWidgetState__pendingPictures.remove$1(0, this.key);
    },
    $signature: 11
  };
  A._VectorGraphicWidgetState__handleError_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._vector_graphics$_error = this.error;
      t1._stackTrace = this.stackTrace;
    },
    $signature: 0
  };
  A._VectorGraphicWidgetState__loadAssetBytes_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._maybeReleasePicture$1(t1._pictureInfo);
      t1._pictureInfo = this.data;
    },
    $signature: 0
  };
  A._VectorGraphicWidgetState__loadAssetBytes_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._maybeReleasePicture$1(t1._pictureInfo);
      t1._pictureInfo = this.data;
    },
    $signature: 0
  };
  A.DrawCommandBuilder__getOrGenerateId_closure.prototype = {
    call$0() {
      return this.map.__js_helper$_length;
    },
    $signature: 71
  };
  A.CubicToCommand_computeLength_compute.prototype = {
    call$5(p1, cp1, cp2, p2, distance) {
      var points;
      if (A.Point_distance(cp1, A.Point_lerp(p1, p2, 0.3333333333333333)) > 1.5 || A.Point_distance(cp2, A.Point_lerp(p1, p2, 0.6666666666666666)) > 1.5) {
        points = A.CubicToCommand_subdivide(p1, cp1, cp2, p2, 0.5);
        distance = this.call$5(points[0], points[1], points[2], points[3], distance);
        distance = this.call$5(points[3], points[4], points[5], points[6], distance);
      } else
        distance += A.Point_distance(p1, p2);
      return distance;
    },
    $signature: typesOffset + 146
  };
  A._CircularIntervalList_closure.prototype = {
    call$1(val) {
      return C._asDouble(val) === 0;
    },
    $signature: 98
  };
  A._PathDasher_closure.prototype = {
    call$1(interval) {
      return C._asDouble(interval) === 0;
    },
    $signature: 98
  };
  A.SvgParser__parseTree_closure.prototype = {
    call$0() {
      var t1 = this.event.name;
      if ($._unhandledElements.add$1(0, t1))
        C.print("unhandled element <" + t1 + "/>; Picture key: " + this.$this._parser$_key);
      return true;
    },
    $signature: 1
  };
  A.SvgParser__parseRawWidthHeight_closure.prototype = {
    call$0() {
      var notDigits = C.RegExp_RegExp("[^\\d\\.]", true, false, false, false),
        t1 = this.raw;
      if (!D.JSString_methods.endsWith$1(t1, "px") && !D.JSString_methods.endsWith$1(t1, "em") && !D.JSString_methods.endsWith$1(t1, "ex") && D.JSString_methods.contains$1(t1, notDigits))
        C.print('Warning: Flutter SVG only supports the following formats for `width` and `height` on the SVG root:\n  width="100%"\n  width="100em"\n  width="100ex"\n  width="100px"\n  width="100" (where the number will be treated as pixels).\nThe supplied value (' + t1 + ") will be discarded and treated as if it had not been specified.");
      return true;
    },
    $signature: 1
  };
  A.SvgParser__parseColor_closure.prototype = {
    call$1(rawColor) {
      return D.JSString_methods.trim$0(C._asString(rawColor));
    },
    $signature: 21
  };
  A.SvgParser__parseColor_closure0.prototype = {
    call$1(rawColor) {
      return C.int_parse(C._asString(rawColor), null);
    },
    $signature: 106
  };
  A.SvgParser__parseColor_closure1.prototype = {
    call$1(rawColor) {
      var t1;
      rawColor = D.JSString_methods.trim$0(C._asString(rawColor));
      if (D.JSString_methods.endsWith$1(rawColor, "%"))
        rawColor = D.JSString_methods.substring$2(rawColor, 0, rawColor.length - 1);
      if (D.JSString_methods.contains$1(rawColor, ".")) {
        t1 = A.parseDouble(rawColor, false);
        t1.toString;
        return D.JSNumber_methods.round$0(t1 * 2.55);
      }
      return C.int_parse(rawColor, null);
    },
    $signature: 106
  };
  A.SvgParser__parseColor_closure2.prototype = {
    call$1(val) {
      C._asDouble(val);
      return val + (1 - this.saturation) * (0.5 - val);
    },
    $signature: 2
  };
  A.SvgParser__parseColor_closure3.prototype = {
    call$1(val) {
      return this.luminance * 2 * C._asDouble(val);
    },
    $signature: 2
  };
  A.SvgParser__parseColor_closure4.prototype = {
    call$1(val) {
      C._asDouble(val);
      return this.luminance * 2 * (1 - val) + 2 * val - 1;
    },
    $signature: 2
  };
  A.SvgParser__parseColor_closure5.prototype = {
    call$1(val) {
      return C._asDouble(val) * 255;
    },
    $signature: 2
  };
  A.SvgParser__parseColor_closure6.prototype = {
    call$1(rawColor) {
      var t1;
      rawColor = D.JSString_methods.trim$0(C._asString(rawColor));
      if (D.JSString_methods.endsWith$1(rawColor, "%")) {
        t1 = A.parseDouble(D.JSString_methods.substring$2(rawColor, 0, rawColor.length - 1), false);
        t1.toString;
        return D.JSNumber_methods.round$0(t1 * 2.55);
      }
      return C.int_parse(rawColor, null);
    },
    $signature: 106
  };
  A._Resolver_getClipPath_extractPathsFromNode.prototype = {
    call$1(target) {
      var t1, t2, nextPath, t3, t4, t5, _this = this;
      type$.nullable_Node._as(target);
      if (target instanceof A.PathNode) {
        t1 = target.path;
        t2 = C._setArrayType([], type$.JSArray_PathCommand);
        nextPath = new A.PathBuilder(t2, $);
        D.JSArray_methods.addAll$1(t2, t1._path$_commands);
        nextPath.__PathBuilder_fillType_A = t1.fillType;
        t1 = target.attributes.clipRule;
        if (t1 == null)
          t1 = B.PathFillType_00;
        nextPath.__PathBuilder_fillType_A = t1;
        t2 = _this._box_0;
        t3 = t2.currentPath;
        t4 = t3 == null;
        if (!t4) {
          t5 = t3.__PathBuilder_fillType_A;
          t5 === $ && C.throwLateFieldNI("fillType");
          t5 = t1 !== t5;
          t1 = t5;
        } else
          t1 = false;
        if (t1) {
          t2.currentPath = nextPath;
          D.JSArray_methods.add$1(_this.pathBuilders, nextPath);
        } else if (t4) {
          t2.currentPath = nextPath;
          D.JSArray_methods.add$1(_this.pathBuilders, nextPath);
        } else {
          t1 = nextPath.toPath$1$reset(false);
          D.JSArray_methods.addAll$1(t3._path$_commands, t1._path$_commands);
        }
      } else if (target instanceof A.DeferredNode) {
        t1 = target.refId;
        _this.call$1(target.resolver.call$1(t1));
      } else if (target instanceof A.ParentNode) {
        type$.void_Function_Node._as(_this);
        D.JSArray_methods.forEach$1(target._node$_children, _this);
      }
    },
    $signature: typesOffset + 149
  };
  A._Resolver_getClipPath_closure.prototype = {
    call$1(builder) {
      return type$.PathBuilder._as(builder).toPath$0();
    },
    $signature: typesOffset + 150
  };
  A._Resolver_addDeferredGradient_closure.prototype = {
    call$0() {
      return C._setArrayType([], type$.JSArray_Gradient);
    },
    $signature: typesOffset + 151
  };
  A._Resolver_addClipPath_closure.prototype = {
    call$0() {
      return this.pathNodes;
    },
    $signature: typesOffset + 152
  };
  A._Resolver_addDrawable_closure.prototype = {
    call$0() {
      return this.drawable;
    },
    $signature: typesOffset + 153
  };
  A.SvgAttributes_heritable_closure.prototype = {
    call$1(entry) {
      return B.Set_N2bSi.contains$1(0, type$.MapEntry_String_String._as(entry).key);
    },
    $signature: 846
  };
  A.CommandBuilderVisitor_visitResolvedTextPositionNode_closure.prototype = {
    call$1(child) {
      var t1 = type$.void;
      type$.Node._as(child).accept$2$2(0, this.$this, this.data, t1, t1);
    },
    $signature: typesOffset + 154
  };
  A._asNumericCharacterReferences_closure.prototype = {
    call$1(rune) {
      return "&#x" + D.JSInt_methods.toRadixString$1(C._asInt(rune), 16).toUpperCase() + ";";
    },
    $signature: 77
  };
  A.XmlEventParser_characterData_closure.prototype = {
    call$1(each) {
      var _null = null;
      return new A.XmlRawTextEvent(C._asString(each), this.$this.entityMapping, _null, _null, _null, _null);
    },
    $signature: typesOffset + 170
  };
  A.XmlEventParser_startElement_closure.prototype = {
    call$5(_, nameToken, attributes, __, closeElement) {
      var _null = null;
      C._asString(_);
      C._asString(nameToken);
      type$.List_XmlEventAttribute._as(attributes);
      C._asString(__);
      return new A.XmlStartElementEvent(nameToken, attributes, C._asString(closeElement) === "/>", _null, _null, _null, _null);
    },
    $signature: typesOffset + 171
  };
  A.XmlEventParser_attribute_closure.prototype = {
    call$3(_, $name, attribute) {
      C._asString(_);
      C._asString($name);
      type$.Record_2_String_and_XmlAttributeType._as(attribute);
      return new A.XmlEventAttribute($name, this.$this.entityMapping.decode$1(0, attribute._0), attribute._1, null);
    },
    $signature: typesOffset + 172
  };
  A.XmlEventParser_attributeAssignment_closure.prototype = {
    call$4(_, __, ___, value) {
      C._asString(_);
      C._asString(__);
      C._asString(___);
      return type$.Record_2_String_and_XmlAttributeType._as(value);
    },
    $signature: typesOffset + 173
  };
  A.XmlEventParser_attributeValueDoubleQuote_closure.prototype = {
    call$3(_, value, __) {
      C._asString(_);
      C._asString(value);
      C._asString(__);
      return new C._Record_2(value, B.XmlAttributeType_BDu);
    },
    $signature: typesOffset + 48
  };
  A.XmlEventParser_attributeValueSingleQuote_closure.prototype = {
    call$3(_, value, __) {
      C._asString(_);
      C._asString(value);
      C._asString(__);
      return new C._Record_2(value, B.XmlAttributeType_Ugh);
    },
    $signature: typesOffset + 48
  };
  A.XmlEventParser_attributeValueNoQuote_closure.prototype = {
    call$1(value) {
      return new C._Record_2(C._asString(value), B.XmlAttributeType_BDu);
    },
    $signature: typesOffset + 175
  };
  A.XmlEventParser_endElement_closure.prototype = {
    call$4(_, $name, __, ___) {
      var _null = null;
      C._asString(_);
      C._asString($name);
      C._asString(__);
      C._asString(___);
      return new A.XmlEndElementEvent($name, _null, _null, _null, _null);
    },
    $signature: typesOffset + 176
  };
  A.XmlEventParser_comment_closure.prototype = {
    call$3(_, text, __) {
      var _null = null;
      C._asString(_);
      C._asString(text);
      C._asString(__);
      return new A.XmlCommentEvent(text, _null, _null, _null, _null);
    },
    $signature: typesOffset + 177
  };
  A.XmlEventParser_cdata_closure.prototype = {
    call$3(_, text, __) {
      var _null = null;
      C._asString(_);
      C._asString(text);
      C._asString(__);
      return new A.XmlCDATAEvent(text, _null, _null, _null, _null);
    },
    $signature: typesOffset + 178
  };
  A.XmlEventParser_declaration_closure.prototype = {
    call$4(_, attributes, __, ___) {
      var _null = null;
      C._asString(_);
      type$.List_XmlEventAttribute._as(attributes);
      C._asString(__);
      C._asString(___);
      return new A.XmlDeclarationEvent(attributes, _null, _null, _null, _null);
    },
    $signature: typesOffset + 179
  };
  A.XmlEventParser_processing_closure.prototype = {
    call$2(_, text) {
      C._asString(_);
      return C._asString(text);
    },
    $signature: 306
  };
  A.XmlEventParser_processing_closure0.prototype = {
    call$4(_, target, text, __) {
      var _null = null;
      C._asString(_);
      C._asString(target);
      C._asString(text);
      C._asString(__);
      return new A.XmlProcessingEvent(target, text, _null, _null, _null, _null);
    },
    $signature: typesOffset + 180
  };
  A.XmlEventParser_doctype_closure.prototype = {
    call$8(_, __, $name, externalId, ___, internalSubset, ____, _____) {
      var _null = null;
      C._asString(_);
      C._asString(__);
      C._asString($name);
      type$.nullable_DtdExternalId._as(externalId);
      C._asString(___);
      C._asStringQ(internalSubset);
      C._asString(____);
      C._asString(_____);
      return new A.XmlDoctypeEvent($name, externalId, internalSubset, _null, _null, _null, _null);
    },
    $signature: typesOffset + 181
  };
  A.XmlEventParser_doctypeExternalIdSystem_closure.prototype = {
    call$3(_, __, attribute) {
      C._asString(_);
      C._asString(__);
      type$.Record_2_String_and_XmlAttributeType._as(attribute);
      return new A.DtdExternalId(null, null, attribute._0, attribute._1);
    },
    $signature: typesOffset + 182
  };
  A.XmlEventParser_doctypeExternalIdPublic_closure.prototype = {
    call$5(_, __, publicAttribute, ___, systemAttribute) {
      var t1;
      C._asString(_);
      C._asString(__);
      t1 = type$.Record_2_String_and_XmlAttributeType;
      t1._as(publicAttribute);
      C._asString(___);
      t1._as(systemAttribute);
      return new A.DtdExternalId(publicAttribute._0, publicAttribute._1, systemAttribute._0, systemAttribute._1);
    },
    $signature: typesOffset + 183
  };
  A.XmlEventParser_doctypeIntSubset_closure.prototype = {
    call$3(_, contents, __) {
      C._asString(_);
      C._asString(contents);
      C._asString(__);
      return contents;
    },
    $signature: 848
  };
  A.eventParserCache_closure.prototype = {
    call$1(entityMapping) {
      return A.resolve(new A.ReferenceParser(new A.XmlEventParser(type$.XmlEntityMapping._as(entityMapping)).get$event(), D.List_empty10, type$.ReferenceParser_XmlEvent), type$.XmlEvent);
    },
    $signature: typesOffset + 184
  };
  (function aliases() {
    var _ = A.__ChatPageState_State_TickerProviderStateMixin.prototype;
    _.super$__ChatPageState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__CheckboxState_State_TickerProviderStateMixin.prototype;
    _.super$__CheckboxState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype;
    _.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$initState = _.initState$0;
    _.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose = _.dispose$0;
    _ = A.__RadioState_State_TickerProviderStateMixin.prototype;
    _.super$__RadioState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype;
    _.super$__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose = _.dispose$0;
    _ = A.__RangeSliderState_State_TickerProviderStateMixin.prototype;
    _.super$__RangeSliderState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach = _.attach$1;
    _.super$__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach = _.detach$0;
    _ = A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach0 = _.attach$1;
    _.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach0 = _.detach$0;
    _ = A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin.prototype;
    _.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach = _.attach$1;
    _.super$__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach = _.detach$0;
    _ = A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0.prototype;
    _.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$attach = _.attach$1;
    _.super$__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin$detach = _.detach$0;
    _ = A.__SliderState_State_TickerProviderStateMixin.prototype;
    _.super$__SliderState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin.prototype;
    _.super$__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__ChatAnimatedListState_State_TickerProviderStateMixin.prototype;
    _.super$__ChatAnimatedListState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__EmptyChatListState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__EmptyChatListState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.GreenNode.prototype;
    _.super$GreenNode$toJson = _.toJson$0;
    _ = A.RenderLine.prototype;
    _.super$RenderLine$paint = _.paint$2;
    _ = A.__FlyerChatImageMessageState_State_TickerProviderStateMixin.prototype;
    _.super$__FlyerChatImageMessageState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin.prototype;
    _.super$__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.Entry0.prototype;
    _.super$Entry$debugFillProperties = _.debugFillProperties$1;
    _ = A.__HeaderState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__HeaderState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.PagedPicker.prototype;
    _.super$PagedPicker$debugFillProperties = _.debugFillProperties$1;
    _ = A.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant.prototype;
    _.super$__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant$dispose = _.dispose$0;
    _ = A.Parser.prototype;
    _.super$Parser$replace = _.replace$2;
    _.super$Parser$toString = _.toString$0;
    _ = A.DelegateParser.prototype;
    _.super$DelegateParser$replace = _.replace$2;
    _ = A._Delegate.prototype;
    _.super$_Delegate$debugFillProperties = _.debugFillProperties$1;
    _ = A._DelegateState.prototype;
    _.super$_DelegateState$dispose = _.dispose$0;
    _.super$_DelegateState$debugFillProperties = _.debugFillProperties$1;
    _.super$_DelegateState$build = _.build$1$isBuildFromExternalSources;
    _ = A.ObserverWidgetState.prototype;
    _.super$ObserverWidgetState$dispose = _.dispose$0;
    _.super$ObserverWidgetState$handleContexts = _.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve;
    _ = A.__ShimmerState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__ShimmerState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.TDCheckboxState.prototype;
    _.super$TDCheckboxState$build = _.build$1;
    _ = A.TDCheckboxGroupState.prototype;
    _.super$TDCheckboxGroupState$toggle = _.toggle$3;
    _ = A.__TDSkeletonState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__TDSkeletonState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
  })();
  (function installTearOffs() {
    var _instance_0_i = hunkHelpers._instance_0i,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_u = hunkHelpers._instance_0u,
      _static_2 = hunkHelpers._static_2,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance = hunkHelpers.installInstanceTearOff,
      _static_1 = hunkHelpers._static_1,
      _static = hunkHelpers.installStaticTearOff;
    _instance_0_i(A._File.prototype, "get$length", "length$0", 69);
    _instance_0_i(A.ChatCustomMessageState.prototype, "get$refresh", "refresh$0", 2);
    var _;
    _instance_2_u(_ = A._QuestionnairePageState.prototype, "get$_onSubmit", "_onSubmit$2", 66);
    _instance_0_u(_, "get$_onReset", "_onReset$0", 2);
    _static_2(A, "diffutil_impl___diagonalComparator$closure", "_diagonalComparator", 186);
    _instance_1_u(_ = A._RenderBottomSheetLayoutWithSizeListener.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = A._ModalBottomSheetState.prototype, "get$handleDragStart", "handleDragStart$1", 26);
    _instance(_, "get$handleDragEnd", 0, 1, null, ["call$2$isClosing", "call$1"], ["handleDragEnd$2$isClosing", "handleDragEnd$1"], 74, 0, 0);
    _instance_1_u(A._RadioState.prototype, "get$_radio$_handleChanged", "_radio$_handleChanged$1", 75);
    _instance_1_u(_ = A._RangeSliderState.prototype, "get$_range_slider$_handleHoverChanged", "_range_slider$_handleHoverChanged$1", 6);
    _instance_1_u(_, "get$_range_slider$_handleChanged", "_range_slider$_handleChanged$1", 77);
    _instance(_, "get$_defaultRangeThumbSelector", 0, 6, null, ["call$6"], ["_defaultRangeThumbSelector$6"], 78, 0, 0);
    _instance_1_u(_ = A._RenderRangeSlider.prototype, "get$_range_slider$_handleDragUpdate", "_range_slider$_handleDragUpdate$1", 32);
    _instance_1_u(_, "get$_range_slider$_handleDragStart", "_range_slider$_handleDragStart$1", 26);
    _instance_1_u(_, "get$_range_slider$_handleDragEnd", "_range_slider$_handleDragEnd$1", 33);
    _instance_0_u(_, "get$_range_slider$_handleDragCancel", "_range_slider$_handleDragCancel$0", 2);
    _instance_1_u(_, "get$_range_slider$_handleTapDown", "_range_slider$_handleTapDown$1", 28);
    _instance_1_u(_, "get$_range_slider$_handleTapUp", "_range_slider$_handleTapUp$1", 57);
    _instance_1_u(_, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_0_u(_, "get$_increaseStartAction", "_increaseStartAction$0", 2);
    _instance_0_u(_, "get$_decreaseStartAction", "_decreaseStartAction$0", 2);
    _instance_0_u(_, "get$_increaseEndAction", "_increaseEndAction$0", 2);
    _instance_0_u(_, "get$_decreaseEndAction", "_decreaseEndAction$0", 2);
    _static_2(A, "selectable_text_SelectableText__defaultContextMenuBuilder$closure", "SelectableText__defaultContextMenuBuilder", 187);
    _instance_1_u(A._SelectableTextSelectionGestureDetectorBuilder.prototype, "get$onSingleTapUp", "onSingleTapUp$1", 97);
    _instance_0_u(_ = A._SelectableTextState.prototype, "get$_onControllerChanged", "_onControllerChanged$0", 2);
    _instance_0_u(_, "get$_selectable_text$_handleFocusChanged", "_selectable_text$_handleFocusChanged$0", 2);
    _instance_2_u(_, "get$_selectable_text$_handleSelectionChanged", "_selectable_text$_handleSelectionChanged$2", 98);
    _instance_0_u(_, "get$_selectable_text$_handleSelectionHandleTapped", "_selectable_text$_handleSelectionHandleTapped$0", 2);
    _instance_1_u(_ = A._SliderState0.prototype, "get$_slider$_handleChanged", "_slider$_handleChanged$1", 14);
    _instance_1_u(_, "get$_slider$_handleDragStart", "_slider$_handleDragStart$1", 14);
    _instance_1_u(_, "get$_slider$_handleDragEnd", "_slider$_handleDragEnd$1", 14);
    _instance_1_u(_, "get$_actionHandler", "_actionHandler$1", 207);
    _instance_1_u(_, "get$_handleFocusHighlightChanged", "_handleFocusHighlightChanged$1", 6);
    _instance_1_u(_, "get$_handleHoverChanged", "_handleHoverChanged$1", 6);
    _instance_0_u(_ = A._RenderSlider.prototype, "get$_endInteraction", "_endInteraction$0", 2);
    _instance_1_u(_, "get$_slider$_handleDragStart", "_slider$_handleDragStart$1", 26);
    _instance_1_u(_, "get$_slider$_handleDragUpdate", "_slider$_handleDragUpdate$1", 32);
    _instance_1_u(_, "get$_slider$_handleDragEnd", "_slider$_handleDragEnd$1", 33);
    _instance_1_u(_, "get$_slider$_handleTapDown", "_slider$_handleTapDown$1", 28);
    _instance_1_u(_, "get$_slider$_handleTapUp", "_slider$_handleTapUp$1", 57);
    _instance_1_u(_, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_0_u(_, "get$increaseAction", "increaseAction$0", 2);
    _instance_0_u(_, "get$decreaseAction", "decreaseAction$0", 2);
    _instance_1_u(_ = A.RenderAspectRatio.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _static_1(A, "wrap_RenderWrap__getChildSize$closure", "RenderWrap__getChildSize", 188);
    _static_2(A, "wrap_RenderWrap__setChildPosition$closure", "RenderWrap__setChildPosition", 189);
    _instance_1_u(_ = A.RenderWrap.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_2_u(A._SliverAnimatedMultiBoxAdaptorState.prototype, "get$_itemBuilder", "_itemBuilder$2", 15);
    _instance_1_u(_ = A.ToggleableStateMixin.prototype, "get$_toggleable$_handleTapDown", "_toggleable$_handleTapDown$1", 28);
    _instance(_, "get$_toggleable$_handleTap", 0, 0, function() {
      return [null];
    }, ["call$1", "call$0"], ["_toggleable$_handleTap$1", "_toggleable$_handleTap$0"], 116, 0, 0);
    _instance(_, "get$_handleTapEnd", 0, 0, null, ["call$1", "call$0"], ["_handleTapEnd$1", "_handleTapEnd$0"], 117, 0, 0);
    _instance_1_u(_, "get$_toggleable$_handleFocusHighlightChanged", "_toggleable$_handleFocusHighlightChanged$1", 6);
    _instance_1_u(_, "get$_toggleable$_handleHoverChanged", "_toggleable$_handleHoverChanged$1", 6);
    _instance_0_u(A.ToggleablePainter.prototype, "get$dispose", "dispose$0", 2);
    _instance(A._ChatState.prototype, "get$_buildItem", 0, 4, function() {
      return {isRemoved: null, messageGroupingTimeoutInSeconds: null, messagesGroupingMode: null};
    }, ["call$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode", "call$4", "call$6$messageGroupingTimeoutInSeconds$messagesGroupingMode"], ["_buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode", "_buildItem$4", "_buildItem$6$messageGroupingTimeoutInSeconds$messagesGroupingMode"], 128, 0, 0);
    _instance_1_u(_ = A._ChatAnimatedListState.prototype, "get$onKeyboardHeightChanged", "onKeyboardHeightChanged$1", 14);
    _instance_0_u(_, "get$_linkAnimationToScroll", "_linkAnimationToScroll$0", 2);
    _instance_0_u(_, "get$_handleScrollToBottom", "_handleScrollToBottom$0", 2);
    _instance(_, "get$_chat_animated_list$_scrollToMessageId", 0, 1, null, ["call$5$alignment$curve$duration$offset", "call$1", "call$2$duration", "call$2$curve"], ["_chat_animated_list$_scrollToMessageId$5$alignment$curve$duration$offset", "_chat_animated_list$_scrollToMessageId$1", "_chat_animated_list$_scrollToMessageId$2$duration", "_chat_animated_list$_scrollToMessageId$2$curve"], 167, 0, 0);
    _instance(_, "get$_scrollToIndex", 0, 1, null, ["call$5$alignment$curve$duration$offset", "call$1", "call$2$duration", "call$2$curve"], ["_scrollToIndex$5$alignment$curve$duration$offset", "_scrollToIndex$1", "_scrollToIndex$2$duration", "_scrollToIndex$2$curve"], 168, 0, 0);
    _instance_2_u(_ = A._ComposerState.prototype, "get$_handleKeyEvent", "_handleKeyEvent$2", 190);
    _instance_0_u(_, "get$_handleTextControllerChange", "_handleTextControllerChange$0", 2);
    _instance_1_u(_, "get$_handleSubmitted", "_handleSubmitted$1", 191);
    _static_2(A, "eqn_array___casesHandler$closure", "_casesHandler", 7);
    _static_2(A, "eqn_array___alignedHandler$closure", "_alignedHandler", 7);
    _static_2(A, "eqn_array___alignedAtHandler$closure", "_alignedAtHandler", 7);
    _static_2(A, "katex_base___accentHandler$closure", "_accentHandler", 0);
    _static_2(A, "katex_base___textAccentHandler$closure", "_textAccentHandler", 0);
    _static_2(A, "katex_base___accentUnderHandler$closure", "_accentUnderHandler", 0);
    _static_2(A, "katex_base___throwExceptionHandler$closure", "_throwExceptionHandler", 0);
    _static_2(A, "katex_base___arrowHandler$closure", "_arrowHandler", 0);
    _static_2(A, "katex_base___breakHandler$closure", "_breakHandler", 0);
    _static_2(A, "katex_base___charHandler$closure", "_charHandler", 0);
    _static_2(A, "katex_base___textcolorHandler$closure", "_textcolorHandler", 0);
    _static_2(A, "katex_base___colorHandler$closure", "_colorHandler", 0);
    _static_2(A, "katex_base___crHandler$closure", "_crHandler", 0);
    _static_2(A, "katex_base___delimSizeHandler$closure", "_delimSizeHandler", 0);
    _static_2(A, "katex_base___rightHandler$closure", "_rightHandler", 0);
    _static_2(A, "katex_base___leftHandler$closure", "_leftHandler", 0);
    _static_2(A, "katex_base___middleHandler$closure", "_middleHandler", 0);
    _static_2(A, "katex_base___colorboxHandler$closure", "_colorboxHandler", 0);
    _static_2(A, "katex_base___fcolorboxHandler$closure", "_fcolorboxHandler", 0);
    _static_2(A, "katex_base___fboxHandler$closure", "_fboxHandler", 0);
    _static_2(A, "katex_base___cancelHandler$closure", "_cancelHandler", 0);
    _static_2(A, "katex_base___enviromentHandler$closure", "_enviromentHandler", 0);
    _static_2(A, "katex_base___fontHandler$closure", "_fontHandler", 0);
    _static_2(A, "katex_base___boldSymbolHandler$closure", "_boldSymbolHandler", 0);
    _static_2(A, "katex_base___textFontHandler$closure", "_textFontHandler", 0);
    _static_2(A, "katex_base___fracHandler$closure", "_fracHandler", 0);
    _static_2(A, "katex_base___overHandler$closure", "_overHandler", 0);
    _static_2(A, "katex_base___genfracHandler$closure", "_genfracHandler", 0);
    _static_2(A, "katex_base___aboveHandler$closure", "_aboveHandler", 0);
    _static_2(A, "katex_base___aboveFracHandler$closure", "_aboveFracHandler", 0);
    _static_2(A, "katex_base___horizBraceHandler$closure", "_horizBraceHandler", 0);
    _static_2(A, "katex_base___kernHandler$closure", "_kernHandler", 0);
    _static_2(A, "katex_base___mathLeftHandler$closure", "_mathLeftHandler", 0);
    _static_2(A, "katex_base___mathRightHandler$closure", "_mathRightHandler", 0);
    _static_2(A, "katex_base___mclassHandler$closure", "_mclassHandler", 0);
    _static_2(A, "katex_base___bigOpHandler$closure", "_bigOpHandler", 0);
    _static_2(A, "katex_base___mathFunctionHandler$closure", "_mathFunctionHandler", 0);
    _static_2(A, "katex_base___mathLimitsHandler$closure", "_mathLimitsHandler", 0);
    _static_2(A, "katex_base___integralHandler$closure", "_integralHandler", 0);
    _static_2(A, "katex_base___operatorNameHandler$closure", "_operatorNameHandler", 0);
    _static_2(A, "katex_base___phantomHandler$closure", "_phantomHandler", 0);
    _static_2(A, "katex_base___raiseBoxHandler$closure", "_raiseBoxHandler", 0);
    _static_2(A, "katex_base___ruleHandler$closure", "_ruleHandler", 0);
    _static_2(A, "katex_base___sizingHandler$closure", "_sizingHandler", 0);
    _static_2(A, "katex_base___sqrtHandler$closure", "_sqrtHandler", 0);
    _static_2(A, "katex_base___stylingHandler$closure", "_stylingHandler", 0);
    _static_2(A, "katex_base___textHandler$closure", "_textHandler", 0);
    _static_2(A, "katex_base___underOverHandler$closure", "_underOverHandler", 0);
    _instance_1_u(_ = A.RenderCustomLayout.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = A._RenderLayoutBuilderPreserveBaseline.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = A.RenderLine.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_0_u(A.RenderEditableLine.prototype, "get$onCursorOpacityChanged", "onCursorOpacityChanged$0", 2);
    _instance_1_u(_ = A.RenderMinDimension.prototype, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = A.RenderResetDimension.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = A.RenderRelativeWidthColumn.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _static_1(A, "math0_Math_defaultOnErrorFallback$closure", "Math_defaultOnErrorFallback", 192);
    _instance_0_u(A.FValueNotifier.prototype, "get$dispose", "dispose$0", 2);
    _static(A, "calendar_FCalendar_defaultDayBuilder$closure", 3, null, ["call$3"], ["FCalendar_defaultDayBuilder"], 193, 0);
    _static_1(A, "calendar_controller___true$closure", "_true", 194);
    _instance_2_u(_ = A._PagedDayPickerState.prototype, "get$buildItem", "buildItem$2", 15);
    _instance_1_u(_, "get$onPageChange", "onPageChange$1", 17);
    _instance_1_u(_, "get$onGridFocusChange", "onGridFocusChange$1", 6);
    _instance_2_u(_ = A._PagedMonthPickerState.prototype, "get$buildItem", "buildItem$2", 15);
    _instance_1_u(_, "get$onPageChange", "onPageChange$1", 17);
    _instance_1_u(_, "get$onGridFocusChange", "onGridFocusChange$1", 6);
    _instance_0_i(A._HeaderState.prototype, "get$_header$_animate", "_header$_animate$0", 2);
    _instance_0_u(_ = A.PagedPickerState.prototype, "get$_onNext", "_onNext$0", 2);
    _instance_0_u(_, "get$_onPrevious", "_onPrevious$0", 2);
    _instance_1_u(_, "get$_onGridNextFocus", "_onGridNextFocus$1", 111);
    _instance_1_u(_, "get$_onGridPreviousFocus", "_onGridPreviousFocus$1", 112);
    _instance_1_u(_, "get$_onDirectionFocus", "_onDirectionFocus$1", 113);
    _instance_2_u(_ = A._PagedYearPickerState.prototype, "get$buildItem", "buildItem$2", 15);
    _instance_1_u(_, "get$onGridFocusChange", "onGridFocusChange$1", 6);
    _instance_1_u(_, "get$onPageChange", "onPageChange$1", 17);
    _static_1(A, "optimize__optimizedRanges$closure", "optimizedRanges", 195);
    _static_2(A, "change_notifier_provider_ChangeNotifierProvider__dispose$closure", "ChangeNotifierProvider__dispose", 196);
    _static_2(A, "listenable_provider_ListenableProvider__startListening$closure", "ListenableProvider__startListening", 197);
    _instance_0_u(A._InheritedProviderScopeElement.prototype, "get$markNeedsNotifyDependents", "markNeedsNotifyDependents$0", 2);
    _instance_0_u(_ = A.ObserverWidgetState.prototype, "get$fetchLeadingOffset", "fetchLeadingOffset$0", 124);
    _instance_1_u(_, "get$_handleScopeContext", "_handleScopeContext$1", 125);
    _instance_0_i(A.FormController.prototype, "get$submit", "submit$0", 131);
    _instance(A.TDInputView.prototype, "get$_buildCounter", 0, 1, null, ["call$4$currentLength$isFocused$maxLength"], ["_buildCounter$4$currentLength$isFocused$maxLength"], 132, 0, 0);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColStyle__defaultRowSpacing$closure", "TDSkeletonRowColStyle__defaultRowSpacing", 16);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure", "TDSkeletonRowColObjStyle__defaultBackground", 52);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__transparentBackground$closure", "TDSkeletonRowColObjStyle__transparentBackground", 52);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__circleBorderRadius$closure", "TDSkeletonRowColObjStyle__circleBorderRadius", 16);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__rectBorderRadius$closure", "TDSkeletonRowColObjStyle__rectBorderRadius", 16);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__textBorderRadius$closure", "TDSkeletonRowColObjStyle__textBorderRadius", 16);
    _static_2(A, "parser__Elements_svg$closure", "_Elements_svg", 3);
    _static_2(A, "parser__Elements_g$closure", "_Elements_g", 3);
    _static_2(A, "parser__Elements_textOrTspan$closure", "_Elements_textOrTspan", 3);
    _static_2(A, "parser__Elements_symbol$closure", "_Elements_symbol", 3);
    _static_2(A, "parser__Elements_pattern$closure", "_Elements_pattern", 3);
    _static_2(A, "parser__Elements_use$closure", "_Elements_use", 3);
    _static_2(A, "parser__Elements_radialGradient$closure", "_Elements_radialGradient", 3);
    _static_2(A, "parser__Elements_linearGradient$closure", "_Elements_linearGradient", 3);
    _static_2(A, "parser__Elements_clipPath$closure", "_Elements_clipPath", 3);
    _static_2(A, "parser__Elements_image$closure", "_Elements_image", 3);
    _static_1(A, "parser__Paths_circle$closure", "_Paths_circle", 11);
    _static_1(A, "parser__Paths_path$closure", "_Paths_path", 11);
    _static_1(A, "parser__Paths_rect$closure", "_Paths_rect", 11);
    _static_1(A, "parser__Paths_polygon$closure", "_Paths_polygon", 55);
    _static_1(A, "parser__Paths_polyline$closure", "_Paths_polyline", 55);
    _static_1(A, "parser__Paths_ellipse$closure", "_Paths_ellipse", 11);
    _static_1(A, "parser__Paths_line$closure", "_Paths_line", 11);
    _instance_1_u(_ = A._Resolver.prototype, "get$getDrawable", "getDrawable$1", 147);
    _instance_1_u(_, "get$getClipPath", "getClipPath$1", 148);
    _static_1(A, "default_mapping___textReplace$closure", "_textReplace", 27);
    _static_1(A, "default_mapping___singeQuoteAttributeReplace$closure", "_singeQuoteAttributeReplace", 27);
    _static_1(A, "default_mapping___doubleQuoteAttributeReplace$closure", "_doubleQuoteAttributeReplace", 27);
    _instance_0_u(_ = A.XmlEventParser.prototype, "get$event", "event$0", 155);
    _instance_0_u(_, "get$characterData", "characterData$0", 156);
    _instance_0_u(_, "get$startElement", "startElement$0", 157);
    _instance_0_i(_, "get$attributes", "attributes$0", 158);
    _instance_0_u(_, "get$attribute", "attribute$0", 159);
    _instance_0_u(_, "get$attributeAssignment", "attributeAssignment$0", 12);
    _instance_0_u(_, "get$attributeValue", "attributeValue$0", 12);
    _instance_0_u(_, "get$attributeValueDoubleQuote", "attributeValueDoubleQuote$0", 12);
    _instance_0_u(_, "get$attributeValueSingleQuote", "attributeValueSingleQuote$0", 12);
    _instance_0_u(_, "get$attributeValueNoQuote", "attributeValueNoQuote$0", 12);
    _instance_0_i(_, "get$endElement", "endElement$0", 161);
    _instance_0_u(_, "get$comment", "comment$0", 162);
    _instance_0_u(_, "get$cdata", "cdata$0", 163);
    _instance_0_u(_, "get$declaration", "declaration$0", 164);
    _instance_0_u(_, "get$processing", "processing$0", 165);
    _instance_0_u(_, "get$doctype", "doctype$0", 166);
    _instance_0_u(_, "get$doctypeExternalId", "doctypeExternalId$0", 25);
    _instance_0_u(_, "get$doctypeExternalIdSystem", "doctypeExternalIdSystem$0", 25);
    _instance_0_u(_, "get$doctypeExternalIdPublic", "doctypeExternalIdPublic$0", 25);
    _instance_0_u(_, "get$doctypeIntSubset", "doctypeIntSubset$0", 10);
    _instance_0_u(_, "get$doctypeElementDecl", "doctypeElementDecl$0", 13);
    _instance_0_u(_, "get$doctypeAttlistDecl", "doctypeAttlistDecl$0", 13);
    _instance_0_u(_, "get$doctypeEntityDecl", "doctypeEntityDecl$0", 13);
    _instance_0_u(_, "get$doctypeNotationDecl", "doctypeNotationDecl$0", 13);
    _instance_0_u(_, "get$doctypeReference", "doctypeReference$0", 13);
    _instance_0_u(_, "get$space", "space$0", 10);
    _instance_0_u(_, "get$spaceOptional", "spaceOptional$0", 10);
    _instance_0_u(_, "get$nameToken", "nameToken$0", 10);
    _instance_0_u(_, "get$nameStartChar", "nameStartChar$0", 10);
    _instance_0_u(_, "get$nameChar", "nameChar$0", 10);
    _instance_1_u(A.XmlEventVisitor.prototype, "get$visit", "visit$1", 185);
    _static(A, "core_DateTime___new_tearOff$closure", 1, null, ["call$8", "call$1", "call$2", "call$3", "call$4", "call$5", "call$6"], ["DateTime___new_tearOff", function(year) {
      return A.DateTime___new_tearOff(year, 1, 1, 0, 0, 0, 0, 0);
    }, function(year, month) {
      return A.DateTime___new_tearOff(year, month, 1, 0, 0, 0, 0, 0);
    }, function(year, month, day) {
      return A.DateTime___new_tearOff(year, month, day, 0, 0, 0, 0, 0);
    }, function(year, month, day, hour) {
      return A.DateTime___new_tearOff(year, month, day, hour, 0, 0, 0, 0);
    }, function(year, month, day, hour, minute) {
      return A.DateTime___new_tearOff(year, month, day, hour, minute, 0, 0, 0);
    }, function(year, month, day, hour, minute, second) {
      return A.DateTime___new_tearOff(year, month, day, hour, minute, second, 0, 0);
    }], 56, 0);
    _static(A, "core_DateTime___utc_tearOff$closure", 1, null, ["call$8", "call$1", "call$2", "call$3", "call$4", "call$5", "call$6"], ["DateTime___utc_tearOff", function(year) {
      return A.DateTime___utc_tearOff(year, 1, 1, 0, 0, 0, 0, 0);
    }, function(year, month) {
      return A.DateTime___utc_tearOff(year, month, 1, 0, 0, 0, 0, 0);
    }, function(year, month, day) {
      return A.DateTime___utc_tearOff(year, month, day, 0, 0, 0, 0, 0);
    }, function(year, month, day, hour) {
      return A.DateTime___utc_tearOff(year, month, day, hour, 0, 0, 0, 0);
    }, function(year, month, day, hour, minute) {
      return A.DateTime___utc_tearOff(year, month, day, hour, minute, 0, 0, 0);
    }, function(year, month, day, hour, minute, second) {
      return A.DateTime___utc_tearOff(year, month, day, hour, minute, second, 0, 0);
    }], 56, 0);
    _static_2(A, "array___arrayHandler$closure", "_arrayHandler", 7);
    _static_2(A, "array___matrixHandler$closure", "_matrixHandler", 7);
    _static_2(A, "array___smallMatrixHandler$closure", "_smallMatrixHandler", 7);
    _static_2(A, "array___subArrayHandler$closure", "_subArrayHandler", 7);
    _static_2(A, "cursor___cursorHandler$closure", "_cursorHandler", 0);
    _static_2(A, "katex_ext___notHandler$closure", "_notHandler", 0);
    _static_1(A, "code___toFormattedChar$closure", "_toFormattedChar", 205);
    _static_2(A, "failure_joiner__selectFirst$closure", "selectFirst", 19);
    _static_2(A, "failure_joiner__selectLast$closure", "selectLast", 19);
    _static_2(A, "failure_joiner__selectFarthest$closure", "selectFarthest", 19);
    _static_2(A, "parsers___parseSvgMatrix$closure", "_parseSvgMatrix", 9);
    _static_2(A, "parsers___parseSvgSkewX$closure", "_parseSvgSkewX", 9);
    _static_2(A, "parsers___parseSvgSkewY$closure", "_parseSvgSkewY", 9);
    _static_2(A, "parsers___parseSvgTranslate$closure", "_parseSvgTranslate", 9);
    _static_2(A, "parsers___parseSvgScale$closure", "_parseSvgScale", 9);
    _static_2(A, "parsers___parseSvgRotate$closure", "_parseSvgRotate", 9);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(C.Closure0Args, [A._asyncStarHelper_closure, A._AsyncStarStreamController__resumeBody, A._AsyncStarStreamController__resumeBody_closure, A._AsyncStarStreamController_closure0, A._AsyncStarStreamController_closure1, A._AsyncStarStreamController_closure, A._AsyncStarStreamController__closure, A.ChatCustomMessageState_refresh_closure, A.EventRegistry_builders__closure1, A.EventRegistry_builders___closure, A.EventRegistry_builders__closure, A._QuestionnairePageState__onReset_closure, A._SliderState_toggleRange_closure, A._SliderState_build__closure, A.GetChatController_handleSendMessage_closure0, A.GetChatController_handleAttachmentTap__closure, A.__ChatPageState_State_TickerProviderStateMixin_dispose_closure, A._ChatPageState__initAsync_closure0, A._ChatPageState__switchSession_closure, A._ChatPageState__deleteSession_closure, A._ChatPageState__deleteSession_closure0, A._ChatPageState__showSessionSwitchDialog__closure0, A._ChatPageState__showSessionSwitchDialog___closure, A._ChatPageState__showSessionSwitchDialog___closure1, A._ChatPageState__showSessionSwitchDialog___closure0, A._ChatPageState__showSessionSwitchDialog____closure, A._ChatPageState__buildPendingImagesPreview__closure, A._ChatPageState__buildPendingImagesPreview___closure, A._ChatPageState_build_closure, A._ChatPageState_build_onUpdate, A._ChatPageState_build_onUpdate_closure, A._ChatPageState_build_closure0, A._ChatPageState_build_closure1, A._ChatPageState_build_closure11, A.debugItems_closure, A.debugItems_closure0, A._showCalendarDialog__closure, A._showCalendarDialog__closure0, A._showCalendarDialog__closure1, A.FormData_finalize_writeLine, A.FormData_finalize_closure, A.FormData_finalize_closure1, A.writeStreamToSink_closure, A._ModalBottomSheetState_build_closure0, A.__CheckboxState_State_TickerProviderStateMixin_dispose_closure, A.__RadioState_State_TickerProviderStateMixin_dispose_closure, A._RangeSliderState__handleHoverChanged_closure, A._RangeSliderState_build_effectiveOverlayColor, A._RangeSliderState_build_screenSize, A._RenderRangeSlider__startInteraction_closure, A.__RangeSliderState_State_TickerProviderStateMixin_dispose_closure, A._SelectableTextState__onControllerChanged_closure, A._SelectableTextState__handleSelectionChanged_closure, A._SelectableTextState_build_closure, A._SliderState__handleFocusHighlightChanged_closure, A._SliderState__handleHoverChanged_closure, A._SliderState__buildMaterialSlider_effectiveOverlayColor, A._SliderState__buildMaterialSlider_screenSize, A._SliderState__buildMaterialSlider_closure, A._RenderSlider__startInteraction_closure, A.__SliderState_State_TickerProviderStateMixin_dispose_closure, A.RoundSliderThumbShape_paint_closure, A.RoundRangeSliderThumbShape_paint_closure, A.NetworkImage__imageStreamInformationCollector_closure, A.NetworkImage__imageStreamInformationCollector__closure, A.NetworkImage__loadAsync_loadViaDecode, A.NetworkImage__loadAsync_loadViaImgElement, A.FileImage_loadBuffer_closure, A.FileImage_loadImage_closure, A.RenderAspectRatio__applyAspectRatio_closure, A.RenderShaderMask_paint_closure, A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure, A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure, A._SliverAnimatedMultiBoxAdaptorState_removeItem__closure, A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin_dispose_closure, A._StreamBuilderBaseState__subscribe__closure1, A._StreamBuilderBaseState__subscribe__closure, A._StreamBuilderBaseState__subscribe_closure0, A._StreamBuilderBaseState__subscribe__closure0, A._FutureBuilderState__subscribe__closure1, A._FutureBuilderState__subscribe__closure, A._FutureBuilderState__subscribe__closure0, A.ToggleableStateMixin__handleTapDown_closure, A.ToggleableStateMixin__handleTapEnd_closure, A.ToggleableStateMixin__handleFocusHighlightChanged_closure, A.ToggleableStateMixin__handleHoverChanged_closure, A._ChatAnimatedListState_build_buildSlivers, A._ChatAnimatedListState_build_closure1, A._ChatAnimatedListState__handleToggleScrollToBottom_closure, A.__ChatAnimatedListState_State_TickerProviderStateMixin_dispose_closure, A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure, A.ChatMessage_build_closure, A._ChatMessageInternalState_initState__closure, A._ComposerState_build__closure, A._EmptyChatListState_initState_closure, A.__EmptyChatListState_State_SingleTickerProviderStateMixin_dispose_closure, A.RenderCustomLayout_childrenTable_closure, A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure, A._RenderLayoutBuilderPreserveBaseline__debugThrowIfNotCheckingIntrinsics_closure, A.RenderLine_paint_closure, A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure, A.RenderRelativeWidthColumn_paint_closure, A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin_reassemble_closure, A.SvgLoader_loadBytes_closure, A.__FlyerChatImageMessageState_State_TickerProviderStateMixin_dispose_closure, A.getImageDimensions__closure1, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1, A._FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure, A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin_dispose_closure, A._PagedDayPickerState_buildItem__closure, A._PagedDayPickerState_onPageChange_closure, A._PagedDayPickerState_onGridFocusChange_closure, A._PagedMonthPickerState_onGridFocusChange_closure, A._SelectableEntry_build_closure0, A._SelectableEntry_build_closure, A._HeaderState_build_closure0, A.__HeaderState_State_SingleTickerProviderStateMixin_dispose_closure, A.PagedPickerState__onDirectionFocus_closure, A._PagedYearPickerState_onGridFocusChange_closure, A._PagedYearPickerState_onPageChange_closure, A._YearMonthPickerState_build__closure, A._CodeFieldState_build_closure, A._CodeFieldState_build___closure, A._CodeFieldState_build__closure0, A._LinkButtonState_build_closure, A._LinkButtonState__handleHover_closure, A._LinkButtonState__handlePress_closure, A.ATagMd_span_closure, A.ListenableProvider__startListening_closure, A.SelectContext_select_closure, A.SelectContext_select_closure1, A._InheritedProviderScopeElement_updateDependencies_closure, A._InheritedProviderScopeElement_notifyDependent_closure, A._InheritedProviderScopeElement_notifyDependent_closure0, A._InheritedProviderScopeElement_update_closure, A._InheritedProviderScopeElement__debugSetInheritedLock_closure, A._InheritedProviderScopeElement_dependOnInheritedElement_closure, A._CreateInheritedProviderState_value_closure, A._CreateInheritedProviderState_value_closure0, A._CreateInheritedProviderState_value_closure1, A._CreateInheritedProviderState_value_closure2, A._CreateInheritedProviderState_value_closure3, A._CreateInheritedProviderState_value_closure4, A._CreateInheritedProviderState_value_closure5, A._CreateInheritedProviderState_build_closure, A._CreateInheritedProviderState_build_closure0, A._CreateInheritedProviderState_build_closure1, A._CreateInheritedProviderState_build_closure2, A.Provider$value_closure, A.Provider_debugCheckInvalidValueType__closure, A.ObserverWidgetState__debugAssertNotDisposed_closure, A.ObserverWidgetState__setupSliverController_closure, A.ObserverWidgetState__setupSliverController_closure0, A.ObserverWidgetState__notifyListeners_closure, A.MixViewObserverState__debugAssertNotDisposed_closure, A.MixViewObserverState__notifySliverListeners_closure, A.__ShimmerState_State_SingleTickerProviderStateMixin_dispose_closure, A.StyledWidget_gestures_closure0, A.StyledWidget_gestures_closure, A.TDCheckboxState_build_closure0, A.TDCheckboxState_build_closure, A.TDCheckboxState__pressState_closure, A.TDCheckboxState_onValueChange_closure, A.TDCheckboxGroupState_toggle_closure0, A.TDCheckboxGroupContainer_closure, A.TDConfirmDialog__buildButton_closure, A._TDFormState_initState_closure, A._TDFormState_onReset_closure, A._TDFormState_onSubmit_closure0, A._TDFormItemState_startValidation_closure, A._TDFormItemState__buildSelectRow_closure, A.TDInput_buildNormalInput_closure, A.TDRadioGroup_closure, A._TDSkeletonState_initState_closure, A._TDSkeletonState_initState__closure1, A._TDSkeletonState_initState_closure0, A._TDSkeletonState_initState__closure0, A._TDSkeletonState_initState_closure1, A._TDSkeletonState_initState__closure, A.__TDSkeletonState_State_SingleTickerProviderStateMixin_dispose_closure, A.TDSliderState_build__closure, A._TDRangeSliderState_build__closure, A.decodeVectorGraphics_closure, A.decodeVectorGraphics_process, A.decodeVectorGraphics_process_closure, A.decodeVectorGraphics_process__closure, A.FlutterVectorGraphicsListener_onImage_closure, A._VectorGraphicWidgetState__loadPicture_closure1, A._VectorGraphicWidgetState__handleError_closure, A._VectorGraphicWidgetState__loadAssetBytes_closure, A._VectorGraphicWidgetState__loadAssetBytes_closure0, A.DrawCommandBuilder__getOrGenerateId_closure, A.SvgParser__parseTree_closure, A.SvgParser__parseRawWidthHeight_closure, A._Resolver_addDeferredGradient_closure, A._Resolver_addClipPath_closure, A._Resolver_addDrawable_closure]);
    _inheritMany(C.Closure, [A._asyncStarHelper_closure0, A._File_length_closure, A.EventRegistry_builders_closure, A.EventRegistry_builders__closure0, A.EventRegistry_builders___closure0, A.EventRegistry_builders_closure0, A.EventRegistry_builders_closure1, A._QuestionnairePageState_initState_closure, A._QuestionnairePageState__onChanged_closure, A._QuestionnairePageState_build_closure, A._QuestionnairePageState_build__closure, A._QuestionnairePageState__checkbox__closure, A._QuestionnairePageState__checkbox__closure0, A._QuestionnairePageState__radio__closure, A._QuestionnairePageState__radio__closure0, A._QuestionnairePageState__slider_closure, A._QuestionnairePageState__input_closure, A._SliderState_build_closure, A._SliderState_build_closure0, A._SliderState_build_closure1, A._SliderState_build__closure0, A._SliderState_build__closure1, A.GetChatController_insertMessage_closure, A.GetChatController_removeMessage_closure, A.GetChatController_updateMessage_closure, A.GetChatController_handleSendMessage_closure, A.GetChatController_handleSendMessage_closure1, A.GetChatController_handleSendMessage__closure, A.GetChatController_handleAttachmentTap_closure, A.GetChatController_removeMessagesAfter_closure, A._ChatPageState__initAsync_closure, A._ChatPageState__showCalendarDialog_closure, A._ChatPageState__showCalendarDialog_calendar, A._ChatPageState__showCalendarDialog_calendar_closure1, A._ChatPageState__showCalendarDialog_calendar_closure0, A._ChatPageState__showCalendarDialog_calendar_closure, A._ChatPageState__showCalendarDialog___closure, A._ChatPageState_build_onError, A._ChatPageState_build_closure2, A._ChatPageState_build_closure9, A._ChatPageState_build_closure10, A._ChatPageState_build_closure7, A._ChatPageState_build_closure8, A._ChatPageState_build_closure3, A._ChatPageState_build_closure4, A._ChatPageState_build_closure5, A._ChatPageState_build_closure6, A._showCalendarDialog_closure, A._showCalendarDialog_closure1, A._showCalendarDialog_closure0, A.pickMediaPaths_closure, A.HiveMessageStorage_loadAll_closure, A.FormData_finalize_writeUtf8, A.FormData_finalize_closure0, A._ModalBottomSheetState_build__closure, A.ModalBottomSheetRoute_buildPage_closure, A._CheckboxState__widgetFillColor_closure, A._CheckboxState_build_closure, A._CheckboxDefaultsM3_side_closure, A._CheckboxDefaultsM3_fillColor_closure, A._CheckboxDefaultsM3_checkColor_closure, A._CheckboxDefaultsM3_overlayColor_closure, A._RadioState__widgetFillColor_closure, A._RadioState_build_closure, A._RadioDefaultsM3_fillColor_closure, A._RadioDefaultsM3_overlayColor_closure, A._RangeSliderState_showValueIndicator_closure, A._RenderRangeSlider_closure, A._RenderRangeSlider__maxSliderPartWidth_closure, A._RenderRangeSlider__maxSliderPartHeight_closure, A._SliderState_showValueIndicator_closure, A._RenderSlider_closure, A._RenderSlider__maxSliderPartWidth_closure, A._RenderSlider__maxSliderPartHeight_closure, A._SliderDefaultsM3Year2023_overlayColor_closure, A.NetworkImage__fetchImageBytes_closure, A.NetworkImage__fetchImageBytes_closure0, A._ForwardingImageStreamCompleter_closure, A._ForwardingImageStreamCompleter__closure1, A.RenderWrap_computeDryBaseline_getChildSize, A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure0, A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure0, A._StreamBuilderBaseState__subscribe_closure, A._FutureBuilderState__subscribe_closure, A.precacheImage__closure, A._AnimatedContainerState_forEachTween_closure, A._AnimatedContainerState_forEachTween_closure0, A._AnimatedContainerState_forEachTween_closure1, A._AnimatedContainerState_forEachTween_closure2, A._AnimatedContainerState_forEachTween_closure3, A._AnimatedContainerState_forEachTween_closure4, A._AnimatedContainerState_forEachTween_closure5, A._AnimatedContainerState_forEachTween_closure6, A.MediaQuery_withNoTextScaling_closure, A._PageViewState_build_closure, A._ChatState_build_closure, A._ChatState_build_closure0, A._ChatState_build_closure1, A._ChatAnimatedListState_initState_closure, A._ChatAnimatedListState_onKeyboardHeightChanged_closure, A._ChatAnimatedListState_build_closure, A._ChatAnimatedListState_build_closure0, A._ChatAnimatedListState_build_closure2, A._ChatAnimatedListState__scrollToEnd_closure, A._ChatAnimatedListState__adjustInitialScrollPosition_closure, A._ChatAnimatedListState__handleScrollToBottom_closure, A._ChatAnimatedListState__scrollToMessageId_closure, A._ChatAnimatedListState__scrollToIndex_closure, A._ChatAnimatedListState__scrollToIndex_closure0, A._ChatAnimatedListState__onDiffUpdate_closure, A._ChatAnimatedListState__onDiffUpdate_closure1, A._SliverSpacingState_build_closure, A.ChatMessage_build_closure1, A.ChatMessage_build_closure0, A._ChatMessageInternalState_initState_closure, A._ComposerState_initState_closure, A._ComposerState_didUpdateWidget_closure, A._ComposerState_build_closure, A._ComposerState_build_closure0, A._ComposerState_build_closure1, A._EmptyChatListState_build_closure, A.ScrollToBottom_build_closure0, A.ScrollToBottom_build_closure, A.SimpleTextMessage_build_closure, A.AccentNode_buildWidget_closure1, A.AccentUnderNode_buildWidget_closure0, A.EquationArrayNode_buildWidget_closure, A.EquationArrayNode_buildWidget_closure0, A.EquationArrayNode_toJson_closure, A.EquationArrayNode_toJson_closure0, A.EquationArrayNode_toJson_closure1, A.LeftRightNode_buildWidget_closure, A.LeftRightNode_toJson_closure, A.buildCustomSizedDelimWidget_closure, A.MatrixNode$__closure, A.MatrixNode_MatrixNode_closure, A.MatrixNode_MatrixNode_closure0, A.MatrixNode_buildWidget_closure, A.MatrixNode_computeChildren_closure, A.MatrixNode_toJson_closure, A.MatrixNode_toJson_closure0, A.MatrixNode_toJson_closure1, A.MatrixNode_toJson_closure2, A.MatrixNode_toJson_closure3, A.MatrixNode_toJson_closure4, A.MatrixNode_toJson_closure5, A.MatrixNode_toJson__closure, A.MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure, A.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure, A.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0, A.getSqrtAdvanceWidth_closure, A.sqrtSvg_closure, A.StretchyOpNode_buildWidget_closure0, A.StyleNode_toJson_closure, A.SymbolNode_buildWidget_closure, A.stringToNode_closure, A.SlotableNode_computeWidth_closure, A.TransparentNode_computeWidth_closure, A.TransparentNode_computeChildPositions_closure, A.TransparentNode_buildWidget_closure, A.TransparentNode_flattenedChildList_closure, A.EquationRowNode_computeWidth_closure, A.EquationRowNode_computeChildPositions_closure, A.EquationRowNode_flattenedChildList_closure, A.EquationRowNode_computeCaretPositions_closure, A.EquationRowNode_buildWidget_closure, A.EquationRowNode_buildWidget_closure0, A.EquationRowNode_buildWidget_closure1, A.EquationRowNode_buildWidget_closure4, A.EquationRowNode_buildWidget__closure1, A.EquationRowNode_buildWidget__closure2, A.EquationRowNode_buildWidget__closure0, A.EquationRowNode_buildWidget__closure, A.EquationRowNode_toJson_closure, A.allBlocks_closure, A.supportedCodepoint_closure, A._casesHandler_closure, A._alignedHandler_closure, A._alignedHandler__closure, A._alignedAtHandler_closure, A._alignedAtHandler_closure0, A._alignedAtHandler__closure, A._charHandler_closure, A._delimiterSymbols_closure, A._checkDelimiter_closure, A._leftHandler_closure, A._enviromentHandler_closure, A._enviromentHandler_closure0, A.MacroExpander_consumeArgs_closure, A.MacroExpander_expandMacroAsText_closure, A.MacroDefinition$fromString_closure, A.MacroDefinition$fromCtxString_closure, A.MacroDefinition$fromMacroExpansion_closure, A.builtinMacros_closure, A.builtinMacros_closure0, A.builtinMacros_closure1, A.builtinMacros_closure2, A.builtinMacros_closure3, A.builtinMacros_closure4, A.builtinMacros_closure5, A.builtinMacros_closure6, A.builtinMacros_closure7, A.builtinMacros_closure8, A.builtinMacros_closure9, A.builtinMacros__closure0, A.builtinMacros_closure10, A.builtinMacros__closure, A.builtinMacros_closure11, A.builtinMacros_closure12, A.builtinMacros_closure13, A.ParseException_closure, A.TexParser__parseSymbol_closure, A.RenderEqnArray__computeLayout_closure, A.makeDecoratedEqualSymbol_closure, A.makeBaseSymbol_closure, A.unicodeLiteral_closure, A.Cache_putIfAbsent_closure, A.SvgLoader__load_closure, A.SvgLoader__load__closure, A._FlyerChatImageMessageState_initState_closure, A._FlyerChatImageMessageState_didUpdateWidget_closure, A._FlyerChatImageMessageState_build_closure, A._FlyerChatImageMessageState__buildStack_closure0, A._FlyerChatImageMessageState__buildStack_closure, A.getImageDimensions_closure, A.getImageDimensions_closure0, A.FlyerChatTextMessage_build_closure, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0, A._FlyerChatTextStreamMessageState_build_closure, A._FlyerChatTextStreamMessageState__buildTextContent_closure, A._FlyerChatTextStreamMessageState__buildTextContent_closure0, A._State_build_closure0, A._State_build_closure1, A._State_build__closure2, A._State_build__closure3, A._State_build__closure0, A._State_build__closure1, A._State_build__closure, A._PagedDayPickerState_buildItem_closure, A._MonthPickerState_build_closure, A.Entry_Entry$day_builder, A.Entry_Entry$yearMonth_builder, A._HeaderState_build_closure, A.PagedPicker_closure, A._YearPickerState_build_closure, A._YearMonthPickerState_build_closure, A._YearMonthPickerState_build_closure0, A._FRootHeader_build_closure, A._CodeFieldState_build__closure, A.CustomRb_build_closure, A.CustomCb_build_closure, A._LinkButtonState_build_closure2, A._LinkButtonState_build_closure3, A._LinkButtonState_build_closure0, A._LinkButtonState_build_closure1, A.MarkdownComponent_generate_closure, A.MarkdownComponent_generate_closure0, A.MarkdownComponent_generate_closure1, A.LatexMathMultiLine_build_closure, A.LatexMathMultiLine_build_closure0, A.LatexMathMultiLine_build__closure, A.LatexMath_span_closure, A.LatexMath_span_closure0, A.LatexMath_span__closure, A.ImageMd_span_closure0, A.ImageMd_span_closure, A.TableMd_build_closure, A.TableMd_build__closure0, A.TableMd_build_closure0, A.TableMd_build_closure1, A.TableMd_build_closure2, A.TableMd_build__closure, A._NestedHookElement_injectedChild_closure, A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure, A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure, A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin_activate_closure, A._single_closure, A._range_closure, A.RecordParserExtension2_map2_closure, A.RecordParserExtension3_map3_closure, A.RecordParserExtension4_map4_closure, A.RecordParserExtension5_map5_closure, A.RecordParserExtension8_map8_closure, A.string_closure, A._InheritedProviderElement_debugFillProperties_closure, A.SelectContext_select_closure0, A._InheritedProviderScopeElement_getElementForInheritedWidgetOfExactType_closure, A.MultiProvider__collapseProviders_closure, A.MultiProvider__collapseProviders_closure0, A.Provider_debugCheckInvalidValueType_closure, A.ProxyProvider0_closure, A._Selector0State_buildWithChild_closure, A.Selector2_closure, A.ObserverControllerForScroll__handleScrollToIndex_closure, A.ObserverControllerForScroll__handleScrollToIndex_closure0, A.ObserverControllerForScroll__handleScrollEnd_closure, A.ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure, A.ObserverWidgetState_build_closure, A.ObserverWidgetState_build_closure0, A.ObserverWidgetState_build__closure, A.ObserverWidgetState__setupSliverController_closure1, A.ObserverWidgetState_fetchTargetSliverContexts_visitor, A.MixViewObserverState_handleObserveViewport_closure, A._ShimmerState_initState_closure, A.StyledWidget_gestures_closure1, A.DateTimes_truncate_closure, A.TDCheckboxState_build_closure1, A.TDCheckboxState_build_closure2, A.TDCheckboxGroupState__syncCheckState_closure, A.TDCheckboxGroupContainer__closure, A.TDCheckboxGroupContainer__closure0, A.TDCheckboxGroupContainer_closure2, A.TDCheckboxGroupContainer_closure3, A._TDFormState_build_closure, A._TDFormState_build_closure0, A.TDRadioGroup__closure, A.TDRadioGroup__closure0, A.TDRadioGroup_closure2, A.TDRadioGroup_closure3, A._TDSkeletonState__buildObj_closure, A._TDSkeletonState__buildObj__closure, A._TDSkeletonState_build_closure, A._TDSkeletonState_build_closure0, A._TDSkeletonState_build_closure1, A._TDSkeletonState_build__closure, A.TDSkeletonRowCol_closure, A.TDSkeletonRowCol_visualHeight_closure, A.TDSliderState_build_closure1, A.TDSliderState_build_closure0, A.TDSliderState_build_closure, A._TDRangeSliderState_build_closure1, A._TDRangeSliderState_build_closure0, A._TDRangeSliderState_build_closure, A.decodeVectorGraphics_process_closure0, A.decodeVectorGraphics_closure0, A.decodeVectorGraphics_closure1, A.decodeVectorGraphics_closure2, A.FlutterVectorGraphicsListener_onDrawText_draw, A.FlutterVectorGraphicsListener_onImage__closure, A._VectorGraphicWidgetState__loadPicture_closure, A._VectorGraphicWidgetState__loadPicture_closure0, A.CubicToCommand_computeLength_compute, A._CircularIntervalList_closure, A._PathDasher_closure, A.SvgParser__parseColor_closure, A.SvgParser__parseColor_closure0, A.SvgParser__parseColor_closure1, A.SvgParser__parseColor_closure2, A.SvgParser__parseColor_closure3, A.SvgParser__parseColor_closure4, A.SvgParser__parseColor_closure5, A.SvgParser__parseColor_closure6, A._Resolver_getClipPath_extractPathsFromNode, A._Resolver_getClipPath_closure, A.SvgAttributes_heritable_closure, A.CommandBuilderVisitor_visitResolvedTextPositionNode_closure, A._asNumericCharacterReferences_closure, A.XmlEventParser_characterData_closure, A.XmlEventParser_startElement_closure, A.XmlEventParser_attribute_closure, A.XmlEventParser_attributeAssignment_closure, A.XmlEventParser_attributeValueDoubleQuote_closure, A.XmlEventParser_attributeValueSingleQuote_closure, A.XmlEventParser_attributeValueNoQuote_closure, A.XmlEventParser_endElement_closure, A.XmlEventParser_comment_closure, A.XmlEventParser_cdata_closure, A.XmlEventParser_declaration_closure, A.XmlEventParser_processing_closure0, A.XmlEventParser_doctype_closure, A.XmlEventParser_doctypeExternalIdSystem_closure, A.XmlEventParser_doctypeExternalIdPublic_closure, A.XmlEventParser_doctypeIntSubset_closure, A.eventParserCache_closure]);
    _inheritMany(C.Object, [A._AsyncStarStreamController, A._IterationMarker, A.OSError, A.FileSystemException, A.FileSystemEntity, A.ImageDescriptor, A._GetChatController_Object_UploadProgressMixin, A.HiveMessageStorage, A.BlurHash, A.BlurHashDecodeException, A.ColorTriplet, A.ListDiffDelegate, A._Snake, A._Diagonal, A._Range, A._CenteredArray, A.DiffResult, A._PostponedUpdate, A.DataInsert, A.DataRemove, A.DataChange, A.DataMove, A.FormData, A.SliderComponentShape, A.SliderTickMarkShape, A.SliderTrackShape, A.RangeSliderThumbShape, A.RangeSliderValueIndicatorShape, A.RangeSliderTickMarkShape, A.RangeSliderTrackShape, A.BaseSliderTrackShape, A.BaseRangeSliderTrackShape, A.RangeValues, A.WebImageInfo, A.Gradient, A.NetworkImageLoadException, A.SliverGridGeometry, A.SliverGridLayout, A.SliverGridDelegate, A.TableBorder, A._RunMetrics, A._ActiveItem, A.AsyncSnapshot, A.ToggleableStateMixin, A.ChatOperation, A.ScrollToMessageMixin, A.UploadProgressMixin, A._Builders_Object__$Builders, A._$Builders, A.MessageGroupStatus, A._User_Object__$User, A._$User, A._ChatTheme_Object__$ChatTheme, A._ChatColors_Object__$ChatColors, A._ChatTypography_Object__$ChatTypography, A._$ChatTheme, A._$ChatColors, A._$ChatTypography, A.KeyboardMixin, A.AccentRenderConfig, A.FontMetrics, A.GreenNode, A.CustomLayoutDelegate, A.StackDelimiterConf, A.MathOptions, A.OptionsDiff, A.FontOptions, A.PartialFontOptions, A.Measurement, A.SymbolRenderConfig, A.RenderConfig, A.SyntaxTree, A.SyntaxNode, A.PositionDependentMixin, A._ClipChildrenMixin, A.BuildResult, A._NodeSpacingConf, A.CharacterMetrics, A.EnvContext, A.EnvSpec, A.FunctionContext, A.FunctionSpec, A.Lexer, A.MacroExpander, A.MacroDefinition, A.MacroExpansion, A.Namespace, A.ParseException, A.TexParser, A.ArgumentParsingContext, A.ScriptsParsingResults, A.TexParserSettings, A.SourceLocation0, A.TexSymbolConfig, A.Token, A.AxisConfiguration, A._ScriptUvConf, A.DelimiterConf, A._KatexImagesData, A.BuildException, A.Cache0, A.SvgTheme, A.BytesLoader, A.SvgCacheKey, A.Svg, A.TextSegment, A.GptMarkdownConfig, A.MarkdownComponent, A.ChannelIterator, A.IfdContainer, A.ExifTag, A.IfdDirectory, A.IfdValue, A.Encoder, A.ImageException, A.OutputBuffer, A.SingleChildWidgetElementMixin, A._PathOffset, A.SvgPathStringSource, A.PathSegmentData, A.SvgPathNormalizer, A.Context1, A.ParserException, A.Parser, A.Token0, A.MatchesIterator, A.CharacterPredicate, A.LookupCharPredicate, A.RangeCharPredicate, A.WhitespaceCharPredicate, A.ProviderNode, A.ProviderBinding, A._Dependency, A._Delegate, A._DelegateState, A.ProviderNullException, A.ProviderNotFoundException, A.ObserveDisplayingChildModel, A.ObserveDisplayingChildModelMixin, A.ObserveModel, A.ObserveScrollChildModel, A.ObservePrepareScrollToIndexModel, A.ObserverHandleContextsResultModel, A.ObserverIndexPositionModel, A.ObserverController, A.ObserverControllerForNotification, A.ObserverControllerForInfo, A.ObserverControllerForScroll, A.CommonOnceObserveNotificationResult, A.SliverViewportObserveDisplayingChildModel, A.SliverViewportObserveModel, A.Orderable, A.Date, A.Period, A._FormController_Object_ChangeNotifier, A.TDInputSpacer, A.TDSkeletonRowColStyle, A.TDSkeletonRowCol, A.TDSkeletonRowColObjStyle, A.TDSkeletonRowColObj, A.TDSliderThemeData, A.SliderMeasureData, A.TDBaseRangeSliderTrackShape, A.ByteWriter, A.Channel, A.Image1, A.Tuple2, A.Tuple3, A.PictureInfo, A._PatternConfig, A._PatternState, A._DefaultPictureFactory, A.VectorGraphicsCodecListener, A._TextPosition, A._TextConfig, A.VectorGraphicsDecodeException, A.RasterKey, A.RasterData, A._PictureData, A._PictureKey, A.DecodeResponse, A.VectorGraphicsCodec, A.VectorGraphicsBuffer, A._ReadBuffer, A.DrawCommandBuilder, A.Point, A.Rect0, A.ImageData, A.DrawImageData, A.AffineMatrix, A.PathCommand, A.PathBuilder, A.Path, A._CircularIntervalList, A._PathDasher, A.PatternData, A.ImageSizeData, A.Color0, A.Gradient0, A.Paint, A.Stroke, A.Fill, A.TextPosition0, A.TextConfig, A.TextDecoration0, A.Node0, A._SvgGroupTuple, A.SvgParser, A._Resolver, A._Viewport, A.SvgAttributes, A.DoubleOrPercentage, A.SvgStrokeAttributes, A.SvgFillAttributes, A.ColorOrNone, A.Visitor, A.SvgTheme0, A.ErrorOnUnResolvedNode, A.VectorInstructions, A.DrawCommand, A.Matrix41, A.Vector40, A.Quaternion, A.DtdExternalId, A.XmlEntityMapping, A.XmlException, A.XmlFormatException, A.XmlCache, A.XmlAnnotator, A.XmlHasBuffer, A.XmlHasLocation, A.XmlHasParent, A.__XmlEventEncoderSink_Object_XmlEventVisitor, A._XmlEvent_Object_XmlHasParent, A.XmlEventIterator, A.XmlEventParser, A.ConversionSink, A._XmlEventAttribute_Object_XmlNamed, A.XmlNamed, A.XmlEventVisitor]);
    _inheritMany(A.FileSystemException, [A.PathAccessException, A.PathExistsException, A.PathNotFoundException]);
    _inherit(A._File, A.FileSystemEntity);
    _inheritMany(C.StatefulWidget, [A.ChatCustomMessage, A.QuestionnairePage, A.Slider, A.ChatPage, A._ModalBottomSheet, A.Checkbox, A.Radio, A.RangeSlider, A.SelectableText, A.Slider0, A._SliverAnimatedMultiBoxAdaptor, A.StreamBuilderBase, A.FutureBuilder, A.PageView, A.Chat, A.ChatAnimatedList, A.SliverSpacing, A.ChatMessageInternal, A.Composer, A.EmptyChatList, A.FlyerChatImageMessage, A.FlyerChatTextStreamMessage, A.FCalendar, A.DayPicker, A.PagedPicker, A.MonthPicker, A.Header, A.YearPicker, A.YearMonthPicker, A.CodeField, A.LinkButton, A.MdWidget, A.SingleChildStatefulWidget, A.ObserverWidget, A.Shimmer, A.TDCheckbox, A.TDCheckboxGroup, A.TDForm, A.TDFormItem, A.TDSkeleton, A.TDSlider, A.TDRangeSlider, A.VectorGraphic]);
    _inheritMany(C.State, [A.ChatCustomMessageState, A._QuestionnairePageState, A._SliderState, A.__ChatPageState_State_TickerProviderStateMixin, A._ModalBottomSheetState, A.__CheckboxState_State_TickerProviderStateMixin, A.__RadioState_State_TickerProviderStateMixin, A.__RangeSliderState_State_TickerProviderStateMixin, A._SelectableTextState, A.__SliderState_State_TickerProviderStateMixin, A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin, A._StreamBuilderBaseState, A._FutureBuilderState, A._PageViewState, A.__ChatState_State_WidgetsBindingObserver, A.__ChatAnimatedListState_State_TickerProviderStateMixin, A.__SliverSpacingState_State_WidgetsBindingObserver, A._ChatMessageInternalState, A._ComposerState, A.__EmptyChatListState_State_SingleTickerProviderStateMixin, A.__FlyerChatImageMessageState_State_TickerProviderStateMixin, A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin, A._State1, A._DayPickerState, A.PagedPickerState, A._MonthPickerState, A.__HeaderState_State_SingleTickerProviderStateMixin, A._YearPickerState, A._YearMonthPickerState, A._CodeFieldState, A._LinkButtonState, A._MdWidgetState, A.SingleChildState, A.ObserverWidgetState, A.__ShimmerState_State_SingleTickerProviderStateMixin, A.TDCheckboxState, A.TDCheckboxGroupState, A._TDFormState, A._TDFormItemState, A.__TDSkeletonState_State_SingleTickerProviderStateMixin, A.TDSliderState, A._TDRangeSliderState, A._VectorGraphicWidgetState]);
    _inheritMany(C.Closure2Args, [A._QuestionnairePageState__checkbox_closure, A._QuestionnairePageState__radio_closure, A._ChatPageState__showSessionSwitchDialog_closure, A._ChatPageState__showSessionSwitchDialog__closure, A._ChatPageState__showCalendarDialog_closure0, A._ChatPageState__showCalendarDialog__closure, A._ChatPageState__buildPendingImagesPreview_closure, A._ChatPageState_build__closure, A.ListDiffDelegate_closure, A.FormData__init_closure, A.FormData__headerForFile_closure, A._ModalBottomSheetState_build_closure, A.NetworkImage__loadAsync_closure, A._ForwardingImageStreamCompleter__closure, A._ForwardingImageStreamCompleter__closure0, A._ForwardingImageStreamCompleter__closure2, A._ForwardingImageStreamCompleter_closure0, A.OneFrameImageStreamCompleter_closure, A.RenderWrap_computeDryBaseline_findHighestBaseline, A._StreamBuilderBaseState__subscribe_closure1, A._FutureBuilderState__subscribe_closure0, A.precacheImage_closure, A.precacheImage_closure0, A._PageViewState_build_closure0, A._ChatAnimatedListState__onRemoved_closure, A._ChatAnimatedListState__onDiffUpdate_closure0, A._ChatAnimatedListState__onDiffUpdate_closure2, A.AccentNode_buildWidget_closure, A.AccentNode_buildWidget_closure0, A.AccentUnderNode_buildWidget_closure, A.EnclosureNode_buildWidget_closure, A.EnclosureNode_buildWidget_closure0, A.LeftRightNode_buildWidget__closure0, A.LeftRightNode_buildWidget__closure, A.MatrixNode_buildWidget_closure0, A.SqrtNode_buildWidget_closure, A.StretchyOpNode_buildWidget_closure, A.EquationRowNode_buildWidget_closure2, A.EquationRowNode_buildWidget_closure3, A.textFontMetrics_closure, A.scriptFontMetrics_closure, A.scriptscriptFontMetrics_closure, A.environments_closure, A.RegisterFunctionExt_registerFunctions_closure, A.Namespace_endGroup_closure, A.RenderCustomLayout_computeMinIntrinsicWidth_closure, A.RenderCustomLayout_computeMaxIntrinsicWidth_closure, A.RenderCustomLayout_computeMinIntrinsicHeight_closure, A.RenderCustomLayout_computeMaxIntrinsicHeight_closure, A.IntrinsicLayoutDelegate_getIntrinsicSize_closure, A.IntrinsicLayoutDelegate_getIntrinsicSize_closure0, A.IntrinsicLayoutDelegate_computeLayout_closure, A.IntrinsicLayoutDelegate_computeLayout_closure0, A.IntrinsicLayoutDelegate_computeLayout_closure1, A.IntrinsicLayoutDelegate_computeLayout_closure2, A.RenderLine_computeMinIntrinsicWidth_closure, A.RenderLine_computeMaxIntrinsicWidth_closure, A.RenderLine_computeMinIntrinsicHeight_closure, A.RenderLine_computeMaxIntrinsicHeight_closure, A.RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure, A.RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure, A.RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure, A.RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure, A._FlyerChatImageMessageState__buildStack_closure1, A.getImageDimensions__closure, A.getImageDimensions__closure0, A.FDialog_closure, A.optimizedRanges_closure, A.optimizedRanges_closure0, A._pattern_closure, A.MultiProvider__collapseProviders_closure1, A.ProxyProvider_closure, A._ShimmerState_build_closure, A.TDCheckboxGroupState_toggle_closure, A.TDCheckboxGroupState__notifyChange_closure, A.TDCheckboxGroupContainer_closure0, A.TDCheckboxGroupContainer_closure1, A.TDConfirmDialog_build_closure, A._TDFormState_onSubmit_closure, A._TDFormState_build_closure1, A.TDRadioGroup_closure0, A.TDRadioGroup_closure1, A.TDRadioGroupState_toggle_closure, A.TDSkeletonRowCol_visualHeight__closure, A.TDSkeletonRowCol_visualHeight_closure0, A.MapExt_count_closure, A.MapExt_where_closure, A.RenderWebVectorGraphic_paint_closure, A.RenderWebVectorGraphic_paint__closure, A.RenderWebVectorGraphic_paint___closure, A.FlutterVectorGraphicsListener_onImage_closure0, A.FlutterVectorGraphicsListener_onImage_closure1, A.XmlEventParser_processing_closure]);
    _inheritMany(C.ValueNotifier, [A.SliderController, A.FValueNotifier]);
    _inherit(A._GetChatController_Object_UploadProgressMixin_ScrollToMessageMixin, A._GetChatController_Object_UploadProgressMixin);
    _inherit(A.GetChatController, A._GetChatController_Object_UploadProgressMixin_ScrollToMessageMixin);
    _inherit(A._ChatPageState, A.__ChatPageState_State_TickerProviderStateMixin);
    _inheritMany(C.SingleChildRenderObjectWidget, [A._BottomSheetLayoutWithSizeListener, A.ShaderMask, A.AspectRatio, A._SliverFractionalPadding, A._BaselineDistance, A.MinDimension, A.ResetBaseline, A.ResetDimension, A.ShiftBaseline, A._SelectableAdapter, A._Shimmer, A._RawVectorGraphicWidget, A._RawWebVectorGraphicWidget, A._RawPictureVectorGraphicWidget]);
    _inheritMany(C.RenderShiftedBox, [A._RenderBottomSheetLayoutWithSizeListener, A.RenderMinDimension, A.RenderResetDimension]);
    _inherit(A.ModalBottomSheetRoute, C.PopupRoute);
    _inheritMany(C._Enum, [A._CheckboxType, A._RadioType, A._SliderType, A.SliderInteraction, A._SliderAdjustmentType, A.ShowValueIndicator, A.Thumb, A.WrapAlignment, A.WrapCrossAlignment, A.ConnectionState, A.ChatOperationType, A.LinkPreviewPosition, A.TimeAndStatusPosition, A.MessagesGroupingMode, A.InitialScrollToEndMode, A.SendButtonVisibilityMode, A.InputClearMode, A._FracPos, A.MatrixSeparatorStyle, A.MatrixColumnAlign, A._SqrtPos, A.Unit, A.MathSize, A.MathStyle, A.MathStyleDiff, A.AtomType, A.Mode, A.Strict, A._ScriptPos, A.FlutterMathMode, A.TextStreamMessageMode, A.FCalendarPickerType, A.ChannelOrder, A.Format, A.IfdValueType, A.JpegChroma, A.FrameType, A.SvgPathSegType, A.ObserverAutoTriggerObserveType, A.ObserverTriggerOnObserveType, A.ObserverRenderSliverType, A.ObserverWidgetObserveResultType, A.ShimmerDirection, A.DateUnit, A.TimeUnit, A.TDCheckboxStyle, A.TDContentDirection, A.TDCheckBoxSize, A.TDFormItemType, A.TDInputType, A.TDInputSize, A.TDRadioStyle, A.TDSkeletonAnimation, A.TDSkeletonTheme, A.RenderingStrategy, A._CurrentSection, A.PathFillType0, A.PathCommandType, A.ImageFormat, A.GradientUnitMode, A.BlendMode0, A.PaintingStyle0, A.StrokeCap0, A.StrokeJoin0, A.TileMode0, A.FontWeight0, A.TextDecorationStyle0, A.DrawCommandType, A.XmlAttributeType, A.XmlNodeType]);
    _inherit(A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin, A.__CheckboxState_State_TickerProviderStateMixin);
    _inherit(A._CheckboxState, A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin);
    _inheritMany(C.ChangeNotifier, [A.ToggleablePainter, A.UserCache, A.ComposerHeightNotifier, A.LoadMoreNotifier]);
    _inheritMany(A.ToggleablePainter, [A._CheckboxPainter, A._RadioPainter]);
    _inherit(A._CheckboxDefaultsM3, C.CheckboxThemeData);
    _inheritMany(C.StatelessWidget, [A.CircleAvatar, A.Divider, A._TextButtonWithIconChild, A.SliverFillViewport, A.Spacer, A.ChatMessage, A.ScrollToBottom, A.SimpleTextMessage, A.TimeAndStatus, A.Multiscripts, A.Math, A.SvgPicture, A.TimeAndStatus0, A.FlyerChatTextMessage, A.TimeAndStatus2, A.TimeAndStatus1, A.Entry0, A.EntryContent, A.Navigation, A.FDialog, A.Content2, A.CustomRb, A.CustomCb, A.BlockQuoteWidget, A.SelectableAdapter, A.UnorderedListView, A.OrderedListView, A.GptMarkdown, A.Nested, A._NestedHook, A.SingleChildStatelessWidget, A.RadioCornerIcon, A.TDConfirmDialog, A.TDInputView, A.TDInput]);
    _inherit(A.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin, A.__RadioState_State_TickerProviderStateMixin);
    _inherit(A._RadioState, A.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin);
    _inherit(A._RadioDefaultsM3, C.RadioThemeData);
    _inherit(A._RangeSliderState, A.__RangeSliderState_State_TickerProviderStateMixin);
    _inheritMany(C.LeafRenderObjectWidget, [A._RangeSliderRenderObjectWidget, A._ValueIndicatorRenderObjectWidget0, A._SliderRenderObjectWidget, A._ValueIndicatorRenderObjectWidget, A.CustomDivider, A.CustomImageError, A.CustomImageLoading]);
    _inheritMany(C.RenderBox, [A.__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin, A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin, A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin, A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0, A._RenderWrap_RenderBox_ContainerRenderObjectMixin, A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin, A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin, A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin, A._RenderLine_RenderBox_ContainerRenderObjectMixin, A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin, A.RenderDivider, A.RenderWebVectorGraphic, A.RenderVectorGraphic, A.RenderPictureVectorGraphic]);
    _inherit(A._RenderRangeSlider, A.__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A._RenderValueIndicator0, A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A._TextSpanEditingController, C.TextEditingController);
    _inherit(A._SelectableTextSelectionGestureDetectorBuilder, C.TextSelectionGestureDetectorBuilder);
    _inherit(A._SliderState0, A.__SliderState_State_TickerProviderStateMixin);
    _inherit(A._RenderSlider, A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin);
    _inherit(A._AdjustSliderIntent, C.Intent);
    _inherit(A._RenderValueIndicator, A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0);
    _inheritMany(C.SliderThemeData, [A._SliderDefaultsM2, A._SliderDefaultsM3Year2023]);
    _inherit(A.SliderTheme, C.InheritedTheme);
    _inheritMany(A.SliderTrackShape, [A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape, A._TDRoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape]);
    _inherit(A.RoundedRectSliderTrackShape, A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape);
    _inheritMany(A.RangeSliderTrackShape, [A._RoundedRectRangeSliderTrackShape_RangeSliderTrackShape_BaseRangeSliderTrackShape, A._TDRoundedRectRangeSliderTrackShape_RangeSliderTrackShape_TDBaseRangeSliderTrackShape]);
    _inherit(A.RoundedRectRangeSliderTrackShape, A._RoundedRectRangeSliderTrackShape_RangeSliderTrackShape_BaseRangeSliderTrackShape);
    _inheritMany(A.SliderTickMarkShape, [A.RoundSliderTickMarkShape, A.TDRoundSliderTickMarkShape]);
    _inheritMany(A.RangeSliderTickMarkShape, [A.RoundRangeSliderTickMarkShape, A.TDRoundRangeSliderTickMarkShape]);
    _inheritMany(A.SliderComponentShape, [A.RoundSliderThumbShape, A.RoundSliderOverlayShape, A.RectangularSliderValueIndicatorShape, A.DropSliderValueIndicatorShape, A.RoundedRectSliderValueIndicatorShape, A.TDRoundSliderThumbShape, A.TDNoOverlayShape]);
    _inheritMany(A.RangeSliderThumbShape, [A.RoundRangeSliderThumbShape, A.TDRoundRangeSliderThumbShape]);
    _inherit(A.RectangularRangeSliderValueIndicatorShape, A.RangeSliderValueIndicatorShape);
    _inherit(A._TextButtonWithIcon, C.TextButton);
    _inheritMany(C.ImageProvider, [A.NetworkImage, A.FileImage, A.MemoryImage]);
    _inheritMany(C.ImageStreamCompleter, [A._ForwardingImageStreamCompleter, A.OneFrameImageStreamCompleter]);
    _inherit(A.BorderRadiusDirectional, C.BorderRadiusGeometry);
    _inherit(A.LinearGradient, A.Gradient);
    _inherit(A.OvalBorder, C.CircleBorder);
    _inherit(A.ShaderMaskLayer, C.ContainerLayer0);
    _inheritMany(C.RenderProxyBox, [A.RenderAspectRatio, A.RenderShaderMask, A._BaselineDistanceBox, A.RenderResetBaseline, A.RenderShiftBaseline, A.RenderCustomImageError, A.RenderCustomImageLoading, A.__RenderSelectableAdapter_RenderProxyBox_Selectable, A._ShimmerFilter]);
    _inherit(A.RenderSliverFillViewport, C.RenderSliverFixedExtentBoxAdaptor);
    _inherit(A.SliverGridRegularTileLayout, A.SliverGridLayout);
    _inheritMany(A.SliverGridDelegate, [A.SliverGridDelegateWithFixedCrossAxisCount, A._GridDelegate]);
    _inherit(A.SliverGridParentData, C.SliverMultiBoxAdaptorParentData);
    _inherit(A.RenderSliverGrid, C.RenderSliverMultiBoxAdaptor);
    _inheritMany(C.Tween, [A.AlignmentGeometryTween, A.Matrix4Tween]);
    _inheritMany(C.ContainerBoxParentData, [A.WrapParentData, A.CustomLayoutParentData, A.EqnArrayParentData, A.LineParentData, A.VListParentData]);
    _inherit(A._RenderWrap_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderWrap_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderWrap, A._RenderWrap_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.SliverAnimatedList, A._SliverAnimatedMultiBoxAdaptor);
    _inherit(A._SliverAnimatedMultiBoxAdaptorState, A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin);
    _inherit(A.SliverAnimatedListState, A._SliverAnimatedMultiBoxAdaptorState);
    _inherit(A.StreamBuilder, A.StreamBuilderBase);
    _inheritMany(C.MultiChildRenderObjectWidget, [A.Wrap, A.CustomLayout, A.EqnArray, A.Line, A.EditableLine, A.VList]);
    _inherit(A.AnimatedContainer, C.ImplicitlyAnimatedWidget);
    _inherit(A._AnimatedContainerState, C.AnimatedWidgetBaseState);
    _inherit(A.PageController, C.ScrollController);
    _inherit(A.PageMetrics, C.FixedScrollMetrics);
    _inherit(A._PagePosition, C.ScrollPositionWithSingleContext);
    _inheritMany(C.ScrollPhysics, [A._ForceImplicitScrollPhysics, A.PageScrollPhysics, A.NeverScrollableScrollPhysics]);
    _inherit(A.GridView, C.BoxScrollView);
    _inheritMany(C.SliverMultiBoxAdaptorWidget, [A.SliverGrid, A._SliverFillViewportRenderObjectWidget]);
    _inherit(A._RenderSliverFractionalPadding, C.RenderSliverEdgeInsetsPadding);
    _inherit(A.Builders, A._Builders_Object__$Builders);
    _inherit(A._Builders, A.Builders);
    _inherit(A.TextStreamMessage, C.Message);
    _inherit(A.User, A._User_Object__$User);
    _inherit(A._User, A.User);
    _inherit(A.ChatTheme, A._ChatTheme_Object__$ChatTheme);
    _inherit(A.ChatColors, A._ChatColors_Object__$ChatColors);
    _inherit(A.ChatTypography, A._ChatTypography_Object__$ChatTypography);
    _inherit(A._ChatTheme, A.ChatTheme);
    _inherit(A._ChatColors, A.ChatColors);
    _inherit(A._ChatTypography, A.ChatTypography);
    _inherit(A._ChatState, A.__ChatState_State_WidgetsBindingObserver);
    _inherit(A._ChatAnimatedListState, A.__ChatAnimatedListState_State_TickerProviderStateMixin);
    _inherit(A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin, A.__SliverSpacingState_State_WidgetsBindingObserver);
    _inherit(A._SliverSpacingState, A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin);
    _inherit(A._EmptyChatListState, A.__EmptyChatListState_State_SingleTickerProviderStateMixin);
    _inherit(A.MessageListDiff, A.ListDiffDelegate);
    _inheritMany(A.GreenNode, [A.ParentableNode, A.LeafNode]);
    _inheritMany(A.ParentableNode, [A.SlotableNode, A._TransparentNode_ParentableNode__ClipChildrenMixin, A._EquationRowNode_ParentableNode_PositionDependentMixin]);
    _inheritMany(A.SlotableNode, [A.AccentNode, A.AccentUnderNode, A.EnclosureNode, A.EquationArrayNode, A.FracNode, A.FunctionNode, A.LeftRightNode, A.MatrixNode, A.MultiscriptsNode, A.NaryOperatorNode, A.OverNode, A.RaiseBoxNode, A.SqrtNode, A.StretchyOpNode, A.UnderNode]);
    _inheritMany(A.LeafNode, [A.CursorNode, A.PhantomNode, A.SpaceNode, A.SymbolNode, A.TemporaryNode]);
    _inheritMany(C.CustomPainter, [A.LinePainter, A.BlockQuotePainter, A.RadioCorner]);
    _inheritMany(A.CustomLayoutDelegate, [A.HorizontalStrikeDelegate, A.IntrinsicLayoutDelegate, A.SqrtLayoutDelegate]);
    _inheritMany(A.IntrinsicLayoutDelegate, [A.FracLayoutDelegate, A.MatrixLayoutDelegate, A.MultiscriptsLayoutDelegate]);
    _inherit(A.TransparentNode, A._TransparentNode_ParentableNode__ClipChildrenMixin);
    _inherit(A.StyleNode, A.TransparentNode);
    _inherit(A._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin, A._EquationRowNode_ParentableNode_PositionDependentMixin);
    _inherit(A.EquationRowNode, A._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin);
    _inheritMany(A.TemporaryNode, [A.CrNode, A._LeftRightRightNode, A._MiddleNode, A._EndEnvironmentNode]);
    _inheritMany(C.ParentDataWidget, [A.CustomLayoutId, A.LineElement, A.VListElement]);
    _inherit(A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin);
    _inherit(A.RenderCustomLayout, A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderEqnArray, A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(A.LayoutBuilderPreserveBaseline, C.ConstrainedLayoutBuilder);
    _inherit(A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin);
    _inherit(A._RenderLayoutBuilderPreserveBaseline, A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder);
    _inherit(A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderLine_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderLine, A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(A.RenderEditableLine, A.RenderLine);
    _inherit(A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin);
    _inherit(A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(A.RenderRelativeWidthColumn, A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(A.SvgLoader, A.BytesLoader);
    _inherit(A.SvgStringLoader, A.SvgLoader);
    _inherit(A._FlyerChatImageMessageState, A.__FlyerChatImageMessageState_State_TickerProviderStateMixin);
    _inherit(A._FlyerChatTextStreamMessageState, A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin);
    _inheritMany(A.TextSegment, [A.StaticSegment, A.AnimatingSegment]);
    _inherit(A.FCalendarController, A.FValueNotifier);
    _inherit(A._AutoDateController, A.FCalendarController);
    _inheritMany(A.PagedPicker, [A.PagedDayPicker, A.PagedMonthPicker, A.PagedYearPicker]);
    _inheritMany(A.PagedPickerState, [A._PagedDayPickerState, A._PagedMonthPickerState, A._PagedYearPickerState]);
    _inheritMany(A.Entry0, [A._SelectableEntry, A._UnselectableEntry]);
    _inherit(A._HeaderState, A.__HeaderState_State_SingleTickerProviderStateMixin);
    _inherit(A.VerticalContent, A.Content2);
    _inherit(A._FRootHeader, C.FHeader);
    _inherit(A.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant, A.__RenderSelectableAdapter_RenderProxyBox_Selectable);
    _inherit(A._RenderSelectableAdapter, A.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant);
    _inheritMany(A.MarkdownComponent, [A.InlineMd, A.BlockMd]);
    _inheritMany(A.BlockMd, [A.IndentMd, A.HTag, A.HrLine, A.CheckBoxMd, A.RadioButtonMd, A.UnOrderedList, A.OrderedList, A.LatexMathMultiLine, A.TableMd, A.CodeBlockMd]);
    _inheritMany(A.InlineMd, [A.NewLines, A.BlockQuote, A.HighlightedText, A.BoldMd, A.StrikeMd, A.ItalicMd, A.LatexMath, A.SourceTag, A.ATagMd, A.ImageMd, A.UnderLineMd]);
    _inherit(A.CustomTableColumnWidth, C.TableColumnWidth);
    _inherit(A.GptMarkdownThemeData, C.ThemeExtension);
    _inheritMany(C.InheritedWidget, [A.GptMarkdownTheme, A._InheritedProviderScope, A.ObserverWidgetScope, A.ObserverWidgetTagManager, A.TDCheckboxGroupInherited, A.TDFormInherited]);
    _inheritMany(C.Iterable, [A.ColorFloat16, A.ColorFloat32, A.ColorFloat64, A.ColorInt16, A.ColorInt32, A.ColorInt8, A.ColorUint1, A.ColorUint16, A.ColorUint2, A.ColorUint32, A.ColorUint4, A.ColorUint8, A.ConstColorUint8, A.Image0, A.ImageData1, A.PixelFloat16, A.PixelFloat32, A.PixelFloat64, A.PixelInt16, A.PixelInt32, A.PixelInt8, A.PixelUint1, A.PixelUint16, A.PixelUint2, A.PixelUint32, A.PixelUint4, A.PixelUint8, A.PixelUndefined, A.MatchesIterable, A.XmlEventIterable]);
    _inherit(A.ConstColorRgb8, A.ConstColorUint8);
    _inherit(A.ExifData, A.IfdContainer);
    _inherit(A.IfdValueLong, A.IfdValue);
    _inherit(A.JpegEncoder, A.Encoder);
    _inheritMany(A.ImageData1, [A.ImageDataFloat16, A.ImageDataFloat32, A.ImageDataFloat64, A.ImageDataInt16, A.ImageDataInt32, A.ImageDataInt8, A.ImageDataUint1, A.ImageDataUint16, A.ImageDataUint2, A.ImageDataUint32, A.ImageDataUint4, A.ImageDataUint8]);
    _inheritMany(C.StatelessElement, [A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin, A._NestedHookElement, A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin]);
    _inherit(A._NestedElement, A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin);
    _inherit(A.SingleChildStatelessElement, A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin);
    _inherit(A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin, C.StatefulElement);
    _inherit(A.SingleChildStatefulElement, A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin);
    _inheritMany(A.SingleChildStatelessWidget, [A.SingleChildBuilder, A.InheritedProvider, A.Consumer]);
    _inherit(A.Result, A.Context1);
    _inheritMany(A.Result, [A.Success, A.Failure]);
    _inheritMany(A.Parser, [A.ReferenceParser, A.DelegateParser, A.ListParser, A.SequenceParser2, A.SequenceParser3, A.SequenceParser4, A.SequenceParser5, A.SequenceParser8, A.EpsilonParser, A.NewlineParser, A.AnyCharacterParser, A.SingleCharacterParser, A.PredicateParser, A.RepeatingCharacterParser, A.XmlCharacterDataParser]);
    _inheritMany(A.DelegateParser, [A.FlattenParser, A.MapParser, A.TokenParser, A.OptionalParser, A.SkipParser, A.RepeatingParser]);
    _inheritMany(A.CharacterPredicate, [A.SingleCharPredicate, A.ConstantCharPredicate, A.NotCharacterPredicate]);
    _inherit(A.ChoiceParser, A.ListParser);
    _inheritMany(A.RepeatingParser, [A.LimitedRepeatingParser, A.PossessiveRepeatingParser]);
    _inherit(A.LazyRepeatingParser, A.LimitedRepeatingParser);
    _inheritMany(A.InheritedProvider, [A.ListenableProvider, A.Provider, A.ProxyProvider0]);
    _inherit(A.ChangeNotifierProvider, A.ListenableProvider);
    _inherit(A._InheritedProviderElement, A.SingleChildStatelessElement);
    _inherit(A._InheritedProviderScopeElement, C.InheritedElement);
    _inheritMany(A._Delegate, [A._CreateInheritedProvider, A._ValueInheritedProvider]);
    _inheritMany(A._DelegateState, [A._CreateInheritedProviderState, A._ValueInheritedProviderState]);
    _inherit(A.MultiProvider, A.Nested);
    _inherit(A.ProxyProvider, A.ProxyProvider0);
    _inherit(A.Selector0, A.SingleChildStatefulWidget);
    _inherit(A._Selector0State, A.SingleChildState);
    _inherit(A.Selector2, A.Selector0);
    _inheritMany(A.ObserveDisplayingChildModel, [A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin, A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin]);
    _inherit(A.GridViewObserveDisplayingChildModel, A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin);
    _inheritMany(A.ObserveModel, [A.GridViewObserveModel, A.ListViewObserveModel]);
    _inherit(A.ListViewObserveDisplayingChildModel, A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin);
    _inherit(A.ObserverScrollNotification, C.Notification0);
    _inheritMany(A.ObserverScrollNotification, [A.ObserverScrollStartNotification, A.ObserverScrollInterruptionNotification, A.ObserverScrollDecisionNotification, A.ObserverScrollEndNotification]);
    _inherit(A.SliverObserverHandleContextsResultModel, A.ObserverHandleContextsResultModel);
    _inherit(A._SliverObserverController_ObserverController_ObserverControllerForInfo, A.ObserverController);
    _inherit(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll, A._SliverObserverController_ObserverController_ObserverControllerForInfo);
    _inherit(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification, A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll);
    _inherit(A.SliverObserverController, A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification);
    _inherit(A.ScrollViewOnceObserveNotificationResult, A.CommonOnceObserveNotificationResult);
    _inherit(A.SliverViewObserver, A.ObserverWidget);
    _inherit(A.MixViewObserverState, A.ObserverWidgetState);
    _inherit(A._ShimmerState, A.__ShimmerState_State_SingleTickerProviderStateMixin);
    _inherit(A._LocalDate_Date_Orderable, A.Date);
    _inherit(A.LocalDate, A._LocalDate_Date_Orderable);
    _inheritMany(A.TDCheckboxGroup, [A.TDCheckboxGroupContainer, A.TDRadioGroup]);
    _inheritMany(A.TDCheckboxGroupState, [A.TDCheckboxGroupContainerState, A.TDRadioGroupState]);
    _inherit(A.FormController, A._FormController_Object_ChangeNotifier);
    _inherit(A.TDRadio, A.TDCheckbox);
    _inherit(A.TDRadioState, A.TDCheckboxState);
    _inherit(A._TDSkeletonState, A.__TDSkeletonState_State_SingleTickerProviderStateMixin);
    _inherit(A.TDRoundedRectSliderTrackShape, A._TDRoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape);
    _inherit(A.TDRoundedRectRangeSliderTrackShape, A._TDRoundedRectRangeSliderTrackShape_RangeSliderTrackShape_TDBaseRangeSliderTrackShape);
    _inherit(A.FlutterVectorGraphicsListener, A.VectorGraphicsCodecListener);
    _inheritMany(A.PathCommand, [A.LineToCommand, A.MoveToCommand, A.CubicToCommand, A.CloseCommand]);
    _inheritMany(A.ImageSizeData, [A.PngImageSizeData, A.GifImageSizeData, A.JpegImageSizeData, A.WebPImageSizeData, A.BmpImageSizeData]);
    _inheritMany(A.Gradient0, [A.LinearGradient0, A.RadialGradient]);
    _inheritMany(A.Node0, [A._EmptyNode, A.TransformableNode, A.ResolvedTextPositionNode, A.ResolvedTextNode, A.ResolvedPathNode, A.ResolvedClipNode, A.ResolvedMaskNode, A.ResolvedImageNode, A.ResolvedPatternNode]);
    _inheritMany(A.TransformableNode, [A.AttributedNode, A.ClipNode, A.MaskNode, A.PatternNode]);
    _inheritMany(A.AttributedNode, [A.ParentNode, A.PathNode, A.DeferredNode, A.TextNode, A.ImageNode]);
    _inheritMany(A.ParentNode, [A.ViewportNode, A.TextPositionNode, A.SaveLayerNode]);
    _inheritMany(A.Visitor, [A.ResolvingVisitor, A._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode]);
    _inherit(A.CommandBuilderVisitor, A._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode);
    _inherit(A.XmlDefaultEntityMapping, A.XmlEntityMapping);
    _inherit(A._XmlParserException_XmlException_XmlFormatException, A.XmlException);
    _inherit(A.XmlParserException, A._XmlParserException_XmlException_XmlFormatException);
    _inherit(A.XmlEventEncoder, C.Converter);
    _inherit(A._XmlEventEncoderSink, A.__XmlEventEncoderSink_Object_XmlEventVisitor);
    _inherit(A._XmlEvent_Object_XmlHasParent_XmlHasLocation, A._XmlEvent_Object_XmlHasParent);
    _inherit(A._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer, A._XmlEvent_Object_XmlHasParent_XmlHasLocation);
    _inherit(A.XmlEvent, A._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer);
    _inheritMany(A.XmlEvent, [A.XmlCDATAEvent, A.XmlCommentEvent, A.XmlDeclarationEvent, A.XmlDoctypeEvent, A._XmlEndElementEvent_XmlEvent_XmlNamed, A.XmlProcessingEvent, A._XmlStartElementEvent_XmlEvent_XmlNamed, A.XmlRawTextEvent]);
    _inherit(A.XmlEndElementEvent, A._XmlEndElementEvent_XmlEvent_XmlNamed);
    _inherit(A.XmlStartElementEvent, A._XmlStartElementEvent_XmlEvent_XmlNamed);
    _inherit(A._XmlEventAttribute_Object_XmlNamed_XmlHasParent, A._XmlEventAttribute_Object_XmlNamed);
    _inherit(A.XmlEventAttribute, A._XmlEventAttribute_Object_XmlNamed_XmlHasParent);
    _mixin(A._GetChatController_Object_UploadProgressMixin, A.UploadProgressMixin);
    _mixin(A._GetChatController_Object_UploadProgressMixin_ScrollToMessageMixin, A.ScrollToMessageMixin);
    _mixinHard(A.__ChatPageState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixinHard(A.__CheckboxState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixinHard(A.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin, A.ToggleableStateMixin);
    _mixinHard(A.__RadioState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixinHard(A.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin, A.ToggleableStateMixin);
    _mixinHard(A.__RangeSliderState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixinHard(A.__RenderRangeSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin, C.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin, C.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A.__RenderSlider_RenderBox_RelayoutWhenSystemFontsChangeMixin, C.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A.__RenderValueIndicator_RenderBox_RelayoutWhenSystemFontsChangeMixin0, C.RelayoutWhenSystemFontsChangeMixin);
    _mixinHard(A.__SliderState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixin(A._RoundedRectRangeSliderTrackShape_RangeSliderTrackShape_BaseRangeSliderTrackShape, A.BaseRangeSliderTrackShape);
    _mixin(A._RoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape, A.BaseSliderTrackShape);
    _mixinHard(A._RenderWrap_RenderBox_ContainerRenderObjectMixin, C.ContainerRenderObjectMixin);
    _mixin(A._RenderWrap_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, C.RenderBoxContainerDefaultsMixin);
    _mixinHard(A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixin(A._Builders_Object__$Builders, A._$Builders);
    _mixin(A._User_Object__$User, A._$User);
    _mixin(A._ChatColors_Object__$ChatColors, A._$ChatColors);
    _mixin(A._ChatTheme_Object__$ChatTheme, A._$ChatTheme);
    _mixin(A._ChatTypography_Object__$ChatTypography, A._$ChatTypography);
    _mixin(A.__ChatState_State_WidgetsBindingObserver, C.WidgetsBindingObserver);
    _mixinHard(A.__ChatAnimatedListState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixin(A.__SliverSpacingState_State_WidgetsBindingObserver, C.WidgetsBindingObserver);
    _mixinHard(A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin, A.KeyboardMixin);
    _mixinHard(A.__EmptyChatListState_State_SingleTickerProviderStateMixin, C.SingleTickerProviderStateMixin);
    _mixin(A._EquationRowNode_ParentableNode_PositionDependentMixin, A.PositionDependentMixin);
    _mixin(A._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin, A._ClipChildrenMixin);
    _mixin(A._TransparentNode_ParentableNode__ClipChildrenMixin, A._ClipChildrenMixin);
    _mixinHard(A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin, C.ContainerRenderObjectMixin);
    _mixin(A._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, C.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin, C.ContainerRenderObjectMixin);
    _mixin(A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, C.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, C.DebugOverflowIndicatorMixin);
    _mixinHard(A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin, C.RenderObjectWithChildMixin);
    _mixin(A.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, C.RenderConstrainedLayoutBuilder);
    _mixinHard(A._RenderLine_RenderBox_ContainerRenderObjectMixin, C.ContainerRenderObjectMixin);
    _mixin(A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, C.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, C.DebugOverflowIndicatorMixin);
    _mixinHard(A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin, C.ContainerRenderObjectMixin);
    _mixin(A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, C.RenderBoxContainerDefaultsMixin);
    _mixinHard(A._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, C.DebugOverflowIndicatorMixin);
    _mixinHard(A.__FlyerChatImageMessageState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixinHard(A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin, C.TickerProviderStateMixin);
    _mixinHard(A.__HeaderState_State_SingleTickerProviderStateMixin, C.SingleTickerProviderStateMixin);
    _mixin(A.__RenderSelectableAdapter_RenderProxyBox_Selectable, C.Selectable0);
    _mixinHard(A.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant, C.SelectionRegistrant);
    _mixinHard(A._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin, A.SingleChildWidgetElementMixin);
    _mixinHard(A._SingleChildStatelessElement_StatelessElement_SingleChildWidgetElementMixin, A.SingleChildWidgetElementMixin);
    _mixinHard(A.__NestedElement_StatelessElement_SingleChildWidgetElementMixin, A.SingleChildWidgetElementMixin);
    _mixin(A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin, A.ObserveDisplayingChildModelMixin);
    _mixin(A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin, A.ObserveDisplayingChildModelMixin);
    _mixin(A._SliverObserverController_ObserverController_ObserverControllerForInfo, A.ObserverControllerForInfo);
    _mixin(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll, A.ObserverControllerForScroll);
    _mixin(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification, A.ObserverControllerForNotification);
    _mixinHard(A.__ShimmerState_State_SingleTickerProviderStateMixin, C.SingleTickerProviderStateMixin);
    _mixin(A._LocalDate_Date_Orderable, A.Orderable);
    _mixin(A._FormController_Object_ChangeNotifier, C.ChangeNotifier);
    _mixinHard(A.__TDSkeletonState_State_SingleTickerProviderStateMixin, C.SingleTickerProviderStateMixin);
    _mixin(A._TDRoundedRectRangeSliderTrackShape_RangeSliderTrackShape_TDBaseRangeSliderTrackShape, A.TDBaseRangeSliderTrackShape);
    _mixin(A._TDRoundedRectSliderTrackShape_SliderTrackShape_BaseSliderTrackShape, A.BaseSliderTrackShape);
    _mixin(A._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode, A.ErrorOnUnResolvedNode);
    _mixin(A._XmlParserException_XmlException_XmlFormatException, A.XmlFormatException);
    _mixin(A.__XmlEventEncoderSink_Object_XmlEventVisitor, A.XmlEventVisitor);
    _mixin(A._XmlEvent_Object_XmlHasParent, A.XmlHasParent);
    _mixin(A._XmlEvent_Object_XmlHasParent_XmlHasLocation, A.XmlHasLocation);
    _mixin(A._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer, A.XmlHasBuffer);
    _mixin(A._XmlEndElementEvent_XmlEvent_XmlNamed, A.XmlNamed);
    _mixin(A._XmlStartElementEvent_XmlEvent_XmlNamed, A.XmlNamed);
    _mixin(A._XmlEventAttribute_Object_XmlNamed, A.XmlNamed);
    _mixin(A._XmlEventAttribute_Object_XmlNamed_XmlHasParent, A.XmlHasParent);
  })();
  C._Universe_addRules(init.typeUniverse, JSON.parse('{"OSError":{"Exception":[]},"FileSystemException":{"Exception":[]},"PathAccessException":{"Exception":[]},"PathExistsException":{"Exception":[]},"PathNotFoundException":{"Exception":[]},"_File":{"File0":[]},"ChatCustomMessage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ChatCustomMessageState":{"State":["ChatCustomMessage"],"Diagnosticable":[],"State.T":"ChatCustomMessage"},"QuestionnairePage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Slider":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_QuestionnairePageState":{"State":["QuestionnairePage"],"Diagnosticable":[],"State.T":"QuestionnairePage"},"SliderController":{"ValueNotifier":["@"],"ChangeNotifier":[],"ValueListenable":["@"],"Listenable":[],"ValueNotifier.T":"@"},"_SliderState":{"State":["Slider"],"Diagnosticable":[],"State.T":"Slider"},"GetChatController":{"ChatController":[]},"ChatPage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_ChatPageState":{"TickerProviderStateMixin":["ChatPage"],"State":["ChatPage"],"Diagnosticable":[],"TickerProvider":[],"State.T":"ChatPage"},"BlurHashDecodeException":{"Exception":[]},"ListDiffDelegate":{"IndexableItemDiffDelegate":["1"],"DiffDelegate":[]},"DataInsert":{"DataDiffUpdate":["1"]},"DataRemove":{"DataDiffUpdate":["1"]},"DataChange":{"DataDiffUpdate":["1"]},"DataMove":{"DataDiffUpdate":["1"]},"_ModalBottomSheet":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_BottomSheetLayoutWithSizeListener":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderBottomSheetLayoutWithSizeListener":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_ModalBottomSheetState":{"State":["_ModalBottomSheet<1>"],"Diagnosticable":[],"State.T":"_ModalBottomSheet<1>"},"ModalBottomSheetRoute":{"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[]},"Checkbox":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_CheckboxType":{"Enum":[]},"_CheckboxState":{"TickerProviderStateMixin":["Checkbox"],"State":["Checkbox"],"Diagnosticable":[],"TickerProvider":[],"State.T":"Checkbox"},"_CheckboxPainter":{"ChangeNotifier":[],"CustomPainter":[],"Listenable":[]},"_CheckboxDefaultsM3":{"CheckboxThemeData":[],"Diagnosticable":[]},"CircleAvatar":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Divider":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Radio":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RadioType":{"Enum":[]},"_RadioState":{"TickerProviderStateMixin":["Radio<1>"],"State":["Radio<1>"],"Diagnosticable":[],"TickerProvider":[],"State.T":"Radio<1>"},"_RadioPainter":{"ChangeNotifier":[],"CustomPainter":[],"Listenable":[]},"_RadioDefaultsM3":{"RadioThemeData":[],"Diagnosticable":[]},"RangeSlider":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RangeSliderState":{"TickerProviderStateMixin":["RangeSlider"],"State":["RangeSlider"],"Diagnosticable":[],"TickerProvider":[],"State.T":"RangeSlider"},"_RangeSliderRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderRangeSlider":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"_ValueIndicatorRenderObjectWidget0":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderValueIndicator0":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"SelectableText":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_TextSpanEditingController":{"TextEditingController":[],"ValueNotifier":["TextEditingValue"],"ChangeNotifier":[],"ValueListenable":["TextEditingValue"],"Listenable":[],"ValueNotifier.T":"TextEditingValue"},"_SelectableTextState":{"State":["SelectableText"],"Diagnosticable":[],"TextSelectionGestureDetectorBuilderDelegate":[],"State.T":"SelectableText"},"Slider0":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_AdjustSliderIntent":{"Intent":[],"Diagnosticable":[]},"_SliderType":{"Enum":[]},"SliderInteraction":{"Enum":[]},"_SliderState0":{"TickerProviderStateMixin":["Slider0"],"State":["Slider0"],"Diagnosticable":[],"TickerProvider":[],"State.T":"Slider0"},"_SliderRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderSlider":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"_SliderAdjustmentType":{"Enum":[]},"_ValueIndicatorRenderObjectWidget":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderValueIndicator":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"_SliderDefaultsM2":{"SliderThemeData":[],"Diagnosticable":[]},"_SliderDefaultsM3Year2023":{"SliderThemeData":[],"Diagnosticable":[]},"SliderTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ShowValueIndicator":{"Enum":[]},"Thumb":{"Enum":[]},"RoundedRectSliderTrackShape":{"SliderTrackShape":[]},"RoundedRectRangeSliderTrackShape":{"RangeSliderTrackShape":[]},"RoundSliderTickMarkShape":{"SliderTickMarkShape":[]},"RoundRangeSliderTickMarkShape":{"RangeSliderTickMarkShape":[]},"RoundSliderThumbShape":{"SliderComponentShape":[]},"RoundRangeSliderThumbShape":{"RangeSliderThumbShape":[]},"RoundSliderOverlayShape":{"SliderComponentShape":[]},"RectangularSliderValueIndicatorShape":{"SliderComponentShape":[]},"RectangularRangeSliderValueIndicatorShape":{"RangeSliderValueIndicatorShape":[]},"DropSliderValueIndicatorShape":{"SliderComponentShape":[]},"_TextButtonWithIcon":{"ButtonStyleButton":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_TextButtonWithIconChild":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"NetworkImage":{"NetworkImage0":[],"ImageProvider":["NetworkImage0"],"ImageProvider.T":"NetworkImage0"},"_ForwardingImageStreamCompleter":{"ImageStreamCompleter":[],"Diagnosticable":[]},"WebImageInfo":{"ImageInfo":[]},"BorderRadiusDirectional":{"BorderRadiusGeometry":[]},"LinearGradient":{"Gradient":[]},"FileImage":{"ImageProvider":["FileImage"],"ImageProvider.T":"FileImage"},"MemoryImage":{"ImageProvider":["MemoryImage"],"ImageProvider.T":"MemoryImage"},"NetworkImageLoadException":{"Exception":[]},"OneFrameImageStreamCompleter":{"ImageStreamCompleter":[],"Diagnosticable":[]},"OvalBorder":{"OutlinedBorder":[],"ShapeBorder":[]},"ShaderMaskLayer":{"ContainerLayer0":[],"Layer0":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderAspectRatio":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderShaderMask":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderSliverFillViewport":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData"},"SliverGridDelegateWithFixedCrossAxisCount":{"SliverGridDelegate":[]},"SliverGridParentData":{"SliverMultiBoxAdaptorParentData":[],"SliverLogicalParentData":[],"ContainerParentDataMixin":["RenderBox"],"KeepAliveParentDataMixin":[],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"RenderSliverGrid":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData"},"AlignmentGeometryTween":{"Tween":["AlignmentGeometry?"],"Animatable":["AlignmentGeometry?"],"Animatable.T":"AlignmentGeometry?","Tween.T":"AlignmentGeometry?"},"WrapAlignment":{"Enum":[]},"WrapCrossAlignment":{"Enum":[]},"WrapParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"RenderWrap":{"RenderBoxContainerDefaultsMixin":["RenderBox","WrapParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","WrapParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"WrapParentData","RenderBoxContainerDefaultsMixin.1":"WrapParentData","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"_ActiveItem":{"Comparable":["_ActiveItem"]},"SliverAnimatedList":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SliverAnimatedListState":{"TickerProviderStateMixin":["SliverAnimatedList"],"State":["SliverAnimatedList"],"Diagnosticable":[],"TickerProvider":[],"State.T":"SliverAnimatedList"},"_SliverAnimatedMultiBoxAdaptor":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_SliverAnimatedMultiBoxAdaptorState":{"TickerProviderStateMixin":["1"],"State":["1"],"Diagnosticable":[],"TickerProvider":[]},"StreamBuilderBase":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"FutureBuilder":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_StreamBuilderBaseState":{"State":["StreamBuilderBase<1,2>"],"Diagnosticable":[],"State.T":"StreamBuilderBase<1,2>"},"ConnectionState":{"Enum":[]},"StreamBuilder":{"StreamBuilderBase":["1","AsyncSnapshot<1>"],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"StreamBuilderBase.T":"1","StreamBuilderBase.S":"AsyncSnapshot<1>"},"_FutureBuilderState":{"State":["FutureBuilder<1>"],"Diagnosticable":[],"State.T":"FutureBuilder<1>"},"ShaderMask":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"AspectRatio":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Wrap":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Matrix4Tween":{"Tween":["Matrix40"],"Animatable":["Matrix40"],"Animatable.T":"Matrix40","Tween.T":"Matrix40"},"AnimatedContainer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_AnimatedContainerState":{"ImplicitlyAnimatedWidgetState":["AnimatedContainer"],"State":["AnimatedContainer"],"Diagnosticable":[],"TickerProvider":[],"State.T":"AnimatedContainer","ImplicitlyAnimatedWidgetState.T":"AnimatedContainer"},"PageController":{"ScrollController":[],"ChangeNotifier":[],"Listenable":[]},"PageView":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"PageMetrics":{"ScrollMetrics":[]},"_PagePosition":{"ScrollPosition":[],"PageMetrics":[],"ViewportOffset":[],"ChangeNotifier":[],"Listenable":[],"ScrollMetrics":[],"ScrollActivityDelegate":[]},"_ForceImplicitScrollPhysics":{"ScrollPhysics":[]},"PageScrollPhysics":{"ScrollPhysics":[]},"_PageViewState":{"State":["PageView"],"Diagnosticable":[],"State.T":"PageView"},"NeverScrollableScrollPhysics":{"ScrollPhysics":[]},"GridView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SliverGrid":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SliverFillViewport":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_SliverFillViewportRenderObjectWidget":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_SliverFractionalPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderSliverFractionalPadding":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderSliver"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderSliver"},"Spacer":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ToggleablePainter":{"ChangeNotifier":[],"CustomPainter":[],"Listenable":[]},"ChatOperationType":{"Enum":[]},"_Builders":{"Builders":[]},"TextStreamMessage":{"Message":[]},"_User":{"User":[]},"_ChatTheme":{"ChatTheme":[]},"_ChatColors":{"ChatColors":[]},"_ChatTypography":{"ChatTypography":[]},"LinkPreviewPosition":{"Enum":[]},"MessagesGroupingMode":{"Enum":[]},"TimeAndStatusPosition":{"Enum":[]},"UserCache":{"ChangeNotifier":[],"Listenable":[]},"Chat":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_ChatState":{"State":["Chat"],"Diagnosticable":[],"WidgetsBindingObserver":[],"State.T":"Chat"},"ChatAnimatedList":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"InitialScrollToEndMode":{"Enum":[]},"_ChatAnimatedListState":{"TickerProviderStateMixin":["ChatAnimatedList"],"State":["ChatAnimatedList"],"Diagnosticable":[],"TickerProvider":[],"State.T":"ChatAnimatedList"},"SliverSpacing":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_SliverSpacingState":{"State":["SliverSpacing"],"Diagnosticable":[],"WidgetsBindingObserver":[],"State.T":"SliverSpacing"},"ChatMessage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ChatMessageInternal":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_ChatMessageInternalState":{"State":["ChatMessageInternal"],"Diagnosticable":[],"State.T":"ChatMessageInternal"},"Composer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_ComposerState":{"State":["Composer"],"Diagnosticable":[],"State.T":"Composer"},"EmptyChatList":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_EmptyChatListState":{"State":["EmptyChatList"],"Diagnosticable":[],"TickerProvider":[],"State.T":"EmptyChatList"},"ScrollToBottom":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SimpleTextMessage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TimeAndStatus":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ComposerHeightNotifier":{"ChangeNotifier":[],"Listenable":[]},"LoadMoreNotifier":{"ChangeNotifier":[],"Listenable":[]},"MessageListDiff":{"ListDiffDelegate":["Message"],"IndexableItemDiffDelegate":["Message"],"DiffDelegate":[],"ListDiffDelegate.T":"Message"},"SendButtonVisibilityMode":{"Enum":[]},"InputClearMode":{"Enum":[]},"AccentNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"AccentUnderNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"CursorNode":{"GreenNode":[]},"_BaselineDistance":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_BaselineDistanceBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"EnclosureNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"LinePainter":{"CustomPainter":[],"Listenable":[]},"HorizontalStrikeDelegate":{"CustomLayoutDelegate":["int"]},"EquationArrayNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"_FracPos":{"Enum":[]},"FracNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"FracLayoutDelegate":{"IntrinsicLayoutDelegate":["_FracPos"],"CustomLayoutDelegate":["_FracPos"],"IntrinsicLayoutDelegate.T":"_FracPos"},"FunctionNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"LeftRightNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"MatrixSeparatorStyle":{"Enum":[]},"MatrixColumnAlign":{"Enum":[]},"MatrixNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"MatrixLayoutDelegate":{"IntrinsicLayoutDelegate":["int"],"CustomLayoutDelegate":["int"],"IntrinsicLayoutDelegate.T":"int"},"MultiscriptsNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"NaryOperatorNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"OverNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"PhantomNode":{"GreenNode":[]},"RaiseBoxNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"SpaceNode":{"GreenNode":[]},"_SqrtPos":{"Enum":[]},"SqrtNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"SqrtLayoutDelegate":{"CustomLayoutDelegate":["_SqrtPos"]},"StretchyOpNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"StyleNode":{"GreenNode":[]},"SymbolNode":{"GreenNode":[]},"UnderNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"Unit":{"Enum":[]},"MathSize":{"Enum":[]},"MathStyle":{"Enum":[]},"MathStyleDiff":{"Enum":[]},"EquationRowNode":{"PositionDependentMixin":["GreenNode"],"GreenNode":[]},"AtomType":{"Enum":[]},"ParentableNode":{"GreenNode":[]},"SlotableNode":{"GreenNode":[]},"TransparentNode":{"GreenNode":[]},"LeafNode":{"GreenNode":[]},"TemporaryNode":{"GreenNode":[]},"Mode":{"Enum":[]},"CrNode":{"GreenNode":[]},"_LeftRightRightNode":{"GreenNode":[]},"_EndEnvironmentNode":{"GreenNode":[]},"_MiddleNode":{"GreenNode":[]},"Lexer":{"LexerInterface":[]},"MacroExpander":{"MacroContext":[]},"ParseException":{"FlutterMathException":[],"Exception":[]},"Strict":{"Enum":[]},"CustomLayoutParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"CustomLayoutId":{"ParentDataWidget":["CustomLayoutParentData<1>"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"ParentDataWidget.T":"CustomLayoutParentData<1>"},"CustomLayout":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderCustomLayout":{"RenderBoxContainerDefaultsMixin":["RenderBox","CustomLayoutParentData<@>"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","CustomLayoutParentData<@>"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"CustomLayoutParentData<@>","RenderBoxContainerDefaultsMixin.1":"CustomLayoutParentData<@>","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"IntrinsicLayoutDelegate":{"CustomLayoutDelegate":["1"]},"EqnArrayParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"EqnArray":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderEqnArray":{"RenderBoxContainerDefaultsMixin":["RenderBox","EqnArrayParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","EqnArrayParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"EqnArrayParentData","RenderBoxContainerDefaultsMixin.1":"EqnArrayParentData","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"LayoutBuilderPreserveBaseline":{"ConstrainedLayoutBuilder":["BoxConstraints"],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"ConstrainedLayoutBuilder.0":"BoxConstraints"},"_RenderLayoutBuilderPreserveBaseline":{"RenderConstrainedLayoutBuilder":["BoxConstraints","RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox","RenderConstrainedLayoutBuilder.0":"BoxConstraints"},"LineParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"LineElement":{"ParentDataWidget":["LineParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"ParentDataWidget.T":"LineParentData"},"Line":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderLine":{"RenderBoxContainerDefaultsMixin":["RenderBox","LineParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","LineParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"LineParentData","RenderBoxContainerDefaultsMixin.1":"LineParentData","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"EditableLine":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderEditableLine":{"RenderLine":[],"RenderBoxContainerDefaultsMixin":["RenderBox","LineParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","LineParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"LineParentData","RenderBoxContainerDefaultsMixin.1":"LineParentData","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"MinDimension":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderMinDimension":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_ScriptPos":{"Enum":[]},"Multiscripts":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"MultiscriptsLayoutDelegate":{"IntrinsicLayoutDelegate":["_ScriptPos"],"CustomLayoutDelegate":["_ScriptPos"],"IntrinsicLayoutDelegate.T":"_ScriptPos"},"ResetBaseline":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderResetBaseline":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"ResetDimension":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderResetDimension":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"ShiftBaseline":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderShiftBaseline":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"VListParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"VList":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"VListElement":{"ParentDataWidget":["VListParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"ParentDataWidget.T":"VListParentData"},"RenderRelativeWidthColumn":{"RenderBoxContainerDefaultsMixin":["RenderBox","VListParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","VListParentData"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"ContainerRenderObjectMixin.0":"RenderBox","ContainerRenderObjectMixin.1":"VListParentData","RenderBoxContainerDefaultsMixin.1":"VListParentData","RenderBoxContainerDefaultsMixin.0":"RenderBox"},"FlutterMathException":{"Exception":[]},"BuildException":{"FlutterMathException":[],"Exception":[]},"Math":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"FlutterMathMode":{"Enum":[]},"SvgLoader":{"BytesLoader":[]},"SvgStringLoader":{"SvgLoader":["~"],"BytesLoader":[],"SvgLoader.T":"~"},"SvgPicture":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"FlyerChatImageMessage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_FlyerChatImageMessageState":{"TickerProviderStateMixin":["FlyerChatImageMessage"],"State":["FlyerChatImageMessage"],"Diagnosticable":[],"TickerProvider":[],"State.T":"FlyerChatImageMessage"},"TimeAndStatus0":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"FlyerChatTextMessage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TimeAndStatus2":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"FlyerChatTextStreamMessage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TextStreamMessageMode":{"Enum":[]},"_FlyerChatTextStreamMessageState":{"TickerProviderStateMixin":["FlyerChatTextStreamMessage"],"State":["FlyerChatTextStreamMessage"],"Diagnosticable":[],"TickerProvider":[],"State.T":"FlyerChatTextStreamMessage"},"TimeAndStatus1":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"StaticSegment":{"TextSegment":[]},"AnimatingSegment":{"TextSegment":[]},"FValueNotifier":{"ValueNotifier":["1"],"ChangeNotifier":[],"ValueListenable":["1"],"Listenable":[]},"FCalendar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_State1":{"State":["FCalendar"],"Diagnosticable":[],"State.T":"FCalendar"},"FCalendarController":{"FValueNotifier":["1"],"ValueNotifier":["1"],"ChangeNotifier":[],"ValueListenable":["1"],"Listenable":[]},"_AutoDateController":{"FCalendarController":["DateTime?"],"FValueNotifier":["DateTime?"],"ValueNotifier":["DateTime?"],"ChangeNotifier":[],"ValueListenable":["DateTime?"],"Listenable":[],"ValueNotifier.T":"DateTime?","FValueNotifier.T":"DateTime?"},"DayPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_DayPickerState":{"State":["DayPicker"],"Diagnosticable":[],"State.T":"DayPicker"},"_GridDelegate":{"SliverGridDelegate":[]},"PagedDayPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_PagedDayPickerState":{"PagedPickerState":["PagedDayPicker"],"State":["PagedDayPicker"],"Diagnosticable":[],"State.T":"PagedDayPicker","PagedPickerState.T":"PagedDayPicker"},"MonthPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_MonthPickerState":{"State":["MonthPicker"],"Diagnosticable":[],"State.T":"MonthPicker"},"PagedMonthPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_PagedMonthPickerState":{"PagedPickerState":["PagedMonthPicker"],"State":["PagedMonthPicker"],"Diagnosticable":[],"State.T":"PagedMonthPicker","PagedPickerState.T":"PagedMonthPicker"},"Entry0":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_SelectableEntry":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_UnselectableEntry":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"EntryContent":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"FCalendarPickerType":{"Enum":[]},"Header":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_HeaderState":{"State":["Header"],"Diagnosticable":[],"TickerProvider":[],"State.T":"Header"},"Navigation":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"PagedPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"PagedPickerState":{"State":["1"],"Diagnosticable":[]},"PagedYearPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_PagedYearPickerState":{"PagedPickerState":["PagedYearPicker"],"State":["PagedYearPicker"],"Diagnosticable":[],"State.T":"PagedYearPicker","PagedPickerState.T":"PagedYearPicker"},"YearPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_YearPickerState":{"State":["YearPicker"],"Diagnosticable":[],"State.T":"YearPicker"},"YearMonthPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_YearMonthPickerState":{"State":["YearMonthPicker"],"Diagnosticable":[],"State.T":"YearMonthPicker"},"FDialog":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"VerticalContent":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Content2":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_FRootHeader":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"CodeField":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_CodeFieldState":{"State":["CodeField"],"Diagnosticable":[],"State.T":"CodeField"},"CustomDivider":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderDivider":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"CustomImageError":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderCustomImageError":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"CustomImageLoading":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderCustomImageLoading":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"CustomRb":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"CustomCb":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"BlockQuoteWidget":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"BlockQuotePainter":{"CustomPainter":[],"Listenable":[]},"LinkButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_LinkButtonState":{"State":["LinkButton"],"Diagnosticable":[],"State.T":"LinkButton"},"SelectableAdapter":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_SelectableAdapter":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RenderSelectableAdapter":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"Selectable0":[],"DiagnosticableTree":[],"ValueListenable":["SelectionGeometry"],"Diagnosticable":[],"HitTestTarget":[],"Listenable":[],"RenderObjectWithChildMixin.0":"RenderBox"},"UnorderedListView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"OrderedListView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"MdWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"GptMarkdownThemeData":{"ThemeExtension":["GptMarkdownThemeData"],"ThemeExtension.T":"GptMarkdownThemeData"},"GptMarkdownTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"GptMarkdown":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"InlineMd":{"MarkdownComponent":[]},"BlockMd":{"MarkdownComponent":[]},"IndentMd":{"MarkdownComponent":[]},"HTag":{"MarkdownComponent":[]},"NewLines":{"MarkdownComponent":[]},"HrLine":{"MarkdownComponent":[]},"CheckBoxMd":{"MarkdownComponent":[]},"RadioButtonMd":{"MarkdownComponent":[]},"BlockQuote":{"MarkdownComponent":[]},"UnOrderedList":{"MarkdownComponent":[]},"OrderedList":{"MarkdownComponent":[]},"HighlightedText":{"MarkdownComponent":[]},"BoldMd":{"MarkdownComponent":[]},"StrikeMd":{"MarkdownComponent":[]},"ItalicMd":{"MarkdownComponent":[]},"LatexMathMultiLine":{"MarkdownComponent":[]},"LatexMath":{"MarkdownComponent":[]},"SourceTag":{"MarkdownComponent":[]},"ATagMd":{"MarkdownComponent":[]},"ImageMd":{"MarkdownComponent":[]},"TableMd":{"MarkdownComponent":[]},"CodeBlockMd":{"MarkdownComponent":[]},"UnderLineMd":{"MarkdownComponent":[]},"_MdWidgetState":{"State":["MdWidget"],"Diagnosticable":[],"State.T":"MdWidget"},"CustomTableColumnWidth":{"TableColumnWidth":[]},"ChannelIterator":{"Iterator":["num"]},"ChannelOrder":{"Enum":[]},"ColorFloat16":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorFloat32":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorFloat64":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorInt16":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorInt32":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorInt8":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorUint1":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorUint16":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorUint2":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorUint32":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorUint4":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ColorUint8":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ConstColorUint8":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"ConstColorRgb8":{"Color1":[],"Iterable":["num"],"Iterable.E":"num"},"Format":{"Enum":[]},"ExifData":{"IfdContainer":[]},"IfdValueType":{"Enum":[]},"IfdValueLong":{"IfdValue":[]},"JpegChroma":{"Enum":[]},"Image0":{"Iterable":["Pixel"],"Iterable.E":"Pixel"},"FrameType":{"Enum":[]},"ImageData1":{"Iterable":["Pixel"]},"ImageDataFloat16":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataFloat32":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataFloat64":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataInt16":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataInt32":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataInt8":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataUint1":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataUint16":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataUint2":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataUint32":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataUint4":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"ImageDataUint8":{"ImageData1":[],"Iterable":["Pixel"],"Iterable.E":"Pixel"},"PixelFloat16":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelFloat32":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelFloat64":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelInt16":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelInt32":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelInt8":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUint1":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUint16":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUint2":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUint32":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUint4":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUint8":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"PixelUndefined":{"Pixel":[],"Color1":[],"Iterable":["num"],"Iterator":["Pixel"],"Iterable.E":"num"},"ImageException":{"Exception":[]},"_NestedHookElement":{"Element":[],"DiagnosticableTree":[],"Diagnosticable":[],"BuildContext":[]},"SingleChildWidget":{"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SingleChildStatefulWidget":{"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Nested":{"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_NestedElement":{"Element":[],"DiagnosticableTree":[],"Diagnosticable":[],"BuildContext":[]},"_NestedHook":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SingleChildStatelessWidget":{"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SingleChildStatelessElement":{"Element":[],"DiagnosticableTree":[],"Diagnosticable":[],"BuildContext":[]},"SingleChildState":{"State":["1"],"Diagnosticable":[]},"SingleChildStatefulElement":{"StatefulElement":[],"Element":[],"DiagnosticableTree":[],"Diagnosticable":[],"BuildContext":[]},"SingleChildBuilder":{"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"SvgPathSegType":{"Enum":[]},"ParserException":{"FormatException":[],"Exception":[]},"Failure":{"Result":["0&"],"Context1":[]},"Result":{"Context1":[]},"Success":{"Result":["1"],"Context1":[]},"ReferenceParser":{"ResolvableParser":["1"],"Parser":["1"]},"MatchesIterable":{"Iterable":["1"],"Iterable.E":"1"},"MatchesIterator":{"Iterator":["1"]},"FlattenParser":{"DelegateParser":["~","String"],"Parser":["String"],"DelegateParser.T":"~"},"MapParser":{"DelegateParser":["1","2"],"Parser":["2"],"DelegateParser.T":"1"},"TokenParser":{"DelegateParser":["1","Token0<1>"],"Parser":["Token0<1>"],"DelegateParser.T":"1"},"SingleCharPredicate":{"CharacterPredicate":[]},"ConstantCharPredicate":{"CharacterPredicate":[]},"LookupCharPredicate":{"CharacterPredicate":[]},"NotCharacterPredicate":{"CharacterPredicate":[]},"RangeCharPredicate":{"CharacterPredicate":[]},"WhitespaceCharPredicate":{"CharacterPredicate":[]},"ChoiceParser":{"ListParser":["1","1"],"Parser":["1"],"ListParser.R":"1"},"DelegateParser":{"Parser":["2"]},"SequenceParser2":{"Parser":["+(1,2)"]},"SequenceParser3":{"Parser":["+(1,2,3)"]},"SequenceParser4":{"Parser":["+(1,2,3,4)"]},"SequenceParser5":{"Parser":["+(1,2,3,4,5)"]},"SequenceParser8":{"Parser":["+(1,2,3,4,5,6,7,8)"]},"ListParser":{"Parser":["2"]},"OptionalParser":{"DelegateParser":["1","1"],"Parser":["1"],"DelegateParser.T":"1"},"SkipParser":{"DelegateParser":["1","1"],"Parser":["1"],"DelegateParser.T":"1"},"EpsilonParser":{"Parser":["1"]},"NewlineParser":{"Parser":["String"]},"AnyCharacterParser":{"Parser":["String"]},"SingleCharacterParser":{"Parser":["String"]},"PredicateParser":{"Parser":["String"]},"RepeatingCharacterParser":{"Parser":["String"]},"LazyRepeatingParser":{"LimitedRepeatingParser":["1"],"RepeatingParser":["1","List<1>"],"DelegateParser":["1","List<1>"],"Parser":["List<1>"],"DelegateParser.T":"1"},"LimitedRepeatingParser":{"RepeatingParser":["1","List<1>"],"DelegateParser":["1","List<1>"],"Parser":["List<1>"]},"PossessiveRepeatingParser":{"RepeatingParser":["1","List<1>"],"DelegateParser":["1","List<1>"],"Parser":["List<1>"],"DelegateParser.T":"1"},"RepeatingParser":{"DelegateParser":["1","2"],"Parser":["2"]},"ChangeNotifierProvider":{"ListenableProvider":["1"],"InheritedProvider":["1"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"InheritedProvider.T":"1"},"Consumer":{"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ListenableProvider":{"InheritedProvider":["1"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"InheritedContext":{"BuildContext":[]},"_InheritedProviderScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_CreateInheritedProvider":{"_Delegate":["1"]},"_ValueInheritedProvider":{"_Delegate":["1"]},"InheritedProvider":{"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_InheritedProviderElement":{"Element":[],"DiagnosticableTree":[],"Diagnosticable":[],"BuildContext":[]},"_InheritedProviderScopeElement":{"InheritedElement":[],"Element":[],"DiagnosticableTree":[],"InheritedContext":["1"],"Diagnosticable":[],"BuildContext":[]},"_CreateInheritedProviderState":{"_DelegateState":["1","_CreateInheritedProvider<1>"],"_DelegateState.D":"_CreateInheritedProvider<1>","_DelegateState.T":"1"},"_ValueInheritedProviderState":{"_DelegateState":["1","_ValueInheritedProvider<1>"],"_DelegateState.D":"_ValueInheritedProvider<1>","_DelegateState.T":"1"},"MultiProvider":{"Nested":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Provider":{"InheritedProvider":["1"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"InheritedProvider.T":"1"},"ProviderNullException":{"Exception":[]},"ProviderNotFoundException":{"Exception":[]},"ProxyProvider0":{"InheritedProvider":["1"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ProxyProvider":{"ProxyProvider0":["2"],"InheritedProvider":["2"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"InheritedProvider.T":"2"},"Selector0":{"SingleChildStatefulWidget":[],"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_Selector0State":{"SingleChildState":["Selector0<1>"],"State":["Selector0<1>"],"Diagnosticable":[],"State.T":"Selector0<1>"},"Selector2":{"Selector0":["3"],"SingleChildStatefulWidget":[],"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"Selector0.T":"3"},"ObserverHandleContextsResultModel":{"ObserverHandleContextsResultModel.M":"1"},"ObserverAutoTriggerObserveType":{"Enum":[]},"ObserverTriggerOnObserveType":{"Enum":[]},"ObserverRenderSliverType":{"Enum":[]},"ObserverWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ObserverWidgetState":{"State":["4"],"Diagnosticable":[],"State.T":"4","ObserverWidgetState.C":"1","ObserverWidgetState.M":"2","ObserverWidgetState.N":"3","ObserverWidgetState.T":"4"},"ObserverWidgetScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ObserverWidgetTagManager":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"ObserverWidgetObserveResultType":{"Enum":[]},"GridViewObserveDisplayingChildModel":{"ObserveDisplayingChildModel":[]},"GridViewObserveModel":{"ObserveModel":[]},"ListViewObserveDisplayingChildModel":{"ObserveDisplayingChildModel":[]},"ListViewObserveModel":{"ObserveModel":[]},"ScrollViewOnceObserveNotification":{"Notification0":[]},"ObserverScrollNotification":{"Notification0":[]},"ObserverScrollStartNotification":{"Notification0":[]},"ObserverScrollInterruptionNotification":{"Notification0":[]},"ObserverScrollDecisionNotification":{"Notification0":[]},"ObserverScrollEndNotification":{"Notification0":[]},"SliverObserverHandleContextsResultModel":{"ObserverHandleContextsResultModel":["ObserveModel"],"ObserverHandleContextsResultModel.M":"ObserveModel"},"SliverObserverController":{"ObserverControllerForNotification":["ObserveModel","SliverObserverHandleContextsResultModel<ObserveModel>","ScrollViewOnceObserveNotificationResult"],"ObserverController":[],"ObserverControllerForNotification.R":"SliverObserverHandleContextsResultModel<ObserveModel>","ObserverControllerForNotification.S":"ScrollViewOnceObserveNotificationResult"},"ScrollViewOnceObserveNotificationResult":{"CommonOnceObserveNotificationResult":["ObserveModel","SliverObserverHandleContextsResultModel<ObserveModel>"],"CommonOnceObserveNotificationResult.M":"ObserveModel"},"SliverViewObserver":{"ObserverWidget":["SliverObserverController","ObserveModel","ScrollViewOnceObserveNotification"],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[],"ObserverWidget.C":"SliverObserverController","ObserverWidget.M":"ObserveModel","ObserverWidget.N":"ScrollViewOnceObserveNotification"},"MixViewObserverState":{"ObserverWidgetState":["SliverObserverController","ObserveModel","ScrollViewOnceObserveNotification","SliverViewObserver"],"State":["SliverViewObserver"],"Diagnosticable":[],"State.T":"SliverViewObserver","ObserverWidgetState.C":"SliverObserverController","ObserverWidgetState.M":"ObserveModel","ObserverWidgetState.N":"ScrollViewOnceObserveNotification","ObserverWidgetState.T":"SliverViewObserver"},"ShimmerDirection":{"Enum":[]},"Shimmer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_Shimmer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_ShimmerState":{"State":["Shimmer"],"Diagnosticable":[],"TickerProvider":[],"State.T":"Shimmer"},"_ShimmerFilter":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"LocalDate":{"Orderable":["LocalDate"],"Comparable":["LocalDate"],"Orderable.T":"LocalDate"},"DateUnit":{"Enum":[]},"TimeUnit":{"Enum":[]},"TDCheckbox":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDCheckboxStyle":{"Enum":[]},"TDContentDirection":{"Enum":[]},"TDCheckBoxSize":{"Enum":[]},"TDCheckboxState":{"State":["TDCheckbox"],"Diagnosticable":[],"State.T":"TDCheckbox"},"RadioCornerIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RadioCorner":{"CustomPainter":[],"Listenable":[]},"TDCheckboxGroup":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDCheckboxGroupInherited":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDCheckboxGroupContainer":{"TDCheckboxGroup":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDCheckboxGroupState":{"State":["TDCheckboxGroup"],"Diagnosticable":[],"State.T":"TDCheckboxGroup"},"TDCheckboxGroupContainerState":{"TDCheckboxGroupState":[],"State":["TDCheckboxGroup"],"Diagnosticable":[],"State.T":"TDCheckboxGroup"},"TDConfirmDialog":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDForm":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_TDFormState":{"State":["TDForm"],"Diagnosticable":[],"State.T":"TDForm"},"FormController":{"ChangeNotifier":[],"Listenable":[]},"TDFormInherited":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDFormItem":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDFormItemType":{"Enum":[]},"_TDFormItemState":{"State":["TDFormItem"],"Diagnosticable":[],"State.T":"TDFormItem"},"TDInputView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDInputType":{"Enum":[]},"TDInputSize":{"Enum":[]},"TDInput":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDRadio":{"TDCheckbox":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDRadioGroup":{"TDCheckboxGroup":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDRadioStyle":{"Enum":[]},"TDRadioState":{"State":["TDCheckbox"],"Diagnosticable":[],"State.T":"TDCheckbox"},"TDRadioGroupState":{"TDCheckboxGroupState":[],"State":["TDCheckboxGroup"],"Diagnosticable":[],"State.T":"TDCheckboxGroup"},"TDSkeleton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDSkeletonAnimation":{"Enum":[]},"TDSkeletonTheme":{"Enum":[]},"_TDSkeletonState":{"State":["TDSkeleton"],"Diagnosticable":[],"TickerProvider":[],"State.T":"TDSkeleton"},"TDSlider":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDRangeSlider":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"TDSliderState":{"State":["TDSlider"],"Diagnosticable":[],"State.T":"TDSlider"},"_TDRangeSliderState":{"State":["TDRangeSlider"],"Diagnosticable":[],"State.T":"TDRangeSlider"},"TDRoundedRectSliderTrackShape":{"SliderTrackShape":[]},"TDRoundSliderThumbShape":{"SliderComponentShape":[]},"TDNoOverlayShape":{"SliderComponentShape":[]},"TDRoundSliderTickMarkShape":{"SliderTickMarkShape":[]},"TDRoundedRectRangeSliderTrackShape":{"RangeSliderTrackShape":[]},"TDRoundRangeSliderThumbShape":{"RangeSliderThumbShape":[]},"TDRoundRangeSliderTickMarkShape":{"RangeSliderTickMarkShape":[]},"RenderWebVectorGraphic":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"_DefaultPictureFactory":{"PictureFactory":[]},"FlutterVectorGraphicsListener":{"VectorGraphicsCodecListener":[]},"VectorGraphicsDecodeException":{"Exception":[]},"RenderVectorGraphic":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"RenderPictureVectorGraphic":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"Diagnosticable":[],"HitTestTarget":[]},"VectorGraphic":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RenderingStrategy":{"Enum":[]},"_VectorGraphicWidgetState":{"State":["VectorGraphic"],"Diagnosticable":[],"State.T":"VectorGraphic"},"_RawVectorGraphicWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RawWebVectorGraphicWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_RawPictureVectorGraphicWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"_CurrentSection":{"Enum":[]},"PathBuilder":{"PathProxy":[]},"PathFillType0":{"Enum":[]},"PathCommandType":{"Enum":[]},"LineToCommand":{"PathCommand":[]},"MoveToCommand":{"PathCommand":[]},"CubicToCommand":{"PathCommand":[]},"CloseCommand":{"PathCommand":[]},"ImageFormat":{"Enum":[]},"BlendMode0":{"Enum":[]},"LinearGradient0":{"Gradient0":[]},"GradientUnitMode":{"Enum":[]},"RadialGradient":{"Gradient0":[]},"PaintingStyle0":{"Enum":[]},"StrokeCap0":{"Enum":[]},"StrokeJoin0":{"Enum":[]},"TileMode0":{"Enum":[]},"FontWeight0":{"Enum":[]},"TextDecorationStyle0":{"Enum":[]},"AttributedNode":{"Node0":[]},"_EmptyNode":{"Node0":[]},"TransformableNode":{"Node0":[]},"ViewportNode":{"ParentNode":[],"AttributedNode":[],"Node0":[]},"ParentNode":{"AttributedNode":[],"Node0":[]},"TextPositionNode":{"ParentNode":[],"AttributedNode":[],"Node0":[]},"SaveLayerNode":{"ParentNode":[],"AttributedNode":[],"Node0":[]},"ClipNode":{"Node0":[]},"MaskNode":{"Node0":[]},"PathNode":{"AttributedNode":[],"Node0":[]},"DeferredNode":{"AttributedNode":[],"Node0":[]},"TextNode":{"AttributedNode":[],"Node0":[]},"ImageNode":{"AttributedNode":[],"Node0":[]},"PatternNode":{"Node0":[]},"ResolvedPathNode":{"Node0":[]},"ResolvingVisitor":{"Visitor":["Node0","AffineMatrix"]},"ResolvedTextPositionNode":{"Node0":[]},"ResolvedTextNode":{"Node0":[]},"ResolvedClipNode":{"Node0":[]},"ResolvedMaskNode":{"Node0":[]},"ResolvedImageNode":{"Node0":[]},"ResolvedPatternNode":{"Node0":[]},"CommandBuilderVisitor":{"ErrorOnUnResolvedNode":["~","~"],"Visitor":["~","~"],"ErrorOnUnResolvedNode.V":"~"},"DrawCommandType":{"Enum":[]},"XmlDefaultEntityMapping":{"XmlEntityMapping":[]},"XmlAttributeType":{"Enum":[]},"XmlNodeType":{"Enum":[]},"XmlException":{"Exception":[]},"XmlParserException":{"FormatException":[],"Exception":[]},"XmlCharacterDataParser":{"Parser":["String"]},"XmlEventEncoder":{"Converter":["List<XmlEvent>","String"],"StreamTransformer":["List<XmlEvent>","String"],"Converter.T":"String","Converter.S":"List<XmlEvent>"},"_XmlEventEncoderSink":{"XmlEventVisitor":[],"Sink":["List<XmlEvent>"]},"XmlCDATAEvent":{"XmlEvent":[]},"XmlCommentEvent":{"XmlEvent":[]},"XmlDeclarationEvent":{"XmlEvent":[]},"XmlDoctypeEvent":{"XmlEvent":[]},"XmlEndElementEvent":{"XmlEvent":[]},"XmlProcessingEvent":{"XmlEvent":[]},"XmlStartElementEvent":{"XmlEvent":[]},"XmlTextEvent":{"XmlEvent":[]},"XmlRawTextEvent":{"XmlTextEvent":[],"XmlEvent":[]},"XmlEventIterable":{"Iterable":["XmlEvent"],"Iterable.E":"XmlEvent"},"XmlEventIterator":{"Iterator":["XmlEvent"]},"ConversionSink":{"Sink":["1"]},"CheckboxTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"RadioTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"MathController":{"ChangeNotifier":[],"Listenable":[]},"DefaultSvgTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"Diagnosticable":[]},"Pixel":{"Color1":[],"Iterator":["Pixel"],"Iterable":["num"]},"ResolvableParser":{"Parser":["1"]},"ObserverListenerEntry":{"LinkedListEntry":["ObserverListenerEntry<1>"]},"SliverObserverListenerEntry":{"LinkedListEntry":["SliverObserverListenerEntry"]}}'));
  C._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"__RadioState_State_TickerProviderStateMixin":1,"__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin":1,"_SliverAnimatedMultiBoxAdaptorState":1,"__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin":1,"ToggleableStateMixin":1,"KeyboardMixin":1,"ParentableNode":1}'));
  var string$ = {
    x20creatS: " created a Ticker via its SingleTickerProviderStateMixin, but at the time dispose() was called on the mixin, that Ticker was still active. The Ticker must be disposed before calling super.dispose().",
    x20creatT: " created a Ticker via its TickerProviderStateMixin, but at the time dispose() was called on the mixin, that Ticker was still active. All Tickers must be disposed before calling super.dispose().",
    x20has_a: " has a null textDirection, so the alignment cannot be resolved.",
    x20that_: " that is overflowing has been marked in the rendering with a yellow and black striped pattern. This is usually caused by the contents being too big for the ",
    x20to_fi: " to fit within the available space instead of being sized to their natural size.",
    x20was_u: " was used after being disposed.\nOnce you have called dispose() on a ",
    x2c_chat: ", chatMessageBuilder: null, chatAnimatedListBuilder: null, scrollToBottomBuilder: null, loadMoreBuilder: null, emptyChatListBuilder: ",
    x2c_file: ", fileMessageBuilder: null, videoMessageBuilder: null, audioMessageBuilder: null, systemMessageBuilder: null, customMessageBuilder: ",
    x2c_imag: ", imageSource: null, createdAt: null, metadata: ",
    x2c_unsu: ", unsupportedMessageBuilder: null, composerBuilder: ",
    x2ePleas: ".Please report this error with correponding input.",
    Consid: "Consider applying a flex factor (e.g. using an Expanded widget) to force the children of the ",
    This_i: "This is considered an error condition because it indicates that there is content that cannot be seen. If the content is legitimately bigger than the available space, consider clipping it with a ClipRect widget before putting it in the flex, or using a scrollable container rather than a Flex, like a ListView.",
    Ticker: "Tickers used by AnimationControllers should be disposed by calling dispose() on the AnimationController itself. Otherwise, the ticker will leak.",
    x5c_____: "\\ *\\\\\\[((?:.)*?)\\\\\\]|(\\ *\\\\begin.*?\\\\end{.*?})"
  };
  var type$ = (function rtii() {
    var findType = C.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      AffineMatrix: findType("AffineMatrix"),
      AlignmentGeometry: findType("AlignmentGeometry"),
      AlignmentGeometryTween: findType("AlignmentGeometryTween"),
      Animatable_double: findType("Animatable<double>"),
      AnimationStatus: findType("AnimationStatus"),
      Animation_double: findType("Animation<double>"),
      ArgumentParsingContext: findType("ArgumentParsingContext"),
      AsyncSnapshot_Map_DateTime_int: findType("AsyncSnapshot<Map<DateTime,int>>"),
      AsyncSnapshot_double: findType("AsyncSnapshot<double>"),
      AttributedNode: findType("AttributedNode"),
      Axis: findType("Axis"),
      AxisConfiguration__FracPos: findType("AxisConfiguration<_FracPos>"),
      AxisConfiguration__ScriptPos: findType("AxisConfiguration<_ScriptPos>"),
      AxisConfiguration_int: findType("AxisConfiguration<int>"),
      BlendMode: findType("BlendMode"),
      BorderRadiusDirectional: findType("BorderRadiusDirectional"),
      BorderRadiusGeometry: findType("BorderRadiusGeometry"),
      BoxConstraints: findType("BoxConstraints"),
      BoxConstraintsTween: findType("BoxConstraintsTween"),
      BoxFit: findType("BoxFit"),
      BoxHitTestEntry: findType("BoxHitTestEntry"),
      BoxParentData: findType("BoxParentData"),
      Box_dynamic: findType("Box<@>"),
      BuildContext: findType("BuildContext"),
      BuildResult: findType("BuildResult"),
      Builders: findType("Builders"),
      ByteData: findType("ByteData"),
      CallbackAction_ActivateIntent: findType("CallbackAction<ActivateIntent>"),
      CallbackAction_DirectionalFocusIntent: findType("CallbackAction<DirectionalFocusIntent>"),
      CallbackAction_NextFocusIntent: findType("CallbackAction<NextFocusIntent>"),
      CallbackAction_PreviousFocusIntent: findType("CallbackAction<PreviousFocusIntent>"),
      CallbackAction__AdjustSliderIntent: findType("CallbackAction<_AdjustSliderIntent>"),
      CharacterPredicate: findType("CharacterPredicate"),
      Chat: findType("Chat"),
      ChatController: findType("ChatController"),
      ChatOperation: findType("ChatOperation"),
      ChatSessionController: findType("ChatSessionController"),
      ChatTheme: findType("ChatTheme"),
      Checkbox: findType("Checkbox"),
      CheckboxTheme: findType("CheckboxTheme"),
      Clip: findType("Clip"),
      ClipRectLayer: findType("ClipRectLayer"),
      CodeUnits: findType("CodeUnits"),
      Codec: findType("Codec0"),
      Color: findType("Color"),
      ColorFilterLayer: findType("ColorFilterLayer"),
      ColorMapper: findType("ColorMapper"),
      ColorTriplet: findType("ColorTriplet"),
      ColorTween: findType("ColorTween"),
      Color_2: findType("Color1"),
      Color_3: findType("Color0"),
      Composer: findType("Composer"),
      ComposerHeightNotifier: findType("ComposerHeightNotifier"),
      ConstantStringMap_String_AtomType: findType("ConstantStringMap<String,AtomType>"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringMap_String_TexSymbolConfig: findType("ConstantStringMap<String,TexSymbolConfig>"),
      ConstantStringMap_String_int: findType("ConstantStringMap<String,int>"),
      ConstantStringMap_of_String_and_List_String: findType("ConstantStringMap<String,List<String>>"),
      ConstantStringMap_of_String_and_List_double: findType("ConstantStringMap<String,List<double>>"),
      ConstantStringSet_String: findType("ConstantStringSet<String>"),
      Consumer_ComposerHeightNotifier: findType("Consumer<ComposerHeightNotifier>"),
      Consumer_FlutterMathMode: findType("Consumer<FlutterMathMode>"),
      ContainerLayer: findType("ContainerLayer0"),
      ConversionSink_String: findType("ConversionSink<String>"),
      CrNode: findType("CrNode"),
      CrossAxisAlignment: findType("CrossAxisAlignment"),
      CrossCache: findType("CrossCache"),
      CubicToCommand: findType("CubicToCommand"),
      CustomLayoutId_int: findType("CustomLayoutId<int>"),
      CustomLayoutParentData_dynamic: findType("CustomLayoutParentData<@>"),
      CustomLayout__FracPos: findType("CustomLayout<_FracPos>"),
      CustomLayout__ScriptPos: findType("CustomLayout<_ScriptPos>"),
      CustomLayout__SqrtPos: findType("CustomLayout<_SqrtPos>"),
      CustomLayout_int: findType("CustomLayout<int>"),
      CustomMessage: findType("CustomMessage"),
      DataDiffUpdate_Message: findType("DataDiffUpdate<Message>"),
      DateFormat: findType("DateFormat"),
      DateTime: findType("DateTime"),
      DayPicker: findType("DayPicker"),
      Decoration: findType("Decoration"),
      DecorationTween: findType("DecorationTween"),
      DefaultSelectionStyle: findType("DefaultSelectionStyle"),
      DefaultSvgTheme: findType("DefaultSvgTheme"),
      DefaultTextStyle: findType("DefaultTextStyle"),
      DelimiterConf: findType("DelimiterConf"),
      DirectionalFocusIntent: findType("DirectionalFocusIntent"),
      DirectionallyExtendSelectionEvent: findType("DirectionallyExtendSelectionEvent"),
      DrawCommand: findType("DrawCommand"),
      DrawImageData: findType("DrawImageData"),
      DtdExternalId: findType("DtdExternalId"),
      Duration: findType("Duration"),
      EdgeInsets: findType("EdgeInsets"),
      EdgeInsetsGeometry: findType("EdgeInsetsGeometry"),
      EdgeInsetsGeometryTween: findType("EdgeInsetsGeometryTween"),
      EditableTextState: findType("EditableTextState"),
      Element: findType("Element"),
      EnvContext: findType("EnvContext"),
      EnvSpec: findType("EnvSpec"),
      EpsilonParser_String: findType("EpsilonParser<String>"),
      EpsilonParser_void: findType("EpsilonParser<~>"),
      EqnArrayParentData: findType("EqnArrayParentData"),
      EqualUnmodifiableMapView_String_dynamic: findType("EqualUnmodifiableMapView<String,@>"),
      EqualUnmodifiableMapView_of_String_and_List_String: findType("EqualUnmodifiableMapView<String,List<String>>"),
      EquationRowNode: findType("EquationRowNode"),
      EquationRowNode_Function_List_EquationRowNode: findType("EquationRowNode(List<EquationRowNode>)"),
      EquationRowNode_Function_List_GreenNode: findType("EquationRowNode(List<GreenNode>)"),
      Error: findType("Error"),
      FCalendarController_dynamic: findType("FCalendarController<@>"),
      FCalendarDayPickerStyle: findType("FCalendarDayPickerStyle"),
      FCalendarEntryStyle: findType("FCalendarEntryStyle"),
      FCalendarHeaderStyle: findType("FCalendarHeaderStyle"),
      FCalendarPickerType: findType("FCalendarPickerType"),
      FCalendarStyle: findType("FCalendarStyle"),
      FDialogContentStyle: findType("FDialogContentStyle"),
      FDialogStyle: findType("FDialogStyle"),
      FHeaderStyle: findType("FHeaderStyle"),
      FLocalizations: findType("FLocalizations"),
      Failure: findType("Failure"),
      FileImage: findType("FileImage"),
      Float32List: findType("Float32List"),
      FlutterMathException: findType("FlutterMathException"),
      FlutterMathMode: findType("FlutterMathMode"),
      FlyerChatImageMessage: findType("FlyerChatImageMessage"),
      FlyerChatTextStreamMessage: findType("FlyerChatTextStreamMessage"),
      FocusNode: findType("FocusNode"),
      FontOptions: findType("FontOptions"),
      FormatException: findType("FormatException"),
      Function: findType("Function"),
      FunctionContext: findType("FunctionContext"),
      FunctionSpec_GreenNode: findType("FunctionSpec<GreenNode>"),
      FutureBuilder_Map_DateTime_int: findType("FutureBuilder<Map<DateTime,int>>"),
      Future_ByteData_Function: findType("Future<ByteData>()"),
      Future_Codec_Function_ImmutableBuffer: findType("Future<Codec0>(ImmutableBuffer)"),
      Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int: findType("Future<Codec0>(ImmutableBuffer{allowUpscaling:bool,cacheHeight:int?,cacheWidth:int?})"),
      Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int: findType("Future<Codec0>(ImmutableBuffer{getTargetSize:TargetImageSize(int,int)?})"),
      Future_PictureInfo: findType("Future<PictureInfo>"),
      Future_nullable_User_Function_String: findType("Future<User?>(String)"),
      Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(String{alignment:double,curve:Curve,duration:Duration,offset:double})"),
      Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(int{alignment:double,curve:Curve,duration:Duration,offset:double})"),
      GeneralConstantMap_AtomType_Measurement: findType("GeneralConstantMap<AtomType,Measurement>"),
      GeneralConstantMap_Format_int: findType("GeneralConstantMap<Format,int>"),
      GeneralConstantMap_ShortcutActivator_Intent: findType("GeneralConstantMap<ShortcutActivator,Intent>"),
      GeneralConstantMap_TraversalDirection_Period: findType("GeneralConstantMap<TraversalDirection,Period>"),
      GeneralConstantMap_int_CharacterMetrics: findType("GeneralConstantMap<int,CharacterMetrics>"),
      GeneralConstantMap_int_Color: findType("GeneralConstantMap<int,Color>"),
      GeneralConstantMap_of_AtomType_and_Map_AtomType_Measurement: findType("GeneralConstantMap<AtomType,Map<AtomType,Measurement>>"),
      GeneralConstantMap_of_List_String_and_EnvSpec: findType("GeneralConstantMap<List<String>,EnvSpec>"),
      GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode: findType("GeneralConstantMap<List<String>,FunctionSpec<GreenNode>>"),
      GeneralConstantMap_of_Mode_and_nullable_String: findType("GeneralConstantMap<Mode,String?>"),
      GeneralConstantSet_nullable_AtomType: findType("GeneralConstantSet<AtomType?>"),
      GptMarkdownTheme: findType("GptMarkdownTheme"),
      GptMarkdownThemeData: findType("GptMarkdownThemeData"),
      Gradient: findType("Gradient"),
      Gradient_2: findType("Gradient0"),
      GranularlyExtendSelectionEvent: findType("GranularlyExtendSelectionEvent"),
      GreenNode: findType("GreenNode"),
      GridViewObserveDisplayingChildModel: findType("GridViewObserveDisplayingChildModel"),
      Header: findType("Header"),
      HealthDataController: findType("HealthDataController"),
      HitTestEntry_HitTestTarget: findType("HitTestEntry<HitTestTarget>"),
      IfdDirectory: findType("IfdDirectory"),
      IfdValue: findType("IfdValue"),
      Image: findType("Image2"),
      ImageChunkEvent: findType("ImageChunkEvent"),
      ImageData: findType("ImageData"),
      ImageDescriptor: findType("ImageDescriptor"),
      ImageInfo: findType("ImageInfo"),
      ImageMessage: findType("ImageMessage"),
      ImageProvider_Object: findType("ImageProvider<Object>"),
      ImageStreamCompleter: findType("ImageStreamCompleter"),
      ImmutableBuffer: findType("ImmutableBuffer"),
      IndexedVertices: findType("IndexedVertices"),
      InheritedContext_nullable_Listenable: findType("InheritedContext<Listenable?>"),
      InheritedElement: findType("InheritedElement"),
      InheritedWidget: findType("InheritedWidget"),
      InlineSpan: findType("InlineSpan"),
      Iterable_RangeCharPredicate: findType("Iterable<RangeCharPredicate>"),
      Iterable_RenderBox: findType("Iterable<RenderBox>"),
      Iterable_SemanticsNode: findType("Iterable<SemanticsNode>"),
      Iterable_double: findType("Iterable<double>"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_nullable_Map_of_String_and_nullable_Object: findType("Iterable<Map<String,Object?>?>"),
      JSArray_Alignment: findType("JSArray<Alignment>"),
      JSArray_BoxShadow: findType("JSArray<BoxShadow>"),
      JSArray_BuildContext: findType("JSArray<BuildContext>"),
      JSArray_BuildResult: findType("JSArray<BuildResult>"),
      JSArray_ChatOperation: findType("JSArray<ChatOperation>"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_Color_2: findType("JSArray<Color0>"),
      JSArray_DelimiterConf: findType("JSArray<DelimiterConf>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_DrawCommand: findType("JSArray<DrawCommand>"),
      JSArray_EquationRowNode: findType("JSArray<EquationRowNode>"),
      JSArray_FontOptions: findType("JSArray<FontOptions>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_Gradient: findType("JSArray<Gradient0>"),
      JSArray_GreenNode: findType("JSArray<GreenNode>"),
      JSArray_GridViewObserveDisplayingChildModel: findType("JSArray<GridViewObserveDisplayingChildModel>"),
      JSArray_IconButton: findType("JSArray<IconButton>"),
      JSArray_Image: findType("JSArray<Image0>"),
      JSArray_ImageStreamListener: findType("JSArray<ImageStreamListener>"),
      JSArray_InlineSpan: findType("JSArray<InlineSpan>"),
      JSArray_ListTile: findType("JSArray<ListTile>"),
      JSArray_ListViewObserveDisplayingChildModel: findType("JSArray<ListViewObserveDisplayingChildModel>"),
      JSArray_List_EquationRowNode: findType("JSArray<List<EquationRowNode>>"),
      JSArray_List_GreenNode: findType("JSArray<List<GreenNode>>"),
      JSArray_List_TDSkeletonRowColObj: findType("JSArray<List<TDSkeletonRowColObj>>"),
      JSArray_List_int: findType("JSArray<List<int>>"),
      JSArray_MapEntry_String_MultipartFile: findType("JSArray<MapEntry<String,MultipartFile>>"),
      JSArray_MapEntry_String_String: findType("JSArray<MapEntry<String,String>>"),
      JSArray_Map_String_dynamic: findType("JSArray<Map<String,@>>"),
      JSArray_Map_of_String_and_nullable_MacroDefinition: findType("JSArray<Map<String,MacroDefinition?>>"),
      JSArray_MarkdownComponent: findType("JSArray<MarkdownComponent>"),
      JSArray_MathOptions: findType("JSArray<MathOptions>"),
      JSArray_MatrixColumnAlign: findType("JSArray<MatrixColumnAlign>"),
      JSArray_MatrixNode: findType("JSArray<MatrixNode>"),
      JSArray_MatrixSeparatorStyle: findType("JSArray<MatrixSeparatorStyle>"),
      JSArray_Measurement: findType("JSArray<Measurement>"),
      JSArray_Message: findType("JSArray<Message>"),
      JSArray_MultipartFile: findType("JSArray<MultipartFile>"),
      JSArray_Node: findType("JSArray<Node0>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_ObserverAutoTriggerObserveType: findType("JSArray<ObserverAutoTriggerObserveType>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_Paint: findType("JSArray<Paint0>"),
      JSArray_Parser_DtdExternalId: findType("JSArray<Parser<DtdExternalId>>"),
      JSArray_Parser_Object: findType("JSArray<Parser<Object>>"),
      JSArray_Parser_Record_2_String_and_XmlAttributeType: findType("JSArray<Parser<+(String,XmlAttributeType)>>"),
      JSArray_Parser_String: findType("JSArray<Parser<String>>"),
      JSArray_Parser_XmlEvent: findType("JSArray<Parser<XmlEvent>>"),
      JSArray_Parser_dynamic: findType("JSArray<Parser<@>>"),
      JSArray_Path: findType("JSArray<Path>"),
      JSArray_PathBuilder: findType("JSArray<PathBuilder>"),
      JSArray_PathCommand: findType("JSArray<PathCommand>"),
      JSArray_Path_2: findType("JSArray<Path0>"),
      JSArray_Point: findType("JSArray<Point>"),
      JSArray_PopupMenuItem_String: findType("JSArray<PopupMenuItem<String>>"),
      JSArray_RangeCharPredicate: findType("JSArray<RangeCharPredicate>"),
      JSArray_Rect: findType("JSArray<Rect>"),
      JSArray_RenderBox: findType("JSArray<RenderBox>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_SessionInfo: findType("JSArray<SessionInfo>"),
      JSArray_Shader: findType("JSArray<Shader>"),
      JSArray_SingleChildWidget: findType("JSArray<SingleChildWidget>"),
      JSArray_Size: findType("JSArray<Size>"),
      JSArray_SizedBox: findType("JSArray<SizedBox>"),
      JSArray_SliverViewportObserveDisplayingChildModel: findType("JSArray<SliverViewportObserveDisplayingChildModel>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_SymbolNode: findType("JSArray<SymbolNode>"),
      JSArray_TDSkeleton: findType("JSArray<TDSkeleton>"),
      JSArray_TDSkeletonRowColObj: findType("JSArray<TDSkeletonRowColObj>"),
      JSArray_TextAlign: findType("JSArray<TextAlign>"),
      JSArray_TextDecoration: findType("JSArray<TextDecoration>"),
      JSArray_TextSegment: findType("JSArray<TextSegment>"),
      JSArray_TextSpan: findType("JSArray<TextSpan>"),
      JSArray_Token: findType("JSArray<Token>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_XmlEvent: findType("JSArray<XmlEvent>"),
      JSArray_XmlStartElementEvent: findType("JSArray<XmlStartElementEvent>"),
      JSArray__ActiveItem: findType("JSArray<_ActiveItem>"),
      JSArray__Diagonal: findType("JSArray<_Diagonal>"),
      JSArray__PostponedUpdate: findType("JSArray<_PostponedUpdate>"),
      JSArray__Range: findType("JSArray<_Range>"),
      JSArray__RunMetrics: findType("JSArray<_RunMetrics>"),
      JSArray__TextConfig: findType("JSArray<_TextConfig>"),
      JSArray__TextPosition: findType("JSArray<_TextPosition>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_EquationRowNode: findType("JSArray<EquationRowNode?>"),
      JSArray_nullable_List_int: findType("JSArray<List<int>?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_2_Object_and_nullable_StackTrace: findType("JSArray<~(Object,StackTrace?)>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_nullable_DateTime: findType("JSArray<~(DateTime?)>"),
      JSObject: findType("JSObject0"),
      KeyEvent: findType("KeyEvent"),
      LabeledGlobalKey_EditableTextState: findType("LabeledGlobalKey<EditableTextState>"),
      LabeledGlobalKey_SliverAnimatedListState: findType("LabeledGlobalKey<SliverAnimatedListState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LabeledGlobalKey__ModalScopeState_dynamic: findType("LabeledGlobalKey<_ModalScopeState<@>>"),
      Layer: findType("Layer0"),
      LineElement: findType("LineElement"),
      LineParentData: findType("LineParentData"),
      LineToCommand: findType("LineToCommand"),
      LinkedList_ObserverListenerEntry_ObserveModel: findType("LinkedList<ObserverListenerEntry<ObserveModel>>"),
      LinkedList_SliverObserverListenerEntry: findType("LinkedList<SliverObserverListenerEntry>"),
      ListViewObserveDisplayingChildModel: findType("ListViewObserveDisplayingChildModel"),
      List_BuildContext: findType("List<BuildContext>"),
      List_ColorTriplet: findType("List<ColorTriplet>"),
      List_EquationRowNode: findType("List<EquationRowNode>"),
      List_FocusNode: findType("List<FocusNode>"),
      List_Gradient: findType("List<Gradient0>"),
      List_GreenNode: findType("List<GreenNode>"),
      List_Image: findType("List<Image0>"),
      List_InlineSpan: findType("List<InlineSpan>"),
      List_MathOptions: findType("List<MathOptions>"),
      List_Message: findType("List<Message>"),
      List_MultipartFile: findType("List<MultipartFile>"),
      List_Node: findType("List<Node0>"),
      List_Object: findType("List<Object>"),
      List_Path_Function_String: findType("List<Path>(String)"),
      List_SessionInfo: findType("List<SessionInfo>"),
      List_String: findType("List<String>"),
      List_TDSkeletonRowColObj: findType("List<TDSkeletonRowColObj>"),
      List_TextSegment: findType("List<TextSegment>"),
      List_Token: findType("List<Token>"),
      List_Widget: findType("List<Widget>"),
      List_XmlEvent: findType("List<XmlEvent>"),
      List_XmlEventAttribute: findType("List<XmlEventAttribute>"),
      List__ActiveItem: findType("List<_ActiveItem>"),
      List__PostponedUpdate: findType("List<_PostponedUpdate>"),
      List__RunMetrics: findType("List<_RunMetrics>"),
      List_double: findType("List<double>"),
      List_dynamic: findType("List<@>"),
      List_int: findType("List<int>"),
      List_nullable_BuildResult: findType("List<BuildResult?>"),
      List_nullable_EquationRowNode: findType("List<EquationRowNode?>"),
      List_nullable_List_int: findType("List<List<int>?>"),
      List_nullable_Object: findType("List<Object?>"),
      List_nullable_SyntaxNode: findType("List<SyntaxNode?>"),
      Listenable: findType("Listenable"),
      LoadMoreNotifier: findType("LoadMoreNotifier"),
      LocalDate: findType("LocalDate"),
      MacroContext: findType("MacroContext"),
      MacroDefinition: findType("MacroDefinition"),
      MapEntry_String_MultipartFile: findType("MapEntry<String,MultipartFile>"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      MapEntry_String_double: findType("MapEntry<String,double>"),
      MapEntry_of_String_and_List_List_int: findType("MapEntry<String,List<List<int>>>"),
      MapEntry_of_int_and_Map_int_String: findType("MapEntry<int,Map<int,String>>"),
      Map_DateTime_int: findType("Map<DateTime,int>"),
      Map_String_ProviderNode: findType("Map<String,ProviderNode>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_TraversalDirection_Period: findType("Map<TraversalDirection,Period>"),
      Map__FracPos_RenderBox: findType("Map<_FracPos,RenderBox>"),
      Map__FracPos_double: findType("Map<_FracPos,double>"),
      Map__ScriptPos_RenderBox: findType("Map<_ScriptPos,RenderBox>"),
      Map__ScriptPos_double: findType("Map<_ScriptPos,double>"),
      Map__SqrtPos_RenderBox: findType("Map<_SqrtPos,RenderBox>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_int_ObserveScrollChildModel: findType("Map<int,ObserveScrollChildModel>"),
      Map_int_RenderBox: findType("Map<int,RenderBox>"),
      Map_int_String_Function_String: findType("Map<int,String>(String)"),
      Map_int_double: findType("Map<int,double>"),
      Map_of_BuildContext_and_Map_int_ObserveScrollChildModel: findType("Map<BuildContext,Map<int,ObserveScrollChildModel>>"),
      Map_of_String_and_nullable_Object: findType("Map<String,Object?>"),
      Map_of_Type_and_Action_Intent: findType("Map<Type,Action<Intent>>"),
      MappedListIterable_ObserverAutoTriggerObserveType_Type: findType("MappedListIterable<ObserverAutoTriggerObserveType,Type>"),
      MappedListIterable_PathBuilder_Path: findType("MappedListIterable<PathBuilder,Path>"),
      MappedListIterable_Size_double: findType("MappedListIterable<Size,double>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_SymbolNode: findType("MappedListIterable<String,SymbolNode>"),
      MappedListIterable_String_Widget: findType("MappedListIterable<String,Widget>"),
      MappedListIterable_String_int: findType("MappedListIterable<String,int>"),
      MappedListIterable_double_double: findType("MappedListIterable<double,double>"),
      MappedListIterable_of_List_EquationRowNode_and_EquationRowNode: findType("MappedListIterable<List<EquationRowNode>,EquationRowNode>"),
      MappedListIterable_of_List_GreenNode_and_EquationRowNode: findType("MappedListIterable<List<GreenNode>,EquationRowNode>"),
      MappedListIterable_of_String_and_Map_int_String: findType("MappedListIterable<String,Map<int,String>>"),
      MarkdownComponent: findType("MarkdownComponent"),
      MatchesIterable_Token_String: findType("MatchesIterable<Token0<String>>"),
      MaterialColor: findType("MaterialColor"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MathController: findType("MathController"),
      MathOptions: findType("MathOptions"),
      Matrix4: findType("Matrix40"),
      Matrix4Tween: findType("Matrix4Tween"),
      Matrix4_2: findType("Matrix41"),
      MatrixColumnAlign: findType("MatrixColumnAlign"),
      MatrixSeparatorStyle: findType("MatrixSeparatorStyle"),
      MdWidget: findType("MdWidget"),
      Measurement: findType("Measurement"),
      MediaQuery: findType("MediaQuery"),
      MemoryImage: findType("MemoryImage"),
      Message: findType("Message"),
      ModalBottomSheetRoute_dynamic: findType("ModalBottomSheetRoute<@>"),
      MonthPicker: findType("MonthPicker"),
      MouseCursor: findType("MouseCursor"),
      MoveToCommand: findType("MoveToCommand"),
      Namespace_MacroDefinition: findType("Namespace<MacroDefinition>"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      Nested: findType("Nested"),
      NetworkImage: findType("NetworkImage0"),
      NetworkImage_2: findType("NetworkImage"),
      NextFocusIntent: findType("NextFocusIntent"),
      Node: findType("Node0"),
      NotificationListener_Notification: findType("NotificationListener<Notification0>"),
      NotificationListener_ScrollNotification: findType("NotificationListener<ScrollNotification>"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserveModel: findType("ObserveModel"),
      ObserveScrollChildModel: findType("ObserveScrollChildModel"),
      ObserverAutoTriggerObserveType: findType("ObserverAutoTriggerObserveType"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      ObserverWidgetScope_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification: findType("ObserverWidgetScope<ObserverController,ObserveModel,ScrollViewOnceObserveNotification,ObserverWidget<ObserverController,ObserveModel,ScrollViewOnceObserveNotification>>"),
      ObserverWidgetState_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification: findType("ObserverWidgetState<ObserverController,ObserveModel,ScrollViewOnceObserveNotification,ObserverWidget<ObserverController,ObserveModel,ScrollViewOnceObserveNotification>>"),
      ObserverWidgetTagManager: findType("ObserverWidgetTagManager"),
      Offset: findType("Offset"),
      OpacityLayer: findType("OpacityLayer"),
      OptionalParser_Record_2_String_and_XmlAttributeType: findType("OptionalParser<+(String,XmlAttributeType)>"),
      OptionalParser_String: findType("OptionalParser<String>"),
      OptionalParser_nullable_DtdExternalId: findType("OptionalParser<DtdExternalId?>"),
      OptionalParser_nullable_String: findType("OptionalParser<String?>"),
      PageController: findType("PageController"),
      PageMetrics: findType("PageMetrics"),
      PageView: findType("PageView"),
      Paint: findType("Paint"),
      PaintingBinding: findType("PaintingBinding"),
      ParametricCurve_double: findType("ParametricCurve<double>"),
      Parser_dynamic: findType("Parser<@>"),
      Path: findType("Path"),
      PathBuilder: findType("PathBuilder"),
      PathCommand: findType("PathCommand"),
      Path_Function_PathBuilder: findType("Path(PathBuilder)"),
      PatternData: findType("PatternData"),
      Period: findType("Period"),
      PictureInfo: findType("PictureInfo"),
      Point: findType("Point"),
      PointerDownEvent: findType("PointerDownEvent"),
      PointerEnterEvent: findType("PointerEnterEvent"),
      PointerExitEvent: findType("PointerExitEvent"),
      PopEntry_nullable_Object: findType("PopEntry<Object?>"),
      PositionDependentMixin_GreenNode: findType("PositionDependentMixin<GreenNode>"),
      PreviousFocusIntent: findType("PreviousFocusIntent"),
      ProviderNode: findType("ProviderNode"),
      Quaternion: findType("Quaternion"),
      Question: findType("Question"),
      Questionnaire: findType("Questionnaire"),
      RadioTheme: findType("RadioTheme"),
      Radio_bool: findType("Radio<bool>"),
      Radius: findType("Radius"),
      RangeCharPredicate: findType("RangeCharPredicate"),
      RangeSlider: findType("RangeSlider"),
      RangeValues: findType("RangeValues"),
      Record_2_Color_onSurface_and_Color_surfaceContainer: findType("+onSurface,surfaceContainer(Color,Color)"),
      Record_2_String_and_XmlAttributeType: findType("+(String,XmlAttributeType)"),
      Record_2_TextStyle_bodyLarge_and_Color_onSurface: findType("+bodyLarge,onSurface(TextStyle,Color)"),
      Record_2_double_and_double: findType("+(double,double)"),
      Record_4_TextStyle_labelSmall_and_Color_onSurface_and_BorderRadiusGeometry_shape_and_Color_surfaceContainerLow: findType("+labelSmall,onSurface,shape,surfaceContainerLow(TextStyle,Color,BorderRadiusGeometry,Color)"),
      Record_5_TextStyle_bodyMedium_and_Color_onSurface_and_Color_primary_and_Color_surfaceContainerHigh_and_Color_surfaceContainerLow: findType("+bodyMedium,onSurface,primary,surfaceContainerHigh,surfaceContainerLow(TextStyle,Color,Color,Color,Color)"),
      Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today: findType("+current,date,selectable,selected,style,today(bool,DateTime,bool,bool,FCalendarDayPickerStyle,bool)"),
      Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer: findType("+bodyMedium,labelSmall,onPrimary,onSurface,primary,shape,surfaceContainer(TextStyle,TextStyle,Color,Color,Color,BorderRadiusGeometry,Color)"),
      Rect: findType("Rect"),
      ReferenceParser_DtdExternalId: findType("ReferenceParser<DtdExternalId>"),
      ReferenceParser_List_XmlEventAttribute: findType("ReferenceParser<List<XmlEventAttribute>>"),
      ReferenceParser_Record_2_String_and_XmlAttributeType: findType("ReferenceParser<+(String,XmlAttributeType)>"),
      ReferenceParser_String: findType("ReferenceParser<String>"),
      ReferenceParser_XmlCDATAEvent: findType("ReferenceParser<XmlCDATAEvent>"),
      ReferenceParser_XmlCommentEvent: findType("ReferenceParser<XmlCommentEvent>"),
      ReferenceParser_XmlDeclarationEvent: findType("ReferenceParser<XmlDeclarationEvent>"),
      ReferenceParser_XmlDoctypeEvent: findType("ReferenceParser<XmlDoctypeEvent>"),
      ReferenceParser_XmlEndElementEvent: findType("ReferenceParser<XmlEndElementEvent>"),
      ReferenceParser_XmlEvent: findType("ReferenceParser<XmlEvent>"),
      ReferenceParser_XmlEventAttribute: findType("ReferenceParser<XmlEventAttribute>"),
      ReferenceParser_XmlProcessingEvent: findType("ReferenceParser<XmlProcessingEvent>"),
      ReferenceParser_XmlStartElementEvent: findType("ReferenceParser<XmlStartElementEvent>"),
      ReferenceParser_XmlTextEvent: findType("ReferenceParser<XmlTextEvent>"),
      ReferenceParser_dynamic: findType("ReferenceParser<@>"),
      ReferenceParser_void: findType("ReferenceParser<~>"),
      RegExpMatch: findType("RegExpMatch"),
      RenderAspectRatio: findType("RenderAspectRatio"),
      RenderBox: findType("RenderBox"),
      RenderCustomImageError: findType("RenderCustomImageError"),
      RenderCustomImageLoading: findType("RenderCustomImageLoading"),
      RenderCustomLayout_dynamic: findType("RenderCustomLayout<@>"),
      RenderDivider: findType("RenderDivider"),
      RenderEditableLine: findType("RenderEditableLine"),
      RenderLine: findType("RenderLine"),
      RenderMinDimension: findType("RenderMinDimension"),
      RenderPictureVectorGraphic: findType("RenderPictureVectorGraphic"),
      RenderRelativeWidthColumn: findType("RenderRelativeWidthColumn"),
      RenderResetBaseline: findType("RenderResetBaseline"),
      RenderResetDimension: findType("RenderResetDimension"),
      RenderShaderMask: findType("RenderShaderMask"),
      RenderShiftBaseline: findType("RenderShiftBaseline"),
      RenderSliverFillViewport: findType("RenderSliverFillViewport"),
      RenderSliverGrid: findType("RenderSliverGrid"),
      RenderVectorGraphic: findType("RenderVectorGraphic"),
      RenderViewportBase_ContainerParentDataMixin_RenderSliver: findType("RenderViewportBase<ContainerParentDataMixin<RenderSliver>>"),
      RenderWebVectorGraphic: findType("RenderWebVectorGraphic"),
      RenderWrap: findType("RenderWrap"),
      ResolvableParser_dynamic: findType("ResolvableParser<@>"),
      ResponseBody: findType("ResponseBody"),
      ReversedListIterable_Token: findType("ReversedListIterable<Token>"),
      Runes: findType("Runes"),
      SchedulerBinding: findType("SchedulerBinding"),
      ScrollBehavior: findType("ScrollBehavior"),
      ScrollNotification: findType("ScrollNotification"),
      ScrollPhysics: findType("ScrollPhysics"),
      SelectableText: findType("SelectableText"),
      SelectionEdgeUpdateEvent: findType("SelectionEdgeUpdateEvent"),
      SelectionGeometry: findType("SelectionGeometry"),
      SelectionStyle: findType("SelectionStyle"),
      SequenceParser8_of_String_and_String_and_String_and_nullable_DtdExternalId_and_String_and_nullable_String_and_String_and_String: findType("SequenceParser8<String,String,String,DtdExternalId?,String,String?,String,String>"),
      ServicesBinding: findType("ServicesBinding"),
      SessionInfo: findType("SessionInfo"),
      Set_Ticker: findType("Set<Ticker>"),
      Set_WidgetState: findType("Set<WidgetState>"),
      Shader: findType("Shader"),
      Shader_Function_Rect: findType("Shader(Rect)"),
      Shimmer: findType("Shimmer"),
      ShimmerDirection: findType("ShimmerDirection"),
      SingleChildState_SingleChildStatefulWidget: findType("SingleChildState<SingleChildStatefulWidget>"),
      SingleChildStatefulWidget: findType("SingleChildStatefulWidget"),
      SingleChildStatelessWidget: findType("SingleChildStatelessWidget"),
      Sink_String: findType("Sink<String>"),
      Size: findType("Size"),
      Size_Function_RenderBox: findType("Size(RenderBox)"),
      Size_Function_RenderBox_BoxConstraints: findType("Size(RenderBox,BoxConstraints)"),
      SkipParser_DtdExternalId: findType("SkipParser<DtdExternalId>"),
      SliderController: findType("SliderController"),
      SliderTheme: findType("SliderTheme"),
      SliverConstraints: findType("SliverConstraints"),
      SliverGridDelegateWithFixedCrossAxisCount: findType("SliverGridDelegateWithFixedCrossAxisCount"),
      SliverGridParentData: findType("SliverGridParentData"),
      SliverMultiBoxAdaptorElement: findType("SliverMultiBoxAdaptorElement"),
      SliverMultiBoxAdaptorParentData: findType("SliverMultiBoxAdaptorParentData"),
      SliverObserverHandleContextsResultModel_ObserveModel: findType("SliverObserverHandleContextsResultModel<ObserveModel>"),
      SliverObserverListenerEntry: findType("SliverObserverListenerEntry"),
      SliverViewportObserveDisplayingChildModel: findType("SliverViewportObserveDisplayingChildModel"),
      SpaceNode: findType("SpaceNode"),
      StackTrace: findType("StackTrace"),
      StreamBuilder_double: findType("StreamBuilder<double>"),
      StreamController_ImageChunkEvent: findType("StreamController<ImageChunkEvent>"),
      StreamController_double: findType("StreamController<double>"),
      StreamStateController: findType("StreamStateController"),
      StreamSubscription_ChatOperation: findType("StreamSubscription<ChatOperation>"),
      Stream_dynamic: findType("Stream<@>"),
      String: findType("String"),
      String_Function_Match: findType("String(Match)"),
      String_Function_String: findType("String(String)"),
      Success_String: findType("Success<String>"),
      SymbolNode: findType("SymbolNode"),
      SymbolNode_Function_String: findType("SymbolNode(String)"),
      SynchronousFuture_ByteData: findType("SynchronousFuture<ByteData>"),
      SynchronousFuture_FileImage: findType("SynchronousFuture<FileImage>"),
      SynchronousFuture_MemoryImage: findType("SynchronousFuture<MemoryImage>"),
      SynchronousFuture_NetworkImage: findType("SynchronousFuture<NetworkImage>"),
      SynchronousFuture_NetworkImage_2: findType("SynchronousFuture<NetworkImage0>"),
      SynchronousFuture_PictureInfo: findType("SynchronousFuture<PictureInfo>"),
      TDCheckbox: findType("TDCheckbox"),
      TDCheckboxGroup: findType("TDCheckboxGroup"),
      TDCheckboxGroupInherited: findType("TDCheckboxGroupInherited"),
      TDFormInherited: findType("TDFormInherited"),
      TDFormItem: findType("TDFormItem"),
      TDRadio: findType("TDRadio"),
      TDRadioGroup: findType("TDRadioGroup"),
      TDRangeSlider: findType("TDRangeSlider"),
      TDSkeletonRowColObj: findType("TDSkeletonRowColObj"),
      TDSlider: findType("TDSlider"),
      TableRow: findType("TableRow"),
      TapDragUpDetails: findType("TapDragUpDetails"),
      TexParser: findType("TexParser"),
      TexSymbolConfig: findType("TexSymbolConfig"),
      TextAlign: findType("TextAlign"),
      TextBaseline: findType("TextBaseline"),
      TextConfig: findType("TextConfig"),
      TextDirection: findType("TextDirection"),
      TextHeightBehavior: findType("TextHeightBehavior"),
      TextMessage: findType("TextMessage"),
      TextPainter: findType("TextPainter"),
      TextPosition: findType("TextPosition0"),
      TextScaler: findType("TextScaler"),
      TextSegment: findType("TextSegment"),
      TextSelection: findType("TextSelection"),
      TextSelectionControls: findType("TextSelectionControls"),
      TextStreamMessage: findType("TextStreamMessage"),
      TextStyle: findType("TextStyle"),
      Ticker: findType("Ticker"),
      Token: findType("Token"),
      TokenParser_String: findType("TokenParser<String>"),
      TransformLayer: findType("TransformLayer"),
      Tuple2_LayerLink_LayerLink: findType("Tuple2<LayerLink,LayerLink>"),
      Tuple2_double_double: findType("Tuple2<double,double>"),
      Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink: findType("Tuple3<TextSelection,LayerLink?,LayerLink?>"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      Type_Function_ObserverAutoTriggerObserveType: findType("Type(ObserverAutoTriggerObserveType)"),
      Uint8List: findType("Uint8List"),
      UnsupportedError: findType("UnsupportedError"),
      User: findType("User"),
      UserCache: findType("UserCache"),
      UserSessionController: findType("UserSessionController"),
      VListParentData: findType("VListParentData"),
      ValueKey_Record_2_LocalDate_and_LocalDate: findType("ValueKey<+(LocalDate,LocalDate)>"),
      ValueKey_String: findType("ValueKey<String>"),
      ValueListenableBuilder_FCalendarPickerType: findType("ValueListenableBuilder<FCalendarPickerType>"),
      ValueListenableBuilder_LocalDate: findType("ValueListenableBuilder<LocalDate>"),
      ValueListenableBuilder_bool: findType("ValueListenableBuilder<bool>"),
      ValueListenableBuilder_dynamic: findType("ValueListenableBuilder<@>"),
      ValueNotifier_FCalendarPickerType: findType("ValueNotifier<FCalendarPickerType>"),
      ValueNotifier_LocalDate: findType("ValueNotifier<LocalDate>"),
      ValueNotifier_bool: findType("ValueNotifier<bool>"),
      Vector4: findType("Vector40"),
      VectorGraphic: findType("VectorGraphic"),
      VerticalDirection: findType("VerticalDirection"),
      ViewportOffset: findType("ViewportOffset"),
      Visitor_Node_AffineMatrix: findType("Visitor<Node0,AffineMatrix>"),
      WhereIterable_String: findType("WhereIterable<String>"),
      Widget: findType("Widget"),
      WidgetState: findType("WidgetState"),
      WidgetStatePropertyAll_EdgeInsetsGeometry: findType("WidgetStatePropertyAll<EdgeInsetsGeometry>"),
      WidgetStatePropertyAll_nullable_Size: findType("WidgetStatePropertyAll<Size?>"),
      Widget_Function_2_BuildContext_and_Animation_double: findType("Widget(BuildContext,Animation<double>)"),
      Widget_Function_3_BuildContext_and_Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today_and_nullable_Widget: findType("Widget(BuildContext,+current,date,selectable,selected,style,today(bool,DateTime,bool,bool,FCalendarDayPickerStyle,bool),Widget?)"),
      Widget_Function_3_BuildContext_and_Set_WidgetState_and_nullable_Widget: findType("Widget(BuildContext,Set<WidgetState>,Widget?)"),
      Widget_Function_BuildContext_FDialogStyle: findType("Widget(BuildContext,FDialogStyle)"),
      Widget_Function_String: findType("Widget(String)"),
      WidgetsBinding: findType("WidgetsBinding"),
      WrapAlignment: findType("WrapAlignment"),
      WrapCrossAlignment: findType("WrapCrossAlignment"),
      WrapParentData: findType("WrapParentData"),
      Wrapper_AnimationController: findType("Wrapper<AnimationController>"),
      XFile: findType("XFile"),
      XmlCDATAEvent: findType("XmlCDATAEvent"),
      XmlCommentEvent: findType("XmlCommentEvent"),
      XmlDeclarationEvent: findType("XmlDeclarationEvent"),
      XmlDoctypeEvent: findType("XmlDoctypeEvent"),
      XmlEndElementEvent: findType("XmlEndElementEvent"),
      XmlEntityMapping: findType("XmlEntityMapping"),
      XmlEvent: findType("XmlEvent"),
      XmlEventAttribute: findType("XmlEventAttribute"),
      XmlProcessingEvent: findType("XmlProcessingEvent"),
      XmlStartElementEvent: findType("XmlStartElementEvent"),
      XmlTextEvent: findType("XmlTextEvent"),
      YearPicker: findType("YearPicker"),
      _ActiveItem: findType("_ActiveItem"),
      _AdjustSliderIntent: findType("_AdjustSliderIntent"),
      _AsyncCompleter_JSObject: findType("_AsyncCompleter<JSObject0>"),
      _AsyncCompleter_Record_2_double_and_double: findType("_AsyncCompleter<+(double,double)>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _CombiningGestureArenaMember: findType("_CombiningGestureArenaMember"),
      _Diagonal: findType("_Diagonal"),
      _EndEnvironmentNode: findType("_EndEnvironmentNode"),
      _FracPos: findType("_FracPos"),
      _Future_JSObject: findType("_Future<JSObject0>"),
      _Future_Record_2_double_and_double: findType("_Future<+(double,double)>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_void: findType("_Future<~>"),
      _GridDelegate: findType("_GridDelegate"),
      _LeftRightRightNode: findType("_LeftRightRightNode"),
      _NestedHook: findType("_NestedHook"),
      _NestedHookElement: findType("_NestedHookElement"),
      _NodeSpacingConf: findType("_NodeSpacingConf"),
      _PagePosition: findType("_PagePosition"),
      _PathOffset: findType("_PathOffset"),
      _PatternState: findType("_PatternState"),
      _PictureData: findType("_PictureData"),
      _RenderBottomSheetLayoutWithSizeListener: findType("_RenderBottomSheetLayoutWithSizeListener"),
      _RenderRangeSlider: findType("_RenderRangeSlider"),
      _RenderSelectableAdapter: findType("_RenderSelectableAdapter"),
      _RenderSlider: findType("_RenderSlider"),
      _RenderSliverFractionalPadding: findType("_RenderSliverFractionalPadding"),
      _RenderValueIndicator: findType("_RenderValueIndicator0"),
      _RenderValueIndicator_2: findType("_RenderValueIndicator"),
      _ScriptPos: findType("_ScriptPos"),
      _ShimmerFilter: findType("_ShimmerFilter"),
      _SqrtPos: findType("_SqrtPos"),
      _StreamIterator_String: findType("_StreamIterator<String>"),
      _SvgGroupTuple: findType("_SvgGroupTuple"),
      _SyncStarIterable_PathSegmentData: findType("_SyncStarIterable<PathSegmentData>"),
      _SyncStarIterable_XmlEvent: findType("_SyncStarIterable<XmlEvent>"),
      _WidgetStatePropertyWith_Color: findType("_WidgetStatePropertyWith<Color>"),
      _WidgetStatePropertyWith_MouseCursor: findType("_WidgetStatePropertyWith<MouseCursor>"),
      _WidgetStatePropertyWith_nullable_Color: findType("_WidgetStatePropertyWith<Color?>"),
      bool: findType("bool"),
      bool_Function_LocalDate: findType("bool(LocalDate)"),
      bool_Function_String: findType("bool(String)"),
      double: findType("double"),
      double_Function_RenderBox_double: findType("double(RenderBox,double)"),
      double_Function_Size: findType("double(Size)"),
      double_Function_double: findType("double(double)"),
      dynamic: findType("@"),
      dynamic_Function_String: findType("@(String)"),
      int: findType("int"),
      int_Function_String: findType("int(String)"),
      nullable_AlignmentGeometryTween: findType("AlignmentGeometryTween?"),
      nullable_Animation_double: findType("Animation<double>?"),
      nullable_AttributedNode_Function_String: findType("AttributedNode?(String)"),
      nullable_BorderSide: findType("BorderSide?"),
      nullable_BoxConstraintsTween: findType("BoxConstraintsTween?"),
      nullable_BoxConstraints_Function_double: findType("BoxConstraints(double)?"),
      nullable_BoxConstraints_Function_double_double: findType("BoxConstraints(double,double)?"),
      nullable_BuildResult: findType("BuildResult?"),
      nullable_ChangeNotifier: findType("ChangeNotifier?"),
      nullable_Color: findType("Color?"),
      nullable_ColorFilterLayer: findType("ColorFilterLayer?"),
      nullable_Color_2: findType("Color1?"),
      nullable_CustomLayoutId_int: findType("CustomLayoutId<int>?"),
      nullable_DecorationTween: findType("DecorationTween?"),
      nullable_DtdExternalId: findType("DtdExternalId?"),
      nullable_EdgeInsetsGeometryTween: findType("EdgeInsetsGeometryTween?"),
      nullable_EquationRowNode: findType("EquationRowNode?"),
      nullable_Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(String{alignment:double,curve:Curve,duration:Duration,offset:double})?"),
      nullable_Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(int{alignment:double,curve:Curve,duration:Duration,offset:double})?"),
      nullable_GlobalKey_State_StatefulWidget: findType("GlobalKey<State<StatefulWidget>>?"),
      nullable_GptMarkdownThemeData: findType("GptMarkdownThemeData?"),
      nullable_GreenNode: findType("GreenNode?"),
      nullable_ImageChunkEvent: findType("ImageChunkEvent?"),
      nullable_ImageInfo: findType("ImageInfo?"),
      nullable_ImageProvider_Object: findType("ImageProvider<Object>?"),
      nullable_Intent: findType("Intent?"),
      nullable_LinkedList_SliverObserverListenerEntry: findType("LinkedList<SliverObserverListenerEntry>?"),
      nullable_List_String: findType("List<String>?"),
      nullable_List_double: findType("List<double>?"),
      nullable_List_int: findType("List<int>?"),
      nullable_List_nullable_BuildResult: findType("List<BuildResult?>?"),
      nullable_List_nullable_List_int: findType("List<List<int>?>?"),
      nullable_Listenable: findType("Listenable?"),
      nullable_LongPressStartDetails: findType("LongPressStartDetails?"),
      nullable_MacroDefinition: findType("MacroDefinition?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_of_String_and_nullable_Object: findType("Map<String,Object?>?"),
      nullable_Matrix4Tween: findType("Matrix4Tween?"),
      nullable_MessageGroupStatus: findType("MessageGroupStatus?"),
      nullable_MessagesGroupingMode: findType("MessagesGroupingMode?"),
      nullable_MouseCursor: findType("MouseCursor?"),
      nullable_Node: findType("Node0?"),
      nullable_Object: findType("Object?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_RenderObject: findType("RenderObject?"),
      nullable_Result_XmlEvent: findType("Result<XmlEvent>?"),
      nullable_ShaderMaskEngineLayer: findType("ShaderMaskEngineLayer0?"),
      nullable_ShaderMaskLayer: findType("ShaderMaskLayer?"),
      nullable_SliverObserverHandleContextsResultModel_ObserveModel: findType("SliverObserverHandleContextsResultModel<ObserveModel>?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_StreamSubscription_ChatOperation: findType("StreamSubscription<ChatOperation>?"),
      nullable_String: findType("String?"),
      nullable_String_Function_Match: findType("String(Match)?"),
      nullable_String_Function_String: findType("String(String)?"),
      nullable_SyntaxNode: findType("SyntaxNode?"),
      nullable_TextEditingController: findType("TextEditingController?"),
      nullable_TextSelection: findType("TextSelection?"),
      nullable_Thumb: findType("Thumb?"),
      nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic: findType("Tween<@>?(Tween<@>?,@,Tween<@>(@))"),
      nullable_User: findType("User?"),
      nullable_Widget: findType("Widget?"),
      nullable_WidgetStateProperty_MouseCursor: findType("WidgetStateProperty<MouseCursor>?"),
      nullable_XmlEvent: findType("XmlEvent?"),
      nullable__NestedHookElement: findType("_NestedHookElement?"),
      nullable_bool: findType("bool?"),
      nullable_double_Function_double: findType("double(double)?"),
      nullable_dynamic_Function: findType("@()?"),
      nullable_int: findType("int?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_2_BuildContext_and_Message_$named_details_LongPressStartDetails_and_index_int: findType("~(BuildContext,Message{details:LongPressStartDetails,index:int})?"),
      nullable_void_Function_2_BuildContext_and_Message_$named_details_TapUpDetails_and_index_int: findType("~(BuildContext,Message{details:TapUpDetails,index:int})?"),
      nullable_void_Function_2_BuildContext_and_Message_$named_index_int: findType("~(BuildContext,Message{index:int})?"),
      nullable_void_Function_RangeValues: findType("~(RangeValues)?"),
      nullable_void_Function_String: findType("~(String)?"),
      nullable_void_Function_bool: findType("~(bool)?"),
      nullable_void_Function_double: findType("~(double)?"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_AnimationStatus: findType("~(AnimationStatus)"),
      void_Function_DateTime: findType("~(DateTime)"),
      void_Function_LocalDate: findType("~(LocalDate)"),
      void_Function_Node: findType("~(Node0)"),
      void_Function_Offset_RenderBox: findType("~(Offset,RenderBox)"),
      void_Function_PaintingContext_Offset: findType("~(PaintingContext,Offset)"),
      void_Function_RangeValues: findType("~(RangeValues)"),
      void_Function_Size: findType("~(Size)"),
      void_Function_Timer: findType("~(Timer)"),
      void_Function_double: findType("~(double)"),
      void_Function_int_dynamic: findType("~(int,@)"),
      void_Function_void_Function: findType("~(~())")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.AffineMatrix_qrl = new A.AffineMatrix(1, 0, 0, 1, 0, 0, 1);
    B.Alignment_1_m1 = new C.Alignment(1, -1);
    B.Alignment_Q0E = new C.Alignment(1, 0.268);
    B.Alignment_m1_1 = new C.Alignment(-1, 1);
    B.Alignment_yfV = new C.Alignment(-1, -0.268);
    B.AtomType_0 = new A.AtomType(0, "ord");
    B.AtomType_1 = new A.AtomType(1, "op");
    B.AtomType_2 = new A.AtomType(2, "bin");
    B.AtomType_3 = new A.AtomType(3, "rel");
    B.AtomType_4 = new A.AtomType(4, "open");
    B.AtomType_5 = new A.AtomType(5, "close");
    B.AtomType_8 = new A.AtomType(8, "spacing");
    B.BlendMode_30 = new A.BlendMode0(3, "srcOver");
    B.BorderSide_5XO = new C.BorderSide(D.Color_Edl, 0, D.BorderStyle_1, -1);
    B.BorderSide_fqe = new C.BorderSide(D.Color_Edl, 2, D.BorderStyle_1, -1);
    B.BoxConstraints_NPC = new C.BoxConstraints(280, 560, 0, 1 / 0);
    B.BoxConstraints_yse = new C.BoxConstraints(0, 1 / 0, 0, 300);
    B.BoxDecoration_6xp = new C.BoxDecoration(D.Color_wst, null, null, null, null, null, null, D.BoxShape_0);
    B.C_DropSliderValueIndicatorShape = new A.DropSliderValueIndicatorShape();
    B.C_RectangularRangeSliderValueIndicatorShape = new A.RectangularRangeSliderValueIndicatorShape();
    B.C_RectangularSliderValueIndicatorShape = new A.RectangularSliderValueIndicatorShape();
    B.C_RoundRangeSliderThumbShape = new A.RoundRangeSliderThumbShape();
    B.C_RoundRangeSliderTickMarkShape = new A.RoundRangeSliderTickMarkShape();
    B.C_RoundSliderOverlayShape = new A.RoundSliderOverlayShape();
    B.C_RoundSliderThumbShape = new A.RoundSliderThumbShape();
    B.C_RoundedRectRangeSliderTrackShape = new A.RoundedRectRangeSliderTrackShape();
    B.C_RoundedRectSliderTrackShape = new A.RoundedRectSliderTrackShape();
    B.C_SvgTheme = new A.SvgTheme();
    B.C_TDNoOverlayShape = new A.TDNoOverlayShape();
    B.C_TDSkeletonRowColStyle = new A.TDSkeletonRowColStyle();
    B.C_VectorGraphicsCodec = new A.VectorGraphicsCodec();
    B.C_WhitespaceCharPredicate = new A.WhitespaceCharPredicate();
    B.Object_Vls = {amp: 0, apos: 1, gt: 2, lt: 3, quot: 4};
    B.Map_D0Awe = new C.ConstantStringMap(B.Object_Vls, ["&", "'", ">", "<", '"'], type$.ConstantStringMap_String_String);
    B.C_XmlDefaultEntityMapping = new A.XmlDefaultEntityMapping();
    B.C__DefaultPictureFactory = new A._DefaultPictureFactory();
    B.C__EmptyNode = new A._EmptyNode();
    B.ChannelOrder_0 = new A.ChannelOrder(0, "rgba");
    B.ChannelOrder_1 = new A.ChannelOrder(1, "bgra");
    B.ChannelOrder_2 = new A.ChannelOrder(2, "abgr");
    B.ChannelOrder_3 = new A.ChannelOrder(3, "argb");
    B.ChannelOrder_4 = new A.ChannelOrder(4, "rgb");
    B.ChannelOrder_5 = new A.ChannelOrder(5, "bgr");
    B.ChannelOrder_6 = new A.ChannelOrder(6, "grayAlpha");
    B.ChannelOrder_7 = new A.ChannelOrder(7, "red");
    B.CharacterMetrics_0_0_0_0 = new A.CharacterMetrics(0, 0, 0, 0);
    B.ChatOperationType_0 = new A.ChatOperationType(0, "insert");
    B.ChatOperationType_2 = new A.ChatOperationType(2, "update");
    B.ChatOperationType_3 = new A.ChatOperationType(3, "remove");
    B.ChatOperationType_4 = new A.ChatOperationType(4, "set");
    B.PathCommandType_3 = new A.PathCommandType(3, "close");
    B.CloseCommand_PathCommandType_3 = new A.CloseCommand(B.PathCommandType_3);
    B.Color_4294967295 = new A.Color0(4294967295);
    B.ColorOrNone_false_Color_4294967295 = new A.ColorOrNone(false, B.Color_4294967295);
    B.ColorOrNone_false_null = new A.ColorOrNone(false, null);
    B.ColorOrNone_true_null = new A.ColorOrNone(true, null);
    B.Color_4278190080 = new A.Color0(4278190080);
    B.Color_SHX = new C.Color(0.5, 0, 0, 0, D.ColorSpace_0);
    B.Color_p2H = new C.Color(1, 0.9529411764705882, 0.9529411764705882, 0.9529411764705882, D.ColorSpace_0);
    B.IconData_57523_MaterialIcons_null_false = new C.IconData(57523, "MaterialIcons", null, false);
    B.Icon_PJ0 = new C.Icon(B.IconData_57523_MaterialIcons_null_false, null, null, null, null);
    B.IconData_58737_MaterialIcons_null_true = new C.IconData(58737, "MaterialIcons", null, true);
    B.Icon_kve = new C.Icon(B.IconData_58737_MaterialIcons_null_true, null, null, null, null);
    B.Radius_24_24 = new C.Radius(24, 24);
    B.BorderRadius_KTf = new C.BorderRadius(B.Radius_24_24, B.Radius_24_24, B.Radius_24_24, B.Radius_24_24);
    B.OutlineInputBorder_Yew = new C.OutlineInputBorder(4, B.BorderRadius_KTf, D.BorderSide_Ah5);
    B.TextCapitalization_10 = new C.TextCapitalization0(1, "sentences");
    B.SendButtonVisibilityMode_2 = new A.SendButtonVisibilityMode(2, "disabled");
    B.InputClearMode_0 = new A.InputClearMode(0, "always");
    B.Composer_52m = new A.Composer(null, "Type a message", null);
    B.ConnectionState_0 = new A.ConnectionState(0, "none");
    B.ConnectionState_1 = new A.ConnectionState(1, "waiting");
    B.ConnectionState_2 = new A.ConnectionState(2, "active");
    B.ConnectionState_3 = new A.ConnectionState(3, "done");
    B.ConstColorRgb8_4294967295 = new A.ConstColorRgb8(4294967295);
    B.ConstantCharPredicate_false = new A.ConstantCharPredicate(false);
    B.ConstantCharPredicate_true = new A.ConstantCharPredicate(true);
    B.Cubic_C8c = new C.Cubic(0, 0, 0.2, 1);
    B.CustomImageError_null = new A.CustomImageError(null);
    B.DateUnit_0 = new A.DateUnit(0, "years");
    B.DateUnit_1 = new A.DateUnit(1, "months");
    B.DateUnit_2 = new A.DateUnit(2, "days");
    B.DecodeResponse_true_null = new A.DecodeResponse(true, null);
    B.Divider_null = new A.Divider(null);
    B.DrawCommandType_0 = new A.DrawCommandType(0, "path");
    B.DrawCommandType_2 = new A.DrawCommandType(2, "saveLayer");
    B.DrawCommandType_4 = new A.DrawCommandType(4, "clip");
    B.DrawCommandType_6 = new A.DrawCommandType(6, "text");
    B.DrawCommandType_7 = new A.DrawCommandType(7, "image");
    B.DrawCommandType_8 = new A.DrawCommandType(8, "pattern");
    B.DrawCommandType_9 = new A.DrawCommandType(9, "textPosition");
    B.DrawCommandType_5 = new A.DrawCommandType(5, "mask");
    B.DrawCommand_2Th = new A.DrawCommand(null, B.DrawCommandType_5, null, null, null, null);
    B.DrawCommandType_3 = new A.DrawCommandType(3, "restore");
    B.DrawCommand_AWW = new A.DrawCommand(null, B.DrawCommandType_3, null, null, null, null);
    B.Duration_1000 = new C.Duration(1000);
    B.EdgeInsetsDirectional_0_0_7_0 = new C.EdgeInsetsDirectional(0, 0, 7, 0);
    B.EdgeInsetsDirectional_12_8_16_8 = new C.EdgeInsetsDirectional(12, 8, 16, 8);
    B.EdgeInsetsDirectional_7_0_0_0 = new C.EdgeInsetsDirectional(7, 0, 0, 0);
    B.EdgeInsetsDirectional_8_0_0_0 = new C.EdgeInsetsDirectional(8, 0, 0, 0);
    B.EdgeInsets_0_0_0_120 = new C.EdgeInsets(0, 0, 0, 120);
    B.EdgeInsets_0_0_0_4 = new C.EdgeInsets(0, 0, 0, 4);
    B.EdgeInsets_0_0_16_0 = new C.EdgeInsets(0, 0, 16, 0);
    B.EdgeInsets_0_12_0_12 = new C.EdgeInsets(0, 12, 0, 12);
    B.EdgeInsets_0_16_0_16 = new C.EdgeInsets(0, 16, 0, 16);
    B.EdgeInsets_15_0_15_0 = new C.EdgeInsets(15, 0, 15, 0);
    B.EdgeInsets_16_0_0_0 = new C.EdgeInsets(16, 0, 0, 0);
    B.EdgeInsets_16_10_16_10 = new C.EdgeInsets(16, 10, 16, 10);
    B.EdgeInsets_24_24_24_24 = new C.EdgeInsets(24, 24, 24, 24);
    B.EdgeInsets_2_0_0_0 = new C.EdgeInsets(2, 0, 0, 0);
    B.EdgeInsets_2_2_2_2 = new C.EdgeInsets(2, 2, 2, 2);
    B.EdgeInsets_2_8_0_0 = new C.EdgeInsets(2, 8, 0, 0);
    B.EdgeInsets_4_0_0_0 = new C.EdgeInsets(4, 0, 0, 0);
    B.EmptyChatList_null = new A.EmptyChatList(null);
    B.List_U4b = C._setArrayType(makeConstList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2126, 0.7152, 0.0722, 0, 0]), type$.JSArray_double);
    B.EngineColorFilter_fTn = new C.EngineColorFilter(null, null, B.List_U4b, D.ColorFilterType_1);
    B.Expanded_3Qw = new C.Expanded(1, D.FlexFit_0, D.SizedBox_null_null_null_null, null);
    B.FCalendarPickerType_0 = new A.FCalendarPickerType(0, "day");
    B.FCalendarPickerType_1 = new A.FCalendarPickerType(1, "yearMonth");
    B.Fill_Color_4278190080_null = new A.Fill(B.Color_4278190080, null);
    B.FlutterMathMode_2 = new A.FlutterMathMode(2, "view");
    B.List_empty21 = C._setArrayType(makeConstList([]), type$.JSArray_FontOptions);
    B.FontOptions_EtN = new A.FontOptions("Main", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.FontStyle_1 = new C.FontStyle(1, "italic");
    B.FontOptions_avb = new A.FontOptions("Main", D.FontWeight_6_700, D.FontStyle_0, B.List_empty21);
    B.List_aRK = C._setArrayType(makeConstList([B.FontOptions_avb]), type$.JSArray_FontOptions);
    B.FontOptions_OsF = new A.FontOptions("Math", D.FontWeight_6_700, B.FontStyle_1, B.List_aRK);
    B.FontOptions_nwN = new A.FontOptions("Typewriter", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.FontWeight_0 = new A.FontWeight0(0, "w100");
    B.FontWeight_1 = new A.FontWeight0(1, "w200");
    B.FontWeight_2 = new A.FontWeight0(2, "w300");
    B.FontWeight_3 = new A.FontWeight0(3, "w400");
    B.FontWeight_4 = new A.FontWeight0(4, "w500");
    B.FontWeight_5 = new A.FontWeight0(5, "w600");
    B.FontWeight_6 = new A.FontWeight0(6, "w700");
    B.FontWeight_7 = new A.FontWeight0(7, "w800");
    B.FontWeight_8 = new A.FontWeight0(8, "w900");
    B.Format_0 = new A.Format(0, "uint1");
    B.Format_1 = new A.Format(1, "uint2");
    B.Format_10 = new A.Format(10, "float32");
    B.Format_11 = new A.Format(11, "float64");
    B.Format_2 = new A.Format(2, "uint4");
    B.Format_3 = new A.Format(3, "uint8");
    B.Format_4 = new A.Format(4, "uint16");
    B.Format_5 = new A.Format(5, "uint32");
    B.Format_6 = new A.Format(6, "int8");
    B.Format_7 = new A.Format(7, "int16");
    B.Format_8 = new A.Format(8, "int32");
    B.Format_9 = new A.Format(9, "float16");
    B.FrameType_2 = new A.FrameType(2, "sequence");
    B.GradientUnitMode_0 = new A.GradientUnitMode(0, "objectBoundingBox");
    B.GradientUnitMode_1 = new A.GradientUnitMode(1, "userSpaceOnUse");
    B.GradientUnitMode_2 = new A.GradientUnitMode(2, "transformed");
    B.IconData_57509_MaterialIcons_null_true = new C.IconData(57509, "MaterialIcons", null, true);
    B.IconData_57686_MaterialIcons_null_false = new C.IconData(57686, "MaterialIcons", null, false);
    B.IconData_57687_MaterialIcons_null_false = new C.IconData(57687, "MaterialIcons", null, false);
    B.IconData_57688_MaterialIcons_null_false = new C.IconData(57688, "MaterialIcons", null, false);
    B.IconData_57689_MaterialIcons_null_false = new C.IconData(57689, "MaterialIcons", null, false);
    B.IconData_57746_MaterialIcons_null_false = new C.IconData(57746, "MaterialIcons", null, false);
    B.IconData_57846_MaterialIcons_null_false = new C.IconData(57846, "MaterialIcons", null, false);
    B.IconData_57847_MaterialIcons_null_false = new C.IconData(57847, "MaterialIcons", null, false);
    B.IconData_58627_MaterialIcons_null_false = new C.IconData(58627, "MaterialIcons", null, false);
    B.IconData_58628_MaterialIcons_null_false = new C.IconData(58628, "MaterialIcons", null, false);
    B.IconData_58917_MaterialIcons_null_false = new C.IconData(58917, "MaterialIcons", null, false);
    B.IconData_58919_MaterialIcons_null_false = new C.IconData(58919, "MaterialIcons", null, false);
    B.IconData_61267_MaterialIcons_null_false = new C.IconData(61267, "MaterialIcons", null, false);
    B.IconData_61284_MaterialIcons_null_false = new C.IconData(61284, "MaterialIcons", null, false);
    B.IconData_984763_MaterialIcons_null_false = new C.IconData(984763, "MaterialIcons", null, false);
    B.Icon_5Oy = new C.Icon(B.IconData_984763_MaterialIcons_null_false, null, null, null, null);
    B.IconData_58644_MaterialIcons_null_false = new C.IconData(58644, "MaterialIcons", null, false);
    B.Icon_EYb = new C.Icon(B.IconData_58644_MaterialIcons_null_false, null, null, null, null);
    B.IconData_58679_MaterialIcons_null_false = new C.IconData(58679, "MaterialIcons", null, false);
    B.Icon_Kxw = new C.Icon(B.IconData_58679_MaterialIcons_null_false, null, null, null, null);
    B.IconData_58195_MaterialIcons_null_false = new C.IconData(58195, "MaterialIcons", null, false);
    B.Icon_Ngt = new C.Icon(B.IconData_58195_MaterialIcons_null_false, null, null, null, null);
    B.IconData_57415_MaterialIcons_null_false = new C.IconData(57415, "MaterialIcons", null, false);
    B.Icon_Qoy = new C.Icon(B.IconData_57415_MaterialIcons_null_false, null, null, null, null);
    B.IconData_58162_MaterialIcons_null_false = new C.IconData(58162, "MaterialIcons", null, false);
    B.Icon_Sl6 = new C.Icon(B.IconData_58162_MaterialIcons_null_false, null, null, null, null);
    B.IconData_57694_MaterialIcons_null_true = new C.IconData(57694, "MaterialIcons", null, true);
    B.Icon_TfW = new C.Icon(B.IconData_57694_MaterialIcons_null_true, null, null, null, null);
    B.Icon_pPk = new C.Icon(D.IconData_57695_MaterialIcons_null_true, 15, null, null, null);
    B.IconData_57785_MaterialIcons_null_false = new C.IconData(57785, "MaterialIcons", null, false);
    B.Icon_qkB = new C.Icon(B.IconData_57785_MaterialIcons_null_false, null, null, null, null);
    B.IfdValueType_0 = new A.IfdValueType(0, "none");
    B.IfdValueType_2 = new A.IfdValueType(2, "ascii");
    B.IfdValueType_3 = new A.IfdValueType(3, "short");
    B.IfdValueType_4 = new A.IfdValueType(4, "long");
    B.IfdValueType_5 = new A.IfdValueType(5, "rational");
    B.IfdValueType_7 = new A.IfdValueType(7, "undefined");
    B.InitialScrollToEndMode_1 = new A.InitialScrollToEndMode(1, "jump");
    B.JpegChroma_0 = new A.JpegChroma(0, "yuv444");
    B.LinkPreviewPosition_1 = new A.LinkPreviewPosition(1, "bottom");
    B.ListEquality_DefaultEquality0 = new C.ListEquality(D.C_DefaultEquality, C.findType("ListEquality<XmlEventAttribute>"));
    B.List_192_193_194 = C._setArrayType(makeConstList([192, 193, 194]), type$.JSArray_int);
    B.MathSize_0 = new A.MathSize(0, "tiny");
    B.MathSize_1 = new A.MathSize(1, "size2");
    B.MathSize_2 = new A.MathSize(2, "scriptsize");
    B.MathSize_3 = new A.MathSize(3, "footnotesize");
    B.MathSize_4 = new A.MathSize(4, "small");
    B.MathSize_5 = new A.MathSize(5, "normalsize");
    B.MathSize_6 = new A.MathSize(6, "large");
    B.MathSize_7 = new A.MathSize(7, "Large");
    B.MathSize_8 = new A.MathSize(8, "LARGE");
    B.MathSize_9 = new A.MathSize(9, "huge");
    B.MathSize_10 = new A.MathSize(10, "HUGE");
    B.List_1HU = C._setArrayType(makeConstList([B.MathSize_0, B.MathSize_1, B.MathSize_2, B.MathSize_3, B.MathSize_4, B.MathSize_5, B.MathSize_6, B.MathSize_7, B.MathSize_8, B.MathSize_9, B.MathSize_10]), C.findType("JSArray<MathSize>"));
    B.List_252_243_207_63 = C._setArrayType(makeConstList([252, 243, 207, 63]), type$.JSArray_int);
    B.List_2BR = C._setArrayType(makeConstList([0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 125]), type$.JSArray_int);
    B.List_3PE = C._setArrayType(makeConstList([0, 239, 300, 360, 420]), type$.JSArray_double);
    B.List_63_207_243_252 = C._setArrayType(makeConstList([63, 207, 243, 252]), type$.JSArray_int);
    B.List_6sz = C._setArrayType(makeConstList([17, 18, 24, 47, 99, 99, 99, 99, 18, 21, 26, 66, 99, 99, 99, 99, 24, 26, 56, 99, 99, 99, 99, 99, 47, 66, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99]), type$.JSArray_int);
    B.List_74c = C._setArrayType(makeConstList([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]), type$.JSArray_int);
    B.List_Fyt = C._setArrayType(makeConstList([4, 5, 4, 5, 6, 7, 6, 7]), type$.JSArray_int);
    B.List_aWa = C._setArrayType(makeConstList([5, 5, 5, 5, 7, 7, 7, 7]), type$.JSArray_int);
    B.List_VJE = C._setArrayType(makeConstList([2, 3, 4, 5, 6, 7, 6, 7]), type$.JSArray_int);
    B.List_802 = C._setArrayType(makeConstList([3, 3, 5, 5, 7, 7, 7, 7]), type$.JSArray_int);
    B.List_XRB = C._setArrayType(makeConstList([1, 1, 3, 3, 5, 5, 7, 7]), type$.JSArray_int);
    B.List_p6G = C._setArrayType(makeConstList([0, 1, 2, 3, 2, 3, 2, 3]), type$.JSArray_int);
    B.List_grk = C._setArrayType(makeConstList([0, 0, 2, 2, 4, 4, 6, 6]), type$.JSArray_int);
    B.List_9iU = C._setArrayType(makeConstList([B.List_Fyt, B.List_aWa, B.List_VJE, B.List_802, B.List_XRB, B.List_p6G, B.List_grk]), type$.JSArray_List_int);
    B.List_A98 = C._setArrayType(makeConstList([1, 1.387039845, 1.306562965, 1.175875602, 1, 0.785694958, 0.5411961, 0.275899379]), type$.JSArray_double);
    B.List_AAT = C._setArrayType(makeConstList([D.BlendMode_0, D.BlendMode_1, D.BlendMode_2, D.BlendMode_3, D.BlendMode_4, D.BlendMode_5, D.BlendMode_6, D.BlendMode_7, D.BlendMode_8, D.BlendMode_9, D.BlendMode_10, D.BlendMode_11, D.BlendMode_12, D.BlendMode_13, D.BlendMode_14, D.BlendMode_15, D.BlendMode_16, D.BlendMode_17, D.BlendMode_18, D.BlendMode_19, D.BlendMode_20, D.BlendMode_21, D.BlendMode_22, D.BlendMode_23, D.BlendMode_24, D.BlendMode_25, D.BlendMode_26, D.BlendMode_27, D.BlendMode_28]), C.findType("JSArray<BlendMode>"));
    B.MathStyle_6 = new A.MathStyle(6, "scriptscript");
    B.DelimiterConf_OMc = new A.DelimiterConf(B.FontOptions_EtN, B.MathStyle_6);
    B.MathStyle_4 = new A.MathStyle(4, "script");
    B.DelimiterConf_F9C = new A.DelimiterConf(B.FontOptions_EtN, B.MathStyle_4);
    B.MathStyle_2 = new A.MathStyle(2, "text");
    B.DelimiterConf_0si = new A.DelimiterConf(B.FontOptions_EtN, B.MathStyle_2);
    B.FontOptions_TfV = new A.FontOptions("Size1", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.DelimiterConf_sIn = new A.DelimiterConf(B.FontOptions_TfV, B.MathStyle_2);
    B.FontOptions_ju0 = new A.FontOptions("Size2", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.DelimiterConf_Vqq = new A.DelimiterConf(B.FontOptions_ju0, B.MathStyle_2);
    B.FontOptions_r7o = new A.FontOptions("Size3", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.DelimiterConf_7hI = new A.DelimiterConf(B.FontOptions_r7o, B.MathStyle_2);
    B.FontOptions_OkI = new A.FontOptions("Size4", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.DelimiterConf_POa = new A.DelimiterConf(B.FontOptions_OkI, B.MathStyle_2);
    B.List_CSY = C._setArrayType(makeConstList([B.DelimiterConf_OMc, B.DelimiterConf_F9C, B.DelimiterConf_0si, B.DelimiterConf_sIn, B.DelimiterConf_Vqq, B.DelimiterConf_7hI, B.DelimiterConf_POa]), type$.JSArray_DelimiterConf);
    B.List_CZS = C._setArrayType(makeConstList([1, 2, 3, 0, 4, 17, 5, 18, 33, 49, 65, 6, 19, 81, 97, 7, 34, 113, 20, 50, 129, 145, 161, 8, 35, 66, 177, 193, 21, 82, 209, 240, 36, 51, 98, 114, 130, 9, 10, 22, 23, 24, 25, 26, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250]), type$.JSArray_int);
    B.List_EVh = C._setArrayType(makeConstList([0, 1, 5, 6, 14, 15, 27, 28, 2, 4, 7, 13, 16, 26, 29, 42, 3, 8, 12, 17, 25, 30, 41, 43, 9, 11, 18, 24, 31, 40, 44, 53, 10, 19, 23, 32, 39, 45, 52, 54, 20, 22, 33, 38, 46, 51, 55, 60, 21, 34, 37, 47, 50, 56, 59, 61, 35, 36, 48, 49, 57, 58, 62, 63]), type$.JSArray_int);
    B.List_F11 = C._setArrayType(makeConstList(["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]), type$.JSArray_String);
    B.List_F26 = C._setArrayType(makeConstList([0, 0.26, 0.286, 0.3, 0.306, 0.34]), type$.JSArray_double);
    B.List_GUW = C._setArrayType(makeConstList([0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 119]), type$.JSArray_int);
    B.TDSkeletonRowColObjStyle_hCS = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__textBorderRadius$closure());
    B.TDSkeletonRowColObj_OwY = new A.TDSkeletonRowColObj(null, 16, 55, B.TDSkeletonRowColObjStyle_hCS);
    B.TDSkeletonRowColObjStyle_4AR = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__transparentBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__textBorderRadius$closure());
    B.TDSkeletonRowColObj_9q2 = new A.TDSkeletonRowColObj(null, null, 45, B.TDSkeletonRowColObjStyle_4AR);
    B.List_GbC = C._setArrayType(makeConstList([B.TDSkeletonRowColObj_OwY, B.TDSkeletonRowColObj_9q2]), type$.JSArray_TDSkeletonRowColObj);
    B.List_HoQ = C._setArrayType(makeConstList([0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488]), type$.JSArray_double);
    B.List_J9A = C._setArrayType(makeConstList([1, 1, 2, 2, 3, 3]), type$.JSArray_int);
    B.TDSkeletonRowColObjStyle_U0q = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__rectBorderRadius$closure());
    B.TDSkeletonRowColObj_jhk = new A.TDSkeletonRowColObj(72, 72, null, B.TDSkeletonRowColObjStyle_U0q);
    B.List_bIy = C._setArrayType(makeConstList([B.TDSkeletonRowColObj_jhk]), type$.JSArray_TDSkeletonRowColObj);
    B.List_JGW = C._setArrayType(makeConstList([B.List_bIy]), type$.JSArray_List_TDSkeletonRowColObj);
    B.List_Kt5 = C._setArrayType(makeConstList([254, 253, 251, 247, 239, 223, 191, 127]), type$.JSArray_int);
    B.List_LY8 = C._setArrayType(makeConstList([B.DelimiterConf_OMc, B.DelimiterConf_F9C, B.DelimiterConf_0si]), type$.JSArray_DelimiterConf);
    B.List_Lm4 = C._setArrayType(makeConstList([D.TileMode_0, D.TileMode_1, D.TileMode_2, D.TileMode_3]), C.findType("JSArray<TileMode>"));
    B.List_NZS = C._setArrayType(makeConstList([0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]), type$.JSArray_int);
    B.List_OKH = C._setArrayType(makeConstList([0, 1, 2, 3, 4]), type$.JSArray_int);
    B.List_PIO = C._setArrayType(makeConstList([0, 0.24, 0.3, 0.3, 0.36, 0.42]), type$.JSArray_double);
    B.List_PathFillType_0_PathFillType_1 = C._setArrayType(makeConstList([D.PathFillType_0, D.PathFillType_1]), C.findType("JSArray<PathFillType>"));
    B.List_Qv3 = C._setArrayType(makeConstList([31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]), type$.JSArray_int);
    B.List_RJL = C._setArrayType(makeConstList(["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"]), type$.JSArray_String);
    B.List_Sn5 = C._setArrayType(makeConstList([0, 1062, 2364, 2364, 2364]), type$.JSArray_double);
    B.List_U02 = C._setArrayType(makeConstList(["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\u230a", "\u230b", "\\lceil", "\\rceil", "\u2308", "\u2309", "<", ">", "\\langle", "\u27e8", "\\rangle", "\u27e9", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\u27ee", "\u27ef", "\\lmoustache", "\\rmoustache", "\u23b0", "\u23b1", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."]), type$.JSArray_String);
    B.List_U9x = C._setArrayType(makeConstList([D.TextDecorationStyle_00, D.TextDecorationStyle_10, D.TextDecorationStyle_20, D.TextDecorationStyle_30, D.TextDecorationStyle_40]), C.findType("JSArray<TextDecorationStyle>"));
    B.List_UOF = C._setArrayType(makeConstList([D.Alignment_m1_m1, D.Alignment_0_m1, B.Alignment_1_m1]), type$.JSArray_Alignment);
    B.List_VB3 = C._setArrayType(makeConstList([B.DelimiterConf_0si, B.DelimiterConf_sIn, B.DelimiterConf_Vqq, B.DelimiterConf_7hI, B.DelimiterConf_POa]), type$.JSArray_DelimiterConf);
    B.List_1_1_1 = C._setArrayType(makeConstList([1, 1, 1]), type$.JSArray_int);
    B.List_2_1_1 = C._setArrayType(makeConstList([2, 1, 1]), type$.JSArray_int);
    B.List_3_1_1 = C._setArrayType(makeConstList([3, 1, 1]), type$.JSArray_int);
    B.List_4_2_1 = C._setArrayType(makeConstList([4, 2, 1]), type$.JSArray_int);
    B.List_5_2_1 = C._setArrayType(makeConstList([5, 2, 1]), type$.JSArray_int);
    B.List_6_3_1 = C._setArrayType(makeConstList([6, 3, 1]), type$.JSArray_int);
    B.List_7_4_2 = C._setArrayType(makeConstList([7, 4, 2]), type$.JSArray_int);
    B.List_8_6_3 = C._setArrayType(makeConstList([8, 6, 3]), type$.JSArray_int);
    B.List_9_7_6 = C._setArrayType(makeConstList([9, 7, 6]), type$.JSArray_int);
    B.List_10_8_7 = C._setArrayType(makeConstList([10, 8, 7]), type$.JSArray_int);
    B.List_11_10_9 = C._setArrayType(makeConstList([11, 10, 9]), type$.JSArray_int);
    B.List_VdS = C._setArrayType(makeConstList([B.List_1_1_1, B.List_2_1_1, B.List_3_1_1, B.List_4_2_1, B.List_5_2_1, B.List_6_3_1, B.List_7_4_2, B.List_8_6_3, B.List_9_7_6, B.List_10_8_7, B.List_11_10_9]), type$.JSArray_List_int);
    B.List_X1N = C._setArrayType(makeConstList([0, 1, 2, 3, 17, 4, 5, 33, 49, 6, 18, 65, 81, 7, 97, 113, 19, 34, 50, 129, 8, 20, 66, 145, 161, 177, 193, 9, 35, 51, 82, 240, 21, 98, 114, 209, 10, 22, 36, 52, 225, 37, 241, 23, 24, 25, 26, 38, 39, 40, 41, 42, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 245, 246, 247, 248, 249, 250]), type$.JSArray_int);
    B.List_YIL = C._setArrayType(makeConstList([0, 0.35, 0.5, 0.65, 1]), type$.JSArray_double);
    B.TDSkeletonRowColObjStyle_l6T = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__circleBorderRadius$closure());
    B.TDSkeletonRowColObj_uDe = new A.TDSkeletonRowColObj(48, 48, null, B.TDSkeletonRowColObjStyle_l6T);
    B.List_2YC = C._setArrayType(makeConstList([B.TDSkeletonRowColObj_uDe]), type$.JSArray_TDSkeletonRowColObj);
    B.List_ZUH = C._setArrayType(makeConstList([B.List_2YC]), type$.JSArray_List_TDSkeletonRowColObj);
    B.List_aYr = C._setArrayType(makeConstList([16, 11, 10, 16, 24, 40, 51, 61, 12, 12, 14, 19, 26, 58, 60, 55, 14, 13, 16, 24, 40, 57, 69, 56, 14, 17, 22, 29, 51, 87, 80, 62, 18, 22, 37, 56, 68, 109, 103, 77, 24, 35, 55, 64, 81, 104, 113, 92, 49, 64, 78, 87, 103, 121, 120, 101, 72, 92, 95, 98, 112, 100, 103, 99]), type$.JSArray_int);
    B.List_b7O = C._setArrayType(makeConstList([0, 260, 286, 306, 312]), type$.JSArray_double);
    B.MathStyle_0 = new A.MathStyle(0, "display");
    B.MathStyle_1 = new A.MathStyle(1, "displayCramped");
    B.MathStyle_3 = new A.MathStyle(3, "textCramped");
    B.MathStyle_5 = new A.MathStyle(5, "scriptCramped");
    B.MathStyle_7 = new A.MathStyle(7, "scriptscriptCramped");
    B.List_c06 = C._setArrayType(makeConstList([B.MathStyle_0, B.MathStyle_1, B.MathStyle_2, B.MathStyle_3, B.MathStyle_4, B.MathStyle_5, B.MathStyle_6, B.MathStyle_7]), C.findType("JSArray<MathStyle>"));
    B.List_cuD = C._setArrayType(makeConstList([0, 600, 1033, 2339, 2340]), type$.JSArray_double);
    B.List_eKf = C._setArrayType(makeConstList([D.Alignment_m1_m1, B.Alignment_1_m1]), type$.JSArray_Alignment);
    B.List_empty24 = C._setArrayType(makeConstList([]), type$.JSArray_GreenNode);
    B.List_empty23 = C._setArrayType(makeConstList([]), type$.JSArray_MathOptions);
    B.List_empty29 = C._setArrayType(makeConstList([]), type$.JSArray_MatrixColumnAlign);
    B.List_empty28 = C._setArrayType(makeConstList([]), type$.JSArray_MatrixSeparatorStyle);
    B.List_empty38 = C._setArrayType(makeConstList([]), type$.JSArray_Measurement);
    B.List_empty20 = C._setArrayType(makeConstList([]), type$.JSArray_Message);
    B.List_empty27 = C._setArrayType(makeConstList([]), type$.JSArray_Parser_dynamic);
    B.List_empty25 = C._setArrayType(makeConstList([]), type$.JSArray_PathCommand);
    B.List_empty22 = C._setArrayType(makeConstList([]), C.findType("JSArray<BuildResult?>"));
    B.List_fKm = C._setArrayType(makeConstList([31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]), type$.JSArray_int);
    B.List_s5R = C._setArrayType(makeConstList([D.StrokeCap_0, D.StrokeCap_1, D.StrokeCap_20]), C.findType("JSArray<StrokeCap>"));
    B.List_w4E = C._setArrayType(makeConstList([0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8]), type$.JSArray_int);
    B.List_w8c = C._setArrayType(makeConstList([1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648]), type$.JSArray_int);
    B.TDSkeletonRowColObj_RCS = new A.TDSkeletonRowColObj(null, 16, 24, B.TDSkeletonRowColObjStyle_hCS);
    B.TDSkeletonRowColObj_2Jc = new A.TDSkeletonRowColObj(16, null, null, B.TDSkeletonRowColObjStyle_4AR);
    B.TDSkeletonRowColObj_BOv = new A.TDSkeletonRowColObj(null, 16, 76, B.TDSkeletonRowColObjStyle_hCS);
    B.List_m1t = C._setArrayType(makeConstList([B.TDSkeletonRowColObj_RCS, B.TDSkeletonRowColObj_2Jc, B.TDSkeletonRowColObj_BOv]), type$.JSArray_TDSkeletonRowColObj);
    B.TDSkeletonRowColObj_msG = new A.TDSkeletonRowColObj(null, 16, 1, B.TDSkeletonRowColObjStyle_hCS);
    B.List_bFo = C._setArrayType(makeConstList([B.TDSkeletonRowColObj_msG]), type$.JSArray_TDSkeletonRowColObj);
    B.List_xWd = C._setArrayType(makeConstList([B.List_m1t, B.List_bFo]), type$.JSArray_List_TDSkeletonRowColObj);
    B.List_ykM = C._setArrayType(makeConstList([D.StrokeJoin_0, D.StrokeJoin_1, D.StrokeJoin_20]), C.findType("JSArray<StrokeJoin>"));
    B.List_zcj = C._setArrayType(makeConstList([0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0]), type$.JSArray_int);
    B.Object_j1Q = {"\\mathit": 0, "\\mathrm": 1, "\\mathbf": 2, "\\boldsymbol": 3, "\\mathbb": 4, "\\mathcal": 5, "\\mathfrak": 6, "\\mathtt": 7, "\\mathscr": 8, "\\mathsf": 9};
    B.FontOptions_wpC = new A.FontOptions("Main", D.FontWeight_3_400, B.FontStyle_1, B.List_empty21);
    B.FontOptions_52D = new A.FontOptions("AMS", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.FontOptions_Jnv = new A.FontOptions("Caligraphic", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.FontOptions_xyv = new A.FontOptions("Fraktur", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.FontOptions_LJX = new A.FontOptions("Script", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.FontOptions_P2N = new A.FontOptions("SansSerif", D.FontWeight_3_400, D.FontStyle_0, B.List_empty21);
    B.Map_0eiXF = new C.ConstantStringMap(B.Object_j1Q, [B.FontOptions_wpC, B.FontOptions_EtN, B.FontOptions_avb, B.FontOptions_OsF, B.FontOptions_52D, B.FontOptions_Jnv, B.FontOptions_xyv, B.FontOptions_nwN, B.FontOptions_LJX, B.FontOptions_P2N], C.findType("ConstantStringMap<String,FontOptions>"));
    B.Object_XVG = {ProcessingSoftware: 0, SubfileType: 1, OldSubfileType: 2, ImageWidth: 3, ImageLength: 4, ImageHeight: 5, BitsPerSample: 6, Compression: 7, PhotometricInterpretation: 8, Thresholding: 9, CellWidth: 10, CellLength: 11, FillOrder: 12, DocumentName: 13, ImageDescription: 14, Make: 15, Model: 16, StripOffsets: 17, Orientation: 18, SamplesPerPixel: 19, RowsPerStrip: 20, StripByteCounts: 21, MinSampleValue: 22, MaxSampleValue: 23, XResolution: 24, YResolution: 25, PlanarConfiguration: 26, PageName: 27, XPosition: 28, YPosition: 29, GrayResponseUnit: 30, GrayResponseCurve: 31, T4Options: 32, T6Options: 33, ResolutionUnit: 34, PageNumber: 35, ColorResponseUnit: 36, TransferFunction: 37, Software: 38, DateTime: 39, Artist: 40, HostComputer: 41, Predictor: 42, WhitePoint: 43, PrimaryChromaticities: 44, ColorMap: 45, HalftoneHints: 46, TileWidth: 47, TileLength: 48, TileOffsets: 49, TileByteCounts: 50, BadFaxLines: 51, CleanFaxData: 52, ConsecutiveBadFaxLines: 53, InkSet: 54, InkNames: 55, NumberofInks: 56, DotRange: 57, TargetPrinter: 58, ExtraSamples: 59, SampleFormat: 60, SMinSampleValue: 61, SMaxSampleValue: 62, TransferRange: 63, ClipPath: 64, JPEGProc: 65, JPEGInterchangeFormat: 66, JPEGInterchangeFormatLength: 67, YCbCrCoefficients: 68, YCbCrSubSampling: 69, YCbCrPositioning: 70, ReferenceBlackWhite: 71, ApplicationNotes: 72, Rating: 73, CFARepeatPatternDim: 74, CFAPattern: 75, BatteryLevel: 76, Copyright: 77, ExposureTime: 78, FNumber: 79, "IPTC-NAA": 80, ExifOffset: 81, InterColorProfile: 82, ExposureProgram: 83, SpectralSensitivity: 84, GPSOffset: 85, ISOSpeed: 86, OECF: 87, SensitivityType: 88, RecommendedExposureIndex: 89, ExifVersion: 90, DateTimeOriginal: 91, DateTimeDigitized: 92, OffsetTime: 93, OffsetTimeOriginal: 94, OffsetTimeDigitized: 95, ComponentsConfiguration: 96, CompressedBitsPerPixel: 97, ShutterSpeedValue: 98, ApertureValue: 99, BrightnessValue: 100, ExposureBiasValue: 101, MaxApertureValue: 102, SubjectDistance: 103, MeteringMode: 104, LightSource: 105, Flash: 106, FocalLength: 107, SubjectArea: 108, MakerNote: 109, UserComment: 110, SubSecTime: 111, SubSecTimeOriginal: 112, SubSecTimeDigitized: 113, XPTitle: 114, XPComment: 115, XPAuthor: 116, XPKeywords: 117, XPSubject: 118, FlashPixVersion: 119, ColorSpace: 120, ExifImageWidth: 121, ExifImageLength: 122, RelatedSoundFile: 123, InteroperabilityOffset: 124, FlashEnergy: 125, SpatialFrequencyResponse: 126, FocalPlaneXResolution: 127, FocalPlaneYResolution: 128, FocalPlaneResolutionUnit: 129, SubjectLocation: 130, ExposureIndex: 131, SensingMethod: 132, FileSource: 133, SceneType: 134, CVAPattern: 135, CustomRendered: 136, ExposureMode: 137, WhiteBalance: 138, DigitalZoomRatio: 139, FocalLengthIn35mmFilm: 140, SceneCaptureType: 141, GainControl: 142, Contrast: 143, Saturation: 144, Sharpness: 145, DeviceSettingDescription: 146, SubjectDistanceRange: 147, ImageUniqueID: 148, CameraOwnerName: 149, BodySerialNumber: 150, LensSpecification: 151, LensMake: 152, LensModel: 153, LensSerialNumber: 154, Gamma: 155, PrintIM: 156, Padding: 157, OffsetSchema: 158, OwnerName: 159, SerialNumber: 160, InteropIndex: 161, InteropVersion: 162, RelatedImageFileFormat: 163, RelatedImageWidth: 164, RelatedImageLength: 165, GPSVersionID: 166, GPSLatitudeRef: 167, GPSLatitude: 168, GPSLongitudeRef: 169, GPSLongitude: 170, GPSAltitudeRef: 171, GPSAltitude: 172, GPSTimeStamp: 173, GPSSatellites: 174, GPSStatus: 175, GPSMeasureMode: 176, GPSDOP: 177, GPSSpeedRef: 178, GPSSpeed: 179, GPSTrackRef: 180, GPSTrack: 181, GPSImgDirectionRef: 182, GPSImgDirection: 183, GPSMapDatum: 184, GPSDestLatitudeRef: 185, GPSDestLatitude: 186, GPSDestLongitudeRef: 187, GPSDestLongitude: 188, GPSDestBearingRef: 189, GPSDestBearing: 190, GPSDestDistanceRef: 191, GPSDestDistance: 192, GPSProcessingMethod: 193, GPSAreaInformation: 194, GPSDate: 195, GPSDifferential: 196};
    B.Map_1DOpr = new C.ConstantStringMap(B.Object_XVG, [11, 254, 255, 256, 257, 257, 258, 259, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 296, 297, 300, 301, 305, 306, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 512, 513, 514, 529, 530, 531, 532, 700, 18246, 33421, 33422, 33423, 33432, 33434, 33437, 33723, 34665, 34675, 34850, 34852, 34853, 34855, 34856, 34864, 34866, 36864, 36867, 36868, 36880, 36881, 36882, 37121, 37122, 37377, 37378, 37379, 37380, 37381, 37382, 37383, 37384, 37385, 37386, 37396, 37500, 37510, 37520, 37521, 37522, 40091, 40092, 40093, 40094, 40095, 40960, 40961, 40962, 40963, 40964, 40965, 41483, 41484, 41486, 41487, 41488, 41492, 41493, 41495, 41728, 41729, 41730, 41985, 41986, 41987, 41988, 41989, 41990, 41991, 41992, 41993, 41994, 41995, 41996, 42016, 42032, 42033, 42034, 42035, 42036, 42037, 42240, 50341, 59932, 59933, 65000, 65001, 1, 2, 4096, 4097, 4098, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], type$.ConstantStringMap_String_int);
    B.Object_sJt = {slant: 0, space: 1, stretch: 2, shrink: 3, xHeight: 4, quad: 5, extraSpace: 6, num1: 7, num2: 8, num3: 9, denom1: 10, denom2: 11, sup1: 12, sup2: 13, sup3: 14, sub1: 15, sub2: 16, supDrop: 17, subDrop: 18, delim1: 19, delim2: 20, axisHeight: 21, defaultRuleThickness: 22, bigOpSpacing1: 23, bigOpSpacing2: 24, bigOpSpacing3: 25, bigOpSpacing4: 26, bigOpSpacing5: 27, sqrtRuleThickness: 28, ptPerEm: 29, doubleRuleSep: 30, arrayRuleWidth: 31, fboxsep: 32, fboxrule: 33};
    B.List_dfC = C._setArrayType(makeConstList([0.25, 0.25, 0.25]), type$.JSArray_double);
    B.List_0_0_0 = C._setArrayType(makeConstList([0, 0, 0]), type$.JSArray_double);
    B.List_BFU = C._setArrayType(makeConstList([0.431, 0.431, 0.431]), type$.JSArray_double);
    B.List_3vQ = C._setArrayType(makeConstList([1, 1.171, 1.472]), type$.JSArray_double);
    B.List_e4o = C._setArrayType(makeConstList([0.677, 0.732, 0.925]), type$.JSArray_double);
    B.List_8kZ = C._setArrayType(makeConstList([0.394, 0.384, 0.387]), type$.JSArray_double);
    B.List_AAp = C._setArrayType(makeConstList([0.444, 0.471, 0.504]), type$.JSArray_double);
    B.List_hjy = C._setArrayType(makeConstList([0.686, 0.752, 1.025]), type$.JSArray_double);
    B.List_Loh = C._setArrayType(makeConstList([0.345, 0.344, 0.532]), type$.JSArray_double);
    B.List_JcA = C._setArrayType(makeConstList([0.413, 0.503, 0.504]), type$.JSArray_double);
    B.List_xJW = C._setArrayType(makeConstList([0.363, 0.431, 0.404]), type$.JSArray_double);
    B.List_a8A = C._setArrayType(makeConstList([0.289, 0.286, 0.294]), type$.JSArray_double);
    B.List_pvk = C._setArrayType(makeConstList([0.15, 0.143, 0.2]), type$.JSArray_double);
    B.List_99r = C._setArrayType(makeConstList([0.247, 0.286, 0.4]), type$.JSArray_double);
    B.List_iQ3 = C._setArrayType(makeConstList([0.386, 0.353, 0.494]), type$.JSArray_double);
    B.List_GFx = C._setArrayType(makeConstList([0.05, 0.071, 0.1]), type$.JSArray_double);
    B.List_SBR = C._setArrayType(makeConstList([2.39, 1.7, 1.98]), type$.JSArray_double);
    B.List_jnV = C._setArrayType(makeConstList([1.01, 1.157, 1.42]), type$.JSArray_double);
    B.List_Kwn = C._setArrayType(makeConstList([0.04, 0.049, 0.049]), type$.JSArray_double);
    B.List_KHY = C._setArrayType(makeConstList([0.111, 0.111, 0.111]), type$.JSArray_double);
    B.List_Djo = C._setArrayType(makeConstList([0.166, 0.166, 0.166]), type$.JSArray_double);
    B.List_HpE = C._setArrayType(makeConstList([0.2, 0.2, 0.2]), type$.JSArray_double);
    B.List_qie = C._setArrayType(makeConstList([0.6, 0.611, 0.611]), type$.JSArray_double);
    B.List_UUX = C._setArrayType(makeConstList([0.1, 0.143, 0.143]), type$.JSArray_double);
    B.List_1WS = C._setArrayType(makeConstList([0.04, 0.04, 0.04]), type$.JSArray_double);
    B.List_10_10_10 = C._setArrayType(makeConstList([10, 10, 10]), type$.JSArray_double);
    B.List_6MP = C._setArrayType(makeConstList([0.3, 0.3, 0.3]), type$.JSArray_double);
    B.Map_1bfGT = new C.ConstantStringMap(B.Object_sJt, [B.List_dfC, B.List_0_0_0, B.List_0_0_0, B.List_0_0_0, B.List_BFU, B.List_3vQ, B.List_0_0_0, B.List_e4o, B.List_8kZ, B.List_AAp, B.List_hjy, B.List_Loh, B.List_JcA, B.List_xJW, B.List_a8A, B.List_pvk, B.List_99r, B.List_iQ3, B.List_GFx, B.List_SBR, B.List_jnV, B.List_dfC, B.List_Kwn, B.List_KHY, B.List_Djo, B.List_HpE, B.List_qie, B.List_UUX, B.List_1WS, B.List_10_10_10, B.List_HpE, B.List_1WS, B.List_6MP, B.List_1WS], type$.ConstantStringMap_of_String_and_List_double);
    B.Object_ijD = {"\u0300": 0, "\u0308": 1, "\u0303": 2, "\u0304": 3, "\u0301": 4, "\u0306": 5, "\u030c": 6, "\u0302": 7, "\u0307": 8, "\u030a": 9, "\u030b": 10};
    B.Mode_1 = new A.Mode(1, "text");
    B.Mode_0 = new A.Mode(0, "math");
    B.Map_JaygT = new C.GeneralConstantMap([B.Mode_1, "\\`", B.Mode_0, "\\grave"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JaX5M = new C.GeneralConstantMap([B.Mode_1, '\\"', B.Mode_0, "\\ddot"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JaYHN = new C.GeneralConstantMap([B.Mode_1, "\\~", B.Mode_0, "\\tilde"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JauHP = new C.GeneralConstantMap([B.Mode_1, "\\=", B.Mode_0, "\\bar"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JasPw = new C.GeneralConstantMap([B.Mode_1, "\\'", B.Mode_0, "\\acute"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JaeMz = new C.GeneralConstantMap([B.Mode_1, "\\u", B.Mode_0, "\\breve"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_Ja76b = new C.GeneralConstantMap([B.Mode_1, "\\v", B.Mode_0, "\\check"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_Ja7dZ = new C.GeneralConstantMap([B.Mode_1, "\\^", B.Mode_0, "\\hat"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JaQOh = new C.GeneralConstantMap([B.Mode_1, "\\.", B.Mode_0, "\\dot"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_JaXm8 = new C.GeneralConstantMap([B.Mode_1, "\\r", B.Mode_0, "\\mathring"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_Jaksi = new C.GeneralConstantMap([B.Mode_1, "\\H", B.Mode_0, null], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    B.Map_1zAbk = new C.ConstantStringMap(B.Object_ijD, [B.Map_JaygT, B.Map_JaX5M, B.Map_JaYHN, B.Map_JauHP, B.Map_JasPw, B.Map_JaeMz, B.Map_Ja76b, B.Map_Ja7dZ, B.Map_JaQOh, B.Map_JaXm8, B.Map_Jaksi], C.findType("ConstantStringMap<String,Map<Mode,String?>>"));
    B.Map_1zxva = new C.ConstantStringMap(B.Object_ijD, ["`", "\xa8", "~", "\xaf", "\xb4", "\u02d8", "\u02c7", "^", "\u02d9", "\u02da", "\u02dd"], type$.ConstantStringMap_String_String);
    B.List_cases_dcases_rcases_drcases = C._setArrayType(makeConstList(["cases", "dcases", "rcases", "drcases"]), type$.JSArray_String);
    B.List_aligned = C._setArrayType(makeConstList(["aligned"]), type$.JSArray_String);
    B.List_alignedat = C._setArrayType(makeConstList(["alignedat"]), type$.JSArray_String);
    B.EnvSpec__casesHandler = new A.EnvSpec(A.eqn_array___casesHandler$closure());
    B.EnvSpec__alignedHandler = new A.EnvSpec(A.eqn_array___alignedHandler$closure());
    B.EnvSpec__alignedAtHandler = new A.EnvSpec(A.eqn_array___alignedAtHandler$closure());
    B.Map_2fcbp = new C.GeneralConstantMap([B.List_cases_dcases_rcases_drcases, B.EnvSpec__casesHandler, B.List_aligned, B.EnvSpec__alignedHandler, B.List_alignedat, B.EnvSpec__alignedAtHandler], type$.GeneralConstantMap_of_List_String_and_EnvSpec);
    B.Object_Asq = {l: 0, c: 1, r: 2};
    B.MatrixColumnAlign_0 = new A.MatrixColumnAlign(0, "left");
    B.MatrixColumnAlign_1 = new A.MatrixColumnAlign(1, "center");
    B.MatrixColumnAlign_2 = new A.MatrixColumnAlign(2, "right");
    B.Map_38VCd = new C.ConstantStringMap(B.Object_Asq, [B.MatrixColumnAlign_0, B.MatrixColumnAlign_1, B.MatrixColumnAlign_2], C.findType("ConstantStringMap<String,MatrixColumnAlign>"));
    B.Object_fZB = {"\xe1": 0, "\xe0": 1, "\xe4": 2, "\u01df": 3, "\xe3": 4, "\u0101": 5, "\u0103": 6, "\u1eaf": 7, "\u1eb1": 8, "\u1eb5": 9, "\u01ce": 10, "\xe2": 11, "\u1ea5": 12, "\u1ea7": 13, "\u1eab": 14, "\u0227": 15, "\u01e1": 16, "\xe5": 17, "\u01fb": 18, "\u1e03": 19, "\u0107": 20, "\u010d": 21, "\u0109": 22, "\u010b": 23, "\u010f": 24, "\u1e0b": 25, "\xe9": 26, "\xe8": 27, "\xeb": 28, "\u1ebd": 29, "\u0113": 30, "\u1e17": 31, "\u1e15": 32, "\u0115": 33, "\u011b": 34, "\xea": 35, "\u1ebf": 36, "\u1ec1": 37, "\u1ec5": 38, "\u0117": 39, "\u1e1f": 40, "\u01f5": 41, "\u1e21": 42, "\u011f": 43, "\u01e7": 44, "\u011d": 45, "\u0121": 46, "\u1e27": 47, "\u021f": 48, "\u0125": 49, "\u1e23": 50, "\xed": 51, "\xec": 52, "\xef": 53, "\u1e2f": 54, "\u0129": 55, "\u012b": 56, "\u012d": 57, "\u01d0": 58, "\xee": 59, "\u01f0": 60, "\u0135": 61, "\u1e31": 62, "\u01e9": 63, "\u013a": 64, "\u013e": 65, "\u1e3f": 66, "\u1e41": 67, "\u0144": 68, "\u01f9": 69, "\xf1": 70, "\u0148": 71, "\u1e45": 72, "\xf3": 73, "\xf2": 74, "\xf6": 75, "\u022b": 76, "\xf5": 77, "\u1e4d": 78, "\u1e4f": 79, "\u022d": 80, "\u014d": 81, "\u1e53": 82, "\u1e51": 83, "\u014f": 84, "\u01d2": 85, "\xf4": 86, "\u1ed1": 87, "\u1ed3": 88, "\u1ed7": 89, "\u022f": 90, "\u0231": 91, "\u0151": 92, "\u1e55": 93, "\u1e57": 94, "\u0155": 95, "\u0159": 96, "\u1e59": 97, "\u015b": 98, "\u1e65": 99, "\u0161": 100, "\u1e67": 101, "\u015d": 102, "\u1e61": 103, "\u1e97": 104, "\u0165": 105, "\u1e6b": 106, "\xfa": 107, "\xf9": 108, "\xfc": 109, "\u01d8": 110, "\u01dc": 111, "\u01d6": 112, "\u01da": 113, "\u0169": 114, "\u1e79": 115, "\u016b": 116, "\u1e7b": 117, "\u016d": 118, "\u01d4": 119, "\xfb": 120, "\u016f": 121, "\u0171": 122, "\u1e7d": 123, "\u1e83": 124, "\u1e81": 125, "\u1e85": 126, "\u0175": 127, "\u1e87": 128, "\u1e98": 129, "\u1e8d": 130, "\u1e8b": 131, "\xfd": 132, "\u1ef3": 133, "\xff": 134, "\u1ef9": 135, "\u0233": 136, "\u0177": 137, "\u1e8f": 138, "\u1e99": 139, "\u017a": 140, "\u017e": 141, "\u1e91": 142, "\u017c": 143, "\xc1": 144, "\xc0": 145, "\xc4": 146, "\u01de": 147, "\xc3": 148, "\u0100": 149, "\u0102": 150, "\u1eae": 151, "\u1eb0": 152, "\u1eb4": 153, "\u01cd": 154, "\xc2": 155, "\u1ea4": 156, "\u1ea6": 157, "\u1eaa": 158, "\u0226": 159, "\u01e0": 160, "\xc5": 161, "\u01fa": 162, "\u1e02": 163, "\u0106": 164, "\u010c": 165, "\u0108": 166, "\u010a": 167, "\u010e": 168, "\u1e0a": 169, "\xc9": 170, "\xc8": 171, "\xcb": 172, "\u1ebc": 173, "\u0112": 174, "\u1e16": 175, "\u1e14": 176, "\u0114": 177, "\u011a": 178, "\xca": 179, "\u1ebe": 180, "\u1ec0": 181, "\u1ec4": 182, "\u0116": 183, "\u1e1e": 184, "\u01f4": 185, "\u1e20": 186, "\u011e": 187, "\u01e6": 188, "\u011c": 189, "\u0120": 190, "\u1e26": 191, "\u021e": 192, "\u0124": 193, "\u1e22": 194, "\xcd": 195, "\xcc": 196, "\xcf": 197, "\u1e2e": 198, "\u0128": 199, "\u012a": 200, "\u012c": 201, "\u01cf": 202, "\xce": 203, "\u0130": 204, "\u0134": 205, "\u1e30": 206, "\u01e8": 207, "\u0139": 208, "\u013d": 209, "\u1e3e": 210, "\u1e40": 211, "\u0143": 212, "\u01f8": 213, "\xd1": 214, "\u0147": 215, "\u1e44": 216, "\xd3": 217, "\xd2": 218, "\xd6": 219, "\u022a": 220, "\xd5": 221, "\u1e4c": 222, "\u1e4e": 223, "\u022c": 224, "\u014c": 225, "\u1e52": 226, "\u1e50": 227, "\u014e": 228, "\u01d1": 229, "\xd4": 230, "\u1ed0": 231, "\u1ed2": 232, "\u1ed6": 233, "\u022e": 234, "\u0230": 235, "\u0150": 236, "\u1e54": 237, "\u1e56": 238, "\u0154": 239, "\u0158": 240, "\u1e58": 241, "\u015a": 242, "\u1e64": 243, "\u0160": 244, "\u1e66": 245, "\u015c": 246, "\u1e60": 247, "\u0164": 248, "\u1e6a": 249, "\xda": 250, "\xd9": 251, "\xdc": 252, "\u01d7": 253, "\u01db": 254, "\u01d5": 255, "\u01d9": 256, "\u0168": 257, "\u1e78": 258, "\u016a": 259, "\u1e7a": 260, "\u016c": 261, "\u01d3": 262, "\xdb": 263, "\u016e": 264, "\u0170": 265, "\u1e7c": 266, "\u1e82": 267, "\u1e80": 268, "\u1e84": 269, "\u0174": 270, "\u1e86": 271, "\u1e8c": 272, "\u1e8a": 273, "\xdd": 274, "\u1ef2": 275, "\u0178": 276, "\u1ef8": 277, "\u0232": 278, "\u0176": 279, "\u1e8e": 280, "\u0179": 281, "\u017d": 282, "\u1e90": 283, "\u017b": 284, "\u03ac": 285, "\u1f70": 286, "\u1fb1": 287, "\u1fb0": 288, "\u03ad": 289, "\u1f72": 290, "\u03ae": 291, "\u1f74": 292, "\u03af": 293, "\u1f76": 294, "\u03ca": 295, "\u0390": 296, "\u1fd2": 297, "\u1fd1": 298, "\u1fd0": 299, "\u03cc": 300, "\u1f78": 301, "\u03cd": 302, "\u1f7a": 303, "\u03cb": 304, "\u03b0": 305, "\u1fe2": 306, "\u1fe1": 307, "\u1fe0": 308, "\u03ce": 309, "\u1f7c": 310, "\u038e": 311, "\u1fea": 312, "\u03ab": 313, "\u1fe9": 314, "\u1fe8": 315, "\u038f": 316, "\u1ffa": 317};
    B.Map_3Abhf = new C.ConstantStringMap(B.Object_fZB, ["a\u0301", "a\u0300", "a\u0308", "a\u0308\u0304", "a\u0303", "a\u0304", "a\u0306", "a\u0306\u0301", "a\u0306\u0300", "a\u0306\u0303", "a\u030c", "a\u0302", "a\u0302\u0301", "a\u0302\u0300", "a\u0302\u0303", "a\u0307", "a\u0307\u0304", "a\u030a", "a\u030a\u0301", "b\u0307", "c\u0301", "c\u030c", "c\u0302", "c\u0307", "d\u030c", "d\u0307", "e\u0301", "e\u0300", "e\u0308", "e\u0303", "e\u0304", "e\u0304\u0301", "e\u0304\u0300", "e\u0306", "e\u030c", "e\u0302", "e\u0302\u0301", "e\u0302\u0300", "e\u0302\u0303", "e\u0307", "f\u0307", "g\u0301", "g\u0304", "g\u0306", "g\u030c", "g\u0302", "g\u0307", "h\u0308", "h\u030c", "h\u0302", "h\u0307", "i\u0301", "i\u0300", "i\u0308", "i\u0308\u0301", "i\u0303", "i\u0304", "i\u0306", "i\u030c", "i\u0302", "j\u030c", "j\u0302", "k\u0301", "k\u030c", "l\u0301", "l\u030c", "m\u0301", "m\u0307", "n\u0301", "n\u0300", "n\u0303", "n\u030c", "n\u0307", "o\u0301", "o\u0300", "o\u0308", "o\u0308\u0304", "o\u0303", "o\u0303\u0301", "o\u0303\u0308", "o\u0303\u0304", "o\u0304", "o\u0304\u0301", "o\u0304\u0300", "o\u0306", "o\u030c", "o\u0302", "o\u0302\u0301", "o\u0302\u0300", "o\u0302\u0303", "o\u0307", "o\u0307\u0304", "o\u030b", "p\u0301", "p\u0307", "r\u0301", "r\u030c", "r\u0307", "s\u0301", "s\u0301\u0307", "s\u030c", "s\u030c\u0307", "s\u0302", "s\u0307", "t\u0308", "t\u030c", "t\u0307", "u\u0301", "u\u0300", "u\u0308", "u\u0308\u0301", "u\u0308\u0300", "u\u0308\u0304", "u\u0308\u030c", "u\u0303", "u\u0303\u0301", "u\u0304", "u\u0304\u0308", "u\u0306", "u\u030c", "u\u0302", "u\u030a", "u\u030b", "v\u0303", "w\u0301", "w\u0300", "w\u0308", "w\u0302", "w\u0307", "w\u030a", "x\u0308", "x\u0307", "y\u0301", "y\u0300", "y\u0308", "y\u0303", "y\u0304", "y\u0302", "y\u0307", "y\u030a", "z\u0301", "z\u030c", "z\u0302", "z\u0307", "A\u0301", "A\u0300", "A\u0308", "A\u0308\u0304", "A\u0303", "A\u0304", "A\u0306", "A\u0306\u0301", "A\u0306\u0300", "A\u0306\u0303", "A\u030c", "A\u0302", "A\u0302\u0301", "A\u0302\u0300", "A\u0302\u0303", "A\u0307", "A\u0307\u0304", "A\u030a", "A\u030a\u0301", "B\u0307", "C\u0301", "C\u030c", "C\u0302", "C\u0307", "D\u030c", "D\u0307", "E\u0301", "E\u0300", "E\u0308", "E\u0303", "E\u0304", "E\u0304\u0301", "E\u0304\u0300", "E\u0306", "E\u030c", "E\u0302", "E\u0302\u0301", "E\u0302\u0300", "E\u0302\u0303", "E\u0307", "F\u0307", "G\u0301", "G\u0304", "G\u0306", "G\u030c", "G\u0302", "G\u0307", "H\u0308", "H\u030c", "H\u0302", "H\u0307", "I\u0301", "I\u0300", "I\u0308", "I\u0308\u0301", "I\u0303", "I\u0304", "I\u0306", "I\u030c", "I\u0302", "I\u0307", "J\u0302", "K\u0301", "K\u030c", "L\u0301", "L\u030c", "M\u0301", "M\u0307", "N\u0301", "N\u0300", "N\u0303", "N\u030c", "N\u0307", "O\u0301", "O\u0300", "O\u0308", "O\u0308\u0304", "O\u0303", "O\u0303\u0301", "O\u0303\u0308", "O\u0303\u0304", "O\u0304", "O\u0304\u0301", "O\u0304\u0300", "O\u0306", "O\u030c", "O\u0302", "O\u0302\u0301", "O\u0302\u0300", "O\u0302\u0303", "O\u0307", "O\u0307\u0304", "O\u030b", "P\u0301", "P\u0307", "R\u0301", "R\u030c", "R\u0307", "S\u0301", "S\u0301\u0307", "S\u030c", "S\u030c\u0307", "S\u0302", "S\u0307", "T\u030c", "T\u0307", "U\u0301", "U\u0300", "U\u0308", "U\u0308\u0301", "U\u0308\u0300", "U\u0308\u0304", "U\u0308\u030c", "U\u0303", "U\u0303\u0301", "U\u0304", "U\u0304\u0308", "U\u0306", "U\u030c", "U\u0302", "U\u030a", "U\u030b", "V\u0303", "W\u0301", "W\u0300", "W\u0308", "W\u0302", "W\u0307", "X\u0308", "X\u0307", "Y\u0301", "Y\u0300", "Y\u0308", "Y\u0303", "Y\u0304", "Y\u0302", "Y\u0307", "Z\u0301", "Z\u030c", "Z\u0302", "Z\u0307", "\u03b1\u0301", "\u03b1\u0300", "\u03b1\u0304", "\u03b1\u0306", "\u03b5\u0301", "\u03b5\u0300", "\u03b7\u0301", "\u03b7\u0300", "\u03b9\u0301", "\u03b9\u0300", "\u03b9\u0308", "\u03b9\u0308\u0301", "\u03b9\u0308\u0300", "\u03b9\u0304", "\u03b9\u0306", "\u03bf\u0301", "\u03bf\u0300", "\u03c5\u0301", "\u03c5\u0300", "\u03c5\u0308", "\u03c5\u0308\u0301", "\u03c5\u0308\u0300", "\u03c5\u0304", "\u03c5\u0306", "\u03c9\u0301", "\u03c9\u0300", "\u03a5\u0301", "\u03a5\u0300", "\u03a5\u0308", "\u03a5\u0304", "\u03a5\u0306", "\u03a9\u0301", "\u03a9\u0300"], type$.ConstantStringMap_String_String);
    B.SvgPathSegType_1 = new A.SvgPathSegType(1, "close");
    B.SvgPathSegType_2 = new A.SvgPathSegType(2, "moveToAbs");
    B.SvgPathSegType_3 = new A.SvgPathSegType(3, "moveToRel");
    B.SvgPathSegType_4 = new A.SvgPathSegType(4, "lineToAbs");
    B.SvgPathSegType_5 = new A.SvgPathSegType(5, "lineToRel");
    B.SvgPathSegType_6 = new A.SvgPathSegType(6, "cubicToAbs");
    B.SvgPathSegType_7 = new A.SvgPathSegType(7, "cubicToRel");
    B.SvgPathSegType_8 = new A.SvgPathSegType(8, "quadToAbs");
    B.SvgPathSegType_9 = new A.SvgPathSegType(9, "quadToRel");
    B.SvgPathSegType_10 = new A.SvgPathSegType(10, "arcToAbs");
    B.SvgPathSegType_11 = new A.SvgPathSegType(11, "arcToRel");
    B.SvgPathSegType_12 = new A.SvgPathSegType(12, "lineToHorizontalAbs");
    B.SvgPathSegType_13 = new A.SvgPathSegType(13, "lineToHorizontalRel");
    B.SvgPathSegType_14 = new A.SvgPathSegType(14, "lineToVerticalAbs");
    B.SvgPathSegType_15 = new A.SvgPathSegType(15, "lineToVerticalRel");
    B.SvgPathSegType_16 = new A.SvgPathSegType(16, "smoothCubicToAbs");
    B.SvgPathSegType_17 = new A.SvgPathSegType(17, "smoothCubicToRel");
    B.SvgPathSegType_18 = new A.SvgPathSegType(18, "smoothQuadToAbs");
    B.SvgPathSegType_19 = new A.SvgPathSegType(19, "smoothQuadToRel");
    B.Map_42CKi = new C.GeneralConstantMap([90, B.SvgPathSegType_1, 122, B.SvgPathSegType_1, 77, B.SvgPathSegType_2, 109, B.SvgPathSegType_3, 76, B.SvgPathSegType_4, 108, B.SvgPathSegType_5, 67, B.SvgPathSegType_6, 99, B.SvgPathSegType_7, 81, B.SvgPathSegType_8, 113, B.SvgPathSegType_9, 65, B.SvgPathSegType_10, 97, B.SvgPathSegType_11, 72, B.SvgPathSegType_12, 104, B.SvgPathSegType_13, 86, B.SvgPathSegType_14, 118, B.SvgPathSegType_15, 83, B.SvgPathSegType_16, 115, B.SvgPathSegType_17, 84, B.SvgPathSegType_18, 116, B.SvgPathSegType_19], C.findType("GeneralConstantMap<int,SvgPathSegType>"));
    B.Object_5Px = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, G: 16, H: 17, I: 18, J: 19, K: 20, L: 21, M: 22, N: 23, O: 24, P: 25, Q: 26, R: 27, S: 28, T: 29, U: 30, V: 31, W: 32, X: 33, Y: 34, Z: 35, a: 36, b: 37, c: 38, d: 39, e: 40, f: 41, g: 42, h: 43, i: 44, j: 45, k: 46, l: 47, m: 48, n: 49, o: 50, p: 51, q: 52, r: 53, s: 54, t: 55, u: 56, v: 57, w: 58, x: 59, y: 60, z: 61, "#": 62, $: 63, "%": 64, "*": 65, "+": 66, ",": 67, "-": 68, ".": 69, ":": 70, ";": 71, "=": 72, "?": 73, "@": 74, "[": 75, "]": 76, "^": 77, _: 78, "{": 79, "|": 80, "}": 81, "~": 82};
    B.Map_4Rm2t = new C.ConstantStringMap(B.Object_5Px, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], type$.ConstantStringMap_String_int);
    B.Object_7j7 = {"^": 0, "\u02c7": 1, "~": 2, "\xb4": 3, "`": 4, "\u02d9": 5, "\xa8": 6, "\xaf": 7, "\u2192": 8, "\u02d8": 9, "\u02da": 10, "\u02dd": 11, "\u2190": 12, "\u2194": 13, "\u23de": 14, "\u23df": 15, "\u21d2": 16, "\u23e0": 17, "\u21bc": 18, "\u21c0": 19};
    B.AccentRenderConfig_Meh = new A.AccentRenderConfig("^", "widehat", null);
    B.AccentRenderConfig_koX = new A.AccentRenderConfig("\u02c7", "widecheck", null);
    B.AccentRenderConfig_GcE = new A.AccentRenderConfig("~", "widetilde", "utilde");
    B.AccentRenderConfig_zCE = new A.AccentRenderConfig("\u02ca", null, null);
    B.AccentRenderConfig_2jS = new A.AccentRenderConfig("\u02cb", null, null);
    B.AccentRenderConfig_xsx = new A.AccentRenderConfig("\u02d9", null, null);
    B.AccentRenderConfig_umL = new A.AccentRenderConfig("\xa8", null, null);
    B.AccentRenderConfig_VAP = new A.AccentRenderConfig("\u02c9", null, null);
    B.AccentRenderConfig_Mq9 = new A.AccentRenderConfig("\u20d7", "overrightarrow", "underrightarrow");
    B.AccentRenderConfig_FLX = new A.AccentRenderConfig("\u02d8", null, null);
    B.AccentRenderConfig_sE0 = new A.AccentRenderConfig("\u02da", null, null);
    B.AccentRenderConfig_mFJ = new A.AccentRenderConfig("\u02dd", null, null);
    B.AccentRenderConfig_null_overleftarrow_underleftarrow = new A.AccentRenderConfig(null, "overleftarrow", "underleftarrow");
    B.AccentRenderConfig_X1L = new A.AccentRenderConfig(null, "overleftrightarrow", "underleftrightarrow");
    B.AccentRenderConfig_null_overbrace_null = new A.AccentRenderConfig(null, "overbrace", null);
    B.AccentRenderConfig_null_null_underbrace = new A.AccentRenderConfig(null, null, "underbrace");
    B.AccentRenderConfig_null_Overrightarrow_null = new A.AccentRenderConfig(null, "Overrightarrow", null);
    B.AccentRenderConfig_null_overgroup_undergroup = new A.AccentRenderConfig(null, "overgroup", "undergroup");
    B.AccentRenderConfig_null_overleftharpoon_null = new A.AccentRenderConfig(null, "overleftharpoon", null);
    B.AccentRenderConfig_null_overrightharpoon_null = new A.AccentRenderConfig(null, "overrightharpoon", null);
    B.Map_8zs6u = new C.ConstantStringMap(B.Object_7j7, [B.AccentRenderConfig_Meh, B.AccentRenderConfig_koX, B.AccentRenderConfig_GcE, B.AccentRenderConfig_zCE, B.AccentRenderConfig_2jS, B.AccentRenderConfig_xsx, B.AccentRenderConfig_umL, B.AccentRenderConfig_VAP, B.AccentRenderConfig_Mq9, B.AccentRenderConfig_FLX, B.AccentRenderConfig_sE0, B.AccentRenderConfig_mFJ, B.AccentRenderConfig_null_overleftarrow_underleftarrow, B.AccentRenderConfig_X1L, B.AccentRenderConfig_null_overbrace_null, B.AccentRenderConfig_null_null_underbrace, B.AccentRenderConfig_null_Overrightarrow_null, B.AccentRenderConfig_null_overgroup_undergroup, B.AccentRenderConfig_null_overleftharpoon_null, B.AccentRenderConfig_null_overrightharpoon_null], C.findType("ConstantStringMap<String,AccentRenderConfig>"));
    B.Object_xVE = {"Main-Regular": 0, "Size1-Regular": 1, "Size2-Regular": 2, "Size3-Regular": 3, "Size4-Regular": 4};
    B.Map_9JvRE = new C.ConstantStringMap(B.Object_xVE, [1, 1.2, 1.8, 2.4, 3], C.findType("ConstantStringMap<String,double>"));
    B._SliderAdjustmentType_1 = new A._SliderAdjustmentType(1, "left");
    B._AdjustSliderIntent__SliderAdjustmentType_1 = new A._AdjustSliderIntent(B._SliderAdjustmentType_1);
    B._SliderAdjustmentType_0 = new A._SliderAdjustmentType(0, "right");
    B._AdjustSliderIntent__SliderAdjustmentType_0 = new A._AdjustSliderIntent(B._SliderAdjustmentType_0);
    B.Map_ANauy = new C.GeneralConstantMap([D.SingleActivator_uUl2, B._AdjustSliderIntent__SliderAdjustmentType_1, D.SingleActivator_uUl3, B._AdjustSliderIntent__SliderAdjustmentType_0], type$.GeneralConstantMap_ShortcutActivator_Intent);
    B.Object_kce = {overrightarrow: 0, overleftarrow: 1, underrightarrow: 2, underleftarrow: 3, xrightarrow: 4, xleftarrow: 5, Overrightarrow: 6, xRightarrow: 7, xLeftarrow: 8, overleftharpoon: 9, xleftharpoonup: 10, xleftharpoondown: 11, overrightharpoon: 12, xrightharpoonup: 13, xrightharpoondown: 14, xlongequal: 15, xtwoheadleftarrow: 16, xtwoheadrightarrow: 17, overleftrightarrow: 18, overbrace: 19, underbrace: 20, underleftrightarrow: 21, xleftrightarrow: 22, xLeftrightarrow: 23, xrightleftharpoons: 24, xleftrightharpoons: 25, xhookleftarrow: 26, xhookrightarrow: 27, overlinesegment: 28, underlinesegment: 29, overgroup: 30, undergroup: 31, xmapsto: 32, xtofrom: 33, xrightleftarrows: 34, xrightequilibrium: 35, xleftequilibrium: 36};
    B.List_rightarrow = C._setArrayType(makeConstList(["rightarrow"]), type$.JSArray_String);
    B._KatexImagesData_1Y2 = new A._KatexImagesData(B.List_rightarrow, 0.888, 522, B.Alignment_1_m1);
    B.List_leftarrow = C._setArrayType(makeConstList(["leftarrow"]), type$.JSArray_String);
    B._KatexImagesData_gBZ = new A._KatexImagesData(B.List_leftarrow, 0.888, 522, D.Alignment_m1_m1);
    B._KatexImagesData_Zyd = new A._KatexImagesData(B.List_rightarrow, 1.469, 522, B.Alignment_1_m1);
    B._KatexImagesData_Reg = new A._KatexImagesData(B.List_leftarrow, 1.469, 522, D.Alignment_m1_m1);
    B.List_doublerightarrow = C._setArrayType(makeConstList(["doublerightarrow"]), type$.JSArray_String);
    B._KatexImagesData_XYX = new A._KatexImagesData(B.List_doublerightarrow, 0.888, 560, B.Alignment_1_m1);
    B._KatexImagesData_xyg = new A._KatexImagesData(B.List_doublerightarrow, 1.526, 560, B.Alignment_1_m1);
    B.List_doubleleftarrow = C._setArrayType(makeConstList(["doubleleftarrow"]), type$.JSArray_String);
    B._KatexImagesData_XbC = new A._KatexImagesData(B.List_doubleleftarrow, 1.526, 560, D.Alignment_m1_m1);
    B.List_leftharpoon = C._setArrayType(makeConstList(["leftharpoon"]), type$.JSArray_String);
    B._KatexImagesData_4Mr = new A._KatexImagesData(B.List_leftharpoon, 0.888, 522, D.Alignment_m1_m1);
    B.List_leftharpoondown = C._setArrayType(makeConstList(["leftharpoondown"]), type$.JSArray_String);
    B._KatexImagesData_Ixr = new A._KatexImagesData(B.List_leftharpoondown, 0.888, 522, D.Alignment_m1_m1);
    B.List_rightharpoon = C._setArrayType(makeConstList(["rightharpoon"]), type$.JSArray_String);
    B._KatexImagesData_jbL = new A._KatexImagesData(B.List_rightharpoon, 0.888, 522, B.Alignment_1_m1);
    B.List_rightharpoondown = C._setArrayType(makeConstList(["rightharpoondown"]), type$.JSArray_String);
    B._KatexImagesData_Siq = new A._KatexImagesData(B.List_rightharpoondown, 0.888, 522, B.Alignment_1_m1);
    B.List_longequal = C._setArrayType(makeConstList(["longequal"]), type$.JSArray_String);
    B._KatexImagesData_MeZ = new A._KatexImagesData(B.List_longequal, 0.888, 334, D.Alignment_m1_m1);
    B.List_twoheadleftarrow = C._setArrayType(makeConstList(["twoheadleftarrow"]), type$.JSArray_String);
    B._KatexImagesData_zp7 = new A._KatexImagesData(B.List_twoheadleftarrow, 0.888, 334, D.Alignment_m1_m1);
    B.List_twoheadrightarrow = C._setArrayType(makeConstList(["twoheadrightarrow"]), type$.JSArray_String);
    B._KatexImagesData_Khw = new A._KatexImagesData(B.List_twoheadrightarrow, 0.888, 334, B.Alignment_1_m1);
    B.List_leftarrow_rightarrow = C._setArrayType(makeConstList(["leftarrow", "rightarrow"]), type$.JSArray_String);
    B._KatexImagesData_HZv = new A._KatexImagesData(B.List_leftarrow_rightarrow, 0.888, 522, null);
    B.List_leftbrace_midbrace_rightbrace = C._setArrayType(makeConstList(["leftbrace", "midbrace", "rightbrace"]), type$.JSArray_String);
    B._KatexImagesData_jXF = new A._KatexImagesData(B.List_leftbrace_midbrace_rightbrace, 1.6, 548, null);
    B.List_Tyg = C._setArrayType(makeConstList(["leftbraceunder", "midbraceunder", "rightbraceunder"]), type$.JSArray_String);
    B._KatexImagesData_akj = new A._KatexImagesData(B.List_Tyg, 1.6, 548, null);
    B._KatexImagesData_yoY = new A._KatexImagesData(B.List_leftarrow_rightarrow, 1.75, 522, null);
    B.List_doubleleftarrow_doublerightarrow = C._setArrayType(makeConstList(["doubleleftarrow", "doublerightarrow"]), type$.JSArray_String);
    B._KatexImagesData_7Uw = new A._KatexImagesData(B.List_doubleleftarrow_doublerightarrow, 1.75, 560, null);
    B.List_dyE = C._setArrayType(makeConstList(["leftharpoondownplus", "rightharpoonplus"]), type$.JSArray_String);
    B._KatexImagesData_hSk = new A._KatexImagesData(B.List_dyE, 1.75, 716, null);
    B.List_mjC = C._setArrayType(makeConstList(["leftharpoonplus", "rightharpoondownplus"]), type$.JSArray_String);
    B._KatexImagesData_V5i = new A._KatexImagesData(B.List_mjC, 1.75, 716, null);
    B.List_leftarrow_righthook = C._setArrayType(makeConstList(["leftarrow", "righthook"]), type$.JSArray_String);
    B._KatexImagesData_IXN = new A._KatexImagesData(B.List_leftarrow_righthook, 1.08, 522, null);
    B.List_lefthook_rightarrow = C._setArrayType(makeConstList(["lefthook", "rightarrow"]), type$.JSArray_String);
    B._KatexImagesData_ZTv = new A._KatexImagesData(B.List_lefthook_rightarrow, 1.08, 522, null);
    B.List_leftlinesegment_rightlinesegment = C._setArrayType(makeConstList(["leftlinesegment", "rightlinesegment"]), type$.JSArray_String);
    B._KatexImagesData_JYK = new A._KatexImagesData(B.List_leftlinesegment_rightlinesegment, 0.888, 522, null);
    B.List_leftgroup_rightgroup = C._setArrayType(makeConstList(["leftgroup", "rightgroup"]), type$.JSArray_String);
    B._KatexImagesData_rH2 = new A._KatexImagesData(B.List_leftgroup_rightgroup, 0.888, 342, null);
    B.List_leftgroupunder_rightgroupunder = C._setArrayType(makeConstList(["leftgroupunder", "rightgroupunder"]), type$.JSArray_String);
    B._KatexImagesData_eiM = new A._KatexImagesData(B.List_leftgroupunder_rightgroupunder, 0.888, 342, null);
    B.List_leftmapsto_rightarrow = C._setArrayType(makeConstList(["leftmapsto", "rightarrow"]), type$.JSArray_String);
    B._KatexImagesData_szc = new A._KatexImagesData(B.List_leftmapsto_rightarrow, 1.5, 522, null);
    B.List_leftToFrom_rightToFrom = C._setArrayType(makeConstList(["leftToFrom", "rightToFrom"]), type$.JSArray_String);
    B._KatexImagesData_fMe = new A._KatexImagesData(B.List_leftToFrom_rightToFrom, 1.75, 528, null);
    B.List_IH3 = C._setArrayType(makeConstList(["baraboveleftarrow", "rightarrowabovebar"]), type$.JSArray_String);
    B._KatexImagesData_tJv = new A._KatexImagesData(B.List_IH3, 1.75, 901, null);
    B.List_MV1 = C._setArrayType(makeConstList(["baraboveshortleftharpoon", "rightharpoonaboveshortbar"]), type$.JSArray_String);
    B._KatexImagesData_Ax2 = new A._KatexImagesData(B.List_MV1, 1.75, 716, null);
    B.List_m1F = C._setArrayType(makeConstList(["shortbaraboveleftharpoon", "shortrightharpoonabovebar"]), type$.JSArray_String);
    B._KatexImagesData_R1i = new A._KatexImagesData(B.List_m1F, 1.75, 716, null);
    B.Map_B3hpY = new C.ConstantStringMap(B.Object_kce, [B._KatexImagesData_1Y2, B._KatexImagesData_gBZ, B._KatexImagesData_1Y2, B._KatexImagesData_gBZ, B._KatexImagesData_Zyd, B._KatexImagesData_Reg, B._KatexImagesData_XYX, B._KatexImagesData_xyg, B._KatexImagesData_XbC, B._KatexImagesData_4Mr, B._KatexImagesData_4Mr, B._KatexImagesData_Ixr, B._KatexImagesData_jbL, B._KatexImagesData_jbL, B._KatexImagesData_Siq, B._KatexImagesData_MeZ, B._KatexImagesData_zp7, B._KatexImagesData_Khw, B._KatexImagesData_HZv, B._KatexImagesData_jXF, B._KatexImagesData_akj, B._KatexImagesData_HZv, B._KatexImagesData_yoY, B._KatexImagesData_7Uw, B._KatexImagesData_hSk, B._KatexImagesData_V5i, B._KatexImagesData_IXN, B._KatexImagesData_ZTv, B._KatexImagesData_JYK, B._KatexImagesData_JYK, B._KatexImagesData_rH2, B._KatexImagesData_eiM, B._KatexImagesData_szc, B._KatexImagesData_fMe, B._KatexImagesData_tJv, B._KatexImagesData_Ax2, B._KatexImagesData_R1i], C.findType("ConstantStringMap<String,_KatexImagesData>"));
    B.Object_zR2 = {circle: 0, path: 1, rect: 2, polygon: 3, polyline: 4, ellipse: 5, line: 6};
    B.Map_BvFKH = new C.ConstantStringMap(B.Object_zR2, [A.parser__Paths_circle$closure(), A.parser__Paths_path$closure(), A.parser__Paths_rect$closure(), A.parser__Paths_polygon$closure(), A.parser__Paths_polyline$closure(), A.parser__Paths_ellipse$closure(), A.parser__Paths_line$closure()], C.findType("ConstantStringMap<String,Path?(SvgParser)>"));
    B.Unit_0 = new A.Unit(0, "pt");
    B.Unit_1 = new A.Unit(1, "mm");
    B.Unit_2 = new A.Unit(2, "cm");
    B.Unit_3 = new A.Unit(3, "inches");
    B.Unit_4 = new A.Unit(4, "bp");
    B.Unit_5 = new A.Unit(5, "pc");
    B.Unit_6 = new A.Unit(6, "dd");
    B.Unit_7 = new A.Unit(7, "cc");
    B.Unit_8 = new A.Unit(8, "nd");
    B.Unit_9 = new A.Unit(9, "nc");
    B.Unit_10 = new A.Unit(10, "sp");
    B.Unit_11 = new A.Unit(11, "px");
    B.Unit_12 = new A.Unit(12, "ex");
    B.Unit_13 = new A.Unit(13, "em");
    B.Unit_14 = new A.Unit(14, "mu");
    B.Unit_15 = new A.Unit(15, "lp");
    B.Unit_16 = new A.Unit(16, "cssEm");
    B.Map_Dg3fw = new C.GeneralConstantMap([B.Unit_0, 1, B.Unit_1, 2.8452755905511813, B.Unit_2, 28.45275590551181, B.Unit_3, 72.27, B.Unit_4, 1.00375, B.Unit_5, 12, B.Unit_6, 1.070008643042351, B.Unit_7, 12.84010371650821, B.Unit_8, 1.0669781931464175, B.Unit_9, 12.80373831775701, B.Unit_10, 0.0000152587890625, B.Unit_11, 1.00375, B.Unit_12, null, B.Unit_13, null, B.Unit_14, null, B.Unit_15, 0.45168749999999996, B.Unit_16, null], C.findType("GeneralConstantMap<Unit,double?>"));
    B.Map_Dgfp9 = new C.GeneralConstantMap([B.Unit_0, "pt", B.Unit_1, "mm", B.Unit_2, "cm", B.Unit_3, "inches", B.Unit_4, "bp", B.Unit_5, "pc", B.Unit_6, "dd", B.Unit_7, "cc", B.Unit_8, "nd", B.Unit_9, "nc", B.Unit_10, "sp", B.Unit_11, "px", B.Unit_12, "ex", B.Unit_13, "em", B.Unit_14, "mu", B.Unit_15, "lp", B.Unit_16, "cssEm"], C.findType("GeneralConstantMap<Unit,String>"));
    B.Object_pPH = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "\u2261": 10, "\u227a": 11, "\u227b": 12, "\u223c": 13, "\u2aaf": 14, "\u2ab0": 15, "\u2243": 16, "\u2223": 17, "\u226a": 18, "\u226b": 19, "\u224d": 20, "\u22c8": 21, "\u2323": 22, "\u2291": 23, "\u2292": 24, "\u2250": 25, "\u2322": 26, "\u220b": 27, "\u221d": 28, "\u22a2": 29, "\u22a3": 30, "\u2135": 31, "\u2200": 32, "\u210f": 33, "\u2203": 34, "\u2207": 35, "\u266d": 36, "\u2113": 37, "\u266e": 38, "\u2663": 39, "\u2118": 40, "\u266f": 41, "\u2662": 42, "\u211c": 43, "\u2661": 44, "\u2111": 45, "\u2660": 46, "\u23b1": 47, "\u23b0": 48, "\u27ef": 49, "\u27ee": 50, "\u2213": 51, "\u2296": 52, "\u228e": 53, "\u2293": 54, "\u2294": 55, "\u2240": 56, "\u27f5": 57, "\u21d0": 58, "\u27f8": 59, "\u27f6": 60, "\u21d2": 61, "\u27f9": 62, "\u2194": 63, "\u27f7": 64, "\u21d4": 65, "\u27fa": 66, "\u21a6": 67, "\u27fc": 68, "\u2197": 69, "\u21a9": 70, "\u21aa": 71, "\u2198": 72, "\u21bc": 73, "\u21c0": 74, "\u2199": 75, "\u21bd": 76, "\u21c1": 77, "\u2196": 78, "\u21cc": 79, "\u226e": 80, "\u2a87": 81, "\u2268": 82, "\u22e6": 83, "\u2a89": 84, "\u2280": 85, "\u22e0": 86, "\u22e8": 87, "\u2ab9": 88, "\u2241": 89, "\u2224": 90, "\u22ac": 91, "\u22ad": 92, "\u22ec": 93, "\u228a": 94, "\u2acb": 95, "\u226f": 96, "\u2a88": 97, "\u2269": 98, "\u22e7": 99, "\u2a8a": 100, "\u2281": 101, "\u22e1": 102, "\u22e9": 103, "\u2aba": 104, "\u2246": 105, "\u2226": 106, "\u22af": 107, "\u22ed": 108, "\u228b": 109, "\u2acc": 110, "\u22ae": 111, "\u2ab5": 112, "\u2ab6": 113, "\u219a": 114, "\u219b": 115, "\u21cd": 116, "\u21cf": 117, "\u21ae": 118, "\u21ce": 119, "\u2221": 120, "\u2132": 121, "\u2141": 122, "\u2222": 123, "\u2201": 124, "\xf0": 125, "\xa5": 126, "\u2713": 127, "\u2136": 128, "\u2138": 129, "\u2137": 130, "\u03dd": 131, "\u250c": 132, "\u2510": 133, "\u2514": 134, "\u2518": 135, "\u2266": 136, "\u2a7d": 137, "\u2a95": 138, "\u2272": 139, "\u2a85": 140, "\u224a": 141, "\u22d8": 142, "\u2276": 143, "\u22da": 144, "\u2a8b": 145, "\u2253": 146, "\u2252": 147, "\u223d": 148, "\u22cd": 149, "\u2ac5": 150, "\u22d0": 151, "\u228f": 152, "\u227c": 153, "\u22de": 154, "\u227e": 155, "\u2ab7": 156, "\u22a8": 157, "\u22aa": 158, "\u224f": 159, "\u224e": 160, "\u2267": 161, "\u2a7e": 162, "\u2a96": 163, "\u2273": 164, "\u2a86": 165, "\u22d9": 166, "\u2277": 167, "\u22db": 168, "\u2a8c": 169, "\u2256": 170, "\u2257": 171, "\u225c": 172, "\u2ac6": 173, "\u22d1": 174, "\u2290": 175, "\u227d": 176, "\u22df": 177, "\u227f": 178, "\u2ab8": 179, "\u22a9": 180, "\u226c": 181, "\u22d4": 182, "\u2234": 183, "\u2235": 184, "\u2242": 185, "\u2251": 186, "\u2214": 187, "\u22d2": 188, "\u22d3": 189, "\u2a5e": 190, "\u229f": 191, "\u229e": 192, "\u22c7": 193, "\u22c9": 194, "\u22ca": 195, "\u22cb": 196, "\u22cc": 197, "\u22cf": 198, "\u22ce": 199, "\u229d": 200, "\u229b": 201, "\u22ba": 202, "\u22a0": 203, "\u21e2": 204, "\u21e0": 205, "\u21c7": 206, "\u21c6": 207, "\u21da": 208, "\u219e": 209, "\u21a2": 210, "\u21ab": 211, "\u21cb": 212, "\u21b6": 213, "\u21ba": 214, "\u21b0": 215, "\u21c8": 216, "\u21bf": 217, "\u21c3": 218, "\u22b8": 219, "\u21ad": 220, "\u21c9": 221, "\u21c4": 222, "\u21a0": 223, "\u21a3": 224, "\u21ac": 225, "\u21b7": 226, "\u21bb": 227, "\u21b1": 228, "\u21ca": 229, "\u21be": 230, "\u21c2": 231, "\u21dd": 232, "\u21db": 233, "`": 234, "\u2220": 235, "\u221e": 236, "\u0393": 237, "\u0394": 238, "\u0398": 239, "\u039b": 240, "\u039e": 241, "\u03a0": 242, "\u03a3": 243, "\u03a5": 244, "\u03a6": 245, "\u03a8": 246, "\u03a9": 247, "\u0391": 248, "\u0392": 249, "\u0395": 250, "\u0396": 251, "\u0397": 252, "\u0399": 253, "\u039a": 254, "\u039c": 255, "\u039d": 256, "\u039f": 257, "\u03a1": 258, "\u03a4": 259, "\u03a7": 260, "\xac": 261, "\u03b1": 262, "\u03b2": 263, "\u03b3": 264, "\u03b4": 265, "\u03f5": 266, "\u03b6": 267, "\u03b7": 268, "\u03b8": 269, "\u03b9": 270, "\u03ba": 271, "\u03bb": 272, "\u03bc": 273, "\u03bd": 274, "\u03be": 275, "\u03bf": 276, "\u03c0": 277, "\u03c1": 278, "\u03c3": 279, "\u03c4": 280, "\u03c5": 281, "\u03d5": 282, "\u03c7": 283, "\u03c8": 284, "\u03c9": 285, "\u03b5": 286, "\u03d1": 287, "\u03d6": 288, "\u03f1": 289, "\u03c2": 290, "\u03c6": 291, "*": 292, "+": 293, "-": 294, "\u22c5": 295, "\xf7": 296, "\xb1": 297, "\xd7": 298, "\u2229": 299, "\u222a": 300, "\u2227": 301, "\u2228": 302, "(": 303, "[": 304, "\u27e8": 305, ")": 306, "]": 307, "?": 308, "!": 309, "\u27e9": 310, "=": 311, "<": 312, ">": 313, ":": 314, "\u2248": 315, "\u2245": 316, "\u2265": 317, "\u2208": 318, "\u2282": 319, "\u2283": 320, "\u2286": 321, "\u2287": 322, "\u2288": 323, "\u2289": 324, "\u2190": 325, "\u2264": 326, "\u2192": 327, "\u2271": 328, "\u2270": 329, ",": 330, ";": 331, "\u22bc": 332, "\u22bb": 333, "\u2299": 334, "\u2295": 335, "\u2297": 336, "\u2202": 337, "\u2298": 338, "\u229a": 339, "\u22a1": 340, "\u230a": 341, "\u230b": 342, "\u2308": 343, "\u2309": 344, "|": 345, "\u2191": 346, "\u21d1": 347, "\u2193": 348, "\u21d3": 349, "\u2195": 350, "\u21d5": 351, "\u2026": 352, "\u22ef": 353, "\u22f1": 354, "\u0131": 355, "\u0237": 356, "\xb0": 357, "\xa3": 358, "/": 359, "@": 360, ".": 361, '"': 362, A: 363, B: 364, C: 365, D: 366, E: 367, F: 368, G: 369, H: 370, I: 371, J: 372, K: 373, L: 374, M: 375, N: 376, O: 377, P: 378, Q: 379, R: 380, S: 381, T: 382, U: 383, V: 384, W: 385, X: 386, Y: 387, Z: 388, a: 389, b: 390, c: 391, d: 392, e: 393, f: 394, g: 395, h: 396, i: 397, j: 398, k: 399, l: 400, m: 401, n: 402, o: 403, p: 404, q: 405, r: 406, s: 407, t: 408, u: 409, v: 410, w: 411, x: 412, y: 413, z: 414, "\u2102": 415, "\u210d": 416, "\u2115": 417, "\u2119": 418, "\u211a": 419, "\u211d": 420, "\u2124": 421, "\u210e": 422, "\ud835\udc00": 423, "\ud835\udc34": 424, "\ud835\udc68": 425, "\ud835\udd04": 426, "\ud835\udda0": 427, "\ud835\uddd4": 428, "\ud835\ude08": 429, "\ud835\ude70": 430, "\ud835\udd38": 431, "\ud835\udc9c": 432, "\ud835\udc01": 433, "\ud835\udc35": 434, "\ud835\udc69": 435, "\ud835\udd05": 436, "\ud835\udda1": 437, "\ud835\uddd5": 438, "\ud835\ude09": 439, "\ud835\ude71": 440, "\ud835\udd39": 441, "\ud835\udc9d": 442, "\ud835\udc02": 443, "\ud835\udc36": 444, "\ud835\udc6a": 445, "\ud835\udd06": 446, "\ud835\udda2": 447, "\ud835\uddd6": 448, "\ud835\ude0a": 449, "\ud835\ude72": 450, "\ud835\udd3a": 451, "\ud835\udc9e": 452, "\ud835\udc03": 453, "\ud835\udc37": 454, "\ud835\udc6b": 455, "\ud835\udd07": 456, "\ud835\udda3": 457, "\ud835\uddd7": 458, "\ud835\ude0b": 459, "\ud835\ude73": 460, "\ud835\udd3b": 461, "\ud835\udc9f": 462, "\ud835\udc04": 463, "\ud835\udc38": 464, "\ud835\udc6c": 465, "\ud835\udd08": 466, "\ud835\udda4": 467, "\ud835\uddd8": 468, "\ud835\ude0c": 469, "\ud835\ude74": 470, "\ud835\udd3c": 471, "\ud835\udca0": 472, "\ud835\udc05": 473, "\ud835\udc39": 474, "\ud835\udc6d": 475, "\ud835\udd09": 476, "\ud835\udda5": 477, "\ud835\uddd9": 478, "\ud835\ude0d": 479, "\ud835\ude75": 480, "\ud835\udd3d": 481, "\ud835\udca1": 482, "\ud835\udc06": 483, "\ud835\udc3a": 484, "\ud835\udc6e": 485, "\ud835\udd0a": 486, "\ud835\udda6": 487, "\ud835\uddda": 488, "\ud835\ude0e": 489, "\ud835\ude76": 490, "\ud835\udd3e": 491, "\ud835\udca2": 492, "\ud835\udc07": 493, "\ud835\udc3b": 494, "\ud835\udc6f": 495, "\ud835\udd0b": 496, "\ud835\udda7": 497, "\ud835\udddb": 498, "\ud835\ude0f": 499, "\ud835\ude77": 500, "\ud835\udd3f": 501, "\ud835\udca3": 502, "\ud835\udc08": 503, "\ud835\udc3c": 504, "\ud835\udc70": 505, "\ud835\udd0c": 506, "\ud835\udda8": 507, "\ud835\udddc": 508, "\ud835\ude10": 509, "\ud835\ude78": 510, "\ud835\udd40": 511, "\ud835\udca4": 512, "\ud835\udc09": 513, "\ud835\udc3d": 514, "\ud835\udc71": 515, "\ud835\udd0d": 516, "\ud835\udda9": 517, "\ud835\udddd": 518, "\ud835\ude11": 519, "\ud835\ude79": 520, "\ud835\udd41": 521, "\ud835\udca5": 522, "\ud835\udc0a": 523, "\ud835\udc3e": 524, "\ud835\udc72": 525, "\ud835\udd0e": 526, "\ud835\uddaa": 527, "\ud835\uddde": 528, "\ud835\ude12": 529, "\ud835\ude7a": 530, "\ud835\udd42": 531, "\ud835\udca6": 532, "\ud835\udc0b": 533, "\ud835\udc3f": 534, "\ud835\udc73": 535, "\ud835\udd0f": 536, "\ud835\uddab": 537, "\ud835\udddf": 538, "\ud835\ude13": 539, "\ud835\ude7b": 540, "\ud835\udd43": 541, "\ud835\udca7": 542, "\ud835\udc0c": 543, "\ud835\udc40": 544, "\ud835\udc74": 545, "\ud835\udd10": 546, "\ud835\uddac": 547, "\ud835\udde0": 548, "\ud835\ude14": 549, "\ud835\ude7c": 550, "\ud835\udd44": 551, "\ud835\udca8": 552, "\ud835\udc0d": 553, "\ud835\udc41": 554, "\ud835\udc75": 555, "\ud835\udd11": 556, "\ud835\uddad": 557, "\ud835\udde1": 558, "\ud835\ude15": 559, "\ud835\ude7d": 560, "\ud835\udd45": 561, "\ud835\udca9": 562, "\ud835\udc0e": 563, "\ud835\udc42": 564, "\ud835\udc76": 565, "\ud835\udd12": 566, "\ud835\uddae": 567, "\ud835\udde2": 568, "\ud835\ude16": 569, "\ud835\ude7e": 570, "\ud835\udd46": 571, "\ud835\udcaa": 572, "\ud835\udc0f": 573, "\ud835\udc43": 574, "\ud835\udc77": 575, "\ud835\udd13": 576, "\ud835\uddaf": 577, "\ud835\udde3": 578, "\ud835\ude17": 579, "\ud835\ude7f": 580, "\ud835\udd47": 581, "\ud835\udcab": 582, "\ud835\udc10": 583, "\ud835\udc44": 584, "\ud835\udc78": 585, "\ud835\udd14": 586, "\ud835\uddb0": 587, "\ud835\udde4": 588, "\ud835\ude18": 589, "\ud835\ude80": 590, "\ud835\udd48": 591, "\ud835\udcac": 592, "\ud835\udc11": 593, "\ud835\udc45": 594, "\ud835\udc79": 595, "\ud835\udd15": 596, "\ud835\uddb1": 597, "\ud835\udde5": 598, "\ud835\ude19": 599, "\ud835\ude81": 600, "\ud835\udd49": 601, "\ud835\udcad": 602, "\ud835\udc12": 603, "\ud835\udc46": 604, "\ud835\udc7a": 605, "\ud835\udd16": 606, "\ud835\uddb2": 607, "\ud835\udde6": 608, "\ud835\ude1a": 609, "\ud835\ude82": 610, "\ud835\udd4a": 611, "\ud835\udcae": 612, "\ud835\udc13": 613, "\ud835\udc47": 614, "\ud835\udc7b": 615, "\ud835\udd17": 616, "\ud835\uddb3": 617, "\ud835\udde7": 618, "\ud835\ude1b": 619, "\ud835\ude83": 620, "\ud835\udd4b": 621, "\ud835\udcaf": 622, "\ud835\udc14": 623, "\ud835\udc48": 624, "\ud835\udc7c": 625, "\ud835\udd18": 626, "\ud835\uddb4": 627, "\ud835\udde8": 628, "\ud835\ude1c": 629, "\ud835\ude84": 630, "\ud835\udd4c": 631, "\ud835\udcb0": 632, "\ud835\udc15": 633, "\ud835\udc49": 634, "\ud835\udc7d": 635, "\ud835\udd19": 636, "\ud835\uddb5": 637, "\ud835\udde9": 638, "\ud835\ude1d": 639, "\ud835\ude85": 640, "\ud835\udd4d": 641, "\ud835\udcb1": 642, "\ud835\udc16": 643, "\ud835\udc4a": 644, "\ud835\udc7e": 645, "\ud835\udd1a": 646, "\ud835\uddb6": 647, "\ud835\uddea": 648, "\ud835\ude1e": 649, "\ud835\ude86": 650, "\ud835\udd4e": 651, "\ud835\udcb2": 652, "\ud835\udc17": 653, "\ud835\udc4b": 654, "\ud835\udc7f": 655, "\ud835\udd1b": 656, "\ud835\uddb7": 657, "\ud835\uddeb": 658, "\ud835\ude1f": 659, "\ud835\ude87": 660, "\ud835\udd4f": 661, "\ud835\udcb3": 662, "\ud835\udc18": 663, "\ud835\udc4c": 664, "\ud835\udc80": 665, "\ud835\udd1c": 666, "\ud835\uddb8": 667, "\ud835\uddec": 668, "\ud835\ude20": 669, "\ud835\ude88": 670, "\ud835\udd50": 671, "\ud835\udcb4": 672, "\ud835\udc19": 673, "\ud835\udc4d": 674, "\ud835\udc81": 675, "\ud835\udd1d": 676, "\ud835\uddb9": 677, "\ud835\udded": 678, "\ud835\ude21": 679, "\ud835\ude89": 680, "\ud835\udd51": 681, "\ud835\udcb5": 682, "\ud835\udc1a": 683, "\ud835\udc4e": 684, "\ud835\udc82": 685, "\ud835\udd1e": 686, "\ud835\uddba": 687, "\ud835\uddee": 688, "\ud835\ude22": 689, "\ud835\ude8a": 690, "\ud835\udc1b": 691, "\ud835\udc4f": 692, "\ud835\udc83": 693, "\ud835\udd1f": 694, "\ud835\uddbb": 695, "\ud835\uddef": 696, "\ud835\ude23": 697, "\ud835\ude8b": 698, "\ud835\udc1c": 699, "\ud835\udc50": 700, "\ud835\udc84": 701, "\ud835\udd20": 702, "\ud835\uddbc": 703, "\ud835\uddf0": 704, "\ud835\ude24": 705, "\ud835\ude8c": 706, "\ud835\udc1d": 707, "\ud835\udc51": 708, "\ud835\udc85": 709, "\ud835\udd21": 710, "\ud835\uddbd": 711, "\ud835\uddf1": 712, "\ud835\ude25": 713, "\ud835\ude8d": 714, "\ud835\udc1e": 715, "\ud835\udc52": 716, "\ud835\udc86": 717, "\ud835\udd22": 718, "\ud835\uddbe": 719, "\ud835\uddf2": 720, "\ud835\ude26": 721, "\ud835\ude8e": 722, "\ud835\udc1f": 723, "\ud835\udc53": 724, "\ud835\udc87": 725, "\ud835\udd23": 726, "\ud835\uddbf": 727, "\ud835\uddf3": 728, "\ud835\ude27": 729, "\ud835\ude8f": 730, "\ud835\udc20": 731, "\ud835\udc54": 732, "\ud835\udc88": 733, "\ud835\udd24": 734, "\ud835\uddc0": 735, "\ud835\uddf4": 736, "\ud835\ude28": 737, "\ud835\ude90": 738, "\ud835\udc21": 739, "\ud835\udc55": 740, "\ud835\udc89": 741, "\ud835\udd25": 742, "\ud835\uddc1": 743, "\ud835\uddf5": 744, "\ud835\ude29": 745, "\ud835\ude91": 746, "\ud835\udc22": 747, "\ud835\udc56": 748, "\ud835\udc8a": 749, "\ud835\udd26": 750, "\ud835\uddc2": 751, "\ud835\uddf6": 752, "\ud835\ude2a": 753, "\ud835\ude92": 754, "\ud835\udc23": 755, "\ud835\udc57": 756, "\ud835\udc8b": 757, "\ud835\udd27": 758, "\ud835\uddc3": 759, "\ud835\uddf7": 760, "\ud835\ude2b": 761, "\ud835\ude93": 762, "\ud835\udc24": 763, "\ud835\udc58": 764, "\ud835\udc8c": 765, "\ud835\udd28": 766, "\ud835\uddc4": 767, "\ud835\uddf8": 768, "\ud835\ude2c": 769, "\ud835\ude94": 770, "\ud835\udc25": 771, "\ud835\udc59": 772, "\ud835\udc8d": 773, "\ud835\udd29": 774, "\ud835\uddc5": 775, "\ud835\uddf9": 776, "\ud835\ude2d": 777, "\ud835\ude95": 778, "\ud835\udc26": 779, "\ud835\udc5a": 780, "\ud835\udc8e": 781, "\ud835\udd2a": 782, "\ud835\uddc6": 783, "\ud835\uddfa": 784, "\ud835\ude2e": 785, "\ud835\ude96": 786, "\ud835\udc27": 787, "\ud835\udc5b": 788, "\ud835\udc8f": 789, "\ud835\udd2b": 790, "\ud835\uddc7": 791, "\ud835\uddfb": 792, "\ud835\ude2f": 793, "\ud835\ude97": 794, "\ud835\udc28": 795, "\ud835\udc5c": 796, "\ud835\udc90": 797, "\ud835\udd2c": 798, "\ud835\uddc8": 799, "\ud835\uddfc": 800, "\ud835\ude30": 801, "\ud835\ude98": 802, "\ud835\udc29": 803, "\ud835\udc5d": 804, "\ud835\udc91": 805, "\ud835\udd2d": 806, "\ud835\uddc9": 807, "\ud835\uddfd": 808, "\ud835\ude31": 809, "\ud835\ude99": 810, "\ud835\udc2a": 811, "\ud835\udc5e": 812, "\ud835\udc92": 813, "\ud835\udd2e": 814, "\ud835\uddca": 815, "\ud835\uddfe": 816, "\ud835\ude32": 817, "\ud835\ude9a": 818, "\ud835\udc2b": 819, "\ud835\udc5f": 820, "\ud835\udc93": 821, "\ud835\udd2f": 822, "\ud835\uddcb": 823, "\ud835\uddff": 824, "\ud835\ude33": 825, "\ud835\ude9b": 826, "\ud835\udc2c": 827, "\ud835\udc60": 828, "\ud835\udc94": 829, "\ud835\udd30": 830, "\ud835\uddcc": 831, "\ud835\ude00": 832, "\ud835\ude34": 833, "\ud835\ude9c": 834, "\ud835\udc2d": 835, "\ud835\udc61": 836, "\ud835\udc95": 837, "\ud835\udd31": 838, "\ud835\uddcd": 839, "\ud835\ude01": 840, "\ud835\ude35": 841, "\ud835\ude9d": 842, "\ud835\udc2e": 843, "\ud835\udc62": 844, "\ud835\udc96": 845, "\ud835\udd32": 846, "\ud835\uddce": 847, "\ud835\ude02": 848, "\ud835\ude36": 849, "\ud835\ude9e": 850, "\ud835\udc2f": 851, "\ud835\udc63": 852, "\ud835\udc97": 853, "\ud835\udd33": 854, "\ud835\uddcf": 855, "\ud835\ude03": 856, "\ud835\ude37": 857, "\ud835\ude9f": 858, "\ud835\udc30": 859, "\ud835\udc64": 860, "\ud835\udc98": 861, "\ud835\udd34": 862, "\ud835\uddd0": 863, "\ud835\ude04": 864, "\ud835\ude38": 865, "\ud835\udea0": 866, "\ud835\udc31": 867, "\ud835\udc65": 868, "\ud835\udc99": 869, "\ud835\udd35": 870, "\ud835\uddd1": 871, "\ud835\ude05": 872, "\ud835\ude39": 873, "\ud835\udea1": 874, "\ud835\udc32": 875, "\ud835\udc66": 876, "\ud835\udc9a": 877, "\ud835\udd36": 878, "\ud835\uddd2": 879, "\ud835\ude06": 880, "\ud835\ude3a": 881, "\ud835\udea2": 882, "\ud835\udc33": 883, "\ud835\udc67": 884, "\ud835\udc9b": 885, "\ud835\udd37": 886, "\ud835\uddd3": 887, "\ud835\ude07": 888, "\ud835\ude3b": 889, "\ud835\udea3": 890, "\ud835\udd5c": 891, "\ud835\udfce": 892, "\ud835\udfe2": 893, "\ud835\udfec": 894, "\ud835\udff6": 895, "\ud835\udfcf": 896, "\ud835\udfe3": 897, "\ud835\udfed": 898, "\ud835\udff7": 899, "\ud835\udfd0": 900, "\ud835\udfe4": 901, "\ud835\udfee": 902, "\ud835\udff8": 903, "\ud835\udfd1": 904, "\ud835\udfe5": 905, "\ud835\udfef": 906, "\ud835\udff9": 907, "\ud835\udfd2": 908, "\ud835\udfe6": 909, "\ud835\udff0": 910, "\ud835\udffa": 911, "\ud835\udfd3": 912, "\ud835\udfe7": 913, "\ud835\udff1": 914, "\ud835\udffb": 915, "\ud835\udfd4": 916, "\ud835\udfe8": 917, "\ud835\udff2": 918, "\ud835\udffc": 919, "\ud835\udfd5": 920, "\ud835\udfe9": 921, "\ud835\udff3": 922, "\ud835\udffd": 923, "\ud835\udfd6": 924, "\ud835\udfea": 925, "\ud835\udff4": 926, "\ud835\udffe": 927, "\ud835\udfd7": 928, "\ud835\udfeb": 929, "\ud835\udff5": 930, "\ud835\udfff": 931, "\xc7": 932, "\xd0": 933, "\xde": 934, "\xe7": 935, "\xfe": 936, "\xa0": 937, " ": 938, "\\equiv": 939, "\\prec": 940, "\\succ": 941, "\\sim": 942, "\\preceq": 943, "\\succeq": 944, "\\simeq": 945, "\\mid": 946, "\\ll": 947, "\\gg": 948, "\\asymp": 949, "\\bowtie": 950, "\\smile": 951, "\\sqsubseteq": 952, "\\sqsupseteq": 953, "\\doteq": 954, "\\frown": 955, "\\ni": 956, "\\propto": 957, "\\vdash": 958, "\\dashv": 959, "\\owns": 960, "\\ldotp": 961, "\\cdotp": 962, "\\aleph": 963, "\\forall": 964, "\\hbar": 965, "\\exists": 966, "\\nabla": 967, "\\flat": 968, "\\ell": 969, "\\natural": 970, "\\clubsuit": 971, "\\wp": 972, "\\sharp": 973, "\\diamondsuit": 974, "\\Re": 975, "\\heartsuit": 976, "\\Im": 977, "\\spadesuit": 978, "\\rmoustache": 979, "\\lmoustache": 980, "\\rgroup": 981, "\\lgroup": 982, "\\mp": 983, "\\ominus": 984, "\\uplus": 985, "\\sqcap": 986, "\\ast": 987, "\\sqcup": 988, "\\wr": 989, "\\longleftarrow": 990, "\\Leftarrow": 991, "\\Longleftarrow": 992, "\\longrightarrow": 993, "\\Rightarrow": 994, "\\Longrightarrow": 995, "\\leftrightarrow": 996, "\\longleftrightarrow": 997, "\\Leftrightarrow": 998, "\\Longleftrightarrow": 999, "\\mapsto": 1000, "\\longmapsto": 1001, "\\nearrow": 1002, "\\hookleftarrow": 1003, "\\hookrightarrow": 1004, "\\searrow": 1005, "\\leftharpoonup": 1006, "\\rightharpoonup": 1007, "\\swarrow": 1008, "\\leftharpoondown": 1009, "\\rightharpoondown": 1010, "\\nwarrow": 1011, "\\rightleftharpoons": 1012, "\\nless": 1013, "\\nleqslant": 1014, "\\nleqq": 1015, "\\lneq": 1016, "\\lneqq": 1017, "\\lvertneqq": 1018, "\\lnsim": 1019, "\\lnapprox": 1020, "\\nprec": 1021, "\\npreceq": 1022, "\\precnsim": 1023, "\\precnapprox": 1024, "\\nsim": 1025, "\\nshortmid": 1026, "\\nmid": 1027, "\\nvdash": 1028, "\\nvDash": 1029, "\\ntrianglelefteq": 1030, "\\subsetneq": 1031, "\\varsubsetneq": 1032, "\\subsetneqq": 1033, "\\varsubsetneqq": 1034, "\\ngtr": 1035, "\\ngeqslant": 1036, "\\ngeqq": 1037, "\\gneq": 1038, "\\gneqq": 1039, "\\gvertneqq": 1040, "\\gnsim": 1041, "\\gnapprox": 1042, "\\nsucc": 1043, "\\nsucceq": 1044, "\\succnsim": 1045, "\\succnapprox": 1046, "\\ncong": 1047, "\\nshortparallel": 1048, "\\nparallel": 1049, "\\nVDash": 1050, "\\ntrianglerighteq": 1051, "\\nsupseteqq": 1052, "\\supsetneq": 1053, "\\varsupsetneq": 1054, "\\supsetneqq": 1055, "\\varsupsetneqq": 1056, "\\nVdash": 1057, "\\precneqq": 1058, "\\succneqq": 1059, "\\nsubseteqq": 1060, "\\nleftarrow": 1061, "\\nrightarrow": 1062, "\\nLeftarrow": 1063, "\\nRightarrow": 1064, "\\nleftrightarrow": 1065, "\\nLeftrightarrow": 1066, "\\hslash": 1067, "\\measuredangle": 1068, "\\Finv": 1069, "\\Game": 1070, "\\sphericalangle": 1071, "\\complement": 1072, "\\eth": 1073, "\\yen": 1074, "\\checkmark": 1075, "\\beth": 1076, "\\daleth": 1077, "\\gimel": 1078, "\\digamma": 1079, "\\@ulcorner": 1080, "\\@urcorner": 1081, "\\@llcorner": 1082, "\\@lrcorner": 1083, "\\leqq": 1084, "\\leqslant": 1085, "\\eqslantless": 1086, "\\lesssim": 1087, "\\lessapprox": 1088, "\\approxeq": 1089, "\\lll": 1090, "\\lessgtr": 1091, "\\lesseqgtr": 1092, "\\lesseqqgtr": 1093, "\\doteqdot": 1094, "\\risingdotseq": 1095, "\\fallingdotseq": 1096, "\\backsim": 1097, "\\backsimeq": 1098, "\\subseteqq": 1099, "\\Subset": 1100, "\\sqsubset": 1101, "\\preccurlyeq": 1102, "\\curlyeqprec": 1103, "\\precsim": 1104, "\\precapprox": 1105, "\\vDash": 1106, "\\Vvdash": 1107, "\\smallsmile": 1108, "\\smallfrown": 1109, "\\bumpeq": 1110, "\\Bumpeq": 1111, "\\geqq": 1112, "\\geqslant": 1113, "\\eqslantgtr": 1114, "\\gtrsim": 1115, "\\gtrapprox": 1116, "\\ggg": 1117, "\\gtrless": 1118, "\\gtreqless": 1119, "\\gtreqqless": 1120, "\\eqcirc": 1121, "\\circeq": 1122, "\\triangleq": 1123, "\\thicksim": 1124, "\\thickapprox": 1125, "\\supseteqq": 1126, "\\Supset": 1127, "\\sqsupset": 1128, "\\succcurlyeq": 1129, "\\curlyeqsucc": 1130, "\\succsim": 1131, "\\succapprox": 1132, "\\Vdash": 1133, "\\shortmid": 1134, "\\between": 1135, "\\pitchfork": 1136, "\\varpropto": 1137, "\\therefore": 1138, "\\because": 1139, "\\llless": 1140, "\\gggtr": 1141, "\\eqsim": 1142, "\\Join": 1143, "\\Doteq": 1144, "\\dotplus": 1145, "\\Cap": 1146, "\\Cup": 1147, "\\doublebarwedge": 1148, "\\boxminus": 1149, "\\boxplus": 1150, "\\divideontimes": 1151, "\\ltimes": 1152, "\\rtimes": 1153, "\\leftthreetimes": 1154, "\\rightthreetimes": 1155, "\\curlywedge": 1156, "\\curlyvee": 1157, "\\circleddash": 1158, "\\circledast": 1159, "\\centerdot": 1160, "\\intercal": 1161, "\\doublecap": 1162, "\\doublecup": 1163, "\\boxtimes": 1164, "\\dashrightarrow": 1165, "\\dashleftarrow": 1166, "\\leftleftarrows": 1167, "\\leftrightarrows": 1168, "\\Lleftarrow": 1169, "\\twoheadleftarrow": 1170, "\\leftarrowtail": 1171, "\\looparrowleft": 1172, "\\leftrightharpoons": 1173, "\\curvearrowleft": 1174, "\\circlearrowleft": 1175, "\\Lsh": 1176, "\\upuparrows": 1177, "\\upharpoonleft": 1178, "\\downharpoonleft": 1179, "\\multimap": 1180, "\\leftrightsquigarrow": 1181, "\\rightrightarrows": 1182, "\\rightleftarrows": 1183, "\\twoheadrightarrow": 1184, "\\rightarrowtail": 1185, "\\looparrowright": 1186, "\\curvearrowright": 1187, "\\circlearrowright": 1188, "\\Rsh": 1189, "\\downdownarrows": 1190, "\\upharpoonright": 1191, "\\downharpoonright": 1192, "\\rightsquigarrow": 1193, "\\leadsto": 1194, "\\Rrightarrow": 1195, "\\restriction": 1196, "\\angle": 1197, "\\infty": 1198, "\\Gamma": 1199, "\\Delta": 1200, "\\Theta": 1201, "\\Lambda": 1202, "\\Xi": 1203, "\\Pi": 1204, "\\Sigma": 1205, "\\Upsilon": 1206, "\\Phi": 1207, "\\Psi": 1208, "\\Omega": 1209, "\\neg": 1210, "\\lnot": 1211, "\\alpha": 1212, "\\beta": 1213, "\\gamma": 1214, "\\delta": 1215, "\\epsilon": 1216, "\\zeta": 1217, "\\eta": 1218, "\\theta": 1219, "\\iota": 1220, "\\kappa": 1221, "\\lambda": 1222, "\\mu": 1223, "\\nu": 1224, "\\xi": 1225, "\\omicron": 1226, "\\pi": 1227, "\\rho": 1228, "\\sigma": 1229, "\\tau": 1230, "\\upsilon": 1231, "\\phi": 1232, "\\chi": 1233, "\\psi": 1234, "\\omega": 1235, "\\varepsilon": 1236, "\\vartheta": 1237, "\\varpi": 1238, "\\varrho": 1239, "\\varsigma": 1240, "\\varphi": 1241, "\\cdot": 1242, "\\div": 1243, "\\pm": 1244, "\\times": 1245, "\\cap": 1246, "\\cup": 1247, "\\land": 1248, "\\lor": 1249, "\\wedge": 1250, "\\vee": 1251, "\\langle": 1252, "\\lvert": 1253, "\\rangle": 1254, "\\rvert": 1255, "\\approx": 1256, "\\cong": 1257, "\\ge": 1258, "\\geq": 1259, "\\gets": 1260, "\\gt": 1261, "\\in": 1262, "\\subset": 1263, "\\supset": 1264, "\\subseteq": 1265, "\\supseteq": 1266, "\\nsubseteq": 1267, "\\nsupseteq": 1268, "\\models": 1269, "\\leftarrow": 1270, "\\le": 1271, "\\leq": 1272, "\\lt": 1273, "\\rightarrow": 1274, "\\to": 1275, "\\ngeq": 1276, "\\nleq": 1277, "\\ ": 1278, "~": 1279, "\\space": 1280, "\\nobreakspace": 1281, "\\barwedge": 1282, "\\veebar": 1283, "\\odot": 1284, "\\oplus": 1285, "\\otimes": 1286, "\\partial": 1287, "\\oslash": 1288, "\\circledcirc": 1289, "\\boxdot": 1290, "\\lbrack": 1291, "\\rbrack": 1292, "\\lparen": 1293, "\\rparen": 1294, "\\lfloor": 1295, "\\rfloor": 1296, "\\lceil": 1297, "\\rceil": 1298, "\\vert": 1299, "\\uparrow": 1300, "\\Uparrow": 1301, "\\downarrow": 1302, "\\Downarrow": 1303, "\\updownarrow": 1304, "\\Updownarrow": 1305, "\\mathellipsis": 1306, "\\ldots": 1307, "\\@cdots": 1308, "\\ddots": 1309, "\\imath": 1310, "\\jmath": 1311, "\\degree": 1312, "\\pounds": 1313, "\\mathsterling": 1314, "\\perp": 1315, "\\bot": 1316, "\\parallel": 1317, "\\shortparallel": 1318, "\\lVert": 1319, "\\rVert": 1320, "\\|": 1321, "\\Vert": 1322, "\\#": 1323, "\\&": 1324, "\\And": 1325, "\\dagger": 1326, "\\dag": 1327, "\\ddagger": 1328, "\\ddag": 1329, "\\bigcirc": 1330, "\\bullet": 1331, "\\amalg": 1332, "\\ntriangleleft": 1333, "\\ntriangleright": 1334, "\\trianglelefteq": 1335, "\\unlhd": 1336, "\\trianglerighteq": 1337, "\\unrhd": 1338, "\\bigtriangleup": 1339, "\\vartriangle": 1340, "\\triangle": 1341, "\\bigtriangledown": 1342, "\\triangledown": 1343, "\\lozenge": 1344, "\\Diamond": 1345, "\\circledS": 1346, "\\circledR": 1347, "\\nexists": 1348, "\\mho": 1349, "\\backprime": 1350, "\\blacktriangle": 1351, "\\blacktriangledown": 1352, "\\blacksquare": 1353, "\\blacklozenge": 1354, "\\bigstar": 1355, "\\diagup": 1356, "\\diagdown": 1357, "\\square": 1358, "\\Box": 1359, "\\varkappa": 1360, "\\lessdot": 1361, "\\lhd": 1362, "\\vartriangleleft": 1363, "\\gtrdot": 1364, "\\vartriangleright": 1365, "\\rhd": 1366, "\\blacktriangleleft": 1367, "\\backepsilon": 1368, "\\blacktriangleright": 1369, "\\setminus": 1370, "\\smallsetminus": 1371, "\\$": 1372, "\\%": 1373, "\\_": 1374, "\\prime": 1375, "\\top": 1376, "\\emptyset": 1377, "\\varnothing": 1378, "\\circ": 1379, "\\surd": 1380, "\\not": 1381, "\\diamond": 1382, "\\star": 1383, "\\triangleleft": 1384, "\\triangleright": 1385, "\\{": 1386, "\\lbrace": 1387, "\\}": 1388, "\\rbrace": 1389, "\\backslash": 1390, "\\coprod": 1391, "\\bigvee": 1392, "\\bigwedge": 1393, "\\biguplus": 1394, "\\bigcap": 1395, "\\bigcup": 1396, "\\int": 1397, "\\intop": 1398, "\\smallint": 1399, "\\iint": 1400, "\\iiint": 1401, "\\prod": 1402, "\\sum": 1403, "\\bigotimes": 1404, "\\bigoplus": 1405, "\\bigodot": 1406, "\\oint": 1407, "\\oiint": 1408, "\\oiiint": 1409, "\\bigsqcup": 1410, "\\varvdots": 1411, "\\acute": 1412, "\\grave": 1413, "\\ddot": 1414, "\\tilde": 1415, "\\bar": 1416, "\\breve": 1417, "\\check": 1418, "\\hat": 1419, "\\vec": 1420, "\\dot": 1421, "\\mathring": 1422, "\\maltese": 1423, "\u2259": 1424, "\u225a": 1425, "\u225b": 1426, "\u225d": 1427, "\u225e": 1428, "\u225f": 1429, "\\neq": 1430, "\\notin": 1431, "\\notni": 1432, "\u2260": 1433, "\u2209": 1434, "\u220c": 1435, "\\colon": 1436, "\\dblcolon": 1437, "\\coloneqq": 1438, "\\eqqcolon": 1439, "\\eqcolon": 1440, "\\llbracket": 1441, "\\rrbracket": 1442, "\\lBrace": 1443, "\\rBrace": 1444};
    B.TexSymbolConfig_sAj = new A.TexSymbolConfig("0", false, null);
    B.TexSymbolConfig_JIB = new A.TexSymbolConfig("1", false, null);
    B.TexSymbolConfig_Kjf = new A.TexSymbolConfig("2", false, null);
    B.TexSymbolConfig_hf8 = new A.TexSymbolConfig("3", false, null);
    B.TexSymbolConfig_Rb2 = new A.TexSymbolConfig("4", false, null);
    B.TexSymbolConfig_xTp = new A.TexSymbolConfig("5", false, null);
    B.TexSymbolConfig_v6K = new A.TexSymbolConfig("6", false, null);
    B.TexSymbolConfig_nqA = new A.TexSymbolConfig("7", false, null);
    B.TexSymbolConfig_gK2 = new A.TexSymbolConfig("8", false, null);
    B.TexSymbolConfig_jJE = new A.TexSymbolConfig("9", false, null);
    B.TexSymbolConfig_KUP = new A.TexSymbolConfig("\u2261", false, null);
    B.TexSymbolConfig_wGY = new A.TexSymbolConfig("\u227a", false, null);
    B.TexSymbolConfig_4bt = new A.TexSymbolConfig("\u227b", false, null);
    B.TexSymbolConfig_DHc = new A.TexSymbolConfig("\u223c", false, null);
    B.TexSymbolConfig_agq = new A.TexSymbolConfig("\u2aaf", false, null);
    B.TexSymbolConfig_MTR = new A.TexSymbolConfig("\u2ab0", false, null);
    B.TexSymbolConfig_1FX = new A.TexSymbolConfig("\u2243", false, null);
    B.TexSymbolConfig_cZq = new A.TexSymbolConfig("\u2223", false, null);
    B.TexSymbolConfig_SJe = new A.TexSymbolConfig("\u226a", false, null);
    B.TexSymbolConfig_fBr = new A.TexSymbolConfig("\u226b", false, null);
    B.TexSymbolConfig_khi = new A.TexSymbolConfig("\u224d", false, null);
    B.TexSymbolConfig_Tk5 = new A.TexSymbolConfig("\u22c8", false, null);
    B.TexSymbolConfig_SYM = new A.TexSymbolConfig("\u2323", false, null);
    B.TexSymbolConfig_uNR = new A.TexSymbolConfig("\u2291", false, null);
    B.TexSymbolConfig_mSW = new A.TexSymbolConfig("\u2292", false, null);
    B.TexSymbolConfig_fGk = new A.TexSymbolConfig("\u2250", false, null);
    B.TexSymbolConfig_tU4 = new A.TexSymbolConfig("\u2322", false, null);
    B.TexSymbolConfig_29i = new A.TexSymbolConfig("\u220b", false, null);
    B.TexSymbolConfig_jmd = new A.TexSymbolConfig("\u221d", false, null);
    B.TexSymbolConfig_ZTu = new A.TexSymbolConfig("\u22a2", false, null);
    B.TexSymbolConfig_Grr = new A.TexSymbolConfig("\u22a3", false, null);
    B.TexSymbolConfig_tuy = new A.TexSymbolConfig("\u2135", false, null);
    B.TexSymbolConfig_wau = new A.TexSymbolConfig("\u2200", false, null);
    B.TexSymbolConfig_sWu = new A.TexSymbolConfig("\u210f", false, null);
    B.TexSymbolConfig_Rie = new A.TexSymbolConfig("\u2203", false, null);
    B.TexSymbolConfig_a90 = new A.TexSymbolConfig("\u2207", false, null);
    B.TexSymbolConfig_Q5K = new A.TexSymbolConfig("\u266d", false, null);
    B.TexSymbolConfig_0dD = new A.TexSymbolConfig("\u2113", false, null);
    B.TexSymbolConfig_nOB = new A.TexSymbolConfig("\u266e", false, null);
    B.TexSymbolConfig_Aej = new A.TexSymbolConfig("\u2663", false, null);
    B.TexSymbolConfig_ccx = new A.TexSymbolConfig("\u2118", false, null);
    B.TexSymbolConfig_Z3V = new A.TexSymbolConfig("\u266f", false, null);
    B.TexSymbolConfig_pur = new A.TexSymbolConfig("\u2662", false, null);
    B.TexSymbolConfig_OON = new A.TexSymbolConfig("\u211c", false, null);
    B.TexSymbolConfig_PZ2 = new A.TexSymbolConfig("\u2661", false, null);
    B.TexSymbolConfig_LSU = new A.TexSymbolConfig("\u2111", false, null);
    B.TexSymbolConfig_vPH = new A.TexSymbolConfig("\u2660", false, null);
    B.TexSymbolConfig_u6o = new A.TexSymbolConfig("\u23b1", false, null);
    B.TexSymbolConfig_Dwz = new A.TexSymbolConfig("\u23b0", false, null);
    B.TexSymbolConfig_RSC = new A.TexSymbolConfig("\u27ef", false, null);
    B.TexSymbolConfig_t9t = new A.TexSymbolConfig("\u27ee", false, null);
    B.TexSymbolConfig_2CX = new A.TexSymbolConfig("\u2213", false, null);
    B.TexSymbolConfig_tXA = new A.TexSymbolConfig("\u2296", false, null);
    B.TexSymbolConfig_wbP = new A.TexSymbolConfig("\u228e", false, null);
    B.TexSymbolConfig_rOw = new A.TexSymbolConfig("\u2293", false, null);
    B.TexSymbolConfig_K5n = new A.TexSymbolConfig("\u2294", false, null);
    B.TexSymbolConfig_YsD = new A.TexSymbolConfig("\u2240", false, null);
    B.TexSymbolConfig_rp7 = new A.TexSymbolConfig("\u27f5", false, null);
    B.TexSymbolConfig_NWo = new A.TexSymbolConfig("\u21d0", false, null);
    B.TexSymbolConfig_UO3 = new A.TexSymbolConfig("\u27f8", false, null);
    B.TexSymbolConfig_kkE = new A.TexSymbolConfig("\u27f6", false, null);
    B.TexSymbolConfig_R8D = new A.TexSymbolConfig("\u21d2", false, null);
    B.TexSymbolConfig_gRH = new A.TexSymbolConfig("\u27f9", false, null);
    B.TexSymbolConfig_7a5 = new A.TexSymbolConfig("\u2194", false, null);
    B.TexSymbolConfig_1Gr = new A.TexSymbolConfig("\u27f7", false, null);
    B.TexSymbolConfig_g3R = new A.TexSymbolConfig("\u21d4", false, null);
    B.TexSymbolConfig_fLI = new A.TexSymbolConfig("\u27fa", false, null);
    B.TexSymbolConfig_61L = new A.TexSymbolConfig("\u21a6", false, null);
    B.TexSymbolConfig_wxW = new A.TexSymbolConfig("\u27fc", false, null);
    B.TexSymbolConfig_CDn = new A.TexSymbolConfig("\u2197", false, null);
    B.TexSymbolConfig_DqM = new A.TexSymbolConfig("\u21a9", false, null);
    B.TexSymbolConfig_vlT = new A.TexSymbolConfig("\u21aa", false, null);
    B.TexSymbolConfig_zni = new A.TexSymbolConfig("\u2198", false, null);
    B.TexSymbolConfig_nih = new A.TexSymbolConfig("\u21bc", false, null);
    B.TexSymbolConfig_nO1 = new A.TexSymbolConfig("\u21c0", false, null);
    B.TexSymbolConfig_GiU = new A.TexSymbolConfig("\u2199", false, null);
    B.TexSymbolConfig_kwB = new A.TexSymbolConfig("\u21bd", false, null);
    B.TexSymbolConfig_zCo = new A.TexSymbolConfig("\u21c1", false, null);
    B.TexSymbolConfig_o9s = new A.TexSymbolConfig("\u2196", false, null);
    B.TexSymbolConfig_OGi = new A.TexSymbolConfig("\u21cc", false, null);
    B.TexSymbolConfig_T2M = new A.TexSymbolConfig("\u226e", false, null);
    B.TexSymbolConfig_qnI = new A.TexSymbolConfig("\u2a87", false, null);
    B.TexSymbolConfig_3Jy = new A.TexSymbolConfig("\u2268", false, null);
    B.TexSymbolConfig_D6s = new A.TexSymbolConfig("\u22e6", false, null);
    B.TexSymbolConfig_7fW = new A.TexSymbolConfig("\u2a89", false, null);
    B.TexSymbolConfig_ZV8 = new A.TexSymbolConfig("\u2280", false, null);
    B.TexSymbolConfig_jWD = new A.TexSymbolConfig("\u22e0", false, null);
    B.TexSymbolConfig_N8P = new A.TexSymbolConfig("\u22e8", false, null);
    B.TexSymbolConfig_4vg = new A.TexSymbolConfig("\u2ab9", false, null);
    B.TexSymbolConfig_jZr = new A.TexSymbolConfig("\u2241", false, null);
    B.TexSymbolConfig_Luc = new A.TexSymbolConfig("\u2224", false, null);
    B.TexSymbolConfig_vNr = new A.TexSymbolConfig("\u22ac", false, null);
    B.TexSymbolConfig_J4P = new A.TexSymbolConfig("\u22ad", false, null);
    B.TexSymbolConfig_noL = new A.TexSymbolConfig("\u22ec", false, null);
    B.TexSymbolConfig_pXh = new A.TexSymbolConfig("\u228a", false, null);
    B.TexSymbolConfig_ahV = new A.TexSymbolConfig("\u2acb", false, null);
    B.TexSymbolConfig_4Td = new A.TexSymbolConfig("\u226f", false, null);
    B.TexSymbolConfig_zvd = new A.TexSymbolConfig("\u2a88", false, null);
    B.TexSymbolConfig_oLh = new A.TexSymbolConfig("\u2269", false, null);
    B.TexSymbolConfig_w91 = new A.TexSymbolConfig("\u22e7", false, null);
    B.TexSymbolConfig_OLE = new A.TexSymbolConfig("\u2a8a", false, null);
    B.TexSymbolConfig_KUp = new A.TexSymbolConfig("\u2281", false, null);
    B.TexSymbolConfig_isu = new A.TexSymbolConfig("\u22e1", false, null);
    B.TexSymbolConfig_Pr7 = new A.TexSymbolConfig("\u22e9", false, null);
    B.TexSymbolConfig_f87 = new A.TexSymbolConfig("\u2aba", false, null);
    B.TexSymbolConfig_11c = new A.TexSymbolConfig("\u2246", false, null);
    B.TexSymbolConfig_c4l = new A.TexSymbolConfig("\u2226", false, null);
    B.TexSymbolConfig_rLT = new A.TexSymbolConfig("\u22af", false, null);
    B.TexSymbolConfig_KNN = new A.TexSymbolConfig("\u22ed", false, null);
    B.TexSymbolConfig_7Os = new A.TexSymbolConfig("\u228b", false, null);
    B.TexSymbolConfig_ZX1 = new A.TexSymbolConfig("\u2acc", false, null);
    B.TexSymbolConfig_RWQ = new A.TexSymbolConfig("\u22ae", false, null);
    B.TexSymbolConfig_bnT = new A.TexSymbolConfig("\u2ab5", false, null);
    B.TexSymbolConfig_Ru5 = new A.TexSymbolConfig("\u2ab6", false, null);
    B.TexSymbolConfig_JW9 = new A.TexSymbolConfig("\u219a", false, null);
    B.TexSymbolConfig_1FU = new A.TexSymbolConfig("\u219b", false, null);
    B.TexSymbolConfig_oYS = new A.TexSymbolConfig("\u21cd", false, null);
    B.TexSymbolConfig_idj = new A.TexSymbolConfig("\u21cf", false, null);
    B.TexSymbolConfig_Vpa = new A.TexSymbolConfig("\u21ae", false, null);
    B.TexSymbolConfig_i9Y = new A.TexSymbolConfig("\u21ce", false, null);
    B.TexSymbolConfig_gV0 = new A.TexSymbolConfig("\u2221", false, null);
    B.TexSymbolConfig_EdC = new A.TexSymbolConfig("\u2132", false, null);
    B.TexSymbolConfig_ZkC = new A.TexSymbolConfig("\u2141", false, null);
    B.TexSymbolConfig_IGr = new A.TexSymbolConfig("\u2222", false, null);
    B.TexSymbolConfig_iOE = new A.TexSymbolConfig("\u2201", false, null);
    B.TexSymbolConfig_W15 = new A.TexSymbolConfig("\xf0", false, null);
    B.TexSymbolConfig_OLK = new A.TexSymbolConfig("\xa5", false, null);
    B.TexSymbolConfig_kFC = new A.TexSymbolConfig("\u2713", false, null);
    B.TexSymbolConfig_fj0 = new A.TexSymbolConfig("\u2136", false, null);
    B.TexSymbolConfig_E4J = new A.TexSymbolConfig("\u2138", false, null);
    B.TexSymbolConfig_2VC = new A.TexSymbolConfig("\u2137", false, null);
    B.TexSymbolConfig_qCc = new A.TexSymbolConfig("\u03dd", false, null);
    B.TexSymbolConfig_E8g = new A.TexSymbolConfig("\u250c", false, null);
    B.TexSymbolConfig_dVO = new A.TexSymbolConfig("\u2510", false, null);
    B.TexSymbolConfig_jIX = new A.TexSymbolConfig("\u2514", false, null);
    B.TexSymbolConfig_PEQ = new A.TexSymbolConfig("\u2518", false, null);
    B.TexSymbolConfig_Blp = new A.TexSymbolConfig("\u2266", false, null);
    B.TexSymbolConfig_ThN = new A.TexSymbolConfig("\u2a7d", false, null);
    B.TexSymbolConfig_cIV = new A.TexSymbolConfig("\u2a95", false, null);
    B.TexSymbolConfig_KsT = new A.TexSymbolConfig("\u2272", false, null);
    B.TexSymbolConfig_51q = new A.TexSymbolConfig("\u2a85", false, null);
    B.TexSymbolConfig_wUO = new A.TexSymbolConfig("\u224a", false, null);
    B.TexSymbolConfig_N08 = new A.TexSymbolConfig("\u22d8", false, null);
    B.TexSymbolConfig_eUw = new A.TexSymbolConfig("\u2276", false, null);
    B.TexSymbolConfig_2QM = new A.TexSymbolConfig("\u22da", false, null);
    B.TexSymbolConfig_zzW = new A.TexSymbolConfig("\u2a8b", false, null);
    B.TexSymbolConfig_ENJ = new A.TexSymbolConfig("\u2253", false, null);
    B.TexSymbolConfig_UfM = new A.TexSymbolConfig("\u2252", false, null);
    B.TexSymbolConfig_Rh9 = new A.TexSymbolConfig("\u223d", false, null);
    B.TexSymbolConfig_WQc = new A.TexSymbolConfig("\u22cd", false, null);
    B.TexSymbolConfig_AFn = new A.TexSymbolConfig("\u2ac5", false, null);
    B.TexSymbolConfig_2lE = new A.TexSymbolConfig("\u22d0", false, null);
    B.TexSymbolConfig_aVu = new A.TexSymbolConfig("\u228f", false, null);
    B.TexSymbolConfig_Ufz = new A.TexSymbolConfig("\u227c", false, null);
    B.TexSymbolConfig_dey = new A.TexSymbolConfig("\u22de", false, null);
    B.TexSymbolConfig_ykG = new A.TexSymbolConfig("\u227e", false, null);
    B.TexSymbolConfig_oEp = new A.TexSymbolConfig("\u2ab7", false, null);
    B.TexSymbolConfig_yKn = new A.TexSymbolConfig("\u22a8", false, null);
    B.TexSymbolConfig_inG = new A.TexSymbolConfig("\u22aa", false, null);
    B.TexSymbolConfig_uza = new A.TexSymbolConfig("\u224f", false, null);
    B.TexSymbolConfig_CAN = new A.TexSymbolConfig("\u224e", false, null);
    B.TexSymbolConfig_33C = new A.TexSymbolConfig("\u2267", false, null);
    B.TexSymbolConfig_HOi = new A.TexSymbolConfig("\u2a7e", false, null);
    B.TexSymbolConfig_aze = new A.TexSymbolConfig("\u2a96", false, null);
    B.TexSymbolConfig_qIS = new A.TexSymbolConfig("\u2273", false, null);
    B.TexSymbolConfig_kxf = new A.TexSymbolConfig("\u2a86", false, null);
    B.TexSymbolConfig_ENE = new A.TexSymbolConfig("\u22d9", false, null);
    B.TexSymbolConfig_kXi = new A.TexSymbolConfig("\u2277", false, null);
    B.TexSymbolConfig_KnO = new A.TexSymbolConfig("\u22db", false, null);
    B.TexSymbolConfig_Vxp = new A.TexSymbolConfig("\u2a8c", false, null);
    B.TexSymbolConfig_X91 = new A.TexSymbolConfig("\u2256", false, null);
    B.TexSymbolConfig_sOO = new A.TexSymbolConfig("\u2257", false, null);
    B.TexSymbolConfig_F1w = new A.TexSymbolConfig("\u225c", false, null);
    B.TexSymbolConfig_yeL = new A.TexSymbolConfig("\u2ac6", false, null);
    B.TexSymbolConfig_mHP = new A.TexSymbolConfig("\u22d1", false, null);
    B.TexSymbolConfig_wAU = new A.TexSymbolConfig("\u2290", false, null);
    B.TexSymbolConfig_rJe = new A.TexSymbolConfig("\u227d", false, null);
    B.TexSymbolConfig_SeH = new A.TexSymbolConfig("\u22df", false, null);
    B.TexSymbolConfig_EDb = new A.TexSymbolConfig("\u227f", false, null);
    B.TexSymbolConfig_jAY = new A.TexSymbolConfig("\u2ab8", false, null);
    B.TexSymbolConfig_6SW = new A.TexSymbolConfig("\u22a9", false, null);
    B.TexSymbolConfig_rNB = new A.TexSymbolConfig("\u226c", false, null);
    B.TexSymbolConfig_0hz = new A.TexSymbolConfig("\u22d4", false, null);
    B.TexSymbolConfig_5Go = new A.TexSymbolConfig("\u2234", false, null);
    B.TexSymbolConfig_7pe = new A.TexSymbolConfig("\u2235", false, null);
    B.TexSymbolConfig_CGr = new A.TexSymbolConfig("\u2242", false, null);
    B.TexSymbolConfig_LDZ = new A.TexSymbolConfig("\u2251", false, null);
    B.TexSymbolConfig_evQ = new A.TexSymbolConfig("\u2214", false, null);
    B.TexSymbolConfig_9cG = new A.TexSymbolConfig("\u22d2", false, null);
    B.TexSymbolConfig_RT9 = new A.TexSymbolConfig("\u22d3", false, null);
    B.TexSymbolConfig_pWI = new A.TexSymbolConfig("\u2a5e", false, null);
    B.TexSymbolConfig_sL0 = new A.TexSymbolConfig("\u229f", false, null);
    B.TexSymbolConfig_DKB = new A.TexSymbolConfig("\u229e", false, null);
    B.TexSymbolConfig_N2Y = new A.TexSymbolConfig("\u22c7", false, null);
    B.TexSymbolConfig_MFT = new A.TexSymbolConfig("\u22c9", false, null);
    B.TexSymbolConfig_ktx = new A.TexSymbolConfig("\u22ca", false, null);
    B.TexSymbolConfig_n44 = new A.TexSymbolConfig("\u22cb", false, null);
    B.TexSymbolConfig_gnp = new A.TexSymbolConfig("\u22cc", false, null);
    B.TexSymbolConfig_l27 = new A.TexSymbolConfig("\u22cf", false, null);
    B.TexSymbolConfig_lDd = new A.TexSymbolConfig("\u22ce", false, null);
    B.TexSymbolConfig_UCq = new A.TexSymbolConfig("\u229d", false, null);
    B.TexSymbolConfig_Ejj = new A.TexSymbolConfig("\u229b", false, null);
    B.TexSymbolConfig_Q8n = new A.TexSymbolConfig("\u22ba", false, null);
    B.TexSymbolConfig_WRN = new A.TexSymbolConfig("\u22a0", false, null);
    B.TexSymbolConfig_HVQ = new A.TexSymbolConfig("\u21e2", false, null);
    B.TexSymbolConfig_gwv = new A.TexSymbolConfig("\u21e0", false, null);
    B.TexSymbolConfig_6h7 = new A.TexSymbolConfig("\u21c7", false, null);
    B.TexSymbolConfig_9MG = new A.TexSymbolConfig("\u21c6", false, null);
    B.TexSymbolConfig_5X4 = new A.TexSymbolConfig("\u21da", false, null);
    B.TexSymbolConfig_RWP = new A.TexSymbolConfig("\u219e", false, null);
    B.TexSymbolConfig_nM2 = new A.TexSymbolConfig("\u21a2", false, null);
    B.TexSymbolConfig_8OW = new A.TexSymbolConfig("\u21ab", false, null);
    B.TexSymbolConfig_kH8 = new A.TexSymbolConfig("\u21cb", false, null);
    B.TexSymbolConfig_DHP = new A.TexSymbolConfig("\u21b6", false, null);
    B.TexSymbolConfig_qS7 = new A.TexSymbolConfig("\u21ba", false, null);
    B.TexSymbolConfig_FmP = new A.TexSymbolConfig("\u21b0", false, null);
    B.TexSymbolConfig_b9H = new A.TexSymbolConfig("\u21c8", false, null);
    B.TexSymbolConfig_a2f = new A.TexSymbolConfig("\u21bf", false, null);
    B.TexSymbolConfig_t1F = new A.TexSymbolConfig("\u21c3", false, null);
    B.TexSymbolConfig_N9p = new A.TexSymbolConfig("\u22b8", false, null);
    B.TexSymbolConfig_5cN = new A.TexSymbolConfig("\u21ad", false, null);
    B.TexSymbolConfig_V1L = new A.TexSymbolConfig("\u21c9", false, null);
    B.TexSymbolConfig_1ly = new A.TexSymbolConfig("\u21c4", false, null);
    B.TexSymbolConfig_9lw = new A.TexSymbolConfig("\u21a0", false, null);
    B.TexSymbolConfig_H2S = new A.TexSymbolConfig("\u21a3", false, null);
    B.TexSymbolConfig_CW3 = new A.TexSymbolConfig("\u21ac", false, null);
    B.TexSymbolConfig_cVm = new A.TexSymbolConfig("\u21b7", false, null);
    B.TexSymbolConfig_Agz = new A.TexSymbolConfig("\u21bb", false, null);
    B.TexSymbolConfig_owZ = new A.TexSymbolConfig("\u21b1", false, null);
    B.TexSymbolConfig_SpI = new A.TexSymbolConfig("\u21ca", false, null);
    B.TexSymbolConfig_cOU = new A.TexSymbolConfig("\u21be", false, null);
    B.TexSymbolConfig_GTn = new A.TexSymbolConfig("\u21c2", false, null);
    B.TexSymbolConfig_Z5Q = new A.TexSymbolConfig("\u21dd", false, null);
    B.TexSymbolConfig_FNN = new A.TexSymbolConfig("\u21db", false, null);
    B.TexSymbolConfig_mVM = new A.TexSymbolConfig("`", false, null);
    B.TexSymbolConfig_Wuk = new A.TexSymbolConfig("\u2220", false, null);
    B.TexSymbolConfig_XQC = new A.TexSymbolConfig("\u221e", false, null);
    B.TexSymbolConfig_9N0 = new A.TexSymbolConfig("\u0393", false, null);
    B.TexSymbolConfig_PgS = new A.TexSymbolConfig("\u0394", false, null);
    B.TexSymbolConfig_ihK = new A.TexSymbolConfig("\u0398", false, null);
    B.TexSymbolConfig_rbG = new A.TexSymbolConfig("\u039b", false, null);
    B.TexSymbolConfig_su8 = new A.TexSymbolConfig("\u039e", false, null);
    B.TexSymbolConfig_83F = new A.TexSymbolConfig("\u03a0", false, null);
    B.TexSymbolConfig_bNJ = new A.TexSymbolConfig("\u03a3", false, null);
    B.TexSymbolConfig_VWa = new A.TexSymbolConfig("\u03a5", false, null);
    B.TexSymbolConfig_4VT = new A.TexSymbolConfig("\u03a6", false, null);
    B.TexSymbolConfig_qsx = new A.TexSymbolConfig("\u03a8", false, null);
    B.TexSymbolConfig_4ca = new A.TexSymbolConfig("\u03a9", false, null);
    B.TexSymbolConfig_1Zh = new A.TexSymbolConfig("\u0391", false, null);
    B.TexSymbolConfig_Eyc = new A.TexSymbolConfig("\u0392", false, null);
    B.TexSymbolConfig_ogt = new A.TexSymbolConfig("\u0395", false, null);
    B.TexSymbolConfig_du3 = new A.TexSymbolConfig("\u0396", false, null);
    B.TexSymbolConfig_s1V = new A.TexSymbolConfig("\u0397", false, null);
    B.TexSymbolConfig_jji = new A.TexSymbolConfig("\u0399", false, null);
    B.TexSymbolConfig_I9t = new A.TexSymbolConfig("\u039a", false, null);
    B.TexSymbolConfig_qgc = new A.TexSymbolConfig("\u039c", false, null);
    B.TexSymbolConfig_mTD = new A.TexSymbolConfig("\u039d", false, null);
    B.TexSymbolConfig_XO5 = new A.TexSymbolConfig("\u039f", false, null);
    B.TexSymbolConfig_g0L = new A.TexSymbolConfig("\u03a1", false, null);
    B.TexSymbolConfig_qJ1 = new A.TexSymbolConfig("\u03a4", false, null);
    B.TexSymbolConfig_K6f = new A.TexSymbolConfig("\u03a7", false, null);
    B.TexSymbolConfig_bMJ = new A.TexSymbolConfig("\xac", false, null);
    B.TexSymbolConfig_yRA = new A.TexSymbolConfig("\u03b1", false, null);
    B.TexSymbolConfig_icu = new A.TexSymbolConfig("\u03b2", false, null);
    B.TexSymbolConfig_APZ = new A.TexSymbolConfig("\u03b3", false, null);
    B.TexSymbolConfig_yzR = new A.TexSymbolConfig("\u03b4", false, null);
    B.TexSymbolConfig_mRX = new A.TexSymbolConfig("\u03f5", false, null);
    B.TexSymbolConfig_iP7 = new A.TexSymbolConfig("\u03b6", false, null);
    B.TexSymbolConfig_hmL = new A.TexSymbolConfig("\u03b7", false, null);
    B.TexSymbolConfig_l6Y = new A.TexSymbolConfig("\u03b8", false, null);
    B.TexSymbolConfig_7oH = new A.TexSymbolConfig("\u03b9", false, null);
    B.TexSymbolConfig_8HV = new A.TexSymbolConfig("\u03ba", false, null);
    B.TexSymbolConfig_aNY = new A.TexSymbolConfig("\u03bb", false, null);
    B.TexSymbolConfig_4Kk = new A.TexSymbolConfig("\u03bc", false, null);
    B.TexSymbolConfig_Ple = new A.TexSymbolConfig("\u03bd", false, null);
    B.TexSymbolConfig_wCA = new A.TexSymbolConfig("\u03be", false, null);
    B.TexSymbolConfig_dDd = new A.TexSymbolConfig("\u03bf", false, null);
    B.TexSymbolConfig_cne = new A.TexSymbolConfig("\u03c0", false, null);
    B.TexSymbolConfig_7Hd = new A.TexSymbolConfig("\u03c1", false, null);
    B.TexSymbolConfig_1pE = new A.TexSymbolConfig("\u03c3", false, null);
    B.TexSymbolConfig_97d = new A.TexSymbolConfig("\u03c4", false, null);
    B.TexSymbolConfig_S8G = new A.TexSymbolConfig("\u03c5", false, null);
    B.TexSymbolConfig_PWg = new A.TexSymbolConfig("\u03d5", false, null);
    B.TexSymbolConfig_B4y = new A.TexSymbolConfig("\u03c7", false, null);
    B.TexSymbolConfig_KWO = new A.TexSymbolConfig("\u03c8", false, null);
    B.TexSymbolConfig_H9O = new A.TexSymbolConfig("\u03c9", false, null);
    B.TexSymbolConfig_86o = new A.TexSymbolConfig("\u03b5", false, null);
    B.TexSymbolConfig_kf5 = new A.TexSymbolConfig("\u03d1", false, null);
    B.TexSymbolConfig_6Ao = new A.TexSymbolConfig("\u03d6", false, null);
    B.TexSymbolConfig_IWq = new A.TexSymbolConfig("\u03f1", false, null);
    B.TexSymbolConfig_TWI = new A.TexSymbolConfig("\u03c2", false, null);
    B.TexSymbolConfig_G2f = new A.TexSymbolConfig("\u03c6", false, null);
    B.TexSymbolConfig_LvD = new A.TexSymbolConfig("*", false, null);
    B.TexSymbolConfig_bvq = new A.TexSymbolConfig("+", false, null);
    B.TexSymbolConfig_yCb = new A.TexSymbolConfig("-", false, null);
    B.TexSymbolConfig_Bi9 = new A.TexSymbolConfig("\u22c5", false, null);
    B.TexSymbolConfig_ase = new A.TexSymbolConfig("\xf7", false, null);
    B.TexSymbolConfig_wxy = new A.TexSymbolConfig("\xb1", false, null);
    B.TexSymbolConfig_RVm = new A.TexSymbolConfig("\xd7", false, null);
    B.TexSymbolConfig_uxV = new A.TexSymbolConfig("\u2229", false, null);
    B.TexSymbolConfig_p4M = new A.TexSymbolConfig("\u222a", false, null);
    B.TexSymbolConfig_RWj = new A.TexSymbolConfig("\u2227", false, null);
    B.TexSymbolConfig_VdW = new A.TexSymbolConfig("\u2228", false, null);
    B.TexSymbolConfig_fwE = new A.TexSymbolConfig("(", false, null);
    B.TexSymbolConfig_lE0 = new A.TexSymbolConfig("[", false, null);
    B.TexSymbolConfig_ie6 = new A.TexSymbolConfig("\u27e8", false, null);
    B.TexSymbolConfig_kwy = new A.TexSymbolConfig(")", false, null);
    B.TexSymbolConfig_AUm = new A.TexSymbolConfig("]", false, null);
    B.TexSymbolConfig_QWQ = new A.TexSymbolConfig("?", false, null);
    B.TexSymbolConfig_dI7 = new A.TexSymbolConfig("!", false, null);
    B.TexSymbolConfig_AIj = new A.TexSymbolConfig("\u27e9", false, null);
    B.TexSymbolConfig_lbA = new A.TexSymbolConfig("=", false, null);
    B.TexSymbolConfig_1Yd = new A.TexSymbolConfig("<", false, null);
    B.TexSymbolConfig_ztQ = new A.TexSymbolConfig(">", false, null);
    B.TexSymbolConfig_dAE = new A.TexSymbolConfig(":", false, null);
    B.TexSymbolConfig_bV5 = new A.TexSymbolConfig("\u2248", false, null);
    B.TexSymbolConfig_m92 = new A.TexSymbolConfig("\u2245", false, null);
    B.TexSymbolConfig_W3f = new A.TexSymbolConfig("\u2265", false, null);
    B.TexSymbolConfig_Yj0 = new A.TexSymbolConfig("\u2208", false, null);
    B.TexSymbolConfig_bo9 = new A.TexSymbolConfig("\u2282", false, null);
    B.TexSymbolConfig_Vkt = new A.TexSymbolConfig("\u2283", false, null);
    B.TexSymbolConfig_CTy = new A.TexSymbolConfig("\u2286", false, null);
    B.TexSymbolConfig_MHN = new A.TexSymbolConfig("\u2287", false, null);
    B.TexSymbolConfig_ZnX = new A.TexSymbolConfig("\u2288", false, null);
    B.TexSymbolConfig_sxS = new A.TexSymbolConfig("\u2289", false, null);
    B.TexSymbolConfig_WCC = new A.TexSymbolConfig("\u2190", false, null);
    B.TexSymbolConfig_wcx = new A.TexSymbolConfig("\u2264", false, null);
    B.TexSymbolConfig_uyv = new A.TexSymbolConfig("\u2192", false, null);
    B.TexSymbolConfig_I5t = new A.TexSymbolConfig("\u2271", false, null);
    B.TexSymbolConfig_QjH = new A.TexSymbolConfig("\u2270", false, null);
    B.TexSymbolConfig_uxw = new A.TexSymbolConfig(",", false, null);
    B.TexSymbolConfig_njr = new A.TexSymbolConfig(";", false, null);
    B.TexSymbolConfig_q6t = new A.TexSymbolConfig("\u22bc", false, null);
    B.TexSymbolConfig_1Dq = new A.TexSymbolConfig("\u22bb", false, null);
    B.TexSymbolConfig_jCK = new A.TexSymbolConfig("\u2299", false, null);
    B.TexSymbolConfig_o58 = new A.TexSymbolConfig("\u2295", false, null);
    B.TexSymbolConfig_vgd = new A.TexSymbolConfig("\u2297", false, null);
    B.TexSymbolConfig_0Ma = new A.TexSymbolConfig("\u2202", false, null);
    B.TexSymbolConfig_ssk = new A.TexSymbolConfig("\u2298", false, null);
    B.TexSymbolConfig_Yas = new A.TexSymbolConfig("\u229a", false, null);
    B.TexSymbolConfig_rXF = new A.TexSymbolConfig("\u22a1", false, null);
    B.TexSymbolConfig_yGr = new A.TexSymbolConfig("\u230a", false, null);
    B.TexSymbolConfig_a86 = new A.TexSymbolConfig("\u230b", false, null);
    B.TexSymbolConfig_zEn = new A.TexSymbolConfig("\u2308", false, null);
    B.TexSymbolConfig_lqa = new A.TexSymbolConfig("\u2309", false, null);
    B.TexSymbolConfig_OJs = new A.TexSymbolConfig("|", false, null);
    B.TexSymbolConfig_myC = new A.TexSymbolConfig("\u2191", false, null);
    B.TexSymbolConfig_6w8 = new A.TexSymbolConfig("\u21d1", false, null);
    B.TexSymbolConfig_hRK = new A.TexSymbolConfig("\u2193", false, null);
    B.TexSymbolConfig_wZD = new A.TexSymbolConfig("\u21d3", false, null);
    B.TexSymbolConfig_D0C = new A.TexSymbolConfig("\u2195", false, null);
    B.TexSymbolConfig_0YU = new A.TexSymbolConfig("\u21d5", false, null);
    B.TexSymbolConfig_1e8 = new A.TexSymbolConfig("\u2026", false, null);
    B.TexSymbolConfig_wat = new A.TexSymbolConfig("\u22ef", false, null);
    B.TexSymbolConfig_Q2z = new A.TexSymbolConfig("\u22f1", false, null);
    B.TexSymbolConfig_Ewq = new A.TexSymbolConfig("\u0131", false, null);
    B.TexSymbolConfig_eup = new A.TexSymbolConfig("\u0237", false, null);
    B.TexSymbolConfig_G3M = new A.TexSymbolConfig("\xb0", false, null);
    B.TexSymbolConfig_ovp = new A.TexSymbolConfig("\xa3", false, null);
    B.TexSymbolConfig_G90 = new A.TexSymbolConfig("/", false, null);
    B.TexSymbolConfig_Coz = new A.TexSymbolConfig("@", false, null);
    B.TexSymbolConfig_IzI = new A.TexSymbolConfig(".", false, null);
    B.TexSymbolConfig_OFB = new A.TexSymbolConfig('"', false, null);
    B.TexSymbolConfig_A_false_null = new A.TexSymbolConfig("A", false, null);
    B.TexSymbolConfig_B_false_null = new A.TexSymbolConfig("B", false, null);
    B.TexSymbolConfig_C_false_null = new A.TexSymbolConfig("C", false, null);
    B.TexSymbolConfig_D_false_null = new A.TexSymbolConfig("D", false, null);
    B.TexSymbolConfig_E_false_null = new A.TexSymbolConfig("E", false, null);
    B.TexSymbolConfig_F_false_null = new A.TexSymbolConfig("F", false, null);
    B.TexSymbolConfig_G_false_null = new A.TexSymbolConfig("G", false, null);
    B.TexSymbolConfig_H_false_null = new A.TexSymbolConfig("H", false, null);
    B.TexSymbolConfig_I_false_null = new A.TexSymbolConfig("I", false, null);
    B.TexSymbolConfig_J_false_null = new A.TexSymbolConfig("J", false, null);
    B.TexSymbolConfig_K_false_null = new A.TexSymbolConfig("K", false, null);
    B.TexSymbolConfig_L_false_null = new A.TexSymbolConfig("L", false, null);
    B.TexSymbolConfig_M_false_null = new A.TexSymbolConfig("M", false, null);
    B.TexSymbolConfig_N_false_null = new A.TexSymbolConfig("N", false, null);
    B.TexSymbolConfig_O_false_null = new A.TexSymbolConfig("O", false, null);
    B.TexSymbolConfig_P_false_null = new A.TexSymbolConfig("P", false, null);
    B.TexSymbolConfig_Q_false_null = new A.TexSymbolConfig("Q", false, null);
    B.TexSymbolConfig_R_false_null = new A.TexSymbolConfig("R", false, null);
    B.TexSymbolConfig_S_false_null = new A.TexSymbolConfig("S", false, null);
    B.TexSymbolConfig_T_false_null = new A.TexSymbolConfig("T", false, null);
    B.TexSymbolConfig_U_false_null = new A.TexSymbolConfig("U", false, null);
    B.TexSymbolConfig_V_false_null = new A.TexSymbolConfig("V", false, null);
    B.TexSymbolConfig_W_false_null = new A.TexSymbolConfig("W", false, null);
    B.TexSymbolConfig_X_false_null = new A.TexSymbolConfig("X", false, null);
    B.TexSymbolConfig_Y_false_null = new A.TexSymbolConfig("Y", false, null);
    B.TexSymbolConfig_Z_false_null = new A.TexSymbolConfig("Z", false, null);
    B.TexSymbolConfig_a_false_null = new A.TexSymbolConfig("a", false, null);
    B.TexSymbolConfig_b_false_null = new A.TexSymbolConfig("b", false, null);
    B.TexSymbolConfig_c_false_null = new A.TexSymbolConfig("c", false, null);
    B.TexSymbolConfig_d_false_null = new A.TexSymbolConfig("d", false, null);
    B.TexSymbolConfig_e_false_null = new A.TexSymbolConfig("e", false, null);
    B.TexSymbolConfig_f_false_null = new A.TexSymbolConfig("f", false, null);
    B.TexSymbolConfig_g_false_null = new A.TexSymbolConfig("g", false, null);
    B.TexSymbolConfig_h_false_null = new A.TexSymbolConfig("h", false, null);
    B.TexSymbolConfig_i_false_null = new A.TexSymbolConfig("i", false, null);
    B.TexSymbolConfig_j_false_null = new A.TexSymbolConfig("j", false, null);
    B.TexSymbolConfig_k_false_null = new A.TexSymbolConfig("k", false, null);
    B.TexSymbolConfig_l_false_null = new A.TexSymbolConfig("l", false, null);
    B.TexSymbolConfig_m_false_null = new A.TexSymbolConfig("m", false, null);
    B.TexSymbolConfig_n_false_null = new A.TexSymbolConfig("n", false, null);
    B.TexSymbolConfig_o_false_null = new A.TexSymbolConfig("o", false, null);
    B.TexSymbolConfig_p_false_null = new A.TexSymbolConfig("p", false, null);
    B.TexSymbolConfig_q_false_null = new A.TexSymbolConfig("q", false, null);
    B.TexSymbolConfig_r_false_null = new A.TexSymbolConfig("r", false, null);
    B.TexSymbolConfig_s_false_null = new A.TexSymbolConfig("s", false, null);
    B.TexSymbolConfig_t_false_null = new A.TexSymbolConfig("t", false, null);
    B.TexSymbolConfig_u_false_null = new A.TexSymbolConfig("u", false, null);
    B.TexSymbolConfig_v_false_null = new A.TexSymbolConfig("v", false, null);
    B.TexSymbolConfig_w_false_null = new A.TexSymbolConfig("w", false, null);
    B.TexSymbolConfig_x_false_null = new A.TexSymbolConfig("x", false, null);
    B.TexSymbolConfig_y_false_null = new A.TexSymbolConfig("y", false, null);
    B.TexSymbolConfig_z_false_null = new A.TexSymbolConfig("z", false, null);
    B.TexSymbolConfig_XRQ = new A.TexSymbolConfig("\u2102", false, null);
    B.TexSymbolConfig_SJh = new A.TexSymbolConfig("\u210d", false, null);
    B.TexSymbolConfig_ukc = new A.TexSymbolConfig("\u2115", false, null);
    B.TexSymbolConfig_D32 = new A.TexSymbolConfig("\u2119", false, null);
    B.TexSymbolConfig_BvH = new A.TexSymbolConfig("\u211a", false, null);
    B.TexSymbolConfig_0Bc = new A.TexSymbolConfig("\u211d", false, null);
    B.TexSymbolConfig_AKG = new A.TexSymbolConfig("\u2124", false, null);
    B.TexSymbolConfig_BIG = new A.TexSymbolConfig("\u210e", false, null);
    B.TexSymbolConfig_npA = new A.TexSymbolConfig("\ud835\udc00", false, null);
    B.TexSymbolConfig_ixl = new A.TexSymbolConfig("\ud835\udc34", false, null);
    B.TexSymbolConfig_kon = new A.TexSymbolConfig("\ud835\udc68", false, null);
    B.TexSymbolConfig_LJ1 = new A.TexSymbolConfig("\ud835\udd04", false, null);
    B.TexSymbolConfig_un4 = new A.TexSymbolConfig("\ud835\udda0", false, null);
    B.TexSymbolConfig_I3d = new A.TexSymbolConfig("\ud835\uddd4", false, null);
    B.TexSymbolConfig_DH8 = new A.TexSymbolConfig("\ud835\ude08", false, null);
    B.TexSymbolConfig_IaC = new A.TexSymbolConfig("\ud835\ude70", false, null);
    B.TexSymbolConfig_DOk = new A.TexSymbolConfig("\ud835\udd38", false, null);
    B.TexSymbolConfig_3zX = new A.TexSymbolConfig("\ud835\udc9c", false, null);
    B.TexSymbolConfig_8fY = new A.TexSymbolConfig("\ud835\udc01", false, null);
    B.TexSymbolConfig_uu3 = new A.TexSymbolConfig("\ud835\udc35", false, null);
    B.TexSymbolConfig_1RG = new A.TexSymbolConfig("\ud835\udc69", false, null);
    B.TexSymbolConfig_8Jk = new A.TexSymbolConfig("\ud835\udd05", false, null);
    B.TexSymbolConfig_jF2 = new A.TexSymbolConfig("\ud835\udda1", false, null);
    B.TexSymbolConfig_8jC = new A.TexSymbolConfig("\ud835\uddd5", false, null);
    B.TexSymbolConfig_rGE = new A.TexSymbolConfig("\ud835\ude09", false, null);
    B.TexSymbolConfig_tDo = new A.TexSymbolConfig("\ud835\ude71", false, null);
    B.TexSymbolConfig_tLg = new A.TexSymbolConfig("\ud835\udd39", false, null);
    B.TexSymbolConfig_Zb4 = new A.TexSymbolConfig("\ud835\udc9d", false, null);
    B.TexSymbolConfig_DIi = new A.TexSymbolConfig("\ud835\udc02", false, null);
    B.TexSymbolConfig_S14 = new A.TexSymbolConfig("\ud835\udc36", false, null);
    B.TexSymbolConfig_zVj = new A.TexSymbolConfig("\ud835\udc6a", false, null);
    B.TexSymbolConfig_ldr = new A.TexSymbolConfig("\ud835\udd06", false, null);
    B.TexSymbolConfig_43i = new A.TexSymbolConfig("\ud835\udda2", false, null);
    B.TexSymbolConfig_p15 = new A.TexSymbolConfig("\ud835\uddd6", false, null);
    B.TexSymbolConfig_HGM = new A.TexSymbolConfig("\ud835\ude0a", false, null);
    B.TexSymbolConfig_LrS = new A.TexSymbolConfig("\ud835\ude72", false, null);
    B.TexSymbolConfig_5Gq = new A.TexSymbolConfig("\ud835\udd3a", false, null);
    B.TexSymbolConfig_ZSe = new A.TexSymbolConfig("\ud835\udc9e", false, null);
    B.TexSymbolConfig_LoS = new A.TexSymbolConfig("\ud835\udc03", false, null);
    B.TexSymbolConfig_6WB = new A.TexSymbolConfig("\ud835\udc37", false, null);
    B.TexSymbolConfig_N6G = new A.TexSymbolConfig("\ud835\udc6b", false, null);
    B.TexSymbolConfig_Dza = new A.TexSymbolConfig("\ud835\udd07", false, null);
    B.TexSymbolConfig_amc = new A.TexSymbolConfig("\ud835\udda3", false, null);
    B.TexSymbolConfig_rV0 = new A.TexSymbolConfig("\ud835\uddd7", false, null);
    B.TexSymbolConfig_fG6 = new A.TexSymbolConfig("\ud835\ude0b", false, null);
    B.TexSymbolConfig_rQF = new A.TexSymbolConfig("\ud835\ude73", false, null);
    B.TexSymbolConfig_v2Z = new A.TexSymbolConfig("\ud835\udd3b", false, null);
    B.TexSymbolConfig_MDq = new A.TexSymbolConfig("\ud835\udc9f", false, null);
    B.TexSymbolConfig_qT4 = new A.TexSymbolConfig("\ud835\udc04", false, null);
    B.TexSymbolConfig_Xt2 = new A.TexSymbolConfig("\ud835\udc38", false, null);
    B.TexSymbolConfig_In5 = new A.TexSymbolConfig("\ud835\udc6c", false, null);
    B.TexSymbolConfig_Vid = new A.TexSymbolConfig("\ud835\udd08", false, null);
    B.TexSymbolConfig_17F = new A.TexSymbolConfig("\ud835\udda4", false, null);
    B.TexSymbolConfig_3TT = new A.TexSymbolConfig("\ud835\uddd8", false, null);
    B.TexSymbolConfig_SxH = new A.TexSymbolConfig("\ud835\ude0c", false, null);
    B.TexSymbolConfig_utH = new A.TexSymbolConfig("\ud835\ude74", false, null);
    B.TexSymbolConfig_H8e = new A.TexSymbolConfig("\ud835\udd3c", false, null);
    B.TexSymbolConfig_E6q = new A.TexSymbolConfig("\ud835\udca0", false, null);
    B.TexSymbolConfig_mHs = new A.TexSymbolConfig("\ud835\udc05", false, null);
    B.TexSymbolConfig_xsj = new A.TexSymbolConfig("\ud835\udc39", false, null);
    B.TexSymbolConfig_fQm = new A.TexSymbolConfig("\ud835\udc6d", false, null);
    B.TexSymbolConfig_llg = new A.TexSymbolConfig("\ud835\udd09", false, null);
    B.TexSymbolConfig_DLM = new A.TexSymbolConfig("\ud835\udda5", false, null);
    B.TexSymbolConfig_VfA = new A.TexSymbolConfig("\ud835\uddd9", false, null);
    B.TexSymbolConfig_rbS = new A.TexSymbolConfig("\ud835\ude0d", false, null);
    B.TexSymbolConfig_LrN = new A.TexSymbolConfig("\ud835\ude75", false, null);
    B.TexSymbolConfig_SSu = new A.TexSymbolConfig("\ud835\udd3d", false, null);
    B.TexSymbolConfig_eVj = new A.TexSymbolConfig("\ud835\udca1", false, null);
    B.TexSymbolConfig_zHn = new A.TexSymbolConfig("\ud835\udc06", false, null);
    B.TexSymbolConfig_5pU = new A.TexSymbolConfig("\ud835\udc3a", false, null);
    B.TexSymbolConfig_kRu = new A.TexSymbolConfig("\ud835\udc6e", false, null);
    B.TexSymbolConfig_25b = new A.TexSymbolConfig("\ud835\udd0a", false, null);
    B.TexSymbolConfig_xaj = new A.TexSymbolConfig("\ud835\udda6", false, null);
    B.TexSymbolConfig_7BP = new A.TexSymbolConfig("\ud835\uddda", false, null);
    B.TexSymbolConfig_CL4 = new A.TexSymbolConfig("\ud835\ude0e", false, null);
    B.TexSymbolConfig_bdG = new A.TexSymbolConfig("\ud835\ude76", false, null);
    B.TexSymbolConfig_r1p = new A.TexSymbolConfig("\ud835\udd3e", false, null);
    B.TexSymbolConfig_mee = new A.TexSymbolConfig("\ud835\udca2", false, null);
    B.TexSymbolConfig_PqG = new A.TexSymbolConfig("\ud835\udc07", false, null);
    B.TexSymbolConfig_yhR = new A.TexSymbolConfig("\ud835\udc3b", false, null);
    B.TexSymbolConfig_O07 = new A.TexSymbolConfig("\ud835\udc6f", false, null);
    B.TexSymbolConfig_BKa = new A.TexSymbolConfig("\ud835\udd0b", false, null);
    B.TexSymbolConfig_UuM = new A.TexSymbolConfig("\ud835\udda7", false, null);
    B.TexSymbolConfig_mqF = new A.TexSymbolConfig("\ud835\udddb", false, null);
    B.TexSymbolConfig_1xU = new A.TexSymbolConfig("\ud835\ude0f", false, null);
    B.TexSymbolConfig_Uhz = new A.TexSymbolConfig("\ud835\ude77", false, null);
    B.TexSymbolConfig_fWu = new A.TexSymbolConfig("\ud835\udd3f", false, null);
    B.TexSymbolConfig_7ix = new A.TexSymbolConfig("\ud835\udca3", false, null);
    B.TexSymbolConfig_xsO = new A.TexSymbolConfig("\ud835\udc08", false, null);
    B.TexSymbolConfig_5Xn = new A.TexSymbolConfig("\ud835\udc3c", false, null);
    B.TexSymbolConfig_pru = new A.TexSymbolConfig("\ud835\udc70", false, null);
    B.TexSymbolConfig_Mdw = new A.TexSymbolConfig("\ud835\udd0c", false, null);
    B.TexSymbolConfig_BvD = new A.TexSymbolConfig("\ud835\udda8", false, null);
    B.TexSymbolConfig_giH = new A.TexSymbolConfig("\ud835\udddc", false, null);
    B.TexSymbolConfig_2rv = new A.TexSymbolConfig("\ud835\ude10", false, null);
    B.TexSymbolConfig_S1J = new A.TexSymbolConfig("\ud835\ude78", false, null);
    B.TexSymbolConfig_BuK = new A.TexSymbolConfig("\ud835\udd40", false, null);
    B.TexSymbolConfig_hXI = new A.TexSymbolConfig("\ud835\udca4", false, null);
    B.TexSymbolConfig_6XT = new A.TexSymbolConfig("\ud835\udc09", false, null);
    B.TexSymbolConfig_ahO = new A.TexSymbolConfig("\ud835\udc3d", false, null);
    B.TexSymbolConfig_4ge = new A.TexSymbolConfig("\ud835\udc71", false, null);
    B.TexSymbolConfig_cna = new A.TexSymbolConfig("\ud835\udd0d", false, null);
    B.TexSymbolConfig_hgs = new A.TexSymbolConfig("\ud835\udda9", false, null);
    B.TexSymbolConfig_U0u = new A.TexSymbolConfig("\ud835\udddd", false, null);
    B.TexSymbolConfig_PYo = new A.TexSymbolConfig("\ud835\ude11", false, null);
    B.TexSymbolConfig_usb = new A.TexSymbolConfig("\ud835\ude79", false, null);
    B.TexSymbolConfig_P8l = new A.TexSymbolConfig("\ud835\udd41", false, null);
    B.TexSymbolConfig_Gjv = new A.TexSymbolConfig("\ud835\udca5", false, null);
    B.TexSymbolConfig_3YP = new A.TexSymbolConfig("\ud835\udc0a", false, null);
    B.TexSymbolConfig_OdH = new A.TexSymbolConfig("\ud835\udc3e", false, null);
    B.TexSymbolConfig_uOB = new A.TexSymbolConfig("\ud835\udc72", false, null);
    B.TexSymbolConfig_kT1 = new A.TexSymbolConfig("\ud835\udd0e", false, null);
    B.TexSymbolConfig_Cvq = new A.TexSymbolConfig("\ud835\uddaa", false, null);
    B.TexSymbolConfig_ykE = new A.TexSymbolConfig("\ud835\uddde", false, null);
    B.TexSymbolConfig_Dhd = new A.TexSymbolConfig("\ud835\ude12", false, null);
    B.TexSymbolConfig_TQG = new A.TexSymbolConfig("\ud835\ude7a", false, null);
    B.TexSymbolConfig_eeV = new A.TexSymbolConfig("\ud835\udd42", false, null);
    B.TexSymbolConfig_w23 = new A.TexSymbolConfig("\ud835\udca6", false, null);
    B.TexSymbolConfig_JDM = new A.TexSymbolConfig("\ud835\udc0b", false, null);
    B.TexSymbolConfig_SDu = new A.TexSymbolConfig("\ud835\udc3f", false, null);
    B.TexSymbolConfig_4jj = new A.TexSymbolConfig("\ud835\udc73", false, null);
    B.TexSymbolConfig_Uuq = new A.TexSymbolConfig("\ud835\udd0f", false, null);
    B.TexSymbolConfig_azh = new A.TexSymbolConfig("\ud835\uddab", false, null);
    B.TexSymbolConfig_Ger = new A.TexSymbolConfig("\ud835\udddf", false, null);
    B.TexSymbolConfig_FCw = new A.TexSymbolConfig("\ud835\ude13", false, null);
    B.TexSymbolConfig_dAd = new A.TexSymbolConfig("\ud835\ude7b", false, null);
    B.TexSymbolConfig_6ys = new A.TexSymbolConfig("\ud835\udd43", false, null);
    B.TexSymbolConfig_VY6 = new A.TexSymbolConfig("\ud835\udca7", false, null);
    B.TexSymbolConfig_n8Q = new A.TexSymbolConfig("\ud835\udc0c", false, null);
    B.TexSymbolConfig_Z5T = new A.TexSymbolConfig("\ud835\udc40", false, null);
    B.TexSymbolConfig_tcX = new A.TexSymbolConfig("\ud835\udc74", false, null);
    B.TexSymbolConfig_9Pd = new A.TexSymbolConfig("\ud835\udd10", false, null);
    B.TexSymbolConfig_7qW = new A.TexSymbolConfig("\ud835\uddac", false, null);
    B.TexSymbolConfig_4ck = new A.TexSymbolConfig("\ud835\udde0", false, null);
    B.TexSymbolConfig_48P = new A.TexSymbolConfig("\ud835\ude14", false, null);
    B.TexSymbolConfig_i2R = new A.TexSymbolConfig("\ud835\ude7c", false, null);
    B.TexSymbolConfig_9Lz = new A.TexSymbolConfig("\ud835\udd44", false, null);
    B.TexSymbolConfig_8Tu = new A.TexSymbolConfig("\ud835\udca8", false, null);
    B.TexSymbolConfig_gmn = new A.TexSymbolConfig("\ud835\udc0d", false, null);
    B.TexSymbolConfig_TCP = new A.TexSymbolConfig("\ud835\udc41", false, null);
    B.TexSymbolConfig_Bak = new A.TexSymbolConfig("\ud835\udc75", false, null);
    B.TexSymbolConfig_qfz = new A.TexSymbolConfig("\ud835\udd11", false, null);
    B.TexSymbolConfig_4kI = new A.TexSymbolConfig("\ud835\uddad", false, null);
    B.TexSymbolConfig_gX3 = new A.TexSymbolConfig("\ud835\udde1", false, null);
    B.TexSymbolConfig_dVk = new A.TexSymbolConfig("\ud835\ude15", false, null);
    B.TexSymbolConfig_6Qc = new A.TexSymbolConfig("\ud835\ude7d", false, null);
    B.TexSymbolConfig_cpd = new A.TexSymbolConfig("\ud835\udd45", false, null);
    B.TexSymbolConfig_2NA = new A.TexSymbolConfig("\ud835\udca9", false, null);
    B.TexSymbolConfig_oUS = new A.TexSymbolConfig("\ud835\udc0e", false, null);
    B.TexSymbolConfig_trO = new A.TexSymbolConfig("\ud835\udc42", false, null);
    B.TexSymbolConfig_mP9 = new A.TexSymbolConfig("\ud835\udc76", false, null);
    B.TexSymbolConfig_njn = new A.TexSymbolConfig("\ud835\udd12", false, null);
    B.TexSymbolConfig_fHV = new A.TexSymbolConfig("\ud835\uddae", false, null);
    B.TexSymbolConfig_4Hj = new A.TexSymbolConfig("\ud835\udde2", false, null);
    B.TexSymbolConfig_D10 = new A.TexSymbolConfig("\ud835\ude16", false, null);
    B.TexSymbolConfig_mQ7 = new A.TexSymbolConfig("\ud835\ude7e", false, null);
    B.TexSymbolConfig_RBr = new A.TexSymbolConfig("\ud835\udd46", false, null);
    B.TexSymbolConfig_xMh = new A.TexSymbolConfig("\ud835\udcaa", false, null);
    B.TexSymbolConfig_fnH = new A.TexSymbolConfig("\ud835\udc0f", false, null);
    B.TexSymbolConfig_t7z = new A.TexSymbolConfig("\ud835\udc43", false, null);
    B.TexSymbolConfig_9zk = new A.TexSymbolConfig("\ud835\udc77", false, null);
    B.TexSymbolConfig_XPe = new A.TexSymbolConfig("\ud835\udd13", false, null);
    B.TexSymbolConfig_hLH = new A.TexSymbolConfig("\ud835\uddaf", false, null);
    B.TexSymbolConfig_XzX = new A.TexSymbolConfig("\ud835\udde3", false, null);
    B.TexSymbolConfig_okO = new A.TexSymbolConfig("\ud835\ude17", false, null);
    B.TexSymbolConfig_ibN = new A.TexSymbolConfig("\ud835\ude7f", false, null);
    B.TexSymbolConfig_8kL = new A.TexSymbolConfig("\ud835\udd47", false, null);
    B.TexSymbolConfig_vkz = new A.TexSymbolConfig("\ud835\udcab", false, null);
    B.TexSymbolConfig_yYW = new A.TexSymbolConfig("\ud835\udc10", false, null);
    B.TexSymbolConfig_MsQ = new A.TexSymbolConfig("\ud835\udc44", false, null);
    B.TexSymbolConfig_RVG = new A.TexSymbolConfig("\ud835\udc78", false, null);
    B.TexSymbolConfig_9DA = new A.TexSymbolConfig("\ud835\udd14", false, null);
    B.TexSymbolConfig_jq6 = new A.TexSymbolConfig("\ud835\uddb0", false, null);
    B.TexSymbolConfig_qP7 = new A.TexSymbolConfig("\ud835\udde4", false, null);
    B.TexSymbolConfig_nCA = new A.TexSymbolConfig("\ud835\ude18", false, null);
    B.TexSymbolConfig_5vn = new A.TexSymbolConfig("\ud835\ude80", false, null);
    B.TexSymbolConfig_hcW = new A.TexSymbolConfig("\ud835\udd48", false, null);
    B.TexSymbolConfig_MGX = new A.TexSymbolConfig("\ud835\udcac", false, null);
    B.TexSymbolConfig_bIz = new A.TexSymbolConfig("\ud835\udc11", false, null);
    B.TexSymbolConfig_cPR = new A.TexSymbolConfig("\ud835\udc45", false, null);
    B.TexSymbolConfig_tbX = new A.TexSymbolConfig("\ud835\udc79", false, null);
    B.TexSymbolConfig_t9l = new A.TexSymbolConfig("\ud835\udd15", false, null);
    B.TexSymbolConfig_L4M = new A.TexSymbolConfig("\ud835\uddb1", false, null);
    B.TexSymbolConfig_n9t = new A.TexSymbolConfig("\ud835\udde5", false, null);
    B.TexSymbolConfig_FiX = new A.TexSymbolConfig("\ud835\ude19", false, null);
    B.TexSymbolConfig_CAS = new A.TexSymbolConfig("\ud835\ude81", false, null);
    B.TexSymbolConfig_dsF = new A.TexSymbolConfig("\ud835\udd49", false, null);
    B.TexSymbolConfig_SKe = new A.TexSymbolConfig("\ud835\udcad", false, null);
    B.TexSymbolConfig_7DQ = new A.TexSymbolConfig("\ud835\udc12", false, null);
    B.TexSymbolConfig_QtG = new A.TexSymbolConfig("\ud835\udc46", false, null);
    B.TexSymbolConfig_MHm = new A.TexSymbolConfig("\ud835\udc7a", false, null);
    B.TexSymbolConfig_f6t = new A.TexSymbolConfig("\ud835\udd16", false, null);
    B.TexSymbolConfig_J8t = new A.TexSymbolConfig("\ud835\uddb2", false, null);
    B.TexSymbolConfig_RRK = new A.TexSymbolConfig("\ud835\udde6", false, null);
    B.TexSymbolConfig_Vvs = new A.TexSymbolConfig("\ud835\ude1a", false, null);
    B.TexSymbolConfig_dhT = new A.TexSymbolConfig("\ud835\ude82", false, null);
    B.TexSymbolConfig_VQL = new A.TexSymbolConfig("\ud835\udd4a", false, null);
    B.TexSymbolConfig_SC5 = new A.TexSymbolConfig("\ud835\udcae", false, null);
    B.TexSymbolConfig_DTs = new A.TexSymbolConfig("\ud835\udc13", false, null);
    B.TexSymbolConfig_UZb = new A.TexSymbolConfig("\ud835\udc47", false, null);
    B.TexSymbolConfig_2Sd = new A.TexSymbolConfig("\ud835\udc7b", false, null);
    B.TexSymbolConfig_OH5 = new A.TexSymbolConfig("\ud835\udd17", false, null);
    B.TexSymbolConfig_6ql = new A.TexSymbolConfig("\ud835\uddb3", false, null);
    B.TexSymbolConfig_GPg = new A.TexSymbolConfig("\ud835\udde7", false, null);
    B.TexSymbolConfig_R1J = new A.TexSymbolConfig("\ud835\ude1b", false, null);
    B.TexSymbolConfig_dqr = new A.TexSymbolConfig("\ud835\ude83", false, null);
    B.TexSymbolConfig_pyS = new A.TexSymbolConfig("\ud835\udd4b", false, null);
    B.TexSymbolConfig_cOy = new A.TexSymbolConfig("\ud835\udcaf", false, null);
    B.TexSymbolConfig_Et6 = new A.TexSymbolConfig("\ud835\udc14", false, null);
    B.TexSymbolConfig_kEr = new A.TexSymbolConfig("\ud835\udc48", false, null);
    B.TexSymbolConfig_5Pu = new A.TexSymbolConfig("\ud835\udc7c", false, null);
    B.TexSymbolConfig_kmp = new A.TexSymbolConfig("\ud835\udd18", false, null);
    B.TexSymbolConfig_2pM = new A.TexSymbolConfig("\ud835\uddb4", false, null);
    B.TexSymbolConfig_htn = new A.TexSymbolConfig("\ud835\udde8", false, null);
    B.TexSymbolConfig_KJU = new A.TexSymbolConfig("\ud835\ude1c", false, null);
    B.TexSymbolConfig_N4X = new A.TexSymbolConfig("\ud835\ude84", false, null);
    B.TexSymbolConfig_8zq = new A.TexSymbolConfig("\ud835\udd4c", false, null);
    B.TexSymbolConfig_xhi = new A.TexSymbolConfig("\ud835\udcb0", false, null);
    B.TexSymbolConfig_WeI = new A.TexSymbolConfig("\ud835\udc15", false, null);
    B.TexSymbolConfig_oYX = new A.TexSymbolConfig("\ud835\udc49", false, null);
    B.TexSymbolConfig_oBD = new A.TexSymbolConfig("\ud835\udc7d", false, null);
    B.TexSymbolConfig_xaK = new A.TexSymbolConfig("\ud835\udd19", false, null);
    B.TexSymbolConfig_inw = new A.TexSymbolConfig("\ud835\uddb5", false, null);
    B.TexSymbolConfig_tFT = new A.TexSymbolConfig("\ud835\udde9", false, null);
    B.TexSymbolConfig_cWj = new A.TexSymbolConfig("\ud835\ude1d", false, null);
    B.TexSymbolConfig_Vh7 = new A.TexSymbolConfig("\ud835\ude85", false, null);
    B.TexSymbolConfig_D2d = new A.TexSymbolConfig("\ud835\udd4d", false, null);
    B.TexSymbolConfig_1D5 = new A.TexSymbolConfig("\ud835\udcb1", false, null);
    B.TexSymbolConfig_qFl = new A.TexSymbolConfig("\ud835\udc16", false, null);
    B.TexSymbolConfig_oOD = new A.TexSymbolConfig("\ud835\udc4a", false, null);
    B.TexSymbolConfig_nLg = new A.TexSymbolConfig("\ud835\udc7e", false, null);
    B.TexSymbolConfig_rOQ = new A.TexSymbolConfig("\ud835\udd1a", false, null);
    B.TexSymbolConfig_9Uz = new A.TexSymbolConfig("\ud835\uddb6", false, null);
    B.TexSymbolConfig_3oW = new A.TexSymbolConfig("\ud835\uddea", false, null);
    B.TexSymbolConfig_Rqo = new A.TexSymbolConfig("\ud835\ude1e", false, null);
    B.TexSymbolConfig_Mwp = new A.TexSymbolConfig("\ud835\ude86", false, null);
    B.TexSymbolConfig_yRb = new A.TexSymbolConfig("\ud835\udd4e", false, null);
    B.TexSymbolConfig_LBz = new A.TexSymbolConfig("\ud835\udcb2", false, null);
    B.TexSymbolConfig_eOR = new A.TexSymbolConfig("\ud835\udc17", false, null);
    B.TexSymbolConfig_Inm = new A.TexSymbolConfig("\ud835\udc4b", false, null);
    B.TexSymbolConfig_YyP = new A.TexSymbolConfig("\ud835\udc7f", false, null);
    B.TexSymbolConfig_IFq = new A.TexSymbolConfig("\ud835\udd1b", false, null);
    B.TexSymbolConfig_O2L = new A.TexSymbolConfig("\ud835\uddb7", false, null);
    B.TexSymbolConfig_sS6 = new A.TexSymbolConfig("\ud835\uddeb", false, null);
    B.TexSymbolConfig_DKW = new A.TexSymbolConfig("\ud835\ude1f", false, null);
    B.TexSymbolConfig_WZi = new A.TexSymbolConfig("\ud835\ude87", false, null);
    B.TexSymbolConfig_NW5 = new A.TexSymbolConfig("\ud835\udd4f", false, null);
    B.TexSymbolConfig_5Qk = new A.TexSymbolConfig("\ud835\udcb3", false, null);
    B.TexSymbolConfig_mQp = new A.TexSymbolConfig("\ud835\udc18", false, null);
    B.TexSymbolConfig_Lp5 = new A.TexSymbolConfig("\ud835\udc4c", false, null);
    B.TexSymbolConfig_6cM = new A.TexSymbolConfig("\ud835\udc80", false, null);
    B.TexSymbolConfig_bVG = new A.TexSymbolConfig("\ud835\udd1c", false, null);
    B.TexSymbolConfig_eBF = new A.TexSymbolConfig("\ud835\uddb8", false, null);
    B.TexSymbolConfig_6Ad = new A.TexSymbolConfig("\ud835\uddec", false, null);
    B.TexSymbolConfig_xU8 = new A.TexSymbolConfig("\ud835\ude20", false, null);
    B.TexSymbolConfig_h7l = new A.TexSymbolConfig("\ud835\ude88", false, null);
    B.TexSymbolConfig_1mL = new A.TexSymbolConfig("\ud835\udd50", false, null);
    B.TexSymbolConfig_STb = new A.TexSymbolConfig("\ud835\udcb4", false, null);
    B.TexSymbolConfig_3AX = new A.TexSymbolConfig("\ud835\udc19", false, null);
    B.TexSymbolConfig_mER = new A.TexSymbolConfig("\ud835\udc4d", false, null);
    B.TexSymbolConfig_eOC = new A.TexSymbolConfig("\ud835\udc81", false, null);
    B.TexSymbolConfig_99l = new A.TexSymbolConfig("\ud835\udd1d", false, null);
    B.TexSymbolConfig_BKZ = new A.TexSymbolConfig("\ud835\uddb9", false, null);
    B.TexSymbolConfig_bw4 = new A.TexSymbolConfig("\ud835\udded", false, null);
    B.TexSymbolConfig_E5u = new A.TexSymbolConfig("\ud835\ude21", false, null);
    B.TexSymbolConfig_etr = new A.TexSymbolConfig("\ud835\ude89", false, null);
    B.TexSymbolConfig_LAT = new A.TexSymbolConfig("\ud835\udd51", false, null);
    B.TexSymbolConfig_fIw = new A.TexSymbolConfig("\ud835\udcb5", false, null);
    B.TexSymbolConfig_jjp = new A.TexSymbolConfig("\ud835\udc1a", false, null);
    B.TexSymbolConfig_CR3 = new A.TexSymbolConfig("\ud835\udc4e", false, null);
    B.TexSymbolConfig_qNo = new A.TexSymbolConfig("\ud835\udc82", false, null);
    B.TexSymbolConfig_EFm = new A.TexSymbolConfig("\ud835\udd1e", false, null);
    B.TexSymbolConfig_M80 = new A.TexSymbolConfig("\ud835\uddba", false, null);
    B.TexSymbolConfig_7z7 = new A.TexSymbolConfig("\ud835\uddee", false, null);
    B.TexSymbolConfig_9pK = new A.TexSymbolConfig("\ud835\ude22", false, null);
    B.TexSymbolConfig_HC6 = new A.TexSymbolConfig("\ud835\ude8a", false, null);
    B.TexSymbolConfig_ZVV = new A.TexSymbolConfig("\ud835\udc1b", false, null);
    B.TexSymbolConfig_9uT = new A.TexSymbolConfig("\ud835\udc4f", false, null);
    B.TexSymbolConfig_o0I = new A.TexSymbolConfig("\ud835\udc83", false, null);
    B.TexSymbolConfig_MwN = new A.TexSymbolConfig("\ud835\udd1f", false, null);
    B.TexSymbolConfig_EPs = new A.TexSymbolConfig("\ud835\uddbb", false, null);
    B.TexSymbolConfig_Set = new A.TexSymbolConfig("\ud835\uddef", false, null);
    B.TexSymbolConfig_3Ba = new A.TexSymbolConfig("\ud835\ude23", false, null);
    B.TexSymbolConfig_WHI = new A.TexSymbolConfig("\ud835\ude8b", false, null);
    B.TexSymbolConfig_YDi = new A.TexSymbolConfig("\ud835\udc1c", false, null);
    B.TexSymbolConfig_cRl = new A.TexSymbolConfig("\ud835\udc50", false, null);
    B.TexSymbolConfig_BiP = new A.TexSymbolConfig("\ud835\udc84", false, null);
    B.TexSymbolConfig_pd6 = new A.TexSymbolConfig("\ud835\udd20", false, null);
    B.TexSymbolConfig_ZxO = new A.TexSymbolConfig("\ud835\uddbc", false, null);
    B.TexSymbolConfig_XWx = new A.TexSymbolConfig("\ud835\uddf0", false, null);
    B.TexSymbolConfig_inG0 = new A.TexSymbolConfig("\ud835\ude24", false, null);
    B.TexSymbolConfig_BDK = new A.TexSymbolConfig("\ud835\ude8c", false, null);
    B.TexSymbolConfig_Kri = new A.TexSymbolConfig("\ud835\udc1d", false, null);
    B.TexSymbolConfig_wII = new A.TexSymbolConfig("\ud835\udc51", false, null);
    B.TexSymbolConfig_yF5 = new A.TexSymbolConfig("\ud835\udc85", false, null);
    B.TexSymbolConfig_lN4 = new A.TexSymbolConfig("\ud835\udd21", false, null);
    B.TexSymbolConfig_pPh = new A.TexSymbolConfig("\ud835\uddbd", false, null);
    B.TexSymbolConfig_5Pi = new A.TexSymbolConfig("\ud835\uddf1", false, null);
    B.TexSymbolConfig_vuM = new A.TexSymbolConfig("\ud835\ude25", false, null);
    B.TexSymbolConfig_LkM = new A.TexSymbolConfig("\ud835\ude8d", false, null);
    B.TexSymbolConfig_KEQ = new A.TexSymbolConfig("\ud835\udc1e", false, null);
    B.TexSymbolConfig_dg8 = new A.TexSymbolConfig("\ud835\udc52", false, null);
    B.TexSymbolConfig_pWx = new A.TexSymbolConfig("\ud835\udc86", false, null);
    B.TexSymbolConfig_BZa = new A.TexSymbolConfig("\ud835\udd22", false, null);
    B.TexSymbolConfig_yUu = new A.TexSymbolConfig("\ud835\uddbe", false, null);
    B.TexSymbolConfig_DT6 = new A.TexSymbolConfig("\ud835\uddf2", false, null);
    B.TexSymbolConfig_F1O = new A.TexSymbolConfig("\ud835\ude26", false, null);
    B.TexSymbolConfig_Klo = new A.TexSymbolConfig("\ud835\ude8e", false, null);
    B.TexSymbolConfig_wQn = new A.TexSymbolConfig("\ud835\udc1f", false, null);
    B.TexSymbolConfig_YPx = new A.TexSymbolConfig("\ud835\udc53", false, null);
    B.TexSymbolConfig_uQw = new A.TexSymbolConfig("\ud835\udc87", false, null);
    B.TexSymbolConfig_SlJ = new A.TexSymbolConfig("\ud835\udd23", false, null);
    B.TexSymbolConfig_rlX = new A.TexSymbolConfig("\ud835\uddbf", false, null);
    B.TexSymbolConfig_tRJ = new A.TexSymbolConfig("\ud835\uddf3", false, null);
    B.TexSymbolConfig_Oqf = new A.TexSymbolConfig("\ud835\ude27", false, null);
    B.TexSymbolConfig_6V5 = new A.TexSymbolConfig("\ud835\ude8f", false, null);
    B.TexSymbolConfig_f0p = new A.TexSymbolConfig("\ud835\udc20", false, null);
    B.TexSymbolConfig_2hA = new A.TexSymbolConfig("\ud835\udc54", false, null);
    B.TexSymbolConfig_lr4 = new A.TexSymbolConfig("\ud835\udc88", false, null);
    B.TexSymbolConfig_bMa = new A.TexSymbolConfig("\ud835\udd24", false, null);
    B.TexSymbolConfig_BWw = new A.TexSymbolConfig("\ud835\uddc0", false, null);
    B.TexSymbolConfig_qFh = new A.TexSymbolConfig("\ud835\uddf4", false, null);
    B.TexSymbolConfig_phT = new A.TexSymbolConfig("\ud835\ude28", false, null);
    B.TexSymbolConfig_pyb = new A.TexSymbolConfig("\ud835\ude90", false, null);
    B.TexSymbolConfig_r5C = new A.TexSymbolConfig("\ud835\udc21", false, null);
    B.TexSymbolConfig_iSQ = new A.TexSymbolConfig("\ud835\udc55", false, null);
    B.TexSymbolConfig_irg = new A.TexSymbolConfig("\ud835\udc89", false, null);
    B.TexSymbolConfig_vvl = new A.TexSymbolConfig("\ud835\udd25", false, null);
    B.TexSymbolConfig_GMf = new A.TexSymbolConfig("\ud835\uddc1", false, null);
    B.TexSymbolConfig_Yq4 = new A.TexSymbolConfig("\ud835\uddf5", false, null);
    B.TexSymbolConfig_B93 = new A.TexSymbolConfig("\ud835\ude29", false, null);
    B.TexSymbolConfig_JTC = new A.TexSymbolConfig("\ud835\ude91", false, null);
    B.TexSymbolConfig_bLN = new A.TexSymbolConfig("\ud835\udc22", false, null);
    B.TexSymbolConfig_F3z = new A.TexSymbolConfig("\ud835\udc56", false, null);
    B.TexSymbolConfig_FB9 = new A.TexSymbolConfig("\ud835\udc8a", false, null);
    B.TexSymbolConfig_v3q = new A.TexSymbolConfig("\ud835\udd26", false, null);
    B.TexSymbolConfig_3zs = new A.TexSymbolConfig("\ud835\uddc2", false, null);
    B.TexSymbolConfig_JSR = new A.TexSymbolConfig("\ud835\uddf6", false, null);
    B.TexSymbolConfig_pJU = new A.TexSymbolConfig("\ud835\ude2a", false, null);
    B.TexSymbolConfig_unp = new A.TexSymbolConfig("\ud835\ude92", false, null);
    B.TexSymbolConfig_3Jq = new A.TexSymbolConfig("\ud835\udc23", false, null);
    B.TexSymbolConfig_8jX = new A.TexSymbolConfig("\ud835\udc57", false, null);
    B.TexSymbolConfig_oil = new A.TexSymbolConfig("\ud835\udc8b", false, null);
    B.TexSymbolConfig_cEe = new A.TexSymbolConfig("\ud835\udd27", false, null);
    B.TexSymbolConfig_Yuu = new A.TexSymbolConfig("\ud835\uddc3", false, null);
    B.TexSymbolConfig_zIf = new A.TexSymbolConfig("\ud835\uddf7", false, null);
    B.TexSymbolConfig_28O = new A.TexSymbolConfig("\ud835\ude2b", false, null);
    B.TexSymbolConfig_s3I = new A.TexSymbolConfig("\ud835\ude93", false, null);
    B.TexSymbolConfig_MsW = new A.TexSymbolConfig("\ud835\udc24", false, null);
    B.TexSymbolConfig_EUx = new A.TexSymbolConfig("\ud835\udc58", false, null);
    B.TexSymbolConfig_kfR = new A.TexSymbolConfig("\ud835\udc8c", false, null);
    B.TexSymbolConfig_JbZ = new A.TexSymbolConfig("\ud835\udd28", false, null);
    B.TexSymbolConfig_QY8 = new A.TexSymbolConfig("\ud835\uddc4", false, null);
    B.TexSymbolConfig_noM = new A.TexSymbolConfig("\ud835\uddf8", false, null);
    B.TexSymbolConfig_AG9 = new A.TexSymbolConfig("\ud835\ude2c", false, null);
    B.TexSymbolConfig_SZD = new A.TexSymbolConfig("\ud835\ude94", false, null);
    B.TexSymbolConfig_sWv = new A.TexSymbolConfig("\ud835\udc25", false, null);
    B.TexSymbolConfig_OmY = new A.TexSymbolConfig("\ud835\udc59", false, null);
    B.TexSymbolConfig_hWH = new A.TexSymbolConfig("\ud835\udc8d", false, null);
    B.TexSymbolConfig_daS = new A.TexSymbolConfig("\ud835\udd29", false, null);
    B.TexSymbolConfig_JGA = new A.TexSymbolConfig("\ud835\uddc5", false, null);
    B.TexSymbolConfig_xi1 = new A.TexSymbolConfig("\ud835\uddf9", false, null);
    B.TexSymbolConfig_VEM = new A.TexSymbolConfig("\ud835\ude2d", false, null);
    B.TexSymbolConfig_ZdH = new A.TexSymbolConfig("\ud835\ude95", false, null);
    B.TexSymbolConfig_Cva = new A.TexSymbolConfig("\ud835\udc26", false, null);
    B.TexSymbolConfig_fF7 = new A.TexSymbolConfig("\ud835\udc5a", false, null);
    B.TexSymbolConfig_yM2 = new A.TexSymbolConfig("\ud835\udc8e", false, null);
    B.TexSymbolConfig_16r = new A.TexSymbolConfig("\ud835\udd2a", false, null);
    B.TexSymbolConfig_AgP = new A.TexSymbolConfig("\ud835\uddc6", false, null);
    B.TexSymbolConfig_v6d = new A.TexSymbolConfig("\ud835\uddfa", false, null);
    B.TexSymbolConfig_bOp = new A.TexSymbolConfig("\ud835\ude2e", false, null);
    B.TexSymbolConfig_sDa = new A.TexSymbolConfig("\ud835\ude96", false, null);
    B.TexSymbolConfig_XwA = new A.TexSymbolConfig("\ud835\udc27", false, null);
    B.TexSymbolConfig_X4k = new A.TexSymbolConfig("\ud835\udc5b", false, null);
    B.TexSymbolConfig_vlK = new A.TexSymbolConfig("\ud835\udc8f", false, null);
    B.TexSymbolConfig_UyA = new A.TexSymbolConfig("\ud835\udd2b", false, null);
    B.TexSymbolConfig_hVI = new A.TexSymbolConfig("\ud835\uddc7", false, null);
    B.TexSymbolConfig_L3s = new A.TexSymbolConfig("\ud835\uddfb", false, null);
    B.TexSymbolConfig_Up0 = new A.TexSymbolConfig("\ud835\ude2f", false, null);
    B.TexSymbolConfig_fLF = new A.TexSymbolConfig("\ud835\ude97", false, null);
    B.TexSymbolConfig_Oa3 = new A.TexSymbolConfig("\ud835\udc28", false, null);
    B.TexSymbolConfig_MZt = new A.TexSymbolConfig("\ud835\udc5c", false, null);
    B.TexSymbolConfig_eXT = new A.TexSymbolConfig("\ud835\udc90", false, null);
    B.TexSymbolConfig_rPj = new A.TexSymbolConfig("\ud835\udd2c", false, null);
    B.TexSymbolConfig_mmc = new A.TexSymbolConfig("\ud835\uddc8", false, null);
    B.TexSymbolConfig_fvM = new A.TexSymbolConfig("\ud835\uddfc", false, null);
    B.TexSymbolConfig_LyV = new A.TexSymbolConfig("\ud835\ude30", false, null);
    B.TexSymbolConfig_egV = new A.TexSymbolConfig("\ud835\ude98", false, null);
    B.TexSymbolConfig_ZVG = new A.TexSymbolConfig("\ud835\udc29", false, null);
    B.TexSymbolConfig_bo0 = new A.TexSymbolConfig("\ud835\udc5d", false, null);
    B.TexSymbolConfig_DGy = new A.TexSymbolConfig("\ud835\udc91", false, null);
    B.TexSymbolConfig_hRX = new A.TexSymbolConfig("\ud835\udd2d", false, null);
    B.TexSymbolConfig_j5E = new A.TexSymbolConfig("\ud835\uddc9", false, null);
    B.TexSymbolConfig_MJg = new A.TexSymbolConfig("\ud835\uddfd", false, null);
    B.TexSymbolConfig_6Lu = new A.TexSymbolConfig("\ud835\ude31", false, null);
    B.TexSymbolConfig_XFJ = new A.TexSymbolConfig("\ud835\ude99", false, null);
    B.TexSymbolConfig_Adg = new A.TexSymbolConfig("\ud835\udc2a", false, null);
    B.TexSymbolConfig_pfz = new A.TexSymbolConfig("\ud835\udc5e", false, null);
    B.TexSymbolConfig_sZ8 = new A.TexSymbolConfig("\ud835\udc92", false, null);
    B.TexSymbolConfig_LYn = new A.TexSymbolConfig("\ud835\udd2e", false, null);
    B.TexSymbolConfig_uOn = new A.TexSymbolConfig("\ud835\uddca", false, null);
    B.TexSymbolConfig_WET = new A.TexSymbolConfig("\ud835\uddfe", false, null);
    B.TexSymbolConfig_vzo = new A.TexSymbolConfig("\ud835\ude32", false, null);
    B.TexSymbolConfig_Aay = new A.TexSymbolConfig("\ud835\ude9a", false, null);
    B.TexSymbolConfig_CuN = new A.TexSymbolConfig("\ud835\udc2b", false, null);
    B.TexSymbolConfig_tLS = new A.TexSymbolConfig("\ud835\udc5f", false, null);
    B.TexSymbolConfig_WJG = new A.TexSymbolConfig("\ud835\udc93", false, null);
    B.TexSymbolConfig_SDj = new A.TexSymbolConfig("\ud835\udd2f", false, null);
    B.TexSymbolConfig_3D4 = new A.TexSymbolConfig("\ud835\uddcb", false, null);
    B.TexSymbolConfig_meu = new A.TexSymbolConfig("\ud835\uddff", false, null);
    B.TexSymbolConfig_VHn = new A.TexSymbolConfig("\ud835\ude33", false, null);
    B.TexSymbolConfig_pNX = new A.TexSymbolConfig("\ud835\ude9b", false, null);
    B.TexSymbolConfig_Wn8 = new A.TexSymbolConfig("\ud835\udc2c", false, null);
    B.TexSymbolConfig_b8h = new A.TexSymbolConfig("\ud835\udc60", false, null);
    B.TexSymbolConfig_l7O = new A.TexSymbolConfig("\ud835\udc94", false, null);
    B.TexSymbolConfig_NlT = new A.TexSymbolConfig("\ud835\udd30", false, null);
    B.TexSymbolConfig_c4R = new A.TexSymbolConfig("\ud835\uddcc", false, null);
    B.TexSymbolConfig_J7p = new A.TexSymbolConfig("\ud835\ude00", false, null);
    B.TexSymbolConfig_xLv = new A.TexSymbolConfig("\ud835\ude34", false, null);
    B.TexSymbolConfig_QCJ = new A.TexSymbolConfig("\ud835\ude9c", false, null);
    B.TexSymbolConfig_KaP = new A.TexSymbolConfig("\ud835\udc2d", false, null);
    B.TexSymbolConfig_iwZ = new A.TexSymbolConfig("\ud835\udc61", false, null);
    B.TexSymbolConfig_4Zp = new A.TexSymbolConfig("\ud835\udc95", false, null);
    B.TexSymbolConfig_NqZ = new A.TexSymbolConfig("\ud835\udd31", false, null);
    B.TexSymbolConfig_nC9 = new A.TexSymbolConfig("\ud835\uddcd", false, null);
    B.TexSymbolConfig_yAg = new A.TexSymbolConfig("\ud835\ude01", false, null);
    B.TexSymbolConfig_tix = new A.TexSymbolConfig("\ud835\ude35", false, null);
    B.TexSymbolConfig_u4w = new A.TexSymbolConfig("\ud835\ude9d", false, null);
    B.TexSymbolConfig_GBv = new A.TexSymbolConfig("\ud835\udc2e", false, null);
    B.TexSymbolConfig_WLk = new A.TexSymbolConfig("\ud835\udc62", false, null);
    B.TexSymbolConfig_ynQ = new A.TexSymbolConfig("\ud835\udc96", false, null);
    B.TexSymbolConfig_w8J = new A.TexSymbolConfig("\ud835\udd32", false, null);
    B.TexSymbolConfig_YMY = new A.TexSymbolConfig("\ud835\uddce", false, null);
    B.TexSymbolConfig_Xrg = new A.TexSymbolConfig("\ud835\ude02", false, null);
    B.TexSymbolConfig_9Ei = new A.TexSymbolConfig("\ud835\ude36", false, null);
    B.TexSymbolConfig_eSJ = new A.TexSymbolConfig("\ud835\ude9e", false, null);
    B.TexSymbolConfig_DVX = new A.TexSymbolConfig("\ud835\udc2f", false, null);
    B.TexSymbolConfig_lJc = new A.TexSymbolConfig("\ud835\udc63", false, null);
    B.TexSymbolConfig_v2W = new A.TexSymbolConfig("\ud835\udc97", false, null);
    B.TexSymbolConfig_Iun = new A.TexSymbolConfig("\ud835\udd33", false, null);
    B.TexSymbolConfig_g9W = new A.TexSymbolConfig("\ud835\uddcf", false, null);
    B.TexSymbolConfig_nfb = new A.TexSymbolConfig("\ud835\ude03", false, null);
    B.TexSymbolConfig_WB0 = new A.TexSymbolConfig("\ud835\ude37", false, null);
    B.TexSymbolConfig_qeA = new A.TexSymbolConfig("\ud835\ude9f", false, null);
    B.TexSymbolConfig_fG0 = new A.TexSymbolConfig("\ud835\udc30", false, null);
    B.TexSymbolConfig_wwT = new A.TexSymbolConfig("\ud835\udc64", false, null);
    B.TexSymbolConfig_18C = new A.TexSymbolConfig("\ud835\udc98", false, null);
    B.TexSymbolConfig_EFB = new A.TexSymbolConfig("\ud835\udd34", false, null);
    B.TexSymbolConfig_Myn = new A.TexSymbolConfig("\ud835\uddd0", false, null);
    B.TexSymbolConfig_1XY = new A.TexSymbolConfig("\ud835\ude04", false, null);
    B.TexSymbolConfig_70y = new A.TexSymbolConfig("\ud835\ude38", false, null);
    B.TexSymbolConfig_8cz = new A.TexSymbolConfig("\ud835\udea0", false, null);
    B.TexSymbolConfig_9Ag = new A.TexSymbolConfig("\ud835\udc31", false, null);
    B.TexSymbolConfig_mQx = new A.TexSymbolConfig("\ud835\udc65", false, null);
    B.TexSymbolConfig_7kw = new A.TexSymbolConfig("\ud835\udc99", false, null);
    B.TexSymbolConfig_PCr = new A.TexSymbolConfig("\ud835\udd35", false, null);
    B.TexSymbolConfig_kod = new A.TexSymbolConfig("\ud835\uddd1", false, null);
    B.TexSymbolConfig_iAa = new A.TexSymbolConfig("\ud835\ude05", false, null);
    B.TexSymbolConfig_pDO = new A.TexSymbolConfig("\ud835\ude39", false, null);
    B.TexSymbolConfig_Yon = new A.TexSymbolConfig("\ud835\udea1", false, null);
    B.TexSymbolConfig_b8M = new A.TexSymbolConfig("\ud835\udc32", false, null);
    B.TexSymbolConfig_fq5 = new A.TexSymbolConfig("\ud835\udc66", false, null);
    B.TexSymbolConfig_VHH = new A.TexSymbolConfig("\ud835\udc9a", false, null);
    B.TexSymbolConfig_LRz = new A.TexSymbolConfig("\ud835\udd36", false, null);
    B.TexSymbolConfig_SHa = new A.TexSymbolConfig("\ud835\uddd2", false, null);
    B.TexSymbolConfig_6cJ = new A.TexSymbolConfig("\ud835\ude06", false, null);
    B.TexSymbolConfig_HFP = new A.TexSymbolConfig("\ud835\ude3a", false, null);
    B.TexSymbolConfig_Lfp = new A.TexSymbolConfig("\ud835\udea2", false, null);
    B.TexSymbolConfig_6VK = new A.TexSymbolConfig("\ud835\udc33", false, null);
    B.TexSymbolConfig_5RE = new A.TexSymbolConfig("\ud835\udc67", false, null);
    B.TexSymbolConfig_RDo = new A.TexSymbolConfig("\ud835\udc9b", false, null);
    B.TexSymbolConfig_JoQ = new A.TexSymbolConfig("\ud835\udd37", false, null);
    B.TexSymbolConfig_f8o = new A.TexSymbolConfig("\ud835\uddd3", false, null);
    B.TexSymbolConfig_TYO = new A.TexSymbolConfig("\ud835\ude07", false, null);
    B.TexSymbolConfig_ouX = new A.TexSymbolConfig("\ud835\ude3b", false, null);
    B.TexSymbolConfig_8pc = new A.TexSymbolConfig("\ud835\udea3", false, null);
    B.TexSymbolConfig_VBv = new A.TexSymbolConfig("\ud835\udd5c", false, null);
    B.TexSymbolConfig_NWc = new A.TexSymbolConfig("\ud835\udfce", false, null);
    B.TexSymbolConfig_A1i = new A.TexSymbolConfig("\ud835\udfe2", false, null);
    B.TexSymbolConfig_EM4 = new A.TexSymbolConfig("\ud835\udfec", false, null);
    B.TexSymbolConfig_ISp = new A.TexSymbolConfig("\ud835\udff6", false, null);
    B.TexSymbolConfig_mjk = new A.TexSymbolConfig("\ud835\udfcf", false, null);
    B.TexSymbolConfig_uEx = new A.TexSymbolConfig("\ud835\udfe3", false, null);
    B.TexSymbolConfig_te9 = new A.TexSymbolConfig("\ud835\udfed", false, null);
    B.TexSymbolConfig_Pon = new A.TexSymbolConfig("\ud835\udff7", false, null);
    B.TexSymbolConfig_VRk = new A.TexSymbolConfig("\ud835\udfd0", false, null);
    B.TexSymbolConfig_op1 = new A.TexSymbolConfig("\ud835\udfe4", false, null);
    B.TexSymbolConfig_UUf = new A.TexSymbolConfig("\ud835\udfee", false, null);
    B.TexSymbolConfig_iqn = new A.TexSymbolConfig("\ud835\udff8", false, null);
    B.TexSymbolConfig_Uhg = new A.TexSymbolConfig("\ud835\udfd1", false, null);
    B.TexSymbolConfig_p73 = new A.TexSymbolConfig("\ud835\udfe5", false, null);
    B.TexSymbolConfig_8gs = new A.TexSymbolConfig("\ud835\udfef", false, null);
    B.TexSymbolConfig_O2x = new A.TexSymbolConfig("\ud835\udff9", false, null);
    B.TexSymbolConfig_185 = new A.TexSymbolConfig("\ud835\udfd2", false, null);
    B.TexSymbolConfig_MQ4 = new A.TexSymbolConfig("\ud835\udfe6", false, null);
    B.TexSymbolConfig_KnC = new A.TexSymbolConfig("\ud835\udff0", false, null);
    B.TexSymbolConfig_Edq = new A.TexSymbolConfig("\ud835\udffa", false, null);
    B.TexSymbolConfig_DJa = new A.TexSymbolConfig("\ud835\udfd3", false, null);
    B.TexSymbolConfig_ffx = new A.TexSymbolConfig("\ud835\udfe7", false, null);
    B.TexSymbolConfig_3ir = new A.TexSymbolConfig("\ud835\udff1", false, null);
    B.TexSymbolConfig_3s9 = new A.TexSymbolConfig("\ud835\udffb", false, null);
    B.TexSymbolConfig_BDM = new A.TexSymbolConfig("\ud835\udfd4", false, null);
    B.TexSymbolConfig_KRD = new A.TexSymbolConfig("\ud835\udfe8", false, null);
    B.TexSymbolConfig_Hl4 = new A.TexSymbolConfig("\ud835\udff2", false, null);
    B.TexSymbolConfig_su5 = new A.TexSymbolConfig("\ud835\udffc", false, null);
    B.TexSymbolConfig_SJb = new A.TexSymbolConfig("\ud835\udfd5", false, null);
    B.TexSymbolConfig_u9Q = new A.TexSymbolConfig("\ud835\udfe9", false, null);
    B.TexSymbolConfig_zWB = new A.TexSymbolConfig("\ud835\udff3", false, null);
    B.TexSymbolConfig_Bav = new A.TexSymbolConfig("\ud835\udffd", false, null);
    B.TexSymbolConfig_iYT = new A.TexSymbolConfig("\ud835\udfd6", false, null);
    B.TexSymbolConfig_cAz = new A.TexSymbolConfig("\ud835\udfea", false, null);
    B.TexSymbolConfig_Gbi = new A.TexSymbolConfig("\ud835\udff4", false, null);
    B.TexSymbolConfig_UNd = new A.TexSymbolConfig("\ud835\udffe", false, null);
    B.TexSymbolConfig_V4z = new A.TexSymbolConfig("\ud835\udfd7", false, null);
    B.TexSymbolConfig_Ztu = new A.TexSymbolConfig("\ud835\udfeb", false, null);
    B.TexSymbolConfig_PfV = new A.TexSymbolConfig("\ud835\udff5", false, null);
    B.TexSymbolConfig_hY2 = new A.TexSymbolConfig("\ud835\udfff", false, null);
    B.TexSymbolConfig_pRY = new A.TexSymbolConfig("\xc7", false, null);
    B.TexSymbolConfig_8AK = new A.TexSymbolConfig("\xd0", false, null);
    B.TexSymbolConfig_KYo = new A.TexSymbolConfig("\xde", false, null);
    B.TexSymbolConfig_5FU = new A.TexSymbolConfig("\xe7", false, null);
    B.TexSymbolConfig_eh3 = new A.TexSymbolConfig("\xfe", false, null);
    B.TexSymbolConfig_RVb = new A.TexSymbolConfig("\xa0", false, null);
    B.TexSymbolConfig_61m = new A.TexSymbolConfig(" ", false, null);
    B.AtomType_6 = new A.AtomType(6, "punct");
    B.TexSymbolConfig_rff = new A.TexSymbolConfig(".", false, B.AtomType_6);
    B.TexSymbolConfig_J3m = new A.TexSymbolConfig("\u22c5", false, B.AtomType_6);
    B.TexSymbolConfig_IyD = new A.TexSymbolConfig("\u2a87", true, null);
    B.TexSymbolConfig_1EK = new A.TexSymbolConfig("\u2270", true, null);
    B.TexSymbolConfig_XYu = new A.TexSymbolConfig("\u2268", true, null);
    B.TexSymbolConfig_vpw = new A.TexSymbolConfig("\u2224", true, null);
    B.TexSymbolConfig_pL9 = new A.TexSymbolConfig("\u228a", true, null);
    B.TexSymbolConfig_1it = new A.TexSymbolConfig("\u2acb", true, null);
    B.TexSymbolConfig_Hbj = new A.TexSymbolConfig("\u2a88", true, null);
    B.TexSymbolConfig_SeO = new A.TexSymbolConfig("\u2271", true, null);
    B.TexSymbolConfig_r7L = new A.TexSymbolConfig("\u2269", true, null);
    B.TexSymbolConfig_Osn = new A.TexSymbolConfig("\u2226", true, null);
    B.TexSymbolConfig_AIY = new A.TexSymbolConfig("\u2289", true, null);
    B.TexSymbolConfig_pv3 = new A.TexSymbolConfig("\u228b", true, null);
    B.TexSymbolConfig_pkm = new A.TexSymbolConfig("\u2acc", true, null);
    B.TexSymbolConfig_Url = new A.TexSymbolConfig("\u2288", true, null);
    B.TexSymbolConfig_uT8 = new A.TexSymbolConfig("\u210f", true, null);
    B.TexSymbolConfig_UOx = new A.TexSymbolConfig("\u231c", false, null);
    B.TexSymbolConfig_rMp = new A.TexSymbolConfig("\u231d", false, null);
    B.TexSymbolConfig_EJh = new A.TexSymbolConfig("\u231e", false, null);
    B.TexSymbolConfig_Ngf = new A.TexSymbolConfig("\u231f", false, null);
    B.TexSymbolConfig_80p = new A.TexSymbolConfig("\u2323", true, null);
    B.TexSymbolConfig_h1n = new A.TexSymbolConfig("\u2322", true, null);
    B.TexSymbolConfig_xjG = new A.TexSymbolConfig("\u223c", true, null);
    B.TexSymbolConfig_hfo = new A.TexSymbolConfig("\u2248", true, null);
    B.TexSymbolConfig_ou2 = new A.TexSymbolConfig("\u2223", true, null);
    B.TexSymbolConfig_17u = new A.TexSymbolConfig("\u221d", true, null);
    B.TexSymbolConfig_DBB = new A.TexSymbolConfig("\u22c5", true, null);
    B.TexSymbolConfig_Ith = new A.TexSymbolConfig("\u2223", false, B.AtomType_4);
    B.TexSymbolConfig_ITf = new A.TexSymbolConfig("\u2223", false, B.AtomType_5);
    B.TexSymbolConfig_37C = new A.TexSymbolConfig("\u22a8", true, null);
    B.TexSymbolConfig_hqG = new A.TexSymbolConfig("\u2223", false, B.AtomType_0);
    B.TexSymbolConfig_lsF = new A.TexSymbolConfig("\u22a5", false, null);
    B.TexSymbolConfig_pRQ = new A.TexSymbolConfig("\u22a5", false, B.AtomType_0);
    B.TexSymbolConfig_lJU = new A.TexSymbolConfig("\u2225", false, null);
    B.TexSymbolConfig_1w0 = new A.TexSymbolConfig("\u2225", true, null);
    B.TexSymbolConfig_Cku = new A.TexSymbolConfig("\u2225", false, B.AtomType_4);
    B.TexSymbolConfig_u10 = new A.TexSymbolConfig("\u2225", false, B.AtomType_5);
    B.TexSymbolConfig_Wuu = new A.TexSymbolConfig("\u2225", false, B.AtomType_0);
    B.TexSymbolConfig_VjA = new A.TexSymbolConfig("#", false, null);
    B.TexSymbolConfig_qfX = new A.TexSymbolConfig("&", false, null);
    B.TexSymbolConfig_cQK = new A.TexSymbolConfig("&", false, B.AtomType_2);
    B.TexSymbolConfig_kFA = new A.TexSymbolConfig("\u2020", false, null);
    B.TexSymbolConfig_G16 = new A.TexSymbolConfig("\u2020", false, B.AtomType_0);
    B.TexSymbolConfig_AgW = new A.TexSymbolConfig("\u2021", false, null);
    B.TexSymbolConfig_QE6 = new A.TexSymbolConfig("\u2021", false, B.AtomType_0);
    B.TexSymbolConfig_Fzw = new A.TexSymbolConfig("\u25ef", false, null);
    B.TexSymbolConfig_iKT = new A.TexSymbolConfig("\u2219", false, null);
    B.TexSymbolConfig_03I = new A.TexSymbolConfig("\u2a3f", false, null);
    B.TexSymbolConfig_frX = new A.TexSymbolConfig("\u22ea", false, null);
    B.TexSymbolConfig_Vd4 = new A.TexSymbolConfig("\u22eb", false, null);
    B.TexSymbolConfig_qmh = new A.TexSymbolConfig("\u22b4", false, null);
    B.TexSymbolConfig_txU = new A.TexSymbolConfig("\u22b4", false, B.AtomType_2);
    B.TexSymbolConfig_c9E = new A.TexSymbolConfig("\u22b5", false, null);
    B.TexSymbolConfig_arS = new A.TexSymbolConfig("\u22b5", false, B.AtomType_2);
    B.TexSymbolConfig_SvB = new A.TexSymbolConfig("\u25b3", false, null);
    B.TexSymbolConfig_aN2 = new A.TexSymbolConfig("\u25b3", true, null);
    B.TexSymbolConfig_zr2 = new A.TexSymbolConfig("\u25b3", false, B.AtomType_0);
    B.TexSymbolConfig_eL8 = new A.TexSymbolConfig("\u25bd", false, null);
    B.TexSymbolConfig_Lyp = new A.TexSymbolConfig("\u25bd", true, null);
    B.TexSymbolConfig_0Kh = new A.TexSymbolConfig("\u25ca", false, null);
    B.TexSymbolConfig_kU3 = new A.TexSymbolConfig("\u24c8", false, null);
    B.TexSymbolConfig_j1j = new A.TexSymbolConfig("\xae", false, null);
    B.TexSymbolConfig_fvF = new A.TexSymbolConfig("\u2204", false, null);
    B.TexSymbolConfig_jB1 = new A.TexSymbolConfig("\u2127", false, null);
    B.TexSymbolConfig_ruq = new A.TexSymbolConfig("\u2035", false, null);
    B.TexSymbolConfig_GKn = new A.TexSymbolConfig("\u25b2", false, null);
    B.TexSymbolConfig_MOw = new A.TexSymbolConfig("\u25bc", false, null);
    B.TexSymbolConfig_cjT = new A.TexSymbolConfig("\u25a0", false, null);
    B.TexSymbolConfig_nVm = new A.TexSymbolConfig("\u29eb", false, null);
    B.TexSymbolConfig_Iu8 = new A.TexSymbolConfig("\u2605", false, null);
    B.TexSymbolConfig_Jjf = new A.TexSymbolConfig("\u2571", false, null);
    B.TexSymbolConfig_CTv = new A.TexSymbolConfig("\u2572", false, null);
    B.TexSymbolConfig_ZZz = new A.TexSymbolConfig("\u25a1", false, null);
    B.TexSymbolConfig_Drn = new A.TexSymbolConfig("\u03f0", false, null);
    B.TexSymbolConfig_Z1i = new A.TexSymbolConfig("\u22d6", false, null);
    B.TexSymbolConfig_PQq = new A.TexSymbolConfig("\u22b2", false, null);
    B.TexSymbolConfig_C8s = new A.TexSymbolConfig("\u22b2", true, null);
    B.TexSymbolConfig_OvW = new A.TexSymbolConfig("\u22d7", false, null);
    B.TexSymbolConfig_P2y = new A.TexSymbolConfig("\u22b3", false, null);
    B.TexSymbolConfig_wKD = new A.TexSymbolConfig("\u22b3", false, B.AtomType_2);
    B.TexSymbolConfig_N0R = new A.TexSymbolConfig("\u25c0", false, null);
    B.TexSymbolConfig_mDn = new A.TexSymbolConfig("\u220d", false, null);
    B.TexSymbolConfig_GKw = new A.TexSymbolConfig("\u25b6", false, null);
    B.TexSymbolConfig_wEt = new A.TexSymbolConfig("\u2216", false, null);
    B.TexSymbolConfig_spO = new A.TexSymbolConfig("\u2216", true, null);
    B.TexSymbolConfig_$_false_null = new A.TexSymbolConfig("$", false, null);
    B.TexSymbolConfig_Gdt = new A.TexSymbolConfig("%", false, null);
    B.TexSymbolConfig___false_null = new A.TexSymbolConfig("_", false, null);
    B.TexSymbolConfig_HTp = new A.TexSymbolConfig("\u2032", false, null);
    B.TexSymbolConfig_9EO = new A.TexSymbolConfig("\u22a4", false, null);
    B.TexSymbolConfig_fBG = new A.TexSymbolConfig("\u2205", false, null);
    B.TexSymbolConfig_VdG = new A.TexSymbolConfig("\u2205", true, null);
    B.TexSymbolConfig_Kbv = new A.TexSymbolConfig("\u2218", false, null);
    B.TexSymbolConfig_27R = new A.TexSymbolConfig("\u221a", false, null);
    B.TexSymbolConfig_JOd = new A.TexSymbolConfig("\u0338", false, null);
    B.TexSymbolConfig_Txq = new A.TexSymbolConfig("\u22c4", false, null);
    B.TexSymbolConfig_EHy = new A.TexSymbolConfig("\u22c6", false, null);
    B.TexSymbolConfig_bJN = new A.TexSymbolConfig("\u25c3", false, null);
    B.TexSymbolConfig_FRn = new A.TexSymbolConfig("\u25b9", false, null);
    B.TexSymbolConfig_P7D = new A.TexSymbolConfig("{", false, null);
    B.TexSymbolConfig_19L = new A.TexSymbolConfig("}", false, null);
    B.TexSymbolConfig_6Tf = new A.TexSymbolConfig("\\", false, null);
    B.TexSymbolConfig_b0P = new A.TexSymbolConfig("\u2210", false, null);
    B.TexSymbolConfig_PDX = new A.TexSymbolConfig("\u22c1", false, null);
    B.TexSymbolConfig_tYh = new A.TexSymbolConfig("\u22c0", false, null);
    B.TexSymbolConfig_250 = new A.TexSymbolConfig("\u2a04", false, null);
    B.TexSymbolConfig_BmC = new A.TexSymbolConfig("\u22c2", false, null);
    B.TexSymbolConfig_veX = new A.TexSymbolConfig("\u22c3", false, null);
    B.TexSymbolConfig_dmO = new A.TexSymbolConfig("\u222b", false, null);
    B.TexSymbolConfig_23M = new A.TexSymbolConfig("\u222c", false, null);
    B.TexSymbolConfig_AuU = new A.TexSymbolConfig("\u222d", false, null);
    B.TexSymbolConfig_k9E = new A.TexSymbolConfig("\u220f", false, null);
    B.TexSymbolConfig_2ps = new A.TexSymbolConfig("\u2211", false, null);
    B.TexSymbolConfig_mLy = new A.TexSymbolConfig("\u2a02", false, null);
    B.TexSymbolConfig_YLA = new A.TexSymbolConfig("\u2a01", false, null);
    B.TexSymbolConfig_oEa = new A.TexSymbolConfig("\u2a00", false, null);
    B.TexSymbolConfig_E9t = new A.TexSymbolConfig("\u222e", false, null);
    B.TexSymbolConfig_STd = new A.TexSymbolConfig("\u222f", false, null);
    B.TexSymbolConfig_fyP = new A.TexSymbolConfig("\u2230", false, null);
    B.TexSymbolConfig_MXs = new A.TexSymbolConfig("\u2a06", false, null);
    B.TexSymbolConfig_ujq = new A.TexSymbolConfig("\u22ee", false, null);
    B.TexSymbolConfig_UAC = new A.TexSymbolConfig("\u02ca", false, null);
    B.TexSymbolConfig_Jqm = new A.TexSymbolConfig("\u02cb", false, null);
    B.TexSymbolConfig_ot1 = new A.TexSymbolConfig("\xa8", false, null);
    B.TexSymbolConfig_r4v = new A.TexSymbolConfig("~", false, null);
    B.TexSymbolConfig_ClT = new A.TexSymbolConfig("\u02c9", false, null);
    B.TexSymbolConfig_hu9 = new A.TexSymbolConfig("\u02d8", false, null);
    B.TexSymbolConfig_RHL = new A.TexSymbolConfig("\u02c7", false, null);
    B.TexSymbolConfig_nBu = new A.TexSymbolConfig("^", false, null);
    B.TexSymbolConfig_m1W = new A.TexSymbolConfig("\u20d7", false, null);
    B.TexSymbolConfig_FTA = new A.TexSymbolConfig("\u02d9", false, null);
    B.TexSymbolConfig_7LH = new A.TexSymbolConfig("\u02da", false, null);
    B.TexSymbolConfig_eld = new A.TexSymbolConfig("\u2720", false, null);
    B.TexSymbolConfig_6ua = new A.TexSymbolConfig("\u2259", false, null);
    B.TexSymbolConfig_ZUy = new A.TexSymbolConfig("\u225a", false, null);
    B.TexSymbolConfig_I4M = new A.TexSymbolConfig("\u225b", false, null);
    B.TexSymbolConfig_6F3 = new A.TexSymbolConfig("\u225d", false, null);
    B.TexSymbolConfig_S55 = new A.TexSymbolConfig("\u225e", false, null);
    B.TexSymbolConfig_WiO = new A.TexSymbolConfig("\u225f", false, null);
    B.TexSymbolConfig_8jl = new A.TexSymbolConfig("\u2260", false, null);
    B.TexSymbolConfig_ieb = new A.TexSymbolConfig("\u2209", false, null);
    B.TexSymbolConfig_Jqm0 = new A.TexSymbolConfig("\u220c", false, null);
    B.TexSymbolConfig_MYn = new A.TexSymbolConfig(":", false, B.AtomType_6);
    B.TexSymbolConfig_nD7 = new A.TexSymbolConfig("\u2237", false, null);
    B.TexSymbolConfig_V95 = new A.TexSymbolConfig("\u2254", false, null);
    B.TexSymbolConfig_ELi = new A.TexSymbolConfig("\u2255", false, null);
    B.TexSymbolConfig_6wT = new A.TexSymbolConfig("\u2239", false, null);
    B.TexSymbolConfig_p2K = new A.TexSymbolConfig("\u27e6", false, null);
    B.TexSymbolConfig_JKK = new A.TexSymbolConfig("\u27e7", false, null);
    B.TexSymbolConfig_Gj3 = new A.TexSymbolConfig("\u2983", false, null);
    B.TexSymbolConfig_jXd = new A.TexSymbolConfig("\u2984", false, null);
    B.Map_MYH09 = new C.ConstantStringMap(B.Object_pPH, [B.TexSymbolConfig_sAj, B.TexSymbolConfig_JIB, B.TexSymbolConfig_Kjf, B.TexSymbolConfig_hf8, B.TexSymbolConfig_Rb2, B.TexSymbolConfig_xTp, B.TexSymbolConfig_v6K, B.TexSymbolConfig_nqA, B.TexSymbolConfig_gK2, B.TexSymbolConfig_jJE, B.TexSymbolConfig_KUP, B.TexSymbolConfig_wGY, B.TexSymbolConfig_4bt, B.TexSymbolConfig_DHc, B.TexSymbolConfig_agq, B.TexSymbolConfig_MTR, B.TexSymbolConfig_1FX, B.TexSymbolConfig_cZq, B.TexSymbolConfig_SJe, B.TexSymbolConfig_fBr, B.TexSymbolConfig_khi, B.TexSymbolConfig_Tk5, B.TexSymbolConfig_SYM, B.TexSymbolConfig_uNR, B.TexSymbolConfig_mSW, B.TexSymbolConfig_fGk, B.TexSymbolConfig_tU4, B.TexSymbolConfig_29i, B.TexSymbolConfig_jmd, B.TexSymbolConfig_ZTu, B.TexSymbolConfig_Grr, B.TexSymbolConfig_tuy, B.TexSymbolConfig_wau, B.TexSymbolConfig_sWu, B.TexSymbolConfig_Rie, B.TexSymbolConfig_a90, B.TexSymbolConfig_Q5K, B.TexSymbolConfig_0dD, B.TexSymbolConfig_nOB, B.TexSymbolConfig_Aej, B.TexSymbolConfig_ccx, B.TexSymbolConfig_Z3V, B.TexSymbolConfig_pur, B.TexSymbolConfig_OON, B.TexSymbolConfig_PZ2, B.TexSymbolConfig_LSU, B.TexSymbolConfig_vPH, B.TexSymbolConfig_u6o, B.TexSymbolConfig_Dwz, B.TexSymbolConfig_RSC, B.TexSymbolConfig_t9t, B.TexSymbolConfig_2CX, B.TexSymbolConfig_tXA, B.TexSymbolConfig_wbP, B.TexSymbolConfig_rOw, B.TexSymbolConfig_K5n, B.TexSymbolConfig_YsD, B.TexSymbolConfig_rp7, B.TexSymbolConfig_NWo, B.TexSymbolConfig_UO3, B.TexSymbolConfig_kkE, B.TexSymbolConfig_R8D, B.TexSymbolConfig_gRH, B.TexSymbolConfig_7a5, B.TexSymbolConfig_1Gr, B.TexSymbolConfig_g3R, B.TexSymbolConfig_fLI, B.TexSymbolConfig_61L, B.TexSymbolConfig_wxW, B.TexSymbolConfig_CDn, B.TexSymbolConfig_DqM, B.TexSymbolConfig_vlT, B.TexSymbolConfig_zni, B.TexSymbolConfig_nih, B.TexSymbolConfig_nO1, B.TexSymbolConfig_GiU, B.TexSymbolConfig_kwB, B.TexSymbolConfig_zCo, B.TexSymbolConfig_o9s, B.TexSymbolConfig_OGi, B.TexSymbolConfig_T2M, B.TexSymbolConfig_qnI, B.TexSymbolConfig_3Jy, B.TexSymbolConfig_D6s, B.TexSymbolConfig_7fW, B.TexSymbolConfig_ZV8, B.TexSymbolConfig_jWD, B.TexSymbolConfig_N8P, B.TexSymbolConfig_4vg, B.TexSymbolConfig_jZr, B.TexSymbolConfig_Luc, B.TexSymbolConfig_vNr, B.TexSymbolConfig_J4P, B.TexSymbolConfig_noL, B.TexSymbolConfig_pXh, B.TexSymbolConfig_ahV, B.TexSymbolConfig_4Td, B.TexSymbolConfig_zvd, B.TexSymbolConfig_oLh, B.TexSymbolConfig_w91, B.TexSymbolConfig_OLE, B.TexSymbolConfig_KUp, B.TexSymbolConfig_isu, B.TexSymbolConfig_Pr7, B.TexSymbolConfig_f87, B.TexSymbolConfig_11c, B.TexSymbolConfig_c4l, B.TexSymbolConfig_rLT, B.TexSymbolConfig_KNN, B.TexSymbolConfig_7Os, B.TexSymbolConfig_ZX1, B.TexSymbolConfig_RWQ, B.TexSymbolConfig_bnT, B.TexSymbolConfig_Ru5, B.TexSymbolConfig_JW9, B.TexSymbolConfig_1FU, B.TexSymbolConfig_oYS, B.TexSymbolConfig_idj, B.TexSymbolConfig_Vpa, B.TexSymbolConfig_i9Y, B.TexSymbolConfig_gV0, B.TexSymbolConfig_EdC, B.TexSymbolConfig_ZkC, B.TexSymbolConfig_IGr, B.TexSymbolConfig_iOE, B.TexSymbolConfig_W15, B.TexSymbolConfig_OLK, B.TexSymbolConfig_kFC, B.TexSymbolConfig_fj0, B.TexSymbolConfig_E4J, B.TexSymbolConfig_2VC, B.TexSymbolConfig_qCc, B.TexSymbolConfig_E8g, B.TexSymbolConfig_dVO, B.TexSymbolConfig_jIX, B.TexSymbolConfig_PEQ, B.TexSymbolConfig_Blp, B.TexSymbolConfig_ThN, B.TexSymbolConfig_cIV, B.TexSymbolConfig_KsT, B.TexSymbolConfig_51q, B.TexSymbolConfig_wUO, B.TexSymbolConfig_N08, B.TexSymbolConfig_eUw, B.TexSymbolConfig_2QM, B.TexSymbolConfig_zzW, B.TexSymbolConfig_ENJ, B.TexSymbolConfig_UfM, B.TexSymbolConfig_Rh9, B.TexSymbolConfig_WQc, B.TexSymbolConfig_AFn, B.TexSymbolConfig_2lE, B.TexSymbolConfig_aVu, B.TexSymbolConfig_Ufz, B.TexSymbolConfig_dey, B.TexSymbolConfig_ykG, B.TexSymbolConfig_oEp, B.TexSymbolConfig_yKn, B.TexSymbolConfig_inG, B.TexSymbolConfig_uza, B.TexSymbolConfig_CAN, B.TexSymbolConfig_33C, B.TexSymbolConfig_HOi, B.TexSymbolConfig_aze, B.TexSymbolConfig_qIS, B.TexSymbolConfig_kxf, B.TexSymbolConfig_ENE, B.TexSymbolConfig_kXi, B.TexSymbolConfig_KnO, B.TexSymbolConfig_Vxp, B.TexSymbolConfig_X91, B.TexSymbolConfig_sOO, B.TexSymbolConfig_F1w, B.TexSymbolConfig_yeL, B.TexSymbolConfig_mHP, B.TexSymbolConfig_wAU, B.TexSymbolConfig_rJe, B.TexSymbolConfig_SeH, B.TexSymbolConfig_EDb, B.TexSymbolConfig_jAY, B.TexSymbolConfig_6SW, B.TexSymbolConfig_rNB, B.TexSymbolConfig_0hz, B.TexSymbolConfig_5Go, B.TexSymbolConfig_7pe, B.TexSymbolConfig_CGr, B.TexSymbolConfig_LDZ, B.TexSymbolConfig_evQ, B.TexSymbolConfig_9cG, B.TexSymbolConfig_RT9, B.TexSymbolConfig_pWI, B.TexSymbolConfig_sL0, B.TexSymbolConfig_DKB, B.TexSymbolConfig_N2Y, B.TexSymbolConfig_MFT, B.TexSymbolConfig_ktx, B.TexSymbolConfig_n44, B.TexSymbolConfig_gnp, B.TexSymbolConfig_l27, B.TexSymbolConfig_lDd, B.TexSymbolConfig_UCq, B.TexSymbolConfig_Ejj, B.TexSymbolConfig_Q8n, B.TexSymbolConfig_WRN, B.TexSymbolConfig_HVQ, B.TexSymbolConfig_gwv, B.TexSymbolConfig_6h7, B.TexSymbolConfig_9MG, B.TexSymbolConfig_5X4, B.TexSymbolConfig_RWP, B.TexSymbolConfig_nM2, B.TexSymbolConfig_8OW, B.TexSymbolConfig_kH8, B.TexSymbolConfig_DHP, B.TexSymbolConfig_qS7, B.TexSymbolConfig_FmP, B.TexSymbolConfig_b9H, B.TexSymbolConfig_a2f, B.TexSymbolConfig_t1F, B.TexSymbolConfig_N9p, B.TexSymbolConfig_5cN, B.TexSymbolConfig_V1L, B.TexSymbolConfig_1ly, B.TexSymbolConfig_9lw, B.TexSymbolConfig_H2S, B.TexSymbolConfig_CW3, B.TexSymbolConfig_cVm, B.TexSymbolConfig_Agz, B.TexSymbolConfig_owZ, B.TexSymbolConfig_SpI, B.TexSymbolConfig_cOU, B.TexSymbolConfig_GTn, B.TexSymbolConfig_Z5Q, B.TexSymbolConfig_FNN, B.TexSymbolConfig_mVM, B.TexSymbolConfig_Wuk, B.TexSymbolConfig_XQC, B.TexSymbolConfig_9N0, B.TexSymbolConfig_PgS, B.TexSymbolConfig_ihK, B.TexSymbolConfig_rbG, B.TexSymbolConfig_su8, B.TexSymbolConfig_83F, B.TexSymbolConfig_bNJ, B.TexSymbolConfig_VWa, B.TexSymbolConfig_4VT, B.TexSymbolConfig_qsx, B.TexSymbolConfig_4ca, B.TexSymbolConfig_1Zh, B.TexSymbolConfig_Eyc, B.TexSymbolConfig_ogt, B.TexSymbolConfig_du3, B.TexSymbolConfig_s1V, B.TexSymbolConfig_jji, B.TexSymbolConfig_I9t, B.TexSymbolConfig_qgc, B.TexSymbolConfig_mTD, B.TexSymbolConfig_XO5, B.TexSymbolConfig_g0L, B.TexSymbolConfig_qJ1, B.TexSymbolConfig_K6f, B.TexSymbolConfig_bMJ, B.TexSymbolConfig_yRA, B.TexSymbolConfig_icu, B.TexSymbolConfig_APZ, B.TexSymbolConfig_yzR, B.TexSymbolConfig_mRX, B.TexSymbolConfig_iP7, B.TexSymbolConfig_hmL, B.TexSymbolConfig_l6Y, B.TexSymbolConfig_7oH, B.TexSymbolConfig_8HV, B.TexSymbolConfig_aNY, B.TexSymbolConfig_4Kk, B.TexSymbolConfig_Ple, B.TexSymbolConfig_wCA, B.TexSymbolConfig_dDd, B.TexSymbolConfig_cne, B.TexSymbolConfig_7Hd, B.TexSymbolConfig_1pE, B.TexSymbolConfig_97d, B.TexSymbolConfig_S8G, B.TexSymbolConfig_PWg, B.TexSymbolConfig_B4y, B.TexSymbolConfig_KWO, B.TexSymbolConfig_H9O, B.TexSymbolConfig_86o, B.TexSymbolConfig_kf5, B.TexSymbolConfig_6Ao, B.TexSymbolConfig_IWq, B.TexSymbolConfig_TWI, B.TexSymbolConfig_G2f, B.TexSymbolConfig_LvD, B.TexSymbolConfig_bvq, B.TexSymbolConfig_yCb, B.TexSymbolConfig_Bi9, B.TexSymbolConfig_ase, B.TexSymbolConfig_wxy, B.TexSymbolConfig_RVm, B.TexSymbolConfig_uxV, B.TexSymbolConfig_p4M, B.TexSymbolConfig_RWj, B.TexSymbolConfig_VdW, B.TexSymbolConfig_fwE, B.TexSymbolConfig_lE0, B.TexSymbolConfig_ie6, B.TexSymbolConfig_kwy, B.TexSymbolConfig_AUm, B.TexSymbolConfig_QWQ, B.TexSymbolConfig_dI7, B.TexSymbolConfig_AIj, B.TexSymbolConfig_lbA, B.TexSymbolConfig_1Yd, B.TexSymbolConfig_ztQ, B.TexSymbolConfig_dAE, B.TexSymbolConfig_bV5, B.TexSymbolConfig_m92, B.TexSymbolConfig_W3f, B.TexSymbolConfig_Yj0, B.TexSymbolConfig_bo9, B.TexSymbolConfig_Vkt, B.TexSymbolConfig_CTy, B.TexSymbolConfig_MHN, B.TexSymbolConfig_ZnX, B.TexSymbolConfig_sxS, B.TexSymbolConfig_WCC, B.TexSymbolConfig_wcx, B.TexSymbolConfig_uyv, B.TexSymbolConfig_I5t, B.TexSymbolConfig_QjH, B.TexSymbolConfig_uxw, B.TexSymbolConfig_njr, B.TexSymbolConfig_q6t, B.TexSymbolConfig_1Dq, B.TexSymbolConfig_jCK, B.TexSymbolConfig_o58, B.TexSymbolConfig_vgd, B.TexSymbolConfig_0Ma, B.TexSymbolConfig_ssk, B.TexSymbolConfig_Yas, B.TexSymbolConfig_rXF, B.TexSymbolConfig_yGr, B.TexSymbolConfig_a86, B.TexSymbolConfig_zEn, B.TexSymbolConfig_lqa, B.TexSymbolConfig_OJs, B.TexSymbolConfig_myC, B.TexSymbolConfig_6w8, B.TexSymbolConfig_hRK, B.TexSymbolConfig_wZD, B.TexSymbolConfig_D0C, B.TexSymbolConfig_0YU, B.TexSymbolConfig_1e8, B.TexSymbolConfig_wat, B.TexSymbolConfig_Q2z, B.TexSymbolConfig_Ewq, B.TexSymbolConfig_eup, B.TexSymbolConfig_G3M, B.TexSymbolConfig_ovp, B.TexSymbolConfig_G90, B.TexSymbolConfig_Coz, B.TexSymbolConfig_IzI, B.TexSymbolConfig_OFB, B.TexSymbolConfig_A_false_null, B.TexSymbolConfig_B_false_null, B.TexSymbolConfig_C_false_null, B.TexSymbolConfig_D_false_null, B.TexSymbolConfig_E_false_null, B.TexSymbolConfig_F_false_null, B.TexSymbolConfig_G_false_null, B.TexSymbolConfig_H_false_null, B.TexSymbolConfig_I_false_null, B.TexSymbolConfig_J_false_null, B.TexSymbolConfig_K_false_null, B.TexSymbolConfig_L_false_null, B.TexSymbolConfig_M_false_null, B.TexSymbolConfig_N_false_null, B.TexSymbolConfig_O_false_null, B.TexSymbolConfig_P_false_null, B.TexSymbolConfig_Q_false_null, B.TexSymbolConfig_R_false_null, B.TexSymbolConfig_S_false_null, B.TexSymbolConfig_T_false_null, B.TexSymbolConfig_U_false_null, B.TexSymbolConfig_V_false_null, B.TexSymbolConfig_W_false_null, B.TexSymbolConfig_X_false_null, B.TexSymbolConfig_Y_false_null, B.TexSymbolConfig_Z_false_null, B.TexSymbolConfig_a_false_null, B.TexSymbolConfig_b_false_null, B.TexSymbolConfig_c_false_null, B.TexSymbolConfig_d_false_null, B.TexSymbolConfig_e_false_null, B.TexSymbolConfig_f_false_null, B.TexSymbolConfig_g_false_null, B.TexSymbolConfig_h_false_null, B.TexSymbolConfig_i_false_null, B.TexSymbolConfig_j_false_null, B.TexSymbolConfig_k_false_null, B.TexSymbolConfig_l_false_null, B.TexSymbolConfig_m_false_null, B.TexSymbolConfig_n_false_null, B.TexSymbolConfig_o_false_null, B.TexSymbolConfig_p_false_null, B.TexSymbolConfig_q_false_null, B.TexSymbolConfig_r_false_null, B.TexSymbolConfig_s_false_null, B.TexSymbolConfig_t_false_null, B.TexSymbolConfig_u_false_null, B.TexSymbolConfig_v_false_null, B.TexSymbolConfig_w_false_null, B.TexSymbolConfig_x_false_null, B.TexSymbolConfig_y_false_null, B.TexSymbolConfig_z_false_null, B.TexSymbolConfig_XRQ, B.TexSymbolConfig_SJh, B.TexSymbolConfig_ukc, B.TexSymbolConfig_D32, B.TexSymbolConfig_BvH, B.TexSymbolConfig_0Bc, B.TexSymbolConfig_AKG, B.TexSymbolConfig_BIG, B.TexSymbolConfig_npA, B.TexSymbolConfig_ixl, B.TexSymbolConfig_kon, B.TexSymbolConfig_LJ1, B.TexSymbolConfig_un4, B.TexSymbolConfig_I3d, B.TexSymbolConfig_DH8, B.TexSymbolConfig_IaC, B.TexSymbolConfig_DOk, B.TexSymbolConfig_3zX, B.TexSymbolConfig_8fY, B.TexSymbolConfig_uu3, B.TexSymbolConfig_1RG, B.TexSymbolConfig_8Jk, B.TexSymbolConfig_jF2, B.TexSymbolConfig_8jC, B.TexSymbolConfig_rGE, B.TexSymbolConfig_tDo, B.TexSymbolConfig_tLg, B.TexSymbolConfig_Zb4, B.TexSymbolConfig_DIi, B.TexSymbolConfig_S14, B.TexSymbolConfig_zVj, B.TexSymbolConfig_ldr, B.TexSymbolConfig_43i, B.TexSymbolConfig_p15, B.TexSymbolConfig_HGM, B.TexSymbolConfig_LrS, B.TexSymbolConfig_5Gq, B.TexSymbolConfig_ZSe, B.TexSymbolConfig_LoS, B.TexSymbolConfig_6WB, B.TexSymbolConfig_N6G, B.TexSymbolConfig_Dza, B.TexSymbolConfig_amc, B.TexSymbolConfig_rV0, B.TexSymbolConfig_fG6, B.TexSymbolConfig_rQF, B.TexSymbolConfig_v2Z, B.TexSymbolConfig_MDq, B.TexSymbolConfig_qT4, B.TexSymbolConfig_Xt2, B.TexSymbolConfig_In5, B.TexSymbolConfig_Vid, B.TexSymbolConfig_17F, B.TexSymbolConfig_3TT, B.TexSymbolConfig_SxH, B.TexSymbolConfig_utH, B.TexSymbolConfig_H8e, B.TexSymbolConfig_E6q, B.TexSymbolConfig_mHs, B.TexSymbolConfig_xsj, B.TexSymbolConfig_fQm, B.TexSymbolConfig_llg, B.TexSymbolConfig_DLM, B.TexSymbolConfig_VfA, B.TexSymbolConfig_rbS, B.TexSymbolConfig_LrN, B.TexSymbolConfig_SSu, B.TexSymbolConfig_eVj, B.TexSymbolConfig_zHn, B.TexSymbolConfig_5pU, B.TexSymbolConfig_kRu, B.TexSymbolConfig_25b, B.TexSymbolConfig_xaj, B.TexSymbolConfig_7BP, B.TexSymbolConfig_CL4, B.TexSymbolConfig_bdG, B.TexSymbolConfig_r1p, B.TexSymbolConfig_mee, B.TexSymbolConfig_PqG, B.TexSymbolConfig_yhR, B.TexSymbolConfig_O07, B.TexSymbolConfig_BKa, B.TexSymbolConfig_UuM, B.TexSymbolConfig_mqF, B.TexSymbolConfig_1xU, B.TexSymbolConfig_Uhz, B.TexSymbolConfig_fWu, B.TexSymbolConfig_7ix, B.TexSymbolConfig_xsO, B.TexSymbolConfig_5Xn, B.TexSymbolConfig_pru, B.TexSymbolConfig_Mdw, B.TexSymbolConfig_BvD, B.TexSymbolConfig_giH, B.TexSymbolConfig_2rv, B.TexSymbolConfig_S1J, B.TexSymbolConfig_BuK, B.TexSymbolConfig_hXI, B.TexSymbolConfig_6XT, B.TexSymbolConfig_ahO, B.TexSymbolConfig_4ge, B.TexSymbolConfig_cna, B.TexSymbolConfig_hgs, B.TexSymbolConfig_U0u, B.TexSymbolConfig_PYo, B.TexSymbolConfig_usb, B.TexSymbolConfig_P8l, B.TexSymbolConfig_Gjv, B.TexSymbolConfig_3YP, B.TexSymbolConfig_OdH, B.TexSymbolConfig_uOB, B.TexSymbolConfig_kT1, B.TexSymbolConfig_Cvq, B.TexSymbolConfig_ykE, B.TexSymbolConfig_Dhd, B.TexSymbolConfig_TQG, B.TexSymbolConfig_eeV, B.TexSymbolConfig_w23, B.TexSymbolConfig_JDM, B.TexSymbolConfig_SDu, B.TexSymbolConfig_4jj, B.TexSymbolConfig_Uuq, B.TexSymbolConfig_azh, B.TexSymbolConfig_Ger, B.TexSymbolConfig_FCw, B.TexSymbolConfig_dAd, B.TexSymbolConfig_6ys, B.TexSymbolConfig_VY6, B.TexSymbolConfig_n8Q, B.TexSymbolConfig_Z5T, B.TexSymbolConfig_tcX, B.TexSymbolConfig_9Pd, B.TexSymbolConfig_7qW, B.TexSymbolConfig_4ck, B.TexSymbolConfig_48P, B.TexSymbolConfig_i2R, B.TexSymbolConfig_9Lz, B.TexSymbolConfig_8Tu, B.TexSymbolConfig_gmn, B.TexSymbolConfig_TCP, B.TexSymbolConfig_Bak, B.TexSymbolConfig_qfz, B.TexSymbolConfig_4kI, B.TexSymbolConfig_gX3, B.TexSymbolConfig_dVk, B.TexSymbolConfig_6Qc, B.TexSymbolConfig_cpd, B.TexSymbolConfig_2NA, B.TexSymbolConfig_oUS, B.TexSymbolConfig_trO, B.TexSymbolConfig_mP9, B.TexSymbolConfig_njn, B.TexSymbolConfig_fHV, B.TexSymbolConfig_4Hj, B.TexSymbolConfig_D10, B.TexSymbolConfig_mQ7, B.TexSymbolConfig_RBr, B.TexSymbolConfig_xMh, B.TexSymbolConfig_fnH, B.TexSymbolConfig_t7z, B.TexSymbolConfig_9zk, B.TexSymbolConfig_XPe, B.TexSymbolConfig_hLH, B.TexSymbolConfig_XzX, B.TexSymbolConfig_okO, B.TexSymbolConfig_ibN, B.TexSymbolConfig_8kL, B.TexSymbolConfig_vkz, B.TexSymbolConfig_yYW, B.TexSymbolConfig_MsQ, B.TexSymbolConfig_RVG, B.TexSymbolConfig_9DA, B.TexSymbolConfig_jq6, B.TexSymbolConfig_qP7, B.TexSymbolConfig_nCA, B.TexSymbolConfig_5vn, B.TexSymbolConfig_hcW, B.TexSymbolConfig_MGX, B.TexSymbolConfig_bIz, B.TexSymbolConfig_cPR, B.TexSymbolConfig_tbX, B.TexSymbolConfig_t9l, B.TexSymbolConfig_L4M, B.TexSymbolConfig_n9t, B.TexSymbolConfig_FiX, B.TexSymbolConfig_CAS, B.TexSymbolConfig_dsF, B.TexSymbolConfig_SKe, B.TexSymbolConfig_7DQ, B.TexSymbolConfig_QtG, B.TexSymbolConfig_MHm, B.TexSymbolConfig_f6t, B.TexSymbolConfig_J8t, B.TexSymbolConfig_RRK, B.TexSymbolConfig_Vvs, B.TexSymbolConfig_dhT, B.TexSymbolConfig_VQL, B.TexSymbolConfig_SC5, B.TexSymbolConfig_DTs, B.TexSymbolConfig_UZb, B.TexSymbolConfig_2Sd, B.TexSymbolConfig_OH5, B.TexSymbolConfig_6ql, B.TexSymbolConfig_GPg, B.TexSymbolConfig_R1J, B.TexSymbolConfig_dqr, B.TexSymbolConfig_pyS, B.TexSymbolConfig_cOy, B.TexSymbolConfig_Et6, B.TexSymbolConfig_kEr, B.TexSymbolConfig_5Pu, B.TexSymbolConfig_kmp, B.TexSymbolConfig_2pM, B.TexSymbolConfig_htn, B.TexSymbolConfig_KJU, B.TexSymbolConfig_N4X, B.TexSymbolConfig_8zq, B.TexSymbolConfig_xhi, B.TexSymbolConfig_WeI, B.TexSymbolConfig_oYX, B.TexSymbolConfig_oBD, B.TexSymbolConfig_xaK, B.TexSymbolConfig_inw, B.TexSymbolConfig_tFT, B.TexSymbolConfig_cWj, B.TexSymbolConfig_Vh7, B.TexSymbolConfig_D2d, B.TexSymbolConfig_1D5, B.TexSymbolConfig_qFl, B.TexSymbolConfig_oOD, B.TexSymbolConfig_nLg, B.TexSymbolConfig_rOQ, B.TexSymbolConfig_9Uz, B.TexSymbolConfig_3oW, B.TexSymbolConfig_Rqo, B.TexSymbolConfig_Mwp, B.TexSymbolConfig_yRb, B.TexSymbolConfig_LBz, B.TexSymbolConfig_eOR, B.TexSymbolConfig_Inm, B.TexSymbolConfig_YyP, B.TexSymbolConfig_IFq, B.TexSymbolConfig_O2L, B.TexSymbolConfig_sS6, B.TexSymbolConfig_DKW, B.TexSymbolConfig_WZi, B.TexSymbolConfig_NW5, B.TexSymbolConfig_5Qk, B.TexSymbolConfig_mQp, B.TexSymbolConfig_Lp5, B.TexSymbolConfig_6cM, B.TexSymbolConfig_bVG, B.TexSymbolConfig_eBF, B.TexSymbolConfig_6Ad, B.TexSymbolConfig_xU8, B.TexSymbolConfig_h7l, B.TexSymbolConfig_1mL, B.TexSymbolConfig_STb, B.TexSymbolConfig_3AX, B.TexSymbolConfig_mER, B.TexSymbolConfig_eOC, B.TexSymbolConfig_99l, B.TexSymbolConfig_BKZ, B.TexSymbolConfig_bw4, B.TexSymbolConfig_E5u, B.TexSymbolConfig_etr, B.TexSymbolConfig_LAT, B.TexSymbolConfig_fIw, B.TexSymbolConfig_jjp, B.TexSymbolConfig_CR3, B.TexSymbolConfig_qNo, B.TexSymbolConfig_EFm, B.TexSymbolConfig_M80, B.TexSymbolConfig_7z7, B.TexSymbolConfig_9pK, B.TexSymbolConfig_HC6, B.TexSymbolConfig_ZVV, B.TexSymbolConfig_9uT, B.TexSymbolConfig_o0I, B.TexSymbolConfig_MwN, B.TexSymbolConfig_EPs, B.TexSymbolConfig_Set, B.TexSymbolConfig_3Ba, B.TexSymbolConfig_WHI, B.TexSymbolConfig_YDi, B.TexSymbolConfig_cRl, B.TexSymbolConfig_BiP, B.TexSymbolConfig_pd6, B.TexSymbolConfig_ZxO, B.TexSymbolConfig_XWx, B.TexSymbolConfig_inG0, B.TexSymbolConfig_BDK, B.TexSymbolConfig_Kri, B.TexSymbolConfig_wII, B.TexSymbolConfig_yF5, B.TexSymbolConfig_lN4, B.TexSymbolConfig_pPh, B.TexSymbolConfig_5Pi, B.TexSymbolConfig_vuM, B.TexSymbolConfig_LkM, B.TexSymbolConfig_KEQ, B.TexSymbolConfig_dg8, B.TexSymbolConfig_pWx, B.TexSymbolConfig_BZa, B.TexSymbolConfig_yUu, B.TexSymbolConfig_DT6, B.TexSymbolConfig_F1O, B.TexSymbolConfig_Klo, B.TexSymbolConfig_wQn, B.TexSymbolConfig_YPx, B.TexSymbolConfig_uQw, B.TexSymbolConfig_SlJ, B.TexSymbolConfig_rlX, B.TexSymbolConfig_tRJ, B.TexSymbolConfig_Oqf, B.TexSymbolConfig_6V5, B.TexSymbolConfig_f0p, B.TexSymbolConfig_2hA, B.TexSymbolConfig_lr4, B.TexSymbolConfig_bMa, B.TexSymbolConfig_BWw, B.TexSymbolConfig_qFh, B.TexSymbolConfig_phT, B.TexSymbolConfig_pyb, B.TexSymbolConfig_r5C, B.TexSymbolConfig_iSQ, B.TexSymbolConfig_irg, B.TexSymbolConfig_vvl, B.TexSymbolConfig_GMf, B.TexSymbolConfig_Yq4, B.TexSymbolConfig_B93, B.TexSymbolConfig_JTC, B.TexSymbolConfig_bLN, B.TexSymbolConfig_F3z, B.TexSymbolConfig_FB9, B.TexSymbolConfig_v3q, B.TexSymbolConfig_3zs, B.TexSymbolConfig_JSR, B.TexSymbolConfig_pJU, B.TexSymbolConfig_unp, B.TexSymbolConfig_3Jq, B.TexSymbolConfig_8jX, B.TexSymbolConfig_oil, B.TexSymbolConfig_cEe, B.TexSymbolConfig_Yuu, B.TexSymbolConfig_zIf, B.TexSymbolConfig_28O, B.TexSymbolConfig_s3I, B.TexSymbolConfig_MsW, B.TexSymbolConfig_EUx, B.TexSymbolConfig_kfR, B.TexSymbolConfig_JbZ, B.TexSymbolConfig_QY8, B.TexSymbolConfig_noM, B.TexSymbolConfig_AG9, B.TexSymbolConfig_SZD, B.TexSymbolConfig_sWv, B.TexSymbolConfig_OmY, B.TexSymbolConfig_hWH, B.TexSymbolConfig_daS, B.TexSymbolConfig_JGA, B.TexSymbolConfig_xi1, B.TexSymbolConfig_VEM, B.TexSymbolConfig_ZdH, B.TexSymbolConfig_Cva, B.TexSymbolConfig_fF7, B.TexSymbolConfig_yM2, B.TexSymbolConfig_16r, B.TexSymbolConfig_AgP, B.TexSymbolConfig_v6d, B.TexSymbolConfig_bOp, B.TexSymbolConfig_sDa, B.TexSymbolConfig_XwA, B.TexSymbolConfig_X4k, B.TexSymbolConfig_vlK, B.TexSymbolConfig_UyA, B.TexSymbolConfig_hVI, B.TexSymbolConfig_L3s, B.TexSymbolConfig_Up0, B.TexSymbolConfig_fLF, B.TexSymbolConfig_Oa3, B.TexSymbolConfig_MZt, B.TexSymbolConfig_eXT, B.TexSymbolConfig_rPj, B.TexSymbolConfig_mmc, B.TexSymbolConfig_fvM, B.TexSymbolConfig_LyV, B.TexSymbolConfig_egV, B.TexSymbolConfig_ZVG, B.TexSymbolConfig_bo0, B.TexSymbolConfig_DGy, B.TexSymbolConfig_hRX, B.TexSymbolConfig_j5E, B.TexSymbolConfig_MJg, B.TexSymbolConfig_6Lu, B.TexSymbolConfig_XFJ, B.TexSymbolConfig_Adg, B.TexSymbolConfig_pfz, B.TexSymbolConfig_sZ8, B.TexSymbolConfig_LYn, B.TexSymbolConfig_uOn, B.TexSymbolConfig_WET, B.TexSymbolConfig_vzo, B.TexSymbolConfig_Aay, B.TexSymbolConfig_CuN, B.TexSymbolConfig_tLS, B.TexSymbolConfig_WJG, B.TexSymbolConfig_SDj, B.TexSymbolConfig_3D4, B.TexSymbolConfig_meu, B.TexSymbolConfig_VHn, B.TexSymbolConfig_pNX, B.TexSymbolConfig_Wn8, B.TexSymbolConfig_b8h, B.TexSymbolConfig_l7O, B.TexSymbolConfig_NlT, B.TexSymbolConfig_c4R, B.TexSymbolConfig_J7p, B.TexSymbolConfig_xLv, B.TexSymbolConfig_QCJ, B.TexSymbolConfig_KaP, B.TexSymbolConfig_iwZ, B.TexSymbolConfig_4Zp, B.TexSymbolConfig_NqZ, B.TexSymbolConfig_nC9, B.TexSymbolConfig_yAg, B.TexSymbolConfig_tix, B.TexSymbolConfig_u4w, B.TexSymbolConfig_GBv, B.TexSymbolConfig_WLk, B.TexSymbolConfig_ynQ, B.TexSymbolConfig_w8J, B.TexSymbolConfig_YMY, B.TexSymbolConfig_Xrg, B.TexSymbolConfig_9Ei, B.TexSymbolConfig_eSJ, B.TexSymbolConfig_DVX, B.TexSymbolConfig_lJc, B.TexSymbolConfig_v2W, B.TexSymbolConfig_Iun, B.TexSymbolConfig_g9W, B.TexSymbolConfig_nfb, B.TexSymbolConfig_WB0, B.TexSymbolConfig_qeA, B.TexSymbolConfig_fG0, B.TexSymbolConfig_wwT, B.TexSymbolConfig_18C, B.TexSymbolConfig_EFB, B.TexSymbolConfig_Myn, B.TexSymbolConfig_1XY, B.TexSymbolConfig_70y, B.TexSymbolConfig_8cz, B.TexSymbolConfig_9Ag, B.TexSymbolConfig_mQx, B.TexSymbolConfig_7kw, B.TexSymbolConfig_PCr, B.TexSymbolConfig_kod, B.TexSymbolConfig_iAa, B.TexSymbolConfig_pDO, B.TexSymbolConfig_Yon, B.TexSymbolConfig_b8M, B.TexSymbolConfig_fq5, B.TexSymbolConfig_VHH, B.TexSymbolConfig_LRz, B.TexSymbolConfig_SHa, B.TexSymbolConfig_6cJ, B.TexSymbolConfig_HFP, B.TexSymbolConfig_Lfp, B.TexSymbolConfig_6VK, B.TexSymbolConfig_5RE, B.TexSymbolConfig_RDo, B.TexSymbolConfig_JoQ, B.TexSymbolConfig_f8o, B.TexSymbolConfig_TYO, B.TexSymbolConfig_ouX, B.TexSymbolConfig_8pc, B.TexSymbolConfig_VBv, B.TexSymbolConfig_NWc, B.TexSymbolConfig_A1i, B.TexSymbolConfig_EM4, B.TexSymbolConfig_ISp, B.TexSymbolConfig_mjk, B.TexSymbolConfig_uEx, B.TexSymbolConfig_te9, B.TexSymbolConfig_Pon, B.TexSymbolConfig_VRk, B.TexSymbolConfig_op1, B.TexSymbolConfig_UUf, B.TexSymbolConfig_iqn, B.TexSymbolConfig_Uhg, B.TexSymbolConfig_p73, B.TexSymbolConfig_8gs, B.TexSymbolConfig_O2x, B.TexSymbolConfig_185, B.TexSymbolConfig_MQ4, B.TexSymbolConfig_KnC, B.TexSymbolConfig_Edq, B.TexSymbolConfig_DJa, B.TexSymbolConfig_ffx, B.TexSymbolConfig_3ir, B.TexSymbolConfig_3s9, B.TexSymbolConfig_BDM, B.TexSymbolConfig_KRD, B.TexSymbolConfig_Hl4, B.TexSymbolConfig_su5, B.TexSymbolConfig_SJb, B.TexSymbolConfig_u9Q, B.TexSymbolConfig_zWB, B.TexSymbolConfig_Bav, B.TexSymbolConfig_iYT, B.TexSymbolConfig_cAz, B.TexSymbolConfig_Gbi, B.TexSymbolConfig_UNd, B.TexSymbolConfig_V4z, B.TexSymbolConfig_Ztu, B.TexSymbolConfig_PfV, B.TexSymbolConfig_hY2, B.TexSymbolConfig_pRY, B.TexSymbolConfig_8AK, B.TexSymbolConfig_KYo, B.TexSymbolConfig_5FU, B.TexSymbolConfig_eh3, B.TexSymbolConfig_RVb, B.TexSymbolConfig_61m, B.TexSymbolConfig_KUP, B.TexSymbolConfig_wGY, B.TexSymbolConfig_4bt, B.TexSymbolConfig_DHc, B.TexSymbolConfig_agq, B.TexSymbolConfig_MTR, B.TexSymbolConfig_1FX, B.TexSymbolConfig_cZq, B.TexSymbolConfig_SJe, B.TexSymbolConfig_fBr, B.TexSymbolConfig_khi, B.TexSymbolConfig_Tk5, B.TexSymbolConfig_SYM, B.TexSymbolConfig_uNR, B.TexSymbolConfig_mSW, B.TexSymbolConfig_fGk, B.TexSymbolConfig_tU4, B.TexSymbolConfig_29i, B.TexSymbolConfig_jmd, B.TexSymbolConfig_ZTu, B.TexSymbolConfig_Grr, B.TexSymbolConfig_29i, B.TexSymbolConfig_rff, B.TexSymbolConfig_J3m, B.TexSymbolConfig_tuy, B.TexSymbolConfig_wau, B.TexSymbolConfig_sWu, B.TexSymbolConfig_Rie, B.TexSymbolConfig_a90, B.TexSymbolConfig_Q5K, B.TexSymbolConfig_0dD, B.TexSymbolConfig_nOB, B.TexSymbolConfig_Aej, B.TexSymbolConfig_ccx, B.TexSymbolConfig_Z3V, B.TexSymbolConfig_pur, B.TexSymbolConfig_OON, B.TexSymbolConfig_PZ2, B.TexSymbolConfig_LSU, B.TexSymbolConfig_vPH, B.TexSymbolConfig_u6o, B.TexSymbolConfig_Dwz, B.TexSymbolConfig_RSC, B.TexSymbolConfig_t9t, B.TexSymbolConfig_2CX, B.TexSymbolConfig_tXA, B.TexSymbolConfig_wbP, B.TexSymbolConfig_rOw, B.TexSymbolConfig_LvD, B.TexSymbolConfig_K5n, B.TexSymbolConfig_YsD, B.TexSymbolConfig_rp7, B.TexSymbolConfig_NWo, B.TexSymbolConfig_UO3, B.TexSymbolConfig_kkE, B.TexSymbolConfig_R8D, B.TexSymbolConfig_gRH, B.TexSymbolConfig_7a5, B.TexSymbolConfig_1Gr, B.TexSymbolConfig_g3R, B.TexSymbolConfig_fLI, B.TexSymbolConfig_61L, B.TexSymbolConfig_wxW, B.TexSymbolConfig_CDn, B.TexSymbolConfig_DqM, B.TexSymbolConfig_vlT, B.TexSymbolConfig_zni, B.TexSymbolConfig_nih, B.TexSymbolConfig_nO1, B.TexSymbolConfig_GiU, B.TexSymbolConfig_kwB, B.TexSymbolConfig_zCo, B.TexSymbolConfig_o9s, B.TexSymbolConfig_OGi, B.TexSymbolConfig_T2M, B.TexSymbolConfig_IyD, B.TexSymbolConfig_1EK, B.TexSymbolConfig_qnI, B.TexSymbolConfig_3Jy, B.TexSymbolConfig_XYu, B.TexSymbolConfig_D6s, B.TexSymbolConfig_7fW, B.TexSymbolConfig_ZV8, B.TexSymbolConfig_jWD, B.TexSymbolConfig_N8P, B.TexSymbolConfig_4vg, B.TexSymbolConfig_jZr, B.TexSymbolConfig_vpw, B.TexSymbolConfig_Luc, B.TexSymbolConfig_vNr, B.TexSymbolConfig_J4P, B.TexSymbolConfig_noL, B.TexSymbolConfig_pXh, B.TexSymbolConfig_pL9, B.TexSymbolConfig_ahV, B.TexSymbolConfig_1it, B.TexSymbolConfig_4Td, B.TexSymbolConfig_Hbj, B.TexSymbolConfig_SeO, B.TexSymbolConfig_zvd, B.TexSymbolConfig_oLh, B.TexSymbolConfig_r7L, B.TexSymbolConfig_w91, B.TexSymbolConfig_OLE, B.TexSymbolConfig_KUp, B.TexSymbolConfig_isu, B.TexSymbolConfig_Pr7, B.TexSymbolConfig_f87, B.TexSymbolConfig_11c, B.TexSymbolConfig_Osn, B.TexSymbolConfig_c4l, B.TexSymbolConfig_rLT, B.TexSymbolConfig_KNN, B.TexSymbolConfig_AIY, B.TexSymbolConfig_7Os, B.TexSymbolConfig_pv3, B.TexSymbolConfig_ZX1, B.TexSymbolConfig_pkm, B.TexSymbolConfig_RWQ, B.TexSymbolConfig_bnT, B.TexSymbolConfig_Ru5, B.TexSymbolConfig_Url, B.TexSymbolConfig_JW9, B.TexSymbolConfig_1FU, B.TexSymbolConfig_oYS, B.TexSymbolConfig_idj, B.TexSymbolConfig_Vpa, B.TexSymbolConfig_i9Y, B.TexSymbolConfig_uT8, B.TexSymbolConfig_gV0, B.TexSymbolConfig_EdC, B.TexSymbolConfig_ZkC, B.TexSymbolConfig_IGr, B.TexSymbolConfig_iOE, B.TexSymbolConfig_W15, B.TexSymbolConfig_OLK, B.TexSymbolConfig_kFC, B.TexSymbolConfig_fj0, B.TexSymbolConfig_E4J, B.TexSymbolConfig_2VC, B.TexSymbolConfig_qCc, B.TexSymbolConfig_UOx, B.TexSymbolConfig_rMp, B.TexSymbolConfig_EJh, B.TexSymbolConfig_Ngf, B.TexSymbolConfig_Blp, B.TexSymbolConfig_ThN, B.TexSymbolConfig_cIV, B.TexSymbolConfig_KsT, B.TexSymbolConfig_51q, B.TexSymbolConfig_wUO, B.TexSymbolConfig_N08, B.TexSymbolConfig_eUw, B.TexSymbolConfig_2QM, B.TexSymbolConfig_zzW, B.TexSymbolConfig_LDZ, B.TexSymbolConfig_ENJ, B.TexSymbolConfig_UfM, B.TexSymbolConfig_Rh9, B.TexSymbolConfig_WQc, B.TexSymbolConfig_AFn, B.TexSymbolConfig_2lE, B.TexSymbolConfig_aVu, B.TexSymbolConfig_Ufz, B.TexSymbolConfig_dey, B.TexSymbolConfig_ykG, B.TexSymbolConfig_oEp, B.TexSymbolConfig_yKn, B.TexSymbolConfig_inG, B.TexSymbolConfig_80p, B.TexSymbolConfig_h1n, B.TexSymbolConfig_uza, B.TexSymbolConfig_CAN, B.TexSymbolConfig_33C, B.TexSymbolConfig_HOi, B.TexSymbolConfig_aze, B.TexSymbolConfig_qIS, B.TexSymbolConfig_kxf, B.TexSymbolConfig_ENE, B.TexSymbolConfig_kXi, B.TexSymbolConfig_KnO, B.TexSymbolConfig_Vxp, B.TexSymbolConfig_X91, B.TexSymbolConfig_sOO, B.TexSymbolConfig_F1w, B.TexSymbolConfig_xjG, B.TexSymbolConfig_hfo, B.TexSymbolConfig_yeL, B.TexSymbolConfig_mHP, B.TexSymbolConfig_wAU, B.TexSymbolConfig_rJe, B.TexSymbolConfig_SeH, B.TexSymbolConfig_EDb, B.TexSymbolConfig_jAY, B.TexSymbolConfig_6SW, B.TexSymbolConfig_ou2, B.TexSymbolConfig_rNB, B.TexSymbolConfig_0hz, B.TexSymbolConfig_17u, B.TexSymbolConfig_5Go, B.TexSymbolConfig_7pe, B.TexSymbolConfig_N08, B.TexSymbolConfig_ENE, B.TexSymbolConfig_CGr, B.TexSymbolConfig_Tk5, B.TexSymbolConfig_LDZ, B.TexSymbolConfig_evQ, B.TexSymbolConfig_9cG, B.TexSymbolConfig_RT9, B.TexSymbolConfig_pWI, B.TexSymbolConfig_sL0, B.TexSymbolConfig_DKB, B.TexSymbolConfig_N2Y, B.TexSymbolConfig_MFT, B.TexSymbolConfig_ktx, B.TexSymbolConfig_n44, B.TexSymbolConfig_gnp, B.TexSymbolConfig_l27, B.TexSymbolConfig_lDd, B.TexSymbolConfig_UCq, B.TexSymbolConfig_Ejj, B.TexSymbolConfig_DBB, B.TexSymbolConfig_Q8n, B.TexSymbolConfig_9cG, B.TexSymbolConfig_RT9, B.TexSymbolConfig_WRN, B.TexSymbolConfig_HVQ, B.TexSymbolConfig_gwv, B.TexSymbolConfig_6h7, B.TexSymbolConfig_9MG, B.TexSymbolConfig_5X4, B.TexSymbolConfig_RWP, B.TexSymbolConfig_nM2, B.TexSymbolConfig_8OW, B.TexSymbolConfig_kH8, B.TexSymbolConfig_DHP, B.TexSymbolConfig_qS7, B.TexSymbolConfig_FmP, B.TexSymbolConfig_b9H, B.TexSymbolConfig_a2f, B.TexSymbolConfig_t1F, B.TexSymbolConfig_N9p, B.TexSymbolConfig_5cN, B.TexSymbolConfig_V1L, B.TexSymbolConfig_1ly, B.TexSymbolConfig_9lw, B.TexSymbolConfig_H2S, B.TexSymbolConfig_CW3, B.TexSymbolConfig_cVm, B.TexSymbolConfig_Agz, B.TexSymbolConfig_owZ, B.TexSymbolConfig_SpI, B.TexSymbolConfig_cOU, B.TexSymbolConfig_GTn, B.TexSymbolConfig_Z5Q, B.TexSymbolConfig_Z5Q, B.TexSymbolConfig_FNN, B.TexSymbolConfig_cOU, B.TexSymbolConfig_Wuk, B.TexSymbolConfig_XQC, B.TexSymbolConfig_9N0, B.TexSymbolConfig_PgS, B.TexSymbolConfig_ihK, B.TexSymbolConfig_rbG, B.TexSymbolConfig_su8, B.TexSymbolConfig_83F, B.TexSymbolConfig_bNJ, B.TexSymbolConfig_VWa, B.TexSymbolConfig_4VT, B.TexSymbolConfig_qsx, B.TexSymbolConfig_4ca, B.TexSymbolConfig_bMJ, B.TexSymbolConfig_bMJ, B.TexSymbolConfig_yRA, B.TexSymbolConfig_icu, B.TexSymbolConfig_APZ, B.TexSymbolConfig_yzR, B.TexSymbolConfig_mRX, B.TexSymbolConfig_iP7, B.TexSymbolConfig_hmL, B.TexSymbolConfig_l6Y, B.TexSymbolConfig_7oH, B.TexSymbolConfig_8HV, B.TexSymbolConfig_aNY, B.TexSymbolConfig_4Kk, B.TexSymbolConfig_Ple, B.TexSymbolConfig_wCA, B.TexSymbolConfig_dDd, B.TexSymbolConfig_cne, B.TexSymbolConfig_7Hd, B.TexSymbolConfig_1pE, B.TexSymbolConfig_97d, B.TexSymbolConfig_S8G, B.TexSymbolConfig_PWg, B.TexSymbolConfig_B4y, B.TexSymbolConfig_KWO, B.TexSymbolConfig_H9O, B.TexSymbolConfig_86o, B.TexSymbolConfig_kf5, B.TexSymbolConfig_6Ao, B.TexSymbolConfig_IWq, B.TexSymbolConfig_TWI, B.TexSymbolConfig_G2f, B.TexSymbolConfig_Bi9, B.TexSymbolConfig_ase, B.TexSymbolConfig_wxy, B.TexSymbolConfig_RVm, B.TexSymbolConfig_uxV, B.TexSymbolConfig_p4M, B.TexSymbolConfig_RWj, B.TexSymbolConfig_VdW, B.TexSymbolConfig_RWj, B.TexSymbolConfig_VdW, B.TexSymbolConfig_ie6, B.TexSymbolConfig_Ith, B.TexSymbolConfig_AIj, B.TexSymbolConfig_ITf, B.TexSymbolConfig_bV5, B.TexSymbolConfig_m92, B.TexSymbolConfig_W3f, B.TexSymbolConfig_W3f, B.TexSymbolConfig_WCC, B.TexSymbolConfig_ztQ, B.TexSymbolConfig_Yj0, B.TexSymbolConfig_bo9, B.TexSymbolConfig_Vkt, B.TexSymbolConfig_CTy, B.TexSymbolConfig_MHN, B.TexSymbolConfig_ZnX, B.TexSymbolConfig_sxS, B.TexSymbolConfig_37C, B.TexSymbolConfig_WCC, B.TexSymbolConfig_wcx, B.TexSymbolConfig_wcx, B.TexSymbolConfig_1Yd, B.TexSymbolConfig_uyv, B.TexSymbolConfig_uyv, B.TexSymbolConfig_I5t, B.TexSymbolConfig_QjH, B.TexSymbolConfig_61m, B.TexSymbolConfig_RVb, B.TexSymbolConfig_61m, B.TexSymbolConfig_RVb, B.TexSymbolConfig_q6t, B.TexSymbolConfig_1Dq, B.TexSymbolConfig_jCK, B.TexSymbolConfig_o58, B.TexSymbolConfig_vgd, B.TexSymbolConfig_0Ma, B.TexSymbolConfig_ssk, B.TexSymbolConfig_Yas, B.TexSymbolConfig_rXF, B.TexSymbolConfig_lE0, B.TexSymbolConfig_AUm, B.TexSymbolConfig_fwE, B.TexSymbolConfig_kwy, B.TexSymbolConfig_yGr, B.TexSymbolConfig_a86, B.TexSymbolConfig_zEn, B.TexSymbolConfig_lqa, B.TexSymbolConfig_hqG, B.TexSymbolConfig_myC, B.TexSymbolConfig_6w8, B.TexSymbolConfig_hRK, B.TexSymbolConfig_wZD, B.TexSymbolConfig_D0C, B.TexSymbolConfig_0YU, B.TexSymbolConfig_1e8, B.TexSymbolConfig_1e8, B.TexSymbolConfig_wat, B.TexSymbolConfig_Q2z, B.TexSymbolConfig_Ewq, B.TexSymbolConfig_eup, B.TexSymbolConfig_G3M, B.TexSymbolConfig_ovp, B.TexSymbolConfig_ovp, B.TexSymbolConfig_lsF, B.TexSymbolConfig_pRQ, B.TexSymbolConfig_lJU, B.TexSymbolConfig_1w0, B.TexSymbolConfig_Cku, B.TexSymbolConfig_u10, B.TexSymbolConfig_Wuu, B.TexSymbolConfig_Wuu, B.TexSymbolConfig_VjA, B.TexSymbolConfig_qfX, B.TexSymbolConfig_cQK, B.TexSymbolConfig_kFA, B.TexSymbolConfig_G16, B.TexSymbolConfig_AgW, B.TexSymbolConfig_QE6, B.TexSymbolConfig_Fzw, B.TexSymbolConfig_iKT, B.TexSymbolConfig_03I, B.TexSymbolConfig_frX, B.TexSymbolConfig_Vd4, B.TexSymbolConfig_qmh, B.TexSymbolConfig_txU, B.TexSymbolConfig_c9E, B.TexSymbolConfig_arS, B.TexSymbolConfig_SvB, B.TexSymbolConfig_aN2, B.TexSymbolConfig_zr2, B.TexSymbolConfig_eL8, B.TexSymbolConfig_Lyp, B.TexSymbolConfig_0Kh, B.TexSymbolConfig_0Kh, B.TexSymbolConfig_kU3, B.TexSymbolConfig_j1j, B.TexSymbolConfig_fvF, B.TexSymbolConfig_jB1, B.TexSymbolConfig_ruq, B.TexSymbolConfig_GKn, B.TexSymbolConfig_MOw, B.TexSymbolConfig_cjT, B.TexSymbolConfig_nVm, B.TexSymbolConfig_Iu8, B.TexSymbolConfig_Jjf, B.TexSymbolConfig_CTv, B.TexSymbolConfig_ZZz, B.TexSymbolConfig_ZZz, B.TexSymbolConfig_Drn, B.TexSymbolConfig_Z1i, B.TexSymbolConfig_PQq, B.TexSymbolConfig_C8s, B.TexSymbolConfig_OvW, B.TexSymbolConfig_P2y, B.TexSymbolConfig_wKD, B.TexSymbolConfig_N0R, B.TexSymbolConfig_mDn, B.TexSymbolConfig_GKw, B.TexSymbolConfig_wEt, B.TexSymbolConfig_spO, B.TexSymbolConfig_$_false_null, B.TexSymbolConfig_Gdt, B.TexSymbolConfig___false_null, B.TexSymbolConfig_HTp, B.TexSymbolConfig_9EO, B.TexSymbolConfig_fBG, B.TexSymbolConfig_VdG, B.TexSymbolConfig_Kbv, B.TexSymbolConfig_27R, B.TexSymbolConfig_JOd, B.TexSymbolConfig_Txq, B.TexSymbolConfig_EHy, B.TexSymbolConfig_bJN, B.TexSymbolConfig_FRn, B.TexSymbolConfig_P7D, B.TexSymbolConfig_P7D, B.TexSymbolConfig_19L, B.TexSymbolConfig_19L, B.TexSymbolConfig_6Tf, B.TexSymbolConfig_b0P, B.TexSymbolConfig_PDX, B.TexSymbolConfig_tYh, B.TexSymbolConfig_250, B.TexSymbolConfig_BmC, B.TexSymbolConfig_veX, B.TexSymbolConfig_dmO, B.TexSymbolConfig_dmO, B.TexSymbolConfig_dmO, B.TexSymbolConfig_23M, B.TexSymbolConfig_AuU, B.TexSymbolConfig_k9E, B.TexSymbolConfig_2ps, B.TexSymbolConfig_mLy, B.TexSymbolConfig_YLA, B.TexSymbolConfig_oEa, B.TexSymbolConfig_E9t, B.TexSymbolConfig_STd, B.TexSymbolConfig_fyP, B.TexSymbolConfig_MXs, B.TexSymbolConfig_ujq, B.TexSymbolConfig_UAC, B.TexSymbolConfig_Jqm, B.TexSymbolConfig_ot1, B.TexSymbolConfig_r4v, B.TexSymbolConfig_ClT, B.TexSymbolConfig_hu9, B.TexSymbolConfig_RHL, B.TexSymbolConfig_nBu, B.TexSymbolConfig_m1W, B.TexSymbolConfig_FTA, B.TexSymbolConfig_7LH, B.TexSymbolConfig_eld, B.TexSymbolConfig_6ua, B.TexSymbolConfig_ZUy, B.TexSymbolConfig_I4M, B.TexSymbolConfig_6F3, B.TexSymbolConfig_S55, B.TexSymbolConfig_WiO, B.TexSymbolConfig_8jl, B.TexSymbolConfig_ieb, B.TexSymbolConfig_Jqm0, B.TexSymbolConfig_8jl, B.TexSymbolConfig_ieb, B.TexSymbolConfig_Jqm0, B.TexSymbolConfig_MYn, B.TexSymbolConfig_nD7, B.TexSymbolConfig_V95, B.TexSymbolConfig_ELi, B.TexSymbolConfig_6wT, B.TexSymbolConfig_p2K, B.TexSymbolConfig_JKK, B.TexSymbolConfig_Gj3, B.TexSymbolConfig_jXd], type$.ConstantStringMap_String_TexSymbolConfig);
    B.Object_LTu = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "\xa7": 10, "\xb6": 11, "\xa5": 12, "\u2026": 13, "\u0131": 14, "\u0237": 15, "\xdf": 16, "\xe6": 17, "\u0153": 18, "\xf8": 19, "\xc6": 20, "\u0152": 21, "\xd8": 22, "`": 23, "'": 24, "\xb0": 25, "\xa3": 26, " ": 27, "!": 28, "@": 29, "*": 30, "(": 31, ")": 32, "-": 33, "=": 34, "+": 35, "[": 36, "]": 37, "<": 38, ">": 39, "|": 40, '"': 41, ";": 42, ":": 43, "?": 44, "/": 45, ".": 46, ",": 47, A: 48, B: 49, C: 50, D: 51, E: 52, F: 53, G: 54, H: 55, I: 56, J: 57, K: 58, L: 59, M: 60, N: 61, O: 62, P: 63, Q: 64, R: 65, S: 66, T: 67, U: 68, V: 69, W: 70, X: 71, Y: 72, Z: 73, a: 74, b: 75, c: 76, d: 77, e: 78, f: 79, g: 80, h: 81, i: 82, j: 83, k: 84, l: 85, m: 86, n: 87, o: 88, p: 89, q: 90, r: 91, s: 92, t: 93, u: 94, v: 95, w: 96, x: 97, y: 98, z: 99, "\u2102": 100, "\u210d": 101, "\u2115": 102, "\u2119": 103, "\u211a": 104, "\u211d": 105, "\u2124": 106, "\u210e": 107, "\ud835\udc00": 108, "\ud835\udc34": 109, "\ud835\udc68": 110, "\ud835\udd04": 111, "\ud835\udda0": 112, "\ud835\uddd4": 113, "\ud835\ude08": 114, "\ud835\ude70": 115, "\ud835\udd38": 116, "\ud835\udc9c": 117, "\ud835\udc01": 118, "\ud835\udc35": 119, "\ud835\udc69": 120, "\ud835\udd05": 121, "\ud835\udda1": 122, "\ud835\uddd5": 123, "\ud835\ude09": 124, "\ud835\ude71": 125, "\ud835\udd39": 126, "\ud835\udc9d": 127, "\ud835\udc02": 128, "\ud835\udc36": 129, "\ud835\udc6a": 130, "\ud835\udd06": 131, "\ud835\udda2": 132, "\ud835\uddd6": 133, "\ud835\ude0a": 134, "\ud835\ude72": 135, "\ud835\udd3a": 136, "\ud835\udc9e": 137, "\ud835\udc03": 138, "\ud835\udc37": 139, "\ud835\udc6b": 140, "\ud835\udd07": 141, "\ud835\udda3": 142, "\ud835\uddd7": 143, "\ud835\ude0b": 144, "\ud835\ude73": 145, "\ud835\udd3b": 146, "\ud835\udc9f": 147, "\ud835\udc04": 148, "\ud835\udc38": 149, "\ud835\udc6c": 150, "\ud835\udd08": 151, "\ud835\udda4": 152, "\ud835\uddd8": 153, "\ud835\ude0c": 154, "\ud835\ude74": 155, "\ud835\udd3c": 156, "\ud835\udca0": 157, "\ud835\udc05": 158, "\ud835\udc39": 159, "\ud835\udc6d": 160, "\ud835\udd09": 161, "\ud835\udda5": 162, "\ud835\uddd9": 163, "\ud835\ude0d": 164, "\ud835\ude75": 165, "\ud835\udd3d": 166, "\ud835\udca1": 167, "\ud835\udc06": 168, "\ud835\udc3a": 169, "\ud835\udc6e": 170, "\ud835\udd0a": 171, "\ud835\udda6": 172, "\ud835\uddda": 173, "\ud835\ude0e": 174, "\ud835\ude76": 175, "\ud835\udd3e": 176, "\ud835\udca2": 177, "\ud835\udc07": 178, "\ud835\udc3b": 179, "\ud835\udc6f": 180, "\ud835\udd0b": 181, "\ud835\udda7": 182, "\ud835\udddb": 183, "\ud835\ude0f": 184, "\ud835\ude77": 185, "\ud835\udd3f": 186, "\ud835\udca3": 187, "\ud835\udc08": 188, "\ud835\udc3c": 189, "\ud835\udc70": 190, "\ud835\udd0c": 191, "\ud835\udda8": 192, "\ud835\udddc": 193, "\ud835\ude10": 194, "\ud835\ude78": 195, "\ud835\udd40": 196, "\ud835\udca4": 197, "\ud835\udc09": 198, "\ud835\udc3d": 199, "\ud835\udc71": 200, "\ud835\udd0d": 201, "\ud835\udda9": 202, "\ud835\udddd": 203, "\ud835\ude11": 204, "\ud835\ude79": 205, "\ud835\udd41": 206, "\ud835\udca5": 207, "\ud835\udc0a": 208, "\ud835\udc3e": 209, "\ud835\udc72": 210, "\ud835\udd0e": 211, "\ud835\uddaa": 212, "\ud835\uddde": 213, "\ud835\ude12": 214, "\ud835\ude7a": 215, "\ud835\udd42": 216, "\ud835\udca6": 217, "\ud835\udc0b": 218, "\ud835\udc3f": 219, "\ud835\udc73": 220, "\ud835\udd0f": 221, "\ud835\uddab": 222, "\ud835\udddf": 223, "\ud835\ude13": 224, "\ud835\ude7b": 225, "\ud835\udd43": 226, "\ud835\udca7": 227, "\ud835\udc0c": 228, "\ud835\udc40": 229, "\ud835\udc74": 230, "\ud835\udd10": 231, "\ud835\uddac": 232, "\ud835\udde0": 233, "\ud835\ude14": 234, "\ud835\ude7c": 235, "\ud835\udd44": 236, "\ud835\udca8": 237, "\ud835\udc0d": 238, "\ud835\udc41": 239, "\ud835\udc75": 240, "\ud835\udd11": 241, "\ud835\uddad": 242, "\ud835\udde1": 243, "\ud835\ude15": 244, "\ud835\ude7d": 245, "\ud835\udd45": 246, "\ud835\udca9": 247, "\ud835\udc0e": 248, "\ud835\udc42": 249, "\ud835\udc76": 250, "\ud835\udd12": 251, "\ud835\uddae": 252, "\ud835\udde2": 253, "\ud835\ude16": 254, "\ud835\ude7e": 255, "\ud835\udd46": 256, "\ud835\udcaa": 257, "\ud835\udc0f": 258, "\ud835\udc43": 259, "\ud835\udc77": 260, "\ud835\udd13": 261, "\ud835\uddaf": 262, "\ud835\udde3": 263, "\ud835\ude17": 264, "\ud835\ude7f": 265, "\ud835\udd47": 266, "\ud835\udcab": 267, "\ud835\udc10": 268, "\ud835\udc44": 269, "\ud835\udc78": 270, "\ud835\udd14": 271, "\ud835\uddb0": 272, "\ud835\udde4": 273, "\ud835\ude18": 274, "\ud835\ude80": 275, "\ud835\udd48": 276, "\ud835\udcac": 277, "\ud835\udc11": 278, "\ud835\udc45": 279, "\ud835\udc79": 280, "\ud835\udd15": 281, "\ud835\uddb1": 282, "\ud835\udde5": 283, "\ud835\ude19": 284, "\ud835\ude81": 285, "\ud835\udd49": 286, "\ud835\udcad": 287, "\ud835\udc12": 288, "\ud835\udc46": 289, "\ud835\udc7a": 290, "\ud835\udd16": 291, "\ud835\uddb2": 292, "\ud835\udde6": 293, "\ud835\ude1a": 294, "\ud835\ude82": 295, "\ud835\udd4a": 296, "\ud835\udcae": 297, "\ud835\udc13": 298, "\ud835\udc47": 299, "\ud835\udc7b": 300, "\ud835\udd17": 301, "\ud835\uddb3": 302, "\ud835\udde7": 303, "\ud835\ude1b": 304, "\ud835\ude83": 305, "\ud835\udd4b": 306, "\ud835\udcaf": 307, "\ud835\udc14": 308, "\ud835\udc48": 309, "\ud835\udc7c": 310, "\ud835\udd18": 311, "\ud835\uddb4": 312, "\ud835\udde8": 313, "\ud835\ude1c": 314, "\ud835\ude84": 315, "\ud835\udd4c": 316, "\ud835\udcb0": 317, "\ud835\udc15": 318, "\ud835\udc49": 319, "\ud835\udc7d": 320, "\ud835\udd19": 321, "\ud835\uddb5": 322, "\ud835\udde9": 323, "\ud835\ude1d": 324, "\ud835\ude85": 325, "\ud835\udd4d": 326, "\ud835\udcb1": 327, "\ud835\udc16": 328, "\ud835\udc4a": 329, "\ud835\udc7e": 330, "\ud835\udd1a": 331, "\ud835\uddb6": 332, "\ud835\uddea": 333, "\ud835\ude1e": 334, "\ud835\ude86": 335, "\ud835\udd4e": 336, "\ud835\udcb2": 337, "\ud835\udc17": 338, "\ud835\udc4b": 339, "\ud835\udc7f": 340, "\ud835\udd1b": 341, "\ud835\uddb7": 342, "\ud835\uddeb": 343, "\ud835\ude1f": 344, "\ud835\ude87": 345, "\ud835\udd4f": 346, "\ud835\udcb3": 347, "\ud835\udc18": 348, "\ud835\udc4c": 349, "\ud835\udc80": 350, "\ud835\udd1c": 351, "\ud835\uddb8": 352, "\ud835\uddec": 353, "\ud835\ude20": 354, "\ud835\ude88": 355, "\ud835\udd50": 356, "\ud835\udcb4": 357, "\ud835\udc19": 358, "\ud835\udc4d": 359, "\ud835\udc81": 360, "\ud835\udd1d": 361, "\ud835\uddb9": 362, "\ud835\udded": 363, "\ud835\ude21": 364, "\ud835\ude89": 365, "\ud835\udd51": 366, "\ud835\udcb5": 367, "\ud835\udc1a": 368, "\ud835\udc4e": 369, "\ud835\udc82": 370, "\ud835\udd1e": 371, "\ud835\uddba": 372, "\ud835\uddee": 373, "\ud835\ude22": 374, "\ud835\ude8a": 375, "\ud835\udc1b": 376, "\ud835\udc4f": 377, "\ud835\udc83": 378, "\ud835\udd1f": 379, "\ud835\uddbb": 380, "\ud835\uddef": 381, "\ud835\ude23": 382, "\ud835\ude8b": 383, "\ud835\udc1c": 384, "\ud835\udc50": 385, "\ud835\udc84": 386, "\ud835\udd20": 387, "\ud835\uddbc": 388, "\ud835\uddf0": 389, "\ud835\ude24": 390, "\ud835\ude8c": 391, "\ud835\udc1d": 392, "\ud835\udc51": 393, "\ud835\udc85": 394, "\ud835\udd21": 395, "\ud835\uddbd": 396, "\ud835\uddf1": 397, "\ud835\ude25": 398, "\ud835\ude8d": 399, "\ud835\udc1e": 400, "\ud835\udc52": 401, "\ud835\udc86": 402, "\ud835\udd22": 403, "\ud835\uddbe": 404, "\ud835\uddf2": 405, "\ud835\ude26": 406, "\ud835\ude8e": 407, "\ud835\udc1f": 408, "\ud835\udc53": 409, "\ud835\udc87": 410, "\ud835\udd23": 411, "\ud835\uddbf": 412, "\ud835\uddf3": 413, "\ud835\ude27": 414, "\ud835\ude8f": 415, "\ud835\udc20": 416, "\ud835\udc54": 417, "\ud835\udc88": 418, "\ud835\udd24": 419, "\ud835\uddc0": 420, "\ud835\uddf4": 421, "\ud835\ude28": 422, "\ud835\ude90": 423, "\ud835\udc21": 424, "\ud835\udc55": 425, "\ud835\udc89": 426, "\ud835\udd25": 427, "\ud835\uddc1": 428, "\ud835\uddf5": 429, "\ud835\ude29": 430, "\ud835\ude91": 431, "\ud835\udc22": 432, "\ud835\udc56": 433, "\ud835\udc8a": 434, "\ud835\udd26": 435, "\ud835\uddc2": 436, "\ud835\uddf6": 437, "\ud835\ude2a": 438, "\ud835\ude92": 439, "\ud835\udc23": 440, "\ud835\udc57": 441, "\ud835\udc8b": 442, "\ud835\udd27": 443, "\ud835\uddc3": 444, "\ud835\uddf7": 445, "\ud835\ude2b": 446, "\ud835\ude93": 447, "\ud835\udc24": 448, "\ud835\udc58": 449, "\ud835\udc8c": 450, "\ud835\udd28": 451, "\ud835\uddc4": 452, "\ud835\uddf8": 453, "\ud835\ude2c": 454, "\ud835\ude94": 455, "\ud835\udc25": 456, "\ud835\udc59": 457, "\ud835\udc8d": 458, "\ud835\udd29": 459, "\ud835\uddc5": 460, "\ud835\uddf9": 461, "\ud835\ude2d": 462, "\ud835\ude95": 463, "\ud835\udc26": 464, "\ud835\udc5a": 465, "\ud835\udc8e": 466, "\ud835\udd2a": 467, "\ud835\uddc6": 468, "\ud835\uddfa": 469, "\ud835\ude2e": 470, "\ud835\ude96": 471, "\ud835\udc27": 472, "\ud835\udc5b": 473, "\ud835\udc8f": 474, "\ud835\udd2b": 475, "\ud835\uddc7": 476, "\ud835\uddfb": 477, "\ud835\ude2f": 478, "\ud835\ude97": 479, "\ud835\udc28": 480, "\ud835\udc5c": 481, "\ud835\udc90": 482, "\ud835\udd2c": 483, "\ud835\uddc8": 484, "\ud835\uddfc": 485, "\ud835\ude30": 486, "\ud835\ude98": 487, "\ud835\udc29": 488, "\ud835\udc5d": 489, "\ud835\udc91": 490, "\ud835\udd2d": 491, "\ud835\uddc9": 492, "\ud835\uddfd": 493, "\ud835\ude31": 494, "\ud835\ude99": 495, "\ud835\udc2a": 496, "\ud835\udc5e": 497, "\ud835\udc92": 498, "\ud835\udd2e": 499, "\ud835\uddca": 500, "\ud835\uddfe": 501, "\ud835\ude32": 502, "\ud835\ude9a": 503, "\ud835\udc2b": 504, "\ud835\udc5f": 505, "\ud835\udc93": 506, "\ud835\udd2f": 507, "\ud835\uddcb": 508, "\ud835\uddff": 509, "\ud835\ude33": 510, "\ud835\ude9b": 511, "\ud835\udc2c": 512, "\ud835\udc60": 513, "\ud835\udc94": 514, "\ud835\udd30": 515, "\ud835\uddcc": 516, "\ud835\ude00": 517, "\ud835\ude34": 518, "\ud835\ude9c": 519, "\ud835\udc2d": 520, "\ud835\udc61": 521, "\ud835\udc95": 522, "\ud835\udd31": 523, "\ud835\uddcd": 524, "\ud835\ude01": 525, "\ud835\ude35": 526, "\ud835\ude9d": 527, "\ud835\udc2e": 528, "\ud835\udc62": 529, "\ud835\udc96": 530, "\ud835\udd32": 531, "\ud835\uddce": 532, "\ud835\ude02": 533, "\ud835\ude36": 534, "\ud835\ude9e": 535, "\ud835\udc2f": 536, "\ud835\udc63": 537, "\ud835\udc97": 538, "\ud835\udd33": 539, "\ud835\uddcf": 540, "\ud835\ude03": 541, "\ud835\ude37": 542, "\ud835\ude9f": 543, "\ud835\udc30": 544, "\ud835\udc64": 545, "\ud835\udc98": 546, "\ud835\udd34": 547, "\ud835\uddd0": 548, "\ud835\ude04": 549, "\ud835\ude38": 550, "\ud835\udea0": 551, "\ud835\udc31": 552, "\ud835\udc65": 553, "\ud835\udc99": 554, "\ud835\udd35": 555, "\ud835\uddd1": 556, "\ud835\ude05": 557, "\ud835\ude39": 558, "\ud835\udea1": 559, "\ud835\udc32": 560, "\ud835\udc66": 561, "\ud835\udc9a": 562, "\ud835\udd36": 563, "\ud835\uddd2": 564, "\ud835\ude06": 565, "\ud835\ude3a": 566, "\ud835\udea2": 567, "\ud835\udc33": 568, "\ud835\udc67": 569, "\ud835\udc9b": 570, "\ud835\udd37": 571, "\ud835\uddd3": 572, "\ud835\ude07": 573, "\ud835\ude3b": 574, "\ud835\udea3": 575, "\ud835\udd5c": 576, "\ud835\udfce": 577, "\ud835\udfe2": 578, "\ud835\udfec": 579, "\ud835\udff6": 580, "\ud835\udfcf": 581, "\ud835\udfe3": 582, "\ud835\udfed": 583, "\ud835\udff7": 584, "\ud835\udfd0": 585, "\ud835\udfe4": 586, "\ud835\udfee": 587, "\ud835\udff8": 588, "\ud835\udfd1": 589, "\ud835\udfe5": 590, "\ud835\udfef": 591, "\ud835\udff9": 592, "\ud835\udfd2": 593, "\ud835\udfe6": 594, "\ud835\udff0": 595, "\ud835\udffa": 596, "\ud835\udfd3": 597, "\ud835\udfe7": 598, "\ud835\udff1": 599, "\ud835\udffb": 600, "\ud835\udfd4": 601, "\ud835\udfe8": 602, "\ud835\udff2": 603, "\ud835\udffc": 604, "\ud835\udfd5": 605, "\ud835\udfe9": 606, "\ud835\udff3": 607, "\ud835\udffd": 608, "\ud835\udfd6": 609, "\ud835\udfea": 610, "\ud835\udff4": 611, "\ud835\udffe": 612, "\ud835\udfd7": 613, "\ud835\udfeb": 614, "\ud835\udff5": 615, "\ud835\udfff": 616, "\xc7": 617, "\xd0": 618, "\xde": 619, "\xe7": 620, "\xfe": 621, "\xf0": 622, "\u2013": 623, "\u2014": 624, "\u2018": 625, "\u2019": 626, "\u201c": 627, "\u201d": 628, "\xa0": 629, "\\S": 630, "\\P": 631, "\\yen": 632, "\\ ": 633, "~": 634, "\\space": 635, "\\nobreakspace": 636, "\\lbrack": 637, "\\rbrack": 638, "\\textless": 639, "\\textgreater": 640, "\\textbar": 641, "\\textellipsis": 642, "\\ldots": 643, "\\i": 644, "\\j": 645, "\\ss": 646, "\\ae": 647, "\\oe": 648, "\\o": 649, "\\AE": 650, "\\OE": 651, "\\O": 652, "--": 653, "\\textendash": 654, "---": 655, "\\textemdash": 656, "\\textquoteleft": 657, "\\textquoteright": 658, "``": 659, "\\textquotedblleft": 660, "''": 661, "\\textquotedblright": 662, "\\degree": 663, "\\textdegree": 664, "\\pounds": 665, "\\textsterling": 666, "\\textbardbl": 667, "\\#": 668, "\\&": 669, "\\textdagger": 670, "\\dag": 671, "\\textdaggerdbl": 672, "\\ddag": 673, "\\textcircled": 674, "\\circledR": 675, "\\$": 676, "\\textdollar": 677, "\\%": 678, "\\_": 679, "\\textunderscore": 680, "\\{": 681, "\\textbraceleft": 682, "\\}": 683, "\\textbraceright": 684, "\\textbackslash": 685, "\\'": 686, "\\`": 687, '\\"': 688, "\\textasciitilde": 689, "\\=": 690, "\\u": 691, "\\v": 692, "\\textasciicircum": 693, "\\.": 694, "\\r": 695, "\\maltese": 696, "\\checkmark": 697, "\\^": 698, "\\~": 699, "\\H": 700};
    B.TexSymbolConfig_wMV = new A.TexSymbolConfig("\xa7", false, null);
    B.TexSymbolConfig_Vqy = new A.TexSymbolConfig("\xb6", false, null);
    B.TexSymbolConfig_FDA = new A.TexSymbolConfig("\xdf", false, null);
    B.TexSymbolConfig_MnY = new A.TexSymbolConfig("\xe6", false, null);
    B.TexSymbolConfig_mI9 = new A.TexSymbolConfig("\u0153", false, null);
    B.TexSymbolConfig_CKF = new A.TexSymbolConfig("\xf8", false, null);
    B.TexSymbolConfig_ZPh = new A.TexSymbolConfig("\xc6", false, null);
    B.TexSymbolConfig_hQH = new A.TexSymbolConfig("\u0152", false, null);
    B.TexSymbolConfig_RAh = new A.TexSymbolConfig("\xd8", false, null);
    B.TexSymbolConfig_c47 = new A.TexSymbolConfig("'", false, null);
    B.TexSymbolConfig_Zb1 = new A.TexSymbolConfig("\u2013", false, null);
    B.TexSymbolConfig_s1a = new A.TexSymbolConfig("\u2014", false, null);
    B.TexSymbolConfig_Cw8 = new A.TexSymbolConfig("\u2018", false, null);
    B.TexSymbolConfig_9Jl = new A.TexSymbolConfig("\u2019", false, null);
    B.TexSymbolConfig_iqu = new A.TexSymbolConfig("\u201c", false, null);
    B.TexSymbolConfig_1XN = new A.TexSymbolConfig("\u201d", false, null);
    B.TexSymbolConfig_4Q8 = new A.TexSymbolConfig("\u02c6", false, null);
    B.TexSymbolConfig_jG0 = new A.TexSymbolConfig("\u02dc", false, null);
    B.TexSymbolConfig_S6K = new A.TexSymbolConfig("\u02dd", false, null);
    B.Map_SXdse = new C.ConstantStringMap(B.Object_LTu, [B.TexSymbolConfig_sAj, B.TexSymbolConfig_JIB, B.TexSymbolConfig_Kjf, B.TexSymbolConfig_hf8, B.TexSymbolConfig_Rb2, B.TexSymbolConfig_xTp, B.TexSymbolConfig_v6K, B.TexSymbolConfig_nqA, B.TexSymbolConfig_gK2, B.TexSymbolConfig_jJE, B.TexSymbolConfig_wMV, B.TexSymbolConfig_Vqy, B.TexSymbolConfig_OLK, B.TexSymbolConfig_1e8, B.TexSymbolConfig_Ewq, B.TexSymbolConfig_eup, B.TexSymbolConfig_FDA, B.TexSymbolConfig_MnY, B.TexSymbolConfig_mI9, B.TexSymbolConfig_CKF, B.TexSymbolConfig_ZPh, B.TexSymbolConfig_hQH, B.TexSymbolConfig_RAh, B.TexSymbolConfig_mVM, B.TexSymbolConfig_c47, B.TexSymbolConfig_G3M, B.TexSymbolConfig_ovp, B.TexSymbolConfig_61m, B.TexSymbolConfig_dI7, B.TexSymbolConfig_Coz, B.TexSymbolConfig_LvD, B.TexSymbolConfig_fwE, B.TexSymbolConfig_kwy, B.TexSymbolConfig_yCb, B.TexSymbolConfig_lbA, B.TexSymbolConfig_bvq, B.TexSymbolConfig_lE0, B.TexSymbolConfig_AUm, B.TexSymbolConfig_1Yd, B.TexSymbolConfig_ztQ, B.TexSymbolConfig_OJs, B.TexSymbolConfig_OFB, B.TexSymbolConfig_njr, B.TexSymbolConfig_dAE, B.TexSymbolConfig_QWQ, B.TexSymbolConfig_G90, B.TexSymbolConfig_IzI, B.TexSymbolConfig_uxw, B.TexSymbolConfig_A_false_null, B.TexSymbolConfig_B_false_null, B.TexSymbolConfig_C_false_null, B.TexSymbolConfig_D_false_null, B.TexSymbolConfig_E_false_null, B.TexSymbolConfig_F_false_null, B.TexSymbolConfig_G_false_null, B.TexSymbolConfig_H_false_null, B.TexSymbolConfig_I_false_null, B.TexSymbolConfig_J_false_null, B.TexSymbolConfig_K_false_null, B.TexSymbolConfig_L_false_null, B.TexSymbolConfig_M_false_null, B.TexSymbolConfig_N_false_null, B.TexSymbolConfig_O_false_null, B.TexSymbolConfig_P_false_null, B.TexSymbolConfig_Q_false_null, B.TexSymbolConfig_R_false_null, B.TexSymbolConfig_S_false_null, B.TexSymbolConfig_T_false_null, B.TexSymbolConfig_U_false_null, B.TexSymbolConfig_V_false_null, B.TexSymbolConfig_W_false_null, B.TexSymbolConfig_X_false_null, B.TexSymbolConfig_Y_false_null, B.TexSymbolConfig_Z_false_null, B.TexSymbolConfig_a_false_null, B.TexSymbolConfig_b_false_null, B.TexSymbolConfig_c_false_null, B.TexSymbolConfig_d_false_null, B.TexSymbolConfig_e_false_null, B.TexSymbolConfig_f_false_null, B.TexSymbolConfig_g_false_null, B.TexSymbolConfig_h_false_null, B.TexSymbolConfig_i_false_null, B.TexSymbolConfig_j_false_null, B.TexSymbolConfig_k_false_null, B.TexSymbolConfig_l_false_null, B.TexSymbolConfig_m_false_null, B.TexSymbolConfig_n_false_null, B.TexSymbolConfig_o_false_null, B.TexSymbolConfig_p_false_null, B.TexSymbolConfig_q_false_null, B.TexSymbolConfig_r_false_null, B.TexSymbolConfig_s_false_null, B.TexSymbolConfig_t_false_null, B.TexSymbolConfig_u_false_null, B.TexSymbolConfig_v_false_null, B.TexSymbolConfig_w_false_null, B.TexSymbolConfig_x_false_null, B.TexSymbolConfig_y_false_null, B.TexSymbolConfig_z_false_null, B.TexSymbolConfig_XRQ, B.TexSymbolConfig_SJh, B.TexSymbolConfig_ukc, B.TexSymbolConfig_D32, B.TexSymbolConfig_BvH, B.TexSymbolConfig_0Bc, B.TexSymbolConfig_AKG, B.TexSymbolConfig_BIG, B.TexSymbolConfig_npA, B.TexSymbolConfig_ixl, B.TexSymbolConfig_kon, B.TexSymbolConfig_LJ1, B.TexSymbolConfig_un4, B.TexSymbolConfig_I3d, B.TexSymbolConfig_DH8, B.TexSymbolConfig_IaC, B.TexSymbolConfig_DOk, B.TexSymbolConfig_3zX, B.TexSymbolConfig_8fY, B.TexSymbolConfig_uu3, B.TexSymbolConfig_1RG, B.TexSymbolConfig_8Jk, B.TexSymbolConfig_jF2, B.TexSymbolConfig_8jC, B.TexSymbolConfig_rGE, B.TexSymbolConfig_tDo, B.TexSymbolConfig_tLg, B.TexSymbolConfig_Zb4, B.TexSymbolConfig_DIi, B.TexSymbolConfig_S14, B.TexSymbolConfig_zVj, B.TexSymbolConfig_ldr, B.TexSymbolConfig_43i, B.TexSymbolConfig_p15, B.TexSymbolConfig_HGM, B.TexSymbolConfig_LrS, B.TexSymbolConfig_5Gq, B.TexSymbolConfig_ZSe, B.TexSymbolConfig_LoS, B.TexSymbolConfig_6WB, B.TexSymbolConfig_N6G, B.TexSymbolConfig_Dza, B.TexSymbolConfig_amc, B.TexSymbolConfig_rV0, B.TexSymbolConfig_fG6, B.TexSymbolConfig_rQF, B.TexSymbolConfig_v2Z, B.TexSymbolConfig_MDq, B.TexSymbolConfig_qT4, B.TexSymbolConfig_Xt2, B.TexSymbolConfig_In5, B.TexSymbolConfig_Vid, B.TexSymbolConfig_17F, B.TexSymbolConfig_3TT, B.TexSymbolConfig_SxH, B.TexSymbolConfig_utH, B.TexSymbolConfig_H8e, B.TexSymbolConfig_E6q, B.TexSymbolConfig_mHs, B.TexSymbolConfig_xsj, B.TexSymbolConfig_fQm, B.TexSymbolConfig_llg, B.TexSymbolConfig_DLM, B.TexSymbolConfig_VfA, B.TexSymbolConfig_rbS, B.TexSymbolConfig_LrN, B.TexSymbolConfig_SSu, B.TexSymbolConfig_eVj, B.TexSymbolConfig_zHn, B.TexSymbolConfig_5pU, B.TexSymbolConfig_kRu, B.TexSymbolConfig_25b, B.TexSymbolConfig_xaj, B.TexSymbolConfig_7BP, B.TexSymbolConfig_CL4, B.TexSymbolConfig_bdG, B.TexSymbolConfig_r1p, B.TexSymbolConfig_mee, B.TexSymbolConfig_PqG, B.TexSymbolConfig_yhR, B.TexSymbolConfig_O07, B.TexSymbolConfig_BKa, B.TexSymbolConfig_UuM, B.TexSymbolConfig_mqF, B.TexSymbolConfig_1xU, B.TexSymbolConfig_Uhz, B.TexSymbolConfig_fWu, B.TexSymbolConfig_7ix, B.TexSymbolConfig_xsO, B.TexSymbolConfig_5Xn, B.TexSymbolConfig_pru, B.TexSymbolConfig_Mdw, B.TexSymbolConfig_BvD, B.TexSymbolConfig_giH, B.TexSymbolConfig_2rv, B.TexSymbolConfig_S1J, B.TexSymbolConfig_BuK, B.TexSymbolConfig_hXI, B.TexSymbolConfig_6XT, B.TexSymbolConfig_ahO, B.TexSymbolConfig_4ge, B.TexSymbolConfig_cna, B.TexSymbolConfig_hgs, B.TexSymbolConfig_U0u, B.TexSymbolConfig_PYo, B.TexSymbolConfig_usb, B.TexSymbolConfig_P8l, B.TexSymbolConfig_Gjv, B.TexSymbolConfig_3YP, B.TexSymbolConfig_OdH, B.TexSymbolConfig_uOB, B.TexSymbolConfig_kT1, B.TexSymbolConfig_Cvq, B.TexSymbolConfig_ykE, B.TexSymbolConfig_Dhd, B.TexSymbolConfig_TQG, B.TexSymbolConfig_eeV, B.TexSymbolConfig_w23, B.TexSymbolConfig_JDM, B.TexSymbolConfig_SDu, B.TexSymbolConfig_4jj, B.TexSymbolConfig_Uuq, B.TexSymbolConfig_azh, B.TexSymbolConfig_Ger, B.TexSymbolConfig_FCw, B.TexSymbolConfig_dAd, B.TexSymbolConfig_6ys, B.TexSymbolConfig_VY6, B.TexSymbolConfig_n8Q, B.TexSymbolConfig_Z5T, B.TexSymbolConfig_tcX, B.TexSymbolConfig_9Pd, B.TexSymbolConfig_7qW, B.TexSymbolConfig_4ck, B.TexSymbolConfig_48P, B.TexSymbolConfig_i2R, B.TexSymbolConfig_9Lz, B.TexSymbolConfig_8Tu, B.TexSymbolConfig_gmn, B.TexSymbolConfig_TCP, B.TexSymbolConfig_Bak, B.TexSymbolConfig_qfz, B.TexSymbolConfig_4kI, B.TexSymbolConfig_gX3, B.TexSymbolConfig_dVk, B.TexSymbolConfig_6Qc, B.TexSymbolConfig_cpd, B.TexSymbolConfig_2NA, B.TexSymbolConfig_oUS, B.TexSymbolConfig_trO, B.TexSymbolConfig_mP9, B.TexSymbolConfig_njn, B.TexSymbolConfig_fHV, B.TexSymbolConfig_4Hj, B.TexSymbolConfig_D10, B.TexSymbolConfig_mQ7, B.TexSymbolConfig_RBr, B.TexSymbolConfig_xMh, B.TexSymbolConfig_fnH, B.TexSymbolConfig_t7z, B.TexSymbolConfig_9zk, B.TexSymbolConfig_XPe, B.TexSymbolConfig_hLH, B.TexSymbolConfig_XzX, B.TexSymbolConfig_okO, B.TexSymbolConfig_ibN, B.TexSymbolConfig_8kL, B.TexSymbolConfig_vkz, B.TexSymbolConfig_yYW, B.TexSymbolConfig_MsQ, B.TexSymbolConfig_RVG, B.TexSymbolConfig_9DA, B.TexSymbolConfig_jq6, B.TexSymbolConfig_qP7, B.TexSymbolConfig_nCA, B.TexSymbolConfig_5vn, B.TexSymbolConfig_hcW, B.TexSymbolConfig_MGX, B.TexSymbolConfig_bIz, B.TexSymbolConfig_cPR, B.TexSymbolConfig_tbX, B.TexSymbolConfig_t9l, B.TexSymbolConfig_L4M, B.TexSymbolConfig_n9t, B.TexSymbolConfig_FiX, B.TexSymbolConfig_CAS, B.TexSymbolConfig_dsF, B.TexSymbolConfig_SKe, B.TexSymbolConfig_7DQ, B.TexSymbolConfig_QtG, B.TexSymbolConfig_MHm, B.TexSymbolConfig_f6t, B.TexSymbolConfig_J8t, B.TexSymbolConfig_RRK, B.TexSymbolConfig_Vvs, B.TexSymbolConfig_dhT, B.TexSymbolConfig_VQL, B.TexSymbolConfig_SC5, B.TexSymbolConfig_DTs, B.TexSymbolConfig_UZb, B.TexSymbolConfig_2Sd, B.TexSymbolConfig_OH5, B.TexSymbolConfig_6ql, B.TexSymbolConfig_GPg, B.TexSymbolConfig_R1J, B.TexSymbolConfig_dqr, B.TexSymbolConfig_pyS, B.TexSymbolConfig_cOy, B.TexSymbolConfig_Et6, B.TexSymbolConfig_kEr, B.TexSymbolConfig_5Pu, B.TexSymbolConfig_kmp, B.TexSymbolConfig_2pM, B.TexSymbolConfig_htn, B.TexSymbolConfig_KJU, B.TexSymbolConfig_N4X, B.TexSymbolConfig_8zq, B.TexSymbolConfig_xhi, B.TexSymbolConfig_WeI, B.TexSymbolConfig_oYX, B.TexSymbolConfig_oBD, B.TexSymbolConfig_xaK, B.TexSymbolConfig_inw, B.TexSymbolConfig_tFT, B.TexSymbolConfig_cWj, B.TexSymbolConfig_Vh7, B.TexSymbolConfig_D2d, B.TexSymbolConfig_1D5, B.TexSymbolConfig_qFl, B.TexSymbolConfig_oOD, B.TexSymbolConfig_nLg, B.TexSymbolConfig_rOQ, B.TexSymbolConfig_9Uz, B.TexSymbolConfig_3oW, B.TexSymbolConfig_Rqo, B.TexSymbolConfig_Mwp, B.TexSymbolConfig_yRb, B.TexSymbolConfig_LBz, B.TexSymbolConfig_eOR, B.TexSymbolConfig_Inm, B.TexSymbolConfig_YyP, B.TexSymbolConfig_IFq, B.TexSymbolConfig_O2L, B.TexSymbolConfig_sS6, B.TexSymbolConfig_DKW, B.TexSymbolConfig_WZi, B.TexSymbolConfig_NW5, B.TexSymbolConfig_5Qk, B.TexSymbolConfig_mQp, B.TexSymbolConfig_Lp5, B.TexSymbolConfig_6cM, B.TexSymbolConfig_bVG, B.TexSymbolConfig_eBF, B.TexSymbolConfig_6Ad, B.TexSymbolConfig_xU8, B.TexSymbolConfig_h7l, B.TexSymbolConfig_1mL, B.TexSymbolConfig_STb, B.TexSymbolConfig_3AX, B.TexSymbolConfig_mER, B.TexSymbolConfig_eOC, B.TexSymbolConfig_99l, B.TexSymbolConfig_BKZ, B.TexSymbolConfig_bw4, B.TexSymbolConfig_E5u, B.TexSymbolConfig_etr, B.TexSymbolConfig_LAT, B.TexSymbolConfig_fIw, B.TexSymbolConfig_jjp, B.TexSymbolConfig_CR3, B.TexSymbolConfig_qNo, B.TexSymbolConfig_EFm, B.TexSymbolConfig_M80, B.TexSymbolConfig_7z7, B.TexSymbolConfig_9pK, B.TexSymbolConfig_HC6, B.TexSymbolConfig_ZVV, B.TexSymbolConfig_9uT, B.TexSymbolConfig_o0I, B.TexSymbolConfig_MwN, B.TexSymbolConfig_EPs, B.TexSymbolConfig_Set, B.TexSymbolConfig_3Ba, B.TexSymbolConfig_WHI, B.TexSymbolConfig_YDi, B.TexSymbolConfig_cRl, B.TexSymbolConfig_BiP, B.TexSymbolConfig_pd6, B.TexSymbolConfig_ZxO, B.TexSymbolConfig_XWx, B.TexSymbolConfig_inG0, B.TexSymbolConfig_BDK, B.TexSymbolConfig_Kri, B.TexSymbolConfig_wII, B.TexSymbolConfig_yF5, B.TexSymbolConfig_lN4, B.TexSymbolConfig_pPh, B.TexSymbolConfig_5Pi, B.TexSymbolConfig_vuM, B.TexSymbolConfig_LkM, B.TexSymbolConfig_KEQ, B.TexSymbolConfig_dg8, B.TexSymbolConfig_pWx, B.TexSymbolConfig_BZa, B.TexSymbolConfig_yUu, B.TexSymbolConfig_DT6, B.TexSymbolConfig_F1O, B.TexSymbolConfig_Klo, B.TexSymbolConfig_wQn, B.TexSymbolConfig_YPx, B.TexSymbolConfig_uQw, B.TexSymbolConfig_SlJ, B.TexSymbolConfig_rlX, B.TexSymbolConfig_tRJ, B.TexSymbolConfig_Oqf, B.TexSymbolConfig_6V5, B.TexSymbolConfig_f0p, B.TexSymbolConfig_2hA, B.TexSymbolConfig_lr4, B.TexSymbolConfig_bMa, B.TexSymbolConfig_BWw, B.TexSymbolConfig_qFh, B.TexSymbolConfig_phT, B.TexSymbolConfig_pyb, B.TexSymbolConfig_r5C, B.TexSymbolConfig_iSQ, B.TexSymbolConfig_irg, B.TexSymbolConfig_vvl, B.TexSymbolConfig_GMf, B.TexSymbolConfig_Yq4, B.TexSymbolConfig_B93, B.TexSymbolConfig_JTC, B.TexSymbolConfig_bLN, B.TexSymbolConfig_F3z, B.TexSymbolConfig_FB9, B.TexSymbolConfig_v3q, B.TexSymbolConfig_3zs, B.TexSymbolConfig_JSR, B.TexSymbolConfig_pJU, B.TexSymbolConfig_unp, B.TexSymbolConfig_3Jq, B.TexSymbolConfig_8jX, B.TexSymbolConfig_oil, B.TexSymbolConfig_cEe, B.TexSymbolConfig_Yuu, B.TexSymbolConfig_zIf, B.TexSymbolConfig_28O, B.TexSymbolConfig_s3I, B.TexSymbolConfig_MsW, B.TexSymbolConfig_EUx, B.TexSymbolConfig_kfR, B.TexSymbolConfig_JbZ, B.TexSymbolConfig_QY8, B.TexSymbolConfig_noM, B.TexSymbolConfig_AG9, B.TexSymbolConfig_SZD, B.TexSymbolConfig_sWv, B.TexSymbolConfig_OmY, B.TexSymbolConfig_hWH, B.TexSymbolConfig_daS, B.TexSymbolConfig_JGA, B.TexSymbolConfig_xi1, B.TexSymbolConfig_VEM, B.TexSymbolConfig_ZdH, B.TexSymbolConfig_Cva, B.TexSymbolConfig_fF7, B.TexSymbolConfig_yM2, B.TexSymbolConfig_16r, B.TexSymbolConfig_AgP, B.TexSymbolConfig_v6d, B.TexSymbolConfig_bOp, B.TexSymbolConfig_sDa, B.TexSymbolConfig_XwA, B.TexSymbolConfig_X4k, B.TexSymbolConfig_vlK, B.TexSymbolConfig_UyA, B.TexSymbolConfig_hVI, B.TexSymbolConfig_L3s, B.TexSymbolConfig_Up0, B.TexSymbolConfig_fLF, B.TexSymbolConfig_Oa3, B.TexSymbolConfig_MZt, B.TexSymbolConfig_eXT, B.TexSymbolConfig_rPj, B.TexSymbolConfig_mmc, B.TexSymbolConfig_fvM, B.TexSymbolConfig_LyV, B.TexSymbolConfig_egV, B.TexSymbolConfig_ZVG, B.TexSymbolConfig_bo0, B.TexSymbolConfig_DGy, B.TexSymbolConfig_hRX, B.TexSymbolConfig_j5E, B.TexSymbolConfig_MJg, B.TexSymbolConfig_6Lu, B.TexSymbolConfig_XFJ, B.TexSymbolConfig_Adg, B.TexSymbolConfig_pfz, B.TexSymbolConfig_sZ8, B.TexSymbolConfig_LYn, B.TexSymbolConfig_uOn, B.TexSymbolConfig_WET, B.TexSymbolConfig_vzo, B.TexSymbolConfig_Aay, B.TexSymbolConfig_CuN, B.TexSymbolConfig_tLS, B.TexSymbolConfig_WJG, B.TexSymbolConfig_SDj, B.TexSymbolConfig_3D4, B.TexSymbolConfig_meu, B.TexSymbolConfig_VHn, B.TexSymbolConfig_pNX, B.TexSymbolConfig_Wn8, B.TexSymbolConfig_b8h, B.TexSymbolConfig_l7O, B.TexSymbolConfig_NlT, B.TexSymbolConfig_c4R, B.TexSymbolConfig_J7p, B.TexSymbolConfig_xLv, B.TexSymbolConfig_QCJ, B.TexSymbolConfig_KaP, B.TexSymbolConfig_iwZ, B.TexSymbolConfig_4Zp, B.TexSymbolConfig_NqZ, B.TexSymbolConfig_nC9, B.TexSymbolConfig_yAg, B.TexSymbolConfig_tix, B.TexSymbolConfig_u4w, B.TexSymbolConfig_GBv, B.TexSymbolConfig_WLk, B.TexSymbolConfig_ynQ, B.TexSymbolConfig_w8J, B.TexSymbolConfig_YMY, B.TexSymbolConfig_Xrg, B.TexSymbolConfig_9Ei, B.TexSymbolConfig_eSJ, B.TexSymbolConfig_DVX, B.TexSymbolConfig_lJc, B.TexSymbolConfig_v2W, B.TexSymbolConfig_Iun, B.TexSymbolConfig_g9W, B.TexSymbolConfig_nfb, B.TexSymbolConfig_WB0, B.TexSymbolConfig_qeA, B.TexSymbolConfig_fG0, B.TexSymbolConfig_wwT, B.TexSymbolConfig_18C, B.TexSymbolConfig_EFB, B.TexSymbolConfig_Myn, B.TexSymbolConfig_1XY, B.TexSymbolConfig_70y, B.TexSymbolConfig_8cz, B.TexSymbolConfig_9Ag, B.TexSymbolConfig_mQx, B.TexSymbolConfig_7kw, B.TexSymbolConfig_PCr, B.TexSymbolConfig_kod, B.TexSymbolConfig_iAa, B.TexSymbolConfig_pDO, B.TexSymbolConfig_Yon, B.TexSymbolConfig_b8M, B.TexSymbolConfig_fq5, B.TexSymbolConfig_VHH, B.TexSymbolConfig_LRz, B.TexSymbolConfig_SHa, B.TexSymbolConfig_6cJ, B.TexSymbolConfig_HFP, B.TexSymbolConfig_Lfp, B.TexSymbolConfig_6VK, B.TexSymbolConfig_5RE, B.TexSymbolConfig_RDo, B.TexSymbolConfig_JoQ, B.TexSymbolConfig_f8o, B.TexSymbolConfig_TYO, B.TexSymbolConfig_ouX, B.TexSymbolConfig_8pc, B.TexSymbolConfig_VBv, B.TexSymbolConfig_NWc, B.TexSymbolConfig_A1i, B.TexSymbolConfig_EM4, B.TexSymbolConfig_ISp, B.TexSymbolConfig_mjk, B.TexSymbolConfig_uEx, B.TexSymbolConfig_te9, B.TexSymbolConfig_Pon, B.TexSymbolConfig_VRk, B.TexSymbolConfig_op1, B.TexSymbolConfig_UUf, B.TexSymbolConfig_iqn, B.TexSymbolConfig_Uhg, B.TexSymbolConfig_p73, B.TexSymbolConfig_8gs, B.TexSymbolConfig_O2x, B.TexSymbolConfig_185, B.TexSymbolConfig_MQ4, B.TexSymbolConfig_KnC, B.TexSymbolConfig_Edq, B.TexSymbolConfig_DJa, B.TexSymbolConfig_ffx, B.TexSymbolConfig_3ir, B.TexSymbolConfig_3s9, B.TexSymbolConfig_BDM, B.TexSymbolConfig_KRD, B.TexSymbolConfig_Hl4, B.TexSymbolConfig_su5, B.TexSymbolConfig_SJb, B.TexSymbolConfig_u9Q, B.TexSymbolConfig_zWB, B.TexSymbolConfig_Bav, B.TexSymbolConfig_iYT, B.TexSymbolConfig_cAz, B.TexSymbolConfig_Gbi, B.TexSymbolConfig_UNd, B.TexSymbolConfig_V4z, B.TexSymbolConfig_Ztu, B.TexSymbolConfig_PfV, B.TexSymbolConfig_hY2, B.TexSymbolConfig_pRY, B.TexSymbolConfig_8AK, B.TexSymbolConfig_KYo, B.TexSymbolConfig_5FU, B.TexSymbolConfig_eh3, B.TexSymbolConfig_W15, B.TexSymbolConfig_Zb1, B.TexSymbolConfig_s1a, B.TexSymbolConfig_Cw8, B.TexSymbolConfig_9Jl, B.TexSymbolConfig_iqu, B.TexSymbolConfig_1XN, B.TexSymbolConfig_RVb, B.TexSymbolConfig_wMV, B.TexSymbolConfig_Vqy, B.TexSymbolConfig_OLK, B.TexSymbolConfig_61m, B.TexSymbolConfig_RVb, B.TexSymbolConfig_61m, B.TexSymbolConfig_RVb, B.TexSymbolConfig_lE0, B.TexSymbolConfig_AUm, B.TexSymbolConfig_1Yd, B.TexSymbolConfig_ztQ, B.TexSymbolConfig_OJs, B.TexSymbolConfig_1e8, B.TexSymbolConfig_1e8, B.TexSymbolConfig_Ewq, B.TexSymbolConfig_eup, B.TexSymbolConfig_FDA, B.TexSymbolConfig_MnY, B.TexSymbolConfig_mI9, B.TexSymbolConfig_CKF, B.TexSymbolConfig_ZPh, B.TexSymbolConfig_hQH, B.TexSymbolConfig_RAh, B.TexSymbolConfig_Zb1, B.TexSymbolConfig_Zb1, B.TexSymbolConfig_s1a, B.TexSymbolConfig_s1a, B.TexSymbolConfig_Cw8, B.TexSymbolConfig_9Jl, B.TexSymbolConfig_iqu, B.TexSymbolConfig_iqu, B.TexSymbolConfig_1XN, B.TexSymbolConfig_1XN, B.TexSymbolConfig_G3M, B.TexSymbolConfig_G3M, B.TexSymbolConfig_ovp, B.TexSymbolConfig_ovp, B.TexSymbolConfig_lJU, B.TexSymbolConfig_VjA, B.TexSymbolConfig_qfX, B.TexSymbolConfig_kFA, B.TexSymbolConfig_kFA, B.TexSymbolConfig_AgW, B.TexSymbolConfig_AgW, B.TexSymbolConfig_Fzw, B.TexSymbolConfig_j1j, B.TexSymbolConfig_$_false_null, B.TexSymbolConfig_$_false_null, B.TexSymbolConfig_Gdt, B.TexSymbolConfig___false_null, B.TexSymbolConfig___false_null, B.TexSymbolConfig_P7D, B.TexSymbolConfig_P7D, B.TexSymbolConfig_19L, B.TexSymbolConfig_19L, B.TexSymbolConfig_6Tf, B.TexSymbolConfig_UAC, B.TexSymbolConfig_Jqm, B.TexSymbolConfig_ot1, B.TexSymbolConfig_r4v, B.TexSymbolConfig_ClT, B.TexSymbolConfig_hu9, B.TexSymbolConfig_RHL, B.TexSymbolConfig_nBu, B.TexSymbolConfig_FTA, B.TexSymbolConfig_7LH, B.TexSymbolConfig_eld, B.TexSymbolConfig_kFC, B.TexSymbolConfig_4Q8, B.TexSymbolConfig_jG0, B.TexSymbolConfig_S6K], type$.ConstantStringMap_String_TexSymbolConfig);
    B.Map_Dgm7a = new C.GeneralConstantMap([B.Mode_0, B.Map_MYH09, B.Mode_1, B.Map_SXdse], C.findType("GeneralConstantMap<Mode,Map<String,TexSymbolConfig>>"));
    B.Object_bSF = {doubleleftarrow: 0, doublerightarrow: 1, leftarrow: 2, leftbrace: 3, leftbraceunder: 4, leftgroup: 5, leftgroupunder: 6, leftharpoon: 7, leftharpoonplus: 8, leftharpoondown: 9, leftharpoondownplus: 10, lefthook: 11, leftlinesegment: 12, leftmapsto: 13, leftToFrom: 14, longequal: 15, midbrace: 16, midbraceunder: 17, oiintSize1: 18, oiintSize2: 19, oiiintSize1: 20, oiiintSize2: 21, rightarrow: 22, rightbrace: 23, rightbraceunder: 24, rightgroup: 25, rightgroupunder: 26, rightharpoon: 27, rightharpoonplus: 28, rightharpoondown: 29, rightharpoondownplus: 30, righthook: 31, rightlinesegment: 32, rightToFrom: 33, twoheadleftarrow: 34, twoheadrightarrow: 35, tilde1: 36, tilde2: 37, tilde3: 38, tilde4: 39, vec: 40, widehat1: 41, widehat2: 42, widehat3: 43, widehat4: 44, widecheck1: 45, widecheck2: 46, widecheck3: 47, widecheck4: 48, baraboveleftarrow: 49, rightarrowabovebar: 50, baraboveshortleftharpoon: 51, rightharpoonaboveshortbar: 52, shortbaraboveleftharpoon: 53, shortrightharpoonabovebar: 54};
    B.Map_I87FN = new C.ConstantStringMap(B.Object_bSF, ["M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z", "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z", "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z", "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z", "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z", "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z", "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z", "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z", "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z", "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z", "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z", "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z", "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z", "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z", "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z", "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z", "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z", "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z", "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z", "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z", "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z", "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z", "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z", "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z", "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z", "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z", "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z", "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z", "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z", "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z", "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z", "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z", "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z", "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z", "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z", "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z", "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z", "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z", "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z", "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z", "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z", "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z", "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z", "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z", "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z", "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z", "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z", "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z", "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"], type$.ConstantStringMap_String_String);
    B.Map_LMMuq = new C.GeneralConstantMap([D.SingleActivator_uUl2, D.DirectionalFocusIntent_TraversalDirection_3, D.SingleActivator_uUl3, D.DirectionalFocusIntent_TraversalDirection_1, D.SingleActivator_uUl5, D.DirectionalFocusIntent_TraversalDirection_2, D.SingleActivator_uUl4, D.DirectionalFocusIntent_TraversalDirection_0], C.findType("GeneralConstantMap<SingleActivator,DirectionalFocusIntent>"));
    B._SliderAdjustmentType_2 = new A._SliderAdjustmentType(2, "up");
    B._AdjustSliderIntent__SliderAdjustmentType_2 = new A._AdjustSliderIntent(B._SliderAdjustmentType_2);
    B._SliderAdjustmentType_3 = new A._SliderAdjustmentType(3, "down");
    B._AdjustSliderIntent__SliderAdjustmentType_3 = new A._AdjustSliderIntent(B._SliderAdjustmentType_3);
    B.Map_LMmfw = new C.GeneralConstantMap([D.SingleActivator_uUl4, B._AdjustSliderIntent__SliderAdjustmentType_2, D.SingleActivator_uUl5, B._AdjustSliderIntent__SliderAdjustmentType_3, D.SingleActivator_uUl2, B._AdjustSliderIntent__SliderAdjustmentType_1, D.SingleActivator_uUl3, B._AdjustSliderIntent__SliderAdjustmentType_0], type$.GeneralConstantMap_ShortcutActivator_Intent);
    B.Object_wPV = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "\u2261": 10, "\u227a": 11, "\u227b": 12, "\u223c": 13, "\u2aaf": 14, "\u2ab0": 15, "\u2243": 16, "\u2223": 17, "\u226a": 18, "\u226b": 19, "\u224d": 20, "\u22c8": 21, "\u2323": 22, "\u2291": 23, "\u2292": 24, "\u2250": 25, "\u2322": 26, "\u220b": 27, "\u221d": 28, "\u22a2": 29, "\u22a3": 30, "\u2135": 31, "\u2200": 32, "\u210f": 33, "\u2203": 34, "\u2207": 35, "\u266d": 36, "\u2113": 37, "\u266e": 38, "\u2663": 39, "\u2118": 40, "\u266f": 41, "\u2662": 42, "\u211c": 43, "\u2661": 44, "\u2111": 45, "\u2660": 46, "\u23b1": 47, "\u23b0": 48, "\u27ef": 49, "\u27ee": 50, "\u2213": 51, "\u2296": 52, "\u228e": 53, "\u2293": 54, "\u2294": 55, "\u2240": 56, "\u27f5": 57, "\u21d0": 58, "\u27f8": 59, "\u27f6": 60, "\u21d2": 61, "\u27f9": 62, "\u2194": 63, "\u27f7": 64, "\u21d4": 65, "\u27fa": 66, "\u21a6": 67, "\u27fc": 68, "\u2197": 69, "\u21a9": 70, "\u21aa": 71, "\u2198": 72, "\u21bc": 73, "\u21c0": 74, "\u2199": 75, "\u21bd": 76, "\u21c1": 77, "\u2196": 78, "\u21cc": 79, "\u226e": 80, "\u2a87": 81, "\u2268": 82, "\u22e6": 83, "\u2a89": 84, "\u2280": 85, "\u22e0": 86, "\u22e8": 87, "\u2ab9": 88, "\u2241": 89, "\u2224": 90, "\u22ac": 91, "\u22ad": 92, "\u22ec": 93, "\u228a": 94, "\u2acb": 95, "\u226f": 96, "\u2a88": 97, "\u2269": 98, "\u22e7": 99, "\u2a8a": 100, "\u2281": 101, "\u22e1": 102, "\u22e9": 103, "\u2aba": 104, "\u2246": 105, "\u2226": 106, "\u22af": 107, "\u22ed": 108, "\u228b": 109, "\u2acc": 110, "\u22ae": 111, "\u2ab5": 112, "\u2ab6": 113, "\u219a": 114, "\u219b": 115, "\u21cd": 116, "\u21cf": 117, "\u21ae": 118, "\u21ce": 119, "\u2221": 120, "\u2132": 121, "\u2141": 122, "\u2222": 123, "\u2201": 124, "\xf0": 125, "\xa5": 126, "\u2713": 127, "\u2136": 128, "\u2138": 129, "\u2137": 130, "\u03dd": 131, "\u250c": 132, "\u2510": 133, "\u2514": 134, "\u2518": 135, "\u2266": 136, "\u2a7d": 137, "\u2a95": 138, "\u2272": 139, "\u2a85": 140, "\u224a": 141, "\u22d8": 142, "\u2276": 143, "\u22da": 144, "\u2a8b": 145, "\u2253": 146, "\u2252": 147, "\u223d": 148, "\u22cd": 149, "\u2ac5": 150, "\u22d0": 151, "\u228f": 152, "\u227c": 153, "\u22de": 154, "\u227e": 155, "\u2ab7": 156, "\u22a8": 157, "\u22aa": 158, "\u224f": 159, "\u224e": 160, "\u2267": 161, "\u2a7e": 162, "\u2a96": 163, "\u2273": 164, "\u2a86": 165, "\u22d9": 166, "\u2277": 167, "\u22db": 168, "\u2a8c": 169, "\u2256": 170, "\u2257": 171, "\u225c": 172, "\u2ac6": 173, "\u22d1": 174, "\u2290": 175, "\u227d": 176, "\u22df": 177, "\u227f": 178, "\u2ab8": 179, "\u22a9": 180, "\u226c": 181, "\u22d4": 182, "\u2234": 183, "\u2235": 184, "\u2242": 185, "\u2251": 186, "\u2214": 187, "\u22d2": 188, "\u22d3": 189, "\u2a5e": 190, "\u229f": 191, "\u229e": 192, "\u22c7": 193, "\u22c9": 194, "\u22ca": 195, "\u22cb": 196, "\u22cc": 197, "\u22cf": 198, "\u22ce": 199, "\u229d": 200, "\u229b": 201, "\u22ba": 202, "\u22a0": 203, "\u21e2": 204, "\u21e0": 205, "\u21c7": 206, "\u21c6": 207, "\u21da": 208, "\u219e": 209, "\u21a2": 210, "\u21ab": 211, "\u21cb": 212, "\u21b6": 213, "\u21ba": 214, "\u21b0": 215, "\u21c8": 216, "\u21bf": 217, "\u21c3": 218, "\u22b8": 219, "\u21ad": 220, "\u21c9": 221, "\u21c4": 222, "\u21a0": 223, "\u21a3": 224, "\u21ac": 225, "\u21b7": 226, "\u21bb": 227, "\u21b1": 228, "\u21ca": 229, "\u21be": 230, "\u21c2": 231, "\u21dd": 232, "\u21db": 233, "`": 234, "\u2220": 235, "\u221e": 236, "\u0393": 237, "\u0394": 238, "\u0398": 239, "\u039b": 240, "\u039e": 241, "\u03a0": 242, "\u03a3": 243, "\u03a5": 244, "\u03a6": 245, "\u03a8": 246, "\u03a9": 247, "\u0391": 248, "\u0392": 249, "\u0395": 250, "\u0396": 251, "\u0397": 252, "\u0399": 253, "\u039a": 254, "\u039c": 255, "\u039d": 256, "\u039f": 257, "\u03a1": 258, "\u03a4": 259, "\u03a7": 260, "\xac": 261, "\u03b1": 262, "\u03b2": 263, "\u03b3": 264, "\u03b4": 265, "\u03f5": 266, "\u03b6": 267, "\u03b7": 268, "\u03b8": 269, "\u03b9": 270, "\u03ba": 271, "\u03bb": 272, "\u03bc": 273, "\u03bd": 274, "\u03be": 275, "\u03bf": 276, "\u03c0": 277, "\u03c1": 278, "\u03c3": 279, "\u03c4": 280, "\u03c5": 281, "\u03d5": 282, "\u03c7": 283, "\u03c8": 284, "\u03c9": 285, "\u03b5": 286, "\u03d1": 287, "\u03d6": 288, "\u03f1": 289, "\u03c2": 290, "\u03c6": 291, "*": 292, "+": 293, "-": 294, "\u22c5": 295, "\xf7": 296, "\xb1": 297, "\xd7": 298, "\u2229": 299, "\u222a": 300, "\u2227": 301, "\u2228": 302, "(": 303, "[": 304, "\u27e8": 305, ")": 306, "]": 307, "?": 308, "!": 309, "\u27e9": 310, "=": 311, "<": 312, ">": 313, ":": 314, "\u2248": 315, "\u2245": 316, "\u2265": 317, "\u2208": 318, "\u2282": 319, "\u2283": 320, "\u2286": 321, "\u2287": 322, "\u2288": 323, "\u2289": 324, "\u2190": 325, "\u2264": 326, "\u2192": 327, "\u2271": 328, "\u2270": 329, ",": 330, ";": 331, "\u22bc": 332, "\u22bb": 333, "\u2299": 334, "\u2295": 335, "\u2297": 336, "\u2202": 337, "\u2298": 338, "\u229a": 339, "\u22a1": 340, "\u230a": 341, "\u230b": 342, "\u2308": 343, "\u2309": 344, "|": 345, "\u2191": 346, "\u21d1": 347, "\u2193": 348, "\u21d3": 349, "\u2195": 350, "\u21d5": 351, "\u2026": 352, "\u22ef": 353, "\u22f1": 354, "\u0131": 355, "\u0237": 356, "\xb0": 357, "\xa3": 358, "/": 359, "@": 360, ".": 361, '"': 362, A: 363, B: 364, C: 365, D: 366, E: 367, F: 368, G: 369, H: 370, I: 371, J: 372, K: 373, L: 374, M: 375, N: 376, O: 377, P: 378, Q: 379, R: 380, S: 381, T: 382, U: 383, V: 384, W: 385, X: 386, Y: 387, Z: 388, a: 389, b: 390, c: 391, d: 392, e: 393, f: 394, g: 395, h: 396, i: 397, j: 398, k: 399, l: 400, m: 401, n: 402, o: 403, p: 404, q: 405, r: 406, s: 407, t: 408, u: 409, v: 410, w: 411, x: 412, y: 413, z: 414, "\u2102": 415, "\u210d": 416, "\u2115": 417, "\u2119": 418, "\u211a": 419, "\u211d": 420, "\u2124": 421, "\u210e": 422, "\ud835\udc00": 423, "\ud835\udc34": 424, "\ud835\udc68": 425, "\ud835\udd04": 426, "\ud835\udda0": 427, "\ud835\uddd4": 428, "\ud835\ude08": 429, "\ud835\ude70": 430, "\ud835\udd38": 431, "\ud835\udc9c": 432, "\ud835\udc01": 433, "\ud835\udc35": 434, "\ud835\udc69": 435, "\ud835\udd05": 436, "\ud835\udda1": 437, "\ud835\uddd5": 438, "\ud835\ude09": 439, "\ud835\ude71": 440, "\ud835\udd39": 441, "\ud835\udc9d": 442, "\ud835\udc02": 443, "\ud835\udc36": 444, "\ud835\udc6a": 445, "\ud835\udd06": 446, "\ud835\udda2": 447, "\ud835\uddd6": 448, "\ud835\ude0a": 449, "\ud835\ude72": 450, "\ud835\udd3a": 451, "\ud835\udc9e": 452, "\ud835\udc03": 453, "\ud835\udc37": 454, "\ud835\udc6b": 455, "\ud835\udd07": 456, "\ud835\udda3": 457, "\ud835\uddd7": 458, "\ud835\ude0b": 459, "\ud835\ude73": 460, "\ud835\udd3b": 461, "\ud835\udc9f": 462, "\ud835\udc04": 463, "\ud835\udc38": 464, "\ud835\udc6c": 465, "\ud835\udd08": 466, "\ud835\udda4": 467, "\ud835\uddd8": 468, "\ud835\ude0c": 469, "\ud835\ude74": 470, "\ud835\udd3c": 471, "\ud835\udca0": 472, "\ud835\udc05": 473, "\ud835\udc39": 474, "\ud835\udc6d": 475, "\ud835\udd09": 476, "\ud835\udda5": 477, "\ud835\uddd9": 478, "\ud835\ude0d": 479, "\ud835\ude75": 480, "\ud835\udd3d": 481, "\ud835\udca1": 482, "\ud835\udc06": 483, "\ud835\udc3a": 484, "\ud835\udc6e": 485, "\ud835\udd0a": 486, "\ud835\udda6": 487, "\ud835\uddda": 488, "\ud835\ude0e": 489, "\ud835\ude76": 490, "\ud835\udd3e": 491, "\ud835\udca2": 492, "\ud835\udc07": 493, "\ud835\udc3b": 494, "\ud835\udc6f": 495, "\ud835\udd0b": 496, "\ud835\udda7": 497, "\ud835\udddb": 498, "\ud835\ude0f": 499, "\ud835\ude77": 500, "\ud835\udd3f": 501, "\ud835\udca3": 502, "\ud835\udc08": 503, "\ud835\udc3c": 504, "\ud835\udc70": 505, "\ud835\udd0c": 506, "\ud835\udda8": 507, "\ud835\udddc": 508, "\ud835\ude10": 509, "\ud835\ude78": 510, "\ud835\udd40": 511, "\ud835\udca4": 512, "\ud835\udc09": 513, "\ud835\udc3d": 514, "\ud835\udc71": 515, "\ud835\udd0d": 516, "\ud835\udda9": 517, "\ud835\udddd": 518, "\ud835\ude11": 519, "\ud835\ude79": 520, "\ud835\udd41": 521, "\ud835\udca5": 522, "\ud835\udc0a": 523, "\ud835\udc3e": 524, "\ud835\udc72": 525, "\ud835\udd0e": 526, "\ud835\uddaa": 527, "\ud835\uddde": 528, "\ud835\ude12": 529, "\ud835\ude7a": 530, "\ud835\udd42": 531, "\ud835\udca6": 532, "\ud835\udc0b": 533, "\ud835\udc3f": 534, "\ud835\udc73": 535, "\ud835\udd0f": 536, "\ud835\uddab": 537, "\ud835\udddf": 538, "\ud835\ude13": 539, "\ud835\ude7b": 540, "\ud835\udd43": 541, "\ud835\udca7": 542, "\ud835\udc0c": 543, "\ud835\udc40": 544, "\ud835\udc74": 545, "\ud835\udd10": 546, "\ud835\uddac": 547, "\ud835\udde0": 548, "\ud835\ude14": 549, "\ud835\ude7c": 550, "\ud835\udd44": 551, "\ud835\udca8": 552, "\ud835\udc0d": 553, "\ud835\udc41": 554, "\ud835\udc75": 555, "\ud835\udd11": 556, "\ud835\uddad": 557, "\ud835\udde1": 558, "\ud835\ude15": 559, "\ud835\ude7d": 560, "\ud835\udd45": 561, "\ud835\udca9": 562, "\ud835\udc0e": 563, "\ud835\udc42": 564, "\ud835\udc76": 565, "\ud835\udd12": 566, "\ud835\uddae": 567, "\ud835\udde2": 568, "\ud835\ude16": 569, "\ud835\ude7e": 570, "\ud835\udd46": 571, "\ud835\udcaa": 572, "\ud835\udc0f": 573, "\ud835\udc43": 574, "\ud835\udc77": 575, "\ud835\udd13": 576, "\ud835\uddaf": 577, "\ud835\udde3": 578, "\ud835\ude17": 579, "\ud835\ude7f": 580, "\ud835\udd47": 581, "\ud835\udcab": 582, "\ud835\udc10": 583, "\ud835\udc44": 584, "\ud835\udc78": 585, "\ud835\udd14": 586, "\ud835\uddb0": 587, "\ud835\udde4": 588, "\ud835\ude18": 589, "\ud835\ude80": 590, "\ud835\udd48": 591, "\ud835\udcac": 592, "\ud835\udc11": 593, "\ud835\udc45": 594, "\ud835\udc79": 595, "\ud835\udd15": 596, "\ud835\uddb1": 597, "\ud835\udde5": 598, "\ud835\ude19": 599, "\ud835\ude81": 600, "\ud835\udd49": 601, "\ud835\udcad": 602, "\ud835\udc12": 603, "\ud835\udc46": 604, "\ud835\udc7a": 605, "\ud835\udd16": 606, "\ud835\uddb2": 607, "\ud835\udde6": 608, "\ud835\ude1a": 609, "\ud835\ude82": 610, "\ud835\udd4a": 611, "\ud835\udcae": 612, "\ud835\udc13": 613, "\ud835\udc47": 614, "\ud835\udc7b": 615, "\ud835\udd17": 616, "\ud835\uddb3": 617, "\ud835\udde7": 618, "\ud835\ude1b": 619, "\ud835\ude83": 620, "\ud835\udd4b": 621, "\ud835\udcaf": 622, "\ud835\udc14": 623, "\ud835\udc48": 624, "\ud835\udc7c": 625, "\ud835\udd18": 626, "\ud835\uddb4": 627, "\ud835\udde8": 628, "\ud835\ude1c": 629, "\ud835\ude84": 630, "\ud835\udd4c": 631, "\ud835\udcb0": 632, "\ud835\udc15": 633, "\ud835\udc49": 634, "\ud835\udc7d": 635, "\ud835\udd19": 636, "\ud835\uddb5": 637, "\ud835\udde9": 638, "\ud835\ude1d": 639, "\ud835\ude85": 640, "\ud835\udd4d": 641, "\ud835\udcb1": 642, "\ud835\udc16": 643, "\ud835\udc4a": 644, "\ud835\udc7e": 645, "\ud835\udd1a": 646, "\ud835\uddb6": 647, "\ud835\uddea": 648, "\ud835\ude1e": 649, "\ud835\ude86": 650, "\ud835\udd4e": 651, "\ud835\udcb2": 652, "\ud835\udc17": 653, "\ud835\udc4b": 654, "\ud835\udc7f": 655, "\ud835\udd1b": 656, "\ud835\uddb7": 657, "\ud835\uddeb": 658, "\ud835\ude1f": 659, "\ud835\ude87": 660, "\ud835\udd4f": 661, "\ud835\udcb3": 662, "\ud835\udc18": 663, "\ud835\udc4c": 664, "\ud835\udc80": 665, "\ud835\udd1c": 666, "\ud835\uddb8": 667, "\ud835\uddec": 668, "\ud835\ude20": 669, "\ud835\ude88": 670, "\ud835\udd50": 671, "\ud835\udcb4": 672, "\ud835\udc19": 673, "\ud835\udc4d": 674, "\ud835\udc81": 675, "\ud835\udd1d": 676, "\ud835\uddb9": 677, "\ud835\udded": 678, "\ud835\ude21": 679, "\ud835\ude89": 680, "\ud835\udd51": 681, "\ud835\udcb5": 682, "\ud835\udc1a": 683, "\ud835\udc4e": 684, "\ud835\udc82": 685, "\ud835\udd1e": 686, "\ud835\uddba": 687, "\ud835\uddee": 688, "\ud835\ude22": 689, "\ud835\ude8a": 690, "\ud835\udc1b": 691, "\ud835\udc4f": 692, "\ud835\udc83": 693, "\ud835\udd1f": 694, "\ud835\uddbb": 695, "\ud835\uddef": 696, "\ud835\ude23": 697, "\ud835\ude8b": 698, "\ud835\udc1c": 699, "\ud835\udc50": 700, "\ud835\udc84": 701, "\ud835\udd20": 702, "\ud835\uddbc": 703, "\ud835\uddf0": 704, "\ud835\ude24": 705, "\ud835\ude8c": 706, "\ud835\udc1d": 707, "\ud835\udc51": 708, "\ud835\udc85": 709, "\ud835\udd21": 710, "\ud835\uddbd": 711, "\ud835\uddf1": 712, "\ud835\ude25": 713, "\ud835\ude8d": 714, "\ud835\udc1e": 715, "\ud835\udc52": 716, "\ud835\udc86": 717, "\ud835\udd22": 718, "\ud835\uddbe": 719, "\ud835\uddf2": 720, "\ud835\ude26": 721, "\ud835\ude8e": 722, "\ud835\udc1f": 723, "\ud835\udc53": 724, "\ud835\udc87": 725, "\ud835\udd23": 726, "\ud835\uddbf": 727, "\ud835\uddf3": 728, "\ud835\ude27": 729, "\ud835\ude8f": 730, "\ud835\udc20": 731, "\ud835\udc54": 732, "\ud835\udc88": 733, "\ud835\udd24": 734, "\ud835\uddc0": 735, "\ud835\uddf4": 736, "\ud835\ude28": 737, "\ud835\ude90": 738, "\ud835\udc21": 739, "\ud835\udc55": 740, "\ud835\udc89": 741, "\ud835\udd25": 742, "\ud835\uddc1": 743, "\ud835\uddf5": 744, "\ud835\ude29": 745, "\ud835\ude91": 746, "\ud835\udc22": 747, "\ud835\udc56": 748, "\ud835\udc8a": 749, "\ud835\udd26": 750, "\ud835\uddc2": 751, "\ud835\uddf6": 752, "\ud835\ude2a": 753, "\ud835\ude92": 754, "\ud835\udc23": 755, "\ud835\udc57": 756, "\ud835\udc8b": 757, "\ud835\udd27": 758, "\ud835\uddc3": 759, "\ud835\uddf7": 760, "\ud835\ude2b": 761, "\ud835\ude93": 762, "\ud835\udc24": 763, "\ud835\udc58": 764, "\ud835\udc8c": 765, "\ud835\udd28": 766, "\ud835\uddc4": 767, "\ud835\uddf8": 768, "\ud835\ude2c": 769, "\ud835\ude94": 770, "\ud835\udc25": 771, "\ud835\udc59": 772, "\ud835\udc8d": 773, "\ud835\udd29": 774, "\ud835\uddc5": 775, "\ud835\uddf9": 776, "\ud835\ude2d": 777, "\ud835\ude95": 778, "\ud835\udc26": 779, "\ud835\udc5a": 780, "\ud835\udc8e": 781, "\ud835\udd2a": 782, "\ud835\uddc6": 783, "\ud835\uddfa": 784, "\ud835\ude2e": 785, "\ud835\ude96": 786, "\ud835\udc27": 787, "\ud835\udc5b": 788, "\ud835\udc8f": 789, "\ud835\udd2b": 790, "\ud835\uddc7": 791, "\ud835\uddfb": 792, "\ud835\ude2f": 793, "\ud835\ude97": 794, "\ud835\udc28": 795, "\ud835\udc5c": 796, "\ud835\udc90": 797, "\ud835\udd2c": 798, "\ud835\uddc8": 799, "\ud835\uddfc": 800, "\ud835\ude30": 801, "\ud835\ude98": 802, "\ud835\udc29": 803, "\ud835\udc5d": 804, "\ud835\udc91": 805, "\ud835\udd2d": 806, "\ud835\uddc9": 807, "\ud835\uddfd": 808, "\ud835\ude31": 809, "\ud835\ude99": 810, "\ud835\udc2a": 811, "\ud835\udc5e": 812, "\ud835\udc92": 813, "\ud835\udd2e": 814, "\ud835\uddca": 815, "\ud835\uddfe": 816, "\ud835\ude32": 817, "\ud835\ude9a": 818, "\ud835\udc2b": 819, "\ud835\udc5f": 820, "\ud835\udc93": 821, "\ud835\udd2f": 822, "\ud835\uddcb": 823, "\ud835\uddff": 824, "\ud835\ude33": 825, "\ud835\ude9b": 826, "\ud835\udc2c": 827, "\ud835\udc60": 828, "\ud835\udc94": 829, "\ud835\udd30": 830, "\ud835\uddcc": 831, "\ud835\ude00": 832, "\ud835\ude34": 833, "\ud835\ude9c": 834, "\ud835\udc2d": 835, "\ud835\udc61": 836, "\ud835\udc95": 837, "\ud835\udd31": 838, "\ud835\uddcd": 839, "\ud835\ude01": 840, "\ud835\ude35": 841, "\ud835\ude9d": 842, "\ud835\udc2e": 843, "\ud835\udc62": 844, "\ud835\udc96": 845, "\ud835\udd32": 846, "\ud835\uddce": 847, "\ud835\ude02": 848, "\ud835\ude36": 849, "\ud835\ude9e": 850, "\ud835\udc2f": 851, "\ud835\udc63": 852, "\ud835\udc97": 853, "\ud835\udd33": 854, "\ud835\uddcf": 855, "\ud835\ude03": 856, "\ud835\ude37": 857, "\ud835\ude9f": 858, "\ud835\udc30": 859, "\ud835\udc64": 860, "\ud835\udc98": 861, "\ud835\udd34": 862, "\ud835\uddd0": 863, "\ud835\ude04": 864, "\ud835\ude38": 865, "\ud835\udea0": 866, "\ud835\udc31": 867, "\ud835\udc65": 868, "\ud835\udc99": 869, "\ud835\udd35": 870, "\ud835\uddd1": 871, "\ud835\ude05": 872, "\ud835\ude39": 873, "\ud835\udea1": 874, "\ud835\udc32": 875, "\ud835\udc66": 876, "\ud835\udc9a": 877, "\ud835\udd36": 878, "\ud835\uddd2": 879, "\ud835\ude06": 880, "\ud835\ude3a": 881, "\ud835\udea2": 882, "\ud835\udc33": 883, "\ud835\udc67": 884, "\ud835\udc9b": 885, "\ud835\udd37": 886, "\ud835\uddd3": 887, "\ud835\ude07": 888, "\ud835\ude3b": 889, "\ud835\udea3": 890, "\ud835\udd5c": 891, "\ud835\udfce": 892, "\ud835\udfe2": 893, "\ud835\udfec": 894, "\ud835\udff6": 895, "\ud835\udfcf": 896, "\ud835\udfe3": 897, "\ud835\udfed": 898, "\ud835\udff7": 899, "\ud835\udfd0": 900, "\ud835\udfe4": 901, "\ud835\udfee": 902, "\ud835\udff8": 903, "\ud835\udfd1": 904, "\ud835\udfe5": 905, "\ud835\udfef": 906, "\ud835\udff9": 907, "\ud835\udfd2": 908, "\ud835\udfe6": 909, "\ud835\udff0": 910, "\ud835\udffa": 911, "\ud835\udfd3": 912, "\ud835\udfe7": 913, "\ud835\udff1": 914, "\ud835\udffb": 915, "\ud835\udfd4": 916, "\ud835\udfe8": 917, "\ud835\udff2": 918, "\ud835\udffc": 919, "\ud835\udfd5": 920, "\ud835\udfe9": 921, "\ud835\udff3": 922, "\ud835\udffd": 923, "\ud835\udfd6": 924, "\ud835\udfea": 925, "\ud835\udff4": 926, "\ud835\udffe": 927, "\ud835\udfd7": 928, "\ud835\udfeb": 929, "\ud835\udff5": 930, "\ud835\udfff": 931, "\xc7": 932, "\xd0": 933, "\xde": 934, "\xe7": 935, "\xfe": 936, "\xa0": 937, " ": 938, "\xa7": 939, "\xb6": 940, "\xdf": 941, "\xe6": 942, "\u0153": 943, "\xf8": 944, "\xc6": 945, "\u0152": 946, "\xd8": 947, "'": 948, "\u2013": 949, "\u2014": 950, "\u2018": 951, "\u2019": 952, "\u201c": 953, "\u201d": 954, "\u231c": 955, "\u231d": 956, "\u231e": 957, "\u231f": 958, "\u22a5": 959, "\u2225": 960, "#": 961, "&": 962, "\u2020": 963, "\u2021": 964, "\u25ef": 965, "\u2219": 966, "\u2a3f": 967, "\u22ea": 968, "\u22eb": 969, "\u22b4": 970, "\u22b5": 971, "\u25b3": 972, "\u25bd": 973, "\u25ca": 974, "\u24c8": 975, "\xae": 976, "\u2204": 977, "\u2127": 978, "\u2035": 979, "\u25b2": 980, "\u25bc": 981, "\u25a0": 982, "\u29eb": 983, "\u2605": 984, "\u2571": 985, "\u2572": 986, "\u25a1": 987, "\u03f0": 988, "\u22d6": 989, "\u22b2": 990, "\u22d7": 991, "\u22b3": 992, "\u25c0": 993, "\u220d": 994, "\u25b6": 995, "\u2216": 996, $: 997, "%": 998, _: 999, "\u2032": 1000, "\u22a4": 1001, "\u2205": 1002, "\u2218": 1003, "\u221a": 1004, "\u0338": 1005, "\u22c4": 1006, "\u22c6": 1007, "\u25c3": 1008, "\u25b9": 1009, "{": 1010, "}": 1011, "\\": 1012, "\u2210": 1013, "\u22c1": 1014, "\u22c0": 1015, "\u2a04": 1016, "\u22c2": 1017, "\u22c3": 1018, "\u222b": 1019, "\u222c": 1020, "\u222d": 1021, "\u220f": 1022, "\u2211": 1023, "\u2a02": 1024, "\u2a01": 1025, "\u2a00": 1026, "\u222e": 1027, "\u222f": 1028, "\u2230": 1029, "\u2a06": 1030, "\u22ee": 1031, "\u02ca": 1032, "\u02cb": 1033, "\xa8": 1034, "~": 1035, "\u02c9": 1036, "\u02d8": 1037, "\u02c7": 1038, "^": 1039, "\u20d7": 1040, "\u02d9": 1041, "\u02da": 1042, "\u2720": 1043, "\u02c6": 1044, "\u02dc": 1045, "\u02dd": 1046};
    B.RenderConfig_oyG = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_7ww = new A.SymbolRenderConfig(B.RenderConfig_oyG, B.RenderConfig_oyG, null);
    B.RenderConfig_Ifc = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_3);
    B.SymbolRenderConfig_655 = new A.SymbolRenderConfig(B.RenderConfig_Ifc, null, null);
    B.RenderConfig_H9u = new A.RenderConfig(null, B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_hO6 = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, null);
    B.SymbolRenderConfig_pIU = new A.SymbolRenderConfig(B.RenderConfig_Ifc, null, B.SymbolRenderConfig_hO6);
    B.SymbolRenderConfig_TNs = new A.SymbolRenderConfig(B.RenderConfig_oyG, null, null);
    B.RenderConfig_9NU = new A.RenderConfig(null, B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_xQN = new A.SymbolRenderConfig(B.RenderConfig_9NU, null, null);
    B.SymbolRenderConfig_aNs = new A.SymbolRenderConfig(B.RenderConfig_oyG, null, B.SymbolRenderConfig_xQN);
    B.RenderConfig_H8a = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_5);
    B.SymbolRenderConfig_E2k = new A.SymbolRenderConfig(B.RenderConfig_H8a, null, null);
    B.RenderConfig_CDH = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_4);
    B.SymbolRenderConfig_3xg = new A.SymbolRenderConfig(B.RenderConfig_CDH, null, null);
    B.RenderConfig_N3n = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_2);
    B.SymbolRenderConfig_bWs = new A.SymbolRenderConfig(B.RenderConfig_N3n, null, null);
    B.RenderConfig_O9d = new A.RenderConfig("\ue010", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_jkE = new A.SymbolRenderConfig(B.RenderConfig_O9d, null, null);
    B.SymbolRenderConfig_sLr = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_jkE);
    B.RenderConfig_42u = new A.RenderConfig("\ue00c", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_3WK = new A.SymbolRenderConfig(B.RenderConfig_42u, null, null);
    B.SymbolRenderConfig_wL4 = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_3WK);
    B.RenderConfig_2Xh = new A.RenderConfig("\ue006", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_f8o = new A.SymbolRenderConfig(B.RenderConfig_2Xh, null, null);
    B.SymbolRenderConfig_TNL = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_f8o);
    B.RenderConfig_JIB = new A.RenderConfig("\ue01a", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_NpK = new A.SymbolRenderConfig(B.RenderConfig_JIB, null, null);
    B.SymbolRenderConfig_jHU = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_NpK);
    B.RenderConfig_XOY = new A.RenderConfig("\ue017", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_MdC = new A.SymbolRenderConfig(B.RenderConfig_XOY, null, null);
    B.SymbolRenderConfig_iER = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_MdC);
    B.RenderConfig_6L3 = new A.RenderConfig("\ue00f", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_9vX = new A.SymbolRenderConfig(B.RenderConfig_6L3, null, null);
    B.SymbolRenderConfig_Kxy = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_9vX);
    B.RenderConfig_0CX = new A.RenderConfig("\ue00d", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_Ois = new A.SymbolRenderConfig(B.RenderConfig_0CX, null, null);
    B.SymbolRenderConfig_JY9 = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_Ois);
    B.RenderConfig_60l = new A.RenderConfig("\ue007", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_8o4 = new A.SymbolRenderConfig(B.RenderConfig_60l, null, null);
    B.SymbolRenderConfig_PkC = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_8o4);
    B.RenderConfig_JeW = new A.RenderConfig("\ue01b", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_etb = new A.SymbolRenderConfig(B.RenderConfig_JeW, null, null);
    B.SymbolRenderConfig_rAR = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_etb);
    B.RenderConfig_DMX = new A.RenderConfig("\ue019", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_sX5 = new A.SymbolRenderConfig(B.RenderConfig_DMX, null, null);
    B.SymbolRenderConfig_TC7 = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_sX5);
    B.SymbolRenderConfig_nX2 = new A.SymbolRenderConfig(B.RenderConfig_9NU, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_Lxi = new A.SymbolRenderConfig(B.RenderConfig_9NU, B.RenderConfig_9NU, null);
    B.RenderConfig_ClX = new A.RenderConfig(null, B.FontOptions_52D, B.AtomType_4);
    B.SymbolRenderConfig_O0J = new A.SymbolRenderConfig(B.RenderConfig_ClX, null, null);
    B.RenderConfig_j5d = new A.RenderConfig(null, B.FontOptions_52D, B.AtomType_5);
    B.SymbolRenderConfig_KAC = new A.SymbolRenderConfig(B.RenderConfig_j5d, null, null);
    B.SymbolRenderConfig_Wrm = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_655);
    B.RenderConfig_80F = new A.RenderConfig(null, B.FontOptions_52D, B.AtomType_2);
    B.SymbolRenderConfig_NG3 = new A.SymbolRenderConfig(B.RenderConfig_80F, null, null);
    B.RenderConfig_rTn = new A.RenderConfig("\u2018", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_kyH = new A.SymbolRenderConfig(B.RenderConfig_rTn, B.RenderConfig_rTn, null);
    B.RenderConfig_FTo = new A.RenderConfig("A", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_50c = new A.SymbolRenderConfig(B.RenderConfig_FTo, null, null);
    B.RenderConfig_p4X = new A.RenderConfig("B", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_oVP = new A.SymbolRenderConfig(B.RenderConfig_p4X, null, null);
    B.RenderConfig_rXd = new A.RenderConfig("E", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_3H6 = new A.SymbolRenderConfig(B.RenderConfig_rXd, null, null);
    B.RenderConfig_YA8 = new A.RenderConfig("Z", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_jbl = new A.SymbolRenderConfig(B.RenderConfig_YA8, null, null);
    B.RenderConfig_8gr = new A.RenderConfig("H", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_jCZ = new A.SymbolRenderConfig(B.RenderConfig_8gr, null, null);
    B.RenderConfig_ivt = new A.RenderConfig("I", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Ma6 = new A.SymbolRenderConfig(B.RenderConfig_ivt, null, null);
    B.RenderConfig_ygu = new A.RenderConfig("K", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_z88 = new A.SymbolRenderConfig(B.RenderConfig_ygu, null, null);
    B.RenderConfig_1EM = new A.RenderConfig("M", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_1OT = new A.SymbolRenderConfig(B.RenderConfig_1EM, null, null);
    B.RenderConfig_gup = new A.RenderConfig("N", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_IbS = new A.SymbolRenderConfig(B.RenderConfig_gup, null, null);
    B.RenderConfig_foC = new A.RenderConfig("O", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Uac = new A.SymbolRenderConfig(B.RenderConfig_foC, null, null);
    B.RenderConfig_ZU9 = new A.RenderConfig("P", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_HPa = new A.SymbolRenderConfig(B.RenderConfig_ZU9, null, null);
    B.RenderConfig_wu9 = new A.RenderConfig("T", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_rtn = new A.SymbolRenderConfig(B.RenderConfig_wu9, null, null);
    B.RenderConfig_r3K = new A.RenderConfig("X", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_mqS = new A.SymbolRenderConfig(B.RenderConfig_r3K, null, null);
    B.FontOptions_8XX = new A.FontOptions("Math", D.FontWeight_3_400, B.FontStyle_1, B.List_empty21);
    B.RenderConfig_g2F = new A.RenderConfig(null, B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_913 = new A.SymbolRenderConfig(B.RenderConfig_g2F, null, null);
    B.RenderConfig_blt = new A.RenderConfig("\u2217", B.FontOptions_EtN, B.AtomType_2);
    B.SymbolRenderConfig_Z80 = new A.SymbolRenderConfig(B.RenderConfig_blt, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_01w = new A.SymbolRenderConfig(B.RenderConfig_N3n, B.RenderConfig_oyG, null);
    B.RenderConfig_dbu = new A.RenderConfig("\u2212", B.FontOptions_EtN, B.AtomType_2);
    B.SymbolRenderConfig_KZo = new A.SymbolRenderConfig(B.RenderConfig_dbu, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_nuE = new A.SymbolRenderConfig(B.RenderConfig_N3n, null, B.SymbolRenderConfig_NG3);
    B.SymbolRenderConfig_Hsi = new A.SymbolRenderConfig(B.RenderConfig_CDH, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_kJI = new A.SymbolRenderConfig(B.RenderConfig_H8a, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_cGj = new A.SymbolRenderConfig(B.RenderConfig_Ifc, B.RenderConfig_oyG, null);
    B.RenderConfig_KB9 = new A.RenderConfig("\ue016", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_G5M = new A.SymbolRenderConfig(B.RenderConfig_KB9, null, null);
    B.SymbolRenderConfig_YjQ = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_G5M);
    B.RenderConfig_loB = new A.RenderConfig("\ue018", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_h17 = new A.SymbolRenderConfig(B.RenderConfig_loB, null, null);
    B.SymbolRenderConfig_aFR = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_h17);
    B.RenderConfig_8ww = new A.RenderConfig("\ue00e", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_Rol = new A.SymbolRenderConfig(B.RenderConfig_8ww, null, null);
    B.SymbolRenderConfig_mXf = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_Rol);
    B.RenderConfig_XFZ = new A.RenderConfig("\ue011", B.FontOptions_52D, B.AtomType_3);
    B.SymbolRenderConfig_Zal = new A.SymbolRenderConfig(B.RenderConfig_XFZ, null, null);
    B.SymbolRenderConfig_OPI = new A.SymbolRenderConfig(B.RenderConfig_H9u, null, B.SymbolRenderConfig_Zal);
    B.RenderConfig_Zi4 = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_6);
    B.SymbolRenderConfig_CBI = new A.SymbolRenderConfig(B.RenderConfig_Zi4, B.RenderConfig_oyG, null);
    B.RenderConfig_wPH = new A.RenderConfig("\u2223", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_QNV = new A.SymbolRenderConfig(B.RenderConfig_wPH, B.RenderConfig_oyG, null);
    B.AtomType_7 = new A.AtomType(7, "inner");
    B.RenderConfig_dB3 = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_7);
    B.SymbolRenderConfig_GHW = new A.SymbolRenderConfig(B.RenderConfig_dB3, B.RenderConfig_dB3, null);
    B.SymbolRenderConfig_qAd = new A.SymbolRenderConfig(B.RenderConfig_dB3, null, null);
    B.RenderConfig_fvF = new A.RenderConfig(null, B.FontOptions_wpC, B.AtomType_0);
    B.SymbolRenderConfig_8xN = new A.SymbolRenderConfig(B.RenderConfig_fvF, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_ykh = new A.SymbolRenderConfig(B.RenderConfig_fvF, B.RenderConfig_fvF, null);
    B.SymbolRenderConfig_eWf = new A.SymbolRenderConfig(B.RenderConfig_g2F, B.RenderConfig_oyG, null);
    B.RenderConfig_OUx = new A.RenderConfig("C", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_Gse = new A.SymbolRenderConfig(B.RenderConfig_OUx, B.RenderConfig_OUx, null);
    B.RenderConfig_hjB = new A.RenderConfig("H", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_LTX = new A.SymbolRenderConfig(B.RenderConfig_hjB, B.RenderConfig_hjB, null);
    B.RenderConfig_po6 = new A.RenderConfig("N", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_yz5 = new A.SymbolRenderConfig(B.RenderConfig_po6, B.RenderConfig_po6, null);
    B.RenderConfig_3Vp = new A.RenderConfig("P", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_D7m = new A.SymbolRenderConfig(B.RenderConfig_3Vp, B.RenderConfig_3Vp, null);
    B.RenderConfig_Eeu = new A.RenderConfig("Q", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_bY1 = new A.SymbolRenderConfig(B.RenderConfig_Eeu, B.RenderConfig_Eeu, null);
    B.RenderConfig_COU = new A.RenderConfig("R", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_DsV = new A.SymbolRenderConfig(B.RenderConfig_COU, B.RenderConfig_COU, null);
    B.RenderConfig_tVL = new A.RenderConfig("Z", B.FontOptions_52D, B.AtomType_0);
    B.SymbolRenderConfig_F46 = new A.SymbolRenderConfig(B.RenderConfig_tVL, B.RenderConfig_tVL, null);
    B.RenderConfig_LVh = new A.RenderConfig("h", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_tJM = new A.SymbolRenderConfig(B.RenderConfig_LVh, B.RenderConfig_LVh, null);
    B.RenderConfig_QRf = new A.RenderConfig("A", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_6nA = new A.SymbolRenderConfig(B.RenderConfig_QRf, B.RenderConfig_FTo, null);
    B.RenderConfig_ZSO = new A.RenderConfig("B", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_OTF = new A.SymbolRenderConfig(B.RenderConfig_ZSO, B.RenderConfig_p4X, null);
    B.RenderConfig_VoH = new A.RenderConfig("C", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_EB3 = new A.RenderConfig("C", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_riz = new A.SymbolRenderConfig(B.RenderConfig_VoH, B.RenderConfig_EB3, null);
    B.RenderConfig_blQ = new A.RenderConfig("D", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_Z1t = new A.RenderConfig("D", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_yDA = new A.SymbolRenderConfig(B.RenderConfig_blQ, B.RenderConfig_Z1t, null);
    B.RenderConfig_Qs5 = new A.RenderConfig("E", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_RJC = new A.SymbolRenderConfig(B.RenderConfig_Qs5, B.RenderConfig_rXd, null);
    B.RenderConfig_9Qj = new A.RenderConfig("F", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_3W7 = new A.RenderConfig("F", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_sqA = new A.SymbolRenderConfig(B.RenderConfig_9Qj, B.RenderConfig_3W7, null);
    B.RenderConfig_dNA = new A.RenderConfig("G", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_tcb = new A.RenderConfig("G", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_geY = new A.SymbolRenderConfig(B.RenderConfig_dNA, B.RenderConfig_tcb, null);
    B.RenderConfig_bC9 = new A.RenderConfig("H", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_AxR = new A.SymbolRenderConfig(B.RenderConfig_bC9, B.RenderConfig_8gr, null);
    B.RenderConfig_FVd = new A.RenderConfig("I", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_E7N = new A.SymbolRenderConfig(B.RenderConfig_FVd, B.RenderConfig_ivt, null);
    B.RenderConfig_U6d = new A.RenderConfig("J", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_6Cj = new A.RenderConfig("J", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_vaL = new A.SymbolRenderConfig(B.RenderConfig_U6d, B.RenderConfig_6Cj, null);
    B.RenderConfig_eEt = new A.RenderConfig("K", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_Q87 = new A.SymbolRenderConfig(B.RenderConfig_eEt, B.RenderConfig_ygu, null);
    B.RenderConfig_N6B = new A.RenderConfig("L", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_iZn = new A.RenderConfig("L", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_5sM = new A.SymbolRenderConfig(B.RenderConfig_N6B, B.RenderConfig_iZn, null);
    B.RenderConfig_nhW = new A.RenderConfig("M", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_sYu = new A.SymbolRenderConfig(B.RenderConfig_nhW, B.RenderConfig_1EM, null);
    B.RenderConfig_jM9 = new A.RenderConfig("N", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_t6S = new A.SymbolRenderConfig(B.RenderConfig_jM9, B.RenderConfig_gup, null);
    B.RenderConfig_P55 = new A.RenderConfig("O", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_IZh = new A.SymbolRenderConfig(B.RenderConfig_P55, B.RenderConfig_foC, null);
    B.RenderConfig_Q2U = new A.RenderConfig("P", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_zFp = new A.SymbolRenderConfig(B.RenderConfig_Q2U, B.RenderConfig_ZU9, null);
    B.RenderConfig_JfV = new A.RenderConfig("Q", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_F0d = new A.RenderConfig("Q", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_hnE = new A.SymbolRenderConfig(B.RenderConfig_JfV, B.RenderConfig_F0d, null);
    B.RenderConfig_nTW = new A.RenderConfig("R", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_xKQ = new A.RenderConfig("R", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_0xS = new A.SymbolRenderConfig(B.RenderConfig_nTW, B.RenderConfig_xKQ, null);
    B.RenderConfig_YMw = new A.RenderConfig("S", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_G62 = new A.RenderConfig("S", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Bw2 = new A.SymbolRenderConfig(B.RenderConfig_YMw, B.RenderConfig_G62, null);
    B.RenderConfig_oFd = new A.RenderConfig("T", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_e1B = new A.SymbolRenderConfig(B.RenderConfig_oFd, B.RenderConfig_wu9, null);
    B.RenderConfig_Y8Y = new A.RenderConfig("U", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_A1r = new A.RenderConfig("U", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_3N7 = new A.SymbolRenderConfig(B.RenderConfig_Y8Y, B.RenderConfig_A1r, null);
    B.RenderConfig_r1L = new A.RenderConfig("V", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_D3c = new A.RenderConfig("V", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_ePR = new A.SymbolRenderConfig(B.RenderConfig_r1L, B.RenderConfig_D3c, null);
    B.RenderConfig_FiL = new A.RenderConfig("W", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_GXn = new A.RenderConfig("W", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_ojv = new A.SymbolRenderConfig(B.RenderConfig_FiL, B.RenderConfig_GXn, null);
    B.RenderConfig_LPX = new A.RenderConfig("X", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_3MV = new A.SymbolRenderConfig(B.RenderConfig_LPX, B.RenderConfig_r3K, null);
    B.RenderConfig_1uq = new A.RenderConfig("Y", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_xGy = new A.RenderConfig("Y", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_MuT = new A.SymbolRenderConfig(B.RenderConfig_1uq, B.RenderConfig_xGy, null);
    B.RenderConfig_8Aj = new A.RenderConfig("Z", B.FontOptions_8XX, B.AtomType_0);
    B.SymbolRenderConfig_PiG = new A.SymbolRenderConfig(B.RenderConfig_8Aj, B.RenderConfig_YA8, null);
    B.RenderConfig_cfk = new A.RenderConfig("a", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_nNi = new A.RenderConfig("a", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_ZUw = new A.SymbolRenderConfig(B.RenderConfig_cfk, B.RenderConfig_nNi, null);
    B.RenderConfig_ZDG = new A.RenderConfig("b", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_nj7 = new A.RenderConfig("b", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_As4 = new A.SymbolRenderConfig(B.RenderConfig_ZDG, B.RenderConfig_nj7, null);
    B.RenderConfig_Epf = new A.RenderConfig("c", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_i3o = new A.RenderConfig("c", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_aub = new A.SymbolRenderConfig(B.RenderConfig_Epf, B.RenderConfig_i3o, null);
    B.RenderConfig_weo = new A.RenderConfig("d", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_cqw = new A.RenderConfig("d", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_wH1 = new A.SymbolRenderConfig(B.RenderConfig_weo, B.RenderConfig_cqw, null);
    B.RenderConfig_7AC = new A.RenderConfig("e", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_JM0 = new A.RenderConfig("e", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_h3i = new A.SymbolRenderConfig(B.RenderConfig_7AC, B.RenderConfig_JM0, null);
    B.RenderConfig_oFz = new A.RenderConfig("f", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_315 = new A.RenderConfig("f", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_58i = new A.SymbolRenderConfig(B.RenderConfig_oFz, B.RenderConfig_315, null);
    B.RenderConfig_WcP = new A.RenderConfig("g", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_RKj = new A.RenderConfig("g", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_fbB = new A.SymbolRenderConfig(B.RenderConfig_WcP, B.RenderConfig_RKj, null);
    B.RenderConfig_aNj = new A.RenderConfig("h", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_1C0 = new A.SymbolRenderConfig(B.RenderConfig_LVh, B.RenderConfig_aNj, null);
    B.RenderConfig_01q = new A.RenderConfig("i", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_HlQ = new A.RenderConfig("i", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_hDD = new A.SymbolRenderConfig(B.RenderConfig_01q, B.RenderConfig_HlQ, null);
    B.RenderConfig_LE9 = new A.RenderConfig("j", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_2P1 = new A.RenderConfig("j", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_5wd = new A.SymbolRenderConfig(B.RenderConfig_LE9, B.RenderConfig_2P1, null);
    B.RenderConfig_9Kg = new A.RenderConfig("k", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_kcS = new A.RenderConfig("k", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_tDY = new A.SymbolRenderConfig(B.RenderConfig_9Kg, B.RenderConfig_kcS, null);
    B.RenderConfig_QMA = new A.RenderConfig("l", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_Hib = new A.RenderConfig("l", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_F6F = new A.SymbolRenderConfig(B.RenderConfig_QMA, B.RenderConfig_Hib, null);
    B.RenderConfig_cGf = new A.RenderConfig("m", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_G2P = new A.RenderConfig("m", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Ivl = new A.SymbolRenderConfig(B.RenderConfig_cGf, B.RenderConfig_G2P, null);
    B.RenderConfig_9Pa = new A.RenderConfig("n", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_Fbx = new A.RenderConfig("n", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_qYo = new A.SymbolRenderConfig(B.RenderConfig_9Pa, B.RenderConfig_Fbx, null);
    B.RenderConfig_Hww = new A.RenderConfig("o", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_L2t = new A.RenderConfig("o", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Ye1 = new A.SymbolRenderConfig(B.RenderConfig_Hww, B.RenderConfig_L2t, null);
    B.RenderConfig_25X = new A.RenderConfig("p", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_7Mm = new A.RenderConfig("p", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_WMG = new A.SymbolRenderConfig(B.RenderConfig_25X, B.RenderConfig_7Mm, null);
    B.RenderConfig_Iv7 = new A.RenderConfig("q", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_6AC = new A.RenderConfig("q", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_pTt = new A.SymbolRenderConfig(B.RenderConfig_Iv7, B.RenderConfig_6AC, null);
    B.RenderConfig_8yi = new A.RenderConfig("r", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_c7L = new A.RenderConfig("r", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Us7 = new A.SymbolRenderConfig(B.RenderConfig_8yi, B.RenderConfig_c7L, null);
    B.RenderConfig_eoP = new A.RenderConfig("s", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_myS = new A.RenderConfig("s", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_9VC = new A.SymbolRenderConfig(B.RenderConfig_eoP, B.RenderConfig_myS, null);
    B.RenderConfig_4cn = new A.RenderConfig("t", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_Ypk = new A.RenderConfig("t", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_gjj = new A.SymbolRenderConfig(B.RenderConfig_4cn, B.RenderConfig_Ypk, null);
    B.RenderConfig_nxz = new A.RenderConfig("u", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_DJ7 = new A.RenderConfig("u", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Qqk = new A.SymbolRenderConfig(B.RenderConfig_nxz, B.RenderConfig_DJ7, null);
    B.RenderConfig_IbX = new A.RenderConfig("v", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_8Lq = new A.RenderConfig("v", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_pmb = new A.SymbolRenderConfig(B.RenderConfig_IbX, B.RenderConfig_8Lq, null);
    B.RenderConfig_S3m = new A.RenderConfig("w", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_3Ps = new A.RenderConfig("w", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_taq = new A.SymbolRenderConfig(B.RenderConfig_S3m, B.RenderConfig_3Ps, null);
    B.RenderConfig_IUW = new A.RenderConfig("x", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_11E = new A.RenderConfig("x", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_HPK = new A.SymbolRenderConfig(B.RenderConfig_IUW, B.RenderConfig_11E, null);
    B.RenderConfig_BeC = new A.RenderConfig("y", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_yet = new A.RenderConfig("y", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_lft = new A.SymbolRenderConfig(B.RenderConfig_BeC, B.RenderConfig_yet, null);
    B.RenderConfig_Vb7 = new A.RenderConfig("z", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_u9J = new A.RenderConfig("z", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_HKM = new A.SymbolRenderConfig(B.RenderConfig_Vb7, B.RenderConfig_u9J, null);
    B.RenderConfig_O6t = new A.RenderConfig("0", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_rrg = new A.RenderConfig("0", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_VgL = new A.SymbolRenderConfig(B.RenderConfig_O6t, B.RenderConfig_rrg, null);
    B.RenderConfig_aYb = new A.RenderConfig("1", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_Imy = new A.RenderConfig("1", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_prr = new A.SymbolRenderConfig(B.RenderConfig_aYb, B.RenderConfig_Imy, null);
    B.RenderConfig_Vxd = new A.RenderConfig("2", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_x2F = new A.RenderConfig("2", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_I5e = new A.SymbolRenderConfig(B.RenderConfig_Vxd, B.RenderConfig_x2F, null);
    B.RenderConfig_NZN = new A.RenderConfig("3", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_aru = new A.RenderConfig("3", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_uK5 = new A.SymbolRenderConfig(B.RenderConfig_NZN, B.RenderConfig_aru, null);
    B.RenderConfig_wrT = new A.RenderConfig("4", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_6MN = new A.RenderConfig("4", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_JGL = new A.SymbolRenderConfig(B.RenderConfig_wrT, B.RenderConfig_6MN, null);
    B.RenderConfig_fYC = new A.RenderConfig("5", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_OXk = new A.RenderConfig("5", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_5bZ = new A.SymbolRenderConfig(B.RenderConfig_fYC, B.RenderConfig_OXk, null);
    B.RenderConfig_yTW = new A.RenderConfig("6", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_te5 = new A.RenderConfig("6", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Izz = new A.SymbolRenderConfig(B.RenderConfig_yTW, B.RenderConfig_te5, null);
    B.RenderConfig_ON4 = new A.RenderConfig("7", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_oE9 = new A.RenderConfig("7", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_HOF = new A.SymbolRenderConfig(B.RenderConfig_ON4, B.RenderConfig_oE9, null);
    B.RenderConfig_NrH = new A.RenderConfig("8", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_uPJ = new A.RenderConfig("8", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_9nt = new A.SymbolRenderConfig(B.RenderConfig_NrH, B.RenderConfig_uPJ, null);
    B.RenderConfig_9Vf = new A.RenderConfig("9", B.FontOptions_8XX, B.AtomType_0);
    B.RenderConfig_Laz = new A.RenderConfig("9", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_Cqq = new A.SymbolRenderConfig(B.RenderConfig_9Vf, B.RenderConfig_Laz, null);
    B.RenderConfig_eyw = new A.RenderConfig(null, B.FontOptions_EtN, B.AtomType_8);
    B.SymbolRenderConfig_6sa = new A.SymbolRenderConfig(B.RenderConfig_eyw, B.RenderConfig_eyw, null);
    B.RenderConfig_eZc = new A.RenderConfig("\xa0", B.FontOptions_EtN, B.AtomType_8);
    B.SymbolRenderConfig_J33 = new A.SymbolRenderConfig(B.RenderConfig_eZc, B.RenderConfig_eZc, null);
    B.SymbolRenderConfig_KR6 = new A.SymbolRenderConfig(null, B.RenderConfig_oyG, null);
    B.RenderConfig_jNb = new A.RenderConfig("\u2019", B.FontOptions_EtN, B.AtomType_0);
    B.SymbolRenderConfig_hxG = new A.SymbolRenderConfig(null, B.RenderConfig_jNb, null);
    B.RenderConfig_Jyh = new A.RenderConfig("\u250c", B.FontOptions_52D, B.AtomType_4);
    B.SymbolRenderConfig_8ox = new A.SymbolRenderConfig(B.RenderConfig_Jyh, null, null);
    B.RenderConfig_uaT = new A.RenderConfig("\u2510", B.FontOptions_52D, B.AtomType_5);
    B.SymbolRenderConfig_HzP = new A.SymbolRenderConfig(B.RenderConfig_uaT, null, null);
    B.RenderConfig_zOU = new A.RenderConfig("\u2514", B.FontOptions_52D, B.AtomType_4);
    B.SymbolRenderConfig_9It = new A.SymbolRenderConfig(B.RenderConfig_zOU, null, null);
    B.RenderConfig_mrq = new A.RenderConfig("\u2518", B.FontOptions_52D, B.AtomType_5);
    B.SymbolRenderConfig_INO = new A.SymbolRenderConfig(B.RenderConfig_mrq, null, null);
    B.SymbolRenderConfig_W6D = new A.SymbolRenderConfig(B.RenderConfig_Ifc, B.RenderConfig_oyG, B.SymbolRenderConfig_hO6);
    B.RenderConfig_hHC = new A.RenderConfig(null, B.FontOptions_EtN, null);
    B.SymbolRenderConfig_Osh = new A.SymbolRenderConfig(B.RenderConfig_N3n, B.RenderConfig_hHC, null);
    B.SymbolRenderConfig_W7T = new A.SymbolRenderConfig(B.RenderConfig_N3n, null, B.SymbolRenderConfig_hO6);
    B.SymbolRenderConfig_BPh = new A.SymbolRenderConfig(B.RenderConfig_N3n, null, B.SymbolRenderConfig_xQN);
    B.SymbolRenderConfig_mpJ = new A.SymbolRenderConfig(B.RenderConfig_80F, null, B.SymbolRenderConfig_hO6);
    B.RenderConfig_GRZ = new A.RenderConfig("\ue020", B.FontOptions_EtN, B.AtomType_3);
    B.SymbolRenderConfig_kDo = new A.SymbolRenderConfig(B.RenderConfig_GRZ, null, null);
    B.SymbolRenderConfig_JZB = new A.SymbolRenderConfig(B.RenderConfig_hHC, null, null);
    B.SymbolRenderConfig_4uM = new A.SymbolRenderConfig(B.RenderConfig_hHC, B.RenderConfig_hHC, null);
    B.SymbolRenderConfig_SFb = new A.SymbolRenderConfig(B.RenderConfig_hHC, B.RenderConfig_oyG, null);
    B.SymbolRenderConfig_Ec2 = new A.SymbolRenderConfig(null, B.RenderConfig_hHC, null);
    B.Map_LoF1O = new C.ConstantStringMap(B.Object_wPV, [B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_pIU, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_pIU, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_pIU, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_pIU, B.SymbolRenderConfig_655, B.SymbolRenderConfig_pIU, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_aNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_E2k, B.SymbolRenderConfig_3xg, B.SymbolRenderConfig_E2k, B.SymbolRenderConfig_3xg, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_sLr, B.SymbolRenderConfig_wL4, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_TNL, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_jHU, B.SymbolRenderConfig_iER, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_Kxy, B.SymbolRenderConfig_JY9, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_PkC, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_rAR, B.SymbolRenderConfig_TC7, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_nX2, B.SymbolRenderConfig_Lxi, B.SymbolRenderConfig_Lxi, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_O0J, B.SymbolRenderConfig_KAC, B.SymbolRenderConfig_O0J, B.SymbolRenderConfig_KAC, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_Wrm, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_kyH, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_50c, B.SymbolRenderConfig_oVP, B.SymbolRenderConfig_3H6, B.SymbolRenderConfig_jbl, B.SymbolRenderConfig_jCZ, B.SymbolRenderConfig_Ma6, B.SymbolRenderConfig_z88, B.SymbolRenderConfig_1OT, B.SymbolRenderConfig_IbS, B.SymbolRenderConfig_Uac, B.SymbolRenderConfig_HPa, B.SymbolRenderConfig_rtn, B.SymbolRenderConfig_mqS, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_913, B.SymbolRenderConfig_Z80, B.SymbolRenderConfig_01w, B.SymbolRenderConfig_KZo, B.SymbolRenderConfig_nuE, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_Hsi, B.SymbolRenderConfig_Hsi, B.SymbolRenderConfig_3xg, B.SymbolRenderConfig_kJI, B.SymbolRenderConfig_kJI, B.SymbolRenderConfig_kJI, B.SymbolRenderConfig_kJI, B.SymbolRenderConfig_E2k, B.SymbolRenderConfig_cGj, B.SymbolRenderConfig_cGj, B.SymbolRenderConfig_cGj, B.SymbolRenderConfig_cGj, B.SymbolRenderConfig_pIU, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_YjQ, B.SymbolRenderConfig_aFR, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_mXf, B.SymbolRenderConfig_OPI, B.SymbolRenderConfig_CBI, B.SymbolRenderConfig_CBI, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_3xg, B.SymbolRenderConfig_E2k, B.SymbolRenderConfig_3xg, B.SymbolRenderConfig_E2k, B.SymbolRenderConfig_QNV, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_655, B.SymbolRenderConfig_GHW, B.SymbolRenderConfig_qAd, B.SymbolRenderConfig_qAd, B.SymbolRenderConfig_8xN, B.SymbolRenderConfig_8xN, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_ykh, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_Gse, B.SymbolRenderConfig_LTX, B.SymbolRenderConfig_yz5, B.SymbolRenderConfig_D7m, B.SymbolRenderConfig_bY1, B.SymbolRenderConfig_DsV, B.SymbolRenderConfig_F46, B.SymbolRenderConfig_tJM, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_6nA, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_OTF, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_riz, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_yDA, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_RJC, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_sqA, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_geY, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_AxR, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_E7N, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_vaL, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_Q87, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_5sM, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_sYu, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_t6S, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_IZh, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_zFp, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_hnE, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_0xS, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_Bw2, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_e1B, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_3N7, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ePR, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_ojv, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_3MV, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_MuT, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_PiG, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_ZUw, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_As4, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_aub, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_wH1, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_h3i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_58i, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_fbB, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_1C0, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_hDD, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_5wd, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_F6F, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_Ivl, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_qYo, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_Ye1, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_WMG, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_pTt, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_Us7, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_9VC, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_gjj, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_Qqk, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_pmb, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_taq, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_HPK, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_lft, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_HKM, B.SymbolRenderConfig_tDY, B.SymbolRenderConfig_VgL, B.SymbolRenderConfig_VgL, B.SymbolRenderConfig_VgL, B.SymbolRenderConfig_VgL, B.SymbolRenderConfig_prr, B.SymbolRenderConfig_prr, B.SymbolRenderConfig_prr, B.SymbolRenderConfig_prr, B.SymbolRenderConfig_I5e, B.SymbolRenderConfig_I5e, B.SymbolRenderConfig_I5e, B.SymbolRenderConfig_I5e, B.SymbolRenderConfig_uK5, B.SymbolRenderConfig_uK5, B.SymbolRenderConfig_uK5, B.SymbolRenderConfig_uK5, B.SymbolRenderConfig_JGL, B.SymbolRenderConfig_JGL, B.SymbolRenderConfig_JGL, B.SymbolRenderConfig_JGL, B.SymbolRenderConfig_5bZ, B.SymbolRenderConfig_5bZ, B.SymbolRenderConfig_5bZ, B.SymbolRenderConfig_5bZ, B.SymbolRenderConfig_Izz, B.SymbolRenderConfig_Izz, B.SymbolRenderConfig_Izz, B.SymbolRenderConfig_Izz, B.SymbolRenderConfig_HOF, B.SymbolRenderConfig_HOF, B.SymbolRenderConfig_HOF, B.SymbolRenderConfig_HOF, B.SymbolRenderConfig_9nt, B.SymbolRenderConfig_9nt, B.SymbolRenderConfig_9nt, B.SymbolRenderConfig_9nt, B.SymbolRenderConfig_Cqq, B.SymbolRenderConfig_Cqq, B.SymbolRenderConfig_Cqq, B.SymbolRenderConfig_Cqq, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_eWf, B.SymbolRenderConfig_6sa, B.SymbolRenderConfig_J33, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_hxG, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_KR6, B.SymbolRenderConfig_8ox, B.SymbolRenderConfig_HzP, B.SymbolRenderConfig_9It, B.SymbolRenderConfig_INO, B.SymbolRenderConfig_655, B.SymbolRenderConfig_W6D, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_01w, B.SymbolRenderConfig_01w, B.SymbolRenderConfig_Osh, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_W7T, B.SymbolRenderConfig_BPh, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_Lxi, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_xQN, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_mpJ, B.SymbolRenderConfig_NG3, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_hO6, B.SymbolRenderConfig_nuE, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_aNs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_kDo, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_bWs, B.SymbolRenderConfig_Hsi, B.SymbolRenderConfig_kJI, B.SymbolRenderConfig_7ww, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_TNs, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_SFb, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_SFb, B.SymbolRenderConfig_JZB, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_4uM, B.SymbolRenderConfig_Lxi, B.SymbolRenderConfig_Ec2, B.SymbolRenderConfig_Ec2, B.SymbolRenderConfig_Ec2], C.findType("ConstantStringMap<String,SymbolRenderConfig>"));
    B.Object_n7F = {display: 0, displayCramped: 1, text: 2, textCramped: 3, script: 4, scriptCramped: 5, scriptscript: 6, scriptscriptCramped: 7};
    B.Map_MRjU2 = new C.ConstantStringMap(B.Object_n7F, [B.MathStyle_0, B.MathStyle_1, B.MathStyle_2, B.MathStyle_3, B.MathStyle_4, B.MathStyle_5, B.MathStyle_6, B.MathStyle_7], C.findType("ConstantStringMap<String,MathStyle>"));
    B.Object_2zP = {"\\cancel": 0, "\\bcancel": 1, "\\xcancel": 2, "\\sout": 3};
    B.List_updiagonalstrike = C._setArrayType(makeConstList(["updiagonalstrike"]), type$.JSArray_String);
    B.List_downdiagonalstrike = C._setArrayType(makeConstList(["downdiagonalstrike"]), type$.JSArray_String);
    B.List_0Gb = C._setArrayType(makeConstList(["updiagonalstrike, downdiagonalstrike"]), type$.JSArray_String);
    B.List_horizontalstrike = C._setArrayType(makeConstList(["horizontalstrike"]), type$.JSArray_String);
    B.Map_MxbnW = new C.ConstantStringMap(B.Object_2zP, [B.List_updiagonalstrike, B.List_downdiagonalstrike, B.List_0Gb, B.List_horizontalstrike], type$.ConstantStringMap_of_String_and_List_String);
    B.Object_42N = {"\\bigl": 0, "\\Bigl": 1, "\\biggl": 2, "\\Biggl": 3, "\\bigr": 4, "\\Bigr": 5, "\\biggr": 6, "\\Biggr": 7, "\\bigm": 8, "\\Bigm": 9, "\\biggm": 10, "\\Biggm": 11, "\\big": 12, "\\Big": 13, "\\bigg": 14, "\\Bigg": 15};
    B.Map_PP6Nv = new C.ConstantStringMap(B.Object_42N, [B.AtomType_4, B.AtomType_4, B.AtomType_4, B.AtomType_4, B.AtomType_5, B.AtomType_5, B.AtomType_5, B.AtomType_5, B.AtomType_3, B.AtomType_3, B.AtomType_3, B.AtomType_3, B.AtomType_0, B.AtomType_0, B.AtomType_0, B.AtomType_0], type$.ConstantStringMap_String_AtomType);
    B.Map_PPymm = new C.ConstantStringMap(B.Object_42N, [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], type$.ConstantStringMap_String_int);
    B.Object_UdF = {vec: 0, oiintSize1: 1, oiintSize2: 2, oiiintSize1: 3, oiiintSize2: 4};
    B.List_wbl = C._setArrayType(makeConstList([0.471, 0.714]), type$.JSArray_double);
    B.List_cxD = C._setArrayType(makeConstList([0.957, 0.499]), type$.JSArray_double);
    B.List_8Bc = C._setArrayType(makeConstList([1.472, 0.659]), type$.JSArray_double);
    B.List_0md = C._setArrayType(makeConstList([1.304, 0.499]), type$.JSArray_double);
    B.List_d0Y = C._setArrayType(makeConstList([1.98, 0.659]), type$.JSArray_double);
    B.Map_RARog = new C.ConstantStringMap(B.Object_UdF, [B.List_wbl, B.List_cxD, B.List_8Bc, B.List_0md, B.List_d0Y], type$.ConstantStringMap_of_String_and_List_double);
    B.Object_kZd = {"\\underleftarrow": 0, "\\underrightarrow": 1, "\\underleftrightarrow": 2, "\\undergroup": 3, "\\utilde": 4, "\\underline": 5};
    B.Map_ROG3o = new C.ConstantStringMap(B.Object_kZd, ["\u2190", "\u2192", "\u2194", "\u23e0", "~", "\xaf"], type$.ConstantStringMap_String_String);
    B.Object_vDU = {"\u2191": 0, "\u2193": 1, "\u2195": 2, "\u21d1": 3, "\u21d3": 4, "\u21d5": 5, "|": 6, "\u2016": 7, "\u2223": 8, "\u2225": 9, "(": 10, ")": 11, "[": 12, "]": 13, "{": 14, "}": 15, "\u230a": 16, "\u230b": 17, "\u2308": 18, "\u2309": 19, "\u27ee": 20, "\u27ef": 21, "\u23b0": 22, "\u23b1": 23};
    B.StackDelimiterConf_aUw = new A.StackDelimiterConf("\u2191", null, "\u23d0", "\u23d0", B.FontOptions_TfV);
    B.StackDelimiterConf_nRT = new A.StackDelimiterConf("\u23d0", null, "\u23d0", "\u2193", B.FontOptions_TfV);
    B.StackDelimiterConf_flE = new A.StackDelimiterConf("\u2191", null, "\u23d0", "\u2193", B.FontOptions_TfV);
    B.StackDelimiterConf_KUy = new A.StackDelimiterConf("\u21d1", null, "\u2016", "\u2016", B.FontOptions_TfV);
    B.StackDelimiterConf_CyC = new A.StackDelimiterConf("\u2016", null, "\u2016", "\u21d3", B.FontOptions_TfV);
    B.StackDelimiterConf_NXx = new A.StackDelimiterConf("\u21d1", null, "\u2016", "\u21d3", B.FontOptions_TfV);
    B.StackDelimiterConf_MlG = new A.StackDelimiterConf("\u2223", null, "\u2223", "\u2223", B.FontOptions_TfV);
    B.StackDelimiterConf_AOn = new A.StackDelimiterConf("\u2016", null, "\u2016", "\u2016", B.FontOptions_TfV);
    B.StackDelimiterConf_ia9 = new A.StackDelimiterConf("\u2225", null, "\u2225", "\u2225", B.FontOptions_TfV);
    B.StackDelimiterConf_etv = new A.StackDelimiterConf("\u239b", null, "\u239c", "\u239d", B.FontOptions_OkI);
    B.StackDelimiterConf_qGs = new A.StackDelimiterConf("\u239e", null, "\u239f", "\u23a0", B.FontOptions_OkI);
    B.StackDelimiterConf_6iY = new A.StackDelimiterConf("\u23a1", null, "\u23a2", "\u23a3", B.FontOptions_OkI);
    B.StackDelimiterConf_jkd = new A.StackDelimiterConf("\u23a4", null, "\u23a5", "\u23a6", B.FontOptions_OkI);
    B.StackDelimiterConf_UlK = new A.StackDelimiterConf("\u23a7", "\u23a8", "\u23aa", "\u23a9", B.FontOptions_OkI);
    B.StackDelimiterConf_jF2 = new A.StackDelimiterConf("\u23ab", "\u23ac", "\u23aa", "\u23ad", B.FontOptions_OkI);
    B.StackDelimiterConf_Eby = new A.StackDelimiterConf("\u23a2", null, "\u23a2", "\u23a3", B.FontOptions_OkI);
    B.StackDelimiterConf_zSW = new A.StackDelimiterConf("\u23a5", null, "\u23a5", "\u23a6", B.FontOptions_OkI);
    B.StackDelimiterConf_ply = new A.StackDelimiterConf("\u23a1", null, "\u23a2", "\u23a2", B.FontOptions_OkI);
    B.StackDelimiterConf_ptJ = new A.StackDelimiterConf("\u23a4", null, "\u23a5", "\u23a5", B.FontOptions_OkI);
    B.StackDelimiterConf_txm = new A.StackDelimiterConf("\u23a7", null, "\u23aa", "\u23a9", B.FontOptions_OkI);
    B.StackDelimiterConf_xFU = new A.StackDelimiterConf("\u23ab", null, "\u23aa", "\u23ad", B.FontOptions_OkI);
    B.StackDelimiterConf_CpE = new A.StackDelimiterConf("\u23a7", null, "\u23aa", "\u23ad", B.FontOptions_OkI);
    B.StackDelimiterConf_oAG = new A.StackDelimiterConf("\u23ab", null, "\u23aa", "\u23a9", B.FontOptions_OkI);
    B.Map_TifNQ = new C.ConstantStringMap(B.Object_vDU, [B.StackDelimiterConf_aUw, B.StackDelimiterConf_nRT, B.StackDelimiterConf_flE, B.StackDelimiterConf_KUy, B.StackDelimiterConf_CyC, B.StackDelimiterConf_NXx, B.StackDelimiterConf_MlG, B.StackDelimiterConf_AOn, B.StackDelimiterConf_MlG, B.StackDelimiterConf_ia9, B.StackDelimiterConf_etv, B.StackDelimiterConf_qGs, B.StackDelimiterConf_6iY, B.StackDelimiterConf_jkd, B.StackDelimiterConf_UlK, B.StackDelimiterConf_jF2, B.StackDelimiterConf_Eby, B.StackDelimiterConf_zSW, B.StackDelimiterConf_ply, B.StackDelimiterConf_ptJ, B.StackDelimiterConf_txm, B.StackDelimiterConf_xFU, B.StackDelimiterConf_CpE, B.StackDelimiterConf_oAG], C.findType("ConstantStringMap<String,StackDelimiterConf>"));
    B.List_wwh = C._setArrayType(makeConstList(["\\not"]), type$.JSArray_String);
    B.FunctionSpec_rzf = new A.FunctionSpec(1, false, true, false, A.katex_ext___notHandler$closure(), type$.FunctionSpec_GreenNode);
    B.Map_V9azN = new C.GeneralConstantMap([B.List_wwh, B.FunctionSpec_rzf], type$.GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode);
    B.Object_0dO = {pt: 0, mm: 1, cm: 2, inches: 3, bp: 4, pc: 5, dd: 6, cc: 7, nd: 8, nc: 9, sp: 10, px: 11, ex: 12, em: 13, mu: 14, lp: 15, cssEm: 16};
    B.Map_VFR9N = new C.ConstantStringMap(B.Object_0dO, [B.Unit_0, B.Unit_1, B.Unit_2, B.Unit_3, B.Unit_4, B.Unit_5, B.Unit_6, B.Unit_7, B.Unit_8, B.Unit_9, B.Unit_10, B.Unit_11, B.Unit_12, B.Unit_13, B.Unit_14, B.Unit_15, B.Unit_16], C.findType("ConstantStringMap<String,Unit>"));
    B.Object_0vB = {svg: 0, g: 1, a: 2, use: 3, symbol: 4, mask: 5, pattern: 6, radialGradient: 7, linearGradient: 8, clipPath: 9, image: 10, text: 11, tspan: 12};
    B.Map_VVevv = new C.ConstantStringMap(B.Object_0vB, [A.parser__Elements_svg$closure(), A.parser__Elements_g$closure(), A.parser__Elements_g$closure(), A.parser__Elements_use$closure(), A.parser__Elements_symbol$closure(), A.parser__Elements_symbol$closure(), A.parser__Elements_pattern$closure(), A.parser__Elements_radialGradient$closure(), A.parser__Elements_linearGradient$closure(), A.parser__Elements_clipPath$closure(), A.parser__Elements_image$closure(), A.parser__Elements_textOrTspan$closure(), A.parser__Elements_textOrTspan$closure()], C.findType("ConstantStringMap<String,~(SvgParser,bool)>"));
    B.Object_ibZ = {"\u219a": 0, "\u219b": 1, "\u21ae": 2, "\u21cd": 3, "\u21cf": 4, "\u21ce": 5, "\u2209": 6, "\u220c": 7, "\u2224": 8, "\u2226": 9, "\u2241": 10, "\u2244": 11, "\u2247": 12, "\u2249": 13, "\u226d": 14, "\u2260": 15, "\u2262": 16, "\u226e": 17, "\u226f": 18, "\u2270": 19, "\u2271": 20, "\u2274": 21, "\u2275": 22, "\u2278": 23, "\u2279": 24, "\u2280": 25, "\u2281": 26, "\u2284": 27, "\u2285": 28, "\u2288": 29, "\u2289": 30, "\u22ac": 31, "\u22ad": 32, "\u22ae": 33, "\u22af": 34, "\u22e0": 35, "\u22e1": 36, "\u22e2": 37, "\u22e3": 38, "\u22ea": 39, "\u22eb": 40, "\u22ec": 41, "\u22ed": 42, "\u2204": 43};
    B.List_6GS = C._setArrayType(makeConstList(["\u0338", "\u2190"]), type$.JSArray_String);
    B.List_FbX = C._setArrayType(makeConstList(["\u0338", "\u2192"]), type$.JSArray_String);
    B.List_HyE = C._setArrayType(makeConstList(["\u0338", "\u2194"]), type$.JSArray_String);
    B.List_iR1 = C._setArrayType(makeConstList(["\u0338", "\u21d0"]), type$.JSArray_String);
    B.List_SnV = C._setArrayType(makeConstList(["\u0338", "\u21d2"]), type$.JSArray_String);
    B.List_8oi = C._setArrayType(makeConstList(["\u0338", "\u21d4"]), type$.JSArray_String);
    B.List_2ep = C._setArrayType(makeConstList(["\u0338", "\u2208"]), type$.JSArray_String);
    B.List_bCQ = C._setArrayType(makeConstList(["\u0338", "\u220b"]), type$.JSArray_String);
    B.List_Ftr = C._setArrayType(makeConstList(["\u0338", "\u2223"]), type$.JSArray_String);
    B.List_OdQ = C._setArrayType(makeConstList(["\u0338", "\u2225"]), type$.JSArray_String);
    B.List_w25 = C._setArrayType(makeConstList(["\u0338", "\u223c"]), type$.JSArray_String);
    B.List_WGe = C._setArrayType(makeConstList(["\u0338", "\u2243"]), type$.JSArray_String);
    B.List_nDQ = C._setArrayType(makeConstList(["\u0338", "\u2245"]), type$.JSArray_String);
    B.List_3e3 = C._setArrayType(makeConstList(["\u0338", "\u2248"]), type$.JSArray_String);
    B.List_dDH = C._setArrayType(makeConstList(["\u0338", "\u224d"]), type$.JSArray_String);
    B.List_xcU = C._setArrayType(makeConstList(["\u0338", "="]), type$.JSArray_String);
    B.List_XId = C._setArrayType(makeConstList(["\u0338", "\u2261"]), type$.JSArray_String);
    B.List_35M = C._setArrayType(makeConstList(["\u0338", "<"]), type$.JSArray_String);
    B.List_VzI = C._setArrayType(makeConstList(["\u0338", ">"]), type$.JSArray_String);
    B.List_RXE = C._setArrayType(makeConstList(["\u0338", "\u2264"]), type$.JSArray_String);
    B.List_Msu = C._setArrayType(makeConstList(["\u0338", "\u2265"]), type$.JSArray_String);
    B.List_b7p = C._setArrayType(makeConstList(["\u0338", "\u2272"]), type$.JSArray_String);
    B.List_oaG = C._setArrayType(makeConstList(["\u0338", "\u2273"]), type$.JSArray_String);
    B.List_sxj = C._setArrayType(makeConstList(["\u0338", "\u2276"]), type$.JSArray_String);
    B.List_vOD = C._setArrayType(makeConstList(["\u0338", "\u2277"]), type$.JSArray_String);
    B.List_zKt = C._setArrayType(makeConstList(["\u0338", "\u227a"]), type$.JSArray_String);
    B.List_Ij0 = C._setArrayType(makeConstList(["\u0338", "\u227b"]), type$.JSArray_String);
    B.List_pza = C._setArrayType(makeConstList(["\u0338", "\u2282"]), type$.JSArray_String);
    B.List_fXT = C._setArrayType(makeConstList(["\u0338", "\u2283"]), type$.JSArray_String);
    B.List_XYO = C._setArrayType(makeConstList(["\u0338", "\u2286"]), type$.JSArray_String);
    B.List_lNZ = C._setArrayType(makeConstList(["\u0338", "\u2287"]), type$.JSArray_String);
    B.List_ZZo = C._setArrayType(makeConstList(["\u0338", "\u22a2"]), type$.JSArray_String);
    B.List_B1q = C._setArrayType(makeConstList(["\u0338", "\u22a8"]), type$.JSArray_String);
    B.List_tYC = C._setArrayType(makeConstList(["\u0338", "\u22a9"]), type$.JSArray_String);
    B.List_Ulr = C._setArrayType(makeConstList(["\u0338", "\u22ab"]), type$.JSArray_String);
    B.List_g9f = C._setArrayType(makeConstList(["\u0338", "\u227c"]), type$.JSArray_String);
    B.List_R38 = C._setArrayType(makeConstList(["\u0338", "\u227d"]), type$.JSArray_String);
    B.List_p7M = C._setArrayType(makeConstList(["\u0338", "\u2291"]), type$.JSArray_String);
    B.List_vuP = C._setArrayType(makeConstList(["\u0338", "\u2292"]), type$.JSArray_String);
    B.List_RV4 = C._setArrayType(makeConstList(["\u0338", "\u22b2"]), type$.JSArray_String);
    B.List_6P9 = C._setArrayType(makeConstList(["\u0338", "\u22b3"]), type$.JSArray_String);
    B.List_BEv = C._setArrayType(makeConstList(["\u0338", "\u22b4"]), type$.JSArray_String);
    B.List_aGW = C._setArrayType(makeConstList(["\u0338", "\u22b5"]), type$.JSArray_String);
    B.List_vLj = C._setArrayType(makeConstList(["\u0338", "\u2203"]), type$.JSArray_String);
    B.Map_W7r5a = new C.ConstantStringMap(B.Object_ibZ, [B.List_6GS, B.List_FbX, B.List_HyE, B.List_iR1, B.List_SnV, B.List_8oi, B.List_2ep, B.List_bCQ, B.List_Ftr, B.List_OdQ, B.List_w25, B.List_WGe, B.List_nDQ, B.List_3e3, B.List_dDH, B.List_xcU, B.List_XId, B.List_35M, B.List_VzI, B.List_RXE, B.List_Msu, B.List_b7p, B.List_oaG, B.List_sxj, B.List_vOD, B.List_zKt, B.List_Ij0, B.List_pza, B.List_fXT, B.List_XYO, B.List_lNZ, B.List_ZZo, B.List_B1q, B.List_tYC, B.List_Ulr, B.List_g9f, B.List_R38, B.List_p7M, B.List_vuP, B.List_RV4, B.List_6P9, B.List_BEv, B.List_aGW, B.List_vLj], type$.ConstantStringMap_of_String_and_List_String);
    B.Object_zz3 = {aliceblue: 0, antiquewhite: 1, aqua: 2, aquamarine: 3, azure: 4, beige: 5, bisque: 6, black: 7, blanchedalmond: 8, blue: 9, blueviolet: 10, brown: 11, burlywood: 12, cadetblue: 13, chartreuse: 14, chocolate: 15, coral: 16, cornflowerblue: 17, cornsilk: 18, crimson: 19, cyan: 20, darkblue: 21, darkcyan: 22, darkgoldenrod: 23, darkgray: 24, darkgreen: 25, darkgrey: 26, darkkhaki: 27, darkmagenta: 28, darkolivegreen: 29, darkorange: 30, darkorchid: 31, darkred: 32, darksalmon: 33, darkseagreen: 34, darkslateblue: 35, darkslategray: 36, darkslategrey: 37, darkturquoise: 38, darkviolet: 39, deeppink: 40, deepskyblue: 41, dimgray: 42, dimgrey: 43, dodgerblue: 44, firebrick: 45, floralwhite: 46, forestgreen: 47, fuchsia: 48, gainsboro: 49, ghostwhite: 50, gold: 51, goldenrod: 52, gray: 53, grey: 54, green: 55, greenyellow: 56, honeydew: 57, hotpink: 58, indianred: 59, indigo: 60, ivory: 61, khaki: 62, lavender: 63, lavenderblush: 64, lawngreen: 65, lemonchiffon: 66, lightblue: 67, lightcoral: 68, lightcyan: 69, lightgoldenrodyellow: 70, lightgray: 71, lightgreen: 72, lightgrey: 73, lightpink: 74, lightsalmon: 75, lightseagreen: 76, lightskyblue: 77, lightslategray: 78, lightslategrey: 79, lightsteelblue: 80, lightyellow: 81, lime: 82, limegreen: 83, linen: 84, magenta: 85, maroon: 86, mediumaquamarine: 87, mediumblue: 88, mediumorchid: 89, mediumpurple: 90, mediumseagreen: 91, mediumslateblue: 92, mediumspringgreen: 93, mediumturquoise: 94, mediumvioletred: 95, midnightblue: 96, mintcream: 97, mistyrose: 98, moccasin: 99, navajowhite: 100, navy: 101, oldlace: 102, olive: 103, olivedrab: 104, orange: 105, orangered: 106, orchid: 107, palegoldenrod: 108, palegreen: 109, paleturquoise: 110, palevioletred: 111, papayawhip: 112, peachpuff: 113, peru: 114, pink: 115, plum: 116, powderblue: 117, purple: 118, red: 119, rosybrown: 120, royalblue: 121, saddlebrown: 122, salmon: 123, sandybrown: 124, seagreen: 125, seashell: 126, sienna: 127, silver: 128, skyblue: 129, slateblue: 130, slategray: 131, slategrey: 132, snow: 133, springgreen: 134, steelblue: 135, tan: 136, teal: 137, thistle: 138, tomato: 139, transparent: 140, turquoise: 141, violet: 142, wheat: 143, white: 144, whitesmoke: 145, yellow: 146, yellowgreen: 147};
    B.Color_4293982463 = new A.Color0(4293982463);
    B.Color_4294634455 = new A.Color0(4294634455);
    B.Color_4278255615 = new A.Color0(4278255615);
    B.Color_4286578644 = new A.Color0(4286578644);
    B.Color_4293984255 = new A.Color0(4293984255);
    B.Color_4294309340 = new A.Color0(4294309340);
    B.Color_4294960324 = new A.Color0(4294960324);
    B.Color_4294962125 = new A.Color0(4294962125);
    B.Color_4278190335 = new A.Color0(4278190335);
    B.Color_4287245282 = new A.Color0(4287245282);
    B.Color_4289014314 = new A.Color0(4289014314);
    B.Color_4292786311 = new A.Color0(4292786311);
    B.Color_4284456608 = new A.Color0(4284456608);
    B.Color_4286578432 = new A.Color0(4286578432);
    B.Color_4291979550 = new A.Color0(4291979550);
    B.Color_4294934352 = new A.Color0(4294934352);
    B.Color_4284782061 = new A.Color0(4284782061);
    B.Color_4294965468 = new A.Color0(4294965468);
    B.Color_4292613180 = new A.Color0(4292613180);
    B.Color_4278190219 = new A.Color0(4278190219);
    B.Color_4278225803 = new A.Color0(4278225803);
    B.Color_4290283019 = new A.Color0(4290283019);
    B.Color_4289309097 = new A.Color0(4289309097);
    B.Color_4278215680 = new A.Color0(4278215680);
    B.Color_4290623339 = new A.Color0(4290623339);
    B.Color_4287299723 = new A.Color0(4287299723);
    B.Color_4283788079 = new A.Color0(4283788079);
    B.Color_4294937600 = new A.Color0(4294937600);
    B.Color_4288230092 = new A.Color0(4288230092);
    B.Color_4287299584 = new A.Color0(4287299584);
    B.Color_4293498490 = new A.Color0(4293498490);
    B.Color_4287609999 = new A.Color0(4287609999);
    B.Color_4282924427 = new A.Color0(4282924427);
    B.Color_4281290575 = new A.Color0(4281290575);
    B.Color_4278243025 = new A.Color0(4278243025);
    B.Color_4287889619 = new A.Color0(4287889619);
    B.Color_4294907027 = new A.Color0(4294907027);
    B.Color_4278239231 = new A.Color0(4278239231);
    B.Color_4285098345 = new A.Color0(4285098345);
    B.Color_4280193279 = new A.Color0(4280193279);
    B.Color_4289864226 = new A.Color0(4289864226);
    B.Color_4294966000 = new A.Color0(4294966000);
    B.Color_4280453922 = new A.Color0(4280453922);
    B.Color_4294902015 = new A.Color0(4294902015);
    B.Color_4292664540 = new A.Color0(4292664540);
    B.Color_4294506751 = new A.Color0(4294506751);
    B.Color_4294956800 = new A.Color0(4294956800);
    B.Color_4292519200 = new A.Color0(4292519200);
    B.Color_4286611584 = new A.Color0(4286611584);
    B.Color_4278222848 = new A.Color0(4278222848);
    B.Color_4289593135 = new A.Color0(4289593135);
    B.Color_4293984240 = new A.Color0(4293984240);
    B.Color_4294928820 = new A.Color0(4294928820);
    B.Color_4291648604 = new A.Color0(4291648604);
    B.Color_4283105410 = new A.Color0(4283105410);
    B.Color_4294967280 = new A.Color0(4294967280);
    B.Color_4293977740 = new A.Color0(4293977740);
    B.Color_4293322490 = new A.Color0(4293322490);
    B.Color_4294963445 = new A.Color0(4294963445);
    B.Color_4286381056 = new A.Color0(4286381056);
    B.Color_4294965965 = new A.Color0(4294965965);
    B.Color_4289583334 = new A.Color0(4289583334);
    B.Color_4293951616 = new A.Color0(4293951616);
    B.Color_4292935679 = new A.Color0(4292935679);
    B.Color_4294638290 = new A.Color0(4294638290);
    B.Color_4292072403 = new A.Color0(4292072403);
    B.Color_4287688336 = new A.Color0(4287688336);
    B.Color_4294948545 = new A.Color0(4294948545);
    B.Color_4294942842 = new A.Color0(4294942842);
    B.Color_4280332970 = new A.Color0(4280332970);
    B.Color_4287090426 = new A.Color0(4287090426);
    B.Color_4286023833 = new A.Color0(4286023833);
    B.Color_4289774814 = new A.Color0(4289774814);
    B.Color_4294967264 = new A.Color0(4294967264);
    B.Color_4278255360 = new A.Color0(4278255360);
    B.Color_4281519410 = new A.Color0(4281519410);
    B.Color_4294635750 = new A.Color0(4294635750);
    B.Color_4286578688 = new A.Color0(4286578688);
    B.Color_4284927402 = new A.Color0(4284927402);
    B.Color_4278190285 = new A.Color0(4278190285);
    B.Color_4290401747 = new A.Color0(4290401747);
    B.Color_4287852763 = new A.Color0(4287852763);
    B.Color_4282168177 = new A.Color0(4282168177);
    B.Color_4286277870 = new A.Color0(4286277870);
    B.Color_4278254234 = new A.Color0(4278254234);
    B.Color_4282962380 = new A.Color0(4282962380);
    B.Color_4291237253 = new A.Color0(4291237253);
    B.Color_4279834992 = new A.Color0(4279834992);
    B.Color_4294311930 = new A.Color0(4294311930);
    B.Color_4294960353 = new A.Color0(4294960353);
    B.Color_4294960309 = new A.Color0(4294960309);
    B.Color_4294958765 = new A.Color0(4294958765);
    B.Color_4278190208 = new A.Color0(4278190208);
    B.Color_4294833638 = new A.Color0(4294833638);
    B.Color_4286611456 = new A.Color0(4286611456);
    B.Color_4285238819 = new A.Color0(4285238819);
    B.Color_4294944000 = new A.Color0(4294944000);
    B.Color_4294919424 = new A.Color0(4294919424);
    B.Color_4292505814 = new A.Color0(4292505814);
    B.Color_4293847210 = new A.Color0(4293847210);
    B.Color_4288215960 = new A.Color0(4288215960);
    B.Color_4289720046 = new A.Color0(4289720046);
    B.Color_4292571283 = new A.Color0(4292571283);
    B.Color_4294963157 = new A.Color0(4294963157);
    B.Color_4294957753 = new A.Color0(4294957753);
    B.Color_4291659071 = new A.Color0(4291659071);
    B.Color_4294951115 = new A.Color0(4294951115);
    B.Color_4292714717 = new A.Color0(4292714717);
    B.Color_4289781990 = new A.Color0(4289781990);
    B.Color_4286578816 = new A.Color0(4286578816);
    B.Color_4294901760 = new A.Color0(4294901760);
    B.Color_4290547599 = new A.Color0(4290547599);
    B.Color_4282477025 = new A.Color0(4282477025);
    B.Color_4287317267 = new A.Color0(4287317267);
    B.Color_4294606962 = new A.Color0(4294606962);
    B.Color_4294222944 = new A.Color0(4294222944);
    B.Color_4281240407 = new A.Color0(4281240407);
    B.Color_4294964718 = new A.Color0(4294964718);
    B.Color_4288696877 = new A.Color0(4288696877);
    B.Color_4290822336 = new A.Color0(4290822336);
    B.Color_4287090411 = new A.Color0(4287090411);
    B.Color_4285160141 = new A.Color0(4285160141);
    B.Color_4285563024 = new A.Color0(4285563024);
    B.Color_4294966010 = new A.Color0(4294966010);
    B.Color_4278255487 = new A.Color0(4278255487);
    B.Color_4282811060 = new A.Color0(4282811060);
    B.Color_4291998860 = new A.Color0(4291998860);
    B.Color_4278222976 = new A.Color0(4278222976);
    B.Color_4292394968 = new A.Color0(4292394968);
    B.Color_4294927175 = new A.Color0(4294927175);
    B.Color_16777215 = new A.Color0(16777215);
    B.Color_4282441936 = new A.Color0(4282441936);
    B.Color_4293821166 = new A.Color0(4293821166);
    B.Color_4294303411 = new A.Color0(4294303411);
    B.Color_4294309365 = new A.Color0(4294309365);
    B.Color_4294967040 = new A.Color0(4294967040);
    B.Color_4288335154 = new A.Color0(4288335154);
    B.Map_Ymznx = new C.ConstantStringMap(B.Object_zz3, [B.Color_4293982463, B.Color_4294634455, B.Color_4278255615, B.Color_4286578644, B.Color_4293984255, B.Color_4294309340, B.Color_4294960324, B.Color_4278190080, B.Color_4294962125, B.Color_4278190335, B.Color_4287245282, B.Color_4289014314, B.Color_4292786311, B.Color_4284456608, B.Color_4286578432, B.Color_4291979550, B.Color_4294934352, B.Color_4284782061, B.Color_4294965468, B.Color_4292613180, B.Color_4278255615, B.Color_4278190219, B.Color_4278225803, B.Color_4290283019, B.Color_4289309097, B.Color_4278215680, B.Color_4289309097, B.Color_4290623339, B.Color_4287299723, B.Color_4283788079, B.Color_4294937600, B.Color_4288230092, B.Color_4287299584, B.Color_4293498490, B.Color_4287609999, B.Color_4282924427, B.Color_4281290575, B.Color_4281290575, B.Color_4278243025, B.Color_4287889619, B.Color_4294907027, B.Color_4278239231, B.Color_4285098345, B.Color_4285098345, B.Color_4280193279, B.Color_4289864226, B.Color_4294966000, B.Color_4280453922, B.Color_4294902015, B.Color_4292664540, B.Color_4294506751, B.Color_4294956800, B.Color_4292519200, B.Color_4286611584, B.Color_4286611584, B.Color_4278222848, B.Color_4289593135, B.Color_4293984240, B.Color_4294928820, B.Color_4291648604, B.Color_4283105410, B.Color_4294967280, B.Color_4293977740, B.Color_4293322490, B.Color_4294963445, B.Color_4286381056, B.Color_4294965965, B.Color_4289583334, B.Color_4293951616, B.Color_4292935679, B.Color_4294638290, B.Color_4292072403, B.Color_4287688336, B.Color_4292072403, B.Color_4294948545, B.Color_4294942842, B.Color_4280332970, B.Color_4287090426, B.Color_4286023833, B.Color_4286023833, B.Color_4289774814, B.Color_4294967264, B.Color_4278255360, B.Color_4281519410, B.Color_4294635750, B.Color_4294902015, B.Color_4286578688, B.Color_4284927402, B.Color_4278190285, B.Color_4290401747, B.Color_4287852763, B.Color_4282168177, B.Color_4286277870, B.Color_4278254234, B.Color_4282962380, B.Color_4291237253, B.Color_4279834992, B.Color_4294311930, B.Color_4294960353, B.Color_4294960309, B.Color_4294958765, B.Color_4278190208, B.Color_4294833638, B.Color_4286611456, B.Color_4285238819, B.Color_4294944000, B.Color_4294919424, B.Color_4292505814, B.Color_4293847210, B.Color_4288215960, B.Color_4289720046, B.Color_4292571283, B.Color_4294963157, B.Color_4294957753, B.Color_4291659071, B.Color_4294951115, B.Color_4292714717, B.Color_4289781990, B.Color_4286578816, B.Color_4294901760, B.Color_4290547599, B.Color_4282477025, B.Color_4287317267, B.Color_4294606962, B.Color_4294222944, B.Color_4281240407, B.Color_4294964718, B.Color_4288696877, B.Color_4290822336, B.Color_4287090411, B.Color_4285160141, B.Color_4285563024, B.Color_4285563024, B.Color_4294966010, B.Color_4278255487, B.Color_4282811060, B.Color_4291998860, B.Color_4278222976, B.Color_4292394968, B.Color_4294927175, B.Color_16777215, B.Color_4282441936, B.Color_4293821166, B.Color_4294303411, B.Color_4294967295, B.Color_4294309365, B.Color_4294967040, B.Color_4288335154], C.findType("ConstantStringMap<String,Color0>"));
    B.Object_a9U = {"\\mathop": 0, "\\mathord": 1, "\\mathbin": 2, "\\mathrel": 3, "\\mathopen": 4, "\\mathclose": 5, "\\mathpunct": 6, "\\mathinner": 7};
    B.Map_ZC8v1 = new C.ConstantStringMap(B.Object_a9U, [B.AtomType_1, B.AtomType_0, B.AtomType_2, B.AtomType_3, B.AtomType_4, B.AtomType_5, B.AtomType_6, B.AtomType_7], type$.ConstantStringMap_String_AtomType);
    B.Object_fVf = {"|": 0, ":": 1};
    B.MatrixSeparatorStyle_0 = new A.MatrixSeparatorStyle(0, "solid");
    B.MatrixSeparatorStyle_1 = new A.MatrixSeparatorStyle(1, "dashed");
    B.Map_a0fCI = new C.ConstantStringMap(B.Object_fVf, [B.MatrixSeparatorStyle_0, B.MatrixSeparatorStyle_1], C.findType("ConstantStringMap<String,MatrixSeparatorStyle>"));
    B.Object_A89 = {",": 0, "\\not": 1, "+": 2, "=": 3, "<": 4, ">": 5, "-": 6, "*": 7, ":": 8, "\\DOTSB": 9, "\\coprod": 10, "\\bigvee": 11, "\\bigwedge": 12, "\\biguplus": 13, "\\bigcap": 14, "\\bigcup": 15, "\\prod": 16, "\\sum": 17, "\\bigotimes": 18, "\\bigoplus": 19, "\\bigodot": 20, "\\bigsqcup": 21, "\\And": 22, "\\longrightarrow": 23, "\\Longrightarrow": 24, "\\longleftarrow": 25, "\\Longleftarrow": 26, "\\longleftrightarrow": 27, "\\Longleftrightarrow": 28, "\\mapsto": 29, "\\longmapsto": 30, "\\hookrightarrow": 31, "\\doteq": 32, "\\mathbin": 33, "\\mathrel": 34, "\\relbar": 35, "\\Relbar": 36, "\\xrightarrow": 37, "\\xleftarrow": 38, "\\DOTSI": 39, "\\int": 40, "\\oint": 41, "\\iint": 42, "\\iiint": 43, "\\iiiint": 44, "\\idotsint": 45, "\\DOTSX": 46};
    B.Map_chCvV = new C.ConstantStringMap(B.Object_A89, ["\\dotsc", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsx"], type$.ConstantStringMap_String_String);
    B.Map_empty7 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<BuildContext,0&>"));
    B.Map_empty9 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<String,MacroDefinition>"));
    B.Map_empty8 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<String,TDFormValidation>"));
    B.Map_empty12 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<Object?,Object?>"));
    B.List_Gcs = C._setArrayType(makeConstList(["\\cursor"]), type$.JSArray_String);
    B.FunctionSpec_b8v = new A.FunctionSpec(1, false, true, false, A.cursor___cursorHandler$closure(), type$.FunctionSpec_GreenNode);
    B.Map_fe18k = new C.GeneralConstantMap([B.List_Gcs, B.FunctionSpec_b8v], type$.GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode);
    B.Object_E5c = {latin: 0, cyrillic: 1, brahmic: 2, georgian: 3, cjk: 4, hangul: 5};
    B.List_256_591 = C._setArrayType(makeConstList([256, 591]), type$.JSArray_int);
    B.List_768_879 = C._setArrayType(makeConstList([768, 879]), type$.JSArray_int);
    B.List_nS2 = C._setArrayType(makeConstList([B.List_256_591, B.List_768_879]), type$.JSArray_List_int);
    B.List_1024_1279 = C._setArrayType(makeConstList([1024, 1279]), type$.JSArray_int);
    B.List_List_1024_1279 = C._setArrayType(makeConstList([B.List_1024_1279]), type$.JSArray_List_int);
    B.List_2304_4255 = C._setArrayType(makeConstList([2304, 4255]), type$.JSArray_int);
    B.List_List_2304_4255 = C._setArrayType(makeConstList([B.List_2304_4255]), type$.JSArray_List_int);
    B.List_4256_4351 = C._setArrayType(makeConstList([4256, 4351]), type$.JSArray_int);
    B.List_List_4256_4351 = C._setArrayType(makeConstList([B.List_4256_4351]), type$.JSArray_List_int);
    B.List_12288_12543 = C._setArrayType(makeConstList([12288, 12543]), type$.JSArray_int);
    B.List_19968_40879 = C._setArrayType(makeConstList([19968, 40879]), type$.JSArray_int);
    B.List_65280_65376 = C._setArrayType(makeConstList([65280, 65376]), type$.JSArray_int);
    B.List_ifW = C._setArrayType(makeConstList([B.List_12288_12543, B.List_19968_40879, B.List_65280_65376]), type$.JSArray_List_int);
    B.List_44032_55215 = C._setArrayType(makeConstList([44032, 55215]), type$.JSArray_int);
    B.List_List_44032_55215 = C._setArrayType(makeConstList([B.List_44032_55215]), type$.JSArray_List_int);
    B.Map_h25Ly = new C.ConstantStringMap(B.Object_E5c, [B.List_nS2, B.List_List_1024_1279, B.List_List_2304_4255, B.List_List_4256_4351, B.List_ifW, B.List_List_44032_55215], C.findType("ConstantStringMap<String,List<List<int>>>"));
    B.Object_3k1 = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, a: 10, A: 11, b: 12, B: 13, c: 14, C: 15, d: 16, D: 17, e: 18, E: 19, f: 20, F: 21};
    B.Map_hxXwm = new C.ConstantStringMap(B.Object_3k1, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15], type$.ConstantStringMap_String_int);
    B.Object_RTo = {"\\xleftarrow": 0, "\\xrightarrow": 1, "\\xleftrightarrow": 2, "\\xLeftarrow": 3, "\\xRightarrow": 4, "\\xLeftrightarrow": 5, "\\xhookleftarrow": 6, "\\xhookrightarrow": 7, "\\xmapsto": 8, "\\xrightharpoondown": 9, "\\xrightharpoonup": 10, "\\xleftharpoondown": 11, "\\xleftharpoonup": 12, "\\xrightleftharpoons": 13, "\\xleftrightharpoons": 14, "\\xlongequal": 15, "\\xtwoheadleftarrow": 16, "\\xtwoheadrightarrow": 17, "\\xtofrom": 18, "\\xrightleftarrows": 19, "\\xrightequilibrium": 20, "\\xleftequilibrium": 21};
    B.Map_i9JgH = new C.ConstantStringMap(B.Object_RTo, ["\u2190", "\u2192", "\u2194", "\u21d0", "\u21d2", "\u21d4", "\u21a9", "\u21aa", "\u21a6", "\u21c1", "\u21c0", "\u21bd", "\u21bc", "\u21cc", "\u21cb", "=", "\u219e", "\u21a0", "\u21c4", "\u21c4", "\u21cc", "\u21cb"], type$.ConstantStringMap_String_String);
    B.Object_NYK = {multiply: 0, screen: 1, overlay: 2, darken: 3, lighten: 4, "color-dodge": 5, "color-burn": 6, "hard-light": 7, "soft-light": 8, difference: 9, exclusion: 10, hue: 11, saturation: 12, color: 13, luminosity: 14};
    B.BlendMode_240 = new A.BlendMode0(24, "multiply");
    B.BlendMode_140 = new A.BlendMode0(14, "screen");
    B.BlendMode_150 = new A.BlendMode0(15, "overlay");
    B.BlendMode_160 = new A.BlendMode0(16, "darken");
    B.BlendMode_170 = new A.BlendMode0(17, "lighten");
    B.BlendMode_180 = new A.BlendMode0(18, "colorDodge");
    B.BlendMode_190 = new A.BlendMode0(19, "colorBurn");
    B.BlendMode_200 = new A.BlendMode0(20, "hardLight");
    B.BlendMode_210 = new A.BlendMode0(21, "softLight");
    B.BlendMode_220 = new A.BlendMode0(22, "difference");
    B.BlendMode_230 = new A.BlendMode0(23, "exclusion");
    B.BlendMode_250 = new A.BlendMode0(25, "hue");
    B.BlendMode_260 = new A.BlendMode0(26, "saturation");
    B.BlendMode_270 = new A.BlendMode0(27, "color");
    B.BlendMode_280 = new A.BlendMode0(28, "luminosity");
    B.Map_imLTu = new C.ConstantStringMap(B.Object_NYK, [B.BlendMode_240, B.BlendMode_140, B.BlendMode_150, B.BlendMode_160, B.BlendMode_170, B.BlendMode_180, B.BlendMode_190, B.BlendMode_200, B.BlendMode_210, B.BlendMode_220, B.BlendMode_230, B.BlendMode_250, B.BlendMode_260, B.BlendMode_270, B.BlendMode_280], C.findType("ConstantStringMap<String,BlendMode0>"));
    B.Object_2ti = {"\u2013": 0, "\u2014": 1, "\u201c": 2, "\u201d": 3};
    B.Map_jLcbb = new C.ConstantStringMap(B.Object_2ti, ["--", "---", "``", "''"], type$.ConstantStringMap_String_String);
    B.Object_Hoi = {"\\acute": 0, "\\grave": 1, "\\ddot": 2, "\\tilde": 3, "\\bar": 4, "\\breve": 5, "\\check": 6, "\\hat": 7, "\\vec": 8, "\\dot": 9, "\\mathring": 10, "\\widecheck": 11, "\\widehat": 12, "\\widetilde": 13, "\\overrightarrow": 14, "\\overleftarrow": 15, "\\Overrightarrow": 16, "\\overleftrightarrow": 17, "\\overleftharpoon": 18, "\\overrightharpoon": 19, "\\'": 20, "\\`": 21, "\\^": 22, "\\~": 23, "\\=": 24, "\\u": 25, "\\.": 26, '\\"': 27, "\\r": 28, "\\H": 29, "\\v": 30, "\\overline": 31};
    B.Map_mBRlU = new C.ConstantStringMap(B.Object_Hoi, ["\xb4", "`", "\xa8", "~", "\xaf", "\u02d8", "\u02c7", "^", "\u2192", "\u02d9", "\u02da", "\u02c7", "^", "~", "\u2192", "\u2190", "\u21d2", "\u2194", "\u21bc", "\u21c0", "\xb4", "`", "^", "~", "\xaf", "\u02d8", "\u02d9", "\xa8", "\u02da", "\u02dd", "\u02c7", "\xaf"], type$.ConstantStringMap_String_String);
    B.Object_tav = {black: 0, silver: 1, gray: 2, white: 3, maroon: 4, red: 5, purple: 6, fuchsia: 7, green: 8, lime: 9, olive: 10, yellow: 11, navy: 12, blue: 13, teal: 14, aqua: 15, orange: 16, aliceblue: 17, antiquewhite: 18, aquamarine: 19, azure: 20, beige: 21, bisque: 22, blanchedalmond: 23, blueviolet: 24, brown: 25, burlywood: 26, cadetblue: 27, chartreuse: 28, chocolate: 29, coral: 30, cornflowerblue: 31, cornsilk: 32, crimson: 33, cyan: 34, darkblue: 35, darkcyan: 36, darkgoldenrod: 37, darkgray: 38, darkgreen: 39, darkgrey: 40, darkkhaki: 41, darkmagenta: 42, darkolivegreen: 43, darkorange: 44, darkorchid: 45, darkred: 46, darksalmon: 47, darkseagreen: 48, darkslateblue: 49, darkslategray: 50, darkslategrey: 51, darkturquoise: 52, darkviolet: 53, deeppink: 54, deepskyblue: 55, dimgray: 56, dimgrey: 57, dodgerblue: 58, firebrick: 59, floralwhite: 60, forestgreen: 61, gainsboro: 62, ghostwhite: 63, gold: 64, goldenrod: 65, greenyellow: 66, grey: 67, honeydew: 68, hotpink: 69, indianred: 70, indigo: 71, ivory: 72, khaki: 73, lavender: 74, lavenderblush: 75, lawngreen: 76, lemonchiffon: 77, lightblue: 78, lightcoral: 79, lightcyan: 80, lightgoldenrodyellow: 81, lightgray: 82, lightgreen: 83, lightgrey: 84, lightpink: 85, lightsalmon: 86, lightseagreen: 87, lightskyblue: 88, lightslategray: 89, lightslategrey: 90, lightsteelblue: 91, lightyellow: 92, limegreen: 93, linen: 94, "magenta (synonym of\xa0fuchsia)": 95, mediumaquamarine: 96, mediumblue: 97, mediumorchid: 98, mediumpurple: 99, mediumseagreen: 100, mediumslateblue: 101, mediumspringgreen: 102, mediumturquoise: 103, mediumvioletred: 104, midnightblue: 105, mintcream: 106, mistyrose: 107, moccasin: 108, navajowhite: 109, oldlace: 110, olivedrab: 111, orangered: 112, orchid: 113, palegoldenrod: 114, palegreen: 115, paleturquoise: 116, palevioletred: 117, papayawhip: 118, peachpuff: 119, peru: 120, pink: 121, plum: 122, powderblue: 123, rosybrown: 124, royalblue: 125, saddlebrown: 126, salmon: 127, sandybrown: 128, seagreen: 129, seashell: 130, sienna: 131, skyblue: 132, slateblue: 133, slategray: 134, slategrey: 135, snow: 136, springgreen: 137, steelblue: 138, tan: 139, thistle: 140, tomato: 141, turquoise: 142, violet: 143, wheat: 144, whitesmoke: 145, yellowgreen: 146, rebeccapurple: 147, transparent: 148};
    B.Color_Gt4 = new C.Color(1, 0.7529411764705882, 0.7529411764705882, 0.7529411764705882, D.ColorSpace_0);
    B.Color_OXP = new C.Color(1, 0.5019607843137255, 0.5019607843137255, 0.5019607843137255, D.ColorSpace_0);
    B.Color_wFz = new C.Color(1, 0.5019607843137255, 0, 0, D.ColorSpace_0);
    B.Color_D9B = new C.Color(1, 1, 0, 0, D.ColorSpace_0);
    B.Color_KPr = new C.Color(1, 0.5019607843137255, 0, 0.5019607843137255, D.ColorSpace_0);
    B.Color_4rO = new C.Color(1, 0, 0.5019607843137255, 0, D.ColorSpace_0);
    B.Color_zfj = new C.Color(1, 0.5019607843137255, 0.5019607843137255, 0, D.ColorSpace_0);
    B.Color_zRR = new C.Color(1, 0, 0, 0.5019607843137255, D.ColorSpace_0);
    B.Color_NeZ = new C.Color(1, 0, 0, 1, D.ColorSpace_0);
    B.Color_S8Z = new C.Color(1, 0, 0.5019607843137255, 0.5019607843137255, D.ColorSpace_0);
    B.Color_Xgh = new C.Color(1, 1, 0.6470588235294118, 0, D.ColorSpace_0);
    B.Color_5w2 = new C.Color(1, 0.9411764705882353, 0.9725490196078431, 1, D.ColorSpace_0);
    B.Color_p2X = new C.Color(1, 0.9803921568627451, 0.9215686274509803, 0.8431372549019608, D.ColorSpace_0);
    B.Color_w03 = new C.Color(1, 0.4980392156862745, 1, 0.8313725490196079, D.ColorSpace_0);
    B.Color_4aD = new C.Color(1, 0.9411764705882353, 1, 1, D.ColorSpace_0);
    B.Color_5L1 = new C.Color(1, 0.9607843137254902, 0.9607843137254902, 0.8627450980392157, D.ColorSpace_0);
    B.Color_tQf = new C.Color(1, 1, 0.8941176470588236, 0.7686274509803922, D.ColorSpace_0);
    B.Color_FRC = new C.Color(1, 1, 0.9215686274509803, 0.803921568627451, D.ColorSpace_0);
    B.Color_k3J = new C.Color(1, 0.5411764705882353, 0.16862745098039217, 0.8862745098039215, D.ColorSpace_0);
    B.Color_FTl = new C.Color(1, 0.6470588235294118, 0.16470588235294117, 0.16470588235294117, D.ColorSpace_0);
    B.Color_Wxb = new C.Color(1, 0.8705882352941177, 0.7215686274509804, 0.5294117647058824, D.ColorSpace_0);
    B.Color_Zfq = new C.Color(1, 0.37254901960784315, 0.6196078431372549, 0.6274509803921569, D.ColorSpace_0);
    B.Color_8hy = new C.Color(1, 0.4980392156862745, 1, 0, D.ColorSpace_0);
    B.Color_BTQ = new C.Color(1, 0.8235294117647058, 0.4117647058823529, 0.11764705882352941, D.ColorSpace_0);
    B.Color_zfw = new C.Color(1, 1, 0.4980392156862745, 0.3137254901960784, D.ColorSpace_0);
    B.Color_Gku = new C.Color(1, 0.39215686274509803, 0.5843137254901961, 0.9294117647058824, D.ColorSpace_0);
    B.Color_7D7 = new C.Color(1, 1, 0.9725490196078431, 0.8627450980392157, D.ColorSpace_0);
    B.Color_lDC = new C.Color(1, 0.8627450980392157, 0.0784313725490196, 0.23529411764705882, D.ColorSpace_0);
    B.Color_P8J = new C.Color(1, 0, 0, 0.5450980392156862, D.ColorSpace_0);
    B.Color_eBw = new C.Color(1, 0, 0.5450980392156862, 0.5450980392156862, D.ColorSpace_0);
    B.Color_ARF = new C.Color(1, 0.7215686274509804, 0.5254901960784314, 0.043137254901960784, D.ColorSpace_0);
    B.Color_Njy = new C.Color(1, 0.6627450980392157, 0.6627450980392157, 0.6627450980392157, D.ColorSpace_0);
    B.Color_vT0 = new C.Color(1, 0, 0.39215686274509803, 0, D.ColorSpace_0);
    B.Color_QRI = new C.Color(1, 0.7411764705882353, 0.7176470588235294, 0.4196078431372549, D.ColorSpace_0);
    B.Color_9aq = new C.Color(1, 0.5450980392156862, 0, 0.5450980392156862, D.ColorSpace_0);
    B.Color_Fbn = new C.Color(1, 0.3333333333333333, 0.4196078431372549, 0.1843137254901961, D.ColorSpace_0);
    B.Color_DbF = new C.Color(1, 1, 0.5490196078431373, 0, D.ColorSpace_0);
    B.Color_4hi = new C.Color(1, 0.6, 0.19607843137254902, 0.8, D.ColorSpace_0);
    B.Color_Eum = new C.Color(1, 0.5450980392156862, 0, 0, D.ColorSpace_0);
    B.Color_zY6 = new C.Color(1, 0.9137254901960784, 0.5882352941176471, 0.47843137254901963, D.ColorSpace_0);
    B.Color_5X7 = new C.Color(1, 0.5607843137254902, 0.7372549019607844, 0.5607843137254902, D.ColorSpace_0);
    B.Color_Jw8 = new C.Color(1, 0.2823529411764706, 0.23921568627450981, 0.5450980392156862, D.ColorSpace_0);
    B.Color_xQ0 = new C.Color(1, 0.1843137254901961, 0.30980392156862746, 0.30980392156862746, D.ColorSpace_0);
    B.Color_ZPZ = new C.Color(1, 0, 0.807843137254902, 0.8196078431372549, D.ColorSpace_0);
    B.Color_wHa = new C.Color(1, 0.5803921568627451, 0, 0.8274509803921568, D.ColorSpace_0);
    B.Color_rmn = new C.Color(1, 1, 0.0784313725490196, 0.5764705882352941, D.ColorSpace_0);
    B.Color_b0F = new C.Color(1, 0, 0.7490196078431373, 1, D.ColorSpace_0);
    B.Color_vrg = new C.Color(1, 0.4117647058823529, 0.4117647058823529, 0.4117647058823529, D.ColorSpace_0);
    B.Color_4gP = new C.Color(1, 0.11764705882352941, 0.5647058823529412, 1, D.ColorSpace_0);
    B.Color_kJm = new C.Color(1, 0.6980392156862745, 0.13333333333333333, 0.13333333333333333, D.ColorSpace_0);
    B.Color_e7V = new C.Color(1, 1, 0.9803921568627451, 0.9411764705882353, D.ColorSpace_0);
    B.Color_x0B = new C.Color(1, 0.13333333333333333, 0.5450980392156862, 0.13333333333333333, D.ColorSpace_0);
    B.Color_Hbo = new C.Color(1, 0.9725490196078431, 0.9725490196078431, 1, D.ColorSpace_0);
    B.Color_ESG = new C.Color(1, 1, 0.8431372549019608, 0, D.ColorSpace_0);
    B.Color_E8B = new C.Color(1, 0.8549019607843137, 0.6470588235294118, 0.12549019607843137, D.ColorSpace_0);
    B.Color_Thb = new C.Color(1, 0.6784313725490196, 1, 0.1843137254901961, D.ColorSpace_0);
    B.Color_TO4 = new C.Color(1, 0.9411764705882353, 1, 0.9411764705882353, D.ColorSpace_0);
    B.Color_Z9O = new C.Color(1, 1, 0.4117647058823529, 0.7058823529411765, D.ColorSpace_0);
    B.Color_Z9v = new C.Color(1, 0.803921568627451, 0.3607843137254902, 0.3607843137254902, D.ColorSpace_0);
    B.Color_fg5 = new C.Color(1, 0.29411764705882354, 0, 0.5098039215686274, D.ColorSpace_0);
    B.Color_fKG = new C.Color(1, 1, 1, 0.9411764705882353, D.ColorSpace_0);
    B.Color_van = new C.Color(1, 0.9411764705882353, 0.9019607843137255, 0.5490196078431373, D.ColorSpace_0);
    B.Color_g94 = new C.Color(1, 0.9019607843137255, 0.9019607843137255, 0.9803921568627451, D.ColorSpace_0);
    B.Color_K1H = new C.Color(1, 1, 0.9411764705882353, 0.9607843137254902, D.ColorSpace_0);
    B.Color_HHi = new C.Color(1, 0.48627450980392156, 0.9882352941176471, 0, D.ColorSpace_0);
    B.Color_K4F = new C.Color(1, 1, 0.9803921568627451, 0.803921568627451, D.ColorSpace_0);
    B.Color_xgy = new C.Color(1, 0.6784313725490196, 0.8470588235294118, 0.9019607843137255, D.ColorSpace_0);
    B.Color_IQy = new C.Color(1, 0.9411764705882353, 0.5019607843137255, 0.5019607843137255, D.ColorSpace_0);
    B.Color_uYE = new C.Color(1, 0.8784313725490196, 1, 1, D.ColorSpace_0);
    B.Color_PPR = new C.Color(1, 0.9803921568627451, 0.9803921568627451, 0.8235294117647058, D.ColorSpace_0);
    B.Color_Ijv = new C.Color(1, 0.8274509803921568, 0.8274509803921568, 0.8274509803921568, D.ColorSpace_0);
    B.Color_IiQ = new C.Color(1, 0.5647058823529412, 0.9333333333333333, 0.5647058823529412, D.ColorSpace_0);
    B.Color_ula = new C.Color(1, 1, 0.7137254901960784, 0.7568627450980392, D.ColorSpace_0);
    B.Color_0Ll = new C.Color(1, 1, 0.6274509803921569, 0.47843137254901963, D.ColorSpace_0);
    B.Color_ol3 = new C.Color(1, 0.12549019607843137, 0.6980392156862745, 0.6666666666666666, D.ColorSpace_0);
    B.Color_EGs = new C.Color(1, 0.5294117647058824, 0.807843137254902, 0.9803921568627451, D.ColorSpace_0);
    B.Color_ZkV = new C.Color(1, 0.4666666666666667, 0.5333333333333333, 0.6, D.ColorSpace_0);
    B.Color_4tb = new C.Color(1, 0.6901960784313725, 0.7686274509803922, 0.8705882352941177, D.ColorSpace_0);
    B.Color_AvJ = new C.Color(1, 1, 1, 0.8784313725490196, D.ColorSpace_0);
    B.Color_E12 = new C.Color(1, 0.19607843137254902, 0.803921568627451, 0.19607843137254902, D.ColorSpace_0);
    B.Color_0Dt = new C.Color(1, 0.9803921568627451, 0.9411764705882353, 0.9019607843137255, D.ColorSpace_0);
    B.Color_9dp = new C.Color(1, 0.4, 0.803921568627451, 0.6666666666666666, D.ColorSpace_0);
    B.Color_79b = new C.Color(1, 0, 0, 0.803921568627451, D.ColorSpace_0);
    B.Color_4TI = new C.Color(1, 0.7294117647058823, 0.3333333333333333, 0.8274509803921568, D.ColorSpace_0);
    B.Color_ub0 = new C.Color(1, 0.5764705882352941, 0.4392156862745098, 0.8588235294117647, D.ColorSpace_0);
    B.Color_IBM = new C.Color(1, 0.23529411764705882, 0.7019607843137254, 0.44313725490196076, D.ColorSpace_0);
    B.Color_oLx = new C.Color(1, 0.4823529411764706, 0.40784313725490196, 0.9333333333333333, D.ColorSpace_0);
    B.Color_Lpa = new C.Color(1, 0, 0.9803921568627451, 0.6039215686274509, D.ColorSpace_0);
    B.Color_v7X = new C.Color(1, 0.2823529411764706, 0.8196078431372549, 0.8, D.ColorSpace_0);
    B.Color_0P5 = new C.Color(1, 0.7803921568627451, 0.08235294117647059, 0.5215686274509804, D.ColorSpace_0);
    B.Color_43l = new C.Color(1, 0.09803921568627451, 0.09803921568627451, 0.4392156862745098, D.ColorSpace_0);
    B.Color_bpr = new C.Color(1, 0.9607843137254902, 1, 0.9803921568627451, D.ColorSpace_0);
    B.Color_8DQ = new C.Color(1, 1, 0.8941176470588236, 0.8823529411764706, D.ColorSpace_0);
    B.Color_Knm = new C.Color(1, 1, 0.8941176470588236, 0.7098039215686275, D.ColorSpace_0);
    B.Color_9cz = new C.Color(1, 1, 0.8705882352941177, 0.6784313725490196, D.ColorSpace_0);
    B.Color_sKl = new C.Color(1, 0.9921568627450981, 0.9607843137254902, 0.9019607843137255, D.ColorSpace_0);
    B.Color_4qX = new C.Color(1, 0.4196078431372549, 0.5568627450980392, 0.13725490196078433, D.ColorSpace_0);
    B.Color_ln7 = new C.Color(1, 1, 0.27058823529411763, 0, D.ColorSpace_0);
    B.Color_Dpm = new C.Color(1, 0.8549019607843137, 0.4392156862745098, 0.8392156862745098, D.ColorSpace_0);
    B.Color_WIt = new C.Color(1, 0.9333333333333333, 0.9098039215686274, 0.6666666666666666, D.ColorSpace_0);
    B.Color_V2m = new C.Color(1, 0.596078431372549, 0.984313725490196, 0.596078431372549, D.ColorSpace_0);
    B.Color_ysS = new C.Color(1, 0.6862745098039216, 0.9333333333333333, 0.9333333333333333, D.ColorSpace_0);
    B.Color_xzO = new C.Color(1, 0.8588235294117647, 0.4392156862745098, 0.5764705882352941, D.ColorSpace_0);
    B.Color_NzG = new C.Color(1, 1, 0.9372549019607843, 0.8352941176470589, D.ColorSpace_0);
    B.Color_QBY = new C.Color(1, 1, 0.8549019607843137, 0.7254901960784313, D.ColorSpace_0);
    B.Color_UwD = new C.Color(1, 0.803921568627451, 0.5215686274509804, 0.24705882352941178, D.ColorSpace_0);
    B.Color_x0a = new C.Color(1, 1, 0.7529411764705882, 0.796078431372549, D.ColorSpace_0);
    B.Color_LFp = new C.Color(1, 0.8666666666666667, 0.6274509803921569, 0.8666666666666667, D.ColorSpace_0);
    B.Color_RUB = new C.Color(1, 0.6901960784313725, 0.8784313725490196, 0.9019607843137255, D.ColorSpace_0);
    B.Color_llO = new C.Color(1, 0.7372549019607844, 0.5607843137254902, 0.5607843137254902, D.ColorSpace_0);
    B.Color_Akh = new C.Color(1, 0.2549019607843137, 0.4117647058823529, 0.8823529411764706, D.ColorSpace_0);
    B.Color_bKc = new C.Color(1, 0.5450980392156862, 0.27058823529411763, 0.07450980392156863, D.ColorSpace_0);
    B.Color_PB4 = new C.Color(1, 0.9803921568627451, 0.5019607843137255, 0.4470588235294118, D.ColorSpace_0);
    B.Color_HsJ = new C.Color(1, 0.9568627450980393, 0.6431372549019608, 0.3764705882352941, D.ColorSpace_0);
    B.Color_6Rg = new C.Color(1, 0.1803921568627451, 0.5450980392156862, 0.3411764705882353, D.ColorSpace_0);
    B.Color_jDc = new C.Color(1, 1, 0.9607843137254902, 0.9333333333333333, D.ColorSpace_0);
    B.Color_CT9 = new C.Color(1, 0.6274509803921569, 0.3215686274509804, 0.17647058823529413, D.ColorSpace_0);
    B.Color_J3c = new C.Color(1, 0.5294117647058824, 0.807843137254902, 0.9215686274509803, D.ColorSpace_0);
    B.Color_OrC = new C.Color(1, 0.41568627450980394, 0.35294117647058826, 0.803921568627451, D.ColorSpace_0);
    B.Color_zXH = new C.Color(1, 0.4392156862745098, 0.5019607843137255, 0.5647058823529412, D.ColorSpace_0);
    B.Color_LeY = new C.Color(1, 1, 0.9803921568627451, 0.9803921568627451, D.ColorSpace_0);
    B.Color_G0R = new C.Color(1, 0, 1, 0.4980392156862745, D.ColorSpace_0);
    B.Color_diS = new C.Color(1, 0.27450980392156865, 0.5098039215686274, 0.7058823529411765, D.ColorSpace_0);
    B.Color_3TL = new C.Color(1, 0.8235294117647058, 0.7058823529411765, 0.5490196078431373, D.ColorSpace_0);
    B.Color_zPa = new C.Color(1, 0.8470588235294118, 0.7490196078431373, 0.8470588235294118, D.ColorSpace_0);
    B.Color_xW0 = new C.Color(1, 1, 0.38823529411764707, 0.2784313725490196, D.ColorSpace_0);
    B.Color_UkR = new C.Color(1, 0.25098039215686274, 0.8784313725490196, 0.8156862745098039, D.ColorSpace_0);
    B.Color_4LY = new C.Color(1, 0.9333333333333333, 0.5098039215686274, 0.9333333333333333, D.ColorSpace_0);
    B.Color_zqD = new C.Color(1, 0.9607843137254902, 0.8705882352941177, 0.7019607843137254, D.ColorSpace_0);
    B.Color_BSV = new C.Color(1, 0.6039215686274509, 0.803921568627451, 0.19607843137254902, D.ColorSpace_0);
    B.Color_53L = new C.Color(1, 0.4, 0.2, 0.6, D.ColorSpace_0);
    B.Map_mi3Hd = new C.ConstantStringMap(B.Object_tav, [D.Color_vnR, B.Color_Gt4, B.Color_OXP, D.Color_wst, B.Color_wFz, B.Color_D9B, B.Color_KPr, D.Color_9Ph, B.Color_4rO, D.Color_GlT, B.Color_zfj, D.Color_VwQ, B.Color_zRR, B.Color_NeZ, B.Color_S8Z, D.Color_XtB, B.Color_Xgh, B.Color_5w2, B.Color_p2X, B.Color_w03, B.Color_4aD, B.Color_5L1, B.Color_tQf, B.Color_FRC, B.Color_k3J, B.Color_FTl, B.Color_Wxb, B.Color_Zfq, B.Color_8hy, B.Color_BTQ, B.Color_zfw, B.Color_Gku, B.Color_7D7, B.Color_lDC, D.Color_XtB, B.Color_P8J, B.Color_eBw, B.Color_ARF, B.Color_Njy, B.Color_vT0, B.Color_Njy, B.Color_QRI, B.Color_9aq, B.Color_Fbn, B.Color_DbF, B.Color_4hi, B.Color_Eum, B.Color_zY6, B.Color_5X7, B.Color_Jw8, B.Color_xQ0, B.Color_xQ0, B.Color_ZPZ, B.Color_wHa, B.Color_rmn, B.Color_b0F, B.Color_vrg, B.Color_vrg, B.Color_4gP, B.Color_kJm, B.Color_e7V, B.Color_x0B, D.Color_v5M, B.Color_Hbo, B.Color_ESG, B.Color_E8B, B.Color_Thb, B.Color_OXP, B.Color_TO4, B.Color_Z9O, B.Color_Z9v, B.Color_fg5, B.Color_fKG, B.Color_van, B.Color_g94, B.Color_K1H, B.Color_HHi, B.Color_K4F, B.Color_xgy, B.Color_IQy, B.Color_uYE, B.Color_PPR, B.Color_Ijv, B.Color_IiQ, B.Color_Ijv, B.Color_ula, B.Color_0Ll, B.Color_ol3, B.Color_EGs, B.Color_ZkV, B.Color_ZkV, B.Color_4tb, B.Color_AvJ, B.Color_E12, B.Color_0Dt, D.Color_9Ph, B.Color_9dp, B.Color_79b, B.Color_4TI, B.Color_ub0, B.Color_IBM, B.Color_oLx, B.Color_Lpa, B.Color_v7X, B.Color_0P5, B.Color_43l, B.Color_bpr, B.Color_8DQ, B.Color_Knm, B.Color_9cz, B.Color_sKl, B.Color_4qX, B.Color_ln7, B.Color_Dpm, B.Color_WIt, B.Color_V2m, B.Color_ysS, B.Color_xzO, B.Color_NzG, B.Color_QBY, B.Color_UwD, B.Color_x0a, B.Color_LFp, B.Color_RUB, B.Color_llO, B.Color_Akh, B.Color_bKc, B.Color_PB4, B.Color_HsJ, B.Color_6Rg, B.Color_jDc, B.Color_CT9, B.Color_J3c, B.Color_OrC, B.Color_zXH, B.Color_zXH, B.Color_LeY, B.Color_G0R, B.Color_diS, B.Color_3TL, B.Color_zPa, B.Color_xW0, B.Color_UkR, B.Color_4LY, B.Color_zqD, D.Color_euu, B.Color_BSV, B.Color_53L, D.Color_Edl], C.findType("ConstantStringMap<String,Color>"));
    B.Object_FsI = {"\u2190": 0, "\u2192": 1, "\u2194": 2, "\u21d0": 3, "\u21d2": 4, "\u21d4": 5, "\u21a9": 6, "\u21aa": 7, "\u21a6": 8, "\u21c1": 9, "\u21c0": 10, "\u21bd": 11, "\u21bc": 12, "\u21cc": 13, "\u21cb": 14, "=": 15, "\u219e": 16, "\u21a0": 17, "\u21c4": 18};
    B.Map_mkQGg = new C.ConstantStringMap(B.Object_FsI, ["xleftarrow", "xrightarrow", "xleftrightarrow", "xLeftarrow", "xRightarrow", "xLeftrightarrow", "xhookleftarrow", "xhookrightarrow", "xmapsto", "xrightharpoondown", "xrightharpoonup", "xleftharpoondown", "xleftharpoonup", "xrightleftharpoons", "xleftrightharpoons", "xlongequal", "xtwoheadleftarrow", "xtwoheadrightarrow", "xrightleftarrows"], type$.ConstantStringMap_String_String);
    B.Object_den = {"\u222f": 0, "\u2230": 1};
    B.Map_nMHK2 = new C.ConstantStringMap(B.Object_den, ["\u222c", "\u222d"], type$.ConstantStringMap_String_String);
    B.Object_jhH = {"\\`": 0, '\\"': 1, "\\~": 2, "\\=": 3, "\\'": 4, "\\u": 5, "\\v": 6, "\\^": 7, "\\.": 8, "\\r": 9, "\\H": 10};
    B.Map_qW5F6 = new C.ConstantStringMap(B.Object_jhH, ["\u0300", "\u0308", "\u0303", "\u0304", "\u0301", "\u0306", "\u030c", "\u0302", "\u0307", "\u030a", "\u030b"], type$.ConstantStringMap_String_String);
    B.Object_adl = {"\\Bbb": 0, "\\bold": 1, "\\frak": 2, "\\bm": 3};
    B.Map_qsqNW = new C.ConstantStringMap(B.Object_adl, ["\\mathbb", "\\mathbf", "\\mathfrak", "\\boldsymbol"], type$.ConstantStringMap_String_String);
    B.Object_tTC = {png: 0, jpeg: 1, jpg: 2, webp: 3, gif: 4, bmp: 5};
    B.ImageFormat_0 = new A.ImageFormat(0, "png");
    B.ImageFormat_1 = new A.ImageFormat(1, "jpeg");
    B.ImageFormat_2 = new A.ImageFormat(2, "webp");
    B.ImageFormat_3 = new A.ImageFormat(3, "gif");
    B.ImageFormat_4 = new A.ImageFormat(4, "bmp");
    B.Map_rXDqg = new C.ConstantStringMap(B.Object_tTC, [B.ImageFormat_0, B.ImageFormat_1, B.ImageFormat_1, B.ImageFormat_2, B.ImageFormat_3, B.ImageFormat_4], C.findType("ConstantStringMap<String,ImageFormat>"));
    B.Object_d68 = {"[": 0, "{": 1, "\\begingroup": 2};
    B.Map_rjIXC = new C.ConstantStringMap(B.Object_d68, ["]", "}", "\\endgroup"], type$.ConstantStringMap_String_String);
    B.Object_fHP = {"\\textrm": 0, "\\textsf": 1, "\\texttt": 2, "\\textnormal": 3, "\\textbf": 4, "\\textmd": 5, "\\textit": 6, "\\textup": 7};
    B.PartialFontOptions_Main_null_null = new A.PartialFontOptions("Main", null, null);
    B.PartialFontOptions_SansSerif_null_null = new A.PartialFontOptions("SansSerif", null, null);
    B.PartialFontOptions_Typewriter_null_null = new A.PartialFontOptions("Typewriter", null, null);
    B.PartialFontOptions_uui = new A.PartialFontOptions(null, D.FontWeight_6_700, null);
    B.PartialFontOptions_UBd = new A.PartialFontOptions(null, D.FontWeight_3_400, null);
    B.PartialFontOptions_null_null_FontStyle_1 = new A.PartialFontOptions(null, null, B.FontStyle_1);
    B.PartialFontOptions_null_null_FontStyle_0 = new A.PartialFontOptions(null, null, D.FontStyle_0);
    B.Map_sPadR = new C.ConstantStringMap(B.Object_fHP, [B.PartialFontOptions_Main_null_null, B.PartialFontOptions_SansSerif_null_null, B.PartialFontOptions_Typewriter_null_null, B.PartialFontOptions_Main_null_null, B.PartialFontOptions_uui, B.PartialFontOptions_UBd, B.PartialFontOptions_null_null_FontStyle_1, B.PartialFontOptions_null_null_FontStyle_0], C.findType("ConstantStringMap<String,PartialFontOptions>"));
    B.Period_iv9 = new A.Period(0, -3, 0, 0, 0, 0, 0, 0);
    B.Period_2rS = new A.Period(0, 1, 0, 0, 0, 0, 0, 0);
    B.Period_WWj = new A.Period(0, 3, 0, 0, 0, 0, 0, 0);
    B.Period_Cto = new A.Period(0, -1, 0, 0, 0, 0, 0, 0);
    B.Map_u8guQ = new C.GeneralConstantMap([D.TraversalDirection_0, B.Period_iv9, D.TraversalDirection_1, B.Period_2rS, D.TraversalDirection_2, B.Period_WWj, D.TraversalDirection_3, B.Period_Cto], type$.GeneralConstantMap_TraversalDirection_Period);
    B.Period_qkM = new A.Period(0, 0, -7, 0, 0, 0, 0, 0);
    B.Period_MtU = new A.Period(0, 0, 1, 0, 0, 0, 0, 0);
    B.Period_2sn = new A.Period(0, 0, 7, 0, 0, 0, 0, 0);
    B.Period_YW2 = new A.Period(0, 0, -1, 0, 0, 0, 0, 0);
    B.Map_u8oBS = new C.GeneralConstantMap([D.TraversalDirection_0, B.Period_qkM, D.TraversalDirection_1, B.Period_MtU, D.TraversalDirection_2, B.Period_2sn, D.TraversalDirection_3, B.Period_YW2], type$.GeneralConstantMap_TraversalDirection_Period);
    B.Period_ios = new A.Period(-3, 0, 0, 0, 0, 0, 0, 0);
    B.Period_6fG = new A.Period(1, 0, 0, 0, 0, 0, 0, 0);
    B.Period_fS1 = new A.Period(3, 0, 0, 0, 0, 0, 0, 0);
    B.Period_E6W = new A.Period(-1, 0, 0, 0, 0, 0, 0, 0);
    B.Map_u8zac = new C.GeneralConstantMap([D.TraversalDirection_0, B.Period_ios, D.TraversalDirection_1, B.Period_6fG, D.TraversalDirection_2, B.Period_fS1, D.TraversalDirection_3, B.Period_E6W], type$.GeneralConstantMap_TraversalDirection_Period);
    B.Object_NeZ = {matrix: 0, translate: 1, scale: 2, rotate: 3, skewX: 4, skewY: 5};
    B.Map_uCfR4 = new C.ConstantStringMap(B.Object_NeZ, [A.parsers___parseSvgMatrix$closure(), A.parsers___parseSvgTranslate$closure(), A.parsers___parseSvgScale$closure(), A.parsers___parseSvgRotate$closure(), A.parsers___parseSvgSkewX$closure(), A.parsers___parseSvgSkewY$closure()], C.findType("ConstantStringMap<String,AffineMatrix(List<double>,AffineMatrix)>"));
    B.Object_yIa = {"\u2237": 0, "\u2254": 1, "\u2255": 2, "\u2239": 3, "\u27e6": 4, "\u27e7": 5, "\u2983": 6, "\u2984": 7};
    B.List_5PS = C._setArrayType(makeConstList([":", ":"]), type$.JSArray_String);
    B.List_deZ = C._setArrayType(makeConstList([":", "="]), type$.JSArray_String);
    B.List_hPQ = C._setArrayType(makeConstList(["=", ":"]), type$.JSArray_String);
    B.List_K61 = C._setArrayType(makeConstList(["-", ":"]), type$.JSArray_String);
    B.List_x3T = C._setArrayType(makeConstList(["[", "["]), type$.JSArray_String);
    B.List_4WR = C._setArrayType(makeConstList(["]", "]"]), type$.JSArray_String);
    B.List_Py5 = C._setArrayType(makeConstList(["{", "["]), type$.JSArray_String);
    B.List_Rp2 = C._setArrayType(makeConstList(["]", "}"]), type$.JSArray_String);
    B.Map_uUUqS = new C.ConstantStringMap(B.Object_yIa, [B.List_5PS, B.List_deZ, B.List_hPQ, B.List_K61, B.List_x3T, B.List_4WR, B.List_Py5, B.List_Rp2], type$.ConstantStringMap_of_String_and_List_String);
    B.Object_lwg = {"AMS-Regular": 0, "Caligraphic-Regular": 1, "Fraktur-Regular": 2, "Main-Bold": 3, "Main-BoldItalic": 4, "Main-Italic": 5, "Main-Regular": 6, "Math-BoldItalic": 7, "Math-Italic": 8, "SansSerif-Bold": 9, "SansSerif-Italic": 10, "SansSerif-Regular": 11, "Script-Regular": 12, "Size1-Regular": 13, "Size2-Regular": 14, "Size3-Regular": 15, "Size4-Regular": 16, "Typewriter-Regular": 17};
    B.CharacterMetrics_z2l = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_z2l0 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_z2l1 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_z2l2 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_z2l3 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_Gb6 = new A.CharacterMetrics(0.16667, 0.68889, 0, 0);
    B.CharacterMetrics_z2l4 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_Gb60 = new A.CharacterMetrics(0.16667, 0.68889, 0, 0);
    B.CharacterMetrics_z2l5 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_z2l6 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_fs2 = new A.CharacterMetrics(0, 0.675, 0.025, 0);
    B.CharacterMetrics_dpR = new A.CharacterMetrics(0.15559, 0.69224, 0, 0);
    B.CharacterMetrics_z2l7 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_xB7 = new A.CharacterMetrics(0, 0.825, 0, 0);
    B.CharacterMetrics_HAi = new A.CharacterMetrics(0, 0.9, 0, 0);
    B.CharacterMetrics_cNx = new A.CharacterMetrics(0.08167, 0.58167, 0, 0);
    B.CharacterMetrics_nuV = new A.CharacterMetrics(0, 0.43056, 0.04028, 0);
    B.CharacterMetrics_oSq = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_z2l8 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_z2l9 = new A.CharacterMetrics(0, 0.68889, 0, 0);
    B.CharacterMetrics_uJj = new A.CharacterMetrics(-0.03598, 0.46402, 0, 0);
    B.CharacterMetrics_Xd1 = new A.CharacterMetrics(-0.13313, 0.36687, 0, 0);
    B.CharacterMetrics_UuM = new A.CharacterMetrics(0.01354, 0.52239, 0, 0);
    B.CharacterMetrics_UuM0 = new A.CharacterMetrics(0.01354, 0.52239, 0, 0);
    B.CharacterMetrics_oSq0 = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_4pf = new A.CharacterMetrics(-0.13313, 0.37788, 0, 0);
    B.CharacterMetrics_Ghm = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_Nyz = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_8hq = new A.CharacterMetrics(0.08198, 0.58198, 0, 0);
    B.CharacterMetrics_GD5 = new A.CharacterMetrics(0.19444, 0.69224, 0, 0);
    B.CharacterMetrics_D7M = new A.CharacterMetrics(0.1808, 0.675, 0, 0);
    B.CharacterMetrics_GD50 = new A.CharacterMetrics(0.19444, 0.69224, 0, 0);
    B.CharacterMetrics_9FD = new A.CharacterMetrics(0.13667, 0.63667, 0, 0);
    B.CharacterMetrics_4pf0 = new A.CharacterMetrics(-0.13313, 0.37788, 0, 0);
    B.CharacterMetrics_QEB = new A.CharacterMetrics(-0.064, 0.437, 0, 0);
    B.CharacterMetrics_xB70 = new A.CharacterMetrics(0, 0.825, 0, 0);
    B.CharacterMetrics_Nyz0 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_cG1 = new A.CharacterMetrics(0.08198, 0.69224, 0, 0);
    B.CharacterMetrics_Ghm0 = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_Ghm1 = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_YOu = new A.CharacterMetrics(0.03517, 0.52239, 0, 0);
    B.CharacterMetrics_cNx0 = new A.CharacterMetrics(0.08167, 0.58167, 0, 0);
    B.CharacterMetrics_rWV = new A.CharacterMetrics(0.25142, 0.74111, 0, 0);
    B.CharacterMetrics_cNx1 = new A.CharacterMetrics(0.08167, 0.58167, 0, 0);
    B.CharacterMetrics_rWV0 = new A.CharacterMetrics(0.25142, 0.74111, 0, 0);
    B.CharacterMetrics_Ghm2 = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_Xd10 = new A.CharacterMetrics(-0.13313, 0.36687, 0, 0);
    B.CharacterMetrics_4pf1 = new A.CharacterMetrics(-0.13313, 0.37788, 0, 0);
    B.CharacterMetrics_2K8 = new A.CharacterMetrics(-0.03625, 0.46375, 0, 0);
    B.CharacterMetrics_7N1 = new A.CharacterMetrics(0.30274, 0.79383, 0, 0);
    B.CharacterMetrics_Y6k = new A.CharacterMetrics(-0.01688, 0.48312, 0, 0);
    B.CharacterMetrics_RvH = new A.CharacterMetrics(0.06062, 0.54986, 0, 0);
    B.CharacterMetrics_9YC = new A.CharacterMetrics(0.22958, 0.72958, 0, 0);
    B.CharacterMetrics_6I2 = new A.CharacterMetrics(0.08198, 0.91667, 0, 0);
    B.CharacterMetrics_SYh = new A.CharacterMetrics(0.25583, 0.75583, 0, 0);
    B.CharacterMetrics_Aoj = new A.CharacterMetrics(0.25142, 0.75726, 0, 0);
    B.CharacterMetrics_SYh0 = new A.CharacterMetrics(0.25583, 0.75583, 0, 0);
    B.CharacterMetrics_ntd = new A.CharacterMetrics(0.20576, 0.70576, 0, 0);
    B.CharacterMetrics_D7M0 = new A.CharacterMetrics(0.1808, 0.675, 0, 0);
    B.CharacterMetrics_9FD0 = new A.CharacterMetrics(0.13667, 0.63667, 0, 0);
    B.CharacterMetrics_lOx = new A.CharacterMetrics(0.13597, 0.63597, 0, 0);
    B.CharacterMetrics_7dG = new A.CharacterMetrics(0.03517, 0.54986, 0, 0);
    B.CharacterMetrics_bdr = new A.CharacterMetrics(0, 0.675, 0, 0);
    B.CharacterMetrics_Ghm3 = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_Ghm4 = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_oSq1 = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_Lx9 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0);
    B.CharacterMetrics_GD51 = new A.CharacterMetrics(0.19444, 0.69224, 0, 0);
    B.CharacterMetrics_oSq2 = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_uJj0 = new A.CharacterMetrics(-0.03598, 0.46402, 0, 0);
    B.CharacterMetrics_oSq3 = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_oSq4 = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_res = new A.CharacterMetrics(0.0391, 0.5391, 0, 0);
    B.CharacterMetrics_7dG0 = new A.CharacterMetrics(0.03517, 0.54986, 0, 0);
    B.CharacterMetrics_21I = new A.CharacterMetrics(0.38569, 0.88569, 0, 0);
    B.CharacterMetrics_IAY = new A.CharacterMetrics(0.23222, 0.74111, 0, 0);
    B.CharacterMetrics_GD52 = new A.CharacterMetrics(0.19444, 0.69224, 0, 0);
    B.CharacterMetrics_dpR0 = new A.CharacterMetrics(0.15559, 0.69224, 0, 0);
    B.CharacterMetrics_Rke = new A.CharacterMetrics(0, 0.37788, 0, 0);
    B.CharacterMetrics_qrd = new A.CharacterMetrics(0.19444, 0.68889, 0, 0);
    B.CharacterMetrics_6qH = new A.CharacterMetrics(0.19444, 0.74111, 0, 0);
    B.CharacterMetrics_oSq5 = new A.CharacterMetrics(0, 0.54986, 0, 0);
    B.CharacterMetrics_jH3 = new A.CharacterMetrics(0.11111, 0.69224, 0, 0);
    B.CharacterMetrics_GD53 = new A.CharacterMetrics(0.19444, 0.69224, 0, 0);
    B.CharacterMetrics_Ghm5 = new A.CharacterMetrics(0, 0.69224, 0, 0);
    B.CharacterMetrics_v2j = new A.CharacterMetrics(0.19444, 0.75583, 0, 0);
    B.CharacterMetrics_3dN = new A.CharacterMetrics(0.26167, 0.75726, 0, 0);
    B.CharacterMetrics_ZfP = new A.CharacterMetrics(0.48256, 0.98256, 0, 0);
    B.CharacterMetrics_3Tg = new A.CharacterMetrics(0.28481, 0.79383, 0, 0);
    B.CharacterMetrics_M6D = new A.CharacterMetrics(0.41951, 0.91951, 0, 0);
    B.Map_AQWi1 = new C.GeneralConstantMap([65, B.CharacterMetrics_z2l, 66, B.CharacterMetrics_z2l0, 67, B.CharacterMetrics_z2l, 68, B.CharacterMetrics_z2l, 69, B.CharacterMetrics_z2l0, 70, B.CharacterMetrics_z2l1, 71, B.CharacterMetrics_z2l2, 72, B.CharacterMetrics_z2l2, 73, B.CharacterMetrics_z2l3, 74, B.CharacterMetrics_Gb6, 75, B.CharacterMetrics_z2l2, 76, B.CharacterMetrics_z2l0, 77, B.CharacterMetrics_z2l4, 78, B.CharacterMetrics_z2l, 79, B.CharacterMetrics_Gb60, 80, B.CharacterMetrics_z2l1, 81, B.CharacterMetrics_Gb60, 82, B.CharacterMetrics_z2l, 83, B.CharacterMetrics_z2l5, 84, B.CharacterMetrics_z2l0, 85, B.CharacterMetrics_z2l, 86, B.CharacterMetrics_z2l, 87, B.CharacterMetrics_z2l6, 88, B.CharacterMetrics_z2l, 89, B.CharacterMetrics_z2l, 90, B.CharacterMetrics_z2l0, 107, B.CharacterMetrics_z2l5, 165, B.CharacterMetrics_fs2, 174, B.CharacterMetrics_dpR, 240, B.CharacterMetrics_z2l5, 295, B.CharacterMetrics_z2l7, 710, B.CharacterMetrics_xB7, 732, B.CharacterMetrics_HAi, 770, B.CharacterMetrics_xB7, 771, B.CharacterMetrics_HAi, 989, B.CharacterMetrics_cNx, 1008, B.CharacterMetrics_nuV, 8245, B.CharacterMetrics_oSq, 8463, B.CharacterMetrics_z2l7, 8487, B.CharacterMetrics_z2l, 8498, B.CharacterMetrics_z2l5, 8502, B.CharacterMetrics_z2l0, 8503, B.CharacterMetrics_z2l8, 8504, B.CharacterMetrics_z2l0, 8513, B.CharacterMetrics_z2l9, 8592, B.CharacterMetrics_uJj, 8594, B.CharacterMetrics_uJj, 8602, B.CharacterMetrics_Xd1, 8603, B.CharacterMetrics_Xd1, 8606, B.CharacterMetrics_UuM, 8608, B.CharacterMetrics_UuM, 8610, B.CharacterMetrics_UuM0, 8611, B.CharacterMetrics_UuM0, 8619, B.CharacterMetrics_oSq0, 8620, B.CharacterMetrics_oSq0, 8621, B.CharacterMetrics_4pf, 8622, B.CharacterMetrics_Xd1, 8624, B.CharacterMetrics_Ghm, 8625, B.CharacterMetrics_Ghm, 8630, B.CharacterMetrics_Nyz, 8631, B.CharacterMetrics_Nyz, 8634, B.CharacterMetrics_8hq, 8635, B.CharacterMetrics_8hq, 8638, B.CharacterMetrics_GD5, 8639, B.CharacterMetrics_GD5, 8642, B.CharacterMetrics_GD5, 8643, B.CharacterMetrics_GD5, 8644, B.CharacterMetrics_D7M, 8646, B.CharacterMetrics_D7M, 8647, B.CharacterMetrics_D7M, 8648, B.CharacterMetrics_GD50, 8649, B.CharacterMetrics_D7M, 8650, B.CharacterMetrics_GD50, 8651, B.CharacterMetrics_UuM, 8652, B.CharacterMetrics_UuM, 8653, B.CharacterMetrics_Xd1, 8654, B.CharacterMetrics_Xd1, 8655, B.CharacterMetrics_Xd1, 8666, B.CharacterMetrics_9FD, 8667, B.CharacterMetrics_9FD, 8669, B.CharacterMetrics_4pf0, 8672, B.CharacterMetrics_QEB, 8674, B.CharacterMetrics_QEB, 8705, B.CharacterMetrics_xB70, 8708, B.CharacterMetrics_z2l5, 8709, B.CharacterMetrics_cNx, 8717, B.CharacterMetrics_Nyz0, 8722, B.CharacterMetrics_uJj, 8724, B.CharacterMetrics_cG1, 8726, B.CharacterMetrics_cNx, 8733, B.CharacterMetrics_Ghm0, 8736, B.CharacterMetrics_Ghm1, 8737, B.CharacterMetrics_Ghm1, 8738, B.CharacterMetrics_YOu, 8739, B.CharacterMetrics_cNx0, 8740, B.CharacterMetrics_rWV, 8741, B.CharacterMetrics_cNx1, 8742, B.CharacterMetrics_rWV0, 8756, B.CharacterMetrics_Ghm2, 8757, B.CharacterMetrics_Ghm2, 8764, B.CharacterMetrics_Xd10, 8765, B.CharacterMetrics_4pf1, 8769, B.CharacterMetrics_Xd10, 8770, B.CharacterMetrics_2K8, 8774, B.CharacterMetrics_7N1, 8776, B.CharacterMetrics_Y6k, 8778, B.CharacterMetrics_cNx, 8782, B.CharacterMetrics_RvH, 8783, B.CharacterMetrics_RvH, 8785, B.CharacterMetrics_8hq, 8786, B.CharacterMetrics_8hq, 8787, B.CharacterMetrics_8hq, 8790, B.CharacterMetrics_Ghm0, 8791, B.CharacterMetrics_9YC, 8796, B.CharacterMetrics_6I2, 8806, B.CharacterMetrics_SYh, 8807, B.CharacterMetrics_SYh, 8808, B.CharacterMetrics_Aoj, 8809, B.CharacterMetrics_Aoj, 8812, B.CharacterMetrics_SYh0, 8814, B.CharacterMetrics_ntd, 8815, B.CharacterMetrics_ntd, 8816, B.CharacterMetrics_7N1, 8817, B.CharacterMetrics_7N1, 8818, B.CharacterMetrics_9YC, 8819, B.CharacterMetrics_9YC, 8822, B.CharacterMetrics_D7M0, 8823, B.CharacterMetrics_D7M0, 8828, B.CharacterMetrics_9FD0, 8829, B.CharacterMetrics_9FD0, 8830, B.CharacterMetrics_9YC, 8831, B.CharacterMetrics_9YC, 8832, B.CharacterMetrics_ntd, 8833, B.CharacterMetrics_ntd, 8840, B.CharacterMetrics_7N1, 8841, B.CharacterMetrics_7N1, 8842, B.CharacterMetrics_lOx, 8843, B.CharacterMetrics_lOx, 8847, B.CharacterMetrics_7dG, 8848, B.CharacterMetrics_7dG, 8858, B.CharacterMetrics_8hq, 8859, B.CharacterMetrics_8hq, 8861, B.CharacterMetrics_8hq, 8862, B.CharacterMetrics_bdr, 8863, B.CharacterMetrics_bdr, 8864, B.CharacterMetrics_bdr, 8865, B.CharacterMetrics_bdr, 8872, B.CharacterMetrics_Ghm3, 8873, B.CharacterMetrics_Ghm1, 8874, B.CharacterMetrics_Ghm4, 8876, B.CharacterMetrics_z2l1, 8877, B.CharacterMetrics_z2l1, 8878, B.CharacterMetrics_z2l, 8879, B.CharacterMetrics_z2l, 8882, B.CharacterMetrics_7dG, 8883, B.CharacterMetrics_7dG, 8884, B.CharacterMetrics_9FD0, 8885, B.CharacterMetrics_9FD0, 8888, B.CharacterMetrics_oSq1, 8890, B.CharacterMetrics_Lx9, 8891, B.CharacterMetrics_GD51, 8892, B.CharacterMetrics_GD51, 8901, B.CharacterMetrics_oSq2, 8903, B.CharacterMetrics_cNx, 8905, B.CharacterMetrics_cNx, 8906, B.CharacterMetrics_cNx, 8907, B.CharacterMetrics_Ghm0, 8908, B.CharacterMetrics_Ghm0, 8909, B.CharacterMetrics_uJj0, 8910, B.CharacterMetrics_oSq3, 8911, B.CharacterMetrics_oSq3, 8912, B.CharacterMetrics_7dG, 8913, B.CharacterMetrics_7dG, 8914, B.CharacterMetrics_oSq4, 8915, B.CharacterMetrics_oSq4, 8916, B.CharacterMetrics_Ghm2, 8918, B.CharacterMetrics_res, 8919, B.CharacterMetrics_res, 8920, B.CharacterMetrics_7dG0, 8921, B.CharacterMetrics_7dG0, 8922, B.CharacterMetrics_21I, 8923, B.CharacterMetrics_21I, 8926, B.CharacterMetrics_9FD0, 8927, B.CharacterMetrics_9FD0, 8928, B.CharacterMetrics_7N1, 8929, B.CharacterMetrics_7N1, 8934, B.CharacterMetrics_IAY, 8935, B.CharacterMetrics_IAY, 8936, B.CharacterMetrics_IAY, 8937, B.CharacterMetrics_IAY, 8938, B.CharacterMetrics_ntd, 8939, B.CharacterMetrics_ntd, 8940, B.CharacterMetrics_7N1, 8941, B.CharacterMetrics_7N1, 8994, B.CharacterMetrics_GD52, 8995, B.CharacterMetrics_GD52, 9416, B.CharacterMetrics_dpR0, 9484, B.CharacterMetrics_Ghm, 9488, B.CharacterMetrics_Ghm, 9492, B.CharacterMetrics_Rke, 9496, B.CharacterMetrics_Rke, 9585, B.CharacterMetrics_qrd, 9586, B.CharacterMetrics_6qH, 9632, B.CharacterMetrics_bdr, 9633, B.CharacterMetrics_bdr, 9650, B.CharacterMetrics_oSq5, 9651, B.CharacterMetrics_oSq5, 9654, B.CharacterMetrics_7dG, 9660, B.CharacterMetrics_oSq5, 9661, B.CharacterMetrics_oSq5, 9664, B.CharacterMetrics_7dG, 9674, B.CharacterMetrics_jH3, 9733, B.CharacterMetrics_GD53, 10003, B.CharacterMetrics_Ghm5, 10016, B.CharacterMetrics_Ghm5, 10731, B.CharacterMetrics_jH3, 10846, B.CharacterMetrics_v2j, 10877, B.CharacterMetrics_9FD0, 10878, B.CharacterMetrics_9FD0, 10885, B.CharacterMetrics_SYh, 10886, B.CharacterMetrics_SYh, 10887, B.CharacterMetrics_lOx, 10888, B.CharacterMetrics_lOx, 10889, B.CharacterMetrics_3dN, 10890, B.CharacterMetrics_3dN, 10891, B.CharacterMetrics_ZfP, 10892, B.CharacterMetrics_ZfP, 10901, B.CharacterMetrics_9FD0, 10902, B.CharacterMetrics_9FD0, 10933, B.CharacterMetrics_Aoj, 10934, B.CharacterMetrics_Aoj, 10935, B.CharacterMetrics_3dN, 10936, B.CharacterMetrics_3dN, 10937, B.CharacterMetrics_3dN, 10938, B.CharacterMetrics_3dN, 10949, B.CharacterMetrics_SYh, 10950, B.CharacterMetrics_SYh, 10955, B.CharacterMetrics_3Tg, 10956, B.CharacterMetrics_3Tg, 57350, B.CharacterMetrics_cNx0, 57351, B.CharacterMetrics_cNx1, 57352, B.CharacterMetrics_cNx, 57353, B.CharacterMetrics_nuV, 57356, B.CharacterMetrics_Aoj, 57357, B.CharacterMetrics_Aoj, 57358, B.CharacterMetrics_M6D, 57359, B.CharacterMetrics_7N1, 57360, B.CharacterMetrics_7N1, 57361, B.CharacterMetrics_M6D, 57366, B.CharacterMetrics_Aoj, 57367, B.CharacterMetrics_Aoj, 57368, B.CharacterMetrics_Aoj, 57369, B.CharacterMetrics_Aoj, 57370, B.CharacterMetrics_lOx, 57371, B.CharacterMetrics_lOx], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_Nyz1 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Lx90 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0);
    B.CharacterMetrics_CBT = new A.CharacterMetrics(0, 0.64444, 0, 0);
    B.CharacterMetrics_chF = new A.CharacterMetrics(0, 0.68333, 0, 0.19445);
    B.CharacterMetrics_0Z5 = new A.CharacterMetrics(0, 0.68333, 0.03041, 0.13889);
    B.CharacterMetrics_EMW = new A.CharacterMetrics(0, 0.68333, 0.05834, 0.13889);
    B.CharacterMetrics_bRO = new A.CharacterMetrics(0, 0.68333, 0.02778, 0.08334);
    B.CharacterMetrics_VMA = new A.CharacterMetrics(0, 0.68333, 0.08944, 0.11111);
    B.CharacterMetrics_e38 = new A.CharacterMetrics(0, 0.68333, 0.09931, 0.11111);
    B.CharacterMetrics_k2N = new A.CharacterMetrics(0.09722, 0.68333, 0.0593, 0.11111);
    B.CharacterMetrics_p3a = new A.CharacterMetrics(0, 0.68333, 0.00965, 0.11111);
    B.CharacterMetrics_WOG = new A.CharacterMetrics(0, 0.68333, 0.07382, 0);
    B.CharacterMetrics_lqS = new A.CharacterMetrics(0.09722, 0.68333, 0.18472, 0.16667);
    B.CharacterMetrics_nfE = new A.CharacterMetrics(0, 0.68333, 0.01445, 0.05556);
    B.CharacterMetrics_gSc = new A.CharacterMetrics(0, 0.68333, 0, 0.13889);
    B.CharacterMetrics_gSc0 = new A.CharacterMetrics(0, 0.68333, 0, 0.13889);
    B.CharacterMetrics_zis = new A.CharacterMetrics(0, 0.68333, 0.14736, 0.08334);
    B.CharacterMetrics_nxs = new A.CharacterMetrics(0, 0.68333, 0.02778, 0.11111);
    B.CharacterMetrics_gLH = new A.CharacterMetrics(0, 0.68333, 0.08222, 0.08334);
    B.CharacterMetrics_hSf = new A.CharacterMetrics(0.09722, 0.68333, 0, 0.11111);
    B.CharacterMetrics_vHQ = new A.CharacterMetrics(0, 0.68333, 0, 0.08334);
    B.CharacterMetrics_Sji = new A.CharacterMetrics(0, 0.68333, 0.075, 0.13889);
    B.CharacterMetrics_Cb8 = new A.CharacterMetrics(0, 0.68333, 0.25417, 0);
    B.CharacterMetrics_GJ1 = new A.CharacterMetrics(0, 0.68333, 0.09931, 0.08334);
    B.CharacterMetrics_zwd = new A.CharacterMetrics(0, 0.68333, 0.08222, 0);
    B.CharacterMetrics_gLH0 = new A.CharacterMetrics(0, 0.68333, 0.08222, 0.08334);
    B.CharacterMetrics_44L = new A.CharacterMetrics(0, 0.68333, 0.14643, 0.13889);
    B.CharacterMetrics_JzM = new A.CharacterMetrics(0.09722, 0.68333, 0.08222, 0.08334);
    B.CharacterMetrics_s2W = new A.CharacterMetrics(0, 0.68333, 0.07944, 0.13889);
    B.Map_lyvP9 = new C.GeneralConstantMap([48, B.CharacterMetrics_Nyz1, 49, B.CharacterMetrics_Nyz1, 50, B.CharacterMetrics_Nyz1, 51, B.CharacterMetrics_Lx90, 52, B.CharacterMetrics_Lx90, 53, B.CharacterMetrics_Lx90, 54, B.CharacterMetrics_CBT, 55, B.CharacterMetrics_Lx90, 56, B.CharacterMetrics_CBT, 57, B.CharacterMetrics_Lx90, 65, B.CharacterMetrics_chF, 66, B.CharacterMetrics_0Z5, 67, B.CharacterMetrics_EMW, 68, B.CharacterMetrics_bRO, 69, B.CharacterMetrics_VMA, 70, B.CharacterMetrics_e38, 71, B.CharacterMetrics_k2N, 72, B.CharacterMetrics_p3a, 73, B.CharacterMetrics_WOG, 74, B.CharacterMetrics_lqS, 75, B.CharacterMetrics_nfE, 76, B.CharacterMetrics_gSc, 77, B.CharacterMetrics_gSc0, 78, B.CharacterMetrics_zis, 79, B.CharacterMetrics_nxs, 80, B.CharacterMetrics_gLH, 81, B.CharacterMetrics_hSf, 82, B.CharacterMetrics_vHQ, 83, B.CharacterMetrics_Sji, 84, B.CharacterMetrics_Cb8, 85, B.CharacterMetrics_GJ1, 86, B.CharacterMetrics_zwd, 87, B.CharacterMetrics_gLH0, 88, B.CharacterMetrics_44L, 89, B.CharacterMetrics_JzM, 90, B.CharacterMetrics_s2W], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_Bq2 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq20 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq21 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq22 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_okn = new A.CharacterMetrics(0.24982, 0.74947, 0, 0);
    B.CharacterMetrics_svL = new A.CharacterMetrics(0, 0.62119, 0, 0);
    B.CharacterMetrics_gjC = new A.CharacterMetrics(0.08319, 0.58283, 0, 0);
    B.CharacterMetrics_tZA = new A.CharacterMetrics(0, 0.10803, 0, 0);
    B.CharacterMetrics_okn0 = new A.CharacterMetrics(0.24982, 0.74947, 0, 0);
    B.CharacterMetrics_Zdj = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_Htm = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_Bq23 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Zdj0 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_ttS = new A.CharacterMetrics(0.12604, 0.47534, 0, 0);
    B.CharacterMetrics_bJu = new A.CharacterMetrics(-0.13099, 0.36866, 0, 0);
    B.CharacterMetrics_Bq24 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq25 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq26 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq27 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq28 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq29 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_XZo = new A.CharacterMetrics(0.12604, 0.69141, 0, 0);
    B.CharacterMetrics_Bq210 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_L1r = new A.CharacterMetrics(0.06302, 0.69141, 0, 0);
    B.CharacterMetrics_Bq211 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_XZo0 = new A.CharacterMetrics(0.12604, 0.69141, 0, 0);
    B.CharacterMetrics_Bq212 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq213 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq214 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq215 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq216 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Pzh = new A.CharacterMetrics(0.18906, 0.69141, 0, 0);
    B.CharacterMetrics_Q57 = new A.CharacterMetrics(0.03781, 0.69141, 0, 0);
    B.CharacterMetrics_Bq217 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq218 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq219 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq220 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq221 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq222 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq223 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Pzh0 = new A.CharacterMetrics(0.18906, 0.69141, 0, 0);
    B.CharacterMetrics_XZo1 = new A.CharacterMetrics(0.12604, 0.69141, 0, 0);
    B.CharacterMetrics_okn1 = new A.CharacterMetrics(0.24982, 0.74947, 0, 0);
    B.CharacterMetrics_Bq224 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Zdj1 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_Bq225 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Zdj2 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_svL0 = new A.CharacterMetrics(0, 0.62119, 0, 0);
    B.CharacterMetrics_Zdj3 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_Pzh1 = new A.CharacterMetrics(0.18906, 0.69141, 0, 0);
    B.CharacterMetrics_Htm0 = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_Pzh2 = new A.CharacterMetrics(0.18906, 0.69141, 0, 0);
    B.CharacterMetrics_Bq226 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq227 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq228 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Bq229 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_Zdj4 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_Zdj5 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_Zdj6 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_nnd = new A.CharacterMetrics(0.18906, 0.52396, 0, 0);
    B.CharacterMetrics_Htm1 = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_Zdj7 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_Zdj8 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_svL1 = new A.CharacterMetrics(0, 0.62119, 0, 0);
    B.CharacterMetrics_Zdj9 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.CharacterMetrics_eHt = new A.CharacterMetrics(0, 0.52396, 0, 0);
    B.CharacterMetrics_eHt0 = new A.CharacterMetrics(0, 0.52396, 0, 0);
    B.CharacterMetrics_Htm2 = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_Htm3 = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_Htm4 = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_svL2 = new A.CharacterMetrics(0, 0.62119, 0, 0);
    B.CharacterMetrics_svL3 = new A.CharacterMetrics(0, 0.62119, 0, 0);
    B.CharacterMetrics_Pzh3 = new A.CharacterMetrics(0.18906, 0.69141, 0, 0);
    B.CharacterMetrics_Pzh4 = new A.CharacterMetrics(0.18906, 0.69141, 0, 0);
    B.CharacterMetrics_Htm5 = new A.CharacterMetrics(0.18906, 0.47534, 0, 0);
    B.CharacterMetrics_Bq230 = new A.CharacterMetrics(0, 0.69141, 0, 0);
    B.CharacterMetrics_svL4 = new A.CharacterMetrics(0, 0.62119, 0, 0);
    B.CharacterMetrics_Zdj10 = new A.CharacterMetrics(0, 0.47534, 0, 0);
    B.Map_yJz2H = new C.GeneralConstantMap([33, B.CharacterMetrics_Bq2, 34, B.CharacterMetrics_Bq20, 38, B.CharacterMetrics_Bq21, 39, B.CharacterMetrics_Bq22, 40, B.CharacterMetrics_okn, 41, B.CharacterMetrics_okn, 42, B.CharacterMetrics_svL, 43, B.CharacterMetrics_gjC, 44, B.CharacterMetrics_tZA, 45, B.CharacterMetrics_gjC, 46, B.CharacterMetrics_tZA, 47, B.CharacterMetrics_okn0, 48, B.CharacterMetrics_Zdj, 49, B.CharacterMetrics_Zdj, 50, B.CharacterMetrics_Zdj, 51, B.CharacterMetrics_Htm, 52, B.CharacterMetrics_Htm, 53, B.CharacterMetrics_Htm, 54, B.CharacterMetrics_Bq23, 55, B.CharacterMetrics_Htm, 56, B.CharacterMetrics_Bq23, 57, B.CharacterMetrics_Htm, 58, B.CharacterMetrics_Zdj0, 59, B.CharacterMetrics_ttS, 61, B.CharacterMetrics_bJu, 63, B.CharacterMetrics_Bq24, 65, B.CharacterMetrics_Bq25, 66, B.CharacterMetrics_Bq26, 67, B.CharacterMetrics_Bq27, 68, B.CharacterMetrics_Bq28, 69, B.CharacterMetrics_Bq29, 70, B.CharacterMetrics_XZo, 71, B.CharacterMetrics_Bq210, 72, B.CharacterMetrics_L1r, 73, B.CharacterMetrics_Bq211, 74, B.CharacterMetrics_XZo0, 75, B.CharacterMetrics_Bq212, 76, B.CharacterMetrics_Bq213, 77, B.CharacterMetrics_Bq214, 78, B.CharacterMetrics_Bq215, 79, B.CharacterMetrics_Bq216, 80, B.CharacterMetrics_Pzh, 81, B.CharacterMetrics_Q57, 82, B.CharacterMetrics_Bq217, 83, B.CharacterMetrics_Bq218, 84, B.CharacterMetrics_Bq219, 85, B.CharacterMetrics_Bq220, 86, B.CharacterMetrics_Bq221, 87, B.CharacterMetrics_Bq222, 88, B.CharacterMetrics_Bq223, 89, B.CharacterMetrics_Pzh0, 90, B.CharacterMetrics_XZo1, 91, B.CharacterMetrics_okn1, 93, B.CharacterMetrics_okn1, 94, B.CharacterMetrics_Bq224, 97, B.CharacterMetrics_Zdj1, 98, B.CharacterMetrics_Bq225, 99, B.CharacterMetrics_Zdj2, 100, B.CharacterMetrics_svL0, 101, B.CharacterMetrics_Zdj3, 102, B.CharacterMetrics_Pzh1, 103, B.CharacterMetrics_Htm0, 104, B.CharacterMetrics_Pzh2, 105, B.CharacterMetrics_Bq226, 106, B.CharacterMetrics_Bq227, 107, B.CharacterMetrics_Bq228, 108, B.CharacterMetrics_Bq229, 109, B.CharacterMetrics_Zdj4, 110, B.CharacterMetrics_Zdj5, 111, B.CharacterMetrics_Zdj6, 112, B.CharacterMetrics_nnd, 113, B.CharacterMetrics_Htm1, 114, B.CharacterMetrics_Zdj7, 115, B.CharacterMetrics_Zdj8, 116, B.CharacterMetrics_svL1, 117, B.CharacterMetrics_Zdj9, 118, B.CharacterMetrics_eHt, 119, B.CharacterMetrics_eHt0, 120, B.CharacterMetrics_Htm2, 121, B.CharacterMetrics_Htm3, 122, B.CharacterMetrics_Htm4, 8216, B.CharacterMetrics_Bq20, 8217, B.CharacterMetrics_Bq20, 58112, B.CharacterMetrics_svL2, 58113, B.CharacterMetrics_svL3, 58114, B.CharacterMetrics_Pzh3, 58115, B.CharacterMetrics_Pzh4, 58116, B.CharacterMetrics_Htm5, 58117, B.CharacterMetrics_Bq230, 58118, B.CharacterMetrics_svL4, 58119, B.CharacterMetrics_Zdj10], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_dQ1 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ10 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_Z0j = new A.CharacterMetrics(0.05556, 0.75, 0, 0);
    B.CharacterMetrics_Z0j0 = new A.CharacterMetrics(0.05556, 0.75, 0, 0);
    B.CharacterMetrics_dQ11 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ12 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Nd5 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_Coa = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_Muz = new A.CharacterMetrics(0.13333, 0.63333, 0, 0);
    B.CharacterMetrics_tHb = new A.CharacterMetrics(0.19444, 0.15556, 0, 0);
    B.CharacterMetrics_58p = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_439 = new A.CharacterMetrics(0, 0.15556, 0, 0);
    B.CharacterMetrics_Nd50 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_CBT0 = new A.CharacterMetrics(0, 0.64444, 0, 0);
    B.CharacterMetrics_58p0 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_7CM = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_Vbo = new A.CharacterMetrics(0.08556, 0.58556, 0, 0);
    B.CharacterMetrics_qWW = new A.CharacterMetrics(-0.10889, 0.39111, 0, 0);
    B.CharacterMetrics_dQ13 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_E2v = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v0 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v1 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v2 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v3 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v4 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v5 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v6 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v7 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v8 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v9 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v10 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v11 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v12 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v13 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_qSQ = new A.CharacterMetrics(0.19444, 0.68611, 0, 0);
    B.CharacterMetrics_E2v14 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v15 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v16 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v17 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_01K = new A.CharacterMetrics(0, 0.68611, 0.01597, 0);
    B.CharacterMetrics_01K0 = new A.CharacterMetrics(0, 0.68611, 0.01597, 0);
    B.CharacterMetrics_7Co = new A.CharacterMetrics(0, 0.68611, 0.02875, 0);
    B.CharacterMetrics_E2v18 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_Nd51 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_dQ14 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Gs7 = new A.CharacterMetrics(0.31, 0.13444, 0.03194, 0);
    B.CharacterMetrics_58p1 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_dQ15 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p2 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p3 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_I7x = new A.CharacterMetrics(0, 0.69444, 0.10903, 0);
    B.CharacterMetrics_ie5 = new A.CharacterMetrics(0.19444, 0.44444, 0.01597, 0);
    B.CharacterMetrics_f3e0 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_dQ16 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p4 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p5 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p6 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_7CM0 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_7CM1 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_58p7 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p8 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_clc = new A.CharacterMetrics(0, 0.63492, 0, 0);
    B.CharacterMetrics_C2s = new A.CharacterMetrics(0, 0.44444, 0.01597, 0);
    B.CharacterMetrics_C2s0 = new A.CharacterMetrics(0, 0.44444, 0.01597, 0);
    B.CharacterMetrics_58p9 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_ie50 = new A.CharacterMetrics(0.19444, 0.44444, 0.01597, 0);
    B.CharacterMetrics_LfA = new A.CharacterMetrics(0.35, 0.34444, 0, 0);
    B.CharacterMetrics_58p10 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_dQ17 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_aiS = new A.CharacterMetrics(0.17014, 0, 0, 0);
    B.CharacterMetrics_E2v19 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_N9P = new A.CharacterMetrics(0.04861, 0.73472, 0, 0);
    B.CharacterMetrics_dQ18 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p11 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_ZwP = new A.CharacterMetrics(0.09722, 0.54167, 0, 0);
    B.CharacterMetrics_E2v20 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_58p12 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_7CM2 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_xJj = new A.CharacterMetrics(0, 0.63194, 0, 0);
    B.CharacterMetrics_eCx = new A.CharacterMetrics(0, 0.59611, 0, 0);
    B.CharacterMetrics_E2v21 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v22 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v23 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_E2v24 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_GZK = new A.CharacterMetrics(0, 0.44444, 0.03194, 0);
    B.CharacterMetrics_GZK0 = new A.CharacterMetrics(0, 0.44444, 0.03194, 0);
    B.CharacterMetrics_f3e1 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_XSW = new A.CharacterMetrics(0, 0.55556, 0, 0);
    B.CharacterMetrics_AVN = new A.CharacterMetrics(0, 0.72444, 0.15486, 0);
    B.CharacterMetrics_dQ19 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ110 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ111 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_7CM3 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_dQ112 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_qWW0 = new A.CharacterMetrics(-0.10889, 0.39111, 0, 0);
    B.CharacterMetrics_f3e2 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_f3e3 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_f3e4 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_Nd52 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_O6g = new A.CharacterMetrics(0, 0.69444, 0.06389, 0);
    B.CharacterMetrics_Vbo0 = new A.CharacterMetrics(0.08556, 0.58556, 0, 0);
    B.CharacterMetrics_AoR = new A.CharacterMetrics(-0.02778, 0.47222, 0, 0);
    B.CharacterMetrics_kSb = new A.CharacterMetrics(-0.02639, 0.47361, 0, 0);
    B.CharacterMetrics_eqU = new A.CharacterMetrics(0.18, 0.82, 0, 0);
    B.CharacterMetrics_58p13 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_XSW0 = new A.CharacterMetrics(0, 0.55556, 0, 0);
    B.CharacterMetrics_eaJ = new A.CharacterMetrics(0.19444, 0.69444, 0.12778, 0);
    B.CharacterMetrics_f3e5 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_s1L = new A.CharacterMetrics(0.00222, 0.50222, 0, 0);
    B.CharacterMetrics_HLa = new A.CharacterMetrics(0.02444, 0.52444, 0, 0);
    B.CharacterMetrics_v2R = new A.CharacterMetrics(0.19667, 0.69667, 0, 0);
    B.CharacterMetrics_Vbo1 = new A.CharacterMetrics(0.08556, 0.58556, 0, 0);
    B.CharacterMetrics_kSb0 = new A.CharacterMetrics(-0.02639, 0.47361, 0, 0);
    B.CharacterMetrics_Nd53 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_GOV = new A.CharacterMetrics(-0.13889, 0.36111, 0, 0);
    B.CharacterMetrics_f3e6 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_gFq = new A.CharacterMetrics(0.12963, 0.69444, 0, 0);
    B.CharacterMetrics_Coa0 = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_f3e7 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_f3e8 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.Map_JckB2 = new C.GeneralConstantMap([33, B.CharacterMetrics_dQ1, 34, B.CharacterMetrics_dQ10, 35, B.CharacterMetrics_f3e, 36, B.CharacterMetrics_Z0j, 37, B.CharacterMetrics_Z0j0, 38, B.CharacterMetrics_dQ11, 39, B.CharacterMetrics_dQ12, 40, B.CharacterMetrics_Nd5, 41, B.CharacterMetrics_Nd5, 42, B.CharacterMetrics_Coa, 43, B.CharacterMetrics_Muz, 44, B.CharacterMetrics_tHb, 45, B.CharacterMetrics_58p, 46, B.CharacterMetrics_439, 47, B.CharacterMetrics_Nd50, 48, B.CharacterMetrics_CBT0, 49, B.CharacterMetrics_CBT0, 50, B.CharacterMetrics_CBT0, 51, B.CharacterMetrics_CBT0, 52, B.CharacterMetrics_CBT0, 53, B.CharacterMetrics_CBT0, 54, B.CharacterMetrics_CBT0, 55, B.CharacterMetrics_CBT0, 56, B.CharacterMetrics_CBT0, 57, B.CharacterMetrics_CBT0, 58, B.CharacterMetrics_58p0, 59, B.CharacterMetrics_7CM, 60, B.CharacterMetrics_Vbo, 61, B.CharacterMetrics_qWW, 62, B.CharacterMetrics_Vbo, 63, B.CharacterMetrics_dQ13, 64, B.CharacterMetrics_dQ11, 65, B.CharacterMetrics_E2v, 66, B.CharacterMetrics_E2v0, 67, B.CharacterMetrics_E2v1, 68, B.CharacterMetrics_E2v2, 69, B.CharacterMetrics_E2v3, 70, B.CharacterMetrics_E2v4, 71, B.CharacterMetrics_E2v5, 72, B.CharacterMetrics_E2v6, 73, B.CharacterMetrics_E2v7, 74, B.CharacterMetrics_E2v8, 75, B.CharacterMetrics_E2v9, 76, B.CharacterMetrics_E2v10, 77, B.CharacterMetrics_E2v11, 78, B.CharacterMetrics_E2v6, 79, B.CharacterMetrics_E2v12, 80, B.CharacterMetrics_E2v13, 81, B.CharacterMetrics_qSQ, 82, B.CharacterMetrics_E2v14, 83, B.CharacterMetrics_E2v15, 84, B.CharacterMetrics_E2v16, 85, B.CharacterMetrics_E2v17, 86, B.CharacterMetrics_01K, 87, B.CharacterMetrics_01K0, 88, B.CharacterMetrics_E2v, 89, B.CharacterMetrics_7Co, 90, B.CharacterMetrics_E2v18, 91, B.CharacterMetrics_Nd51, 92, B.CharacterMetrics_Nd50, 93, B.CharacterMetrics_Nd51, 94, B.CharacterMetrics_dQ14, 95, B.CharacterMetrics_Gs7, 97, B.CharacterMetrics_58p1, 98, B.CharacterMetrics_dQ15, 99, B.CharacterMetrics_58p2, 100, B.CharacterMetrics_dQ15, 101, B.CharacterMetrics_58p3, 102, B.CharacterMetrics_I7x, 103, B.CharacterMetrics_ie5, 104, B.CharacterMetrics_dQ15, 105, B.CharacterMetrics_dQ12, 106, B.CharacterMetrics_f3e0, 107, B.CharacterMetrics_dQ16, 108, B.CharacterMetrics_dQ12, 109, B.CharacterMetrics_58p4, 110, B.CharacterMetrics_58p5, 111, B.CharacterMetrics_58p6, 112, B.CharacterMetrics_7CM0, 113, B.CharacterMetrics_7CM1, 114, B.CharacterMetrics_58p7, 115, B.CharacterMetrics_58p8, 116, B.CharacterMetrics_clc, 117, B.CharacterMetrics_58p5, 118, B.CharacterMetrics_C2s, 119, B.CharacterMetrics_C2s0, 120, B.CharacterMetrics_58p9, 121, B.CharacterMetrics_ie50, 122, B.CharacterMetrics_58p2, 123, B.CharacterMetrics_Nd50, 124, B.CharacterMetrics_Nd51, 125, B.CharacterMetrics_Nd50, 126, B.CharacterMetrics_LfA, 168, B.CharacterMetrics_dQ14, 172, B.CharacterMetrics_58p10, 176, B.CharacterMetrics_dQ17, 177, B.CharacterMetrics_Muz, 184, B.CharacterMetrics_aiS, 198, B.CharacterMetrics_E2v19, 215, B.CharacterMetrics_Muz, 216, B.CharacterMetrics_N9P, 223, B.CharacterMetrics_dQ18, 230, B.CharacterMetrics_58p11, 247, B.CharacterMetrics_Muz, 248, B.CharacterMetrics_ZwP, 305, B.CharacterMetrics_58p0, 338, B.CharacterMetrics_E2v20, 339, B.CharacterMetrics_58p12, 567, B.CharacterMetrics_7CM2, 710, B.CharacterMetrics_dQ14, 711, B.CharacterMetrics_xJj, 713, B.CharacterMetrics_eCx, 714, B.CharacterMetrics_dQ14, 715, B.CharacterMetrics_dQ14, 728, B.CharacterMetrics_dQ14, 729, B.CharacterMetrics_dQ12, 730, B.CharacterMetrics_dQ17, 732, B.CharacterMetrics_dQ14, 733, B.CharacterMetrics_dQ14, 915, B.CharacterMetrics_E2v10, 916, B.CharacterMetrics_E2v21, 920, B.CharacterMetrics_E2v22, 923, B.CharacterMetrics_E2v23, 926, B.CharacterMetrics_E2v24, 928, B.CharacterMetrics_E2v6, 931, B.CharacterMetrics_E2v1, 933, B.CharacterMetrics_E2v22, 934, B.CharacterMetrics_E2v1, 936, B.CharacterMetrics_E2v22, 937, B.CharacterMetrics_E2v1, 8211, B.CharacterMetrics_GZK, 8212, B.CharacterMetrics_GZK0, 8216, B.CharacterMetrics_dQ12, 8217, B.CharacterMetrics_dQ12, 8220, B.CharacterMetrics_dQ10, 8221, B.CharacterMetrics_dQ10, 8224, B.CharacterMetrics_f3e1, 8225, B.CharacterMetrics_f3e1, 8242, B.CharacterMetrics_XSW, 8407, B.CharacterMetrics_AVN, 8463, B.CharacterMetrics_dQ19, 8465, B.CharacterMetrics_dQ110, 8467, B.CharacterMetrics_dQ111, 8472, B.CharacterMetrics_7CM3, 8476, B.CharacterMetrics_dQ110, 8501, B.CharacterMetrics_dQ112, 8592, B.CharacterMetrics_qWW0, 8593, B.CharacterMetrics_f3e2, 8594, B.CharacterMetrics_qWW0, 8595, B.CharacterMetrics_f3e2, 8596, B.CharacterMetrics_qWW0, 8597, B.CharacterMetrics_Nd50, 8598, B.CharacterMetrics_f3e3, 8599, B.CharacterMetrics_f3e3, 8600, B.CharacterMetrics_f3e3, 8601, B.CharacterMetrics_f3e3, 8636, B.CharacterMetrics_qWW0, 8637, B.CharacterMetrics_qWW0, 8640, B.CharacterMetrics_qWW0, 8641, B.CharacterMetrics_qWW0, 8656, B.CharacterMetrics_qWW0, 8657, B.CharacterMetrics_f3e4, 8658, B.CharacterMetrics_qWW0, 8659, B.CharacterMetrics_f3e4, 8660, B.CharacterMetrics_qWW0, 8661, B.CharacterMetrics_Nd52, 8704, B.CharacterMetrics_dQ15, 8706, B.CharacterMetrics_O6g, 8707, B.CharacterMetrics_dQ15, 8709, B.CharacterMetrics_Z0j, 8711, B.CharacterMetrics_E2v21, 8712, B.CharacterMetrics_Vbo0, 8715, B.CharacterMetrics_Vbo0, 8722, B.CharacterMetrics_Muz, 8723, B.CharacterMetrics_Muz, 8725, B.CharacterMetrics_Nd50, 8726, B.CharacterMetrics_Nd50, 8727, B.CharacterMetrics_AoR, 8728, B.CharacterMetrics_kSb, 8729, B.CharacterMetrics_kSb, 8730, B.CharacterMetrics_eqU, 8733, B.CharacterMetrics_58p12, 8734, B.CharacterMetrics_58p13, 8736, B.CharacterMetrics_Ghm1, 8739, B.CharacterMetrics_Nd51, 8741, B.CharacterMetrics_Nd50, 8743, B.CharacterMetrics_XSW0, 8744, B.CharacterMetrics_XSW0, 8745, B.CharacterMetrics_XSW0, 8746, B.CharacterMetrics_XSW0, 8747, B.CharacterMetrics_eaJ, 8764, B.CharacterMetrics_qWW, 8768, B.CharacterMetrics_f3e5, 8771, B.CharacterMetrics_s1L, 8776, B.CharacterMetrics_HLa, 8781, B.CharacterMetrics_s1L, 8801, B.CharacterMetrics_s1L, 8804, B.CharacterMetrics_v2R, 8805, B.CharacterMetrics_v2R, 8810, B.CharacterMetrics_Vbo1, 8811, B.CharacterMetrics_Vbo1, 8826, B.CharacterMetrics_Vbo, 8827, B.CharacterMetrics_Vbo, 8834, B.CharacterMetrics_Vbo, 8835, B.CharacterMetrics_Vbo, 8838, B.CharacterMetrics_v2R, 8839, B.CharacterMetrics_v2R, 8846, B.CharacterMetrics_XSW0, 8849, B.CharacterMetrics_v2R, 8850, B.CharacterMetrics_v2R, 8851, B.CharacterMetrics_XSW0, 8852, B.CharacterMetrics_XSW0, 8853, B.CharacterMetrics_Muz, 8854, B.CharacterMetrics_Muz, 8855, B.CharacterMetrics_Muz, 8856, B.CharacterMetrics_Muz, 8857, B.CharacterMetrics_Muz, 8866, B.CharacterMetrics_dQ112, 8867, B.CharacterMetrics_dQ112, 8868, B.CharacterMetrics_dQ11, 8869, B.CharacterMetrics_dQ11, 8900, B.CharacterMetrics_kSb, 8901, B.CharacterMetrics_kSb0, 8902, B.CharacterMetrics_AoR, 8968, B.CharacterMetrics_Nd53, 8969, B.CharacterMetrics_Nd53, 8970, B.CharacterMetrics_Nd53, 8971, B.CharacterMetrics_Nd53, 8994, B.CharacterMetrics_GOV, 8995, B.CharacterMetrics_GOV, 9651, B.CharacterMetrics_f3e6, 9657, B.CharacterMetrics_AoR, 9661, B.CharacterMetrics_f3e6, 9667, B.CharacterMetrics_AoR, 9711, B.CharacterMetrics_f3e3, 9824, B.CharacterMetrics_gFq, 9825, B.CharacterMetrics_gFq, 9826, B.CharacterMetrics_gFq, 9827, B.CharacterMetrics_gFq, 9837, B.CharacterMetrics_Coa0, 9838, B.CharacterMetrics_f3e7, 9839, B.CharacterMetrics_f3e7, 10216, B.CharacterMetrics_Nd5, 10217, B.CharacterMetrics_Nd5, 10815, B.CharacterMetrics_E2v6, 10927, B.CharacterMetrics_v2R, 10928, B.CharacterMetrics_v2R, 57376, B.CharacterMetrics_f3e8], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_ZbT = new A.CharacterMetrics(0, 0.69444, 0.11417, 0);
    B.CharacterMetrics_wcb = new A.CharacterMetrics(0, 0.69444, 0.07939, 0);
    B.CharacterMetrics_UPS = new A.CharacterMetrics(0.19444, 0.69444, 0.06833, 0);
    B.CharacterMetrics_iX9 = new A.CharacterMetrics(0.05556, 0.75, 0.12861, 0);
    B.CharacterMetrics_aVf = new A.CharacterMetrics(0, 0.69444, 0.08528, 0);
    B.CharacterMetrics_sHr = new A.CharacterMetrics(0, 0.69444, 0.12945, 0);
    B.CharacterMetrics_fif = new A.CharacterMetrics(0.25, 0.75, 0.15806, 0);
    B.CharacterMetrics_xOk = new A.CharacterMetrics(0.25, 0.75, 0.03306, 0);
    B.CharacterMetrics_eeN = new A.CharacterMetrics(0, 0.75, 0.14333, 0);
    B.CharacterMetrics_3bN = new A.CharacterMetrics(0.10333, 0.60333, 0.03306, 0);
    B.CharacterMetrics_BPj = new A.CharacterMetrics(0.19444, 0.14722, 0, 0);
    B.CharacterMetrics_w9S = new A.CharacterMetrics(0, 0.44444, 0.02611, 0);
    B.CharacterMetrics_XQz = new A.CharacterMetrics(0, 0.14722, 0, 0);
    B.CharacterMetrics_fif0 = new A.CharacterMetrics(0.25, 0.75, 0.15806, 0);
    B.CharacterMetrics_qyx = new A.CharacterMetrics(0, 0.64444, 0.13167, 0);
    B.CharacterMetrics_Zyf = new A.CharacterMetrics(0.19444, 0.64444, 0.13167, 0);
    B.CharacterMetrics_GWY = new A.CharacterMetrics(0, 0.44444, 0.06695, 0);
    B.CharacterMetrics_PP4 = new A.CharacterMetrics(0.19444, 0.44444, 0.06695, 0);
    B.CharacterMetrics_yJG = new A.CharacterMetrics(-0.10889, 0.39111, 0.06833, 0);
    B.CharacterMetrics_kKC = new A.CharacterMetrics(0, 0.69444, 0.11472, 0);
    B.CharacterMetrics_vJ6 = new A.CharacterMetrics(0, 0.69444, 0.09208, 0);
    B.CharacterMetrics_E2v25 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_hj1 = new A.CharacterMetrics(0, 0.68611, 0.0992, 0);
    B.CharacterMetrics_BrH = new A.CharacterMetrics(0, 0.68611, 0.14208, 0);
    B.CharacterMetrics_7XV = new A.CharacterMetrics(0, 0.68611, 0.09062, 0);
    B.CharacterMetrics_0Kp = new A.CharacterMetrics(0, 0.68611, 0.11431, 0);
    B.CharacterMetrics_g8y = new A.CharacterMetrics(0, 0.68611, 0.12903, 0);
    B.CharacterMetrics_0cn = new A.CharacterMetrics(0, 0.68611, 0.07347, 0);
    B.CharacterMetrics_4sQ = new A.CharacterMetrics(0, 0.68611, 0.17208, 0);
    B.CharacterMetrics_9j0 = new A.CharacterMetrics(0, 0.68611, 0.15681, 0);
    B.CharacterMetrics_fT0 = new A.CharacterMetrics(0, 0.68611, 0.145, 0);
    B.CharacterMetrics_BrH0 = new A.CharacterMetrics(0, 0.68611, 0.14208, 0);
    B.CharacterMetrics_E2v26 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_4sQ0 = new A.CharacterMetrics(0, 0.68611, 0.17208, 0);
    B.CharacterMetrics_7XV0 = new A.CharacterMetrics(0, 0.68611, 0.09062, 0);
    B.CharacterMetrics_hj10 = new A.CharacterMetrics(0, 0.68611, 0.0992, 0);
    B.CharacterMetrics_UD5 = new A.CharacterMetrics(0.19444, 0.68611, 0.09062, 0);
    B.CharacterMetrics_N49 = new A.CharacterMetrics(0, 0.68611, 0.02559, 0);
    B.CharacterMetrics_o4u = new A.CharacterMetrics(0, 0.68611, 0.11264, 0);
    B.CharacterMetrics_g8y0 = new A.CharacterMetrics(0, 0.68611, 0.12903, 0);
    B.CharacterMetrics_4sQ1 = new A.CharacterMetrics(0, 0.68611, 0.17208, 0);
    B.CharacterMetrics_dee = new A.CharacterMetrics(0, 0.68611, 0.18625, 0);
    B.CharacterMetrics_dee0 = new A.CharacterMetrics(0, 0.68611, 0.18625, 0);
    B.CharacterMetrics_9j00 = new A.CharacterMetrics(0, 0.68611, 0.15681, 0);
    B.CharacterMetrics_pY1 = new A.CharacterMetrics(0, 0.68611, 0.19803, 0);
    B.CharacterMetrics_BrH1 = new A.CharacterMetrics(0, 0.68611, 0.14208, 0);
    B.CharacterMetrics_fTY = new A.CharacterMetrics(0.25, 0.75, 0.1875, 0);
    B.CharacterMetrics_uQP = new A.CharacterMetrics(0.25, 0.75, 0.09972, 0);
    B.CharacterMetrics_8jL = new A.CharacterMetrics(0, 0.69444, 0.06709, 0);
    B.CharacterMetrics_rOe = new A.CharacterMetrics(0.31, 0.13444, 0.09811, 0);
    B.CharacterMetrics_7VT = new A.CharacterMetrics(0, 0.44444, 0.09426, 0);
    B.CharacterMetrics_0Hf = new A.CharacterMetrics(0, 0.69444, 0.07861, 0);
    B.CharacterMetrics_wWt = new A.CharacterMetrics(0, 0.44444, 0.05222, 0);
    B.CharacterMetrics_GKV = new A.CharacterMetrics(0, 0.69444, 0.10861, 0);
    B.CharacterMetrics_qnA = new A.CharacterMetrics(0, 0.44444, 0.085, 0);
    B.CharacterMetrics_oni = new A.CharacterMetrics(0.19444, 0.69444, 0.21778, 0);
    B.CharacterMetrics_CYd = new A.CharacterMetrics(0.19444, 0.44444, 0.105, 0);
    B.CharacterMetrics_kB8 = new A.CharacterMetrics(0, 0.69444, 0.09426, 0);
    B.CharacterMetrics_omc = new A.CharacterMetrics(0, 0.69326, 0.11387, 0);
    B.CharacterMetrics_Nw9 = new A.CharacterMetrics(0.19444, 0.69326, 0.1672, 0);
    B.CharacterMetrics_Ar5 = new A.CharacterMetrics(0, 0.69444, 0.11111, 0);
    B.CharacterMetrics_GKV0 = new A.CharacterMetrics(0, 0.69444, 0.10861, 0);
    B.CharacterMetrics_7VT0 = new A.CharacterMetrics(0, 0.44444, 0.09426, 0);
    B.CharacterMetrics_7VT1 = new A.CharacterMetrics(0, 0.44444, 0.09426, 0);
    B.CharacterMetrics_PlW = new A.CharacterMetrics(0, 0.44444, 0.07861, 0);
    B.CharacterMetrics_koX = new A.CharacterMetrics(0.19444, 0.44444, 0.07861, 0);
    B.CharacterMetrics_EiO = new A.CharacterMetrics(0, 0.44444, 0.11111, 0);
    B.CharacterMetrics_KMJ = new A.CharacterMetrics(0, 0.44444, 0.08167, 0);
    B.CharacterMetrics_OOO = new A.CharacterMetrics(0, 0.63492, 0.09639, 0);
    B.CharacterMetrics_7VT2 = new A.CharacterMetrics(0, 0.44444, 0.09426, 0);
    B.CharacterMetrics_EiO0 = new A.CharacterMetrics(0, 0.44444, 0.11111, 0);
    B.CharacterMetrics_EiO1 = new A.CharacterMetrics(0, 0.44444, 0.11111, 0);
    B.CharacterMetrics_2MD = new A.CharacterMetrics(0, 0.44444, 0.12583, 0);
    B.CharacterMetrics_CYd0 = new A.CharacterMetrics(0.19444, 0.44444, 0.105, 0);
    B.CharacterMetrics_KYL = new A.CharacterMetrics(0, 0.44444, 0.13889, 0);
    B.CharacterMetrics_zz6 = new A.CharacterMetrics(0.35, 0.34444, 0.11472, 0);
    B.CharacterMetrics_dQ113 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_6Rw = new A.CharacterMetrics(0, 0.69444, 0.11473, 0);
    B.CharacterMetrics_dQ114 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_aiS0 = new A.CharacterMetrics(0.17014, 0, 0, 0);
    B.CharacterMetrics_0Kp0 = new A.CharacterMetrics(0, 0.68611, 0.11431, 0);
    B.CharacterMetrics_PmL = new A.CharacterMetrics(0.04861, 0.73472, 0.09062, 0);
    B.CharacterMetrics_SMo = new A.CharacterMetrics(0.19444, 0.69444, 0.09736, 0);
    B.CharacterMetrics_qnA0 = new A.CharacterMetrics(0, 0.44444, 0.085, 0);
    B.CharacterMetrics_knt = new A.CharacterMetrics(0.09722, 0.54167, 0.09458, 0);
    B.CharacterMetrics_7VT3 = new A.CharacterMetrics(0, 0.44444, 0.09426, 0);
    B.CharacterMetrics_0Kp1 = new A.CharacterMetrics(0, 0.68611, 0.11431, 0);
    B.CharacterMetrics_5jy = new A.CharacterMetrics(0.19444, 0.44444, 0.04611, 0);
    B.CharacterMetrics_LvZ = new A.CharacterMetrics(0, 0.63194, 0.08271, 0);
    B.CharacterMetrics_cMZ = new A.CharacterMetrics(0, 0.59444, 0.10444, 0);
    B.CharacterMetrics_aVf0 = new A.CharacterMetrics(0, 0.69444, 0.08528, 0);
    B.CharacterMetrics_dQ115 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_v1w = new A.CharacterMetrics(0, 0.69444, 0.10333, 0);
    B.CharacterMetrics_g8y1 = new A.CharacterMetrics(0, 0.68611, 0.12903, 0);
    B.CharacterMetrics_E2v27 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_7XV1 = new A.CharacterMetrics(0, 0.68611, 0.09062, 0);
    B.CharacterMetrics_E2v28 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_cZ6 = new A.CharacterMetrics(0, 0.68611, 0.15092, 0);
    B.CharacterMetrics_0Kp2 = new A.CharacterMetrics(0, 0.68611, 0.11431, 0);
    B.CharacterMetrics_HlX = new A.CharacterMetrics(0, 0.68611, 0.10778, 0);
    B.CharacterMetrics_WTm = new A.CharacterMetrics(0, 0.68611, 0.05632, 0);
    B.CharacterMetrics_hj11 = new A.CharacterMetrics(0, 0.68611, 0.0992, 0);
    B.CharacterMetrics_L5z = new A.CharacterMetrics(0, 0.44444, 0.09811, 0);
    B.CharacterMetrics_L5z0 = new A.CharacterMetrics(0, 0.44444, 0.09811, 0);
    B.CharacterMetrics_RS4 = new A.CharacterMetrics(0, 0.69444, 0.16772, 0);
    B.Map_F3AqH = new C.GeneralConstantMap([33, B.CharacterMetrics_ZbT, 34, B.CharacterMetrics_wcb, 35, B.CharacterMetrics_UPS, 37, B.CharacterMetrics_iX9, 38, B.CharacterMetrics_aVf, 39, B.CharacterMetrics_sHr, 40, B.CharacterMetrics_fif, 41, B.CharacterMetrics_xOk, 42, B.CharacterMetrics_eeN, 43, B.CharacterMetrics_3bN, 44, B.CharacterMetrics_BPj, 45, B.CharacterMetrics_w9S, 46, B.CharacterMetrics_XQz, 47, B.CharacterMetrics_fif0, 48, B.CharacterMetrics_qyx, 49, B.CharacterMetrics_qyx, 50, B.CharacterMetrics_qyx, 51, B.CharacterMetrics_qyx, 52, B.CharacterMetrics_Zyf, 53, B.CharacterMetrics_qyx, 54, B.CharacterMetrics_qyx, 55, B.CharacterMetrics_Zyf, 56, B.CharacterMetrics_qyx, 57, B.CharacterMetrics_qyx, 58, B.CharacterMetrics_GWY, 59, B.CharacterMetrics_PP4, 61, B.CharacterMetrics_yJG, 63, B.CharacterMetrics_kKC, 64, B.CharacterMetrics_vJ6, 65, B.CharacterMetrics_E2v25, 66, B.CharacterMetrics_hj1, 67, B.CharacterMetrics_BrH, 68, B.CharacterMetrics_7XV, 69, B.CharacterMetrics_0Kp, 70, B.CharacterMetrics_g8y, 71, B.CharacterMetrics_0cn, 72, B.CharacterMetrics_4sQ, 73, B.CharacterMetrics_9j0, 74, B.CharacterMetrics_fT0, 75, B.CharacterMetrics_BrH0, 76, B.CharacterMetrics_E2v26, 77, B.CharacterMetrics_4sQ0, 78, B.CharacterMetrics_4sQ, 79, B.CharacterMetrics_7XV0, 80, B.CharacterMetrics_hj10, 81, B.CharacterMetrics_UD5, 82, B.CharacterMetrics_N49, 83, B.CharacterMetrics_o4u, 84, B.CharacterMetrics_g8y0, 85, B.CharacterMetrics_4sQ1, 86, B.CharacterMetrics_dee, 87, B.CharacterMetrics_dee0, 88, B.CharacterMetrics_9j00, 89, B.CharacterMetrics_pY1, 90, B.CharacterMetrics_BrH1, 91, B.CharacterMetrics_fTY, 93, B.CharacterMetrics_uQP, 94, B.CharacterMetrics_8jL, 95, B.CharacterMetrics_rOe, 97, B.CharacterMetrics_7VT, 98, B.CharacterMetrics_0Hf, 99, B.CharacterMetrics_wWt, 100, B.CharacterMetrics_GKV, 101, B.CharacterMetrics_qnA, 102, B.CharacterMetrics_oni, 103, B.CharacterMetrics_CYd, 104, B.CharacterMetrics_kB8, 105, B.CharacterMetrics_omc, 106, B.CharacterMetrics_Nw9, 107, B.CharacterMetrics_Ar5, 108, B.CharacterMetrics_GKV0, 109, B.CharacterMetrics_7VT0, 110, B.CharacterMetrics_7VT1, 111, B.CharacterMetrics_PlW, 112, B.CharacterMetrics_koX, 113, B.CharacterMetrics_CYd, 114, B.CharacterMetrics_EiO, 115, B.CharacterMetrics_KMJ, 116, B.CharacterMetrics_OOO, 117, B.CharacterMetrics_7VT2, 118, B.CharacterMetrics_EiO0, 119, B.CharacterMetrics_EiO1, 120, B.CharacterMetrics_2MD, 121, B.CharacterMetrics_CYd0, 122, B.CharacterMetrics_KYL, 126, B.CharacterMetrics_zz6, 163, B.CharacterMetrics_dQ113, 168, B.CharacterMetrics_6Rw, 176, B.CharacterMetrics_dQ114, 184, B.CharacterMetrics_aiS0, 198, B.CharacterMetrics_0Kp0, 216, B.CharacterMetrics_PmL, 223, B.CharacterMetrics_SMo, 230, B.CharacterMetrics_qnA0, 248, B.CharacterMetrics_knt, 305, B.CharacterMetrics_7VT3, 338, B.CharacterMetrics_0Kp1, 339, B.CharacterMetrics_qnA0, 567, B.CharacterMetrics_5jy, 710, B.CharacterMetrics_8jL, 711, B.CharacterMetrics_LvZ, 713, B.CharacterMetrics_cMZ, 714, B.CharacterMetrics_aVf0, 715, B.CharacterMetrics_dQ115, 728, B.CharacterMetrics_v1w, 729, B.CharacterMetrics_sHr, 730, B.CharacterMetrics_dQ114, 732, B.CharacterMetrics_kKC, 733, B.CharacterMetrics_kKC, 915, B.CharacterMetrics_g8y1, 916, B.CharacterMetrics_E2v27, 920, B.CharacterMetrics_7XV1, 923, B.CharacterMetrics_E2v28, 926, B.CharacterMetrics_cZ6, 928, B.CharacterMetrics_4sQ, 931, B.CharacterMetrics_0Kp2, 933, B.CharacterMetrics_HlX, 934, B.CharacterMetrics_WTm, 936, B.CharacterMetrics_HlX, 937, B.CharacterMetrics_hj11, 8211, B.CharacterMetrics_L5z, 8212, B.CharacterMetrics_L5z0, 8216, B.CharacterMetrics_sHr, 8217, B.CharacterMetrics_sHr, 8220, B.CharacterMetrics_RS4, 8221, B.CharacterMetrics_wcb], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_sJC = new A.CharacterMetrics(0, 0.69444, 0.12417, 0);
    B.CharacterMetrics_vLI = new A.CharacterMetrics(0, 0.69444, 0.06961, 0);
    B.CharacterMetrics_ipO = new A.CharacterMetrics(0.19444, 0.69444, 0.06616, 0);
    B.CharacterMetrics_JG2 = new A.CharacterMetrics(0.05556, 0.75, 0.13639, 0);
    B.CharacterMetrics_EX0 = new A.CharacterMetrics(0, 0.69444, 0.09694, 0);
    B.CharacterMetrics_0UU = new A.CharacterMetrics(0.25, 0.75, 0.16194, 0);
    B.CharacterMetrics_buB = new A.CharacterMetrics(0.25, 0.75, 0.03694, 0);
    B.CharacterMetrics_ow5 = new A.CharacterMetrics(0, 0.75, 0.14917, 0);
    B.CharacterMetrics_wqG = new A.CharacterMetrics(0.05667, 0.56167, 0.03694, 0);
    B.CharacterMetrics_jg2 = new A.CharacterMetrics(0.19444, 0.10556, 0, 0);
    B.CharacterMetrics_zRf = new A.CharacterMetrics(0, 0.43056, 0.02826, 0);
    B.CharacterMetrics_d0j = new A.CharacterMetrics(0, 0.10556, 0, 0);
    B.CharacterMetrics_0UU0 = new A.CharacterMetrics(0.25, 0.75, 0.16194, 0);
    B.CharacterMetrics_bcu = new A.CharacterMetrics(0, 0.64444, 0.13556, 0);
    B.CharacterMetrics_ltv = new A.CharacterMetrics(0.19444, 0.64444, 0.13556, 0);
    B.CharacterMetrics_nCg = new A.CharacterMetrics(0, 0.43056, 0.0582, 0);
    B.CharacterMetrics_JPx = new A.CharacterMetrics(0.19444, 0.43056, 0.0582, 0);
    B.CharacterMetrics_mmY = new A.CharacterMetrics(-0.13313, 0.36687, 0.06616, 0);
    B.CharacterMetrics_1G6 = new A.CharacterMetrics(0, 0.69444, 0.1225, 0);
    B.CharacterMetrics_JUa = new A.CharacterMetrics(0, 0.69444, 0.09597, 0);
    B.CharacterMetrics_hyV = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_PEl = new A.CharacterMetrics(0, 0.68333, 0.10257, 0);
    B.CharacterMetrics_ChJ = new A.CharacterMetrics(0, 0.68333, 0.14528, 0);
    B.CharacterMetrics_LKf = new A.CharacterMetrics(0, 0.68333, 0.09403, 0);
    B.CharacterMetrics_ffx = new A.CharacterMetrics(0, 0.68333, 0.12028, 0);
    B.CharacterMetrics_TyU = new A.CharacterMetrics(0, 0.68333, 0.13305, 0);
    B.CharacterMetrics_GTM = new A.CharacterMetrics(0, 0.68333, 0.08722, 0);
    B.CharacterMetrics_Ypo = new A.CharacterMetrics(0, 0.68333, 0.16389, 0);
    B.CharacterMetrics_QDS = new A.CharacterMetrics(0, 0.68333, 0.15806, 0);
    B.CharacterMetrics_NDp = new A.CharacterMetrics(0, 0.68333, 0.14028, 0);
    B.CharacterMetrics_ChJ0 = new A.CharacterMetrics(0, 0.68333, 0.14528, 0);
    B.CharacterMetrics_hyV0 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_Ypo0 = new A.CharacterMetrics(0, 0.68333, 0.16389, 0);
    B.CharacterMetrics_LKf0 = new A.CharacterMetrics(0, 0.68333, 0.09403, 0);
    B.CharacterMetrics_PEl0 = new A.CharacterMetrics(0, 0.68333, 0.10257, 0);
    B.CharacterMetrics_o87 = new A.CharacterMetrics(0.19444, 0.68333, 0.09403, 0);
    B.CharacterMetrics_YkG = new A.CharacterMetrics(0, 0.68333, 0.03868, 0);
    B.CharacterMetrics_4qF = new A.CharacterMetrics(0, 0.68333, 0.11972, 0);
    B.CharacterMetrics_TyU0 = new A.CharacterMetrics(0, 0.68333, 0.13305, 0);
    B.CharacterMetrics_oiA = new A.CharacterMetrics(0, 0.68333, 0.18361, 0);
    B.CharacterMetrics_oiA0 = new A.CharacterMetrics(0, 0.68333, 0.18361, 0);
    B.CharacterMetrics_QDS0 = new A.CharacterMetrics(0, 0.68333, 0.15806, 0);
    B.CharacterMetrics_C0q = new A.CharacterMetrics(0, 0.68333, 0.19383, 0);
    B.CharacterMetrics_ChJ1 = new A.CharacterMetrics(0, 0.68333, 0.14528, 0);
    B.CharacterMetrics_fTY0 = new A.CharacterMetrics(0.25, 0.75, 0.1875, 0);
    B.CharacterMetrics_5kk = new A.CharacterMetrics(0.25, 0.75, 0.10528, 0);
    B.CharacterMetrics_39L = new A.CharacterMetrics(0, 0.69444, 0.06646, 0);
    B.CharacterMetrics_pyk = new A.CharacterMetrics(0.31, 0.12056, 0.09208, 0);
    B.CharacterMetrics_nMC = new A.CharacterMetrics(0, 0.43056, 0.07671, 0);
    B.CharacterMetrics_x2v = new A.CharacterMetrics(0, 0.69444, 0.06312, 0);
    B.CharacterMetrics_AY9 = new A.CharacterMetrics(0, 0.43056, 0.05653, 0);
    B.CharacterMetrics_v1w0 = new A.CharacterMetrics(0, 0.69444, 0.10333, 0);
    B.CharacterMetrics_99I = new A.CharacterMetrics(0, 0.43056, 0.07514, 0);
    B.CharacterMetrics_arA = new A.CharacterMetrics(0.19444, 0.69444, 0.21194, 0);
    B.CharacterMetrics_Vr4 = new A.CharacterMetrics(0.19444, 0.43056, 0.08847, 0);
    B.CharacterMetrics_fOG = new A.CharacterMetrics(0, 0.69444, 0.07671, 0);
    B.CharacterMetrics_v6d = new A.CharacterMetrics(0, 0.65536, 0.1019, 0);
    B.CharacterMetrics_7cu = new A.CharacterMetrics(0.19444, 0.65536, 0.14467, 0);
    B.CharacterMetrics_fgp = new A.CharacterMetrics(0, 0.69444, 0.10764, 0);
    B.CharacterMetrics_v1w1 = new A.CharacterMetrics(0, 0.69444, 0.10333, 0);
    B.CharacterMetrics_nMC0 = new A.CharacterMetrics(0, 0.43056, 0.07671, 0);
    B.CharacterMetrics_nMC1 = new A.CharacterMetrics(0, 0.43056, 0.07671, 0);
    B.CharacterMetrics_lId = new A.CharacterMetrics(0, 0.43056, 0.06312, 0);
    B.CharacterMetrics_ND5 = new A.CharacterMetrics(0.19444, 0.43056, 0.06312, 0);
    B.CharacterMetrics_IIb = new A.CharacterMetrics(0, 0.43056, 0.10764, 0);
    B.CharacterMetrics_GZU = new A.CharacterMetrics(0, 0.43056, 0.08208, 0);
    B.CharacterMetrics_p3m = new A.CharacterMetrics(0, 0.61508, 0.09486, 0);
    B.CharacterMetrics_nMC2 = new A.CharacterMetrics(0, 0.43056, 0.07671, 0);
    B.CharacterMetrics_IIb0 = new A.CharacterMetrics(0, 0.43056, 0.10764, 0);
    B.CharacterMetrics_IIb1 = new A.CharacterMetrics(0, 0.43056, 0.10764, 0);
    B.CharacterMetrics_YzZ = new A.CharacterMetrics(0, 0.43056, 0.12042, 0);
    B.CharacterMetrics_Vr40 = new A.CharacterMetrics(0.19444, 0.43056, 0.08847, 0);
    B.CharacterMetrics_48V = new A.CharacterMetrics(0, 0.43056, 0.12292, 0);
    B.CharacterMetrics_YIW = new A.CharacterMetrics(0.35, 0.31786, 0.11585, 0);
    B.CharacterMetrics_dQ116 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dvo = new A.CharacterMetrics(0, 0.66786, 0.10474, 0);
    B.CharacterMetrics_dQ117 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_aiS1 = new A.CharacterMetrics(0.17014, 0, 0, 0);
    B.CharacterMetrics_ffx0 = new A.CharacterMetrics(0, 0.68333, 0.12028, 0);
    B.CharacterMetrics_VHw = new A.CharacterMetrics(0.04861, 0.73194, 0.09403, 0);
    B.CharacterMetrics_Fwz = new A.CharacterMetrics(0.19444, 0.69444, 0.10514, 0);
    B.CharacterMetrics_99I0 = new A.CharacterMetrics(0, 0.43056, 0.07514, 0);
    B.CharacterMetrics_FYx = new A.CharacterMetrics(0.09722, 0.52778, 0.09194, 0);
    B.CharacterMetrics_dW8 = new A.CharacterMetrics(0, 0.43056, 0, 0.02778);
    B.CharacterMetrics_ffx1 = new A.CharacterMetrics(0, 0.68333, 0.12028, 0);
    B.CharacterMetrics_8fd = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    B.CharacterMetrics_En7 = new A.CharacterMetrics(0, 0.62847, 0.08295, 0);
    B.CharacterMetrics_7KH = new A.CharacterMetrics(0, 0.56167, 0.10333, 0);
    B.CharacterMetrics_EX00 = new A.CharacterMetrics(0, 0.69444, 0.09694, 0);
    B.CharacterMetrics_dQ118 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_H91 = new A.CharacterMetrics(0, 0.69444, 0.10806, 0);
    B.CharacterMetrics_QGj = new A.CharacterMetrics(0, 0.66786, 0.11752, 0);
    B.CharacterMetrics_hcQ = new A.CharacterMetrics(0, 0.66786, 0.11585, 0);
    B.CharacterMetrics_TyU1 = new A.CharacterMetrics(0, 0.68333, 0.13305, 0);
    B.CharacterMetrics_hyV1 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV2 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_5du = new A.CharacterMetrics(0, 0.68333, 0.15294, 0);
    B.CharacterMetrics_ffx2 = new A.CharacterMetrics(0, 0.68333, 0.12028, 0);
    B.CharacterMetrics_0yo = new A.CharacterMetrics(0, 0.68333, 0.11111, 0);
    B.CharacterMetrics_A8P = new A.CharacterMetrics(0, 0.68333, 0.05986, 0);
    B.CharacterMetrics_PEl1 = new A.CharacterMetrics(0, 0.68333, 0.10257, 0);
    B.CharacterMetrics_WBn = new A.CharacterMetrics(0, 0.43056, 0.09208, 0);
    B.CharacterMetrics_WBn0 = new A.CharacterMetrics(0, 0.43056, 0.09208, 0);
    B.CharacterMetrics_ced = new A.CharacterMetrics(0, 0.69444, 0.1685, 0);
    B.Map_YJCUq = new C.GeneralConstantMap([33, B.CharacterMetrics_sJC, 34, B.CharacterMetrics_vLI, 35, B.CharacterMetrics_ipO, 37, B.CharacterMetrics_JG2, 38, B.CharacterMetrics_EX0, 39, B.CharacterMetrics_sJC, 40, B.CharacterMetrics_0UU, 41, B.CharacterMetrics_buB, 42, B.CharacterMetrics_ow5, 43, B.CharacterMetrics_wqG, 44, B.CharacterMetrics_jg2, 45, B.CharacterMetrics_zRf, 46, B.CharacterMetrics_d0j, 47, B.CharacterMetrics_0UU0, 48, B.CharacterMetrics_bcu, 49, B.CharacterMetrics_bcu, 50, B.CharacterMetrics_bcu, 51, B.CharacterMetrics_bcu, 52, B.CharacterMetrics_ltv, 53, B.CharacterMetrics_bcu, 54, B.CharacterMetrics_bcu, 55, B.CharacterMetrics_ltv, 56, B.CharacterMetrics_bcu, 57, B.CharacterMetrics_bcu, 58, B.CharacterMetrics_nCg, 59, B.CharacterMetrics_JPx, 61, B.CharacterMetrics_mmY, 63, B.CharacterMetrics_1G6, 64, B.CharacterMetrics_JUa, 65, B.CharacterMetrics_hyV, 66, B.CharacterMetrics_PEl, 67, B.CharacterMetrics_ChJ, 68, B.CharacterMetrics_LKf, 69, B.CharacterMetrics_ffx, 70, B.CharacterMetrics_TyU, 71, B.CharacterMetrics_GTM, 72, B.CharacterMetrics_Ypo, 73, B.CharacterMetrics_QDS, 74, B.CharacterMetrics_NDp, 75, B.CharacterMetrics_ChJ0, 76, B.CharacterMetrics_hyV0, 77, B.CharacterMetrics_Ypo0, 78, B.CharacterMetrics_Ypo, 79, B.CharacterMetrics_LKf0, 80, B.CharacterMetrics_PEl0, 81, B.CharacterMetrics_o87, 82, B.CharacterMetrics_YkG, 83, B.CharacterMetrics_4qF, 84, B.CharacterMetrics_TyU0, 85, B.CharacterMetrics_Ypo, 86, B.CharacterMetrics_oiA, 87, B.CharacterMetrics_oiA0, 88, B.CharacterMetrics_QDS0, 89, B.CharacterMetrics_C0q, 90, B.CharacterMetrics_ChJ1, 91, B.CharacterMetrics_fTY0, 93, B.CharacterMetrics_5kk, 94, B.CharacterMetrics_39L, 95, B.CharacterMetrics_pyk, 97, B.CharacterMetrics_nMC, 98, B.CharacterMetrics_x2v, 99, B.CharacterMetrics_AY9, 100, B.CharacterMetrics_v1w0, 101, B.CharacterMetrics_99I, 102, B.CharacterMetrics_arA, 103, B.CharacterMetrics_Vr4, 104, B.CharacterMetrics_fOG, 105, B.CharacterMetrics_v6d, 106, B.CharacterMetrics_7cu, 107, B.CharacterMetrics_fgp, 108, B.CharacterMetrics_v1w1, 109, B.CharacterMetrics_nMC0, 110, B.CharacterMetrics_nMC1, 111, B.CharacterMetrics_lId, 112, B.CharacterMetrics_ND5, 113, B.CharacterMetrics_Vr4, 114, B.CharacterMetrics_IIb, 115, B.CharacterMetrics_GZU, 116, B.CharacterMetrics_p3m, 117, B.CharacterMetrics_nMC2, 118, B.CharacterMetrics_IIb0, 119, B.CharacterMetrics_IIb1, 120, B.CharacterMetrics_YzZ, 121, B.CharacterMetrics_Vr40, 122, B.CharacterMetrics_48V, 126, B.CharacterMetrics_YIW, 163, B.CharacterMetrics_dQ116, 168, B.CharacterMetrics_dvo, 176, B.CharacterMetrics_dQ117, 184, B.CharacterMetrics_aiS1, 198, B.CharacterMetrics_ffx0, 216, B.CharacterMetrics_VHw, 223, B.CharacterMetrics_Fwz, 230, B.CharacterMetrics_99I0, 248, B.CharacterMetrics_FYx, 305, B.CharacterMetrics_dW8, 338, B.CharacterMetrics_ffx1, 339, B.CharacterMetrics_99I0, 567, B.CharacterMetrics_8fd, 710, B.CharacterMetrics_39L, 711, B.CharacterMetrics_En7, 713, B.CharacterMetrics_7KH, 714, B.CharacterMetrics_EX00, 715, B.CharacterMetrics_dQ118, 728, B.CharacterMetrics_H91, 729, B.CharacterMetrics_QGj, 730, B.CharacterMetrics_dQ117, 732, B.CharacterMetrics_hcQ, 733, B.CharacterMetrics_1G6, 915, B.CharacterMetrics_TyU1, 916, B.CharacterMetrics_hyV1, 920, B.CharacterMetrics_LKf0, 923, B.CharacterMetrics_hyV2, 926, B.CharacterMetrics_5du, 928, B.CharacterMetrics_Ypo, 931, B.CharacterMetrics_ffx2, 933, B.CharacterMetrics_0yo, 934, B.CharacterMetrics_A8P, 936, B.CharacterMetrics_0yo, 937, B.CharacterMetrics_PEl1, 8211, B.CharacterMetrics_WBn, 8212, B.CharacterMetrics_WBn0, 8216, B.CharacterMetrics_sJC, 8217, B.CharacterMetrics_sJC, 8220, B.CharacterMetrics_ced, 8221, B.CharacterMetrics_vLI, 8463, B.CharacterMetrics_z2l7], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_0_0_0_00 = new A.CharacterMetrics(0, 0, 0, 0);
    B.CharacterMetrics_dQ119 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ120 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e9 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_Z0j1 = new A.CharacterMetrics(0.05556, 0.75, 0, 0);
    B.CharacterMetrics_Z0j2 = new A.CharacterMetrics(0.05556, 0.75, 0, 0);
    B.CharacterMetrics_dQ121 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Nd54 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_Coa1 = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_FTd = new A.CharacterMetrics(0.08333, 0.58333, 0, 0);
    B.CharacterMetrics_jg20 = new A.CharacterMetrics(0.19444, 0.10556, 0, 0);
    B.CharacterMetrics_Nyz2 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_d0j0 = new A.CharacterMetrics(0, 0.10556, 0, 0);
    B.CharacterMetrics_Nd55 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_Nyz3 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Lx91 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0);
    B.CharacterMetrics_dQ122 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_hyV3 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV4 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV5 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV6 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV7 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV8 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV9 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV10 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV11 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV12 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV13 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV14 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_ODm = new A.CharacterMetrics(0.19444, 0.68333, 0, 0);
    B.CharacterMetrics_hyV15 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV16 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_gbw = new A.CharacterMetrics(0, 0.68333, 0.01389, 0);
    B.CharacterMetrics_gbw0 = new A.CharacterMetrics(0, 0.68333, 0.01389, 0);
    B.CharacterMetrics_xPj = new A.CharacterMetrics(0, 0.68333, 0.025, 0);
    B.CharacterMetrics_hyV17 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_Nd56 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_inu = new A.CharacterMetrics(0.31, 0.12056, 0.02778, 0);
    B.CharacterMetrics_dQ123 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Nyz4 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_wMf = new A.CharacterMetrics(0, 0.69444, 0.07778, 0);
    B.CharacterMetrics_6OA = new A.CharacterMetrics(0.19444, 0.43056, 0.01389, 0);
    B.CharacterMetrics_x19 = new A.CharacterMetrics(0, 0.66786, 0, 0);
    B.CharacterMetrics_5T9 = new A.CharacterMetrics(0.19444, 0.66786, 0, 0);
    B.CharacterMetrics_dQ124 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Nyz5 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Nyz6 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Lx92 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0);
    B.CharacterMetrics_Nyz7 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Nyz8 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_V3h = new A.CharacterMetrics(0, 0.61508, 0, 0);
    B.CharacterMetrics_gMb = new A.CharacterMetrics(0, 0.43056, 0.01389, 0);
    B.CharacterMetrics_gMb0 = new A.CharacterMetrics(0, 0.43056, 0.01389, 0);
    B.CharacterMetrics_Nyz9 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_6OA0 = new A.CharacterMetrics(0.19444, 0.43056, 0.01389, 0);
    B.CharacterMetrics_iDo = new A.CharacterMetrics(0.35, 0.31786, 0, 0);
    B.CharacterMetrics_f3e10 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_x190 = new A.CharacterMetrics(0, 0.66786, 0, 0);
    B.CharacterMetrics_Nyz10 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_dQ125 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e11 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_aiS2 = new A.CharacterMetrics(0.17014, 0, 0, 0);
    B.CharacterMetrics_hyV18 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_YII = new A.CharacterMetrics(0.04861, 0.73194, 0, 0);
    B.CharacterMetrics_Nyz11 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_KGB = new A.CharacterMetrics(0.09722, 0.52778, 0, 0);
    B.CharacterMetrics_hyV19 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_Nyz12 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Lx93 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0);
    B.CharacterMetrics_HGh = new A.CharacterMetrics(0, 0.62847, 0, 0);
    B.CharacterMetrics_tuA = new A.CharacterMetrics(0, 0.56778, 0, 0);
    B.CharacterMetrics_hyV20 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV21 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_hyV22 = new A.CharacterMetrics(0, 0.68333, 0, 0);
    B.CharacterMetrics_Uzk = new A.CharacterMetrics(0, 0.43056, 0.02778, 0);
    B.CharacterMetrics_Uzk0 = new A.CharacterMetrics(0, 0.43056, 0.02778, 0);
    B.CharacterMetrics_QyK = new A.CharacterMetrics(0, 0.12, 0, 0);
    B.CharacterMetrics_XSW1 = new A.CharacterMetrics(0, 0.55556, 0, 0);
    B.CharacterMetrics_N7H = new A.CharacterMetrics(0, 0.71444, 0.15382, 0);
    B.CharacterMetrics_dQ126 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_yb1 = new A.CharacterMetrics(0, 0.69444, 0, 0.11111);
    B.CharacterMetrics_3Rq = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.11111);
    B.CharacterMetrics_dQ127 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e12 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_f3e13 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_hWn = new A.CharacterMetrics(0.011, 0.511, 0, 0);
    B.CharacterMetrics_hWn0 = new A.CharacterMetrics(0.011, 0.511, 0, 0);
    B.CharacterMetrics_5wZ = new A.CharacterMetrics(0.011, 0.671, 0, 0);
    B.CharacterMetrics_Nd57 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_X7i = new A.CharacterMetrics(0, 0.69444, 0.05556, 0.08334);
    B.CharacterMetrics_res0 = new A.CharacterMetrics(0.0391, 0.5391, 0, 0);
    B.CharacterMetrics_o2x = new A.CharacterMetrics(-0.03472, 0.46528, 0, 0);
    B.CharacterMetrics_d0a = new A.CharacterMetrics(-0.05555, 0.44445, 0, 0);
    B.CharacterMetrics_KeD = new A.CharacterMetrics(0.2, 0.8, 0, 0);
    B.CharacterMetrics_XSW2 = new A.CharacterMetrics(0, 0.55556, 0, 0);
    B.CharacterMetrics_zBw = new A.CharacterMetrics(0.19444, 0.69444, 0.11111, 0);
    B.CharacterMetrics_f3e14 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_6sJ = new A.CharacterMetrics(-0.022, 0.589, 0, 0);
    B.CharacterMetrics_dbd = new A.CharacterMetrics(-0.133, 0.67, 0, 0);
    B.CharacterMetrics_res1 = new A.CharacterMetrics(0.0391, 0.5391, 0, 0);
    B.CharacterMetrics_E5E = new A.CharacterMetrics(0.249, 0.75, 0, 0);
    B.CharacterMetrics_d0a0 = new A.CharacterMetrics(-0.05555, 0.44445, 0, 0);
    B.CharacterMetrics_k0X = new A.CharacterMetrics(0.005, 0.505, 0, 0);
    B.CharacterMetrics_g9G = new A.CharacterMetrics(0.03, 0.9, 0, 0);
    B.CharacterMetrics_KEn = new A.CharacterMetrics(-0.19, 0.31, 0, 0);
    B.CharacterMetrics_3RB = new A.CharacterMetrics(-0.1, 0.82, 0, 0);
    B.CharacterMetrics_Nd58 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_lo8 = new A.CharacterMetrics(-0.14236, 0.35764, 0, 0);
    B.CharacterMetrics_isx = new A.CharacterMetrics(0.244, 0.744, 0, 0);
    B.CharacterMetrics_f3e15 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_gFq0 = new A.CharacterMetrics(0.12963, 0.69444, 0, 0);
    B.CharacterMetrics_Coa2 = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_f3e16 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_hWn1 = new A.CharacterMetrics(0.011, 0.511, 0, 0);
    B.CharacterMetrics_hWn2 = new A.CharacterMetrics(0.011, 0.511, 0, 0);
    B.CharacterMetrics_hWn3 = new A.CharacterMetrics(0.011, 0.511, 0, 0);
    B.CharacterMetrics_gJi = new A.CharacterMetrics(0.024, 0.525, 0, 0);
    B.CharacterMetrics_gJi0 = new A.CharacterMetrics(0.024, 0.525, 0, 0);
    B.CharacterMetrics_gJi1 = new A.CharacterMetrics(0.024, 0.525, 0, 0);
    B.Map_SJfYb = new C.GeneralConstantMap([32, B.CharacterMetrics_0_0_0_00, 33, B.CharacterMetrics_dQ119, 34, B.CharacterMetrics_dQ120, 35, B.CharacterMetrics_f3e9, 36, B.CharacterMetrics_Z0j1, 37, B.CharacterMetrics_Z0j2, 38, B.CharacterMetrics_dQ121, 39, B.CharacterMetrics_dQ119, 40, B.CharacterMetrics_Nd54, 41, B.CharacterMetrics_Nd54, 42, B.CharacterMetrics_Coa1, 43, B.CharacterMetrics_FTd, 44, B.CharacterMetrics_jg20, 45, B.CharacterMetrics_Nyz2, 46, B.CharacterMetrics_d0j0, 47, B.CharacterMetrics_Nd55, 48, B.CharacterMetrics_CBT, 49, B.CharacterMetrics_CBT, 50, B.CharacterMetrics_CBT, 51, B.CharacterMetrics_CBT, 52, B.CharacterMetrics_CBT, 53, B.CharacterMetrics_CBT, 54, B.CharacterMetrics_CBT, 55, B.CharacterMetrics_CBT, 56, B.CharacterMetrics_CBT, 57, B.CharacterMetrics_CBT, 58, B.CharacterMetrics_Nyz3, 59, B.CharacterMetrics_Lx91, 60, B.CharacterMetrics_res, 61, B.CharacterMetrics_Xd10, 62, B.CharacterMetrics_res, 63, B.CharacterMetrics_dQ122, 64, B.CharacterMetrics_dQ121, 65, B.CharacterMetrics_hyV3, 66, B.CharacterMetrics_hyV4, 67, B.CharacterMetrics_hyV5, 68, B.CharacterMetrics_hyV6, 69, B.CharacterMetrics_hyV7, 70, B.CharacterMetrics_hyV8, 71, B.CharacterMetrics_hyV9, 72, B.CharacterMetrics_hyV3, 73, B.CharacterMetrics_hyV10, 74, B.CharacterMetrics_hyV11, 75, B.CharacterMetrics_hyV12, 76, B.CharacterMetrics_hyV13, 77, B.CharacterMetrics_hyV14, 78, B.CharacterMetrics_hyV3, 79, B.CharacterMetrics_hyV12, 80, B.CharacterMetrics_hyV7, 81, B.CharacterMetrics_ODm, 82, B.CharacterMetrics_hyV15, 83, B.CharacterMetrics_hyV16, 84, B.CharacterMetrics_hyV5, 85, B.CharacterMetrics_hyV3, 86, B.CharacterMetrics_gbw, 87, B.CharacterMetrics_gbw0, 88, B.CharacterMetrics_hyV3, 89, B.CharacterMetrics_xPj, 90, B.CharacterMetrics_hyV17, 91, B.CharacterMetrics_Nd56, 92, B.CharacterMetrics_Nd55, 93, B.CharacterMetrics_Nd56, 94, B.CharacterMetrics_dQ120, 95, B.CharacterMetrics_inu, 97, B.CharacterMetrics_Nyz1, 98, B.CharacterMetrics_dQ123, 99, B.CharacterMetrics_Nyz4, 100, B.CharacterMetrics_dQ123, 101, B.CharacterMetrics_Nyz4, 102, B.CharacterMetrics_wMf, 103, B.CharacterMetrics_6OA, 104, B.CharacterMetrics_dQ123, 105, B.CharacterMetrics_x19, 106, B.CharacterMetrics_5T9, 107, B.CharacterMetrics_dQ124, 108, B.CharacterMetrics_dQ119, 109, B.CharacterMetrics_Nyz5, 110, B.CharacterMetrics_Nyz6, 111, B.CharacterMetrics_Nyz1, 112, B.CharacterMetrics_Lx9, 113, B.CharacterMetrics_Lx92, 114, B.CharacterMetrics_Nyz7, 115, B.CharacterMetrics_Nyz8, 116, B.CharacterMetrics_V3h, 117, B.CharacterMetrics_Nyz6, 118, B.CharacterMetrics_gMb, 119, B.CharacterMetrics_gMb0, 120, B.CharacterMetrics_Nyz9, 121, B.CharacterMetrics_6OA0, 122, B.CharacterMetrics_Nyz4, 123, B.CharacterMetrics_Nd55, 124, B.CharacterMetrics_Nd56, 125, B.CharacterMetrics_Nd55, 126, B.CharacterMetrics_iDo, 160, B.CharacterMetrics_0_0_0_00, 167, B.CharacterMetrics_f3e10, 168, B.CharacterMetrics_x190, 172, B.CharacterMetrics_Nyz10, 176, B.CharacterMetrics_dQ125, 177, B.CharacterMetrics_FTd, 182, B.CharacterMetrics_f3e11, 184, B.CharacterMetrics_aiS2, 198, B.CharacterMetrics_hyV18, 215, B.CharacterMetrics_FTd, 216, B.CharacterMetrics_YII, 223, B.CharacterMetrics_dQ120, 230, B.CharacterMetrics_Nyz11, 247, B.CharacterMetrics_FTd, 248, B.CharacterMetrics_KGB, 305, B.CharacterMetrics_Nyz3, 338, B.CharacterMetrics_hyV19, 339, B.CharacterMetrics_Nyz12, 567, B.CharacterMetrics_Lx93, 710, B.CharacterMetrics_dQ120, 711, B.CharacterMetrics_HGh, 713, B.CharacterMetrics_tuA, 714, B.CharacterMetrics_dQ120, 715, B.CharacterMetrics_dQ120, 728, B.CharacterMetrics_dQ120, 729, B.CharacterMetrics_x19, 730, B.CharacterMetrics_dQ125, 732, B.CharacterMetrics_x190, 733, B.CharacterMetrics_dQ120, 915, B.CharacterMetrics_hyV13, 916, B.CharacterMetrics_hyV20, 920, B.CharacterMetrics_hyV12, 923, B.CharacterMetrics_hyV21, 926, B.CharacterMetrics_hyV22, 928, B.CharacterMetrics_hyV3, 931, B.CharacterMetrics_hyV5, 933, B.CharacterMetrics_hyV12, 934, B.CharacterMetrics_hyV5, 936, B.CharacterMetrics_hyV12, 937, B.CharacterMetrics_hyV5, 8211, B.CharacterMetrics_Uzk, 8212, B.CharacterMetrics_Uzk0, 8216, B.CharacterMetrics_dQ119, 8217, B.CharacterMetrics_dQ119, 8220, B.CharacterMetrics_dQ120, 8221, B.CharacterMetrics_dQ120, 8224, B.CharacterMetrics_f3e10, 8225, B.CharacterMetrics_f3e10, 8230, B.CharacterMetrics_QyK, 8242, B.CharacterMetrics_XSW1, 8407, B.CharacterMetrics_N7H, 8463, B.CharacterMetrics_z2l7, 8465, B.CharacterMetrics_dQ126, 8467, B.CharacterMetrics_yb1, 8472, B.CharacterMetrics_3Rq, 8476, B.CharacterMetrics_dQ126, 8501, B.CharacterMetrics_dQ127, 8592, B.CharacterMetrics_Xd1, 8593, B.CharacterMetrics_f3e12, 8594, B.CharacterMetrics_Xd1, 8595, B.CharacterMetrics_f3e12, 8596, B.CharacterMetrics_Xd1, 8597, B.CharacterMetrics_Nd55, 8598, B.CharacterMetrics_f3e13, 8599, B.CharacterMetrics_f3e13, 8600, B.CharacterMetrics_f3e13, 8601, B.CharacterMetrics_f3e13, 8614, B.CharacterMetrics_hWn, 8617, B.CharacterMetrics_hWn0, 8618, B.CharacterMetrics_hWn0, 8636, B.CharacterMetrics_Xd1, 8637, B.CharacterMetrics_Xd1, 8640, B.CharacterMetrics_Xd1, 8641, B.CharacterMetrics_Xd1, 8652, B.CharacterMetrics_5wZ, 8656, B.CharacterMetrics_Xd1, 8657, B.CharacterMetrics_f3e11, 8658, B.CharacterMetrics_Xd1, 8659, B.CharacterMetrics_f3e11, 8660, B.CharacterMetrics_Xd1, 8661, B.CharacterMetrics_Nd57, 8704, B.CharacterMetrics_dQ123, 8706, B.CharacterMetrics_X7i, 8707, B.CharacterMetrics_dQ123, 8709, B.CharacterMetrics_Z0j1, 8711, B.CharacterMetrics_hyV20, 8712, B.CharacterMetrics_res0, 8715, B.CharacterMetrics_res0, 8722, B.CharacterMetrics_FTd, 8723, B.CharacterMetrics_FTd, 8725, B.CharacterMetrics_Nd55, 8726, B.CharacterMetrics_Nd55, 8727, B.CharacterMetrics_o2x, 8728, B.CharacterMetrics_d0a, 8729, B.CharacterMetrics_d0a, 8730, B.CharacterMetrics_KeD, 8733, B.CharacterMetrics_Nyz12, 8734, B.CharacterMetrics_Nyz, 8736, B.CharacterMetrics_Ghm1, 8739, B.CharacterMetrics_Nd56, 8741, B.CharacterMetrics_Nd55, 8743, B.CharacterMetrics_XSW2, 8744, B.CharacterMetrics_XSW2, 8745, B.CharacterMetrics_XSW2, 8746, B.CharacterMetrics_XSW2, 8747, B.CharacterMetrics_zBw, 8764, B.CharacterMetrics_Xd10, 8768, B.CharacterMetrics_f3e14, 8771, B.CharacterMetrics_2K8, 8773, B.CharacterMetrics_6sJ, 8776, B.CharacterMetrics_Y6k, 8781, B.CharacterMetrics_2K8, 8784, B.CharacterMetrics_dbd, 8801, B.CharacterMetrics_2K8, 8804, B.CharacterMetrics_lOx, 8805, B.CharacterMetrics_lOx, 8810, B.CharacterMetrics_res1, 8811, B.CharacterMetrics_res1, 8826, B.CharacterMetrics_res, 8827, B.CharacterMetrics_res, 8834, B.CharacterMetrics_res, 8835, B.CharacterMetrics_res, 8838, B.CharacterMetrics_lOx, 8839, B.CharacterMetrics_lOx, 8846, B.CharacterMetrics_XSW2, 8849, B.CharacterMetrics_lOx, 8850, B.CharacterMetrics_lOx, 8851, B.CharacterMetrics_XSW2, 8852, B.CharacterMetrics_XSW2, 8853, B.CharacterMetrics_FTd, 8854, B.CharacterMetrics_FTd, 8855, B.CharacterMetrics_FTd, 8856, B.CharacterMetrics_FTd, 8857, B.CharacterMetrics_FTd, 8866, B.CharacterMetrics_dQ127, 8867, B.CharacterMetrics_dQ127, 8868, B.CharacterMetrics_dQ121, 8869, B.CharacterMetrics_dQ121, 8872, B.CharacterMetrics_E5E, 8900, B.CharacterMetrics_d0a, 8901, B.CharacterMetrics_d0a0, 8902, B.CharacterMetrics_o2x, 8904, B.CharacterMetrics_k0X, 8942, B.CharacterMetrics_g9G, 8943, B.CharacterMetrics_KEn, 8945, B.CharacterMetrics_3RB, 8968, B.CharacterMetrics_Nd58, 8969, B.CharacterMetrics_Nd58, 8970, B.CharacterMetrics_Nd58, 8971, B.CharacterMetrics_Nd58, 8994, B.CharacterMetrics_lo8, 8995, B.CharacterMetrics_lo8, 9136, B.CharacterMetrics_isx, 9137, B.CharacterMetrics_isx, 9651, B.CharacterMetrics_f3e15, 9657, B.CharacterMetrics_o2x, 9661, B.CharacterMetrics_f3e15, 9667, B.CharacterMetrics_o2x, 9711, B.CharacterMetrics_f3e13, 9824, B.CharacterMetrics_gFq0, 9825, B.CharacterMetrics_gFq0, 9826, B.CharacterMetrics_gFq0, 9827, B.CharacterMetrics_gFq0, 9837, B.CharacterMetrics_Coa2, 9838, B.CharacterMetrics_f3e16, 9839, B.CharacterMetrics_f3e16, 10216, B.CharacterMetrics_Nd54, 10217, B.CharacterMetrics_Nd54, 10222, B.CharacterMetrics_isx, 10223, B.CharacterMetrics_isx, 10229, B.CharacterMetrics_hWn1, 10230, B.CharacterMetrics_hWn2, 10231, B.CharacterMetrics_hWn3, 10232, B.CharacterMetrics_gJi, 10233, B.CharacterMetrics_gJi0, 10234, B.CharacterMetrics_gJi1, 10236, B.CharacterMetrics_hWn2, 10815, B.CharacterMetrics_hyV3, 10927, B.CharacterMetrics_lOx, 10928, B.CharacterMetrics_lOx, 57376, B.CharacterMetrics_f3e8], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_kYH = new A.CharacterMetrics(0, 0.68611, 0.04835, 0);
    B.CharacterMetrics_LEb = new A.CharacterMetrics(0, 0.68611, 0.06979, 0);
    B.CharacterMetrics_gi0 = new A.CharacterMetrics(0, 0.68611, 0.03194, 0);
    B.CharacterMetrics_ySc = new A.CharacterMetrics(0, 0.68611, 0.05451, 0);
    B.CharacterMetrics_raM = new A.CharacterMetrics(0, 0.68611, 0.15972, 0);
    B.CharacterMetrics_E2v29 = new A.CharacterMetrics(0, 0.68611, 0, 0);
    B.CharacterMetrics_PlO = new A.CharacterMetrics(0, 0.68611, 0.08229, 0);
    B.CharacterMetrics_h5g = new A.CharacterMetrics(0, 0.68611, 0.07778, 0);
    B.CharacterMetrics_Bhw = new A.CharacterMetrics(0, 0.68611, 0.10069, 0);
    B.CharacterMetrics_LEb0 = new A.CharacterMetrics(0, 0.68611, 0.06979, 0);
    B.CharacterMetrics_8RH = new A.CharacterMetrics(0, 0.68611, 0.11424, 0);
    B.CharacterMetrics_8RH0 = new A.CharacterMetrics(0, 0.68611, 0.11424, 0);
    B.CharacterMetrics_gi00 = new A.CharacterMetrics(0, 0.68611, 0.03194, 0);
    B.CharacterMetrics_raM0 = new A.CharacterMetrics(0, 0.68611, 0.15972, 0);
    B.CharacterMetrics_qSQ0 = new A.CharacterMetrics(0.19444, 0.68611, 0, 0);
    B.CharacterMetrics_XkC = new A.CharacterMetrics(0, 0.68611, 0.00421, 0);
    B.CharacterMetrics_bOz = new A.CharacterMetrics(0, 0.68611, 0.05382, 0);
    B.CharacterMetrics_raM1 = new A.CharacterMetrics(0, 0.68611, 0.15972, 0);
    B.CharacterMetrics_8RH1 = new A.CharacterMetrics(0, 0.68611, 0.11424, 0);
    B.CharacterMetrics_B7o = new A.CharacterMetrics(0, 0.68611, 0.25555, 0);
    B.CharacterMetrics_raM2 = new A.CharacterMetrics(0, 0.68611, 0.15972, 0);
    B.CharacterMetrics_h5g0 = new A.CharacterMetrics(0, 0.68611, 0.07778, 0);
    B.CharacterMetrics_B7o0 = new A.CharacterMetrics(0, 0.68611, 0.25555, 0);
    B.CharacterMetrics_LEb1 = new A.CharacterMetrics(0, 0.68611, 0.06979, 0);
    B.CharacterMetrics_58p14 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_dQ128 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p15 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_dQ129 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p16 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_Bzk = new A.CharacterMetrics(0.19444, 0.69444, 0.11042, 0);
    B.CharacterMetrics_epD = new A.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    B.CharacterMetrics_5I4 = new A.CharacterMetrics(0, 0.69326, 0, 0);
    B.CharacterMetrics_6Jw = new A.CharacterMetrics(0.19444, 0.69326, 0.0622, 0);
    B.CharacterMetrics_b04 = new A.CharacterMetrics(0, 0.69444, 0.01852, 0);
    B.CharacterMetrics_WqC = new A.CharacterMetrics(0, 0.69444, 0.0088, 0);
    B.CharacterMetrics_58p17 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p18 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p19 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_7CM4 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_epD0 = new A.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    B.CharacterMetrics_GZK1 = new A.CharacterMetrics(0, 0.44444, 0.03194, 0);
    B.CharacterMetrics_58p20 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_clc0 = new A.CharacterMetrics(0, 0.63492, 0, 0);
    B.CharacterMetrics_58p21 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_tgM = new A.CharacterMetrics(0, 0.44444, 0.03704, 0);
    B.CharacterMetrics_uOI = new A.CharacterMetrics(0, 0.44444, 0.02778, 0);
    B.CharacterMetrics_58p22 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_epD1 = new A.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    B.CharacterMetrics_rBv = new A.CharacterMetrics(0, 0.44444, 0.04213, 0);
    B.CharacterMetrics_raM3 = new A.CharacterMetrics(0, 0.68611, 0.15972, 0);
    B.CharacterMetrics_gi01 = new A.CharacterMetrics(0, 0.68611, 0.03194, 0);
    B.CharacterMetrics_Mwc = new A.CharacterMetrics(0, 0.68611, 0.07458, 0);
    B.CharacterMetrics_ySc0 = new A.CharacterMetrics(0, 0.68611, 0.05451, 0);
    B.CharacterMetrics_raM4 = new A.CharacterMetrics(0, 0.68611, 0.15972, 0);
    B.CharacterMetrics_zkO = new A.CharacterMetrics(0, 0.68611, 0.11653, 0);
    B.CharacterMetrics_kYH0 = new A.CharacterMetrics(0, 0.68611, 0.04835, 0);
    B.CharacterMetrics_58p23 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_xCg = new A.CharacterMetrics(0.19444, 0.69444, 0.03403, 0);
    B.CharacterMetrics_nXk = new A.CharacterMetrics(0.19444, 0.44444, 0.06389, 0);
    B.CharacterMetrics_R5N = new A.CharacterMetrics(0, 0.69444, 0.03819, 0);
    B.CharacterMetrics_58p24 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_lYl = new A.CharacterMetrics(0.19444, 0.69444, 0.06215, 0);
    B.CharacterMetrics_epD2 = new A.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    B.CharacterMetrics_VrS = new A.CharacterMetrics(0, 0.69444, 0.03194, 0);
    B.CharacterMetrics_58p25 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p26 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_dQ130 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_7CM5 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_Op7 = new A.CharacterMetrics(0, 0.44444, 0.06898, 0);
    B.CharacterMetrics_RaU = new A.CharacterMetrics(0.19444, 0.69444, 0.03021, 0);
    B.CharacterMetrics_tgM0 = new A.CharacterMetrics(0, 0.44444, 0.03704, 0);
    B.CharacterMetrics_7CM6 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_Arv = new A.CharacterMetrics(0.09722, 0.44444, 0.07917, 0);
    B.CharacterMetrics_tgM1 = new A.CharacterMetrics(0, 0.44444, 0.03704, 0);
    B.CharacterMetrics_mQC = new A.CharacterMetrics(0, 0.44444, 0.13472, 0);
    B.CharacterMetrics_tgM2 = new A.CharacterMetrics(0, 0.44444, 0.03704, 0);
    B.CharacterMetrics_7CM7 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_7CM8 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_f9h = new A.CharacterMetrics(0.19444, 0.69444, 0.03704, 0);
    B.CharacterMetrics_tgM3 = new A.CharacterMetrics(0, 0.44444, 0.03704, 0);
    B.CharacterMetrics_dQ131 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e17 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_GZK2 = new A.CharacterMetrics(0, 0.44444, 0.03194, 0);
    B.CharacterMetrics_58p27 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.Map_c3uZN = new C.GeneralConstantMap([65, B.CharacterMetrics_E2v, 66, B.CharacterMetrics_kYH, 67, B.CharacterMetrics_LEb, 68, B.CharacterMetrics_gi0, 69, B.CharacterMetrics_ySc, 70, B.CharacterMetrics_raM, 71, B.CharacterMetrics_E2v29, 72, B.CharacterMetrics_PlO, 73, B.CharacterMetrics_h5g, 74, B.CharacterMetrics_Bhw, 75, B.CharacterMetrics_LEb0, 76, B.CharacterMetrics_E2v3, 77, B.CharacterMetrics_8RH, 78, B.CharacterMetrics_8RH0, 79, B.CharacterMetrics_gi00, 80, B.CharacterMetrics_raM0, 81, B.CharacterMetrics_qSQ0, 82, B.CharacterMetrics_XkC, 83, B.CharacterMetrics_bOz, 84, B.CharacterMetrics_raM1, 85, B.CharacterMetrics_8RH1, 86, B.CharacterMetrics_B7o, 87, B.CharacterMetrics_raM2, 88, B.CharacterMetrics_h5g0, 89, B.CharacterMetrics_B7o0, 90, B.CharacterMetrics_LEb1, 97, B.CharacterMetrics_58p14, 98, B.CharacterMetrics_dQ128, 99, B.CharacterMetrics_58p15, 100, B.CharacterMetrics_dQ129, 101, B.CharacterMetrics_58p16, 102, B.CharacterMetrics_Bzk, 103, B.CharacterMetrics_epD, 104, B.CharacterMetrics_dQ19, 105, B.CharacterMetrics_5I4, 106, B.CharacterMetrics_6Jw, 107, B.CharacterMetrics_b04, 108, B.CharacterMetrics_WqC, 109, B.CharacterMetrics_58p17, 110, B.CharacterMetrics_58p18, 111, B.CharacterMetrics_58p19, 112, B.CharacterMetrics_7CM4, 113, B.CharacterMetrics_epD0, 114, B.CharacterMetrics_GZK1, 115, B.CharacterMetrics_58p20, 116, B.CharacterMetrics_clc0, 117, B.CharacterMetrics_58p21, 118, B.CharacterMetrics_tgM, 119, B.CharacterMetrics_uOI, 120, B.CharacterMetrics_58p22, 121, B.CharacterMetrics_epD1, 122, B.CharacterMetrics_rBv, 915, B.CharacterMetrics_raM3, 916, B.CharacterMetrics_E2v21, 920, B.CharacterMetrics_gi01, 923, B.CharacterMetrics_E2v23, 926, B.CharacterMetrics_Mwc, 928, B.CharacterMetrics_PlO, 931, B.CharacterMetrics_ySc0, 933, B.CharacterMetrics_raM4, 934, B.CharacterMetrics_E2v24, 936, B.CharacterMetrics_zkO, 937, B.CharacterMetrics_kYH0, 945, B.CharacterMetrics_58p23, 946, B.CharacterMetrics_xCg, 947, B.CharacterMetrics_nXk, 948, B.CharacterMetrics_R5N, 949, B.CharacterMetrics_58p24, 950, B.CharacterMetrics_lYl, 951, B.CharacterMetrics_epD2, 952, B.CharacterMetrics_VrS, 953, B.CharacterMetrics_58p25, 954, B.CharacterMetrics_58p26, 955, B.CharacterMetrics_dQ130, 956, B.CharacterMetrics_7CM5, 957, B.CharacterMetrics_Op7, 958, B.CharacterMetrics_RaU, 959, B.CharacterMetrics_58p19, 960, B.CharacterMetrics_tgM0, 961, B.CharacterMetrics_7CM6, 962, B.CharacterMetrics_Arv, 963, B.CharacterMetrics_tgM1, 964, B.CharacterMetrics_mQC, 965, B.CharacterMetrics_tgM2, 966, B.CharacterMetrics_7CM7, 967, B.CharacterMetrics_7CM8, 968, B.CharacterMetrics_f9h, 969, B.CharacterMetrics_tgM3, 977, B.CharacterMetrics_dQ131, 981, B.CharacterMetrics_f3e17, 982, B.CharacterMetrics_GZK2, 1009, B.CharacterMetrics_7CM6, 1013, B.CharacterMetrics_58p27], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_gSc1 = new A.CharacterMetrics(0, 0.68333, 0, 0.13889);
    B.CharacterMetrics_KEx = new A.CharacterMetrics(0, 0.68333, 0.05017, 0.08334);
    B.CharacterMetrics_hgS = new A.CharacterMetrics(0, 0.68333, 0.07153, 0.08334);
    B.CharacterMetrics_ldd = new A.CharacterMetrics(0, 0.68333, 0.02778, 0.05556);
    B.CharacterMetrics_agG = new A.CharacterMetrics(0, 0.68333, 0.05764, 0.08334);
    B.CharacterMetrics_Rkc = new A.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    B.CharacterMetrics_vHQ0 = new A.CharacterMetrics(0, 0.68333, 0, 0.08334);
    B.CharacterMetrics_UwD = new A.CharacterMetrics(0, 0.68333, 0.08125, 0.05556);
    B.CharacterMetrics_ocY = new A.CharacterMetrics(0, 0.68333, 0.07847, 0.11111);
    B.CharacterMetrics_sTI = new A.CharacterMetrics(0, 0.68333, 0.09618, 0.16667);
    B.CharacterMetrics_EHD = new A.CharacterMetrics(0, 0.68333, 0.07153, 0.05556);
    B.CharacterMetrics_LDq = new A.CharacterMetrics(0, 0.68333, 0, 0.02778);
    B.CharacterMetrics_Twn = new A.CharacterMetrics(0, 0.68333, 0.10903, 0.08334);
    B.CharacterMetrics_Twn0 = new A.CharacterMetrics(0, 0.68333, 0.10903, 0.08334);
    B.CharacterMetrics_bRO0 = new A.CharacterMetrics(0, 0.68333, 0.02778, 0.08334);
    B.CharacterMetrics_Rkc0 = new A.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    B.CharacterMetrics_GrW = new A.CharacterMetrics(0.19444, 0.68333, 0, 0.08334);
    B.CharacterMetrics_mVq = new A.CharacterMetrics(0, 0.68333, 0.00773, 0.08334);
    B.CharacterMetrics_agG0 = new A.CharacterMetrics(0, 0.68333, 0.05764, 0.08334);
    B.CharacterMetrics_Rkc1 = new A.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    B.CharacterMetrics_ROQ = new A.CharacterMetrics(0, 0.68333, 0.10903, 0.02778);
    B.CharacterMetrics_OPe = new A.CharacterMetrics(0, 0.68333, 0.22222, 0);
    B.CharacterMetrics_bYm = new A.CharacterMetrics(0, 0.68333, 0.13889, 0);
    B.CharacterMetrics_Fmz = new A.CharacterMetrics(0, 0.68333, 0.07847, 0.08334);
    B.CharacterMetrics_OPe0 = new A.CharacterMetrics(0, 0.68333, 0.22222, 0);
    B.CharacterMetrics_hgS0 = new A.CharacterMetrics(0, 0.68333, 0.07153, 0.08334);
    B.CharacterMetrics_Nyz13 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_dQ132 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_IEr = new A.CharacterMetrics(0, 0.43056, 0, 0.05556);
    B.CharacterMetrics_kv5 = new A.CharacterMetrics(0, 0.69444, 0, 0.16667);
    B.CharacterMetrics_IEr0 = new A.CharacterMetrics(0, 0.43056, 0, 0.05556);
    B.CharacterMetrics_Cga = new A.CharacterMetrics(0.19444, 0.69444, 0.10764, 0.16667);
    B.CharacterMetrics_xrG = new A.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.02778);
    B.CharacterMetrics_dQ133 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_7xV = new A.CharacterMetrics(0, 0.65952, 0, 0);
    B.CharacterMetrics_0rA = new A.CharacterMetrics(0.19444, 0.65952, 0.05724, 0);
    B.CharacterMetrics_sBP = new A.CharacterMetrics(0, 0.69444, 0.03148, 0);
    B.CharacterMetrics_vS9 = new A.CharacterMetrics(0, 0.69444, 0.01968, 0.08334);
    B.CharacterMetrics_Nyz14 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_Nyz15 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_IEr1 = new A.CharacterMetrics(0, 0.43056, 0, 0.05556);
    B.CharacterMetrics_8fd0 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    B.CharacterMetrics_Chk = new A.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.08334);
    B.CharacterMetrics_c5Q = new A.CharacterMetrics(0, 0.43056, 0.02778, 0.05556);
    B.CharacterMetrics_IEr2 = new A.CharacterMetrics(0, 0.43056, 0, 0.05556);
    B.CharacterMetrics_ILJ = new A.CharacterMetrics(0, 0.61508, 0, 0.08334);
    B.CharacterMetrics_dW80 = new A.CharacterMetrics(0, 0.43056, 0, 0.02778);
    B.CharacterMetrics_jsp = new A.CharacterMetrics(0, 0.43056, 0.03588, 0.02778);
    B.CharacterMetrics_qJU = new A.CharacterMetrics(0, 0.43056, 0.02691, 0.08334);
    B.CharacterMetrics_dW81 = new A.CharacterMetrics(0, 0.43056, 0, 0.02778);
    B.CharacterMetrics_tT6 = new A.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.05556);
    B.CharacterMetrics_9ml = new A.CharacterMetrics(0, 0.43056, 0.04398, 0.05556);
    B.CharacterMetrics_Rkc2 = new A.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    B.CharacterMetrics_s5i = new A.CharacterMetrics(0, 0.68333, 0, 0.16667);
    B.CharacterMetrics_s5i0 = new A.CharacterMetrics(0, 0.68333, 0, 0.16667);
    B.CharacterMetrics_Rbj = new A.CharacterMetrics(0, 0.68333, 0.07569, 0.08334);
    B.CharacterMetrics_agG1 = new A.CharacterMetrics(0, 0.68333, 0.05764, 0.08334);
    B.CharacterMetrics_bBn = new A.CharacterMetrics(0, 0.68333, 0.13889, 0.05556);
    B.CharacterMetrics_vHQ1 = new A.CharacterMetrics(0, 0.68333, 0, 0.08334);
    B.CharacterMetrics_tIe = new A.CharacterMetrics(0, 0.68333, 0.11, 0.05556);
    B.CharacterMetrics_KEx0 = new A.CharacterMetrics(0, 0.68333, 0.05017, 0.08334);
    B.CharacterMetrics_nn9 = new A.CharacterMetrics(0, 0.43056, 0.0037, 0.02778);
    B.CharacterMetrics_oBT = new A.CharacterMetrics(0.19444, 0.69444, 0.05278, 0.08334);
    B.CharacterMetrics_Wy8 = new A.CharacterMetrics(0.19444, 0.43056, 0.05556, 0);
    B.CharacterMetrics_gTe = new A.CharacterMetrics(0, 0.69444, 0.03785, 0.05556);
    B.CharacterMetrics_JrD = new A.CharacterMetrics(0, 0.43056, 0, 0.08334);
    B.CharacterMetrics_CHU = new A.CharacterMetrics(0.19444, 0.69444, 0.07378, 0.08334);
    B.CharacterMetrics_tT60 = new A.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.05556);
    B.CharacterMetrics_BGN = new A.CharacterMetrics(0, 0.69444, 0.02778, 0.08334);
    B.CharacterMetrics_IEr3 = new A.CharacterMetrics(0, 0.43056, 0, 0.05556);
    B.CharacterMetrics_Nyz16 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_dQ134 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_IXX = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.02778);
    B.CharacterMetrics_d4y = new A.CharacterMetrics(0, 0.43056, 0.06366, 0.02778);
    B.CharacterMetrics_klI = new A.CharacterMetrics(0.19444, 0.69444, 0.04601, 0.11111);
    B.CharacterMetrics_4j6 = new A.CharacterMetrics(0, 0.43056, 0.03588, 0);
    B.CharacterMetrics_8fd1 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    B.CharacterMetrics_C5E = new A.CharacterMetrics(0.09722, 0.43056, 0.07986, 0.08334);
    B.CharacterMetrics_4j60 = new A.CharacterMetrics(0, 0.43056, 0.03588, 0);
    B.CharacterMetrics_Kwb = new A.CharacterMetrics(0, 0.43056, 0.1132, 0.02778);
    B.CharacterMetrics_jsp0 = new A.CharacterMetrics(0, 0.43056, 0.03588, 0.02778);
    B.CharacterMetrics_8fd2 = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    B.CharacterMetrics_pNa = new A.CharacterMetrics(0.19444, 0.43056, 0, 0.05556);
    B.CharacterMetrics_9Rl = new A.CharacterMetrics(0.19444, 0.69444, 0.03588, 0.11111);
    B.CharacterMetrics_4j61 = new A.CharacterMetrics(0, 0.43056, 0.03588, 0);
    B.CharacterMetrics_mBt = new A.CharacterMetrics(0, 0.69444, 0, 0.08334);
    B.CharacterMetrics_0i7 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0.08334);
    B.CharacterMetrics_Uzk1 = new A.CharacterMetrics(0, 0.43056, 0.02778, 0);
    B.CharacterMetrics_IEr4 = new A.CharacterMetrics(0, 0.43056, 0, 0.05556);
    B.Map_c3GaC = new C.GeneralConstantMap([65, B.CharacterMetrics_gSc1, 66, B.CharacterMetrics_KEx, 67, B.CharacterMetrics_hgS, 68, B.CharacterMetrics_ldd, 69, B.CharacterMetrics_agG, 70, B.CharacterMetrics_Rkc, 71, B.CharacterMetrics_vHQ0, 72, B.CharacterMetrics_UwD, 73, B.CharacterMetrics_ocY, 74, B.CharacterMetrics_sTI, 75, B.CharacterMetrics_EHD, 76, B.CharacterMetrics_LDq, 77, B.CharacterMetrics_Twn, 78, B.CharacterMetrics_Twn0, 79, B.CharacterMetrics_bRO0, 80, B.CharacterMetrics_Rkc0, 81, B.CharacterMetrics_GrW, 82, B.CharacterMetrics_mVq, 83, B.CharacterMetrics_agG0, 84, B.CharacterMetrics_Rkc1, 85, B.CharacterMetrics_ROQ, 86, B.CharacterMetrics_OPe, 87, B.CharacterMetrics_bYm, 88, B.CharacterMetrics_Fmz, 89, B.CharacterMetrics_OPe0, 90, B.CharacterMetrics_hgS0, 97, B.CharacterMetrics_Nyz13, 98, B.CharacterMetrics_dQ132, 99, B.CharacterMetrics_IEr, 100, B.CharacterMetrics_kv5, 101, B.CharacterMetrics_IEr0, 102, B.CharacterMetrics_Cga, 103, B.CharacterMetrics_xrG, 104, B.CharacterMetrics_dQ133, 105, B.CharacterMetrics_7xV, 106, B.CharacterMetrics_0rA, 107, B.CharacterMetrics_sBP, 108, B.CharacterMetrics_vS9, 109, B.CharacterMetrics_Nyz14, 110, B.CharacterMetrics_Nyz15, 111, B.CharacterMetrics_IEr1, 112, B.CharacterMetrics_8fd0, 113, B.CharacterMetrics_Chk, 114, B.CharacterMetrics_c5Q, 115, B.CharacterMetrics_IEr2, 116, B.CharacterMetrics_ILJ, 117, B.CharacterMetrics_dW80, 118, B.CharacterMetrics_jsp, 119, B.CharacterMetrics_qJU, 120, B.CharacterMetrics_dW81, 121, B.CharacterMetrics_tT6, 122, B.CharacterMetrics_9ml, 915, B.CharacterMetrics_Rkc2, 916, B.CharacterMetrics_s5i, 920, B.CharacterMetrics_bRO0, 923, B.CharacterMetrics_s5i0, 926, B.CharacterMetrics_Rbj, 928, B.CharacterMetrics_UwD, 931, B.CharacterMetrics_agG1, 933, B.CharacterMetrics_bBn, 934, B.CharacterMetrics_vHQ1, 936, B.CharacterMetrics_tIe, 937, B.CharacterMetrics_KEx0, 945, B.CharacterMetrics_nn9, 946, B.CharacterMetrics_oBT, 947, B.CharacterMetrics_Wy8, 948, B.CharacterMetrics_gTe, 949, B.CharacterMetrics_JrD, 950, B.CharacterMetrics_CHU, 951, B.CharacterMetrics_tT60, 952, B.CharacterMetrics_BGN, 953, B.CharacterMetrics_IEr3, 954, B.CharacterMetrics_Nyz16, 955, B.CharacterMetrics_dQ134, 956, B.CharacterMetrics_IXX, 957, B.CharacterMetrics_d4y, 958, B.CharacterMetrics_klI, 959, B.CharacterMetrics_IEr1, 960, B.CharacterMetrics_4j6, 961, B.CharacterMetrics_8fd1, 962, B.CharacterMetrics_C5E, 963, B.CharacterMetrics_4j60, 964, B.CharacterMetrics_Kwb, 965, B.CharacterMetrics_jsp0, 966, B.CharacterMetrics_8fd2, 967, B.CharacterMetrics_pNa, 968, B.CharacterMetrics_9Rl, 969, B.CharacterMetrics_4j61, 977, B.CharacterMetrics_mBt, 981, B.CharacterMetrics_0i7, 982, B.CharacterMetrics_Uzk1, 1009, B.CharacterMetrics_8fd1, 1013, B.CharacterMetrics_IEr4], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_dQ135 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ136 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e18 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_Z0j3 = new A.CharacterMetrics(0.05556, 0.75, 0, 0);
    B.CharacterMetrics_Z0j4 = new A.CharacterMetrics(0.05556, 0.75, 0, 0);
    B.CharacterMetrics_dQ137 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ138 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Nd59 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_Coa3 = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_kIN = new A.CharacterMetrics(0.11667, 0.61667, 0, 0);
    B.CharacterMetrics_ZaL = new A.CharacterMetrics(0.10556, 0.13056, 0, 0);
    B.CharacterMetrics_7gF = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_rqW = new A.CharacterMetrics(0, 0.13056, 0, 0);
    B.CharacterMetrics_Nd510 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_dQ139 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_7gF0 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_JxN = new A.CharacterMetrics(0.10556, 0.45833, 0, 0);
    B.CharacterMetrics_Wug = new A.CharacterMetrics(-0.09375, 0.40625, 0, 0);
    B.CharacterMetrics_dQ140 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ141 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ142 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ143 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ144 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ145 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ146 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ147 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ148 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_z1r = new A.CharacterMetrics(0.10556, 0.69444, 0, 0);
    B.CharacterMetrics_O9G = new A.CharacterMetrics(0, 0.69444, 0.01528, 0);
    B.CharacterMetrics_O9G0 = new A.CharacterMetrics(0, 0.69444, 0.01528, 0);
    B.CharacterMetrics_ylq = new A.CharacterMetrics(0, 0.69444, 0.0275, 0);
    B.CharacterMetrics_dQ149 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Nd511 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_ohs = new A.CharacterMetrics(0.35, 0.10833, 0.03056, 0);
    B.CharacterMetrics_7gF1 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_dQ150 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_7gF2 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_7gF3 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_lWq = new A.CharacterMetrics(0, 0.69444, 0.07639, 0);
    B.CharacterMetrics_vkK = new A.CharacterMetrics(0.19444, 0.45833, 0.01528, 0);
    B.CharacterMetrics_dQ151 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_f3e19 = new A.CharacterMetrics(0.19444, 0.69444, 0, 0);
    B.CharacterMetrics_dQ152 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_7gF4 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_7gF5 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_7gF6 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_M3G = new A.CharacterMetrics(0.19444, 0.45833, 0, 0);
    B.CharacterMetrics_cUu = new A.CharacterMetrics(0, 0.45833, 0.01528, 0);
    B.CharacterMetrics_7gF7 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_Cxf = new A.CharacterMetrics(0, 0.58929, 0, 0);
    B.CharacterMetrics_cUu0 = new A.CharacterMetrics(0, 0.45833, 0.01528, 0);
    B.CharacterMetrics_cUu1 = new A.CharacterMetrics(0, 0.45833, 0.01528, 0);
    B.CharacterMetrics_7gF8 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_vkK0 = new A.CharacterMetrics(0.19444, 0.45833, 0.01528, 0);
    B.CharacterMetrics_7gF9 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_LfA0 = new A.CharacterMetrics(0.35, 0.34444, 0, 0);
    B.CharacterMetrics_aiS3 = new A.CharacterMetrics(0.17014, 0, 0, 0);
    B.CharacterMetrics_7gF10 = new A.CharacterMetrics(0, 0.45833, 0, 0);
    B.CharacterMetrics_M3G0 = new A.CharacterMetrics(0.19444, 0.45833, 0, 0);
    B.CharacterMetrics_7eI = new A.CharacterMetrics(0, 0.63542, 0, 0);
    B.CharacterMetrics_DMV = new A.CharacterMetrics(0, 0.63778, 0, 0);
    B.CharacterMetrics_dQ153 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ154 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_w1Z = new A.CharacterMetrics(0, 0.45833, 0.03056, 0);
    B.CharacterMetrics_w1Z0 = new A.CharacterMetrics(0, 0.45833, 0.03056, 0);
    B.Map_8fPR5 = new C.GeneralConstantMap([33, B.CharacterMetrics_dQ135, 34, B.CharacterMetrics_dQ136, 35, B.CharacterMetrics_f3e18, 36, B.CharacterMetrics_Z0j3, 37, B.CharacterMetrics_Z0j4, 38, B.CharacterMetrics_dQ137, 39, B.CharacterMetrics_dQ138, 40, B.CharacterMetrics_Nd59, 41, B.CharacterMetrics_Nd59, 42, B.CharacterMetrics_Coa3, 43, B.CharacterMetrics_kIN, 44, B.CharacterMetrics_ZaL, 45, B.CharacterMetrics_7gF, 46, B.CharacterMetrics_rqW, 47, B.CharacterMetrics_Nd510, 48, B.CharacterMetrics_dQ139, 49, B.CharacterMetrics_dQ139, 50, B.CharacterMetrics_dQ139, 51, B.CharacterMetrics_dQ139, 52, B.CharacterMetrics_dQ139, 53, B.CharacterMetrics_dQ139, 54, B.CharacterMetrics_dQ139, 55, B.CharacterMetrics_dQ139, 56, B.CharacterMetrics_dQ139, 57, B.CharacterMetrics_dQ139, 58, B.CharacterMetrics_7gF0, 59, B.CharacterMetrics_JxN, 61, B.CharacterMetrics_Wug, 63, B.CharacterMetrics_dQ140, 64, B.CharacterMetrics_dQ141, 65, B.CharacterMetrics_dQ141, 66, B.CharacterMetrics_dQ141, 67, B.CharacterMetrics_dQ142, 68, B.CharacterMetrics_dQ143, 69, B.CharacterMetrics_dQ144, 70, B.CharacterMetrics_dQ127, 71, B.CharacterMetrics_dQ141, 72, B.CharacterMetrics_dQ143, 73, B.CharacterMetrics_dQ145, 74, B.CharacterMetrics_dQ140, 75, B.CharacterMetrics_dQ146, 76, B.CharacterMetrics_dQ147, 77, B.CharacterMetrics_dQ148, 78, B.CharacterMetrics_dQ143, 79, B.CharacterMetrics_dQ143, 80, B.CharacterMetrics_dQ142, 81, B.CharacterMetrics_z1r, 82, B.CharacterMetrics_dQ142, 83, B.CharacterMetrics_dQ127, 84, B.CharacterMetrics_dQ141, 85, B.CharacterMetrics_dQ146, 86, B.CharacterMetrics_O9G, 87, B.CharacterMetrics_O9G0, 88, B.CharacterMetrics_dQ141, 89, B.CharacterMetrics_ylq, 90, B.CharacterMetrics_dQ149, 91, B.CharacterMetrics_Nd511, 93, B.CharacterMetrics_Nd511, 94, B.CharacterMetrics_dQ139, 95, B.CharacterMetrics_ohs, 97, B.CharacterMetrics_7gF1, 98, B.CharacterMetrics_dQ150, 99, B.CharacterMetrics_7gF2, 100, B.CharacterMetrics_dQ150, 101, B.CharacterMetrics_7gF3, 102, B.CharacterMetrics_lWq, 103, B.CharacterMetrics_vkK, 104, B.CharacterMetrics_dQ150, 105, B.CharacterMetrics_dQ151, 106, B.CharacterMetrics_f3e19, 107, B.CharacterMetrics_dQ152, 108, B.CharacterMetrics_dQ151, 109, B.CharacterMetrics_7gF4, 110, B.CharacterMetrics_7gF5, 111, B.CharacterMetrics_7gF6, 112, B.CharacterMetrics_M3G, 113, B.CharacterMetrics_M3G, 114, B.CharacterMetrics_cUu, 115, B.CharacterMetrics_7gF7, 116, B.CharacterMetrics_Cxf, 117, B.CharacterMetrics_7gF5, 118, B.CharacterMetrics_cUu0, 119, B.CharacterMetrics_cUu1, 120, B.CharacterMetrics_7gF8, 121, B.CharacterMetrics_vkK0, 122, B.CharacterMetrics_7gF9, 126, B.CharacterMetrics_LfA0, 168, B.CharacterMetrics_dQ139, 176, B.CharacterMetrics_dQ141, 180, B.CharacterMetrics_dQ139, 184, B.CharacterMetrics_aiS3, 305, B.CharacterMetrics_7gF10, 567, B.CharacterMetrics_M3G0, 710, B.CharacterMetrics_dQ139, 711, B.CharacterMetrics_7eI, 713, B.CharacterMetrics_DMV, 728, B.CharacterMetrics_dQ139, 729, B.CharacterMetrics_dQ138, 730, B.CharacterMetrics_dQ141, 732, B.CharacterMetrics_dQ139, 733, B.CharacterMetrics_dQ139, 915, B.CharacterMetrics_dQ147, 916, B.CharacterMetrics_dQ153, 920, B.CharacterMetrics_dQ154, 923, B.CharacterMetrics_dQ149, 926, B.CharacterMetrics_dQ141, 928, B.CharacterMetrics_dQ143, 931, B.CharacterMetrics_dQ143, 933, B.CharacterMetrics_dQ154, 934, B.CharacterMetrics_dQ143, 936, B.CharacterMetrics_dQ154, 937, B.CharacterMetrics_dQ143, 8211, B.CharacterMetrics_w1Z, 8212, B.CharacterMetrics_w1Z0, 8216, B.CharacterMetrics_dQ138, 8217, B.CharacterMetrics_dQ138, 8220, B.CharacterMetrics_dQ136, 8221, B.CharacterMetrics_dQ136], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_S57 = new A.CharacterMetrics(0, 0.69444, 0.05733, 0);
    B.CharacterMetrics_tKU = new A.CharacterMetrics(0, 0.69444, 0.00316, 0);
    B.CharacterMetrics_fYA = new A.CharacterMetrics(0.19444, 0.69444, 0.05087, 0);
    B.CharacterMetrics_0Gz = new A.CharacterMetrics(0.05556, 0.75, 0.11156, 0);
    B.CharacterMetrics_l46 = new A.CharacterMetrics(0.05556, 0.75, 0.03126, 0);
    B.CharacterMetrics_aQT = new A.CharacterMetrics(0, 0.69444, 0.03058, 0);
    B.CharacterMetrics_Efc = new A.CharacterMetrics(0, 0.69444, 0.07816, 0);
    B.CharacterMetrics_tke = new A.CharacterMetrics(0.25, 0.75, 0.13164, 0);
    B.CharacterMetrics_sdv = new A.CharacterMetrics(0.25, 0.75, 0.02536, 0);
    B.CharacterMetrics_B0M = new A.CharacterMetrics(0, 0.75, 0.11775, 0);
    B.CharacterMetrics_ULq = new A.CharacterMetrics(0.08333, 0.58333, 0.02536, 0);
    B.CharacterMetrics_GN6 = new A.CharacterMetrics(0.125, 0.08333, 0, 0);
    B.CharacterMetrics_zWU = new A.CharacterMetrics(0, 0.44444, 0.01946, 0);
    B.CharacterMetrics_od9 = new A.CharacterMetrics(0, 0.08333, 0, 0);
    B.CharacterMetrics_tke0 = new A.CharacterMetrics(0.25, 0.75, 0.13164, 0);
    B.CharacterMetrics_YTX = new A.CharacterMetrics(0, 0.65556, 0.11156, 0);
    B.CharacterMetrics_KzF = new A.CharacterMetrics(0, 0.44444, 0.02502, 0);
    B.CharacterMetrics_GV6 = new A.CharacterMetrics(0.125, 0.44444, 0.02502, 0);
    B.CharacterMetrics_c8j = new A.CharacterMetrics(-0.13, 0.37, 0.05087, 0);
    B.CharacterMetrics_WLF = new A.CharacterMetrics(0, 0.69444, 0.11809, 0);
    B.CharacterMetrics_0rJ = new A.CharacterMetrics(0, 0.69444, 0.07555, 0);
    B.CharacterMetrics_dQ155 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_Zex = new A.CharacterMetrics(0, 0.69444, 0.08293, 0);
    B.CharacterMetrics_oOT = new A.CharacterMetrics(0, 0.69444, 0.11983, 0);
    B.CharacterMetrics_0rJ0 = new A.CharacterMetrics(0, 0.69444, 0.07555, 0);
    B.CharacterMetrics_oOT0 = new A.CharacterMetrics(0, 0.69444, 0.11983, 0);
    B.CharacterMetrics_xsN = new A.CharacterMetrics(0, 0.69444, 0.13372, 0);
    B.CharacterMetrics_oOT1 = new A.CharacterMetrics(0, 0.69444, 0.11983, 0);
    B.CharacterMetrics_hBb = new A.CharacterMetrics(0, 0.69444, 0.08094, 0);
    B.CharacterMetrics_xsN0 = new A.CharacterMetrics(0, 0.69444, 0.13372, 0);
    B.CharacterMetrics_hBb0 = new A.CharacterMetrics(0, 0.69444, 0.08094, 0);
    B.CharacterMetrics_oOT2 = new A.CharacterMetrics(0, 0.69444, 0.11983, 0);
    B.CharacterMetrics_dQ156 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_hBb1 = new A.CharacterMetrics(0, 0.69444, 0.08094, 0);
    B.CharacterMetrics_0rJ1 = new A.CharacterMetrics(0, 0.69444, 0.07555, 0);
    B.CharacterMetrics_Zex0 = new A.CharacterMetrics(0, 0.69444, 0.08293, 0);
    B.CharacterMetrics_J3e = new A.CharacterMetrics(0.125, 0.69444, 0.07555, 0);
    B.CharacterMetrics_Zex1 = new A.CharacterMetrics(0, 0.69444, 0.08293, 0);
    B.CharacterMetrics_j7q = new A.CharacterMetrics(0, 0.69444, 0.09205, 0);
    B.CharacterMetrics_xsN1 = new A.CharacterMetrics(0, 0.69444, 0.13372, 0);
    B.CharacterMetrics_hBb2 = new A.CharacterMetrics(0, 0.69444, 0.08094, 0);
    B.CharacterMetrics_I4g = new A.CharacterMetrics(0, 0.69444, 0.1615, 0);
    B.CharacterMetrics_I4g0 = new A.CharacterMetrics(0, 0.69444, 0.1615, 0);
    B.CharacterMetrics_xsN2 = new A.CharacterMetrics(0, 0.69444, 0.13372, 0);
    B.CharacterMetrics_BiO = new A.CharacterMetrics(0, 0.69444, 0.17261, 0);
    B.CharacterMetrics_oOT3 = new A.CharacterMetrics(0, 0.69444, 0.11983, 0);
    B.CharacterMetrics_tT2 = new A.CharacterMetrics(0.25, 0.75, 0.15942, 0);
    B.CharacterMetrics_ZJ0 = new A.CharacterMetrics(0.25, 0.75, 0.08719, 0);
    B.CharacterMetrics_hqT = new A.CharacterMetrics(0, 0.69444, 0.0799, 0);
    B.CharacterMetrics_aWy = new A.CharacterMetrics(0.35, 0.09444, 0.08616, 0);
    B.CharacterMetrics_R6W = new A.CharacterMetrics(0, 0.44444, 0.00981, 0);
    B.CharacterMetrics_pYP = new A.CharacterMetrics(0, 0.69444, 0.03057, 0);
    B.CharacterMetrics_oQX = new A.CharacterMetrics(0, 0.44444, 0.08336, 0);
    B.CharacterMetrics_bzF = new A.CharacterMetrics(0, 0.69444, 0.09483, 0);
    B.CharacterMetrics_58O = new A.CharacterMetrics(0, 0.44444, 0.06778, 0);
    B.CharacterMetrics_d3I = new A.CharacterMetrics(0, 0.69444, 0.21705, 0);
    B.CharacterMetrics_Fmy = new A.CharacterMetrics(0.19444, 0.44444, 0.10836, 0);
    B.CharacterMetrics_Ull = new A.CharacterMetrics(0, 0.69444, 0.01778, 0);
    B.CharacterMetrics_JNn = new A.CharacterMetrics(0, 0.67937, 0.09718, 0);
    B.CharacterMetrics_Ww2 = new A.CharacterMetrics(0.19444, 0.67937, 0.09162, 0);
    B.CharacterMetrics_q9T = new A.CharacterMetrics(0, 0.69444, 0.08336, 0);
    B.CharacterMetrics_bzF0 = new A.CharacterMetrics(0, 0.69444, 0.09483, 0);
    B.CharacterMetrics_1Kw = new A.CharacterMetrics(0, 0.44444, 0.01778, 0);
    B.CharacterMetrics_1Kw0 = new A.CharacterMetrics(0, 0.44444, 0.01778, 0);
    B.CharacterMetrics_kgG = new A.CharacterMetrics(0, 0.44444, 0.06613, 0);
    B.CharacterMetrics_MTJ = new A.CharacterMetrics(0.19444, 0.44444, 0.0389, 0);
    B.CharacterMetrics_nFN = new A.CharacterMetrics(0.19444, 0.44444, 0.04169, 0);
    B.CharacterMetrics_8q5 = new A.CharacterMetrics(0, 0.44444, 0.10836, 0);
    B.CharacterMetrics_MCU = new A.CharacterMetrics(0, 0.44444, 0.0778, 0);
    B.CharacterMetrics_RLN = new A.CharacterMetrics(0, 0.57143, 0.07225, 0);
    B.CharacterMetrics_PGI = new A.CharacterMetrics(0, 0.44444, 0.04169, 0);
    B.CharacterMetrics_8q50 = new A.CharacterMetrics(0, 0.44444, 0.10836, 0);
    B.CharacterMetrics_8q51 = new A.CharacterMetrics(0, 0.44444, 0.10836, 0);
    B.CharacterMetrics_iGP = new A.CharacterMetrics(0, 0.44444, 0.09169, 0);
    B.CharacterMetrics_Fmy0 = new A.CharacterMetrics(0.19444, 0.44444, 0.10836, 0);
    B.CharacterMetrics_I3Q = new A.CharacterMetrics(0, 0.44444, 0.08752, 0);
    B.CharacterMetrics_1xL = new A.CharacterMetrics(0.35, 0.32659, 0.08826, 0);
    B.CharacterMetrics_eVa = new A.CharacterMetrics(0, 0.67937, 0.06385, 0);
    B.CharacterMetrics_dQ157 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_PGI0 = new A.CharacterMetrics(0, 0.44444, 0.04169, 0);
    B.CharacterMetrics_nFN0 = new A.CharacterMetrics(0.19444, 0.44444, 0.04169, 0);
    B.CharacterMetrics_6Iy = new A.CharacterMetrics(0, 0.63194, 0.08432, 0);
    B.CharacterMetrics_s3f = new A.CharacterMetrics(0, 0.60889, 0.08776, 0);
    B.CharacterMetrics_j7q0 = new A.CharacterMetrics(0, 0.69444, 0.09205, 0);
    B.CharacterMetrics_bzF1 = new A.CharacterMetrics(0, 0.69444, 0.09483, 0);
    B.CharacterMetrics_LKQ = new A.CharacterMetrics(0, 0.67937, 0.07774, 0);
    B.CharacterMetrics_5GT = new A.CharacterMetrics(0, 0.67659, 0.08826, 0);
    B.CharacterMetrics_xsN3 = new A.CharacterMetrics(0, 0.69444, 0.13372, 0);
    B.CharacterMetrics_dQ158 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_0rJ2 = new A.CharacterMetrics(0, 0.69444, 0.07555, 0);
    B.CharacterMetrics_l7Q = new A.CharacterMetrics(0, 0.69444, 0.12816, 0);
    B.CharacterMetrics_oOT4 = new A.CharacterMetrics(0, 0.69444, 0.11983, 0);
    B.CharacterMetrics_E3n = new A.CharacterMetrics(0, 0.69444, 0.09031, 0);
    B.CharacterMetrics_3d7 = new A.CharacterMetrics(0, 0.69444, 0.04603, 0);
    B.CharacterMetrics_Zex2 = new A.CharacterMetrics(0, 0.69444, 0.08293, 0);
    B.CharacterMetrics_inl = new A.CharacterMetrics(0, 0.44444, 0.08616, 0);
    B.CharacterMetrics_inl0 = new A.CharacterMetrics(0, 0.44444, 0.08616, 0);
    B.CharacterMetrics_QdE = new A.CharacterMetrics(0, 0.69444, 0.14205, 0);
    B.Map_uKL2n = new C.GeneralConstantMap([33, B.CharacterMetrics_S57, 34, B.CharacterMetrics_tKU, 35, B.CharacterMetrics_fYA, 36, B.CharacterMetrics_0Gz, 37, B.CharacterMetrics_l46, 38, B.CharacterMetrics_aQT, 39, B.CharacterMetrics_Efc, 40, B.CharacterMetrics_tke, 41, B.CharacterMetrics_sdv, 42, B.CharacterMetrics_B0M, 43, B.CharacterMetrics_ULq, 44, B.CharacterMetrics_GN6, 45, B.CharacterMetrics_zWU, 46, B.CharacterMetrics_od9, 47, B.CharacterMetrics_tke0, 48, B.CharacterMetrics_YTX, 49, B.CharacterMetrics_YTX, 50, B.CharacterMetrics_YTX, 51, B.CharacterMetrics_YTX, 52, B.CharacterMetrics_YTX, 53, B.CharacterMetrics_YTX, 54, B.CharacterMetrics_YTX, 55, B.CharacterMetrics_YTX, 56, B.CharacterMetrics_YTX, 57, B.CharacterMetrics_YTX, 58, B.CharacterMetrics_KzF, 59, B.CharacterMetrics_GV6, 61, B.CharacterMetrics_c8j, 63, B.CharacterMetrics_WLF, 64, B.CharacterMetrics_0rJ, 65, B.CharacterMetrics_dQ155, 66, B.CharacterMetrics_Zex, 67, B.CharacterMetrics_oOT, 68, B.CharacterMetrics_0rJ0, 69, B.CharacterMetrics_oOT0, 70, B.CharacterMetrics_xsN, 71, B.CharacterMetrics_oOT1, 72, B.CharacterMetrics_hBb, 73, B.CharacterMetrics_xsN0, 74, B.CharacterMetrics_hBb0, 75, B.CharacterMetrics_oOT2, 76, B.CharacterMetrics_dQ156, 77, B.CharacterMetrics_hBb1, 78, B.CharacterMetrics_hBb, 79, B.CharacterMetrics_0rJ1, 80, B.CharacterMetrics_Zex0, 81, B.CharacterMetrics_J3e, 82, B.CharacterMetrics_Zex1, 83, B.CharacterMetrics_j7q, 84, B.CharacterMetrics_xsN1, 85, B.CharacterMetrics_hBb2, 86, B.CharacterMetrics_I4g, 87, B.CharacterMetrics_I4g0, 88, B.CharacterMetrics_xsN2, 89, B.CharacterMetrics_BiO, 90, B.CharacterMetrics_oOT3, 91, B.CharacterMetrics_tT2, 93, B.CharacterMetrics_ZJ0, 94, B.CharacterMetrics_hqT, 95, B.CharacterMetrics_aWy, 97, B.CharacterMetrics_R6W, 98, B.CharacterMetrics_pYP, 99, B.CharacterMetrics_oQX, 100, B.CharacterMetrics_bzF, 101, B.CharacterMetrics_58O, 102, B.CharacterMetrics_d3I, 103, B.CharacterMetrics_Fmy, 104, B.CharacterMetrics_Ull, 105, B.CharacterMetrics_JNn, 106, B.CharacterMetrics_Ww2, 107, B.CharacterMetrics_q9T, 108, B.CharacterMetrics_bzF0, 109, B.CharacterMetrics_1Kw, 110, B.CharacterMetrics_1Kw0, 111, B.CharacterMetrics_kgG, 112, B.CharacterMetrics_MTJ, 113, B.CharacterMetrics_nFN, 114, B.CharacterMetrics_8q5, 115, B.CharacterMetrics_MCU, 116, B.CharacterMetrics_RLN, 117, B.CharacterMetrics_PGI, 118, B.CharacterMetrics_8q50, 119, B.CharacterMetrics_8q51, 120, B.CharacterMetrics_iGP, 121, B.CharacterMetrics_Fmy0, 122, B.CharacterMetrics_I3Q, 126, B.CharacterMetrics_1xL, 168, B.CharacterMetrics_eVa, 176, B.CharacterMetrics_dQ157, 184, B.CharacterMetrics_aiS2, 305, B.CharacterMetrics_PGI0, 567, B.CharacterMetrics_nFN0, 710, B.CharacterMetrics_hqT, 711, B.CharacterMetrics_6Iy, 713, B.CharacterMetrics_s3f, 714, B.CharacterMetrics_j7q0, 715, B.CharacterMetrics_dQ120, 728, B.CharacterMetrics_bzF1, 729, B.CharacterMetrics_LKQ, 730, B.CharacterMetrics_dQ157, 732, B.CharacterMetrics_5GT, 733, B.CharacterMetrics_j7q0, 915, B.CharacterMetrics_xsN3, 916, B.CharacterMetrics_dQ158, 920, B.CharacterMetrics_0rJ2, 923, B.CharacterMetrics_dQ127, 926, B.CharacterMetrics_l7Q, 928, B.CharacterMetrics_hBb, 931, B.CharacterMetrics_oOT4, 933, B.CharacterMetrics_E3n, 934, B.CharacterMetrics_3d7, 936, B.CharacterMetrics_E3n, 937, B.CharacterMetrics_Zex2, 8211, B.CharacterMetrics_inl, 8212, B.CharacterMetrics_inl0, 8216, B.CharacterMetrics_Efc, 8217, B.CharacterMetrics_Efc, 8220, B.CharacterMetrics_QdE, 8221, B.CharacterMetrics_tKU], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_dQ159 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ160 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p28 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_OSV = new A.CharacterMetrics(0, 0.65556, 0, 0);
    B.CharacterMetrics_58p29 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_Zx3 = new A.CharacterMetrics(0.125, 0.44444, 0, 0);
    B.CharacterMetrics_OsD = new A.CharacterMetrics(-0.13, 0.37, 0, 0);
    B.CharacterMetrics_dQ161 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ162 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ163 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ164 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ165 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ166 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_ciD = new A.CharacterMetrics(0.125, 0.69444, 0, 0);
    B.CharacterMetrics_dQ167 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ168 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ169 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_WmO = new A.CharacterMetrics(0, 0.69444, 0.01389, 0);
    B.CharacterMetrics_WmO0 = new A.CharacterMetrics(0, 0.69444, 0.01389, 0);
    B.CharacterMetrics_2Gj = new A.CharacterMetrics(0, 0.69444, 0.025, 0);
    B.CharacterMetrics_Nd512 = new A.CharacterMetrics(0.25, 0.75, 0, 0);
    B.CharacterMetrics_cZn = new A.CharacterMetrics(0.35, 0.09444, 0.02778, 0);
    B.CharacterMetrics_58p30 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_dQ170 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p31 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_lkz = new A.CharacterMetrics(0, 0.69444, 0.06944, 0);
    B.CharacterMetrics_hMb = new A.CharacterMetrics(0.19444, 0.44444, 0.01389, 0);
    B.CharacterMetrics_Lau = new A.CharacterMetrics(0, 0.67937, 0, 0);
    B.CharacterMetrics_27o = new A.CharacterMetrics(0.19444, 0.67937, 0, 0);
    B.CharacterMetrics_dQ171 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_dQ172 = new A.CharacterMetrics(0, 0.69444, 0, 0);
    B.CharacterMetrics_58p32 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p33 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_58p34 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_7CM9 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_rOO = new A.CharacterMetrics(0, 0.44444, 0.01389, 0);
    B.CharacterMetrics_uoi = new A.CharacterMetrics(0, 0.57143, 0, 0);
    B.CharacterMetrics_rOO0 = new A.CharacterMetrics(0, 0.44444, 0.01389, 0);
    B.CharacterMetrics_rOO1 = new A.CharacterMetrics(0, 0.44444, 0.01389, 0);
    B.CharacterMetrics_58p35 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_hMb0 = new A.CharacterMetrics(0.19444, 0.44444, 0.01389, 0);
    B.CharacterMetrics_58p36 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_kDo = new A.CharacterMetrics(0.35, 0.32659, 0, 0);
    B.CharacterMetrics_Lau0 = new A.CharacterMetrics(0, 0.67937, 0, 0);
    B.CharacterMetrics_58p37 = new A.CharacterMetrics(0, 0.44444, 0, 0);
    B.CharacterMetrics_7CM10 = new A.CharacterMetrics(0.19444, 0.44444, 0, 0);
    B.CharacterMetrics_xJj0 = new A.CharacterMetrics(0, 0.63194, 0, 0);
    B.CharacterMetrics_Ou2 = new A.CharacterMetrics(0, 0.60889, 0, 0);
    B.CharacterMetrics_Lau1 = new A.CharacterMetrics(0, 0.67937, 0, 0);
    B.CharacterMetrics_Uuz = new A.CharacterMetrics(0, 0.67659, 0, 0);
    B.CharacterMetrics_uOI0 = new A.CharacterMetrics(0, 0.44444, 0.02778, 0);
    B.CharacterMetrics_uOI1 = new A.CharacterMetrics(0, 0.44444, 0.02778, 0);
    B.Map_uKsm0 = new C.GeneralConstantMap([33, B.CharacterMetrics_dQ159, 34, B.CharacterMetrics_dQ120, 35, B.CharacterMetrics_f3e9, 36, B.CharacterMetrics_Z0j1, 37, B.CharacterMetrics_Z0j2, 38, B.CharacterMetrics_dQ160, 39, B.CharacterMetrics_dQ119, 40, B.CharacterMetrics_Nd54, 41, B.CharacterMetrics_Nd54, 42, B.CharacterMetrics_Coa1, 43, B.CharacterMetrics_FTd, 44, B.CharacterMetrics_GN6, 45, B.CharacterMetrics_58p28, 46, B.CharacterMetrics_od9, 47, B.CharacterMetrics_Nd55, 48, B.CharacterMetrics_OSV, 49, B.CharacterMetrics_OSV, 50, B.CharacterMetrics_OSV, 51, B.CharacterMetrics_OSV, 52, B.CharacterMetrics_OSV, 53, B.CharacterMetrics_OSV, 54, B.CharacterMetrics_OSV, 55, B.CharacterMetrics_OSV, 56, B.CharacterMetrics_OSV, 57, B.CharacterMetrics_OSV, 58, B.CharacterMetrics_58p29, 59, B.CharacterMetrics_Zx3, 61, B.CharacterMetrics_OsD, 63, B.CharacterMetrics_dQ122, 64, B.CharacterMetrics_dQ155, 65, B.CharacterMetrics_dQ155, 66, B.CharacterMetrics_dQ155, 67, B.CharacterMetrics_dQ15, 68, B.CharacterMetrics_dQ161, 69, B.CharacterMetrics_dQ18, 70, B.CharacterMetrics_dQ162, 71, B.CharacterMetrics_dQ155, 72, B.CharacterMetrics_dQ163, 73, B.CharacterMetrics_dQ119, 74, B.CharacterMetrics_dQ122, 75, B.CharacterMetrics_dQ164, 76, B.CharacterMetrics_dQ156, 77, B.CharacterMetrics_dQ165, 78, B.CharacterMetrics_dQ163, 79, B.CharacterMetrics_dQ166, 80, B.CharacterMetrics_dQ15, 81, B.CharacterMetrics_ciD, 82, B.CharacterMetrics_dQ167, 83, B.CharacterMetrics_dQ123, 84, B.CharacterMetrics_dQ168, 85, B.CharacterMetrics_dQ169, 86, B.CharacterMetrics_WmO, 87, B.CharacterMetrics_WmO0, 88, B.CharacterMetrics_dQ155, 89, B.CharacterMetrics_2Gj, 90, B.CharacterMetrics_dQ127, 91, B.CharacterMetrics_Nd512, 93, B.CharacterMetrics_Nd512, 94, B.CharacterMetrics_dQ120, 95, B.CharacterMetrics_cZn, 97, B.CharacterMetrics_58p30, 98, B.CharacterMetrics_dQ170, 99, B.CharacterMetrics_58p31, 100, B.CharacterMetrics_dQ170, 101, B.CharacterMetrics_58p31, 102, B.CharacterMetrics_lkz, 103, B.CharacterMetrics_hMb, 104, B.CharacterMetrics_dQ170, 105, B.CharacterMetrics_Lau, 106, B.CharacterMetrics_27o, 107, B.CharacterMetrics_dQ171, 108, B.CharacterMetrics_dQ172, 109, B.CharacterMetrics_58p32, 110, B.CharacterMetrics_58p33, 111, B.CharacterMetrics_58p34, 112, B.CharacterMetrics_7CM9, 113, B.CharacterMetrics_7CM9, 114, B.CharacterMetrics_rOO, 115, B.CharacterMetrics_58p, 116, B.CharacterMetrics_uoi, 117, B.CharacterMetrics_58p33, 118, B.CharacterMetrics_rOO0, 119, B.CharacterMetrics_rOO1, 120, B.CharacterMetrics_58p35, 121, B.CharacterMetrics_hMb0, 122, B.CharacterMetrics_58p36, 126, B.CharacterMetrics_kDo, 168, B.CharacterMetrics_Lau0, 176, B.CharacterMetrics_dQ155, 184, B.CharacterMetrics_aiS2, 305, B.CharacterMetrics_58p37, 567, B.CharacterMetrics_7CM10, 710, B.CharacterMetrics_dQ120, 711, B.CharacterMetrics_xJj0, 713, B.CharacterMetrics_Ou2, 714, B.CharacterMetrics_dQ120, 715, B.CharacterMetrics_dQ120, 728, B.CharacterMetrics_dQ120, 729, B.CharacterMetrics_Lau1, 730, B.CharacterMetrics_dQ155, 732, B.CharacterMetrics_Uuz, 733, B.CharacterMetrics_dQ120, 915, B.CharacterMetrics_dQ156, 916, B.CharacterMetrics_dQ158, 920, B.CharacterMetrics_dQ121, 923, B.CharacterMetrics_dQ127, 926, B.CharacterMetrics_dQ155, 928, B.CharacterMetrics_dQ163, 931, B.CharacterMetrics_dQ126, 933, B.CharacterMetrics_dQ121, 934, B.CharacterMetrics_dQ126, 936, B.CharacterMetrics_dQ121, 937, B.CharacterMetrics_dQ126, 8211, B.CharacterMetrics_uOI0, 8212, B.CharacterMetrics_uOI1, 8216, B.CharacterMetrics_dQ119, 8217, B.CharacterMetrics_dQ119, 8220, B.CharacterMetrics_dQ120, 8221, B.CharacterMetrics_dQ120], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_IcE = new A.CharacterMetrics(0, 0.7, 0.22925, 0);
    B.CharacterMetrics_VZd = new A.CharacterMetrics(0, 0.7, 0.04087, 0);
    B.CharacterMetrics_Us1 = new A.CharacterMetrics(0, 0.7, 0.1689, 0);
    B.CharacterMetrics_hTP = new A.CharacterMetrics(0, 0.7, 0.09371, 0);
    B.CharacterMetrics_kBQ = new A.CharacterMetrics(0, 0.7, 0.18583, 0);
    B.CharacterMetrics_JYw = new A.CharacterMetrics(0, 0.7, 0.13634, 0);
    B.CharacterMetrics_wk3 = new A.CharacterMetrics(0, 0.7, 0.17322, 0);
    B.CharacterMetrics_SnM = new A.CharacterMetrics(0, 0.7, 0.29694, 0);
    B.CharacterMetrics_b5r = new A.CharacterMetrics(0, 0.7, 0.19189, 0);
    B.CharacterMetrics_Pko = new A.CharacterMetrics(0.27778, 0.7, 0.19189, 0);
    B.CharacterMetrics_yGP = new A.CharacterMetrics(0, 0.7, 0.31259, 0);
    B.CharacterMetrics_b5r0 = new A.CharacterMetrics(0, 0.7, 0.19189, 0);
    B.CharacterMetrics_4qE = new A.CharacterMetrics(0, 0.7, 0.15981, 0);
    B.CharacterMetrics_OiL = new A.CharacterMetrics(0, 0.7, 0.3525, 0);
    B.CharacterMetrics_O6B = new A.CharacterMetrics(0, 0.7, 0.08078, 0);
    B.CharacterMetrics_O6B0 = new A.CharacterMetrics(0, 0.7, 0.08078, 0);
    B.CharacterMetrics_EXH = new A.CharacterMetrics(0, 0.7, 0.03305, 0);
    B.CharacterMetrics_zZw = new A.CharacterMetrics(0, 0.7, 0.06259, 0);
    B.CharacterMetrics_b5r1 = new A.CharacterMetrics(0, 0.7, 0.19189, 0);
    B.CharacterMetrics_WGi = new A.CharacterMetrics(0, 0.7, 0.29087, 0);
    B.CharacterMetrics_e6x = new A.CharacterMetrics(0, 0.7, 0.25815, 0);
    B.CharacterMetrics_N8h = new A.CharacterMetrics(0, 0.7, 0.27523, 0);
    B.CharacterMetrics_N8h0 = new A.CharacterMetrics(0, 0.7, 0.27523, 0);
    B.CharacterMetrics_KYM = new A.CharacterMetrics(0, 0.7, 0.26006, 0);
    B.CharacterMetrics_7D9 = new A.CharacterMetrics(0, 0.7, 0.2939, 0);
    B.CharacterMetrics_kLR = new A.CharacterMetrics(0, 0.7, 0.24037, 0);
    B.Map_UXc7q = new C.GeneralConstantMap([65, B.CharacterMetrics_IcE, 66, B.CharacterMetrics_VZd, 67, B.CharacterMetrics_Us1, 68, B.CharacterMetrics_hTP, 69, B.CharacterMetrics_kBQ, 70, B.CharacterMetrics_JYw, 71, B.CharacterMetrics_wk3, 72, B.CharacterMetrics_SnM, 73, B.CharacterMetrics_b5r, 74, B.CharacterMetrics_Pko, 75, B.CharacterMetrics_yGP, 76, B.CharacterMetrics_b5r0, 77, B.CharacterMetrics_4qE, 78, B.CharacterMetrics_OiL, 79, B.CharacterMetrics_O6B, 80, B.CharacterMetrics_O6B0, 81, B.CharacterMetrics_EXH, 82, B.CharacterMetrics_zZw, 83, B.CharacterMetrics_b5r1, 84, B.CharacterMetrics_WGi, 85, B.CharacterMetrics_e6x, 86, B.CharacterMetrics_N8h, 87, B.CharacterMetrics_N8h0, 88, B.CharacterMetrics_KYM, 89, B.CharacterMetrics_7D9, 90, B.CharacterMetrics_kLR], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_X1k = new A.CharacterMetrics(0.35001, 0.85, 0, 0);
    B.CharacterMetrics_X1k0 = new A.CharacterMetrics(0.35001, 0.85, 0, 0);
    B.CharacterMetrics_X1k1 = new A.CharacterMetrics(0.35001, 0.85, 0, 0);
    B.CharacterMetrics_X1k2 = new A.CharacterMetrics(0.35001, 0.85, 0, 0);
    B.CharacterMetrics_teZ = new A.CharacterMetrics(0, 0.72222, 0, 0);
    B.CharacterMetrics_3Hx = new A.CharacterMetrics(-0.00099, 0.601, 0, 0);
    B.CharacterMetrics_496 = new A.CharacterMetrics(0.00001, 0.6, 0, 0);
    B.CharacterMetrics_4960 = new A.CharacterMetrics(0.00001, 0.6, 0, 0);
    B.CharacterMetrics_BQU = new A.CharacterMetrics(0.25001, 0.75, 0, 0);
    B.CharacterMetrics_BQU0 = new A.CharacterMetrics(0.25001, 0.75, 0, 0);
    B.CharacterMetrics_X1k3 = new A.CharacterMetrics(0.35001, 0.85, 0, 0);
    B.CharacterMetrics_Ds6 = new A.CharacterMetrics(-0.00599, 0.606, 0, 0);
    B.CharacterMetrics_Ds60 = new A.CharacterMetrics(-0.00599, 0.606, 0, 0);
    B.CharacterMetrics_3yK = new A.CharacterMetrics(0.30612, 0.805, 0.19445, 0);
    B.CharacterMetrics_XNe = new A.CharacterMetrics(0.306, 0.805, 0.19445, 0);
    B.CharacterMetrics_BQU1 = new A.CharacterMetrics(0.25001, 0.75, 0, 0);
    B.CharacterMetrics_X1k4 = new A.CharacterMetrics(0.35001, 0.85, 0, 0);
    B.CharacterMetrics_3Hx0 = new A.CharacterMetrics(-0.00099, 0.601, 0, 0);
    B.CharacterMetrics_BQU2 = new A.CharacterMetrics(0.25001, 0.75, 0, 0);
    B.Map_BZr4s = new C.GeneralConstantMap([40, B.CharacterMetrics_X1k, 41, B.CharacterMetrics_X1k, 47, B.CharacterMetrics_X1k0, 91, B.CharacterMetrics_X1k1, 92, B.CharacterMetrics_X1k0, 93, B.CharacterMetrics_X1k1, 123, B.CharacterMetrics_X1k2, 125, B.CharacterMetrics_X1k2, 710, B.CharacterMetrics_teZ, 732, B.CharacterMetrics_teZ, 770, B.CharacterMetrics_teZ, 771, B.CharacterMetrics_teZ, 8214, B.CharacterMetrics_3Hx, 8593, B.CharacterMetrics_496, 8595, B.CharacterMetrics_496, 8657, B.CharacterMetrics_4960, 8659, B.CharacterMetrics_4960, 8719, B.CharacterMetrics_BQU, 8720, B.CharacterMetrics_BQU, 8721, B.CharacterMetrics_BQU0, 8730, B.CharacterMetrics_X1k3, 8739, B.CharacterMetrics_Ds6, 8741, B.CharacterMetrics_Ds60, 8747, B.CharacterMetrics_3yK, 8748, B.CharacterMetrics_XNe, 8749, B.CharacterMetrics_XNe, 8750, B.CharacterMetrics_3yK, 8896, B.CharacterMetrics_BQU1, 8897, B.CharacterMetrics_BQU1, 8898, B.CharacterMetrics_BQU1, 8899, B.CharacterMetrics_BQU1, 8968, B.CharacterMetrics_X1k4, 8969, B.CharacterMetrics_X1k4, 8970, B.CharacterMetrics_X1k4, 8971, B.CharacterMetrics_X1k4, 9168, B.CharacterMetrics_3Hx0, 10216, B.CharacterMetrics_X1k4, 10217, B.CharacterMetrics_X1k4, 10752, B.CharacterMetrics_BQU2, 10753, B.CharacterMetrics_BQU2, 10754, B.CharacterMetrics_BQU2, 10756, B.CharacterMetrics_BQU1, 10758, B.CharacterMetrics_BQU1], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_kzH = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_kzH0 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_kzH1 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_kzH2 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_Coa4 = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_1Up = new A.CharacterMetrics(0.55001, 1.05, 0, 0);
    B.CharacterMetrics_1Up0 = new A.CharacterMetrics(0.55001, 1.05, 0, 0);
    B.CharacterMetrics_kzH3 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_F9q = new A.CharacterMetrics(0.86225, 1.36, 0.44445, 0);
    B.CharacterMetrics_8sG = new A.CharacterMetrics(0.862, 1.36, 0.44445, 0);
    B.CharacterMetrics_1Up1 = new A.CharacterMetrics(0.55001, 1.05, 0, 0);
    B.CharacterMetrics_kzH4 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_kzH5 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_1Up2 = new A.CharacterMetrics(0.55001, 1.05, 0, 0);
    B.Map_OO0fg = new C.GeneralConstantMap([40, B.CharacterMetrics_kzH, 41, B.CharacterMetrics_kzH, 47, B.CharacterMetrics_kzH0, 91, B.CharacterMetrics_kzH1, 92, B.CharacterMetrics_kzH0, 93, B.CharacterMetrics_kzH1, 123, B.CharacterMetrics_kzH2, 125, B.CharacterMetrics_kzH2, 710, B.CharacterMetrics_Coa4, 732, B.CharacterMetrics_Coa4, 770, B.CharacterMetrics_Coa4, 771, B.CharacterMetrics_Coa4, 8719, B.CharacterMetrics_1Up, 8720, B.CharacterMetrics_1Up, 8721, B.CharacterMetrics_1Up0, 8730, B.CharacterMetrics_kzH3, 8747, B.CharacterMetrics_F9q, 8748, B.CharacterMetrics_8sG, 8749, B.CharacterMetrics_8sG, 8750, B.CharacterMetrics_F9q, 8896, B.CharacterMetrics_1Up1, 8897, B.CharacterMetrics_1Up1, 8898, B.CharacterMetrics_1Up1, 8899, B.CharacterMetrics_1Up1, 8968, B.CharacterMetrics_kzH4, 8969, B.CharacterMetrics_kzH4, 8970, B.CharacterMetrics_kzH4, 8971, B.CharacterMetrics_kzH4, 10216, B.CharacterMetrics_kzH5, 10217, B.CharacterMetrics_kzH5, 10752, B.CharacterMetrics_1Up2, 10753, B.CharacterMetrics_1Up2, 10754, B.CharacterMetrics_1Up2, 10756, B.CharacterMetrics_1Up1, 10758, B.CharacterMetrics_1Up1], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_fSX = new A.CharacterMetrics(0.95003, 1.45, 0, 0);
    B.CharacterMetrics_fSX0 = new A.CharacterMetrics(0.95003, 1.45, 0, 0);
    B.CharacterMetrics_fSX1 = new A.CharacterMetrics(0.95003, 1.45, 0, 0);
    B.CharacterMetrics_fSX2 = new A.CharacterMetrics(0.95003, 1.45, 0, 0);
    B.CharacterMetrics_Coa5 = new A.CharacterMetrics(0, 0.75, 0, 0);
    B.CharacterMetrics_fSX3 = new A.CharacterMetrics(0.95003, 1.45, 0, 0);
    B.CharacterMetrics_fSX4 = new A.CharacterMetrics(0.95003, 1.45, 0, 0);
    B.Map_1nFCo = new C.GeneralConstantMap([40, B.CharacterMetrics_fSX, 41, B.CharacterMetrics_fSX, 47, B.CharacterMetrics_fSX0, 91, B.CharacterMetrics_fSX1, 92, B.CharacterMetrics_fSX0, 93, B.CharacterMetrics_fSX1, 123, B.CharacterMetrics_fSX2, 125, B.CharacterMetrics_fSX2, 710, B.CharacterMetrics_Coa5, 732, B.CharacterMetrics_Coa5, 770, B.CharacterMetrics_Coa5, 771, B.CharacterMetrics_Coa5, 8730, B.CharacterMetrics_fSX3, 8968, B.CharacterMetrics_fSX4, 8969, B.CharacterMetrics_fSX4, 8970, B.CharacterMetrics_fSX4, 8971, B.CharacterMetrics_fSX4, 10216, B.CharacterMetrics_fSX2, 10217, B.CharacterMetrics_fSX2], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_Tmd = new A.CharacterMetrics(1.25003, 1.75, 0, 0);
    B.CharacterMetrics_Tmd0 = new A.CharacterMetrics(1.25003, 1.75, 0, 0);
    B.CharacterMetrics_Tmd1 = new A.CharacterMetrics(1.25003, 1.75, 0, 0);
    B.CharacterMetrics_Tmd2 = new A.CharacterMetrics(1.25003, 1.75, 0, 0);
    B.CharacterMetrics_xB71 = new A.CharacterMetrics(0, 0.825, 0, 0);
    B.CharacterMetrics_Tmd3 = new A.CharacterMetrics(1.25003, 1.75, 0, 0);
    B.CharacterMetrics_Tmd4 = new A.CharacterMetrics(1.25003, 1.75, 0, 0);
    B.CharacterMetrics_pUq = new A.CharacterMetrics(0.64502, 1.155, 0, 0);
    B.CharacterMetrics_4961 = new A.CharacterMetrics(0.00001, 0.6, 0, 0);
    B.CharacterMetrics_pUq0 = new A.CharacterMetrics(0.64502, 1.155, 0, 0);
    B.CharacterMetrics_Uvd = new A.CharacterMetrics(0.00001, 0.9, 0, 0);
    B.CharacterMetrics_kzH6 = new A.CharacterMetrics(0.65002, 1.15, 0, 0);
    B.CharacterMetrics_jDc = new A.CharacterMetrics(0.90001, 0, 0, 0);
    B.CharacterMetrics_FQL = new A.CharacterMetrics(0, 0.3, 0, 0);
    B.CharacterMetrics_RZM = new A.CharacterMetrics(0.88502, 0.915, 0, 0);
    B.CharacterMetrics_iX5 = new A.CharacterMetrics(-0.00499, 0.605, 0, 0);
    B.CharacterMetrics_QyK0 = new A.CharacterMetrics(0, 0.12, 0, 0);
    B.Map_rCPmE = new C.GeneralConstantMap([40, B.CharacterMetrics_Tmd, 41, B.CharacterMetrics_Tmd, 47, B.CharacterMetrics_Tmd0, 91, B.CharacterMetrics_Tmd1, 92, B.CharacterMetrics_Tmd0, 93, B.CharacterMetrics_Tmd1, 123, B.CharacterMetrics_Tmd2, 125, B.CharacterMetrics_Tmd2, 710, B.CharacterMetrics_xB71, 732, B.CharacterMetrics_xB71, 770, B.CharacterMetrics_xB71, 771, B.CharacterMetrics_xB71, 8730, B.CharacterMetrics_Tmd3, 8968, B.CharacterMetrics_Tmd4, 8969, B.CharacterMetrics_Tmd4, 8970, B.CharacterMetrics_Tmd4, 8971, B.CharacterMetrics_Tmd4, 9115, B.CharacterMetrics_pUq, 9116, B.CharacterMetrics_4961, 9117, B.CharacterMetrics_pUq, 9118, B.CharacterMetrics_pUq, 9119, B.CharacterMetrics_4961, 9120, B.CharacterMetrics_pUq, 9121, B.CharacterMetrics_pUq0, 9122, B.CharacterMetrics_3Hx0, 9123, B.CharacterMetrics_pUq0, 9124, B.CharacterMetrics_pUq0, 9125, B.CharacterMetrics_3Hx0, 9126, B.CharacterMetrics_pUq0, 9127, B.CharacterMetrics_Uvd, 9128, B.CharacterMetrics_kzH6, 9129, B.CharacterMetrics_jDc, 9130, B.CharacterMetrics_FQL, 9131, B.CharacterMetrics_Uvd, 9132, B.CharacterMetrics_kzH6, 9133, B.CharacterMetrics_jDc, 9143, B.CharacterMetrics_RZM, 10216, B.CharacterMetrics_Tmd2, 10217, B.CharacterMetrics_Tmd2, 57344, B.CharacterMetrics_iX5, 57345, B.CharacterMetrics_iX5, 57680, B.CharacterMetrics_QyK0, 57681, B.CharacterMetrics_QyK0, 57682, B.CharacterMetrics_QyK0, 57683, B.CharacterMetrics_QyK0], type$.GeneralConstantMap_int_CharacterMetrics);
    B.CharacterMetrics_0_0_0_01 = new A.CharacterMetrics(0, 0, 0, 0);
    B.CharacterMetrics_I0N = new A.CharacterMetrics(0, 0.61111, 0, 0);
    B.CharacterMetrics_e8D = new A.CharacterMetrics(0.08333, 0.69444, 0, 0);
    B.CharacterMetrics_GW9 = new A.CharacterMetrics(0, 0.52083, 0, 0);
    B.CharacterMetrics_9wo = new A.CharacterMetrics(-0.08056, 0.53055, 0, 0);
    B.CharacterMetrics_HaH = new A.CharacterMetrics(0.13889, 0.125, 0, 0);
    B.CharacterMetrics_KR0 = new A.CharacterMetrics(0, 0.125, 0, 0);
    B.CharacterMetrics_Nyz17 = new A.CharacterMetrics(0, 0.43056, 0, 0);
    B.CharacterMetrics_03I = new A.CharacterMetrics(0.13889, 0.43056, 0, 0);
    B.CharacterMetrics_xre = new A.CharacterMetrics(-0.05556, 0.55556, 0, 0);
    B.CharacterMetrics_PHW = new A.CharacterMetrics(-0.19549, 0.41562, 0, 0);
    B.CharacterMetrics_UgO = new A.CharacterMetrics(0.13889, 0.61111, 0, 0);
    B.CharacterMetrics_bcX = new A.CharacterMetrics(0.09514, 0, 0, 0);
    B.CharacterMetrics_d8G = new A.CharacterMetrics(0.22222, 0.43056, 0, 0);
    B.CharacterMetrics_d3b = new A.CharacterMetrics(0.22222, 0.61111, 0, 0);
    B.CharacterMetrics_6rJ = new A.CharacterMetrics(0, 0.55358, 0, 0);
    B.CharacterMetrics_29G = new A.CharacterMetrics(0.19445, 0, 0, 0);
    B.CharacterMetrics_BDh = new A.CharacterMetrics(0, 0.56597, 0, 0);
    B.CharacterMetrics_fEG = new A.CharacterMetrics(0, 0.56555, 0, 0);
    B.CharacterMetrics_JR8 = new A.CharacterMetrics(0.11111, 0.21944, 0, 0);
    B.Map_jFnux = new C.GeneralConstantMap([32, B.CharacterMetrics_0_0_0_01, 33, B.CharacterMetrics_I0N, 34, B.CharacterMetrics_I0N, 35, B.CharacterMetrics_I0N, 36, B.CharacterMetrics_e8D, 37, B.CharacterMetrics_e8D, 38, B.CharacterMetrics_I0N, 39, B.CharacterMetrics_I0N, 40, B.CharacterMetrics_e8D, 41, B.CharacterMetrics_e8D, 42, B.CharacterMetrics_GW9, 43, B.CharacterMetrics_9wo, 44, B.CharacterMetrics_HaH, 45, B.CharacterMetrics_9wo, 46, B.CharacterMetrics_KR0, 47, B.CharacterMetrics_e8D, 48, B.CharacterMetrics_I0N, 49, B.CharacterMetrics_I0N, 50, B.CharacterMetrics_I0N, 51, B.CharacterMetrics_I0N, 52, B.CharacterMetrics_I0N, 53, B.CharacterMetrics_I0N, 54, B.CharacterMetrics_I0N, 55, B.CharacterMetrics_I0N, 56, B.CharacterMetrics_I0N, 57, B.CharacterMetrics_I0N, 58, B.CharacterMetrics_Nyz17, 59, B.CharacterMetrics_03I, 60, B.CharacterMetrics_xre, 61, B.CharacterMetrics_PHW, 62, B.CharacterMetrics_xre, 63, B.CharacterMetrics_I0N, 64, B.CharacterMetrics_I0N, 65, B.CharacterMetrics_I0N, 66, B.CharacterMetrics_I0N, 67, B.CharacterMetrics_I0N, 68, B.CharacterMetrics_I0N, 69, B.CharacterMetrics_I0N, 70, B.CharacterMetrics_I0N, 71, B.CharacterMetrics_I0N, 72, B.CharacterMetrics_I0N, 73, B.CharacterMetrics_I0N, 74, B.CharacterMetrics_I0N, 75, B.CharacterMetrics_I0N, 76, B.CharacterMetrics_I0N, 77, B.CharacterMetrics_I0N, 78, B.CharacterMetrics_I0N, 79, B.CharacterMetrics_I0N, 80, B.CharacterMetrics_I0N, 81, B.CharacterMetrics_UgO, 82, B.CharacterMetrics_I0N, 83, B.CharacterMetrics_I0N, 84, B.CharacterMetrics_I0N, 85, B.CharacterMetrics_I0N, 86, B.CharacterMetrics_I0N, 87, B.CharacterMetrics_I0N, 88, B.CharacterMetrics_I0N, 89, B.CharacterMetrics_I0N, 90, B.CharacterMetrics_I0N, 91, B.CharacterMetrics_e8D, 92, B.CharacterMetrics_e8D, 93, B.CharacterMetrics_e8D, 94, B.CharacterMetrics_I0N, 95, B.CharacterMetrics_bcX, 96, B.CharacterMetrics_I0N, 97, B.CharacterMetrics_Nyz17, 98, B.CharacterMetrics_I0N, 99, B.CharacterMetrics_Nyz17, 100, B.CharacterMetrics_I0N, 101, B.CharacterMetrics_Nyz17, 102, B.CharacterMetrics_I0N, 103, B.CharacterMetrics_d8G, 104, B.CharacterMetrics_I0N, 105, B.CharacterMetrics_I0N, 106, B.CharacterMetrics_d3b, 107, B.CharacterMetrics_I0N, 108, B.CharacterMetrics_I0N, 109, B.CharacterMetrics_Nyz17, 110, B.CharacterMetrics_Nyz17, 111, B.CharacterMetrics_Nyz17, 112, B.CharacterMetrics_d8G, 113, B.CharacterMetrics_d8G, 114, B.CharacterMetrics_Nyz17, 115, B.CharacterMetrics_Nyz17, 116, B.CharacterMetrics_6rJ, 117, B.CharacterMetrics_Nyz17, 118, B.CharacterMetrics_Nyz17, 119, B.CharacterMetrics_Nyz17, 120, B.CharacterMetrics_Nyz17, 121, B.CharacterMetrics_d8G, 122, B.CharacterMetrics_Nyz17, 123, B.CharacterMetrics_e8D, 124, B.CharacterMetrics_e8D, 125, B.CharacterMetrics_e8D, 126, B.CharacterMetrics_I0N, 127, B.CharacterMetrics_I0N, 160, B.CharacterMetrics_0_0_0_01, 176, B.CharacterMetrics_I0N, 184, B.CharacterMetrics_29G, 305, B.CharacterMetrics_Nyz17, 567, B.CharacterMetrics_d8G, 711, B.CharacterMetrics_BDh, 713, B.CharacterMetrics_fEG, 714, B.CharacterMetrics_I0N, 715, B.CharacterMetrics_I0N, 728, B.CharacterMetrics_I0N, 730, B.CharacterMetrics_I0N, 770, B.CharacterMetrics_I0N, 771, B.CharacterMetrics_I0N, 776, B.CharacterMetrics_I0N, 915, B.CharacterMetrics_I0N, 916, B.CharacterMetrics_I0N, 920, B.CharacterMetrics_I0N, 923, B.CharacterMetrics_I0N, 926, B.CharacterMetrics_I0N, 928, B.CharacterMetrics_I0N, 931, B.CharacterMetrics_I0N, 933, B.CharacterMetrics_I0N, 934, B.CharacterMetrics_I0N, 936, B.CharacterMetrics_I0N, 937, B.CharacterMetrics_I0N, 8216, B.CharacterMetrics_I0N, 8217, B.CharacterMetrics_I0N, 8242, B.CharacterMetrics_I0N, 9251, B.CharacterMetrics_JR8], type$.GeneralConstantMap_int_CharacterMetrics);
    B.Map_uvILB = new C.ConstantStringMap(B.Object_lwg, [B.Map_AQWi1, B.Map_lyvP9, B.Map_yJz2H, B.Map_JckB2, B.Map_F3AqH, B.Map_YJCUq, B.Map_SJfYb, B.Map_c3uZN, B.Map_c3GaC, B.Map_8fPR5, B.Map_uKL2n, B.Map_uKsm0, B.Map_UXc7q, B.Map_BZr4s, B.Map_OO0fg, B.Map_1nFCo, B.Map_rCPmE, B.Map_jFnux], C.findType("ConstantStringMap<String,Map<int,CharacterMetrics>>"));
    B.Map_vw3Ow = new C.GeneralConstantMap([B.Format_0, 1, B.Format_1, 3, B.Format_2, 15, B.Format_3, 255, B.Format_4, 65535, B.Format_5, 4294967295, B.Format_6, 127, B.Format_7, 32767, B.Format_8, 2147483647, B.Format_9, 1, B.Format_10, 1, B.Format_11, 1], type$.GeneralConstantMap_Format_int);
    B.Map_vw4lG = new C.GeneralConstantMap([B.Format_0, 1, B.Format_1, 1, B.Format_2, 1, B.Format_3, 1, B.Format_4, 2, B.Format_5, 4, B.Format_6, 1, B.Format_7, 2, B.Format_8, 4, B.Format_9, 2, B.Format_10, 4, B.Format_11, 8], type$.GeneralConstantMap_Format_int);
    B.List_array_darray = C._setArrayType(makeConstList(["array", "darray"]), type$.JSArray_String);
    B.List_z9r = C._setArrayType(makeConstList(["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix"]), type$.JSArray_String);
    B.List_smallmatrix = C._setArrayType(makeConstList(["smallmatrix"]), type$.JSArray_String);
    B.List_subarray = C._setArrayType(makeConstList(["subarray"]), type$.JSArray_String);
    B.EnvSpec__arrayHandler = new A.EnvSpec(A.array___arrayHandler$closure());
    B.EnvSpec__matrixHandler = new A.EnvSpec(A.array___matrixHandler$closure());
    B.EnvSpec__smallMatrixHandler = new A.EnvSpec(A.array___smallMatrixHandler$closure());
    B.EnvSpec__subArrayHandler = new A.EnvSpec(A.array___subArrayHandler$closure());
    B.Map_x0wTk = new C.GeneralConstantMap([B.List_array_darray, B.EnvSpec__arrayHandler, B.List_z9r, B.EnvSpec__matrixHandler, B.List_smallmatrix, B.EnvSpec__smallMatrixHandler, B.List_subarray, B.EnvSpec__subArrayHandler], type$.GeneralConstantMap_of_List_String_and_EnvSpec);
    B.Object_s5A = {"\u220f": 0, "\u2210": 1, "\u2211": 2, "\u22c0": 3, "\u22c1": 4, "\u22c2": 5, "\u22c3": 6, "\u2a00": 7, "\u2a01": 8, "\u2a02": 9, "\u2a04": 10, "\u2a06": 11};
    B.Map_xHZD8 = new C.ConstantStringMap(B.Object_s5A, ["\\prod", "\\coprod", "\\sum", "\\bigwedge", "\\bigvee", "\\bigcap", "\\bigcup", "\\bigodot", "\\bigoplus", "\\bigotimes", "\\biguplus", "\\bigsqcup"], type$.ConstantStringMap_String_String);
    B.Measurement_3_Unit_14 = new A.Measurement(3, B.Unit_14);
    B.Map_DNF5Z = new C.GeneralConstantMap([B.AtomType_1, B.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_s3IGj = new C.GeneralConstantMap([B.AtomType_0, B.Measurement_3_Unit_14, B.AtomType_1, B.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_empty13 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<AtomType,Measurement>"));
    B.Map_xSVzb = new C.GeneralConstantMap([B.AtomType_0, B.Map_DNF5Z, B.AtomType_1, B.Map_s3IGj, B.AtomType_2, B.Map_empty13, B.AtomType_3, B.Map_empty13, B.AtomType_4, B.Map_empty13, B.AtomType_5, B.Map_DNF5Z, B.AtomType_6, B.Map_empty13, B.AtomType_7, B.Map_DNF5Z, B.AtomType_8, B.Map_empty13], type$.GeneralConstantMap_of_AtomType_and_Map_AtomType_Measurement);
    B.Measurement_4_Unit_14 = new A.Measurement(4, B.Unit_14);
    B.Measurement_5_Unit_14 = new A.Measurement(5, B.Unit_14);
    B.Map_g10WG = new C.GeneralConstantMap([B.AtomType_1, B.Measurement_3_Unit_14, B.AtomType_2, B.Measurement_4_Unit_14, B.AtomType_3, B.Measurement_5_Unit_14, B.AtomType_7, B.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_72gdL = new C.GeneralConstantMap([B.AtomType_0, B.Measurement_3_Unit_14, B.AtomType_1, B.Measurement_3_Unit_14, B.AtomType_3, B.Measurement_5_Unit_14, B.AtomType_7, B.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_DsyTR = new C.GeneralConstantMap([B.AtomType_0, B.Measurement_4_Unit_14, B.AtomType_1, B.Measurement_4_Unit_14, B.AtomType_4, B.Measurement_4_Unit_14, B.AtomType_7, B.Measurement_4_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_Dslf8 = new C.GeneralConstantMap([B.AtomType_0, B.Measurement_5_Unit_14, B.AtomType_1, B.Measurement_5_Unit_14, B.AtomType_4, B.Measurement_5_Unit_14, B.AtomType_7, B.Measurement_5_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_TquCC = new C.GeneralConstantMap([B.AtomType_0, B.Measurement_3_Unit_14, B.AtomType_1, B.Measurement_3_Unit_14, B.AtomType_3, B.Measurement_5_Unit_14, B.AtomType_4, B.Measurement_3_Unit_14, B.AtomType_5, B.Measurement_3_Unit_14, B.AtomType_6, B.Measurement_3_Unit_14, B.AtomType_7, B.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_brsjQ = new C.GeneralConstantMap([B.AtomType_0, B.Measurement_3_Unit_14, B.AtomType_1, B.Measurement_3_Unit_14, B.AtomType_2, B.Measurement_4_Unit_14, B.AtomType_3, B.Measurement_5_Unit_14, B.AtomType_4, B.Measurement_3_Unit_14, B.AtomType_6, B.Measurement_3_Unit_14, B.AtomType_7, B.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    B.Map_xSiqr = new C.GeneralConstantMap([B.AtomType_0, B.Map_g10WG, B.AtomType_1, B.Map_72gdL, B.AtomType_2, B.Map_DsyTR, B.AtomType_3, B.Map_Dslf8, B.AtomType_4, B.Map_empty13, B.AtomType_5, B.Map_g10WG, B.AtomType_6, B.Map_TquCC, B.AtomType_7, B.Map_brsjQ, B.AtomType_8, B.Map_empty13], type$.GeneralConstantMap_of_AtomType_and_Map_AtomType_Measurement);
    B.List_gku = C._setArrayType(makeConstList(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overleftharpoon", "\\overrightharpoon", "\\overline"]), type$.JSArray_String);
    B.List_Txf = C._setArrayType(makeConstList(["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\r", "\\H", "\\v"]), type$.JSArray_String);
    B.List_ROh = C._setArrayType(makeConstList(["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\utilde", "\\underline"]), type$.JSArray_String);
    B.List_RPo = C._setArrayType(makeConstList(["\\xleftarrow", "\\xrightarrow", "\\xLeftarrow", "\\xRightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xrightharpoondown", "\\xrightharpoonup", "\\xleftharpoondown", "\\xleftharpoonup", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xlongequal", "\\xtwoheadrightarrow", "\\xtwoheadleftarrow", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium"]), type$.JSArray_String);
    B.List_ZU2 = C._setArrayType(makeConstList(["\\hline", "\\hdashline"]), type$.JSArray_String);
    B.List_ADQ = C._setArrayType(makeConstList(["\\nobreak", "\\allowbreak"]), type$.JSArray_String);
    B.List_Wqc = C._setArrayType(makeConstList(["\\@char"]), type$.JSArray_String);
    B.List_4gu = C._setArrayType(makeConstList(["\\textcolor"]), type$.JSArray_String);
    B.List_err = C._setArrayType(makeConstList(["\\color"]), type$.JSArray_String);
    B.List_RaS = C._setArrayType(makeConstList(["\\cr", "\\newline"]), type$.JSArray_String);
    B.List_PP9 = C._setArrayType(makeConstList(["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"]), type$.JSArray_String);
    B.List_CW7 = C._setArrayType(makeConstList(["\\right"]), type$.JSArray_String);
    B.List_LmN = C._setArrayType(makeConstList(["\\left"]), type$.JSArray_String);
    B.List_ma7 = C._setArrayType(makeConstList(["\\middle"]), type$.JSArray_String);
    B.List_B8N = C._setArrayType(makeConstList(["\\colorbox"]), type$.JSArray_String);
    B.List_TFB = C._setArrayType(makeConstList(["\\fcolorbox"]), type$.JSArray_String);
    B.List_VSU = C._setArrayType(makeConstList(["\\fbox"]), type$.JSArray_String);
    B.List_MxR = C._setArrayType(makeConstList(["\\cancel", "\\bcancel", "\\xcancel", "\\sout"]), type$.JSArray_String);
    B.List_k7K = C._setArrayType(makeConstList(["\\begin", "\\end"]), type$.JSArray_String);
    B.List_LoD = C._setArrayType(makeConstList(["\\mathrm", "\\mathit", "\\mathbf", "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", "\\Bbb", "\\bold", "\\frak"]), type$.JSArray_String);
    B.List_YOx = C._setArrayType(makeConstList(["\\boldsymbol", "\\bm"]), type$.JSArray_String);
    B.List_5CW = C._setArrayType(makeConstList(["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"]), type$.JSArray_String);
    B.List_QJU = C._setArrayType(makeConstList(["\\cfrac", "\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac", "\\\\bracefrac", "\\\\brackfrac"]), type$.JSArray_String);
    B.List_LZ2 = C._setArrayType(makeConstList(["\\over", "\\choose", "\\atop", "\\brace", "\\brack"]), type$.JSArray_String);
    B.List_Rbh = C._setArrayType(makeConstList(["\\genfrac"]), type$.JSArray_String);
    B.List_iaF = C._setArrayType(makeConstList(["\\above"]), type$.JSArray_String);
    B.List_Rya = C._setArrayType(makeConstList(["\\\\abovefrac"]), type$.JSArray_String);
    B.List_UEz = C._setArrayType(makeConstList(["\\overbrace", "\\underbrace"]), type$.JSArray_String);
    B.List_xwf = C._setArrayType(makeConstList(["\\kern", "\\mkern", "\\hskip", "\\mskip"]), type$.JSArray_String);
    B.List_F2C = C._setArrayType(makeConstList(["\\(", "$"]), type$.JSArray_String);
    B.List_NPE = C._setArrayType(makeConstList(["\\)", "\\]"]), type$.JSArray_String);
    B.List_ZCD = C._setArrayType(makeConstList(["\\mathop", "\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"]), type$.JSArray_String);
    B.List_C5i = C._setArrayType(makeConstList(["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "\u220f", "\u2210", "\u2211", "\u22c0", "\u22c1", "\u22c2", "\u22c3", "\u2a00", "\u2a01", "\u2a02", "\u2a04", "\u2a06"]), type$.JSArray_String);
    B.List_qLh = C._setArrayType(makeConstList(["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"]), type$.JSArray_String);
    B.List_fmF = C._setArrayType(makeConstList(["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"]), type$.JSArray_String);
    B.List_KkM = C._setArrayType(makeConstList(["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "\u222b", "\u222c", "\u222d", "\u222e", "\u222f", "\u2230"]), type$.JSArray_String);
    B.List_mms = C._setArrayType(makeConstList(["\\operatorname", "\\operatorname*"]), type$.JSArray_String);
    B.List_r76 = C._setArrayType(makeConstList(["\\phantom", "\\hphantom", "\\vphantom"]), type$.JSArray_String);
    B.List_BRF = C._setArrayType(makeConstList(["\\raisebox"]), type$.JSArray_String);
    B.List_1eA = C._setArrayType(makeConstList(["\\rule"]), type$.JSArray_String);
    B.List_kij = C._setArrayType(makeConstList(["\\sqrt"]), type$.JSArray_String);
    B.List_6bH = C._setArrayType(makeConstList(["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"]), type$.JSArray_String);
    B.List_8hl = C._setArrayType(makeConstList(["\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textbf", "\\textmd", "\\textit", "\\textup"]), type$.JSArray_String);
    B.List_di4 = C._setArrayType(makeConstList(["\\stackrel", "\\overset", "\\underset"]), type$.JSArray_String);
    B.FunctionSpec_4Ls = new A.FunctionSpec(1, false, true, false, A.katex_base___accentHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_u4Y = new A.FunctionSpec(1, true, false, false, A.katex_base___textAccentHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_inf = new A.FunctionSpec(1, false, true, false, A.katex_base___accentUnderHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_wSn = new A.FunctionSpec(1, false, true, false, A.katex_base___arrowHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_9Uy = new A.FunctionSpec(1, true, true, false, A.katex_base___throwExceptionHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_Pvt = new A.FunctionSpec(1, false, true, false, A.katex_base___breakHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_uya = new A.FunctionSpec(1, true, true, false, A.katex_base___charHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_zof = new A.FunctionSpec(3, true, true, false, A.katex_base___textcolorHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_brx = new A.FunctionSpec(3, true, true, false, A.katex_base___colorHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_cKQ = new A.FunctionSpec(1, true, true, false, A.katex_base___crHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_P2q = new A.FunctionSpec(1, false, true, false, A.katex_base___delimSizeHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_ykJ = new A.FunctionSpec(1, false, true, false, A.katex_base___rightHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_Tdv = new A.FunctionSpec(1, false, true, false, A.katex_base___leftHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_25S = new A.FunctionSpec(1, false, true, false, A.katex_base___middleHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_BjH = new A.FunctionSpec(3, true, true, false, A.katex_base___colorboxHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_cLF = new A.FunctionSpec(3, true, true, false, A.katex_base___fcolorboxHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_tAL = new A.FunctionSpec(1, true, true, false, A.katex_base___fboxHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_WmQ = new A.FunctionSpec(1, false, true, false, A.katex_base___cancelHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_ad1 = new A.FunctionSpec(1, false, true, false, A.katex_base___enviromentHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_k3h = new A.FunctionSpec(2, false, true, false, A.katex_base___fontHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_3cC = new A.FunctionSpec(2, false, true, false, A.katex_base___boldSymbolHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_jw9 = new A.FunctionSpec(1, true, true, false, A.katex_base___textFontHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_2WJ = new A.FunctionSpec(2, false, true, false, A.katex_base___fracHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_Tig = new A.FunctionSpec(1, false, true, true, A.katex_base___overHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_EJ7 = new A.FunctionSpec(6, false, true, false, A.katex_base___genfracHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_Anv = new A.FunctionSpec(1, false, true, true, A.katex_base___aboveHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_p6s = new A.FunctionSpec(1, false, true, false, A.katex_base___aboveFracHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_pZP = new A.FunctionSpec(1, false, true, false, A.katex_base___horizBraceHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_equ = new A.FunctionSpec(1, true, true, false, A.katex_base___kernHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_DVM = new A.FunctionSpec(1, true, false, false, A.katex_base___mathLeftHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_dI8 = new A.FunctionSpec(1, true, false, false, A.katex_base___mathRightHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_4Wz = new A.FunctionSpec(1, false, true, false, A.katex_base___mclassHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_4RE = new A.FunctionSpec(1, false, true, false, A.katex_base___bigOpHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_yvs = new A.FunctionSpec(1, false, true, false, A.katex_base___mathFunctionHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_p2o = new A.FunctionSpec(1, false, true, false, A.katex_base___mathLimitsHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_pox = new A.FunctionSpec(1, false, true, false, A.katex_base___integralHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_Upa = new A.FunctionSpec(1, false, true, false, A.katex_base___operatorNameHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_mBZ = new A.FunctionSpec(1, true, true, false, A.katex_base___phantomHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_hdl = new A.FunctionSpec(1, true, true, false, A.katex_base___raiseBoxHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_2Ab = new A.FunctionSpec(1, false, true, false, A.katex_base___ruleHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_qwr = new A.FunctionSpec(1, true, true, false, A.katex_base___sizingHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_Ime = new A.FunctionSpec(1, false, true, false, A.katex_base___sqrtHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_IkB = new A.FunctionSpec(1, true, true, false, A.katex_base___stylingHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_mB7 = new A.FunctionSpec(2, true, true, false, A.katex_base___textHandler$closure(), type$.FunctionSpec_GreenNode);
    B.FunctionSpec_S6H = new A.FunctionSpec(1, false, true, false, A.katex_base___underOverHandler$closure(), type$.FunctionSpec_GreenNode);
    B.Map_yHnJl = new C.GeneralConstantMap([B.List_gku, B.FunctionSpec_4Ls, B.List_Txf, B.FunctionSpec_u4Y, B.List_ROh, B.FunctionSpec_inf, B.List_RPo, B.FunctionSpec_wSn, B.List_ZU2, B.FunctionSpec_9Uy, B.List_ADQ, B.FunctionSpec_Pvt, B.List_Wqc, B.FunctionSpec_uya, B.List_4gu, B.FunctionSpec_zof, B.List_err, B.FunctionSpec_brx, B.List_RaS, B.FunctionSpec_cKQ, B.List_PP9, B.FunctionSpec_P2q, B.List_CW7, B.FunctionSpec_ykJ, B.List_LmN, B.FunctionSpec_Tdv, B.List_ma7, B.FunctionSpec_25S, B.List_B8N, B.FunctionSpec_BjH, B.List_TFB, B.FunctionSpec_cLF, B.List_VSU, B.FunctionSpec_tAL, B.List_MxR, B.FunctionSpec_WmQ, B.List_k7K, B.FunctionSpec_ad1, B.List_LoD, B.FunctionSpec_k3h, B.List_YOx, B.FunctionSpec_3cC, B.List_5CW, B.FunctionSpec_jw9, B.List_QJU, B.FunctionSpec_2WJ, B.List_LZ2, B.FunctionSpec_Tig, B.List_Rbh, B.FunctionSpec_EJ7, B.List_iaF, B.FunctionSpec_Anv, B.List_Rya, B.FunctionSpec_p6s, B.List_UEz, B.FunctionSpec_pZP, B.List_xwf, B.FunctionSpec_equ, B.List_F2C, B.FunctionSpec_DVM, B.List_NPE, B.FunctionSpec_dI8, B.List_ZCD, B.FunctionSpec_4Wz, B.List_C5i, B.FunctionSpec_4RE, B.List_qLh, B.FunctionSpec_yvs, B.List_fmF, B.FunctionSpec_p2o, B.List_KkM, B.FunctionSpec_pox, B.List_mms, B.FunctionSpec_Upa, B.List_r76, B.FunctionSpec_mBZ, B.List_BRF, B.FunctionSpec_hdl, B.List_1eA, B.FunctionSpec_2Ab, B.List_RJL, B.FunctionSpec_qwr, B.List_kij, B.FunctionSpec_Ime, B.List_6bH, B.FunctionSpec_IkB, B.List_8hl, B.FunctionSpec_mB7, B.List_di4, B.FunctionSpec_S6H], type$.GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode);
    B.Object_SUj = {"\xc5": 0, "\xc7": 1, "\xd0": 2, "\xde": 3, "\xe5": 4, "\xe7": 5, "\xf0": 6, "\xfe": 7, "\u0410": 8, "\u0411": 9, "\u0412": 10, "\u0413": 11, "\u0414": 12, "\u0415": 13, "\u0416": 14, "\u0417": 15, "\u0418": 16, "\u0419": 17, "\u041a": 18, "\u041b": 19, "\u041c": 20, "\u041d": 21, "\u041e": 22, "\u041f": 23, "\u0420": 24, "\u0421": 25, "\u0422": 26, "\u0423": 27, "\u0424": 28, "\u0425": 29, "\u0426": 30, "\u0427": 31, "\u0428": 32, "\u0429": 33, "\u042a": 34, "\u042b": 35, "\u042c": 36, "\u042d": 37, "\u042e": 38, "\u042f": 39, "\u0430": 40, "\u0431": 41, "\u0432": 42, "\u0433": 43, "\u0434": 44, "\u0435": 45, "\u0436": 46, "\u0437": 47, "\u0438": 48, "\u0439": 49, "\u043a": 50, "\u043b": 51, "\u043c": 52, "\u043d": 53, "\u043e": 54, "\u043f": 55, "\u0440": 56, "\u0441": 57, "\u0442": 58, "\u0443": 59, "\u0444": 60, "\u0445": 61, "\u0446": 62, "\u0447": 63, "\u0448": 64, "\u0449": 65, "\u044a": 66, "\u044b": 67, "\u044c": 68, "\u044d": 69, "\u044e": 70, "\u044f": 71};
    B.Map_yfgyh = new C.ConstantStringMap(B.Object_SUj, ["A", "C", "D", "o", "a", "c", "d", "o", "A", "B", "B", "F", "A", "E", "K", "3", "N", "N", "K", "N", "M", "H", "O", "N", "P", "C", "T", "y", "O", "X", "U", "h", "W", "W", "B", "X", "B", "3", "X", "R", "a", "b", "a", "r", "y", "e", "m", "e", "n", "n", "n", "n", "m", "n", "o", "n", "p", "c", "o", "y", "b", "x", "n", "n", "w", "w", "a", "m", "a", "e", "m", "r"], type$.ConstantStringMap_String_String);
    B.Object_UBn = {"\u2190": 0, "\u2192": 1, "\u2194": 2, "\u21d0": 3, "\u21d2": 4, "\u21d4": 5, "\u2208": 6, "\u220b": 7, "\u2223": 8, "\u2225": 9, "\u223c": 10, "~": 11, "\u2243": 12, "\u2245": 13, "\u2248": 14, "\u224d": 15, "=": 16, "\u2261": 17, "<": 18, ">": 19, "\u2264": 20, "\u2265": 21, "\u2272": 22, "\u2273": 23, "\u2276": 24, "\u2277": 25, "\u227a": 26, "\u227b": 27, "\u2282": 28, "\u2283": 29, "\u2286": 30, "\u2287": 31, "\u22a2": 32, "\u22a8": 33, "\u22a9": 34, "\u22ab": 35, "\u227c": 36, "\u227d": 37, "\u2291": 38, "\u2292": 39, "\u22b2": 40, "\u22b3": 41, "\u22b4": 42, "\u22b5": 43, "\u2203": 44};
    B.Map_z17bk = new C.ConstantStringMap(B.Object_UBn, ["\u219a", "\u219b", "\u21ae", "\u21cd", "\u21cf", "\u21ce", "\u2209", "\u220c", "\u2224", "\u2226", "\u2241", "\u2241", "\u2244", "\u2247", "\u2249", "\u226d", "\u2260", "\u2262", "\u226e", "\u226f", "\u2270", "\u2271", "\u2274", "\u2275", "\u2278", "\u2279", "\u2280", "\u2281", "\u2284", "\u2285", "\u2288", "\u2289", "\u22ac", "\u22ad", "\u22ae", "\u22af", "\u22e0", "\u22e1", "\u22e2", "\u22e3", "\u22ea", "\u22eb", "\u22ec", "\u22ed", "\u2204"], type$.ConstantStringMap_String_String);
    B.Object_v3P = {matrix: 0, pmatrix: 1, bmatrix: 2, Bmatrix: 3, vmatrix: 4, Vmatrix: 5};
    B.List_Qyp = C._setArrayType(makeConstList(["(", ")"]), type$.JSArray_String);
    B.List_gcW = C._setArrayType(makeConstList(["[", "]"]), type$.JSArray_String);
    B.List_FEJ = C._setArrayType(makeConstList(["{", "}"]), type$.JSArray_String);
    B.List_jME = C._setArrayType(makeConstList(["|", "|"]), type$.JSArray_String);
    B.List_Dl2 = C._setArrayType(makeConstList(["\u2223", "\u2223"]), type$.JSArray_String);
    B.Map_z9QPz = new C.ConstantStringMap(B.Object_v3P, [null, B.List_Qyp, B.List_gcW, B.List_FEJ, B.List_jME, B.List_Dl2], C.findType("ConstantStringMap<String,List<String>?>"));
    B.Object_0ph = {"\u222b": 0, "\u222c": 1, "\u222d": 2, "\u222e": 3, "\u222f": 4, "\u2230": 5};
    B.Map_zBg4B = new C.ConstantStringMap(B.Object_0ph, ["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint"], type$.ConstantStringMap_String_String);
    B.Color_1kO = new C.Color(1, 0.9450980392156862, 0.9725490196078431, 0.9137254901960784, D.ColorSpace_0);
    B.Color_77g = new C.Color(1, 0.8627450980392157, 0.9294117647058824, 0.7843137254901961, D.ColorSpace_0);
    B.Color_fMt = new C.Color(1, 0.7725490196078432, 0.8823529411764706, 0.6470588235294118, D.ColorSpace_0);
    B.Color_COn = new C.Color(1, 0.6823529411764706, 0.8352941176470589, 0.5058823529411764, D.ColorSpace_0);
    B.Color_OuA = new C.Color(1, 0.611764705882353, 0.8, 0.396078431372549, D.ColorSpace_0);
    B.Color_ZRN = new C.Color(1, 0.5450980392156862, 0.7647058823529411, 0.2901960784313726, D.ColorSpace_0);
    B.Color_vq2 = new C.Color(1, 0.48627450980392156, 0.7019607843137254, 0.25882352941176473, D.ColorSpace_0);
    B.Color_Uwi = new C.Color(1, 0.40784313725490196, 0.6235294117647059, 0.2196078431372549, D.ColorSpace_0);
    B.Color_A3s = new C.Color(1, 0.3333333333333333, 0.5450980392156862, 0.1843137254901961, D.ColorSpace_0);
    B.Color_gCG = new C.Color(1, 0.2, 0.4117647058823529, 0.11764705882352941, D.ColorSpace_0);
    B.Map_tFRc8 = new C.GeneralConstantMap([50, B.Color_1kO, 100, B.Color_77g, 200, B.Color_fMt, 300, B.Color_COn, 400, B.Color_OuA, 500, B.Color_ZRN, 600, B.Color_vq2, 700, B.Color_Uwi, 800, B.Color_A3s, 900, B.Color_gCG], type$.GeneralConstantMap_int_Color);
    B.MaterialColor_7bM = new C.MaterialColor(B.Map_tFRc8, 1, 0.5450980392156862, 0.7647058823529411, 0.2901960784313726, D.ColorSpace_0);
    B.Color_REe = new C.Color(1, 1, 0.9921568627450981, 0.9058823529411765, D.ColorSpace_0);
    B.Color_zqk = new C.Color(1, 1, 0.9764705882352941, 0.7686274509803922, D.ColorSpace_0);
    B.Color_bL2 = new C.Color(1, 1, 0.9607843137254902, 0.615686274509804, D.ColorSpace_0);
    B.Color_oJ2 = new C.Color(1, 1, 0.9450980392156862, 0.4627450980392157, D.ColorSpace_0);
    B.Color_z6X = new C.Color(1, 1, 0.9333333333333333, 0.34509803921568627, D.ColorSpace_0);
    B.Color_1HC = new C.Color(1, 1, 0.9215686274509803, 0.23137254901960785, D.ColorSpace_0);
    B.Color_qbs = new C.Color(1, 0.9921568627450981, 0.8470588235294118, 0.20784313725490197, D.ColorSpace_0);
    B.Color_YGC = new C.Color(1, 0.984313725490196, 0.7529411764705882, 0.17647058823529413, D.ColorSpace_0);
    B.Color_XYe = new C.Color(1, 0.9764705882352941, 0.6588235294117647, 0.1450980392156863, D.ColorSpace_0);
    B.Color_OeE = new C.Color(1, 0.9607843137254902, 0.4980392156862745, 0.09019607843137255, D.ColorSpace_0);
    B.Map_tF4di = new C.GeneralConstantMap([50, B.Color_REe, 100, B.Color_zqk, 200, B.Color_bL2, 300, B.Color_oJ2, 400, B.Color_z6X, 500, B.Color_1HC, 600, B.Color_qbs, 700, B.Color_YGC, 800, B.Color_XYe, 900, B.Color_OeE], type$.GeneralConstantMap_int_Color);
    B.MaterialColor_gyN = new C.MaterialColor(B.Map_tF4di, 1, 1, 0.9215686274509803, 0.23137254901960785, D.ColorSpace_0);
    B.MathStyleDiff_0 = new A.MathStyleDiff(0, "sub");
    B.MathStyleDiff_1 = new A.MathStyleDiff(1, "sup");
    B.MathStyleDiff_2 = new A.MathStyleDiff(2, "fracNum");
    B.MathStyleDiff_3 = new A.MathStyleDiff(3, "fracDen");
    B.MathStyleDiff_4 = new A.MathStyleDiff(4, "cramp");
    B.MathStyleDiff_5 = new A.MathStyleDiff(5, "text");
    B.MatrixSeparatorStyle_2 = new A.MatrixSeparatorStyle(2, "none");
    B.Measurement_0_Unit_0 = new A.Measurement(0, B.Unit_0);
    B.Measurement_5_Unit_0 = new A.Measurement(5, B.Unit_0);
    B.Measurement_83w = new A.Measurement(0.12, B.Unit_16);
    B.MessagesGroupingMode_0 = new A.MessagesGroupingMode(0, "timeDifference");
    B.NeverScrollableScrollPhysics_null = new A.NeverScrollableScrollPhysics(null);
    B.ObserverAutoTriggerObserveType_0 = new A.ObserverAutoTriggerObserveType(0, "scrollStart");
    B.ObserverAutoTriggerObserveType_1 = new A.ObserverAutoTriggerObserveType(1, "scrollUpdate");
    B.ObserverAutoTriggerObserveType_2 = new A.ObserverAutoTriggerObserveType(2, "scrollEnd");
    B.ObserverRenderSliverType_0 = new A.ObserverRenderSliverType(0, "list");
    B.ObserverTriggerOnObserveType_0 = new A.ObserverTriggerOnObserveType(0, "directly");
    B.ObserverTriggerOnObserveType_1 = new A.ObserverTriggerOnObserveType(1, "displayingItemsChange");
    B.ObserverWidgetObserveResultType_0 = new A.ObserverWidgetObserveResultType(0, "success");
    B.ObserverWidgetObserveResultType_1 = new A.ObserverWidgetObserveResultType(1, "interrupted");
    B.Offset_0_3 = new C.Offset(0, 3);
    B.Offset_5ck = new C.Offset(2.6999999999999997, 8.1);
    B.Offset_5tR = new C.Offset(3.6, 9);
    B.Offset_9_9 = new C.Offset(9, 9);
    B.Offset_ATs = new C.Offset(14.4, 9);
    B.Offset_FK3 = new C.Offset(7.2, 12.6);
    B.Offset_R50 = new C.Offset(15.299999999999999, 4.5);
    B.OvalBorder_0SS = new A.OvalBorder(1, D.BorderSide_Ah5);
    B.PageScrollPhysics_null = new A.PageScrollPhysics(null);
    B.PaintingStyle_00 = new A.PaintingStyle0(0, "fill");
    B.PaintingStyle_10 = new A.PaintingStyle0(1, "stroke");
    B.PathCommandType_0 = new A.PathCommandType(0, "move");
    B.PathCommandType_1 = new A.PathCommandType(1, "line");
    B.PathCommandType_2 = new A.PathCommandType(2, "cubic");
    B.PathFillType_00 = new A.PathFillType0(0, "nonZero");
    B.PathFillType_10 = new A.PathFillType0(1, "evenOdd");
    B.Point_0_0 = new A.Point(0, 0);
    B.Icon_2cl = new C.Icon(B.IconData_57686_MaterialIcons_null_false, 14, D.Color_wst, null, null);
    B.Positioned_QIX = new C.Positioned(2, 3, null, null, null, null, B.Icon_2cl, null);
    B.RangeValues_0_100 = new A.RangeValues(0, 100);
    B.XmlAttributeType_BDu = new A.XmlAttributeType('"', 1, "DOUBLE_QUOTE");
    B.Record2_wb7 = new C._Record_2("", B.XmlAttributeType_BDu);
    B.Rect_0_0_0_00 = new A.Rect0(0, 0, 0, 0);
    B.Rect_NUV0 = new A.Rect0(-1000000000, -1000000000, 1000000000, 1000000000);
    B.RenderingStrategy_0 = new A.RenderingStrategy(0, "raster");
    B.RenderingStrategy_1 = new A.RenderingStrategy(1, "picture");
    B.RoundSliderTickMarkShape_null = new A.RoundSliderTickMarkShape(null);
    B.Set_1ZnLs = new C.ConstantStringSet(B.Object_s5A, 12, type$.ConstantStringSet_String);
    B.Object_ZC2 = {"\u27e8": 0, "\u27e9": 1, "/": 2};
    B.Set_6NNqz = new C.ConstantStringSet(B.Object_ZC2, 3, type$.ConstantStringSet_String);
    B.Set_APva8 = new C.GeneralConstantSet([B.AtomType_3, B.AtomType_5, B.AtomType_6, null], type$.GeneralConstantSet_nullable_AtomType);
    B.Object_PvY = {"\\acute": 0, "\\grave": 1, "\\ddot": 2, "\\tilde": 3, "\\bar": 4, "\\breve": 5, "\\check": 6, "\\hat": 7, "\\vec": 8, "\\dot": 9, "\\mathring": 10};
    B.Set_H6XGa = new C.ConstantStringSet(B.Object_PvY, 11, type$.ConstantStringSet_String);
    B.Object_1MX = {"writing-mode": 0, "glyph-orientation-vertical": 1, "glyph-orientation-horizontal": 2, direction: 3, "text-anchor": 4, "font-family": 5, "font-style": 6, "font-variant": 7, "font-weight": 8, "font-stretch": 9, "font-size": 10, "font-size-adjust": 11, font: 12, kerning: 13, "letter-spacing": 14, "word-spacing": 15, fill: 16, "fill-rule": 17, "fill-opacity": 18, stroke: 19, "stroke-width": 20, "stroke-linecap": 21, "stroke-linejoin": 22, "stroke-miterlimit": 23, "stroke-dasharray": 24, "stroke-dashoffset": 25, "stroke-opacity": 26, visibility: 27, "marker-start": 28, marker: 29, "color-interpolation": 30, "color-interpolation-filters": 31, "color-rendering": 32, "shape-rendering": 33, "text-rendering": 34, "image-rendering": 35, color: 36, "color-profile": 37, "clip-rule": 38, "pointer-events": 39, cursor: 40};
    B.Set_N2bSi = new C.ConstantStringSet(B.Object_1MX, 41, type$.ConstantStringSet_String);
    B.Object_zY8 = {widehat: 0, widecheck: 1, widetilde: 2, utilde: 3};
    B.Set_SjXog = new C.ConstantStringSet(B.Object_zY8, 4, type$.ConstantStringSet_String);
    B.Object_b2r = {"\u2259": 0, "\u225a": 1, "\u225b": 2, "\u225d": 3, "\u225e": 4, "\u225f": 5};
    B.Set_Vj9Rm = new C.ConstantStringSet(B.Object_b2r, 6, type$.ConstantStringSet_String);
    B.Object_X2P = {"\\widehat": 0, "\\widetilde": 1, "\\widecheck": 2};
    B.Set_hM5f1 = new C.ConstantStringSet(B.Object_X2P, 3, type$.ConstantStringSet_String);
    B.Set_ifAq1 = new C.GeneralConstantSet([B.AtomType_2, B.AtomType_4, B.AtomType_3, B.AtomType_1, B.AtomType_6, null], type$.GeneralConstantSet_nullable_AtomType);
    B.Object_JZj = {"\xc7": 0, "\xd0": 1, "\xde": 2, "\xe7": 3, "\xfe": 4};
    B.Set_jXWE3 = new C.ConstantStringSet(B.Object_JZj, 5, type$.ConstantStringSet_String);
    B.Object_4ba = {"\\relax": 0, "^": 1, _: 2, "\\limits": 3, "\\nolimits": 4};
    B.Set_oV20z = new C.ConstantStringSet(B.Object_4ba, 5, type$.ConstantStringSet_String);
    B.Object_0Y0 = {"}": 0, "\\endgroup": 1, "\\end": 2, "\\right": 3, "&": 4};
    B.Set_u2wkf = new C.ConstantStringSet(B.Object_0Y0, 5, type$.ConstantStringSet_String);
    B.Object_fFn = {"(": 0, ")": 1, "[": 2, "]": 3, "{": 4, "}": 5, "\u230a": 6, "\u230b": 7, "\u2308": 8, "\u2309": 9, "\u221a": 10};
    B.Set_yInQh = new C.ConstantStringSet(B.Object_fFn, 11, type$.ConstantStringSet_String);
    B.ShimmerDirection_0 = new A.ShimmerDirection(0, "ltr");
    B.ShimmerDirection_1 = new A.ShimmerDirection(1, "rtl");
    B.ShimmerDirection_2 = new A.ShimmerDirection(2, "ttb");
    B.ShimmerDirection_3 = new A.ShimmerDirection(3, "btt");
    B.ShowValueIndicator_0 = new A.ShowValueIndicator(0, "onlyForDiscrete");
    B.ShowValueIndicator_3 = new A.ShowValueIndicator(3, "never");
    B.Size_0_40 = new C.Size(0, 40);
    B.Size_18_18 = new C.Size(18, 18);
    B.Size_80_80 = new C.Size(80, 80);
    B.SizedBox_20_null_null_null = new C.SizedBox(20, null, null, null);
    B.SliderInteraction_0 = new A.SliderInteraction(0, "tapAndSlide");
    B.SliderInteraction_2 = new A.SliderInteraction(2, "slideOnly");
    B.Spacer_null = new A.Spacer(null);
    B.Strict_1 = new A.Strict(1, "warn");
    B.Strict_3 = new A.Strict(3, "function");
    B.StrokeCap_00 = new A.StrokeCap0(0, "butt");
    B.StrokeCap_10 = new A.StrokeCap0(1, "round");
    B.StrokeCap_2 = new A.StrokeCap0(2, "square");
    B.StrokeJoin_00 = new A.StrokeJoin0(0, "miter");
    B.StrokeJoin_10 = new A.StrokeJoin0(1, "round");
    B.StrokeJoin_2 = new A.StrokeJoin0(2, "bevel");
    B.StrutStyle_ilT = new C.StrutStyle(null, null, null, null, null, null, null, null, null, null);
    B.SvgAttributes_781 = new A.SvgAttributes(D.Map_empty6, null, null, B.ColorOrNone_false_null, null, null, B.AffineMatrix_qrl, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.SvgPathSegType_0 = new A.SvgPathSegType(0, "unknown");
    B.TDCheckBoxSize_1 = new A.TDCheckBoxSize(1, "small");
    B.TDCheckboxStyle_0 = new A.TDCheckboxStyle(0, "circle");
    B.TDCheckboxStyle_1 = new A.TDCheckboxStyle(1, "square");
    B.TDCheckboxStyle_2 = new A.TDCheckboxStyle(2, "check");
    B.TDContentDirection_1 = new A.TDContentDirection(1, "right");
    B.TDDivider_3M0 = new C.TDDivider(null, B.EdgeInsets_16_0_0_0, null, null, null);
    B.EdgeInsets_48_0_0_0 = new C.EdgeInsets(48, 0, 0, 0);
    B.TDDivider_QF6 = new C.TDDivider(null, B.EdgeInsets_48_0_0_0, null, null, null);
    B.TDFormItemType_0 = new A.TDFormItemType(0, "input");
    B.TDFormItemType_1 = new A.TDFormItemType(1, "radios");
    B.TDFormItemType_4 = new A.TDFormItemType(4, "stepper");
    B.TDFormItemType_5 = new A.TDFormItemType(5, "rate");
    B.TDInputSize_1 = new A.TDInputSize(1, "large");
    B.TDInputType_0 = new A.TDInputType(0, "normal");
    B.TDRadioStyle_0 = new A.TDRadioStyle(0, "circle");
    B.TDSkeletonAnimation_1 = new A.TDSkeletonAnimation(1, "flashed");
    B.TDSkeletonTheme_2 = new A.TDSkeletonTheme(2, "text");
    B.TDSkeletonTheme_3 = new A.TDSkeletonTheme(3, "paragraph");
    B.Strict_0 = new A.Strict(0, "ignore");
    B.TexParserSettings_Strict_0 = new A.TexParserSettings(B.Strict_0);
    B.TexParserSettings_Strict_1 = new A.TexParserSettings(B.Strict_1);
    B.TextDecorationStyle_0 = new A.TextDecorationStyle0(0, "solid");
    B.TextDecorationStyle_1 = new A.TextDecorationStyle0(1, "double");
    B.TextDecorationStyle_2 = new A.TextDecorationStyle0(2, "dotted");
    B.TextDecorationStyle_3 = new A.TextDecorationStyle0(3, "dashed");
    B.TextDecorationStyle_4 = new A.TextDecorationStyle0(4, "wavy");
    B.TextDecoration_00 = new A.TextDecoration0(0);
    B.TextDecoration_10 = new A.TextDecoration0(1);
    B.TextDecoration_20 = new A.TextDecoration0(2);
    B.TextDecoration_40 = new A.TextDecoration0(4);
    B.TextRange_0_m1 = new C.TextRange(0, -1);
    B.TextStyle_mI6 = new C.TextStyle(true, null, null, null, null, null, 0, null, null, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.TextSpan_0ck = new C.TextSpan("\n ", null, D.C__DeferringMouseCursor, B.TextStyle_mI6);
    B.TextSpan_DuQ = new C.TextSpan(null, null, D.C__DeferringMouseCursor, null);
    B.TextStreamMessageMode_1 = new A.TextStreamMessageMode(1, "instantMarkdown");
    B.TextStyle_HPw = new C.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_4, null, null, null, null, null, null, null, null);
    B.TextStyle_IpK = new C.TextStyle(true, null, null, null, null, null, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Color_U2m = new C.Color(1, 0.9254901960784314, 0.9372549019607843, 0.9450980392156862, D.ColorSpace_0);
    B.Color_KQg = new C.Color(1, 0.8117647058823529, 0.8470588235294118, 0.8627450980392157, D.ColorSpace_0);
    B.Color_Y3G = new C.Color(1, 0.6901960784313725, 0.7450980392156863, 0.7725490196078432, D.ColorSpace_0);
    B.Color_VRs = new C.Color(1, 0.5647058823529412, 0.6431372549019608, 0.6823529411764706, D.ColorSpace_0);
    B.Color_85T = new C.Color(1, 0.47058823529411764, 0.5647058823529412, 0.611764705882353, D.ColorSpace_0);
    B.Color_7wc = new C.Color(1, 0.3764705882352941, 0.49019607843137253, 0.5450980392156862, D.ColorSpace_0);
    B.Color_hjN = new C.Color(1, 0.32941176470588235, 0.43137254901960786, 0.47843137254901963, D.ColorSpace_0);
    B.Color_j79 = new C.Color(1, 0.21568627450980393, 0.2784313725490196, 0.30980392156862746, D.ColorSpace_0);
    B.Color_gqh = new C.Color(1, 0.14901960784313725, 0.19607843137254902, 0.2196078431372549, D.ColorSpace_0);
    B.Map_tFl43 = new C.GeneralConstantMap([50, B.Color_U2m, 100, B.Color_KQg, 200, B.Color_Y3G, 300, B.Color_VRs, 400, B.Color_85T, 500, B.Color_7wc, 600, B.Color_hjN, 700, D.Color_PJw, 800, B.Color_j79, 900, B.Color_gqh], type$.GeneralConstantMap_int_Color);
    B.MaterialColor_M34 = new C.MaterialColor(B.Map_tFl43, 1, 0.3764705882352941, 0.49019607843137253, 0.5450980392156862, D.ColorSpace_0);
    B.TextStyle_iiK = new C.TextStyle(true, B.MaterialColor_M34, null, null, null, null, 8, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Text_4Da = new C.Text("\u9009\u62e9\u56fe\u7247", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Text_mo4 = new C.Text("This widget should not appear. It means one of FlutterMath's AST nodes forgot to handle the case for TransparentNodes", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Thumb_0 = new A.Thumb(0, "start");
    B.Thumb_1 = new A.Thumb(1, "end");
    B.TileMode_00 = new A.TileMode0(0, "clamp");
    B.TileMode_10 = new A.TileMode0(1, "repeated");
    B.TileMode_20 = new A.TileMode0(2, "mirror");
    B.TimeAndStatusPosition_1 = new A.TimeAndStatusPosition(1, "end");
    B.TimeUnit_0 = new A.TimeUnit(0, "hours");
    B.TimeUnit_1 = new A.TimeUnit(1, "minutes");
    B.TimeUnit_2 = new A.TimeUnit(2, "seconds");
    B.TimeUnit_3 = new A.TimeUnit(3, "milliseconds");
    B.TimeUnit_4 = new A.TimeUnit(4, "microseconds");
    B.Type_Line_2D3 = C.typeLiteral("Line");
    B.Type_ScrollEndNotification_axn = C.typeLiteral("ScrollEndNotification");
    B.Type_ScrollStartNotification_Ezb = C.typeLiteral("ScrollStartNotification");
    B.Type_ScrollUpdateNotification_nu7 = C.typeLiteral("ScrollUpdateNotification");
    B.Type_VList_cRJ = C.typeLiteral("VList");
    B.Type__AdjustSliderIntent_bIn = C.typeLiteral("_AdjustSliderIntent");
    B.WrapAlignment_0 = new A.WrapAlignment(0, "start");
    B.WrapAlignment_1 = new A.WrapAlignment(1, "end");
    B.WrapAlignment_2 = new A.WrapAlignment(2, "center");
    B.WrapAlignment_3 = new A.WrapAlignment(3, "spaceBetween");
    B.WrapAlignment_4 = new A.WrapAlignment(4, "spaceAround");
    B.WrapAlignment_5 = new A.WrapAlignment(5, "spaceEvenly");
    B.WrapCrossAlignment_0 = new A.WrapCrossAlignment(0, "start");
    B.WrapCrossAlignment_1 = new A.WrapCrossAlignment(1, "end");
    B.WrapCrossAlignment_2 = new A.WrapCrossAlignment(2, "center");
    B.XmlAttributeType_Ugh = new A.XmlAttributeType("'", 0, "SINGLE_QUOTE");
    B.XmlNodeType_1 = new A.XmlNodeType(1, "CDATA");
    B.XmlNodeType_10 = new A.XmlNodeType(10, "PROCESSING");
    B.XmlNodeType_11 = new A.XmlNodeType(11, "TEXT");
    B.XmlNodeType_2 = new A.XmlNodeType(2, "COMMENT");
    B.XmlNodeType_3 = new A.XmlNodeType(3, "DECLARATION");
    B.XmlNodeType_4 = new A.XmlNodeType(4, "DOCUMENT_TYPE");
    B.XmlNodeType_7 = new A.XmlNodeType(7, "ELEMENT");
    B._CheckboxType_0 = new A._CheckboxType(0, "material");
    B._CurrentSection_0 = new A._CurrentSection(0, "size");
    B._CurrentSection_1 = new A._CurrentSection(1, "images");
    B._CurrentSection_2 = new A._CurrentSection(2, "shaders");
    B._CurrentSection_3 = new A._CurrentSection(3, "paints");
    B._CurrentSection_4 = new A._CurrentSection(4, "paths");
    B._CurrentSection_5 = new A._CurrentSection(5, "textPositions");
    B._CurrentSection_6 = new A._CurrentSection(6, "text");
    B._CurrentSection_7 = new A._CurrentSection(7, "commands");
    B._FracPos_0 = new A._FracPos(0, "numer");
    B._FracPos_1 = new A._FracPos(1, "denom");
    B._PathOffset_0_0 = new A._PathOffset(0, 0);
    B._RadioType_0 = new A._RadioType(0, "material");
    B._ScriptPos_0 = new A._ScriptPos(0, "base");
    B._ScriptPos_1 = new A._ScriptPos(1, "sub");
    B._ScriptPos_2 = new A._ScriptPos(2, "sup");
    B._ScriptPos_3 = new A._ScriptPos(3, "presub");
    B._ScriptPos_4 = new A._ScriptPos(4, "presup");
    B._SliderType_0 = new A._SliderType(0, "material");
    B._SqrtPos_0 = new A._SqrtPos(0, "base");
    B._SqrtPos_1 = new A._SqrtPos(1, "ind");
    B._SqrtPos_2 = new A._SqrtPos(2, "surd");
    B._TDIconsData_pHz = new C._TDIconsData("close_circle_filled", 57829, "TDIcons", "tdesign_flutter", false);
  })();
  (function staticFields() {
    $.compactedCompositeSymbolTypes = C.LinkedHashMap_LinkedHashMap$_literal(["\u2237", B.AtomType_3, "\u2254", B.AtomType_3, "\u2255", B.AtomType_3, "\u2239", B.AtomType_3, "\u27e6", B.AtomType_4, "\u27e7", B.AtomType_5, "\u2983", B.AtomType_4, "\u2984", B.AtomType_5], type$.String, C.findType("AtomType"));
    $._environments = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.EnvSpec);
    $.Float16__toFloatFloat32Data = null;
    $.Float16____eLut = C._Cell$named("_eLut");
    $._debugIsSelecting = false;
    $._InheritedProviderScopeElement__nextProviderId = 0;
    $.debugIsInInheritedProviderUpdate = false;
    $.debugIsInInheritedProviderCreate = false;
    $._pendingDecodes = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("BytesLoader"), C.findType("Completer<~>"));
    $._cachedUseHtmlRenderObject = null;
    $.RenderVectorGraphic__liveRasterCache = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("RasterKey"), C.findType("RasterData"));
    $._VectorGraphicWidgetState__livePictureCache = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("_PictureKey"), type$._PictureData);
    $._VectorGraphicWidgetState__pendingPictures = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("_PictureKey"), C.findType("Future<_PictureData>"));
    $._unhandledElements = C.LinkedHashSet_LinkedHashSet$_literal(["title", "desc"], type$.String);
    $.SvgParser__kTextSizeMap = C.LinkedHashMap_LinkedHashMap$_literal(["xx-small", 10, "x-small", 12, "small", 14, "medium", 18, "large", 22, "x-large", 26, "xx-large", 32], type$.String, type$.double);
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "EventRegistry_builders", "$get$EventRegistry_builders", () => C.LinkedHashMap_LinkedHashMap$_literal(["questionnaire", new A.EventRegistry_builders_closure(), "record_status", new A.EventRegistry_builders_closure0(), "error", new A.EventRegistry_builders_closure1()], type$.String, C.findType("Widget(BuildContext,@,ChatCustomMessage,~(),bool,ChatTheme)")));
    _lazyFinal($, "shadowColor", "$get$shadowColor", () => D.Color_vnR.withValues$1$alpha(0.08));
    _lazyFinal($, "_rnU8", "$get$_rnU8", () => C.NativeUint8List_NativeUint8List$fromList(C._setArrayType([13, 10], type$.JSArray_int)));
    _lazyFinal($, "_random", "$get$_random", () => C.Random_Random(null));
    _lazyFinal($, "_err", "$get$_err", () => C.UnsupportedError$("MultipartFile is only supported where dart:io is available."));
    _lazyFinal($, "compactedCompositeSymbolSpacings", "$get$compactedCompositeSymbolSpacings", () => C.LinkedHashMap_LinkedHashMap$_literal(["\u2237", A.MeasurementExtOnNum_get_mu(-0.9), "\u2254", A.MeasurementExtOnNum_get_mu(-1.2), "\u2255", A.MeasurementExtOnNum_get_mu(-3.2), "\u2239", A.MeasurementExtOnNum_get_mu(-3.2), "\u27e6", A.MeasurementExtOnNum_get_mu(-3.2), "\u27e7", A.MeasurementExtOnNum_get_mu(-3.2), "\u2983", A.MeasurementExtOnNum_get_mu(-3.2), "\u2984", A.MeasurementExtOnNum_get_mu(-3.2)], type$.String, type$.Measurement));
    _lazyFinal($, "textFontMetrics", "$get$textFontMetrics", () => {
      var t1 = A.FontMetrics_fromMap(B.Map_1bfGT.map$2$1(0, new A.textFontMetrics_closure(), type$.String, type$.double));
      t1.toString;
      return t1;
    });
    _lazyFinal($, "scriptFontMetrics", "$get$scriptFontMetrics", () => {
      var t1 = A.FontMetrics_fromMap(B.Map_1bfGT.map$2$1(0, new A.scriptFontMetrics_closure(), type$.String, type$.double));
      t1.toString;
      return t1;
    });
    _lazyFinal($, "scriptscriptFontMetrics", "$get$scriptscriptFontMetrics", () => {
      var t1 = A.FontMetrics_fromMap(B.Map_1bfGT.map$2$1(0, new A.scriptscriptFontMetrics_closure(), type$.String, type$.double));
      t1.toString;
      return t1;
    });
    _lazyFinal($, "allBlocks", "$get$allBlocks", () => {
      var t1 = B.Map_h25Ly.get$entries(B.Map_h25Ly);
      return t1.expand$1$1(t1, new A.allBlocks_closure(), type$.List_int).toList$1$growable(0, false);
    });
    _lazyFinal($, "_environmentsEntries", "$get$_environmentsEntries", () => {
      var t1 = C.LinkedHashMap_LinkedHashMap$of(B.Map_x0wTk, type$.List_String, type$.EnvSpec);
      t1.addAll$1(0, B.Map_2fcbp);
      return t1;
    });
    _lazyFinal($, "functions", "$get$functions", () => {
      var t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FunctionSpec_GreenNode);
      A.RegisterFunctionExt_registerFunctions(t1, B.Map_yHnJl);
      A.RegisterFunctionExt_registerFunctions(t1, B.Map_V9azN);
      A.RegisterFunctionExt_registerFunctions(t1, B.Map_fe18k);
      return t1;
    });
    _lazyFinal($, "_delimiterSymbols", "$get$_delimiterSymbols", () => D.JSArray_methods.map$1$1(B.List_U02, new A._delimiterSymbols_closure(), type$.TexSymbolConfig).toList$1$growable(0, false));
    _lazyFinal($, "controlWordWhitespaceRegex", "$get$controlWordWhitespaceRegex", () => C.RegExp_RegExp("^(\\\\[a-zA-Z@]+)[ \r\n\t]*$", true, false, false, false));
    _lazyFinal($, "combiningDiacriticalMarksEndRegex", "$get$combiningDiacriticalMarksEndRegex", () => C.RegExp_RegExp("[\u0300-\u036f]+$", true, false, false, false));
    _lazyFinal($, "Lexer_tokenRegex", "$get$Lexer_tokenRegex", () => C.RegExp_RegExp("([ \r\n\t]+)|([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff][\u0300-\u036f]*|[\ud800-\udbff][\udc00-\udfff][\u0300-\u036f]*|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\operatorname\\*|\\\\[a-zA-Z@]+[ \r\n\t]*|\\\\[^\ud800-\udfff])", true, false, true, false));
    _lazyFinal($, "MacroExpansion__strippedRegex", "$get$MacroExpansion__strippedRegex", () => C.RegExp_RegExp("##", true, false, true, false));
    _lazyFinal($, "latexRaiseA", "$get$latexRaiseA", () => "0.20499900000000004em");
    _lazyFinal($, "builtinMacros", "$get$builtinMacros", () => {
      var _s15_ = "\\textregistered",
        _s6_ = "\\relax",
        _s9_ = "\\dblcolon",
        _s8_ = "\\eqcolon",
        _s9_0 = "\\coloneqq",
        _s9_1 = "\\eqqcolon",
        _s10_ = "\\Downarrow",
        _s8_0 = "\\Uparrow",
        _s10_0 = "\\mathbb{N}",
        _s10_1 = "\\mathbb{R}",
        _s10_2 = "\\mathbb{C}",
        _s15_0 = "\\leftrightarrow",
        _s15_1 = "\\Leftrightarrow",
        _s10_3 = "\\Leftarrow",
        _s11_ = "\\Rightarrow",
        _s33_ = "}{\\scriptstyle A}\\kern-.15em\\TeX}",
        t1 = A.MacroDefinition$(new A.builtinMacros_closure(), false),
        t2 = A.MacroDefinition$(new A.builtinMacros_closure0(), false),
        t3 = A.MacroDefinition$(new A.builtinMacros_closure1(), false),
        t4 = A.MacroDefinition$(new A.builtinMacros_closure2(), false),
        t5 = A.MacroDefinition$(new A.builtinMacros_closure3(), false),
        t6 = A.MacroDefinition$fromString("\\@ifnextchar *{\\@firstoftwo{#1}}"),
        t7 = A.MacroDefinition$(new A.builtinMacros_closure4(), false),
        t8 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure5()),
        t9 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure6()),
        t10 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure7()),
        t11 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure8()),
        t12 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure9()),
        t13 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure10()),
        t14 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure11()),
        t15 = A.MacroDefinition$fromString("{"),
        t16 = A.MacroDefinition$fromString("}"),
        t17 = A.MacroDefinition$fromString("`"),
        t18 = A.MacroDefinition$fromString("'"),
        t19 = A.MacroDefinition$fromString("\\mathscr{B}"),
        t20 = A.MacroDefinition$fromString("\\mathscr{E}"),
        t21 = A.MacroDefinition$fromString("\\mathscr{F}"),
        t22 = A.MacroDefinition$fromString("\\mathscr{H}"),
        t23 = A.MacroDefinition$fromString("\\mathscr{I}"),
        t24 = A.MacroDefinition$fromString("\\mathscr{L}"),
        t25 = A.MacroDefinition$fromString("\\mathscr{M}"),
        t26 = A.MacroDefinition$fromString("\\mathscr{R}"),
        t27 = A.MacroDefinition$fromString("\\mathfrak{C}"),
        t28 = A.MacroDefinition$fromString("\\mathfrak{H}"),
        t29 = A.MacroDefinition$fromString("\\mathfrak{Z}"),
        t30 = A.MacroDefinition$fromString("\\Bbb{k}"),
        t31 = A.MacroDefinition$fromString("\\cdotp"),
        t32 = A.MacroDefinition$fromString("\\neq"),
        t33 = A.MacroDefinition$fromString("\\neq"),
        t34 = A.MacroDefinition$fromString("\\notin"),
        t35 = A.MacroDefinition$fromString("\\perp"),
        t36 = A.MacroDefinition$fromString("\\mathclose{!\\mkern-0.8mu!}"),
        t37 = A.MacroDefinition$fromString("\\notni"),
        t38 = A.MacroDefinition$fromString("\\ulcorner"),
        t39 = A.MacroDefinition$fromString("\\urcorner"),
        t40 = A.MacroDefinition$fromString("\\llcorner"),
        t41 = A.MacroDefinition$fromString("\\lrcorner"),
        t42 = A.MacroDefinition$fromString("\\copyright"),
        t43 = A.MacroDefinition$fromString(_s15_),
        t44 = A.MacroDefinition$fromString(_s15_),
        t45 = A.MacroDefinition$fromString("\\@ulcorner"),
        t46 = A.MacroDefinition$fromString("\\@urcorner"),
        t47 = A.MacroDefinition$fromString("\\@llcorner"),
        t48 = A.MacroDefinition$fromString("\\@lrcorner"),
        t49 = A.MacroDefinition$fromString("\\mathord{\\varvdots\\rule{0pt}{15pt}}"),
        t50 = A.MacroDefinition$fromString("\\vdots"),
        t51 = A.MacroDefinition$fromString("\\mathit{\\Gamma}"),
        t52 = A.MacroDefinition$fromString("\\mathit{\\Delta}"),
        t53 = A.MacroDefinition$fromString("\\mathit{\\Theta}"),
        t54 = A.MacroDefinition$fromString("\\mathit{\\Lambda}"),
        t55 = A.MacroDefinition$fromString("\\mathit{\\Xi}"),
        t56 = A.MacroDefinition$fromString("\\mathit{\\Pi}"),
        t57 = A.MacroDefinition$fromString("\\mathit{\\Sigma}"),
        t58 = A.MacroDefinition$fromString("\\mathit{\\Upsilon}"),
        t59 = A.MacroDefinition$fromString("\\mathit{\\Phi}"),
        t60 = A.MacroDefinition$fromString("\\mathit{\\Psi}"),
        t61 = A.MacroDefinition$fromString("\\mathit{\\Omega}"),
        t62 = A.MacroDefinition$fromString("\\begin{subarray}{c}#1\\end{subarray}"),
        t63 = A.MacroDefinition$fromString("\\fbox{$\\displaystyle{#1}$}"),
        t64 = A.MacroDefinition$fromString("\\DOTSB\\;\\Longleftrightarrow\\;"),
        t65 = A.MacroDefinition$fromString("\\DOTSB\\;\\Longrightarrow\\;"),
        t66 = A.MacroDefinition$fromString("\\DOTSB\\;\\Longleftarrow\\;"),
        t67 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure12()),
        t68 = A.MacroDefinition$fromString("\\ldots"),
        t69 = A.MacroDefinition$fromString("\\ldots"),
        t70 = A.MacroDefinition$fromString("\\@cdots"),
        t71 = A.MacroDefinition$fromString("\\cdots"),
        t72 = A.MacroDefinition$fromString("\\cdots"),
        t73 = A.MacroDefinition$fromString("\\!\\cdots"),
        t74 = A.MacroDefinition$fromString("\\ldots\\,"),
        t75 = A.MacroDefinition$fromString(_s6_),
        t76 = A.MacroDefinition$fromString(_s6_),
        t77 = A.MacroDefinition$fromString(_s6_),
        t78 = A.MacroDefinition$fromString("\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"),
        t79 = A.MacroDefinition$fromString("\\tmspace+{3mu}{.1667em}"),
        t80 = A.MacroDefinition$fromString("\\,"),
        t81 = A.MacroDefinition$fromString("\\mskip{4mu}"),
        t82 = A.MacroDefinition$fromString("\\tmspace+{4mu}{.2222em}"),
        t83 = A.MacroDefinition$fromString("\\:"),
        t84 = A.MacroDefinition$fromString("\\tmspace+{5mu}{.2777em}"),
        t85 = A.MacroDefinition$fromString("\\;"),
        t86 = A.MacroDefinition$fromString("\\tmspace-{3mu}{.1667em}"),
        t87 = A.MacroDefinition$fromString("\\!"),
        t88 = A.MacroDefinition$fromString("\\tmspace-{4mu}{.2222em}"),
        t89 = A.MacroDefinition$fromString("\\tmspace-{5mu}{.277em}"),
        t90 = A.MacroDefinition$fromString("\\kern.5em "),
        t91 = A.MacroDefinition$fromString("\\hskip.5em\\relax"),
        t92 = A.MacroDefinition$fromString("\\hskip1em\\relax"),
        t93 = A.MacroDefinition$fromString("\\hskip2em\\relax"),
        t94 = A.MacroDefinition$fromString("\\@ifstar\\tag@literal\\tag@paren"),
        t95 = A.MacroDefinition$fromString("\\tag@literal{({#1})}"),
        t96 = A.MacroDefinition$fromCtxString(new A.builtinMacros_closure13()),
        t97 = A.MacroDefinition$fromString("\\mskip5mu\\mathbin{\\rm mod}\\mskip5mu"),
        t98 = A.MacroDefinition$fromString("\\allowbreak\\mkern8mu(#1)"),
        t99 = A.MacroDefinition$fromString("\\pod{{\\rm mod}\\mkern6mu#1}"),
        t100 = A.MacroDefinition$fromString("\\allowbreak\\mkern18mu{\\rm mod}\\,\\,#1"),
        t101 = A.MacroDefinition$fromString("\\newline"),
        t102 = A.MacroDefinition$fromString("\\textrm{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}"),
        t103 = $.$get$latexRaiseA();
      return C.LinkedHashMap_LinkedHashMap$_literal(["\\noexpand", t1, "\\expandafter", t2, "\\@firstoftwo", t3, "\\@secondoftwo", t4, "\\@ifnextchar", t5, "\\@ifstar", t6, "\\TextOrMath", t7, "\\char", t8, "\\newcommand", t9, "\\renewcommand", t10, "\\providecommand", t11, "\\message", t12, "\\errmessage", t13, "\\show", t14, "\\bgroup", t15, "\\egroup", t16, "\\lq", t17, "\\rq", t18, "\u212c", t19, "\u2130", t20, "\u2131", t21, "\u210b", t22, "\u2110", t23, "\u2112", t24, "\u2133", t25, "\u211b", t26, "\u212d", t27, "\u210c", t28, "\u2128", t29, "\\Bbbk", t30, "\xb7", t31, "\\ne", t32, "\u2260", t33, "\u2209", t34, "\u27c2", t35, "\u203c", t36, "\u220c", t37, "\u231c", t38, "\u231d", t39, "\u231e", t40, "\u231f", t41, "\xa9", t42, "\xae", t43, "\ufe0f", t44, "\\ulcorner", t45, "\\urcorner", t46, "\\llcorner", t47, "\\lrcorner", t48, "\\vdots", t49, "\u22ee", t50, "\\varGamma", t51, "\\varDelta", t52, "\\varTheta", t53, "\\varLambda", t54, "\\varXi", t55, "\\varPi", t56, "\\varSigma", t57, "\\varUpsilon", t58, "\\varPhi", t59, "\\varPsi", t60, "\\varOmega", t61, "\\substack", t62, "\\boxed", t63, "\\iff", t64, "\\implies", t65, "\\impliedby", t66, "\\dots", t67, "\\dotso", t68, "\\dotsc", t69, "\\cdots", t70, "\\dotsb", t71, "\\dotsm", t72, "\\dotsi", t73, "\\dotsx", t74, "\\DOTSI", t75, "\\DOTSB", t76, "\\DOTSX", t77, "\\tmspace", t78, "\\,", t79, "\\thinspace", t80, "\\>", t81, "\\:", t82, "\\medspace", t83, "\\;", t84, "\\thickspace", t85, "\\!", t86, "\\negthinspace", t87, "\\negmedspace", t88, "\\negthickspace", t89, "\\enspace", t90, "\\enskip", t91, "\\quad", t92, "\\qquad", t93, "\\tag", t94, "\\tag@paren", t95, "\\tag@literal", t96, "\\bmod", t97, "\\pod", t98, "\\pmod", t99, "\\mod", t100, "\\\\", t101, "\\TeX", t102, "\\LaTeX", A.MacroDefinition$fromString("\\textrm{L\\kern-.36em\\raisebox{" + t103 + _s33_), "\\KaTeX", A.MacroDefinition$fromString("\\textrm{K\\kern-.17em\\raisebox{" + t103 + _s33_), "\\hspace", A.MacroDefinition$fromString("\\hskip #1\\relax"), "\\ordinarycolon", A.MacroDefinition$fromString(":"), "\\vcentcolon", A.MacroDefinition$fromString("\\mathrel{\\mathop\\ordinarycolon}"), "\u2237", A.MacroDefinition$fromString(_s9_), "\u2239", A.MacroDefinition$fromString(_s8_), "\u2254", A.MacroDefinition$fromString(_s9_0), "\u2255", A.MacroDefinition$fromString(_s9_1), "\\ratio", A.MacroDefinition$fromString("\\vcentcolon"), "\\coloncolon", A.MacroDefinition$fromString(_s9_), "\\colonequals", A.MacroDefinition$fromString(_s9_0), "\\equalscolon", A.MacroDefinition$fromString(_s9_1), "\\minuscolon", A.MacroDefinition$fromString(_s8_), "\\limsup", A.MacroDefinition$fromString("\\DOTSB\\operatorname*{lim\\,sup}"), "\\liminf", A.MacroDefinition$fromString("\\DOTSB\\operatorname*{lim\\,inf}"), "\\darr", A.MacroDefinition$fromString("\\downarrow"), "\\dArr", A.MacroDefinition$fromString(_s10_), "\\Darr", A.MacroDefinition$fromString(_s10_), "\\lang", A.MacroDefinition$fromString("\\langle"), "\\rang", A.MacroDefinition$fromString("\\rangle"), "\\uarr", A.MacroDefinition$fromString("\\uparrow"), "\\uArr", A.MacroDefinition$fromString(_s8_0), "\\Uarr", A.MacroDefinition$fromString(_s8_0), "\\N", A.MacroDefinition$fromString(_s10_0), "\\R", A.MacroDefinition$fromString(_s10_1), "\\Z", A.MacroDefinition$fromString("\\mathbb{Z}"), "\\alef", A.MacroDefinition$fromString("\\aleph"), "\\alefsym", A.MacroDefinition$fromString("\\aleph"), "\\Alpha", A.MacroDefinition$fromString("\\mathrm{A}"), "\\Beta", A.MacroDefinition$fromString("\\mathrm{B}"), "\\bull", A.MacroDefinition$fromString("\\bullet"), "\\Chi", A.MacroDefinition$fromString("\\mathrm{X}"), "\\clubs", A.MacroDefinition$fromString("\\clubsuit"), "\\cnums", A.MacroDefinition$fromString(_s10_2), "\\Complex", A.MacroDefinition$fromString(_s10_2), "\\Dagger", A.MacroDefinition$fromString("\\ddagger"), "\\diamonds", A.MacroDefinition$fromString("\\diamondsuit"), "\\empty", A.MacroDefinition$fromString("\\emptyset"), "\\Epsilon", A.MacroDefinition$fromString("\\mathrm{E}"), "\\Eta", A.MacroDefinition$fromString("\\mathrm{H}"), "\\exist", A.MacroDefinition$fromString("\\exists"), "\\harr", A.MacroDefinition$fromString(_s15_0), "\\hArr", A.MacroDefinition$fromString(_s15_1), "\\Harr", A.MacroDefinition$fromString(_s15_1), "\\hearts", A.MacroDefinition$fromString("\\heartsuit"), "\\image", A.MacroDefinition$fromString("\\Im"), "\\infin", A.MacroDefinition$fromString("\\infty"), "\\Iota", A.MacroDefinition$fromString("\\mathrm{I}"), "\\isin", A.MacroDefinition$fromString("\\in"), "\\Kappa", A.MacroDefinition$fromString("\\mathrm{K}"), "\\larr", A.MacroDefinition$fromString("\\leftarrow"), "\\lArr", A.MacroDefinition$fromString(_s10_3), "\\Larr", A.MacroDefinition$fromString(_s10_3), "\\lrarr", A.MacroDefinition$fromString(_s15_0), "\\lrArr", A.MacroDefinition$fromString(_s15_1), "\\Lrarr", A.MacroDefinition$fromString(_s15_1), "\\Mu", A.MacroDefinition$fromString("\\mathrm{M}"), "\\natnums", A.MacroDefinition$fromString(_s10_0), "\\Nu", A.MacroDefinition$fromString("\\mathrm{N}"), "\\Omicron", A.MacroDefinition$fromString("\\mathrm{O}"), "\\plusmn", A.MacroDefinition$fromString("\\pm"), "\\rarr", A.MacroDefinition$fromString("\\rightarrow"), "\\rArr", A.MacroDefinition$fromString(_s11_), "\\Rarr", A.MacroDefinition$fromString(_s11_), "\\real", A.MacroDefinition$fromString("\\Re"), "\\reals", A.MacroDefinition$fromString(_s10_1), "\\Reals", A.MacroDefinition$fromString(_s10_1), "\\Rho", A.MacroDefinition$fromString("\\mathrm{P}"), "\\sdot", A.MacroDefinition$fromString("\\cdot"), "\\sect", A.MacroDefinition$fromString("\\S"), "\\spades", A.MacroDefinition$fromString("\\spadesuit"), "\\sub", A.MacroDefinition$fromString("\\subset"), "\\sube", A.MacroDefinition$fromString("\\subseteq"), "\\supe", A.MacroDefinition$fromString("\\supseteq"), "\\Tau", A.MacroDefinition$fromString("\\mathrm{T}"), "\\thetasym", A.MacroDefinition$fromString("\\vartheta"), "\\weierp", A.MacroDefinition$fromString("\\wp"), "\\Zeta", A.MacroDefinition$fromString("\\mathrm{Z}"), "\\argmin", A.MacroDefinition$fromString("\\DOTSB\\operatorname*{arg\\,min}"), "\\argmax", A.MacroDefinition$fromString("\\DOTSB\\operatorname*{arg\\,max}"), "\\plim", A.MacroDefinition$fromString("\\DOTSB\\operatorname*{plim}\\limits"), "\\bra", A.MacroDefinition$fromString("\\mathinner{\\langle{#1}|}"), "\\ket", A.MacroDefinition$fromString("\\mathinner{|{#1}\\rangle}"), "\\braket", A.MacroDefinition$fromString("\\mathinner{\\langle{#1}\\rangle}"), "\\Bra", A.MacroDefinition$fromString("\\left\\langle#1\\right|"), "\\Ket", A.MacroDefinition$fromString("\\left|#1\\right\\rangle"), "\\blue", A.MacroDefinition$fromString("\\textcolor{##6495ed}{#1}"), "\\orange", A.MacroDefinition$fromString("\\textcolor{##ffa500}{#1}"), "\\pink", A.MacroDefinition$fromString("\\textcolor{##ff00af}{#1}"), "\\red", A.MacroDefinition$fromString("\\textcolor{##df0030}{#1}"), "\\green", A.MacroDefinition$fromString("\\textcolor{##28ae7b}{#1}"), "\\gray", A.MacroDefinition$fromString("\\textcolor{gray}{#1}"), "\\purple", A.MacroDefinition$fromString("\\textcolor{##9d38bd}{#1}"), "\\blueA", A.MacroDefinition$fromString("\\textcolor{##ccfaff}{#1}"), "\\blueB", A.MacroDefinition$fromString("\\textcolor{##80f6ff}{#1}"), "\\blueC", A.MacroDefinition$fromString("\\textcolor{##63d9ea}{#1}"), "\\blueD", A.MacroDefinition$fromString("\\textcolor{##11accd}{#1}"), "\\blueE", A.MacroDefinition$fromString("\\textcolor{##0c7f99}{#1}"), "\\tealA", A.MacroDefinition$fromString("\\textcolor{##94fff5}{#1}"), "\\tealB", A.MacroDefinition$fromString("\\textcolor{##26edd5}{#1}"), "\\tealC", A.MacroDefinition$fromString("\\textcolor{##01d1c1}{#1}"), "\\tealD", A.MacroDefinition$fromString("\\textcolor{##01a995}{#1}"), "\\tealE", A.MacroDefinition$fromString("\\textcolor{##208170}{#1}"), "\\greenA", A.MacroDefinition$fromString("\\textcolor{##b6ffb0}{#1}"), "\\greenB", A.MacroDefinition$fromString("\\textcolor{##8af281}{#1}"), "\\greenC", A.MacroDefinition$fromString("\\textcolor{##74cf70}{#1}"), "\\greenD", A.MacroDefinition$fromString("\\textcolor{##1fab54}{#1}"), "\\greenE", A.MacroDefinition$fromString("\\textcolor{##0d923f}{#1}"), "\\goldA", A.MacroDefinition$fromString("\\textcolor{##ffd0a9}{#1}"), "\\goldB", A.MacroDefinition$fromString("\\textcolor{##ffbb71}{#1}"), "\\goldC", A.MacroDefinition$fromString("\\textcolor{##ff9c39}{#1}"), "\\goldD", A.MacroDefinition$fromString("\\textcolor{##e07d10}{#1}"), "\\goldE", A.MacroDefinition$fromString("\\textcolor{##a75a05}{#1}"), "\\redA", A.MacroDefinition$fromString("\\textcolor{##fca9a9}{#1}"), "\\redB", A.MacroDefinition$fromString("\\textcolor{##ff8482}{#1}"), "\\redC", A.MacroDefinition$fromString("\\textcolor{##f9685d}{#1}"), "\\redD", A.MacroDefinition$fromString("\\textcolor{##e84d39}{#1}"), "\\redE", A.MacroDefinition$fromString("\\textcolor{##bc2612}{#1}"), "\\maroonA", A.MacroDefinition$fromString("\\textcolor{##ffbde0}{#1}"), "\\maroonB", A.MacroDefinition$fromString("\\textcolor{##ff92c6}{#1}"), "\\maroonC", A.MacroDefinition$fromString("\\textcolor{##ed5fa6}{#1}"), "\\maroonD", A.MacroDefinition$fromString("\\textcolor{##ca337c}{#1}"), "\\maroonE", A.MacroDefinition$fromString("\\textcolor{##9e034e}{#1}"), "\\purpleA", A.MacroDefinition$fromString("\\textcolor{##ddd7ff}{#1}"), "\\purpleB", A.MacroDefinition$fromString("\\textcolor{##c6b9fc}{#1}"), "\\purpleC", A.MacroDefinition$fromString("\\textcolor{##aa87ff}{#1}"), "\\purpleD", A.MacroDefinition$fromString("\\textcolor{##7854ab}{#1}"), "\\purpleE", A.MacroDefinition$fromString("\\textcolor{##543b78}{#1}"), "\\mintA", A.MacroDefinition$fromString("\\textcolor{##f5f9e8}{#1}"), "\\mintB", A.MacroDefinition$fromString("\\textcolor{##edf2df}{#1}"), "\\mintC", A.MacroDefinition$fromString("\\textcolor{##e0e5cc}{#1}"), "\\grayA", A.MacroDefinition$fromString("\\textcolor{##f6f7f7}{#1}"), "\\grayB", A.MacroDefinition$fromString("\\textcolor{##f0f1f2}{#1}"), "\\grayC", A.MacroDefinition$fromString("\\textcolor{##e3e5e6}{#1}"), "\\grayD", A.MacroDefinition$fromString("\\textcolor{##d6d8da}{#1}"), "\\grayE", A.MacroDefinition$fromString("\\textcolor{##babec2}{#1}"), "\\grayF", A.MacroDefinition$fromString("\\textcolor{##888d93}{#1}"), "\\grayG", A.MacroDefinition$fromString("\\textcolor{##626569}{#1}"), "\\grayH", A.MacroDefinition$fromString("\\textcolor{##3b3e40}{#1}"), "\\grayI", A.MacroDefinition$fromString("\\textcolor{##21242c}{#1}"), "\\kaBlue", A.MacroDefinition$fromString("\\textcolor{##314453}{#1}"), "\\kaGreen", A.MacroDefinition$fromString("\\textcolor{##71B307}{#1}")], type$.String, type$.MacroDefinition);
    });
    _lazyFinal($, "TexParser__parseColorRegex1", "$get$TexParser__parseColorRegex1", () => C.RegExp_RegExp("^#([a-f0-9])([a-f0-9])([a-f0-9])$", false, false, false, false));
    _lazyFinal($, "TexParser__parseColorRegex2", "$get$TexParser__parseColorRegex2", () => C.RegExp_RegExp("^#?([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$", false, false, false, false));
    _lazyFinal($, "TexParser__parseColorRegex3", "$get$TexParser__parseColorRegex3", () => C.RegExp_RegExp("^([a-z]+)$", false, false, false, false));
    _lazyFinal($, "TexParser__parseSizeRegex", "$get$TexParser__parseSizeRegex", () => C.RegExp_RegExp("^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$", true, false, false, false));
    _lazyFinal($, "TexParser__parseMeasurementRegex", "$get$TexParser__parseMeasurementRegex", () => C.RegExp_RegExp("([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})", true, false, false, false));
    _lazyFinal($, "TexParser__parseVerbRegex", "$get$TexParser__parseVerbRegex", () => C.RegExp_RegExp("^\\\\verb[^a-zA-Z]", true, false, false, false));
    _lazyFinal($, "_alignmentToString", "$get$_alignmentToString", () => C.LinkedHashMap_LinkedHashMap$_literal([D.Alignment_m1_m1, "xMinYMin", D.Alignment_0_m1, "xMidYMin", B.Alignment_1_m1, "xMaxYMin", D.Alignment_m1_0, "xMinYMid", D.Alignment_0_0, "xMidYMid", D.Alignment_1_0, "xMaxYMid", B.Alignment_m1_1, "xMinYMax", D.Alignment_0_1, "xMidYMax", F.Alignment_1_1, "xMaxYMax"], C.findType("Alignment"), type$.String));
    _lazyFinal($, "svg", "$get$svg", () => {
      var t1 = type$.Object;
      return new A.Svg(new A.Cache0(C.LinkedHashMap_LinkedHashMap$_empty(t1, C.findType("Future<ByteData>")), C.LinkedHashMap_LinkedHashMap$_empty(t1, type$.ByteData)));
    });
    _lazyFinal($, "MarkdownComponent_inlineComponents", "$get$MarkdownComponent_inlineComponents", () => C._setArrayType([new A.ATagMd(), new A.ImageMd(), A.TableMd$(), new A.StrikeMd(), new A.BoldMd(), new A.ItalicMd(), new A.UnderLineMd(), new A.LatexMath(), A.LatexMathMultiLine$(), new A.HighlightedText(), new A.SourceTag()], type$.JSArray_MarkdownComponent));
    _lazyFinal($, "exifImageTags", "$get$exifImageTags", () => {
      var _null = null,
        _s8_ = "ISOSpeed";
      return C.LinkedHashMap_LinkedHashMap$_literal([11, A.ExifTag$("ProcessingSoftware", B.IfdValueType_2, _null), 254, A.ExifTag$("SubfileType", B.IfdValueType_4, 1), 255, A.ExifTag$("OldSubfileType", B.IfdValueType_4, 1), 256, A.ExifTag$("ImageWidth", B.IfdValueType_4, 1), 257, A.ExifTag$("ImageLength", B.IfdValueType_4, 1), 258, A.ExifTag$("BitsPerSample", B.IfdValueType_3, 1), 259, A.ExifTag$("Compression", B.IfdValueType_3, 1), 262, A.ExifTag$("PhotometricInterpretation", B.IfdValueType_3, 1), 263, A.ExifTag$("Thresholding", B.IfdValueType_3, 1), 264, A.ExifTag$("CellWidth", B.IfdValueType_3, 1), 265, A.ExifTag$("CellLength", B.IfdValueType_3, 1), 266, A.ExifTag$("FillOrder", B.IfdValueType_3, 1), 269, A.ExifTag$("DocumentName", B.IfdValueType_2, _null), 270, A.ExifTag$("ImageDescription", B.IfdValueType_2, _null), 271, A.ExifTag$("Make", B.IfdValueType_2, _null), 272, A.ExifTag$("Model", B.IfdValueType_2, _null), 273, A.ExifTag$("StripOffsets", B.IfdValueType_4, _null), 274, A.ExifTag$("Orientation", B.IfdValueType_3, 1), 277, A.ExifTag$("SamplesPerPixel", B.IfdValueType_3, 1), 278, A.ExifTag$("RowsPerStrip", B.IfdValueType_4, 1), 279, A.ExifTag$("StripByteCounts", B.IfdValueType_4, 1), 280, A.ExifTag$("MinSampleValue", B.IfdValueType_3, 1), 281, A.ExifTag$("MaxSampleValue", B.IfdValueType_3, 1), 282, A.ExifTag$("XResolution", B.IfdValueType_5, 1), 283, A.ExifTag$("YResolution", B.IfdValueType_5, 1), 284, A.ExifTag$("PlanarConfiguration", B.IfdValueType_3, 1), 285, A.ExifTag$("PageName", B.IfdValueType_2, _null), 286, A.ExifTag$("XPosition", B.IfdValueType_5, 1), 287, A.ExifTag$("YPosition", B.IfdValueType_5, 1), 290, A.ExifTag$("GrayResponseUnit", B.IfdValueType_3, 1), 291, A.ExifTag$("GrayResponseCurve", B.IfdValueType_0, _null), 292, A.ExifTag$("T4Options", B.IfdValueType_0, _null), 293, A.ExifTag$("T6Options", B.IfdValueType_0, _null), 296, A.ExifTag$("ResolutionUnit", B.IfdValueType_3, 1), 297, A.ExifTag$("PageNumber", B.IfdValueType_3, 2), 300, A.ExifTag$("ColorResponseUnit", B.IfdValueType_0, _null), 301, A.ExifTag$("TransferFunction", B.IfdValueType_3, 768), 305, A.ExifTag$("Software", B.IfdValueType_2, _null), 306, A.ExifTag$("DateTime", B.IfdValueType_2, _null), 315, A.ExifTag$("Artist", B.IfdValueType_2, _null), 316, A.ExifTag$("HostComputer", B.IfdValueType_2, _null), 317, A.ExifTag$("Predictor", B.IfdValueType_3, 1), 318, A.ExifTag$("WhitePoint", B.IfdValueType_5, 2), 319, A.ExifTag$("PrimaryChromaticities", B.IfdValueType_5, 6), 320, A.ExifTag$("ColorMap", B.IfdValueType_3, _null), 321, A.ExifTag$("HalftoneHints", B.IfdValueType_3, 2), 322, A.ExifTag$("TileWidth", B.IfdValueType_4, 1), 323, A.ExifTag$("TileLength", B.IfdValueType_4, 1), 324, A.ExifTag$("TileOffsets", B.IfdValueType_4, _null), 325, A.ExifTag$("TileByteCounts", B.IfdValueType_0, _null), 326, A.ExifTag$("BadFaxLines", B.IfdValueType_0, _null), 327, A.ExifTag$("CleanFaxData", B.IfdValueType_0, _null), 328, A.ExifTag$("ConsecutiveBadFaxLines", B.IfdValueType_0, _null), 332, A.ExifTag$("InkSet", B.IfdValueType_0, _null), 333, A.ExifTag$("InkNames", B.IfdValueType_0, _null), 334, A.ExifTag$("NumberofInks", B.IfdValueType_0, _null), 336, A.ExifTag$("DotRange", B.IfdValueType_0, _null), 337, A.ExifTag$("TargetPrinter", B.IfdValueType_2, _null), 338, A.ExifTag$("ExtraSamples", B.IfdValueType_0, _null), 339, A.ExifTag$("SampleFormat", B.IfdValueType_3, 1), 340, A.ExifTag$("SMinSampleValue", B.IfdValueType_0, _null), 341, A.ExifTag$("SMaxSampleValue", B.IfdValueType_0, _null), 342, A.ExifTag$("TransferRange", B.IfdValueType_0, _null), 343, A.ExifTag$("ClipPath", B.IfdValueType_0, _null), 512, A.ExifTag$("JPEGProc", B.IfdValueType_0, _null), 513, A.ExifTag$("JPEGInterchangeFormat", B.IfdValueType_0, _null), 514, A.ExifTag$("JPEGInterchangeFormatLength", B.IfdValueType_0, _null), 529, A.ExifTag$("YCbCrCoefficients", B.IfdValueType_5, 3), 530, A.ExifTag$("YCbCrSubSampling", B.IfdValueType_3, 1), 531, A.ExifTag$("YCbCrPositioning", B.IfdValueType_3, 1), 532, A.ExifTag$("ReferenceBlackWhite", B.IfdValueType_5, 6), 700, A.ExifTag$("ApplicationNotes", B.IfdValueType_3, 1), 18246, A.ExifTag$("Rating", B.IfdValueType_3, 1), 33421, A.ExifTag$("CFARepeatPatternDim", B.IfdValueType_0, _null), 33422, A.ExifTag$("CFAPattern", B.IfdValueType_0, _null), 33423, A.ExifTag$("BatteryLevel", B.IfdValueType_0, _null), 33432, A.ExifTag$("Copyright", B.IfdValueType_2, _null), 33434, A.ExifTag$("ExposureTime", B.IfdValueType_5, 1), 33437, A.ExifTag$("FNumber", B.IfdValueType_5, _null), 33723, A.ExifTag$("IPTC-NAA", B.IfdValueType_4, 1), 34665, A.ExifTag$("ExifOffset", B.IfdValueType_0, _null), 34675, A.ExifTag$("InterColorProfile", B.IfdValueType_0, _null), 34850, A.ExifTag$("ExposureProgram", B.IfdValueType_3, 1), 34852, A.ExifTag$("SpectralSensitivity", B.IfdValueType_2, _null), 34853, A.ExifTag$("GPSOffset", B.IfdValueType_0, _null), 34855, A.ExifTag$(_s8_, B.IfdValueType_4, 1), 34856, A.ExifTag$("OECF", B.IfdValueType_0, _null), 34864, A.ExifTag$("SensitivityType", B.IfdValueType_3, 1), 34866, A.ExifTag$("RecommendedExposureIndex", B.IfdValueType_4, 1), 34867, A.ExifTag$(_s8_, B.IfdValueType_4, 1), 36864, A.ExifTag$("ExifVersion", B.IfdValueType_7, _null), 36867, A.ExifTag$("DateTimeOriginal", B.IfdValueType_2, _null), 36868, A.ExifTag$("DateTimeDigitized", B.IfdValueType_2, _null), 36880, A.ExifTag$("OffsetTime", B.IfdValueType_2, _null), 36881, A.ExifTag$("OffsetTimeOriginal", B.IfdValueType_2, _null), 36882, A.ExifTag$("OffsetTimeDigitized", B.IfdValueType_2, _null), 37121, A.ExifTag$("ComponentsConfiguration", B.IfdValueType_7, _null), 37122, A.ExifTag$("CompressedBitsPerPixel", B.IfdValueType_0, _null), 37377, A.ExifTag$("ShutterSpeedValue", B.IfdValueType_0, _null), 37378, A.ExifTag$("ApertureValue", B.IfdValueType_0, _null), 37379, A.ExifTag$("BrightnessValue", B.IfdValueType_0, _null), 37380, A.ExifTag$("ExposureBiasValue", B.IfdValueType_0, _null), 37381, A.ExifTag$("MaxApertureValue", B.IfdValueType_0, _null), 37382, A.ExifTag$("SubjectDistance", B.IfdValueType_0, _null), 37383, A.ExifTag$("MeteringMode", B.IfdValueType_0, _null), 37384, A.ExifTag$("LightSource", B.IfdValueType_0, _null), 37385, A.ExifTag$("Flash", B.IfdValueType_0, _null), 37386, A.ExifTag$("FocalLength", B.IfdValueType_0, _null), 37396, A.ExifTag$("SubjectArea", B.IfdValueType_0, _null), 37500, A.ExifTag$("MakerNote", B.IfdValueType_7, _null), 37510, A.ExifTag$("UserComment", B.IfdValueType_7, _null), 37520, A.ExifTag$("SubSecTime", B.IfdValueType_0, _null), 37521, A.ExifTag$("SubSecTimeOriginal", B.IfdValueType_0, _null), 37522, A.ExifTag$("SubSecTimeDigitized", B.IfdValueType_0, _null), 40091, A.ExifTag$("XPTitle", B.IfdValueType_0, _null), 40092, A.ExifTag$("XPComment", B.IfdValueType_0, _null), 40093, A.ExifTag$("XPAuthor", B.IfdValueType_0, _null), 40094, A.ExifTag$("XPKeywords", B.IfdValueType_0, _null), 40095, A.ExifTag$("XPSubject", B.IfdValueType_0, _null), 40960, A.ExifTag$("FlashPixVersion", B.IfdValueType_0, _null), 40961, A.ExifTag$("ColorSpace", B.IfdValueType_3, 1), 40962, A.ExifTag$("ExifImageWidth", B.IfdValueType_3, 1), 40963, A.ExifTag$("ExifImageLength", B.IfdValueType_3, 1), 40964, A.ExifTag$("RelatedSoundFile", B.IfdValueType_0, _null), 40965, A.ExifTag$("InteroperabilityOffset", B.IfdValueType_0, _null), 41483, A.ExifTag$("FlashEnergy", B.IfdValueType_0, _null), 41484, A.ExifTag$("SpatialFrequencyResponse", B.IfdValueType_0, _null), 41486, A.ExifTag$("FocalPlaneXResolution", B.IfdValueType_0, _null), 41487, A.ExifTag$("FocalPlaneYResolution", B.IfdValueType_0, _null), 41488, A.ExifTag$("FocalPlaneResolutionUnit", B.IfdValueType_0, _null), 41492, A.ExifTag$("SubjectLocation", B.IfdValueType_0, _null), 41493, A.ExifTag$("ExposureIndex", B.IfdValueType_0, _null), 41495, A.ExifTag$("SensingMethod", B.IfdValueType_0, _null), 41728, A.ExifTag$("FileSource", B.IfdValueType_0, _null), 41729, A.ExifTag$("SceneType", B.IfdValueType_0, _null), 41730, A.ExifTag$("CVAPattern", B.IfdValueType_0, _null), 41985, A.ExifTag$("CustomRendered", B.IfdValueType_0, _null), 41986, A.ExifTag$("ExposureMode", B.IfdValueType_0, _null), 41987, A.ExifTag$("WhiteBalance", B.IfdValueType_0, _null), 41988, A.ExifTag$("DigitalZoomRatio", B.IfdValueType_0, _null), 41989, A.ExifTag$("FocalLengthIn35mmFilm", B.IfdValueType_0, _null), 41990, A.ExifTag$("SceneCaptureType", B.IfdValueType_0, _null), 41991, A.ExifTag$("GainControl", B.IfdValueType_0, _null), 41992, A.ExifTag$("Contrast", B.IfdValueType_0, _null), 41993, A.ExifTag$("Saturation", B.IfdValueType_0, _null), 41994, A.ExifTag$("Sharpness", B.IfdValueType_0, _null), 41995, A.ExifTag$("DeviceSettingDescription", B.IfdValueType_0, _null), 41996, A.ExifTag$("SubjectDistanceRange", B.IfdValueType_0, _null), 42016, A.ExifTag$("ImageUniqueID", B.IfdValueType_0, _null), 42032, A.ExifTag$("CameraOwnerName", B.IfdValueType_2, _null), 42033, A.ExifTag$("BodySerialNumber", B.IfdValueType_2, _null), 42034, A.ExifTag$("LensSpecification", B.IfdValueType_0, _null), 42035, A.ExifTag$("LensMake", B.IfdValueType_2, _null), 42036, A.ExifTag$("LensModel", B.IfdValueType_2, _null), 42037, A.ExifTag$("LensSerialNumber", B.IfdValueType_2, _null), 42240, A.ExifTag$("Gamma", B.IfdValueType_5, 1), 50341, A.ExifTag$("PrintIM", B.IfdValueType_0, _null), 59932, A.ExifTag$("Padding", B.IfdValueType_0, _null), 59933, A.ExifTag$("OffsetSchema", B.IfdValueType_0, _null), 65000, A.ExifTag$("OwnerName", B.IfdValueType_2, _null), 65001, A.ExifTag$("SerialNumber", B.IfdValueType_2, _null)], type$.int, C.findType("ExifTag"));
    });
    _lazyFinal($, "__float32", "$get$__float32", () => C.NativeFloat32List_NativeFloat32List(1));
    _lazyFinal($, "__float32ToUint32", "$get$__float32ToUint32", () => A.Uint32List_Uint32List$view(D.NativeFloat32List_methods.get$buffer($.$get$__float32())));
    _lazyFinal($, "Token__newlineParser", "$get$Token__newlineParser", () => new A.NewlineParser("newline expected"));
    _lazyFinal($, "_single", "$get$_single", () => A.MapParserExtension_map(A.any(), new A._single_closure(), false, type$.String, type$.RangeCharPredicate));
    _lazyFinal($, "_range", "$get$_range", () => {
      var t1 = type$.String;
      return A.RecordParserExtension3_map3(A.SequenceParser3$(A.any(), A.char("-", null), A.any(), t1, t1, t1), new A._range_closure(), t1, t1, t1, type$.RangeCharPredicate);
    });
    _lazyFinal($, "_sequence", "$get$_sequence", () => {
      var t1 = type$.RangeCharPredicate;
      return A.MapParserExtension_map(A.PossessiveRepeatingParserExtension_star(A.ChoiceIterableExtension_toChoiceParser(C._setArrayType([$.$get$_range(), $.$get$_single()], C.findType("JSArray<Parser<RangeCharPredicate>>")), null, t1), t1), A.optimize__optimizedRanges$closure(), false, C.findType("List<RangeCharPredicate>"), type$.CharacterPredicate);
    });
    _lazyFinal($, "_pattern", "$get$_pattern", () => {
      var t1 = type$.nullable_String,
        t2 = type$.CharacterPredicate;
      return A.RecordParserExtension2_map2(A.SequenceParser2$(A.OptionalParserExtension_optional(A.char("^", null), type$.String), $.$get$_sequence(), t1, t2), new A._pattern_closure(), t1, t2, t2);
    });
    _lazyFinal($, "ProviderBinding_debugInstance", "$get$ProviderBinding_debugInstance", () => new A.ProviderBinding(C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.ProviderNode)));
    _lazyFinal($, "_isSoundMode", "$get$_isSoundMode", () => !type$.List_int._is(C._setArrayType([], C.findType("JSArray<int?>"))));
    _lazy($, "Provider_debugCheckInvalidValueType", "$get$Provider_debugCheckInvalidValueType", () => new A.Provider_debugCheckInvalidValueType_closure());
    _lazyFinal($, "_TDSkeletonState__loadingWidget", "$get$_TDSkeletonState__loadingWidget", () => {
      var _null = null;
      return C.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    });
    _lazyFinal($, "FlutterVectorGraphicsListener__emptyPaint", "$get$FlutterVectorGraphicsListener__emptyPaint", () => C.Paint_Paint());
    _lazyFinal($, "FlutterVectorGraphicsListener__grayscaleDstInPaint", "$get$FlutterVectorGraphicsListener__grayscaleDstInPaint", () => {
      var t1 = C.Paint_Paint();
      t1.set$blendMode(D.BlendMode_6);
      t1.set$colorFilter(B.EngineColorFilter_fTn);
      return t1;
    });
    _lazyFinal($, "_VectorGraphicWidgetState__webRenderObject", "$get$_VectorGraphicWidgetState__webRenderObject", () => A.useHtmlRenderObject());
    _lazyFinal($, "FP32_DENORMAL_FLOAT", "$get$FP32_DENORMAL_FLOAT", () => {
      var t1 = C.NativeByteData_NativeByteData(4);
      D.NativeByteData_methods.setUint32$2(t1, 0, 1056964608);
      return t1;
    });
    _lazyFinal($, "VectorGraphicsBuffer__zeroBuffer", "$get$VectorGraphicsBuffer__zeroBuffer", () => C.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "_whitespacePattern", "$get$_whitespacePattern", () => C.RegExp_RegExp("\\s", true, false, false, false));
    _lazyFinal($, "SvgParser__contiguousSpaceMatcher", "$get$SvgParser__contiguousSpaceMatcher", () => C.RegExp_RegExp(" +", true, false, false, false));
    _lazyFinal($, "_transformValidator", "$get$_transformValidator", () => C.RegExp_RegExp("^( *,?([^(]+)\\(([^)]*)\\))*$", true, false, false, false));
    _lazyFinal($, "_transformCommand", "$get$_transformCommand", () => C.RegExp_RegExp(" *,?([^(]+)\\(([^)]*)\\)", true, false, false, false));
    _lazyFinal($, "_textPattern", "$get$_textPattern", () => C.RegExp_RegExp("[&<\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]|]]>", true, false, false, false));
    _lazyFinal($, "_singeQuoteAttributePattern", "$get$_singeQuoteAttributePattern", () => C.RegExp_RegExp("['&<\\n\\r\\t\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]", true, false, false, false));
    _lazyFinal($, "_doubleQuoteAttributePattern", "$get$_doubleQuoteAttributePattern", () => C.RegExp_RegExp('["&<\\n\\r\\t\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]', true, false, false, false));
    _lazyFinal($, "eventParserCache", "$get$eventParserCache", () => new A.XmlCache(new A.eventParserCache_closure(), 5, C.LinkedHashMap_LinkedHashMap$_empty(type$.XmlEntityMapping, C.findType("Parser<XmlEvent>")), C.findType("XmlCache<XmlEntityMapping,Parser<XmlEvent>>")));
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_5", e: "endPart", h: h});
})($__dart_deferred_initializers__, "Vv+ja/VzN6Z5Q/Ig4euSpT3sdm0=");
;