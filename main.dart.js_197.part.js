// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_197", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, C, I, H, M, N, K, O, P, Q, R, S, T,
  A = {
    FlyerChatTextStreamMessage$(index, message, mode, showStatus, streamState) {
      return new A.FlyerChatTextStreamMessage(message, streamState, false, mode, null);
    },
    TextStreamMessageMode: function TextStreamMessageMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FlyerChatTextStreamMessage: function FlyerChatTextStreamMessage(t0, t1, t2, t3, t4) {
      var _ = this;
      _.message = t0;
      _.streamState = t1;
      _.showStatus = t2;
      _.mode = t3;
      _.key = t4;
    },
    _FlyerChatTextStreamMessageState: function _FlyerChatTextStreamMessageState(t0, t1, t2) {
      var _ = this;
      _._segments = t0;
      _.TickerProviderStateMixin__tickers = t1;
      _.TickerProviderStateMixin__tickerModeNotifier = t2;
      _._framework$_element = _._widget = null;
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure() {
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0(t0, t1) {
      this.$this = t0;
      this.newText = t1;
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1() {
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2() {
    },
    _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3: function _FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure(t0) {
      this.$this = t0;
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure() {
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.controller = t1;
      _.listener = t2;
      _.newSegment = t3;
    },
    _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1: function _FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1(t0, t1) {
      this.$this = t0;
      this.newSegment = t1;
    },
    _FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure: function _FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure(t0, t1) {
      this.$this = t0;
      this.completedSegment = t1;
    },
    _FlyerChatTextStreamMessageState_build_closure: function _FlyerChatTextStreamMessageState_build_closure() {
    },
    _FlyerChatTextStreamMessageState__buildTextContent_closure: function _FlyerChatTextStreamMessageState__buildTextContent_closure() {
    },
    _FlyerChatTextStreamMessageState__buildTextContent_closure0: function _FlyerChatTextStreamMessageState__buildTextContent_closure0(t0) {
      this.paragraphStyle = t0;
    },
    TimeAndStatus1: function TimeAndStatus1(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.time = t0;
      _.status = t1;
      _.showTime = t2;
      _.showStatus = t3;
      _.textStyle = t4;
      _.key = t5;
    },
    __FlyerChatTextStreamMessageState_State_TickerProviderStateMixin: function __FlyerChatTextStreamMessageState_State_TickerProviderStateMixin() {
    },
    TextSegment: function TextSegment() {
    },
    StaticSegment: function StaticSegment(t0) {
      this.text = t0;
    },
    AnimatingSegment: function AnimatingSegment(t0, t1, t2) {
      this.controller = t0;
      this.fadeAnimation = t1;
      this.text = t2;
    },
    ShimmerDirection: function ShimmerDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Shimmer: function Shimmer(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.period = t1;
      _.gradient = t2;
      _.key = t3;
    },
    _ShimmerState: function _ShimmerState(t0, t1) {
      var _ = this;
      _.___ShimmerState__controller_A = $;
      _._shimmer$_count = 0;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework$_element = _._widget = null;
    },
    _ShimmerState_initState_closure: function _ShimmerState_initState_closure(t0) {
      this.$this = t0;
    },
    _ShimmerState_build_closure: function _ShimmerState_build_closure(t0) {
      this.$this = t0;
    },
    _Shimmer: function _Shimmer(t0, t1, t2, t3, t4) {
      var _ = this;
      _.percent = t0;
      _.direction = t1;
      _.gradient = t2;
      _.child = t3;
      _.key = t4;
    },
    _ShimmerFilter: function _ShimmerFilter(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._shimmer$_direction = t0;
      _._gradient = t1;
      _._percent = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._layoutCacheStorage = t4;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __ShimmerState_State_SingleTickerProviderStateMixin: function __ShimmerState_State_SingleTickerProviderStateMixin() {
    }
  },
  D, U, V, W, L, F, X, E, G, Y;
  J = holdersList[1];
  B = holdersList[0];
  C = holdersList[2];
  I = holdersList[124];
  H = holdersList[132];
  M = holdersList[131];
  N = holdersList[203];
  K = holdersList[47];
  O = holdersList[53];
  P = holdersList[129];
  Q = holdersList[204];
  R = holdersList[29];
  S = holdersList[207];
  T = holdersList[34];
  A = hunkHelpers.updateHolder(holdersList[15], A);
  D = holdersList[176];
  U = holdersList[24];
  V = holdersList[141];
  W = holdersList[144];
  L = holdersList[135];
  F = holdersList[145];
  X = holdersList[114];
  E = holdersList[136];
  G = holdersList[137];
  Y = holdersList[193];
  A.TextStreamMessageMode.prototype = {
    _enumToString$0() {
      return "TextStreamMessageMode." + this._name;
    }
  };
  A.FlyerChatTextStreamMessage.prototype = {
    createState$0() {
      return new A._FlyerChatTextStreamMessageState(B._setArrayType([], type$.JSArray_TextSegment), null, null);
    }
  };
  A._FlyerChatTextStreamMessageState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._updateSegmentsFromState$2$isInitial(this._widget.streamState, true);
    },
    dispose$0() {
      this._disposeAllSegmentControllers$0();
      this.super$__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin$dispose();
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2;
      type$.FlyerChatTextStreamMessage._as(oldWidget);
      this.super$State$didUpdateWidget(oldWidget);
      t1 = this._widget.streamState;
      t2 = oldWidget.streamState;
      if (t1 === t2)
        return;
      this._updateSegmentsFromState$2$oldState(t1, t2);
    },
    _updateSegmentsFromState$3$isInitial$oldState(newState, isInitial, oldState) {
      var initialText, t1, newText, t2, currentSegmentText, finalText, t3, t4, _this = this;
      if (isInitial) {
        _this._disposeAllSegmentControllers$0();
        if (type$.StreamStateStreaming._is(newState))
          initialText = newState.accumulatedText;
        else if (type$.StreamStateError._is(newState)) {
          initialText = newState.accumulatedText;
          if (initialText == null)
            initialText = "";
        } else
          initialText = "";
        t1 = B._setArrayType([], type$.JSArray_TextSegment);
        if (initialText.length !== 0)
          t1.push(new A.StaticSegment(initialText));
        _this.set$_segments(t1);
      } else if (type$.StreamStateStreaming._is(newState)) {
        newText = newState.accumulatedText;
        t1 = _this._segments;
        t2 = B._arrayInstanceType(t1);
        currentSegmentText = new B.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure()), t2._eval$1("MappedListIterable<1,String>")).join$1(0, "");
        t1 = currentSegmentText.length;
        if (newText.length > t1 && C.JSString_methods.startsWith$1(newText, currentSegmentText))
          _this._addNewAnimatingChunk$1(C.JSString_methods.substring$1(newText, t1));
        else if (newText !== currentSegmentText) {
          _this._disposeAllSegmentControllers$0();
          _this.setState$1(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0(_this, newText));
        }
      } else {
        t1 = {};
        _this._disposeAllSegmentControllers$0();
        t1.finalText = "";
        t2 = "";
        if (type$.StreamStateError._is(newState)) {
          finalText = newState.accumulatedText;
          if (finalText == null)
            finalText = "";
          t1.finalText = finalText;
          t2 = finalText;
        }
        t3 = _this._segments;
        t4 = B._arrayInstanceType(t3);
        if (t2 !== new B.MappedListIterable(t3, t4._eval$1("String(1)")._as(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1()), t4._eval$1("MappedListIterable<1,String>")).join$1(0, "") || C.JSArray_methods.any$1(_this._segments, new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2()))
          _this.setState$1(new A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3(t1, _this));
      }
    },
    _updateSegmentsFromState$2$oldState(newState, oldState) {
      return this._updateSegmentsFromState$3$isInitial$oldState(newState, false, oldState);
    },
    _updateSegmentsFromState$2$isInitial(newState, isInitial) {
      return this._updateSegmentsFromState$3$isInitial$oldState(newState, isInitial, null);
    },
    _addNewAnimatingChunk$1(chunk) {
      var controller, newSegment, listener, t1, t2, _this = this, _null = null;
      _this._widget.toString;
      controller = E.AnimationController$(_null, F.Duration_350000, _null, _null, _this);
      newSegment = new A.AnimatingSegment(controller, E.CurvedAnimation$(F.Cubic_uDh, controller, _null), chunk);
      listener = new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure(_this);
      type$.void_Function._as(listener);
      controller.didRegisterListener$0();
      controller.AnimationLocalListenersMixin__listeners.add$1(0, listener);
      t1 = type$.void_Function_AnimationStatus._as(new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0(_this, controller, listener, newSegment));
      controller.didRegisterListener$0();
      t2 = controller.AnimationLocalStatusListenersMixin__statusListeners;
      t2.$ti._precomputed1._as(t1);
      t2._isDirty = true;
      C.JSArray_methods.add$1(t2._list, t1);
      _this.setState$1(new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1(_this, newSegment));
      controller.forward$1$from(0, 0);
    },
    _disposeAllSegmentControllers$0() {
      var t1, t2, _i, segment, t3, t4, value, result;
      for (t1 = this._segments, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        segment = t1[_i];
        if (segment instanceof A.AnimatingSegment) {
          t3 = segment.controller;
          t3._ticker.dispose$0();
          t3._ticker = null;
          t4 = t3.AnimationLocalStatusListenersMixin__statusListeners;
          t4._isDirty = false;
          C.JSArray_methods.clear$0(t4._list);
          value = t4.__ObserverList__set_FI;
          if (value === $) {
            result = B.HashSet_HashSet(t4.$ti._precomputed1);
            t4.__ObserverList__set_FI !== $ && B.throwLateFieldADI("_set");
            t4.set$__ObserverList__set_FI(result);
            value = result;
          }
          if (value._collection$_length > 0) {
            value._collection$_strings = value._collection$_nums = value._collection$_rest = value._collection$_elements = null;
            value._collection$_length = 0;
          }
          t3.AnimationLocalListenersMixin__listeners._observer_list$_map.clear$0(0);
          t3.super$AnimationEagerListenerMixin$dispose();
        }
      }
    },
    _finalizeChunkAnimation$1(completedSegment) {
      if (this._framework$_element == null)
        return;
      this.setState$1(new A._FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure(this, completedSegment));
    },
    build$1(context) {
      var t2, timeAndStatus, textContent, _this = this, _null = null,
        theme = K.SelectContext_select(context, new A._FlyerChatTextStreamMessageState_build_closure(), type$.ChatTheme, type$.Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer),
        isSentByMe = J.$eq$(I.Provider_of(context, false, type$.String), _this._widget.message.authorId),
        backgroundColor = _this._flyer_chat_text_stream_message$_resolveBackgroundColor$2(isSentByMe, theme),
        paragraphStyle = _this._resolveParagraphStyle$2(isSentByMe, theme),
        timeStyle = _this._flyer_chat_text_stream_message$_resolveTimeStyle$2(isSentByMe, theme),
        t1 = _this._widget;
      t1 = t1.message.get$resolvedTime();
      t2 = _this._widget.message.get$resolvedStatus();
      _this._widget.toString;
      timeAndStatus = new A.TimeAndStatus1(t1, t2, true, false, timeStyle, _null);
      textContent = _this._buildTextContent$2(paragraphStyle, theme);
      _this._widget.toString;
      t1 = theme._values[5];
      return E.Container$(_null, _this._buildContentBasedOnPosition$4$context$paragraphStyle$textContent$timeAndStatus(context, paragraphStyle, textContent, timeAndStatus), C.Clip_0, _null, _null, new E.BoxDecoration(backgroundColor, _null, _null, t1, _null, _null, _null, G.BoxShape_0), _null, _null, _null, _null, N.EdgeInsets_16_10_16_10, _null, _null, _null);
    },
    _buildTextContent$2(paragraphStyle, theme) {
      var errorText, t3, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.streamState;
      if (type$.StreamStateLoading._is(t2)) {
        t1 = theme._values;
        t2 = t1[3].withValues$1$alpha(0.3);
        _this._widget.toString;
        t1 = t1[3].withValues$1$alpha(0.8);
        _this._widget.toString;
        return new A.Shimmer(H.Text$("Thinking", _null, _null, _null, _null, _null, _null, _null, paragraphStyle, _null, _null, _null, _null, _null), C.Duration_1000000, new T.LinearGradient(Y.Alignment_m1_m1, V.Alignment_1_0, C.TileMode_0, B._setArrayType([t2, t2, t1, t2, t2], type$.JSArray_Color), D.List_YIL, _null), _null);
      }
      if (type$.StreamStateError._is(t2)) {
        t1 = t2.accumulatedText;
        t2 = t2.error;
        errorText = t1 != null ? t1 + "\n\nError: " + B.S(t2) : "Error: " + B.S(t2);
        t1 = paragraphStyle.copyWith$1$color(F.MaterialColor_nI1);
        return H.Text$(errorText, _null, _null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null);
      }
      if (type$.StreamStateStreaming._is(t2)) {
        t2 = _this._segments;
        if (t2.length === 0) {
          t1 = paragraphStyle.color;
          t1 = paragraphStyle.copyWith$1$color(t1 == null ? _null : t1.withValues$1$alpha(0.5));
          return H.Text$("...", _null, _null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null);
        }
        t3 = B._arrayInstanceType(t2);
        if (t1.mode === D.TextStreamMessageMode_1)
          return R.GptMarkdown$(new B.MappedListIterable(t2, t3._eval$1("String(1)")._as(new A._FlyerChatTextStreamMessageState__buildTextContent_closure()), t3._eval$1("MappedListIterable<1,String>")).join$1(0, ""), _null, paragraphStyle);
        else {
          t1 = t3._eval$1("MappedListIterable<1,InlineSpan>");
          return E.RichText$(_null, _null, _null, G.TextOverflow_0, _null, _null, true, _null, E.TextSpan$(B.List_List$of(new B.MappedListIterable(t2, t3._eval$1("InlineSpan(1)")._as(new A._FlyerChatTextStreamMessageState__buildTextContent_closure0(paragraphStyle)), t1), true, t1._eval$1("ListIterable.E")), paragraphStyle, _null), C.TextAlign_4, _null, _null, C._LinearTextScaler_1, G.TextWidthBasis_0);
        }
      }
      return W.SizedBox_0_0_null_null;
    },
    _buildContentBasedOnPosition$4$context$paragraphStyle$textContent$timeAndStatus(context, paragraphStyle, textContent, timeAndStatus) {
      var textDirection, t1, t2, _null = null;
      if (timeAndStatus == null)
        return textContent;
      textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      this._widget.toString;
      switch (1) {
        case 1:
          t1 = paragraphStyle.height;
          if (t1 == null)
            t1 = 1;
          t2 = paragraphStyle.fontSize;
          t1 *= t2 == null ? 0 : t2;
          if (t1 == null)
            t1 = 0;
          return new E.Stack(G.AlignmentDirectional_m1_m1, _null, G.StackFit_0, C.Clip_1, B._setArrayType([new E.Padding(new B.EdgeInsets(0, 0, 0, t1), textContent, _null), X.Opacity$(timeAndStatus, 0), L.Positioned_Positioned$directional(0, timeAndStatus, 0, _null, _null, textDirection, _null, _null)], type$.JSArray_Widget), _null);
      }
    },
    _flyer_chat_text_stream_message$_resolveBackgroundColor$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        this._widget.toString;
        t1 = theme._values[4];
        return t1;
      }
      this._widget.toString;
      t1 = theme._values[6];
      return t1;
    },
    _resolveParagraphStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        this._widget.toString;
        t1 = theme._values;
        t1 = t1[0].copyWith$1$color(t1[2]);
        return t1;
      }
      this._widget.toString;
      t1 = theme._values;
      t1 = t1[0].copyWith$1$color(t1[3]);
      return t1;
    },
    _flyer_chat_text_stream_message$_resolveTimeStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        this._widget.toString;
        t1 = theme._values;
        t1 = t1[1].copyWith$1$color(t1[2]);
        return t1;
      }
      this._widget.toString;
      t1 = theme._values;
      t1 = t1[1].copyWith$1$color(t1[3]);
      return t1;
    },
    set$_segments(_segments) {
      this._segments = type$.List_TextSegment._as(_segments);
    },
    $isTickerProvider: 1
  };
  A.TimeAndStatus1.prototype = {
    build$1(context) {
      var t3, _this = this, _null = null,
        timeFormat = I.Provider_of(context, true, type$.DateFormat),
        t1 = B._setArrayType([], type$.JSArray_Widget),
        t2 = _this.time;
      if (t2 != null)
        t1.push(H.Text$(timeFormat.format$1(t2.toLocal$0()), _null, _null, _null, _null, _null, _null, _null, _this.textStyle, _null, _null, _null, _null, _null));
      if (_this.showStatus && _this.status != null) {
        t2 = _this.status;
        t3 = _this.textStyle;
        if (t2 === Q.MessageStatus_3)
          t1.push(new E.SizedBox(6, 6, O.CircularProgressIndicator$(_null, t3.color, _null, _null, _null, _null, _null, 2, _null, _null), _null));
        else {
          t2.toString;
          t2 = K.getIconForStatus(t2);
          t1.push(E.Icon$(t2, t3.color, _null, 12));
        }
      }
      return M.Row$(t1, F.CrossAxisAlignment_2, _null, F.MainAxisAlignment_0, F.MainAxisSize_0, 2, _null, _null, F.VerticalDirection_1);
    }
  };
  A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A.TextSegment.prototype = {};
  A.StaticSegment.prototype = {};
  A.AnimatingSegment.prototype = {};
  A.ShimmerDirection.prototype = {
    _enumToString$0() {
      return "ShimmerDirection." + this._name;
    }
  };
  A.Shimmer.prototype = {
    createState$0() {
      return new A._ShimmerState(null, null);
    }
  };
  A._ShimmerState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this;
      _this.super$State$initState();
      t1 = E.AnimationController$(null, _this._widget.period, null, null, _this);
      t2 = type$.void_Function_AnimationStatus._as(new A._ShimmerState_initState_closure(_this));
      t1.didRegisterListener$0();
      t3 = t1.AnimationLocalStatusListenersMixin__statusListeners;
      t3.$ti._precomputed1._as(t2);
      t3._isDirty = true;
      C.JSArray_methods.add$1(t3._list, t2);
      _this.___ShimmerState__controller_A = t1;
      _this._widget.toString;
      t1.forward$0(0);
    },
    didUpdateWidget$1(oldWidget) {
      var t1;
      type$.Shimmer._as(oldWidget);
      this._widget.toString;
      t1 = this.___ShimmerState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1.forward$0(0);
      this.super$State$didUpdateWidget(oldWidget);
    },
    build$1(context) {
      var t1 = this.___ShimmerState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      return L.AnimatedBuilder$(t1, new A._ShimmerState_build_closure(this), this._widget.child);
    },
    dispose$0() {
      var t1 = this.___ShimmerState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1.dispose$0();
      this.super$__ShimmerState_State_SingleTickerProviderStateMixin$dispose();
    },
    $isTickerProvider: 1
  };
  A._Shimmer.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._ShimmerFilter(this.direction, this.gradient, this.percent, null, new B._LayoutCacheStorage(), B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, shimmer) {
      type$._ShimmerFilter._as(shimmer);
      shimmer.set$percent(0, this.percent);
      shimmer.set$gradient(this.gradient);
      shimmer.set$direction(0, this.direction);
    }
  };
  A._ShimmerFilter.prototype = {
    get$alwaysNeedsCompositing() {
      return this.RenderObjectWithChildMixin__child != null;
    },
    set$percent(_, newValue) {
      if (newValue === this._percent)
        return;
      this._percent = newValue;
      this.markNeedsPaint$0();
    },
    set$gradient(newValue) {
      if (newValue.$eq(0, this._gradient))
        return;
      this._gradient = newValue;
      this.markNeedsPaint$0();
    },
    set$direction(_, newDirection) {
      if (newDirection === this._shimmer$_direction)
        return;
      this._shimmer$_direction = newDirection;
      this.markNeedsLayout$0();
    },
    paint$2(context, offset) {
      var width, height, rect, t2, t3, t4, t5, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        width = t1.get$size(0)._dx;
        height = _this.RenderObjectWithChildMixin__child.get$size(0)._dy;
        t1 = _this._shimmer$_direction;
        if (t1 === D.ShimmerDirection_1) {
          t1 = width + (-width - width) * _this._percent - width;
          rect = new B.Rect(t1, 0, t1 + 3 * width, 0 + height);
        } else if (t1 === D.ShimmerDirection_2) {
          t1 = -height;
          t1 = t1 + (height - t1) * _this._percent - height;
          rect = new B.Rect(0, t1, 0 + width, t1 + 3 * height);
        } else {
          t2 = _this._percent;
          if (t1 === D.ShimmerDirection_3) {
            t1 = height + (-height - height) * t2 - height;
            rect = new B.Rect(0, t1, 0 + width, t1 + 3 * height);
          } else {
            t1 = -width;
            t2 = t1 + (width - t1) * t2 - width;
            rect = new B.Rect(t2, 0, t2 + 3 * width, 0 + height);
          }
        }
        t1 = type$.nullable_ShaderMaskLayer;
        if (t1._as(B.RenderObject.prototype.get$layer.call(_this, 0)) == null)
          _this._layerHandle.set$layer(0, U.ShaderMaskLayer$());
        t2 = t1._as(B.RenderObject.prototype.get$layer.call(_this, 0));
        t2.toString;
        t2.set$shader(_this._gradient.createShader$1(0, rect));
        t3 = _this.get$size(0);
        t4 = offset._dx;
        t5 = offset._dy;
        t2.set$maskRect(new B.Rect(t4, t5, t4 + t3._dx, t5 + t3._dy));
        t2.set$blendMode(C.BlendMode_5);
        t1 = t1._as(B.RenderObject.prototype.get$layer.call(_this, 0));
        t1.toString;
        context.pushLayer$3(t1, B.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
      } else
        _this._layerHandle.set$layer(0, null);
    }
  };
  A.__ShimmerState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["String(TextSegment)", "~(AnimationStatus)", "bool(TextSegment)", "+bodyMedium,labelSmall,onPrimary,onSurface,primary,shape,surfaceContainer(TextStyle,TextStyle,Color,Color,Color,BorderRadiusGeometry,Color)(ChatTheme)", "TextSpan(TextSegment)", "_Shimmer(BuildContext,Widget?)"]);
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s).text;
    },
    $signature: typesOffset + 0
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_TextSegment),
        t2 = this.newText;
      if (t2.length !== 0)
        t1.push(new A.StaticSegment(t2));
      this.$this.set$_segments(t1);
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s).text;
    },
    $signature: typesOffset + 0
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s) instanceof A.AnimatingSegment;
    },
    $signature: typesOffset + 2
  };
  A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3.prototype = {
    call$0() {
      var t1 = B._setArrayType([], type$.JSArray_TextSegment),
        t2 = this._box_0.finalText;
      if (t2.length !== 0)
        t1.push(new A.StaticSegment(t2));
      this.$this.set$_segments(t1);
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._framework$_element != null)
        t1.setState$1(new A._FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure());
    },
    $signature: 3
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0.prototype = {
    call$1($status) {
      var _this = this;
      if (type$.AnimationStatus._as($status) === G.AnimationStatus_3) {
        _this.controller.removeListener$1(0, _this.listener);
        _this.$this._finalizeChunkAnimation$1(_this.newSegment);
      }
    },
    $signature: typesOffset + 1
  };
  A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1.prototype = {
    call$0() {
      C.JSArray_methods.add$1(this.$this._segments, this.newSegment);
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.completedSegment,
        index = C.JSArray_methods.indexOf$1(t1._segments, t2);
      if (index !== -1) {
        C.JSArray_methods.$indexSet(t1._segments, index, new A.StaticSegment(t2.text));
        t2.controller.dispose$0();
      }
    },
    $signature: 0
  };
  A._FlyerChatTextStreamMessageState_build_closure.prototype = {
    call$1(t) {
      var t1, t2;
      type$.ChatTheme._as(t);
      t1 = t.typography;
      t2 = t.colors;
      return new B._Record_7_bodyMedium_labelSmall_onPrimary_onSurface_primary_shape_surfaceContainer([t1.bodyMedium, t1.labelSmall, t2.onPrimary, t2.onSurface, t2.primary, t.shape, t2.surfaceContainer]);
    },
    $signature: typesOffset + 3
  };
  A._FlyerChatTextStreamMessageState__buildTextContent_closure.prototype = {
    call$1(s) {
      return type$.TextSegment._as(s).text;
    },
    $signature: typesOffset + 0
  };
  A._FlyerChatTextStreamMessageState__buildTextContent_closure0.prototype = {
    call$1(segment) {
      var currentOpacity, t1, t2, animatingStyle, _null = null;
      type$.TextSegment._as(segment);
      if (segment instanceof A.StaticSegment)
        return E.TextSpan$(_null, _null, segment.text);
      else if (segment instanceof A.AnimatingSegment) {
        currentOpacity = segment.fadeAnimation.get$value(0);
        t1 = this.paragraphStyle;
        t2 = t1.color;
        animatingStyle = t1.copyWith$1$color(t2 == null ? _null : t2.withValues$1$alpha(currentOpacity));
        return E.TextSpan$(_null, animatingStyle, segment.text);
      }
      return S.TextSpan_DuQ;
    },
    $signature: typesOffset + 4
  };
  A._ShimmerState_initState_closure.prototype = {
    call$1($status) {
      var t1;
      if (type$.AnimationStatus._as($status) !== G.AnimationStatus_3)
        return;
      t1 = this.$this;
      ++t1._shimmer$_count;
      t1._widget.toString;
      t1 = t1.___ShimmerState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1.repeat$0(0);
    },
    $signature: typesOffset + 1
  };
  A._ShimmerState_build_closure.prototype = {
    call$2(context, child) {
      var t1, t2;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      t2 = t1._widget.gradient;
      t1 = t1.___ShimmerState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1 = t1.__AnimationController__value_A;
      t1 === $ && B.throwLateFieldNI("_value");
      return new A._Shimmer(t1, D.ShimmerDirection_0, t2, child, null);
    },
    $signature: typesOffset + 5
  };
  (function aliases() {
    var _ = A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin.prototype;
    _.super$__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__ShimmerState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__ShimmerState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B._Enum, [A.TextStreamMessageMode, A.ShimmerDirection]);
    _inheritMany(B.StatefulWidget, [A.FlyerChatTextStreamMessage, A.Shimmer]);
    _inheritMany(B.State, [A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin, A.__ShimmerState_State_SingleTickerProviderStateMixin]);
    _inherit(A._FlyerChatTextStreamMessageState, A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin);
    _inheritMany(B.Closure, [A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure1, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure2, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure0, A._FlyerChatTextStreamMessageState_build_closure, A._FlyerChatTextStreamMessageState__buildTextContent_closure, A._FlyerChatTextStreamMessageState__buildTextContent_closure0, A._ShimmerState_initState_closure]);
    _inheritMany(B.Closure0Args, [A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure0, A._FlyerChatTextStreamMessageState__updateSegmentsFromState_closure3, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk__closure, A._FlyerChatTextStreamMessageState__addNewAnimatingChunk_closure1, A._FlyerChatTextStreamMessageState__finalizeChunkAnimation_closure]);
    _inherit(A.TimeAndStatus1, B.StatelessWidget);
    _inherit(A.TextSegment, B.Object);
    _inheritMany(A.TextSegment, [A.StaticSegment, A.AnimatingSegment]);
    _inherit(A._ShimmerState, A.__ShimmerState_State_SingleTickerProviderStateMixin);
    _inherit(A._ShimmerState_build_closure, B.Closure2Args);
    _inherit(A._Shimmer, B.SingleChildRenderObjectWidget);
    _inherit(A._ShimmerFilter, B.RenderProxyBox);
    _mixinHard(A.__FlyerChatTextStreamMessageState_State_TickerProviderStateMixin, E.TickerProviderStateMixin);
    _mixinHard(A.__ShimmerState_State_SingleTickerProviderStateMixin, P.SingleTickerProviderStateMixin);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"TextStreamMessageMode":{"Enum":[]},"FlyerChatTextStreamMessage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_FlyerChatTextStreamMessageState":{"TickerProviderStateMixin":["FlyerChatTextStreamMessage"],"State":["FlyerChatTextStreamMessage"],"TickerProvider":[],"State.T":"FlyerChatTextStreamMessage"},"TimeAndStatus1":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"StaticSegment":{"TextSegment":[]},"AnimatingSegment":{"TextSegment":[]},"Shimmer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_Shimmer":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"ShimmerDirection":{"Enum":[]},"_ShimmerState":{"State":["Shimmer"],"TickerProvider":[],"State.T":"Shimmer"},"_ShimmerFilter":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      AnimationStatus: findType("AnimationStatus"),
      BuildContext: findType("BuildContext"),
      ChatTheme: findType("ChatTheme"),
      ContainerLayer: findType("ContainerLayer0"),
      DateFormat: findType("DateFormat"),
      Directionality: findType("Directionality"),
      FlyerChatTextStreamMessage: findType("FlyerChatTextStreamMessage"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_TextSegment: findType("JSArray<TextSegment>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      List_TextSegment: findType("List<TextSegment>"),
      Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer: findType("+bodyMedium,labelSmall,onPrimary,onSurface,primary,shape,surfaceContainer(TextStyle,TextStyle,Color,Color,Color,BorderRadiusGeometry,Color)"),
      Shimmer: findType("Shimmer"),
      StreamStateError: findType("StreamStateError"),
      StreamStateLoading: findType("StreamStateLoading"),
      StreamStateStreaming: findType("StreamStateStreaming"),
      String: findType("String"),
      TextSegment: findType("TextSegment"),
      _ShimmerFilter: findType("_ShimmerFilter"),
      nullable_ShaderMaskLayer: findType("ShaderMaskLayer?"),
      nullable_Widget: findType("Widget?"),
      void_Function: findType("~()"),
      void_Function_AnimationStatus: findType("~(AnimationStatus)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.TextStreamMessageMode_1 = new A.TextStreamMessageMode(1, "instantMarkdown");
    D.C_Deferred = D.TextStreamMessageMode_1;
    D.List_YIL = B._setArrayType(makeConstList([0, 0.35, 0.5, 0.65, 1]), B.findType("JSArray<double>"));
    D.ShimmerDirection_0 = new A.ShimmerDirection(0, "ltr");
    D.ShimmerDirection_1 = new A.ShimmerDirection(1, "rtl");
    D.ShimmerDirection_2 = new A.ShimmerDirection(2, "ttb");
    D.ShimmerDirection_3 = new A.ShimmerDirection(3, "btt");
    D.TextStreamMessageMode_0 = new A.TextStreamMessageMode(0, "animatedOpacity");
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_197", e: "endPart", h: h});
})($__dart_deferred_initializers__, "8ucPC1gCNNqAhkBQbAG+fAfrbeg=");
;
//# sourceMappingURL=main.dart.js_197.part.js.map
