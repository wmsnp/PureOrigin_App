// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_116", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, C,
  A = {
    _buildMaterialDialogTransitions(context, animation, secondaryAnimation, child) {
      var t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      return child;
    },
    showDialog(builder, context, $T) {
      var themes, t2,
        t1 = H.Navigator_of(context, true)._framework$_element;
      t1.toString;
      themes = I.InheritedTheme_capture(context, t1);
      t1 = H.Navigator_of(context, true);
      t2 = A.DialogTheme_of(context).barrierColor;
      if (t2 == null)
        t2 = D.Theme_of(context).dialogTheme.barrierColor;
      if (t2 == null)
        t2 = E.Color_NzJ;
      return t1.push$1$1(A.DialogRoute$(null, t2, true, null, builder, context, null, themes, C.TraversalEdgeBehavior_0, true, $T), $T);
    },
    DialogRoute$(anchorPoint, barrierColor, barrierDismissible, barrierLabel, builder, context, settings, themes, traversalEdgeBehavior, useSafeArea, $T) {
      var t2, t3, t4, t5, t6, t7, t8, t9, _null = null,
        t1 = D.Localizations_of(context, E.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
      t1.toString;
      t1 = t1.get$modalBarrierDismissLabel();
      t2 = B._setArrayType([], type$.JSArray_of_Future_bool_Function);
      t3 = $.Zone__current;
      t4 = D.ProxyAnimation$(E.C__AlwaysDismissedAnimation);
      t5 = B._setArrayType([], type$.JSArray_OverlayEntry);
      t6 = $.$get$ChangeNotifier__emptyListeners();
      t7 = $.Zone__current;
      t8 = $T._eval$1("_Future<0?>");
      t9 = $T._eval$1("_AsyncCompleter<0?>");
      return new A.DialogRoute(new A.DialogRoute_closure(builder, themes, true), true, t1, barrierColor, O.Duration_150000, A.dialog___buildMaterialDialogTransitions$closure(), anchorPoint, _null, traversalEdgeBehavior, t2, B.LinkedHashSet_LinkedHashSet$_empty(type$.PopEntry_nullable_Object), new D.LabeledGlobalKey(_null, $T._eval$1("LabeledGlobalKey<_ModalScopeState<0>>")), new D.LabeledGlobalKey(_null, type$.LabeledGlobalKey_State_StatefulWidget), new K.PageStorageBucket(), _null, 0, new B._AsyncCompleter(new B._Future(t3, $T._eval$1("_Future<0?>")), $T._eval$1("_AsyncCompleter<0?>")), t4, t5, _null, Q.RouteSettings_null_null, new B.ValueNotifier(_null, t6, type$.ValueNotifier_nullable_String), new B._AsyncCompleter(new B._Future(t7, t8), t9), new B._AsyncCompleter(new B._Future(t7, t8), t9), $T._eval$1("DialogRoute<0>"));
    },
    DialogRoute: function DialogRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24) {
      var _ = this;
      _._dialog$_curvedAnimation = null;
      _._pageBuilder = t0;
      _._routes$_barrierDismissible = t1;
      _._barrierLabel = t2;
      _._barrierColor = t3;
      _._transitionDuration = t4;
      _._transitionBuilder = t5;
      _.anchorPoint = t6;
      _.filter = t7;
      _.traversalEdgeBehavior = t8;
      _.receivedTransition = null;
      _._offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t9;
      _._popEntries = t10;
      _._scopeKey = t11;
      _._subtreeKey = t12;
      _._storageBucket = t13;
      _.__ModalRoute__modalBarrier_A = $;
      _._modalScopeCache = null;
      _.__ModalRoute__modalScope_A = $;
      _.LocalHistoryRoute__localHistory = t14;
      _.LocalHistoryRoute__entriesImpliesAppBarDismissal = t15;
      _._transitionCompleter = t16;
      _._performanceModeRequestHandle = null;
      _._popFinalized = false;
      _._routes$_controller = _._routes$_animation = null;
      _._secondaryAnimation = t17;
      _.willDisposeAnimationController = true;
      _._trainHoppingListenerRemover = _._result = _._routes$_simulation = null;
      _._overlayEntries = t18;
      _._requestFocus = t19;
      _._navigator$_navigator = null;
      _._settings = t20;
      _._restorationScopeId = t21;
      _._popCompleter = t22;
      _._disposeCompleter = t23;
      _.$ti = t24;
    },
    DialogRoute_closure: function DialogRoute_closure(t0, t1, t2) {
      this.builder = t0;
      this.themes = t1;
      this.useSafeArea = t2;
    },
    DisplayFeatureSubScreen__fallbackAnchorPoint(context) {
      var t1;
      switch (context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection.index) {
        case 0:
          t1 = F.Offset_bcQ;
          break;
        case 1:
          t1 = C.Offset_0_0;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    DisplayFeatureSubScreen_avoidBounds(mediaQuery) {
      var t1 = mediaQuery.displayFeatures,
        t2 = B._arrayInstanceType(t1);
      return new B.MappedIterable(new B.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A.DisplayFeatureSubScreen_avoidBounds_closure()), t2._eval$1("WhereIterable<1>")), t2._eval$1("Rect(1)")._as(new A.DisplayFeatureSubScreen_avoidBounds_closure0()), t2._eval$1("MappedIterable<1,Rect>"));
    },
    DisplayFeatureSubScreen__closestToAnchorPoint(subScreens, anchorPoint) {
      var t1, _i, $screen, subScreenDistance,
        closestScreen = C.JSArray_methods.get$first(subScreens),
        closestDistance = A.DisplayFeatureSubScreen__distanceFromPointToRect(anchorPoint, closestScreen);
      for (t1 = subScreens.length, _i = 0; _i < subScreens.length; subScreens.length === t1 || (0, B.throwConcurrentModificationError)(subScreens), ++_i) {
        $screen = subScreens[_i];
        subScreenDistance = A.DisplayFeatureSubScreen__distanceFromPointToRect(anchorPoint, $screen);
        if (subScreenDistance < closestDistance) {
          closestDistance = subScreenDistance;
          closestScreen = $screen;
        }
      }
      return closestScreen;
    },
    DisplayFeatureSubScreen__distanceFromPointToRect(point, rect) {
      var t3, t4,
        t1 = point._dx,
        t2 = rect.left;
      if (t1 < t2) {
        t3 = point._dy;
        t4 = rect.top;
        if (t3 < t4)
          return point.$sub(0, new B.Offset(t2, t4)).get$distance();
        else {
          t4 = rect.bottom;
          if (t3 > t4)
            return point.$sub(0, new B.Offset(t2, t4)).get$distance();
          else
            return t2 - t1;
        }
      } else {
        t2 = rect.right;
        if (t1 > t2) {
          t3 = point._dy;
          t4 = rect.top;
          if (t3 < t4)
            return point.$sub(0, new B.Offset(t2, t4)).get$distance();
          else {
            t4 = rect.bottom;
            if (t3 > t4)
              return point.$sub(0, new B.Offset(t2, t4)).get$distance();
            else
              return t1 - t2;
          }
        } else {
          t1 = point._dy;
          t2 = rect.top;
          if (t1 < t2)
            return t2 - t1;
          else {
            t2 = rect.bottom;
            if (t1 > t2)
              return t1 - t2;
            else
              return 0;
          }
        }
      }
    },
    DisplayFeatureSubScreen_subScreensInBounds(wantedBounds, avoidBounds) {
      var t2, t3, t4, newSubScreens, t5, t6, t7, t8, _i, $screen, t9, t10,
        t1 = type$.JSArray_Rect,
        subScreens = B._setArrayType([wantedBounds], t1);
      for (t2 = avoidBounds.$ti, t3 = new B.MappedIterator(J.get$iterator$ax(avoidBounds.__internal$_iterable), avoidBounds._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t3.moveNext$0(); subScreens = newSubScreens) {
        t4 = t3.__internal$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        newSubScreens = B._setArrayType([], t1);
        for (t5 = subScreens.length, t6 = t4.left, t7 = t4.top, t8 = t4.bottom, t4 = t4.right, _i = 0; _i < subScreens.length; subScreens.length === t5 || (0, B.throwConcurrentModificationError)(subScreens), ++_i) {
          $screen = subScreens[_i];
          t9 = $screen.top;
          if (t9 >= t7 && $screen.bottom <= t8) {
            t10 = $screen.left;
            if (t10 < t6)
              C.JSArray_methods.add$1(newSubScreens, new B.Rect(t10, t9, t10 + (t6 - t10), t9 + ($screen.bottom - t9)));
            t10 = $screen.right;
            if (t10 > t4)
              C.JSArray_methods.add$1(newSubScreens, new B.Rect(t4, t9, t4 + (t10 - t4), t9 + ($screen.bottom - t9)));
          } else {
            t10 = $screen.left;
            if (t10 >= t6 && $screen.right <= t4) {
              if (t9 < t7)
                C.JSArray_methods.add$1(newSubScreens, new B.Rect(t10, t9, t10 + ($screen.right - t10), t9 + (t7 - t9)));
              t9 = $screen.bottom;
              if (t9 > t8)
                C.JSArray_methods.add$1(newSubScreens, new B.Rect(t10, t8, t10 + ($screen.right - t10), t8 + (t9 - t8)));
            } else
              C.JSArray_methods.add$1(newSubScreens, $screen);
          }
        }
      }
      return subScreens;
    },
    DisplayFeatureSubScreen__capOffset(offset, maximum) {
      var t1 = offset._dx,
        t2 = false;
      if (t1 >= 0)
        if (t1 <= maximum._dx) {
          t2 = offset._dy;
          t2 = t2 >= 0 && t2 <= maximum._dy;
        }
      if (t2)
        return offset;
      else
        return new B.Offset(Math.min(Math.max(0, t1), maximum._dx), Math.min(Math.max(0, offset._dy), maximum._dy));
    },
    DisplayFeatureSubScreen: function DisplayFeatureSubScreen(t0, t1, t2) {
      this.anchorPoint = t0;
      this.child = t1;
      this.key = t2;
    },
    DisplayFeatureSubScreen_avoidBounds_closure: function DisplayFeatureSubScreen_avoidBounds_closure() {
    },
    DisplayFeatureSubScreen_avoidBounds_closure0: function DisplayFeatureSubScreen_avoidBounds_closure0() {
    },
    PopupRoute: function PopupRoute() {
    },
    RawDialogRoute: function RawDialogRoute() {
    },
    DialogTheme_of(context) {
      var dialogTheme = context.dependOnInheritedWidgetOfExactType$1$0(type$.DialogTheme),
        t1 = dialogTheme == null ? null : dialogTheme.get$data(0);
      return t1 == null ? D.Theme_of(context).dialogTheme : t1;
    }
  },
  F, L, D, M, E, N, O, G, H, I, P, K, Q;
  J = holdersList[1];
  B = holdersList[0];
  C = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[76], A);
  F = holdersList[229];
  L = holdersList[124];
  D = holdersList[128];
  M = holdersList[126];
  E = holdersList[138];
  N = holdersList[90];
  O = holdersList[162];
  G = holdersList[129];
  H = holdersList[96];
  I = holdersList[115];
  P = holdersList[211];
  K = holdersList[84];
  Q = holdersList[140];
  A.DialogRoute.prototype = {
    buildTransitions$4(context, animation, secondaryAnimation, child) {
      var t2,
        t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      t1 = this._dialog$_curvedAnimation;
      t2 = t1 == null;
      if ((t2 ? null : t1.parent) !== animation) {
        if (!t2)
          t1.dispose$0();
        t1 = this._dialog$_curvedAnimation = G.CurvedAnimation$(P.Cubic_ts0, animation, null);
      }
      t1.toString;
      return new M.FadeTransition(t1, false, this.super$RawDialogRoute$buildTransitions(context, animation, secondaryAnimation, child), null);
    },
    dispose$0() {
      var t1 = this._dialog$_curvedAnimation;
      if (t1 != null)
        t1.dispose$0();
      this.super$TransitionRoute$dispose();
    }
  };
  A.DisplayFeatureSubScreen.prototype = {
    build$1(context) {
      var mediaQuery = B.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data,
        parentSize = mediaQuery.size,
        t1 = parentSize._dx,
        t2 = parentSize._dy,
        t3 = A.DisplayFeatureSubScreen__fallbackAnchorPoint(context),
        resolvedAnchorPoint = A.DisplayFeatureSubScreen__capOffset(t3, parentSize),
        closestSubScreen = A.DisplayFeatureSubScreen__closestToAnchorPoint(A.DisplayFeatureSubScreen_subScreensInBounds(new B.Rect(0, 0, 0 + t1, 0 + t2), A.DisplayFeatureSubScreen_avoidBounds(mediaQuery)), resolvedAnchorPoint);
      return new G.Padding(new B.EdgeInsets(closestSubScreen.left, closestSubScreen.top, t1 - closestSubScreen.right, t2 - closestSubScreen.bottom), B.MediaQuery$(this.child, mediaQuery.removeDisplayFeatures$1(closestSubScreen)), null);
    }
  };
  A.PopupRoute.prototype = {
    get$opaque() {
      return false;
    },
    get$maintainState() {
      return true;
    },
    get$allowSnapshotting() {
      return false;
    }
  };
  A.RawDialogRoute.prototype = {
    get$barrierDismissible() {
      return true;
    },
    get$barrierLabel() {
      return this._barrierLabel;
    },
    get$barrierColor() {
      return this._barrierColor;
    },
    get$transitionDuration(_) {
      return this._transitionDuration;
    },
    buildPage$3(context, animation, secondaryAnimation) {
      var _null = null,
        t1 = type$.Animation_double;
      t1 = this._pageBuilder.call$3(context, t1._as(animation), t1._as(secondaryAnimation));
      return new B.Semantics(B.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, true, false, false, new A.DisplayFeatureSubScreen(this.anchorPoint, t1, _null), _null);
    },
    buildTransitions$4(context, animation, secondaryAnimation, child) {
      var t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      return this._transitionBuilder.call$4(context, animation, secondaryAnimation, child);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["Widget(BuildContext,Animation<double>,Animation<double>)", "Widget(BuildContext,Animation<double>,Animation<double>,Widget)"]);
  A.DialogRoute_closure.prototype = {
    call$3(buildContext, animation, secondaryAnimation) {
      var t1, pageChild, dialog;
      type$.BuildContext._as(buildContext);
      t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      pageChild = new L.Builder(this.builder, null);
      dialog = new I._CaptureAll(this.themes._themes, pageChild, null);
      dialog = N.SafeArea$(true, dialog, null, true, C.EdgeInsets_0_0_0_0, true, true);
      return dialog;
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 0
  };
  A.DisplayFeatureSubScreen_avoidBounds_closure.prototype = {
    call$1(d) {
      var t1;
      type$.DisplayFeature._as(d);
      t1 = d.get$bounds(d).get$shortestSide().$gt(0, 0);
      if (!t1)
        d.get$state(d);
      return t1;
    },
    $signature: 121
  };
  A.DisplayFeatureSubScreen_avoidBounds_closure0.prototype = {
    call$1(d) {
      type$.DisplayFeature._as(d);
      return d.get$bounds(d);
    },
    $signature: 382
  };
  (function aliases() {
    var _ = A.RawDialogRoute.prototype;
    _.super$RawDialogRoute$buildTransitions = _.buildTransitions$4;
  })();
  (function installTearOffs() {
    var _static = hunkHelpers.installStaticTearOff;
    _static(A, "dialog___buildMaterialDialogTransitions$closure", 4, null, ["call$4"], ["_buildMaterialDialogTransitions"], 1, 0);
  })();
  (function inheritance() {
    var _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.PopupRoute, K.ModalRoute);
    _inherit(A.RawDialogRoute, A.PopupRoute);
    _inherit(A.DialogRoute, A.RawDialogRoute);
    _inheritMany(B.Closure, [A.DialogRoute_closure, A.DisplayFeatureSubScreen_avoidBounds_closure, A.DisplayFeatureSubScreen_avoidBounds_closure0]);
    _inherit(A.DisplayFeatureSubScreen, B.StatelessWidget);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"DialogRoute":{"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[]},"DisplayFeatureSubScreen":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PopupRoute":{"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[]},"RawDialogRoute":{"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[]}}'));
  B._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"PopupRoute":1,"RawDialogRoute":1}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Animation_double: findType("Animation<double>"),
      BuildContext: findType("BuildContext"),
      DialogTheme: findType("DialogTheme"),
      Directionality: findType("Directionality"),
      DisplayFeature: findType("DisplayFeature"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_Rect: findType("JSArray<Rect>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MediaQuery: findType("MediaQuery"),
      PopEntry_nullable_Object: findType("PopEntry<Object?>"),
      ValueNotifier_nullable_String: findType("ValueNotifier<String?>")
    };
  })();
  (function constants() {
    F.Offset_bcQ = new B.Offset(17976931348623157e292, 0);
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_116", e: "endPart", h: h});
})($__dart_deferred_initializers__, "/Nib+4SC3u2dUMj3mNJPs8eRjnI=");
;
//# sourceMappingURL=main.dart.js_116.part.js.map
