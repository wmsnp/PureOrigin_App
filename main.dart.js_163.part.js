// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_163", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, C, H, A_, V, A7, A8, A9, Aa,
  A = {ListDiffDelegate: function ListDiffDelegate() {
    }, ListDiffDelegate_closure: function ListDiffDelegate_closure(t0) {
      this.T = t0;
    },
    _diagonalComparator(o1, o2) {
      var t1 = type$._Diagonal;
      return t1._as(o1).x - t1._as(o2).x;
    },
    calculateDiff(cb, detectMoves, $T) {
      var t4, t5, $forward, backward, rangePool, range, snake, t6, t7, left, first,
        t1 = cb.oldList,
        oldSize = t1.length,
        t2 = cb.newList,
        newSize = t2.length,
        diagonals = B._setArrayType([], type$.JSArray__Diagonal),
        t3 = type$.JSArray__Range,
        stack = B._setArrayType([], t3);
      C.JSArray_methods.add$1(stack, new A._Range(0, oldSize, 0, newSize));
      t4 = C.JSInt_methods._tdivFast$1(oldSize + newSize + 1, 2) * 2 + 1;
      t5 = C.JSInt_methods._tdivFast$1(t4, 2);
      $forward = new A._CenteredArray(new Int32Array(t4), t5);
      backward = new A._CenteredArray(new Int32Array(t4), t5);
      rangePool = B._setArrayType([], t3);
      for (; t3 = stack.length, t3 !== 0;) {
        if (0 >= t3)
          return B.ioore(stack, -1);
        range = stack.pop();
        snake = A.midPoint(range, cb, $forward, backward);
        if (snake != null) {
          t3 = snake.endX;
          t4 = snake.startX;
          t5 = snake.endY;
          t6 = snake.startY;
          if (Math.min(t3 - t4, t5 - t6) > 0)
            C.JSArray_methods.add$1(diagonals, snake.toDiagonal$0());
          t7 = rangePool.length;
          left = t7 === 0 ? new A._Range(0, 0, 0, 0) : C.JSArray_methods.removeAt$1(rangePool, t7 - 1);
          left.oldListStart = range.oldListStart;
          left.newListStart = range.newListStart;
          left.oldListEnd = t4;
          left.newListEnd = t6;
          C.JSArray_methods.add$1(stack, left);
          range.oldListStart = t3;
          range.newListStart = t5;
          C.JSArray_methods.add$1(stack, range);
        } else
          C.JSArray_methods.add$1(rangePool, range);
      }
      C.JSArray_methods.sort$1(diagonals, A.diffutil_impl___diagonalComparator$closure());
      t3 = $forward.data;
      t4 = backward.data;
      t1 = t1.length;
      t2 = t2.length;
      t5 = new A.DiffResult(diagonals, t3, t4, cb, t1, t2, true, $T._eval$1("DiffResult<0>"));
      if (!C.NativeInt32List_methods.get$isEmpty(t3))
        C.NativeInt32List_methods.fillRange$3(t3, 0, t3.length - 1, 0);
      if (!C.NativeInt32List_methods.get$isEmpty(t4))
        C.NativeInt32List_methods.fillRange$3(t4, 0, t4.length - 1, 0);
      t3 = diagonals.length;
      if (t3 === 0)
        first = null;
      else {
        if (0 >= t3)
          return B.ioore(diagonals, 0);
        first = diagonals[0];
      }
      if (first == null || first.x !== 0 || first.y !== 0)
        C.JSArray_methods.insert$2(diagonals, 0, new A._Diagonal(0, 0, 0));
      C.JSArray_methods.add$1(diagonals, new A._Diagonal(t1, t2, 0));
      t5._findMatchingItems$0();
      return t5;
    },
    midPoint(range, cb, $forward, backward) {
      var max, t4, d, snake,
        t1 = range.oldListEnd,
        t2 = range.oldListStart,
        t3 = t1 - t2;
      if (t3 < 1 || range.newListEnd - range.newListStart < 1)
        return null;
      max = C.JSInt_methods._tdivFast$1(t3 + (range.newListEnd - range.newListStart) + 1, 2);
      t3 = $forward.data;
      t4 = $forward._mid + 1;
      t3.$flags & 2 && B.throwUnsupportedOperation(t3);
      if (!(t4 < t3.length))
        return B.ioore(t3, t4);
      t3[t4] = t2;
      t2 = backward.data;
      t4 = backward._mid + 1;
      t2.$flags & 2 && B.throwUnsupportedOperation(t2);
      if (!(t4 < t2.length))
        return B.ioore(t2, t4);
      t2[t4] = t1;
      for (d = 0; d < max; ++d) {
        snake = A.forwardSnake(range, cb, $forward, backward, d);
        if (snake != null)
          return snake;
        snake = A.backwardSnake(range, cb, $forward, backward, d);
        if (snake != null)
          return snake;
      }
      return null;
    },
    forwardSnake(range, cb, $forward, backward, d) {
      var k, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, k0, t14, t15, startX, x, y, startY, backwardsK,
        t1 = range.oldListEnd - range.oldListStart - (range.newListEnd - range.newListStart),
        checkForSnake = C.JSInt_methods.$mod(Math.abs(t1), 2) === 1;
      for (k = -d, t2 = $forward.data, t3 = $forward._mid, t4 = t2.$flags | 0, t5 = cb.oldList, t6 = cb.newList, t7 = d !== 0, t8 = t2.length, t9 = k + 1, t10 = d - 1, t11 = backward.data, t12 = backward._mid, t13 = t11.length, k0 = k; k0 <= d; k0 += 2) {
        if (k0 !== k)
          if (k0 !== d) {
            t14 = t3 + (k0 + 1);
            if (!(t14 >= 0 && t14 < t8))
              return B.ioore(t2, t14);
            t14 = t2[t14];
            t15 = t3 + (k0 - 1);
            if (!(t15 >= 0 && t15 < t8))
              return B.ioore(t2, t15);
            t15 = t14 > t2[t15];
            t14 = t15;
          } else
            t14 = false;
        else
          t14 = true;
        if (t14) {
          t14 = t3 + (k0 + 1);
          if (!(t14 >= 0 && t14 < t8))
            return B.ioore(t2, t14);
          startX = t2[t14];
          x = startX;
        } else {
          t14 = t3 + (k0 - 1);
          if (!(t14 >= 0 && t14 < t8))
            return B.ioore(t2, t14);
          startX = t2[t14];
          x = startX + 1;
        }
        y = range.newListStart + (x - range.oldListStart) - k0;
        startY = !t7 || x !== startX ? y : y - 1;
        while (true) {
          t14 = false;
          if (x < range.oldListEnd)
            if (y < range.newListEnd) {
              if (!(x >= 0 && x < t5.length))
                return B.ioore(t5, x);
              t14 = t5[x];
              t14 = t14.get$id(t14);
              if (!(y >= 0 && y < t6.length))
                return B.ioore(t6, y);
              t15 = t6[y];
              t15 = t14 === t15.get$id(t15);
              t14 = t15;
            }
          if (!t14)
            break;
          ++x;
          ++y;
        }
        t14 = t3 + k0;
        t4 & 2 && B.throwUnsupportedOperation(t2);
        if (!(t14 >= 0 && t14 < t8))
          return B.ioore(t2, t14);
        t2[t14] = x;
        if (checkForSnake) {
          backwardsK = t1 - k0;
          t14 = false;
          if (backwardsK >= t9)
            if (backwardsK <= t10) {
              t14 = t12 + backwardsK;
              if (!(t14 >= 0 && t14 < t13))
                return B.ioore(t11, t14);
              t14 = t11[t14] <= x;
            }
          if (t14)
            return new A._Snake(startX, startY, x, y, false);
        }
      }
      return null;
    },
    backwardSnake(range, cb, $forward, backward, d) {
      var k, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, k0, t12, t13, startX, x, y, startY, forwardsK,
        t1 = range.oldListEnd - range.oldListStart - (range.newListEnd - range.newListStart),
        checkForSnake = C.JSInt_methods.$mod(t1, 2) === 0;
      for (k = -d, t2 = backward.data, t3 = backward._mid, t4 = t2.$flags | 0, t5 = cb.oldList, t6 = cb.newList, t7 = d !== 0, t8 = t2.length, t9 = $forward.data, t10 = $forward._mid, t11 = t9.length, k0 = k; k0 <= d; k0 += 2) {
        if (k0 !== k)
          if (k0 !== d) {
            t12 = t3 + (k0 + 1);
            if (!(t12 >= 0 && t12 < t8))
              return B.ioore(t2, t12);
            t12 = t2[t12];
            t13 = t3 + (k0 - 1);
            if (!(t13 >= 0 && t13 < t8))
              return B.ioore(t2, t13);
            t13 = t12 < t2[t13];
            t12 = t13;
          } else
            t12 = false;
        else
          t12 = true;
        if (t12) {
          t12 = t3 + (k0 + 1);
          if (!(t12 >= 0 && t12 < t8))
            return B.ioore(t2, t12);
          startX = t2[t12];
          x = startX;
        } else {
          t12 = t3 + (k0 - 1);
          if (!(t12 >= 0 && t12 < t8))
            return B.ioore(t2, t12);
          startX = t2[t12];
          x = startX - 1;
        }
        y = range.newListEnd - (range.oldListEnd - x - k0);
        startY = !t7 || x !== startX ? y : y + 1;
        while (true) {
          t12 = false;
          if (x > range.oldListStart)
            if (y > range.newListStart) {
              t12 = x - 1;
              t13 = y - 1;
              if (!(t12 >= 0 && t12 < t5.length))
                return B.ioore(t5, t12);
              t12 = t5[t12];
              t12 = t12.get$id(t12);
              if (!(t13 >= 0 && t13 < t6.length))
                return B.ioore(t6, t13);
              t13 = t6[t13];
              t13 = t12 === t13.get$id(t13);
              t12 = t13;
            }
          if (!t12)
            break;
          --x;
          --y;
        }
        t12 = t3 + k0;
        t4 & 2 && B.throwUnsupportedOperation(t2);
        if (!(t12 >= 0 && t12 < t8))
          return B.ioore(t2, t12);
        t2[t12] = x;
        if (checkForSnake) {
          forwardsK = t1 - k0;
          t12 = false;
          if (forwardsK >= k)
            if (forwardsK <= d) {
              t12 = t10 + forwardsK;
              if (!(t12 >= 0 && t12 < t11))
                return B.ioore(t9, t12);
              t12 = t9[t12] >= x;
            }
          if (t12)
            return new A._Snake(x, y, startX, startY, true);
        }
      }
      return null;
    },
    _Snake: function _Snake(t0, t1, t2, t3, t4) {
      var _ = this;
      _.startX = t0;
      _.startY = t1;
      _.endX = t2;
      _.endY = t3;
      _.reverse = t4;
    },
    _Diagonal: function _Diagonal(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.size = t2;
    },
    _Range: function _Range(t0, t1, t2, t3) {
      var _ = this;
      _.oldListStart = t0;
      _.oldListEnd = t1;
      _.newListStart = t2;
      _.newListEnd = t3;
    },
    _CenteredArray: function _CenteredArray(t0, t1) {
      this.data = t0;
      this._mid = t1;
    },
    DiffResult: function DiffResult(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._mDiagonals = t0;
      _._mOldItemStatuses = t1;
      _._mNewItemStatuses = t2;
      _._mCallback = t3;
      _._mOldListSize = t4;
      _._mNewListSize = t5;
      _._mDetectMoves = t6;
      _.$ti = t7;
    },
    _PostponedUpdate: function _PostponedUpdate(t0, t1, t2) {
      this.posInOwnerList = t0;
      this.currentPos = t1;
      this.removal = t2;
    },
    DataInsert: function DataInsert(t0, t1, t2) {
      this.position = t0;
      this.data = t1;
      this.$ti = t2;
    },
    DataRemove: function DataRemove(t0, t1, t2) {
      this.position = t0;
      this.data = t1;
      this.$ti = t2;
    },
    DataChange: function DataChange(t0, t1, t2, t3) {
      var _ = this;
      _.position = t0;
      _.oldData = t1;
      _.newData = t2;
      _.$ti = t3;
    },
    DataMove: function DataMove(t0, t1, t2, t3) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.data = t2;
      _.$ti = t3;
    },
    _ActiveItem: function _ActiveItem(t0, t1, t2) {
      this.controller = t0;
      this.removedItemBuilder = t1;
      this.itemIndex = t2;
    },
    SliverAnimatedList: function SliverAnimatedList(t0, t1, t2, t3) {
      var _ = this;
      _.itemBuilder = t0;
      _.findChildIndexCallback = t1;
      _.initialItemCount = t2;
      _.key = t3;
    },
    SliverAnimatedListState: function SliverAnimatedListState(t0, t1, t2, t3) {
      var _ = this;
      _._incomingItems = t0;
      _._outgoingItems = t1;
      _._itemsCount = 0;
      _.TickerProviderStateMixin__tickers = t2;
      _.TickerProviderStateMixin__tickerModeNotifier = t3;
      _._framework$_element = _._widget = null;
    },
    _SliverAnimatedMultiBoxAdaptor: function _SliverAnimatedMultiBoxAdaptor() {
    },
    _SliverAnimatedMultiBoxAdaptorState: function _SliverAnimatedMultiBoxAdaptorState() {
    },
    _SliverAnimatedMultiBoxAdaptorState_insertItem_closure: function _SliverAnimatedMultiBoxAdaptorState_insertItem_closure(t0, t1) {
      this.$this = t0;
      this.incomingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_insertItem_closure0: function _SliverAnimatedMultiBoxAdaptorState_insertItem_closure0(t0, t1) {
      this.$this = t0;
      this.incomingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_removeItem_closure: function _SliverAnimatedMultiBoxAdaptorState_removeItem_closure(t0, t1) {
      this.$this = t0;
      this.outgoingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_removeItem_closure0: function _SliverAnimatedMultiBoxAdaptorState_removeItem_closure0(t0, t1) {
      this.$this = t0;
      this.outgoingItem = t1;
    },
    _SliverAnimatedMultiBoxAdaptorState_removeItem__closure: function _SliverAnimatedMultiBoxAdaptorState_removeItem__closure(t0) {
      this.$this = t0;
    },
    __SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin: function __SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin() {
    },
    MessageGroupStatus: function MessageGroupStatus(t0) {
      this.isFirst = t0;
    },
    MessagesGroupingMode: function MessagesGroupingMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    UserCache: function UserCache(t0, t1, t2) {
      var _ = this;
      _._user_cache$_cache = t0;
      _._accessOrder = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    Chat$(builders, chatController, currentUserId, onAttachmentTap, onMessageSend, resolveUser, theme) {
      return new A.Chat(currentUserId, resolveUser, chatController, builders, theme, onMessageSend, onAttachmentTap, null);
    },
    Chat: function Chat(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.currentUserId = t0;
      _.resolveUser = t1;
      _.chatController = t2;
      _.builders = t3;
      _.theme = t4;
      _.onMessageSend = t5;
      _.onAttachmentTap = t6;
      _.key = t7;
    },
    _ChatState: function _ChatState() {
      var _ = this;
      _.___ChatState__timeFormat_A = _.___ChatState__userCache_F = _.___ChatState__crossCache_F = _.___ChatState__builders_A = _.___ChatState__theme_A = $;
      _._framework$_element = _._widget = null;
    },
    _ChatState_build_closure: function _ChatState_build_closure(t0) {
      this.$this = t0;
    },
    _ChatState_build_closure0: function _ChatState_build_closure0() {
    },
    _ChatState_build_closure1: function _ChatState_build_closure1() {
    },
    __ChatState_State_WidgetsBindingObserver: function __ChatState_State_WidgetsBindingObserver() {
    },
    InitialScrollToEndMode: function InitialScrollToEndMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ChatAnimatedList: function ChatAnimatedList(t0, t1) {
      this.itemBuilder = t0;
      this.key = t1;
    },
    _ChatAnimatedListState: function _ChatAnimatedListState(t0, t1, t2, t3) {
      var _ = this;
      _._listKey = t0;
      _.___ChatAnimatedListState__operationsSubscription_F = _.___ChatAnimatedListState__oldListEmptyNotifier_A = _.___ChatAnimatedListState__oldList_A = _.___ChatAnimatedListState__scrollController_F = _.___ChatAnimatedListState__observerController_F = _.___ChatAnimatedListState__chatController_F = $;
      _._operationsQueue = t1;
      _._isProcessingOperations = false;
      _.___ChatAnimatedListState__scrollToBottomAnimation_F = _.___ChatAnimatedListState__scrollToBottomController_F = _.___ChatAnimatedListState__scrollAnimationController_F = $;
      _._scrollToBottomShowTimer = null;
      _._isScrollingToBottom = _._userHasScrolled = false;
      _.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = $;
      _._lastInsertedMessageId = "";
      _._paginationShouldTrigger = false;
      _.TickerProviderStateMixin__tickers = t2;
      _.TickerProviderStateMixin__tickerModeNotifier = t3;
      _._framework$_element = _._widget = null;
    },
    _ChatAnimatedListState_initState_closure: function _ChatAnimatedListState_initState_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_onKeyboardHeightChanged_closure: function _ChatAnimatedListState_onKeyboardHeightChanged_closure(t0, t1) {
      this.$this = t0;
      this.height = t1;
    },
    _ChatAnimatedListState_build_closure: function _ChatAnimatedListState_build_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_build_buildSlivers: function _ChatAnimatedListState_build_buildSlivers(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.context = t1;
      _.sliverAnimatedList = t2;
      _.builders = t3;
    },
    _ChatAnimatedListState_build_closure0: function _ChatAnimatedListState_build_closure0(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_build_closure1: function _ChatAnimatedListState_build_closure1(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState_build_closure2: function _ChatAnimatedListState_build_closure2(t0) {
      this.builders = t0;
    },
    _ChatAnimatedListState__scrollToEnd_closure: function _ChatAnimatedListState__scrollToEnd_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _ChatAnimatedListState__adjustInitialScrollPosition_closure: function _ChatAnimatedListState__adjustInitialScrollPosition_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__handleScrollToBottom_closure: function _ChatAnimatedListState__handleScrollToBottom_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__handleToggleScrollToBottom_closure: function _ChatAnimatedListState__handleToggleScrollToBottom_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__scrollToMessageId_closure: function _ChatAnimatedListState__scrollToMessageId_closure(t0) {
      this.messageId = t0;
    },
    _ChatAnimatedListState__scrollToIndex_closure: function _ChatAnimatedListState__scrollToIndex_closure(t0) {
      this.offset = t0;
    },
    _ChatAnimatedListState__scrollToIndex_closure0: function _ChatAnimatedListState__scrollToIndex_closure0(t0) {
      this.offset = t0;
    },
    _ChatAnimatedListState__onRemoved_closure: function _ChatAnimatedListState__onRemoved_closure(t0, t1, t2) {
      this.$this = t0;
      this.data = t1;
      this.position = t2;
    },
    _ChatAnimatedListState__onDiffUpdate_closure0: function _ChatAnimatedListState__onDiffUpdate_closure0(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__onDiffUpdate_closure2: function _ChatAnimatedListState__onDiffUpdate_closure2(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__onDiffUpdate_closure: function _ChatAnimatedListState__onDiffUpdate_closure(t0) {
      this.$this = t0;
    },
    _ChatAnimatedListState__onDiffUpdate_closure1: function _ChatAnimatedListState__onDiffUpdate_closure1(t0) {
      this.$this = t0;
    },
    __ChatAnimatedListState_State_TickerProviderStateMixin: function __ChatAnimatedListState_State_TickerProviderStateMixin() {
    },
    SliverSpacing: function SliverSpacing(t0, t1, t2, t3) {
      var _ = this;
      _.bottomPadding = t0;
      _.handleSafeArea = t1;
      _.onKeyboardHeightChanged = t2;
      _.key = t3;
    },
    _SliverSpacingState: function _SliverSpacingState(t0, t1, t2, t3) {
      var _ = this;
      _.KeyboardMixin__keyboardDebounceTimer = t0;
      _.KeyboardMixin__previousKeyboardHeight = t1;
      _.KeyboardMixin__initialSafeArea = t2;
      _.KeyboardMixin__initialized = t3;
      _._framework$_element = _._widget = null;
    },
    _SliverSpacingState_build_closure: function _SliverSpacingState_build_closure(t0, t1) {
      this.$this = t0;
      this.safeArea = t1;
    },
    __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure: function __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure(t0, t1, t2) {
      this.$this = t0;
      this.keyboardHeight = t1;
      this.pixelRatio = t2;
    },
    __SliverSpacingState_State_WidgetsBindingObserver: function __SliverSpacingState_State_WidgetsBindingObserver() {
    },
    __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin: function __SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin() {
    },
    ChatMessage: function ChatMessage(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.message = t0;
      _.index = t1;
      _.animation = t2;
      _.child = t3;
      _.isRemoved = t4;
      _.groupStatus = t5;
      _.key = t6;
    },
    ChatMessage_build_closure1: function ChatMessage_build_closure1(t0, t1, t2) {
      this.$this = t0;
      this.onMessageTap = t1;
      this.context = t2;
    },
    ChatMessage_build_closure: function ChatMessage_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.onMessageDoubleTap = t1;
      this.context = t2;
    },
    ChatMessage_build_closure0: function ChatMessage_build_closure0(t0, t1, t2) {
      this.$this = t0;
      this.onMessageLongPress = t1;
      this.context = t2;
    },
    _shouldGroupMessages(earlierDate, laterDate, groupingMode, timeoutInSeconds) {
      switch (groupingMode.index) {
        case 0:
          return C.JSInt_methods._tdivFast$1(laterDate.difference$1(earlierDate)._duration, 1000000) < timeoutInSeconds;
        case 1:
          return B.Primitives_getYear(earlierDate) === B.Primitives_getYear(laterDate) && B.Primitives_getMonth(earlierDate) === B.Primitives_getMonth(laterDate) && B.Primitives_getDay(earlierDate) === B.Primitives_getDay(laterDate) && B.Primitives_getHours(earlierDate) === B.Primitives_getHours(laterDate) && B.Primitives_getMinutes(earlierDate) === B.Primitives_getMinutes(laterDate);
        case 2:
          return B.Primitives_getYear(earlierDate) === B.Primitives_getYear(laterDate) && B.Primitives_getMonth(earlierDate) === B.Primitives_getMonth(laterDate) && B.Primitives_getDay(earlierDate) === B.Primitives_getDay(laterDate) && B.Primitives_getHours(earlierDate) === B.Primitives_getHours(laterDate);
        case 3:
          return B.Primitives_getYear(earlierDate) === B.Primitives_getYear(laterDate) && B.Primitives_getMonth(earlierDate) === B.Primitives_getMonth(laterDate) && B.Primitives_getDay(earlierDate) === B.Primitives_getDay(laterDate);
      }
    },
    ChatMessageInternal: function ChatMessageInternal(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.message = t0;
      _.index = t1;
      _.animation = t2;
      _.messagesGroupingMode = t3;
      _.messageGroupingTimeoutInSeconds = t4;
      _.isRemoved = t5;
      _.key = t6;
    },
    _ChatMessageInternalState: function _ChatMessageInternalState() {
      var _ = this;
      _.___ChatMessageInternalState__updatedMessage_A = _.___ChatMessageInternalState__operationsSubscription_A = $;
      _._framework$_element = _._widget = null;
    },
    _ChatMessageInternalState_initState_closure: function _ChatMessageInternalState_initState_closure(t0) {
      this.$this = t0;
    },
    _ChatMessageInternalState_initState__closure: function _ChatMessageInternalState_initState__closure(t0, t1) {
      this.$this = t0;
      this.event = t1;
    },
    Composer$(hintText, topWidget) {
      return new A.Composer(topWidget, hintText, null);
    },
    Composer: function Composer(t0, t1, t2) {
      this.topWidget = t0;
      this.hintText = t1;
      this.key = t2;
    },
    _ComposerState: function _ComposerState(t0) {
      var _ = this;
      _._composer$_key = t0;
      _.___ComposerState__hasTextNotifier_F = _.___ComposerState__focusNode_F = _.___ComposerState__textController_F = $;
      _._framework$_element = _._widget = null;
    },
    _ComposerState_initState_closure: function _ComposerState_initState_closure(t0) {
      this.$this = t0;
    },
    _ComposerState_didUpdateWidget_closure: function _ComposerState_didUpdateWidget_closure(t0) {
      this.$this = t0;
    },
    _ComposerState_build_closure: function _ComposerState_build_closure() {
    },
    _ComposerState_build_closure0: function _ComposerState_build_closure0(t0) {
      this.$this = t0;
    },
    _ComposerState_build_closure1: function _ComposerState_build_closure1(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    _ComposerState_build__closure: function _ComposerState_build__closure(t0) {
      this.$this = t0;
    },
    EmptyChatList: function EmptyChatList(t0) {
      this.key = t0;
    },
    _EmptyChatListState: function _EmptyChatListState(t0, t1) {
      var _ = this;
      _.___EmptyChatListState__opacityAnimation_A = _.___EmptyChatListState__controller_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework$_element = _._widget = null;
    },
    _EmptyChatListState_initState_closure: function _EmptyChatListState_initState_closure(t0) {
      this.$this = t0;
    },
    _EmptyChatListState_build_closure: function _EmptyChatListState_build_closure() {
    },
    __EmptyChatListState_State_SingleTickerProviderStateMixin: function __EmptyChatListState_State_SingleTickerProviderStateMixin() {
    },
    ScrollToBottom: function ScrollToBottom(t0, t1, t2) {
      this.animation = t0;
      this.onPressed = t1;
      this.key = t2;
    },
    ScrollToBottom_build_closure0: function ScrollToBottom_build_closure0() {
    },
    ScrollToBottom_build_closure: function ScrollToBottom_build_closure(t0, t1, t2) {
      this.$this = t0;
      this.bottomSafeArea = t1;
      this.theme = t2;
    },
    SimpleTextMessage: function SimpleTextMessage(t0, t1) {
      this.message = t0;
      this.key = t1;
    },
    SimpleTextMessage_build_closure: function SimpleTextMessage_build_closure() {
    },
    TimeAndStatus: function TimeAndStatus(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.time = t0;
      _.status = t1;
      _.showTime = t2;
      _.showStatus = t3;
      _.textStyle = t4;
      _.key = t5;
    },
    ComposerHeightNotifier: function ComposerHeightNotifier(t0) {
      var _ = this;
      _.ChangeNotifier__count = _._composer_height_notifier$_height = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    KeyboardMixin: function KeyboardMixin() {
    },
    LoadMoreNotifier: function LoadMoreNotifier(t0) {
      var _ = this;
      _._load_more_notifier$_height = 0;
      _._isLoading = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    MessageListDiff$(oldList, newList) {
      return new A.MessageListDiff(oldList, newList, new A.ListDiffDelegate_closure(type$.Message));
    },
    MessageListDiff: function MessageListDiff(t0, t1, t2) {
      this.oldList = t0;
      this.newList = t1;
      this.equalityChecker = t2;
    },
    SendButtonVisibilityMode: function SendButtonVisibilityMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    InputClearMode: function InputClearMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserveDisplayingChildModel: function ObserveDisplayingChildModel() {
    },
    ObserveDisplayingChildModelMixin: function ObserveDisplayingChildModelMixin() {
    },
    ObserveModel: function ObserveModel() {
    },
    ObserveScrollChildModel: function ObserveScrollChildModel(t0, t1) {
      this.size = t0;
      this.layoutOffset = t1;
    },
    ObservePrepareScrollToIndexModel: function ObservePrepareScrollToIndexModel(t0) {
      this.calculateTargetLayoutOffset = t0;
    },
    ObserverHandleContextsResultModel: function ObserverHandleContextsResultModel(t0, t1, t2) {
      this.changeResultModel = t0;
      this.changeResultMap = t1;
      this.$ti = t2;
    },
    ObserverIndexPositionModel: function ObserverIndexPositionModel(t0) {
      this.index = t0;
    },
    ObserverController: function ObserverController() {
    },
    ObserverControllerForNotification: function ObserverControllerForNotification() {
    },
    ObserverControllerForInfo: function ObserverControllerForInfo() {
    },
    ObserverControllerForScroll: function ObserverControllerForScroll() {
    },
    ObserverControllerForScroll__handleScrollToIndex_closure: function ObserverControllerForScroll__handleScrollToIndex_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.obj = t2;
      _.ctx = t3;
      _.completer = t4;
      _.index = t5;
      _.alignment = t6;
      _.padding = t7;
      _.duration = t8;
      _.curve = t9;
      _.offset = t10;
      _.onPrepareScrollToIndex = t11;
    },
    ObserverControllerForScroll__handleScrollToIndex_closure0: function ObserverControllerForScroll__handleScrollToIndex_closure0(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.obj = t2;
      _.ctx = t3;
      _.completer = t4;
      _.index = t5;
      _.alignment = t6;
      _.padding = t7;
      _.duration = t8;
      _.curve = t9;
      _.offset = t10;
      _.onPrepareScrollToIndex = t11;
    },
    ObserverControllerForScroll__handleScrollEnd_closure: function ObserverControllerForScroll__handleScrollEnd_closure(t0, t1, t2) {
      this.$this = t0;
      this.completer = t1;
      this.context = t2;
    },
    CommonOnceObserveNotificationResult: function CommonOnceObserveNotificationResult() {
    },
    ObserverAutoTriggerObserveType: function ObserverAutoTriggerObserveType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserverTriggerOnObserveType: function ObserverTriggerOnObserveType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserverRenderSliverType: function ObserverRenderSliverType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ObserverWidgetState$($C, $M, $N, $T) {
      return new A.ObserverWidgetState(B._setArrayType([], type$.JSArray_BuildContext), B.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, $M), new Z.LinkedList($M._eval$1("LinkedList<ObserverListenerEntry<0>>")), $C._eval$1("@<0>")._bind$1($M)._bind$1($N)._bind$1($T)._eval$1("ObserverWidgetState<1,2,3,4>"));
    },
    ObserverWidget: function ObserverWidget() {
    },
    ObserverWidgetState: function ObserverWidgetState(t0, t1, t2, t3) {
      var _ = this;
      _.targetSliverContexts = t0;
      _.lastResultMap = t1;
      _.innerCanHandleObserve = true;
      _.scopeContext = null;
      _.innerListeners = t2;
      _._framework$_element = _._widget = null;
      _.$ti = t3;
    },
    ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure: function ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure() {
    },
    ObserverWidgetState_build_closure: function ObserverWidgetState_build_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetState_build_closure0: function ObserverWidgetState_build_closure0(t0) {
      this.$this = t0;
    },
    ObserverWidgetState_build__closure: function ObserverWidgetState_build__closure(t0, t1) {
      this.$this = t0;
      this.isIgnoreInnerCanHandleObserve = t1;
    },
    ObserverWidgetState__setupSliverController_closure: function ObserverWidgetState__setupSliverController_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetState__setupSliverController_closure0: function ObserverWidgetState__setupSliverController_closure0(t0) {
      this.$this = t0;
    },
    ObserverWidgetState__setupSliverController_closure1: function ObserverWidgetState__setupSliverController_closure1(t0, t1, t2) {
      this.$this = t0;
      this.sliverController = t1;
      this.isInitState = t2;
    },
    ObserverWidgetState_fetchTargetSliverContexts_visitor: function ObserverWidgetState_fetchTargetSliverContexts_visitor(t0, t1) {
      this.$this = t0;
      this._ctxs = t1;
    },
    ObserverWidgetState__notifyListeners_closure: function ObserverWidgetState__notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ObserverWidgetScope: function ObserverWidgetScope(t0, t1, t2, t3, t4) {
      var _ = this;
      _.observerWidgetState = t0;
      _.onCreateElement = t1;
      _.child = t2;
      _.key = t3;
      _.$ti = t4;
    },
    ObserverWidgetTagManager: function ObserverWidgetTagManager(t0, t1, t2) {
      this._tagMap = t0;
      this.child = t1;
      this.key = t2;
    },
    ObserverWidgetObserveResultType: function ObserverWidgetObserveResultType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GridViewObserveDisplayingChildModel$(index, renderObject, sliverGrid, viewport) {
      return new A.GridViewObserveDisplayingChildModel(index, renderObject);
    },
    GridViewObserveDisplayingChildModel: function GridViewObserveDisplayingChildModel(t0, t1) {
      this.index = t0;
      this.renderObject = t1;
    },
    _GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin: function _GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin() {
    },
    GridViewObserveModel$(displayingChildModelList, displayingChildModelMap, firstGroupChildList, sliverGrid, viewport, visible) {
      return new A.GridViewObserveModel(firstGroupChildList, displayingChildModelList, displayingChildModelMap, displayingChildModelList);
    },
    GridViewObserveModel: function GridViewObserveModel(t0, t1, t2, t3) {
      var _ = this;
      _.firstGroupChildList = t0;
      _.displayingChildModelList = t1;
      _.displayingChildModelMap = t2;
      _.innerDisplayingChildModelList = t3;
    },
    ListViewObserveDisplayingChildModel$(index, renderObject, sliverList, viewport) {
      return new A.ListViewObserveDisplayingChildModel(index, renderObject);
    },
    ListViewObserveDisplayingChildModel: function ListViewObserveDisplayingChildModel(t0, t1) {
      this.index = t0;
      this.renderObject = t1;
    },
    _ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin: function _ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin() {
    },
    ListViewObserveModel$(displayingChildModelList, displayingChildModelMap, firstChild, sliverList, viewport, visible) {
      return new A.ListViewObserveModel(firstChild, displayingChildModelList, displayingChildModelMap, displayingChildModelList);
    },
    ListViewObserveModel: function ListViewObserveModel(t0, t1, t2, t3) {
      var _ = this;
      _.firstChild = t0;
      _.displayingChildModelList = t1;
      _.displayingChildModelMap = t2;
      _.innerDisplayingChildModelList = t3;
    },
    ObserverScrollNotification: function ObserverScrollNotification() {
    },
    ObserverScrollStartNotification: function ObserverScrollStartNotification() {
    },
    ObserverScrollInterruptionNotification: function ObserverScrollInterruptionNotification() {
    },
    ObserverScrollDecisionNotification: function ObserverScrollDecisionNotification() {
    },
    ObserverScrollEndNotification: function ObserverScrollEndNotification() {
    },
    SliverObserverHandleContextsResultModel: function SliverObserverHandleContextsResultModel(t0, t1, t2, t3) {
      var _ = this;
      _.observeViewportResultModel = t0;
      _.changeResultModel = t1;
      _.changeResultMap = t2;
      _.$ti = t3;
    },
    SliverViewportObserveDisplayingChildModel: function SliverViewportObserveDisplayingChildModel(t0, t1) {
      this.sliverContext = t0;
      this.sliver = t1;
    },
    SliverViewportObserveModel: function SliverViewportObserveModel(t0, t1, t2) {
      this.viewport = t0;
      this.firstChild = t1;
      this.displayingChildModelList = t2;
    },
    SliverObserverController: function SliverObserverController(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.ObserverControllerForNotification_innerDispatchOnceObserveCompleter = t0;
      _.ObserverControllerForScroll_cacheJumpIndexOffset = t1;
      _.ObserverControllerForScroll_initialIndexModel = t2;
      _.ObserverControllerForScroll_initialIndexModelBlock = t3;
      _.controller = t4;
      _.indexOffsetMap = t5;
      _.sliverContexts = t6;
      _.innerIsHandlingScroll = false;
      _.innerNeedOnceObserveCallBack = null;
    },
    _SliverObserverController_ObserverController_ObserverControllerForInfo: function _SliverObserverController_ObserverController_ObserverControllerForInfo() {
    },
    _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll: function _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll() {
    },
    _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification: function _SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification() {
    },
    ScrollViewOnceObserveNotificationResult: function ScrollViewOnceObserveNotificationResult(t0, t1) {
      this.type = t0;
      this.observeResult = t1;
    },
    SliverViewObserver: function SliverViewObserver(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14) {
      var _ = this;
      _.controller = t0;
      _.child = t1;
      _.tag = t2;
      _.sliverController = t3;
      _.sliverContexts = t4;
      _.onObserveAll = t5;
      _.onObserve = t6;
      _.leadingOffset = t7;
      _.dynamicLeadingOffset = t8;
      _.toNextOverPercent = t9;
      _.scrollNotificationPredicate = t10;
      _.autoTriggerObserveTypes = t11;
      _.triggerOnObserveType = t12;
      _.customHandleObserve = t13;
      _.key = t14;
    },
    MixViewObserverState: function MixViewObserverState(t0, t1, t2, t3) {
      var _ = this;
      _.lastViewportObserveResultModel = null;
      _.innerSliverListeners = t0;
      _.targetSliverContexts = t1;
      _.lastResultMap = t2;
      _.innerCanHandleObserve = true;
      _.scopeContext = null;
      _.innerListeners = t3;
      _._framework$_element = _._widget = null;
    },
    MixViewObserverState_handleObserveViewport_closure: function MixViewObserverState_handleObserveViewport_closure() {
    },
    MixViewObserverState__notifySliverListeners_closure: function MixViewObserverState__notifySliverListeners_closure(t0) {
      this.$this = t0;
    },
    binarySearch(sortedList, value, $T) {
      var min, mid, comp,
        max = sortedList.length;
      for (min = 0; min < max;) {
        mid = min + C.JSInt_methods._shrOtherPositive$1(max - min, 1);
        if (!(mid >= 0 && mid < sortedList.length))
          return B.ioore(sortedList, mid);
        comp = J.compareTo$1$ns(sortedList[mid], value);
        if (comp === 0)
          return mid;
        if (comp < 0)
          min = mid + 1;
        else
          max = mid;
      }
      return -1;
    },
    ListViewObserver_isSupportRenderSliverType(obj) {
      var objRuntimeTypeStr;
      if (obj == null)
        return false;
      if (obj instanceof G.RenderSliverList || type$.RenderSliverFixedExtentList._is(obj))
        return true;
      objRuntimeTypeStr = B._rtiToString(B.getRuntimeTypeOfDartObject(obj)._rti, null);
      return C.JSArray_methods.contains$1(B._setArrayType(["RenderSliverVariedExtentList"], type$.JSArray_String), objRuntimeTypeStr);
    },
    ObserverCore_handleListObserve(context, customOverlap, fetchLeadingOffset, toNextOverPercent) {
      var viewport, t1, scrollDirection, firstChild, offset, overlap, rawScrollViewOffset, scrollViewOffset, index, isNotFound, t2, t3, targetFirstChild, t4, nextChild, firstDisplayingChildIndex, firstDisplayingChildModel, displayingChildModelMap, displayingChildModelList, showingChildrenMaxOffset, displayingChild, displayingChildIndex, displayingChildModel, _null = null,
        _obj = A.ObserverUtils_findRenderObject(context);
      if (!(_obj instanceof G.RenderSliverMultiBoxAdaptor))
        return _null;
      viewport = A.ObserverUtils_findViewport(_obj);
      if (viewport == null)
        return _null;
      t1 = _obj._geometry;
      t1 = t1 == null ? _null : t1.visible;
      if (t1 !== true || type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent < 1e-10)
        return A.ListViewObserveModel$(B._setArrayType([], type$.JSArray_ListViewObserveDisplayingChildModel), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ListViewObserveDisplayingChildModel), _null, _obj, viewport, false);
      t1 = type$.SliverConstraints;
      scrollDirection = B.axisDirectionToAxis(t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).axisDirection);
      firstChild = _obj.ContainerRenderObjectMixin__firstChild;
      if (firstChild == null)
        return _null;
      offset = fetchLeadingOffset.call$0();
      if (offset == null)
        offset = 0;
      overlap = t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).overlap;
      rawScrollViewOffset = t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).scrollOffset + overlap;
      scrollViewOffset = rawScrollViewOffset + offset;
      index = type$.SliverMultiBoxAdaptorParentData._as(firstChild.parentData).index;
      if (index == null)
        index = 0;
      t2 = B._instanceType(_obj);
      t3 = t2._eval$1("ContainerRenderObjectMixin.0");
      t2 = t2._eval$1("ContainerRenderObjectMixin.1");
      targetFirstChild = firstChild;
      while (true) {
        isNotFound = true;
        if (!!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetFirstChild, toNextOverPercent)) {
          isNotFound = false;
          break;
        }
        ++index;
        t4 = t3._as(targetFirstChild).parentData;
        t4.toString;
        nextChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
        if (nextChild == null)
          break;
        if (!(nextChild instanceof G.RenderIndexedSemantics)) {
          t4 = t3._as(nextChild).parentData;
          t4.toString;
          nextChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
        }
        if (nextChild == null)
          break;
        targetFirstChild = nextChild;
      }
      if (isNotFound)
        return A.ListViewObserveModel$(B._setArrayType([], type$.JSArray_ListViewObserveDisplayingChildModel), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ListViewObserveDisplayingChildModel), _null, _obj, viewport, false);
      if (!(targetFirstChild instanceof G.RenderIndexedSemantics))
        return _null;
      firstDisplayingChildIndex = targetFirstChild._proxy_box$_index;
      firstDisplayingChildModel = A.ListViewObserveDisplayingChildModel$(firstDisplayingChildIndex, targetFirstChild, _obj, viewport);
      displayingChildModelMap = B.LinkedHashMap_LinkedHashMap$_literal([firstDisplayingChildIndex, firstDisplayingChildModel], type$.int, type$.ListViewObserveDisplayingChildModel);
      displayingChildModelList = B._setArrayType([firstDisplayingChildModel], type$.JSArray_ListViewObserveDisplayingChildModel);
      showingChildrenMaxOffset = rawScrollViewOffset + t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent - overlap;
      t1 = t3._as(targetFirstChild).parentData;
      t1.toString;
      displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      for (; A.ObserverUtils_isDisplayingChildInSliver(scrollDirection, scrollViewOffset, showingChildrenMaxOffset, displayingChild, toNextOverPercent);) {
        if (displayingChild == null)
          break;
        if (!(displayingChild instanceof G.RenderIndexedSemantics)) {
          t1 = t3._as(displayingChild).parentData;
          t1.toString;
          displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
          continue;
        }
        displayingChildIndex = displayingChild._proxy_box$_index;
        displayingChildModel = new A.ListViewObserveDisplayingChildModel(displayingChildIndex, displayingChild);
        C.JSArray_methods.add$1(displayingChildModelList, displayingChildModel);
        displayingChildModelMap.$indexSet(0, displayingChildIndex, displayingChildModel);
        t1 = t3._as(displayingChild).parentData;
        t1.toString;
        displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      }
      return A.ListViewObserveModel$(displayingChildModelList, displayingChildModelMap, firstDisplayingChildModel, _obj, viewport, true);
    },
    ObserverCore_handleGridObserve(context, customOverlap, fetchLeadingOffset, toNextOverPercent) {
      var viewport, t1, t2, scrollDirection, firstChild, offset, overlap, rawScrollViewOffset, scrollViewOffset, isNotFound, t3, targetFirstChild, t4, nextChild, firstDisplayingChildIndex, firstModel, displayingChildModelMap, firstGroupChildModelList, showingChildrenMaxOffset, targetChild, lastFirstGroupChildWidget, targetChildIndex, displayingChildModel, showingChildModelList, displayingChild, displayingChildIndex, _null = null,
        _obj = A.ObserverUtils_findRenderObject(context);
      if (!(_obj instanceof G.RenderSliverMultiBoxAdaptor))
        return _null;
      viewport = A.ObserverUtils_findViewport(_obj);
      if (viewport == null)
        return _null;
      t1 = _obj._geometry;
      t1 = t1 == null ? _null : t1.visible;
      if (t1 !== true || type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent < 1e-10) {
        t1 = type$.JSArray_GridViewObserveDisplayingChildModel;
        t2 = B._setArrayType([], t1);
        return A.GridViewObserveModel$(B._setArrayType([], t1), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.GridViewObserveDisplayingChildModel), t2, _obj, viewport, false);
      }
      t1 = type$.SliverConstraints;
      scrollDirection = B.axisDirectionToAxis(t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).axisDirection);
      firstChild = _obj.ContainerRenderObjectMixin__firstChild;
      if (firstChild == null)
        return _null;
      offset = fetchLeadingOffset.call$0();
      if (offset == null)
        offset = 0;
      overlap = t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).overlap;
      rawScrollViewOffset = t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).scrollOffset + overlap;
      scrollViewOffset = rawScrollViewOffset + offset;
      t2 = B._instanceType(_obj);
      t3 = t2._eval$1("ContainerRenderObjectMixin.0");
      t2 = t2._eval$1("ContainerRenderObjectMixin.1");
      targetFirstChild = firstChild;
      while (true) {
        if (!!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetFirstChild, toNextOverPercent)) {
          isNotFound = false;
          break;
        }
        t4 = t3._as(targetFirstChild).parentData;
        t4.toString;
        nextChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
        if (nextChild == null) {
          isNotFound = true;
          break;
        }
        targetFirstChild = nextChild;
      }
      if (isNotFound) {
        t1 = type$.JSArray_GridViewObserveDisplayingChildModel;
        t2 = B._setArrayType([], t1);
        return A.GridViewObserveModel$(B._setArrayType([], t1), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.GridViewObserveDisplayingChildModel), t2, _obj, viewport, false);
      }
      if (!(targetFirstChild instanceof G.RenderIndexedSemantics))
        return _null;
      firstDisplayingChildIndex = targetFirstChild._proxy_box$_index;
      firstModel = A.GridViewObserveDisplayingChildModel$(firstDisplayingChildIndex, targetFirstChild, _obj, viewport);
      t4 = type$.GridViewObserveDisplayingChildModel;
      displayingChildModelMap = B.LinkedHashMap_LinkedHashMap$_literal([firstDisplayingChildIndex, firstModel], type$.int, t4);
      firstGroupChildModelList = B._setArrayType([firstModel], type$.JSArray_GridViewObserveDisplayingChildModel);
      showingChildrenMaxOffset = rawScrollViewOffset + t1._as(B.RenderObject.prototype.get$constraints.call(_obj)).remainingPaintExtent - overlap;
      t1 = t3._as(targetFirstChild).parentData;
      t1.toString;
      targetChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      for (lastFirstGroupChildWidget = targetFirstChild; targetChild != null; targetChild = nextChild) {
        if (A.ObserverUtils_isReachOffsetWidgetInSliver(scrollDirection, Math.max(scrollViewOffset, firstModel.get$layoutOffset()), targetChild, toNextOverPercent)) {
          if (!(targetChild instanceof G.RenderIndexedSemantics))
            break;
          targetChildIndex = targetChild._proxy_box$_index;
          displayingChildModel = new A.GridViewObserveDisplayingChildModel(targetChildIndex, targetChild);
          C.JSArray_methods.add$1(firstGroupChildModelList, displayingChildModel);
          displayingChildModelMap.$indexSet(0, targetChildIndex, displayingChildModel);
          lastFirstGroupChildWidget = targetChild;
        }
        t1 = t3._as(targetChild).parentData;
        t1.toString;
        nextChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
        if (nextChild == null)
          break;
      }
      showingChildModelList = B.List_List$from(firstGroupChildModelList, true, t4);
      t1 = t3._as(lastFirstGroupChildWidget).parentData;
      t1.toString;
      displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      for (; displayingChild != null;) {
        if (A.ObserverUtils_isDisplayingChildInSliver(scrollDirection, scrollViewOffset, showingChildrenMaxOffset, displayingChild, toNextOverPercent)) {
          if (!(displayingChild instanceof G.RenderIndexedSemantics))
            continue;
          displayingChildIndex = displayingChild._proxy_box$_index;
          displayingChildModel = new A.GridViewObserveDisplayingChildModel(displayingChildIndex, displayingChild);
          C.JSArray_methods.add$1(showingChildModelList, displayingChildModel);
          displayingChildModelMap.$indexSet(0, displayingChildIndex, displayingChildModel);
        }
        t1 = t3._as(displayingChild).parentData;
        t1.toString;
        displayingChild = t2._as(t1).ContainerParentDataMixin_nextSibling;
      }
      return A.GridViewObserveModel$(showingChildModelList, displayingChildModelMap, firstGroupChildModelList, _obj, viewport, true);
    },
    ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent) {
      var targetFirstChildSize, parentData, targetFirstChildOffset, exception, t1;
      if (targetChild._box$_size == null)
        return false;
      parentData = targetChild.parentData;
      if (!(parentData instanceof G.SliverMultiBoxAdaptorParentData))
        return false;
      targetFirstChildOffset = parentData.layoutOffset;
      if (targetFirstChildOffset == null)
        targetFirstChildOffset = 0;
      targetFirstChildSize = null;
      try {
        targetFirstChildSize = scrollDirection === C.Axis_1 ? targetChild.get$size(0)._dy : targetChild.get$size(0)._dx;
      } catch (exception) {
        return false;
      }
      t1 = targetFirstChildSize;
      if (typeof t1 !== "number")
        return t1.$mul();
      return scrollViewOffset < t1 * toNextOverPercent + targetFirstChildOffset;
    },
    ObserverUtils_isReachOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent) {
      var parentData, targetFirstChildOffset;
      if (!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent))
        return false;
      parentData = targetChild.parentData;
      if (!(parentData instanceof G.SliverMultiBoxAdaptorParentData))
        return false;
      targetFirstChildOffset = parentData.layoutOffset;
      return scrollViewOffset >= (targetFirstChildOffset == null ? 0 : targetFirstChildOffset);
    },
    ObserverUtils_isDisplayingChildInSliver(scrollDirection, scrollViewOffset, showingChildrenMaxOffset, targetChild, toNextOverPercent) {
      var parentData, targetChildLayoutOffset;
      if (targetChild == null)
        return false;
      if (!A.ObserverUtils_isBelowOffsetWidgetInSliver(scrollDirection, scrollViewOffset, targetChild, toNextOverPercent))
        return false;
      parentData = targetChild.parentData;
      if (!(parentData instanceof G.SliverMultiBoxAdaptorParentData))
        return false;
      targetChildLayoutOffset = parentData.layoutOffset;
      return (targetChildLayoutOffset == null ? 0 : targetChildLayoutOffset) < showingChildrenMaxOffset;
    },
    ObserverUtils_findViewport(obj) {
      var currentCycleCount,
        $parent = obj.get$parent(obj);
      if (!($parent instanceof B.RenderObject))
        return null;
      currentCycleCount = 1;
      while (true) {
        if (!($parent != null && currentCycleCount <= 10))
          break;
        if ($parent instanceof G.RenderViewportBase)
          return $parent;
        $parent = $parent.get$parent($parent);
        ++currentCycleCount;
      }
      return null;
    },
    ObserverUtils_isBelowOffsetSliverInViewport(sliver, viewportPixels) {
      var t1 = type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(sliver)),
        t2 = sliver._geometry,
        size = t2 == null ? null : t2.maxPaintExtent;
      if (size == null)
        size = 0;
      return viewportPixels <= t1.precedingScrollExtent + size;
    },
    ObserverUtils_isDisplayingSliverInViewport(sliver, viewportBottomOffset, viewportPixels) {
      var t1 = sliver._geometry;
      t1 = t1 == null ? null : t1.visible;
      if (t1 !== true)
        return false;
      if (!A.ObserverUtils_isBelowOffsetSliverInViewport(sliver, viewportPixels))
        return false;
      return type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(sliver)).precedingScrollExtent < viewportBottomOffset;
    },
    ObserverUtils_findRenderObject(context) {
      var exception,
        t1 = context._widget;
      if (t1 == null)
        return null;
      try {
        t1 = context.get$renderObject();
        return t1;
      } catch (exception) {
        return null;
      }
    }
  },
  D, A0, Q, W, M, A1, R, A2, Ab, Ac, Ad, Ae, A3, Af, O, A4, Ag, K, P, N, A5, Ah, E, X, Ai, Aj, Ak, F, Y, Al, S, Am, I, L, T, A6, U, Z, G;
  J = holdersList[1];
  B = holdersList[0];
  C = holdersList[2];
  H = holdersList[124];
  A_ = holdersList[56];
  V = holdersList[132];
  A7 = holdersList[78];
  A8 = holdersList[46];
  A9 = holdersList[108];
  Aa = holdersList[90];
  A = hunkHelpers.updateHolder(holdersList[12], A);
  D = holdersList[202];
  A0 = holdersList[33];
  Q = holdersList[18];
  W = holdersList[131];
  M = holdersList[37];
  A1 = holdersList[203];
  R = holdersList[47];
  A2 = holdersList[42];
  Ab = holdersList[53];
  Ac = holdersList[26];
  Ad = holdersList[129];
  Ae = holdersList[204];
  A3 = holdersList[120];
  Af = holdersList[149];
  O = holdersList[130];
  A4 = holdersList[141];
  Ag = holdersList[101];
  K = holdersList[150];
  P = holdersList[144];
  N = holdersList[135];
  A5 = holdersList[133];
  Ah = holdersList[119];
  E = holdersList[145];
  X = holdersList[111];
  Ai = holdersList[146];
  Aj = holdersList[114];
  Ak = holdersList[172];
  F = holdersList[136];
  Y = holdersList[91];
  Al = holdersList[197];
  S = holdersList[126];
  Am = holdersList[169];
  I = holdersList[168];
  L = holdersList[137];
  T = holdersList[121];
  A6 = holdersList[106];
  U = holdersList[193];
  Z = holdersList[96];
  G = holdersList[98];
  A.ListDiffDelegate.prototype = {$isDiffDelegate: 1, $isIndexableItemDiffDelegate: 1};
  A._Snake.prototype = {
    diagonalSize$0() {
      var _this = this;
      return Math.min(_this.endX - _this.startX, _this.endY - _this.startY);
    },
    toDiagonal$0() {
      var _this = this,
        t1 = _this.startY,
        t2 = _this.endY - t1,
        t3 = _this.startX,
        t4 = _this.endX - t3;
      if (t2 !== t4)
        if (_this.reverse)
          return new A._Diagonal(t3, t1, _this.diagonalSize$0());
        else if (t2 > t4)
          return new A._Diagonal(t3, t1 + 1, _this.diagonalSize$0());
        else
          return new A._Diagonal(t3 + 1, t1, _this.diagonalSize$0());
      else
        return new A._Diagonal(t3, t1, t4);
    }
  };
  A._Diagonal.prototype = {};
  A._Range.prototype = {};
  A._CenteredArray.prototype = {
    $index(_, index) {
      var t1 = this.data,
        t2 = this._mid + B._asInt(index);
      if (!(t2 >= 0 && t2 < t1.length))
        return B.ioore(t1, t2);
      return t1[t2];
    },
    $indexSet(_, index, value) {
      var t1, t2;
      B._asInt(index);
      B._asInt(value);
      t1 = this.data;
      t2 = this._mid + index;
      t1.$flags & 2 && B.throwUnsupportedOperation(t1);
      if (!(t2 >= 0 && t2 < t1.length))
        return B.ioore(t1, t2);
      t1[t2] = value;
    }
  };
  A.DiffResult.prototype = {
    _findMatchingItems$0() {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, _i, diagonal, t10, t11, t12, offset, posX, posY, t13, changeFlag, _this = this;
      for (t1 = _this._mDiagonals, t2 = t1.length, t3 = _this._mOldItemStatuses, t4 = t3.$flags | 0, t5 = _this._mNewItemStatuses, t6 = t5.$flags | 0, t7 = _this._mCallback, t8 = t7.oldList, t9 = t7.newList, t7 = t7.equalityChecker, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        diagonal = t1[_i];
        for (t10 = diagonal.size, t11 = diagonal.x, t12 = diagonal.y, offset = 0; offset < t10; ++offset) {
          posX = t11 + offset;
          posY = t12 + offset;
          if (!(posX >= 0 && posX < t8.length))
            return B.ioore(t8, posX);
          t13 = t8[posX];
          if (!(posY >= 0 && posY < t9.length))
            return B.ioore(t9, posY);
          changeFlag = t7.call$2(t13, t9[posY]) ? 1 : 2;
          t4 & 2 && B.throwUnsupportedOperation(t3);
          if (!(posX < t3.length))
            return B.ioore(t3, posX);
          t3[posX] = (posY << 4 | changeFlag) >>> 0;
          t6 & 2 && B.throwUnsupportedOperation(t5);
          if (!(posY < t5.length))
            return B.ioore(t5, posY);
          t5[posY] = (posX << 4 | changeFlag) >>> 0;
        }
      }
      _this._findMoveMatches$0();
    },
    _findMoveMatches$0() {
      var t1, t2, t3, t4, posX, _i, diagonal, t5;
      for (t1 = this._mDiagonals, t2 = t1.length, t3 = this._mOldItemStatuses, t4 = t3.length, posX = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        diagonal = t1[_i];
        for (t5 = diagonal.x; posX < t5;) {
          if (!(posX >= 0 && posX < t4))
            return B.ioore(t3, posX);
          if (t3[posX] === 0)
            this._findMatchingAddition$1(posX);
          ++posX;
        }
        posX = t5 + diagonal.size;
      }
    },
    _findMatchingAddition$1(posX) {
      var t2, t3, t4, t5, t6, posY, i, diagonal, t7, t8, t9, changeFlag, _this = this,
        t1 = _this._mDiagonals,
        diagonalsSize = t1.length;
      for (t2 = _this._mNewItemStatuses, t3 = t2.length, t4 = _this._mCallback, t5 = t4.oldList, t6 = t4.newList, posY = 0, i = 0; i < diagonalsSize; ++i) {
        if (!(i < t1.length))
          return B.ioore(t1, i);
        diagonal = t1[i];
        for (t7 = diagonal.y; posY < t7;) {
          if (!(posY >= 0 && posY < t3))
            return B.ioore(t2, posY);
          if (t2[posY] === 0) {
            if (!(posX >= 0 && posX < t5.length))
              return B.ioore(t5, posX);
            t8 = t5[posX];
            t8 = t8.get$id(t8);
            if (!(posY < t6.length))
              return B.ioore(t6, posY);
            t9 = t6[posY];
            if (t8 === t9.get$id(t9)) {
              if (!(posX < t5.length))
                return B.ioore(t5, posX);
              t1 = t5[posX];
              if (!(posY < t6.length))
                return B.ioore(t6, posY);
              changeFlag = t4.equalityChecker.call$2(t1, t6[posY]) ? 8 : 4;
              t1 = _this._mOldItemStatuses;
              t1.$flags & 2 && B.throwUnsupportedOperation(t1);
              if (!(posX < t1.length))
                return B.ioore(t1, posX);
              t1[posX] = (posY << 4 | changeFlag) >>> 0;
              t2.$flags & 2 && B.throwUnsupportedOperation(t2);
              t2[posY] = (posX << 4 | changeFlag) >>> 0;
              return;
            }
          }
          ++posY;
        }
        posY = t7 + diagonal.size;
      }
    },
    getUpdatesWithData$0() {
      var updates, currentListSize, postponedUpdates, posY, t2, diagonalIndex, t3, t4, t5, t6, t7, t8, t9, t10, t11, posX, diagonal, posX0, t12, endX, posY0, endY, $status, item, newPos, postponedUpdate, t13, oldPos, i, _this = this,
        delegate = _this._mCallback,
        t1 = _this.$ti;
      if (!t1._eval$1("IndexableItemDiffDelegate<1>")._is(delegate))
        throw B.wrapException(B.Exception_Exception(delegate.toString$0(0) + " is not a IndexableItemDiffDelegate<" + B.createRuntimeType(t1._precomputed1).toString$0(0) + ">. call getUpdates() instead or implement IndexableItemDiffDelegate in your DiffDelegate "));
      updates = B._setArrayType([], t1._eval$1("JSArray<DataDiffUpdate<1>>"));
      currentListSize = _this._mOldListSize;
      postponedUpdates = B._setArrayType([], type$.JSArray__PostponedUpdate);
      posY = _this._mNewListSize;
      for (t2 = _this._mDiagonals, diagonalIndex = t2.length - 1, t3 = _this._mOldItemStatuses, t4 = t3.length, t5 = delegate.oldList, t6 = delegate.newList, t7 = t1._eval$1("DataChange<1>"), t8 = t1._eval$1("DataInsert<1>"), t9 = _this._mNewItemStatuses, t10 = t9.length, t11 = t1._eval$1("DataMove<1>"), t1 = t1._eval$1("DataRemove<1>"), posX = currentListSize; diagonalIndex >= 0; --diagonalIndex, posY = posY0, posX = posX0) {
        if (!(diagonalIndex < t2.length))
          return B.ioore(t2, diagonalIndex);
        diagonal = t2[diagonalIndex];
        posX0 = diagonal.x;
        t12 = diagonal.size;
        endX = posX0 + t12;
        posY0 = diagonal.y;
        endY = posY0 + t12;
        for (; posX > endX;) {
          --posX;
          if (!(posX >= 0 && posX < t4))
            return B.ioore(t3, posX);
          $status = t3[posX];
          if (!(posX < t5.length))
            return B.ioore(t5, posX);
          item = t5[posX];
          if (($status & 12) !== 0) {
            newPos = C.JSInt_methods._shrOtherPositive$1($status, 4);
            postponedUpdate = _this.getPostponedUpdate$3(postponedUpdates, newPos, false);
            if (postponedUpdate != null) {
              t13 = currentListSize - postponedUpdate.currentPos - 1;
              C.JSArray_methods.add$1(updates, new A.DataMove(posX, t13, item, t11));
              if (($status & 4) !== 0) {
                if (!(newPos < t6.length))
                  return B.ioore(t6, newPos);
                C.JSArray_methods.add$1(updates, new A.DataChange(t13, item, t6[newPos], t7));
              }
            } else
              C.JSArray_methods.add$1(postponedUpdates, new A._PostponedUpdate(posX, currentListSize - posX - 1, true));
          } else {
            C.JSArray_methods.add$1(updates, new A.DataRemove(posX, item, t1));
            --currentListSize;
          }
        }
        for (; posY > endY;) {
          --posY;
          if (!(posY >= 0 && posY < t10))
            return B.ioore(t9, posY);
          $status = t9[posY];
          if (!(posY < t6.length))
            return B.ioore(t6, posY);
          item = t6[posY];
          if (($status & 12) !== 0) {
            oldPos = C.JSInt_methods._shrOtherPositive$1($status, 4);
            postponedUpdate = _this.getPostponedUpdate$3(postponedUpdates, oldPos, true);
            if (postponedUpdate == null)
              C.JSArray_methods.add$1(postponedUpdates, new A._PostponedUpdate(posY, currentListSize - posX, false));
            else {
              C.JSArray_methods.add$1(updates, new A.DataMove(currentListSize - postponedUpdate.currentPos - 1, posX, item, t11));
              if (($status & 4) !== 0) {
                if (!(oldPos < t5.length))
                  return B.ioore(t5, oldPos);
                C.JSArray_methods.add$1(updates, new A.DataChange(posX, t5[oldPos], item, t7));
              }
            }
          } else {
            C.JSArray_methods.add$1(updates, new A.DataInsert(posX, item, t8));
            ++currentListSize;
          }
        }
        for (posY = posY0, posX = posX0, i = 0; i < t12; ++i) {
          if (!(posX >= 0 && posX < t4))
            return B.ioore(t3, posX);
          if ((t3[posX] & 15) === 2) {
            if (!(posX < t5.length))
              return B.ioore(t5, posX);
            t13 = t5[posX];
            if (!(posY >= 0 && posY < t6.length))
              return B.ioore(t6, posY);
            C.JSArray_methods.add$1(updates, new A.DataChange(posX, t13, t6[posY], t7));
          }
          ++posX;
          ++posY;
        }
      }
      return updates;
    },
    getPostponedUpdate$3(postponedUpdates, posInList, removal) {
      var postponedUpdate, t1, i, update;
      type$.List__PostponedUpdate._as(postponedUpdates);
      t1 = postponedUpdates.length;
      i = 0;
      while (true) {
        if (!(i < t1)) {
          postponedUpdate = null;
          break;
        }
        update = postponedUpdates[i];
        if (update.posInOwnerList === posInList && update.removal === removal) {
          C.JSArray_methods.removeAt$1(postponedUpdates, i);
          postponedUpdate = update;
          break;
        }
        ++i;
      }
      for (; i < postponedUpdates.length;) {
        update = postponedUpdates[i];
        t1 = update.currentPos;
        if (removal)
          update.currentPos = t1 - 1;
        else
          update.currentPos = t1 + 1;
        ++i;
      }
      return postponedUpdate;
    }
  };
  A._PostponedUpdate.prototype = {};
  A.DataInsert.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataInsert && B.getRuntimeTypeOfDartObject(_this) === B.getRuntimeTypeOfDartObject(other) && _this.position === other.position && J.$eq$(_this.data, other.data);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (C.JSInt_methods.get$hashCode(this.position) ^ J.get$hashCode$(this.data)) >>> 0;
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var t1 = this.$ti._bind$1($S);
      t1._eval$1("1(int,2)")._as(insert);
      t1._eval$1("1(int,2)?")._as(remove);
      t1._eval$1("1(int,2,2)")._as(change);
      t1._eval$1("1(int,int,2)?")._as(move);
      return insert.call$2(this.position, this.data);
    },
    toString$0(_) {
      return "Insert{position: " + this.position + ", data: " + B.S(this.data) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.DataRemove.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataRemove && B.getRuntimeTypeOfDartObject(_this) === B.getRuntimeTypeOfDartObject(other) && _this.position === other.position && J.$eq$(_this.data, other.data);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (C.JSInt_methods.get$hashCode(this.position) ^ J.get$hashCode$(this.data)) >>> 0;
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var t1 = this.$ti._bind$1($S);
      t1._eval$1("1(int,2)?")._as(insert);
      t1._eval$1("1(int,2)")._as(remove);
      t1._eval$1("1(int,2,2)?")._as(change);
      t1._eval$1("1(int,int,2)?")._as(move);
      return remove.call$2(this.position, this.data);
    },
    toString$0(_) {
      return "Remove{position: " + this.position + ", data: " + B.S(this.data) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.DataChange.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataChange && B.getRuntimeTypeOfDartObject(_this) === B.getRuntimeTypeOfDartObject(other) && _this.position === other.position && J.$eq$(_this.oldData, other.oldData) && J.$eq$(_this.newData, other.newData);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return (C.JSInt_methods.get$hashCode(this.position) ^ J.get$hashCode$(this.newData)) >>> 0;
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var _this = this,
        t1 = _this.$ti._bind$1($S),
        t2 = t1._eval$1("1(int,2)");
      t2._as(insert);
      t2._as(remove);
      t1._eval$1("1(int,2,2)")._as(change);
      t1._eval$1("1(int,int,2)")._as(move);
      return change.call$3(_this.position, _this.oldData, _this.newData);
    },
    toString$0(_) {
      return "Change{position: " + this.position + ", old data: " + B.S(this.oldData) + ", new data: " + B.S(this.newData) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A.DataMove.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.DataMove && B.getRuntimeTypeOfDartObject(_this) === B.getRuntimeTypeOfDartObject(other) && _this.from === other.from && _this.to === other.to && J.$eq$(_this.data, other.data);
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return C.JSInt_methods.get$hashCode(this.from) ^ C.JSInt_methods.get$hashCode(this.to);
    },
    when$1$4$change$insert$move$remove(change, insert, move, remove, $S) {
      var _this = this,
        t1 = _this.$ti._bind$1($S),
        t2 = t1._eval$1("1(int,2)?");
      t2._as(insert);
      t2._as(remove);
      t1._eval$1("1(int,2,2)?")._as(change);
      return t1._eval$1("1(int,int,2)")._as(move).call$3(_this.from, _this.to, _this.data);
    },
    toString$0(_) {
      return "Move{from: " + this.from + ", to: " + this.to + ", data: " + B.S(this.data) + "}";
    },
    $isDataDiffUpdate: 1
  };
  A._ActiveItem.prototype = {
    compareTo$1(_, other) {
      type$._ActiveItem._as(other);
      return this.itemIndex - other.itemIndex;
    },
    $isComparable: 1
  };
  A.SliverAnimatedList.prototype = {
    createState$0() {
      var t1 = type$.JSArray__ActiveItem;
      return new A.SliverAnimatedListState(B._setArrayType([], t1), B._setArrayType([], t1), null, null);
    }
  };
  A.SliverAnimatedListState.prototype = {
    build$1(context) {
      return G.SliverList$(this._createDelegate$0());
    }
  };
  A._SliverAnimatedMultiBoxAdaptor.prototype = {
    itemBuilder$3(arg0, arg1, arg2) {
      return this.itemBuilder.call$3(arg0, arg1, arg2);
    }
  };
  A._SliverAnimatedMultiBoxAdaptorState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._itemsCount = this._widget.initialItemCount;
    },
    dispose$0() {
      var t1, t2, t3, value, result;
      for (t1 = this._incomingItems, t2 = B._arrayInstanceType(t1), t2 = B.FollowedByIterable_FollowedByIterable$firstEfficient(t1, t2._eval$1("Iterable<1>")._as(this._outgoingItems), t2._precomputed1), t2 = new B.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2.__internal$_second, B._instanceType(t2)._eval$1("FollowedByIterator<1>")); t2.moveNext$0();) {
        t1 = t2._currentIterator;
        t1 = t1.get$current(t1).controller;
        t1._ticker.dispose$0();
        t1._ticker = null;
        t3 = t1.AnimationLocalStatusListenersMixin__statusListeners;
        t3._isDirty = false;
        C.JSArray_methods.clear$0(t3._list);
        value = t3.__ObserverList__set_FI;
        if (value === $) {
          result = B.HashSet_HashSet(t3.$ti._precomputed1);
          t3.__ObserverList__set_FI !== $ && B.throwLateFieldADI("_set");
          t3.set$__ObserverList__set_FI(result);
          value = result;
        }
        if (value._collection$_length > 0) {
          value._collection$_strings = value._collection$_nums = value._collection$_rest = value._collection$_elements = null;
          value._collection$_length = 0;
        }
        t1.AnimationLocalListenersMixin__listeners._observer_list$_map.clear$0(0);
        t1.super$AnimationEagerListenerMixin$dispose();
      }
      this.super$__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin$dispose();
    },
    _removeActiveItemAt$2(items, itemIndex) {
      var i;
      type$.List__ActiveItem._as(items);
      i = A.binarySearch(items, new A._ActiveItem(null, null, itemIndex), type$._ActiveItem);
      return i === -1 ? null : C.JSArray_methods.removeAt$1(items, i);
    },
    _activeItemAt$2(items, itemIndex) {
      var i, t1;
      type$.List__ActiveItem._as(items);
      i = A.binarySearch(items, new A._ActiveItem(null, null, itemIndex), type$._ActiveItem);
      if (i === -1)
        t1 = null;
      else {
        if (!(i >= 0 && i < items.length))
          return B.ioore(items, i);
        t1 = items[i];
      }
      return t1;
    },
    _indexToItemIndex$1(index) {
      var t1, t2, itemIndex, _i;
      for (t1 = this._outgoingItems, t2 = t1.length, itemIndex = index, _i = 0; _i < t2; ++_i)
        if (t1[_i].itemIndex <= itemIndex)
          ++itemIndex;
        else
          break;
      return itemIndex;
    },
    _itemIndexToIndex$1(itemIndex) {
      var t1, t2, index, _i;
      for (t1 = this._outgoingItems, t2 = t1.length, index = itemIndex, _i = 0; _i < t2; ++_i)
        if (t1[_i].itemIndex < itemIndex)
          --index;
        else
          break;
      return index;
    },
    _createDelegate$0() {
      var t1 = this._itemsCount;
      this._widget.toString;
      return new G.SliverChildBuilderDelegate(this.get$_itemBuilder(), t1, true, true, true, G.scroll_delegate___kDefaultSemanticIndexCallback$closure(), null);
    },
    _itemBuilder$2(context, itemIndex) {
      var outgoingItem, t1, t2, incomingItem, animation, _this = this;
      type$.BuildContext._as(context);
      B._asInt(itemIndex);
      outgoingItem = _this._activeItemAt$2(_this._outgoingItems, itemIndex);
      if (outgoingItem != null) {
        t1 = outgoingItem.removedItemBuilder;
        t1.toString;
        t2 = outgoingItem.controller;
        t2.toString;
        return t1.call$2(context, t2);
      }
      incomingItem = _this._activeItemAt$2(_this._incomingItems, itemIndex);
      if (incomingItem == null)
        animation = null;
      else {
        t1 = incomingItem.controller;
        if (t1 == null)
          t1 = null;
        animation = t1;
      }
      if (animation == null)
        animation = E.C__AlwaysCompleteAnimation;
      t1 = _this._widget;
      t1.toString;
      return t1.itemBuilder$3(context, _this._itemIndexToIndex$1(itemIndex), animation);
    },
    insertItem$2$duration(index, duration) {
      var t1, t2, _i, item, t3, controller, incomingItem, _this = this, _null = null,
        itemIndex = _this._indexToItemIndex$1(index);
      for (t1 = _this._incomingItems, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        item = t1[_i];
        t3 = item.itemIndex;
        if (t3 >= itemIndex)
          item.itemIndex = t3 + 1;
      }
      for (t1 = _this._outgoingItems, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        item = t1[_i];
        t3 = item.itemIndex;
        if (t3 >= itemIndex)
          item.itemIndex = t3 + 1;
      }
      controller = F.AnimationController$(_null, duration, _null, _null, _this);
      incomingItem = new A._ActiveItem(controller, _null, itemIndex);
      _this.setState$1(new A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure(_this, incomingItem));
      controller.forward$0(0).then$1$1(0, new A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure0(_this, incomingItem), type$.void);
    },
    insertAllItems$3$duration(index, $length, duration) {
      var i;
      for (i = 0; i < $length; ++i)
        this.insertItem$2$duration(index + i, duration);
    },
    removeItem$3$duration(_, index, builder, duration) {
      var itemIndex, incomingItem, controller, outgoingItem, _this = this;
      type$.Widget_Function_2_BuildContext_and_Animation_double._as(builder);
      itemIndex = _this._indexToItemIndex$1(index);
      incomingItem = _this._removeActiveItemAt$2(_this._incomingItems, itemIndex);
      controller = incomingItem == null ? null : incomingItem.controller;
      if (controller == null)
        controller = F.AnimationController$(null, duration, null, 1, _this);
      outgoingItem = new A._ActiveItem(controller, builder, itemIndex);
      _this.setState$1(new A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure(_this, outgoingItem));
      controller.reverse$0(0).then$1$1(0, new A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure0(_this, outgoingItem), type$.void);
    },
    $isTickerProvider: 1
  };
  A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A.MessageGroupStatus.prototype = {};
  A.MessagesGroupingMode.prototype = {
    _enumToString$0() {
      return "MessagesGroupingMode." + this._name;
    }
  };
  A.UserCache.prototype = {
    clear$0(_) {
      this._user_cache$_cache.clear$0(0);
      C.JSArray_methods.clear$0(this._accessOrder);
      this.notifyListeners$0();
    }
  };
  A.Chat.prototype = {
    createState$0() {
      return new A._ChatState();
    }
  };
  A._ChatState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      C.JSArray_methods.add$1($.WidgetsBinding__instance.WidgetsBinding__observers, _this);
      _this._updateTheme$0();
      _this._updateBuilders$0();
      _this._widget.toString;
      t1 = A_.CrossCache$(null);
      _this.___ChatState__crossCache_F !== $ && B.throwLateFieldAI("_crossCache");
      _this.___ChatState__crossCache_F = t1;
      _this._widget.toString;
      t1 = B._setArrayType([], type$.JSArray_String);
      t2 = $.$get$ChangeNotifier__emptyListeners();
      _this.___ChatState__userCache_F !== $ && B.throwLateFieldAI("_userCache");
      _this.___ChatState__userCache_F = new A.UserCache(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_User), t1, t2);
      _this._widget.toString;
      t1 = A_.DateFormat$("HH:mm", null);
      _this.___ChatState__timeFormat_A = t1;
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      type$.Chat._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (!oldWidget.theme.$eq(0, _this._widget.theme))
        _this._updateTheme$0();
      if (!oldWidget.builders.$eq(0, _this._widget.builders))
        _this._updateBuilders$0();
    },
    dispose$0() {
      var t1, t2, _this = this;
      $.WidgetsBinding__instance.removeObserver$1(_this);
      _this._widget.toString;
      t1 = _this.___ChatState__crossCache_F;
      t1 === $ && B.throwLateFieldNI("_crossCache");
      t2 = t1._dio;
      t2.DioMixin__closed = true;
      t2 = t2.DioMixin___DioMixin_httpClientAdapter_A;
      t2 === $ && B.throwLateFieldNI("httpClientAdapter");
      t2.close$1$force(0, true);
      t1 = t1._cross_cache$_cache;
      t2 = t1._db;
      if (t2 != null)
        t2.close$0(0);
      t1._db = null;
      t2 = t1._dbOpenCompleter;
      if (t2 != null && (t2.future._state & 30) === 0) {
        t2.completeError$1(new B._Exception("Cache disposed during open"));
        t1._dbOpenCompleter = null;
      }
      _this.super$State$dispose();
    },
    build$1(context) {
      var t4, t5, t6, _this = this, _null = null,
        t1 = _this._widget,
        t2 = M.Provider$value(_null, t1.currentUserId, type$.String),
        t3 = M.Provider$value(_null, t1.resolveUser, type$.Future_nullable_User_Function_String);
      t1 = M.Provider$value(_null, t1.chatController, type$.ChatController);
      t4 = _this.___ChatState__theme_A;
      t4 === $ && B.throwLateFieldNI("_theme");
      t4 = M.Provider$value(_null, t4, type$.ChatTheme);
      t5 = _this.___ChatState__builders_A;
      t5 === $ && B.throwLateFieldNI("_builders");
      t5 = M.Provider$value(_null, t5, type$.Builders);
      t6 = _this.___ChatState__crossCache_F;
      t6 === $ && B.throwLateFieldNI("_crossCache");
      t6 = B._setArrayType([t2, t3, t1, t4, t5, M.Provider$value(_null, t6, type$.CrossCache)], type$.JSArray_SingleChildWidget);
      _this._widget.toString;
      t6.push(Q.ChangeNotifierProvider$(new A._ChatState_build_closure(_this), type$.UserCache));
      t1 = _this.___ChatState__timeFormat_A;
      t1 === $ && B.throwLateFieldNI("_timeFormat");
      t6.push(M.Provider$value(_null, t1, type$.DateFormat));
      t6.push(M.Provider$value(_null, _this._widget.onMessageSend, type$.nullable_void_Function_String));
      _this._widget.toString;
      t6.push(M.Provider$value(_null, _null, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_TapUpDetails_and_index_int));
      _this._widget.toString;
      t6.push(M.Provider$value(_null, _null, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_LongPressStartDetails_and_index_int));
      t6.push(M.Provider$value(_null, _this._widget.onAttachmentTap, type$.nullable_void_Function));
      t6.push(Q.ChangeNotifierProvider$(new A._ChatState_build_closure0(), type$.ComposerHeightNotifier));
      t6.push(Q.ChangeNotifierProvider$(new A._ChatState_build_closure1(), type$.LoadMoreNotifier));
      _this._widget.toString;
      t1 = _this.___ChatState__theme_A.colors.surface;
      t2 = _this.___ChatState__builders_A;
      t2 = t2.composerBuilder;
      t2 = t2 == null ? _null : t2.call$1(context);
      if (t2 == null)
        t2 = D.Composer_52m;
      return Q.MultiProvider$(F.Container$(_null, new F.Stack(L.AlignmentDirectional_m1_m1, _null, L.StackFit_0, C.Clip_1, B._setArrayType([new A.ChatAnimatedList(_this.get$_buildItem(), _null), t2], type$.JSArray_Widget), _null), C.Clip_0, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), t6);
    },
    _buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, isRemoved, messageGroupingTimeoutInSeconds, messagesGroupingMode) {
      type$.BuildContext._as(context);
      type$.Message._as(message);
      return new A.ChatMessageInternal(message, B._asInt(index), type$.Animation_double._as(animation), type$.nullable_MessagesGroupingMode._as(messagesGroupingMode), B._asIntQ(messageGroupingTimeoutInSeconds), B._asBoolQ(isRemoved), new Ah.ValueKey(message.get$id(message), type$.ValueKey_String));
    },
    _buildItem$4(context, message, index, animation) {
      return this._buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, null, null, null);
    },
    _buildItem$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, messageGroupingTimeoutInSeconds, messagesGroupingMode) {
      return this._buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, index, animation, null, messageGroupingTimeoutInSeconds, messagesGroupingMode);
    },
    _updateTheme$0() {
      var t1 = this._widget.theme;
      this.___ChatState__theme_A = t1;
    },
    _updateBuilders$0() {
      var t1 = this._widget.builders;
      this.___ChatState__builders_A = t1;
    }
  };
  A.__ChatState_State_WidgetsBindingObserver.prototype = {};
  A.InitialScrollToEndMode.prototype = {
    _enumToString$0() {
      return "InitialScrollToEndMode." + this._name;
    }
  };
  A.ChatAnimatedList.prototype = {
    createState$0() {
      return new A._ChatAnimatedListState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_SliverAnimatedListState), B._setArrayType([], type$.JSArray_ChatOperation), null, null);
    },
    itemBuilder$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5) {
      return this.itemBuilder.call$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5);
    },
    itemBuilder$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
      return this.itemBuilder.call$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    }
  };
  A._ChatAnimatedListState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this, _null = null;
      _this.super$State$initState();
      t1 = _this._framework$_element;
      t1.toString;
      t2 = type$.ChatController;
      t2 = t2._as(H.Provider_of(t1, false, t2));
      _this.___ChatAnimatedListState__chatController_F !== $ && B.throwLateFieldAI("_chatController");
      _this.___ChatAnimatedListState__chatController_F = t2;
      _this._widget.toString;
      t1 = S.ScrollController$(_null, _null);
      _this.___ChatAnimatedListState__scrollController_F !== $ && B.throwLateFieldAI("_scrollController");
      _this.___ChatAnimatedListState__scrollController_F = t1;
      t1 = new A.SliverObserverController(_null, true, new A.ObserverIndexPositionModel(0), _null, t1, B.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.Map_int_ObserveScrollChildModel), B._setArrayType([], type$.JSArray_BuildContext));
      t1.ObserverControllerForScroll_cacheJumpIndexOffset = false;
      _this.___ChatAnimatedListState__observerController_F !== $ && B.throwLateFieldAI("_observerController");
      _this.___ChatAnimatedListState__observerController_F = t1;
      _this.set$___ChatAnimatedListState__oldList_A(type$.List_Message._as(B.List_List$from(t2.get$messages(), true, type$.Message)));
      t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && B.throwLateFieldNI("_oldList");
      t3 = type$.ValueNotifier_bool;
      _this.set$___ChatAnimatedListState__oldListEmptyNotifier_A(t3._as(new B.ValueNotifier(t1.length === 0, $.$get$ChangeNotifier__emptyListeners(), t3)));
      t3 = type$.StreamSubscription_ChatOperation._as(t2.get$operationsStream().listen$1(new A._ChatAnimatedListState_initState_closure(_this)));
      _this.___ChatAnimatedListState__operationsSubscription_F !== $ && B.throwLateFieldAI("_operationsSubscription");
      _this.set$___ChatAnimatedListState__operationsSubscription_F(t3);
      t3 = F.AnimationController$(_null, C.Duration_0, _null, _null, _this);
      _this.___ChatAnimatedListState__scrollAnimationController_F !== $ && B.throwLateFieldAI("_scrollAnimationController");
      _this.___ChatAnimatedListState__scrollAnimationController_F = t3;
      t1 = type$.void_Function._as(_this.get$_linkAnimationToScroll());
      t3.didRegisterListener$0();
      t3.AnimationLocalListenersMixin__listeners.add$1(0, t1);
      t1 = F.AnimationController$(_null, I.Duration_250000, _null, _null, _this);
      _this.___ChatAnimatedListState__scrollToBottomController_F !== $ && B.throwLateFieldAI("_scrollToBottomController");
      _this.___ChatAnimatedListState__scrollToBottomController_F = t1;
      t1 = type$.Animation_double._as(F.CurvedAnimation$(E.Cubic_O6W, t1, _null));
      _this.___ChatAnimatedListState__scrollToBottomAnimation_F !== $ && B.throwLateFieldAI("_scrollToBottomAnimation");
      _this.set$___ChatAnimatedListState__scrollToBottomAnimation_F(t1);
      _this._widget.toString;
      _this.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = true;
      t2.attachScrollMethods$2$scrollToIndex$scrollToMessageId(_this.get$_scrollToIndex(), _this.get$_scrollToMessageId());
    },
    onKeyboardHeightChanged$1(height) {
      var t1;
      this._widget.toString;
      t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ChatAnimatedListState_onKeyboardHeightChanged_closure(this, height)));
    },
    dispose$0() {
      var _this = this,
        t1 = _this.___ChatAnimatedListState__oldListEmptyNotifier_A;
      t1 === $ && B.throwLateFieldNI("_oldListEmptyNotifier");
      t1.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      t1.ChangeNotifier__count = 0;
      t1 = _this._scrollToBottomShowTimer;
      if (t1 != null)
        t1.cancel$0(0);
      t1 = _this.___ChatAnimatedListState__scrollToBottomController_F;
      t1 === $ && B.throwLateFieldNI("_scrollToBottomController");
      t1.dispose$0();
      t1 = _this.___ChatAnimatedListState__scrollAnimationController_F;
      t1 === $ && B.throwLateFieldNI("_scrollAnimationController");
      t1.removeListener$1(0, _this.get$_linkAnimationToScroll());
      t1.dispose$0();
      t1 = _this.___ChatAnimatedListState__operationsSubscription_F;
      t1 === $ && B.throwLateFieldNI("_operationsSubscription");
      t1.cancel$0(0);
      _this._widget.toString;
      t1 = _this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && B.throwLateFieldNI("_scrollController");
      t1.dispose$0();
      t1 = _this.___ChatAnimatedListState__chatController_F;
      t1 === $ && B.throwLateFieldNI("_chatController");
      t1.detachScrollMethods$0();
      _this.super$__ChatAnimatedListState_State_TickerProviderStateMixin$dispose();
    },
    get$_isAtChatEndScrollPosition() {
      var t1, t2;
      this._widget.toString;
      t1 = this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && B.throwLateFieldNI("_scrollController");
      t1 = C.JSArray_methods.get$single(t1._positions)._pixels;
      t1.toString;
      t2 = this.get$_chatEndScrollPosition();
      return t1 >= t2;
    },
    get$_chatEndScrollPosition() {
      this._widget.toString;
      var t1 = this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && B.throwLateFieldNI("_scrollController");
      t1 = C.JSArray_methods.get$single(t1._positions)._maxScrollExtent;
      t1.toString;
      return t1;
    },
    build$1(context) {
      var t2, t3, t4, _this = this, _null = null,
        builders = H.Provider_of(context, false, type$.Builders),
        t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && B.throwLateFieldNI("_oldList");
      t1 = t1.length;
      t2 = _this.___ChatAnimatedListState__observerController_F;
      t2 === $ && B.throwLateFieldNI("_observerController");
      t3 = _this.___ChatAnimatedListState__scrollController_F;
      t3 === $ && B.throwLateFieldNI("_scrollController");
      _this._widget.toString;
      t1 = A8.CustomScrollView$(_null, t3, E.DragStartBehavior_1, Ak.ScrollViewKeyboardDismissBehavior_1, _null, false, false, new A._ChatAnimatedListState_build_buildSlivers(_this, context, new A.SliverAnimatedList(new A._ChatAnimatedListState_build_closure(_this), _null, t1, _this._listKey), builders).call$0());
      t3 = _this.___ChatAnimatedListState__scrollToBottomAnimation_F;
      t3 === $ && B.throwLateFieldNI("_scrollToBottomAnimation");
      t4 = _this.___ChatAnimatedListState__oldListEmptyNotifier_A;
      t4 === $ && B.throwLateFieldNI("_oldListEmptyNotifier");
      return new O.NotificationListener(new A._ChatAnimatedListState_build_closure0(_this), new F.Stack(L.AlignmentDirectional_m1_m1, _null, L.StackFit_0, C.Clip_1, B._setArrayType([new A.SliverViewObserver(t2, t1, _null, t2, new A._ChatAnimatedListState_build_closure1(_this), _null, _null, 0, _null, 1, _null, _null, D.ObserverTriggerOnObserveType_1, _null, _null), new A.ScrollToBottom(t3, _this.get$_handleScrollToBottom(), _null), A0.ValueListenableBuilder$(new A._ChatAnimatedListState_build_closure2(builders), t4, type$.bool)], type$.JSArray_Widget), _null), _null, type$.NotificationListener_Notification);
    },
    _buildComposerHeightSliver$1(context) {
      this._widget.toString;
      return new A.SliverSpacing(20, true, this.get$onKeyboardHeightChanged(), null);
    },
    _linkAnimationToScroll$0() {
      var t1, t2, t3;
      this._widget.toString;
      t1 = this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && B.throwLateFieldNI("_scrollController");
      t2 = this.___ChatAnimatedListState__scrollAnimationController_F;
      t2 === $ && B.throwLateFieldNI("_scrollAnimationController");
      t2 = t2.__AnimationController__value_A;
      t2 === $ && B.throwLateFieldNI("_value");
      t3 = C.JSArray_methods.get$single(t1._positions)._maxScrollExtent;
      t3.toString;
      t1.jumpTo$1(t2 * t3);
    },
    _initialScrollToEnd$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$_initialScrollToEnd$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              $async$goto = 3;
              return B._asyncAwait(B.Future_Future$delayed(I.Duration_250000, null, type$.dynamic), $async$_initialScrollToEnd$0);
            case 3:
              // returning from await.
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && B.throwLateFieldNI("_scrollController");
              if (t1._positions.length === 0 || $async$self._framework$_element == null || $async$self.get$_isAtChatEndScrollPosition()) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._widget.toString;
              t2 = $async$self.get$_chatEndScrollPosition();
              $async$self._widget.toString;
              $async$goto = 4;
              return B._asyncAwait(t1.animateTo$3$curve$duration(t2, E.Cubic_O6W, I.Duration_250000), $async$_initialScrollToEnd$0);
            case 4:
              // returning from await.
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_initialScrollToEnd$0, $async$completer);
    },
    _subsequentScrollToEnd$1(data) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, currentUserId, t3;
      var $async$_subsequentScrollToEnd$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              if (data.get$id(data) !== $async$self._lastInsertedMessageId || $async$self.get$_isAtChatEndScrollPosition()) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._widget.toString;
              t1 = !$async$self._userHasScrolled;
              $async$goto = t1 ? 3 : 4;
              break;
            case 3:
              // then
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && B.throwLateFieldNI("_scrollController");
              t2 = $async$self.get$_chatEndScrollPosition();
              $async$self._widget.toString;
              $async$goto = 5;
              return B._asyncAwait(t1.animateTo$3$curve$duration(t2, E.Cubic_O6W, I.Duration_250000), $async$_subsequentScrollToEnd$1);
            case 5:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              t1 = $async$self._framework$_element;
              t1.toString;
              currentUserId = H.Provider_of(t1, false, type$.String);
              $async$self._widget.toString;
              t1 = false;
              if (currentUserId === data.get$authorId()) {
                t1 = $async$self.___ChatAnimatedListState__oldList_A;
                t1 === $ && B.throwLateFieldNI("_oldList");
                t1 = J.get$id$z(C.JSArray_methods.get$last(t1)) === data.get$id(data);
              }
              $async$goto = t1 ? 6 : 7;
              break;
            case 6:
              // then
              $async$self._widget.toString;
              t1 = $async$self._userHasScrolled;
              $async$goto = t1 ? 8 : 10;
              break;
            case 8:
              // then
              t1 = $async$self.___ChatAnimatedListState__scrollAnimationController_F;
              t1 === $ && B.throwLateFieldNI("_scrollAnimationController");
              t2 = $async$self.___ChatAnimatedListState__scrollController_F;
              t2 === $ && B.throwLateFieldNI("_scrollController");
              t3 = C.JSArray_methods.get$single(t2._positions)._pixels;
              t3.toString;
              t2 = C.JSArray_methods.get$single(t2._positions)._maxScrollExtent;
              t2.toString;
              t1.set$value(0, t3 / t2);
              $async$goto = 11;
              return B._asyncAwait(t1.fling$0(), $async$_subsequentScrollToEnd$1);
            case 11:
              // returning from await.
              // goto join
              $async$goto = 9;
              break;
            case 10:
              // else
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && B.throwLateFieldNI("_scrollController");
              t2 = $async$self.get$_chatEndScrollPosition();
              $async$self._widget.toString;
              $async$goto = 12;
              return B._asyncAwait(t1.animateTo$3$curve$duration(t2, E.Cubic_O6W, I.Duration_250000), $async$_subsequentScrollToEnd$1);
            case 12:
              // returning from await.
            case 9:
              // join
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // join
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_subsequentScrollToEnd$1, $async$completer);
    },
    _scrollToEnd$1(data) {
      var t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ChatAnimatedListState__scrollToEnd_closure(this, data)));
    },
    _adjustInitialScrollPosition$0() {
      this._widget.toString;
      var t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ChatAnimatedListState__adjustInitialScrollPosition_closure(this)));
    },
    _handleScrollToBottom$0() {
      var t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ChatAnimatedListState__handleScrollToBottom_closure(this)));
    },
    _handleToggleScrollToBottom$0() {
      var t1, t2, _this = this;
      if (!_this._isScrollingToBottom) {
        t1 = _this._scrollToBottomShowTimer;
        if (t1 != null)
          t1.cancel$0(0);
        _this._widget.toString;
        t1 = _this.get$_chatEndScrollPosition();
        t2 = _this.___ChatAnimatedListState__scrollController_F;
        t2 === $ && B.throwLateFieldNI("_scrollController");
        t2 = C.JSArray_methods.get$single(t2._positions)._pixels;
        t2.toString;
        _this._widget.toString;
        if (t1 - t2 > 0)
          _this._scrollToBottomShowTimer = B.Timer_Timer(I.Duration_250000, new A._ChatAnimatedListState__handleToggleScrollToBottom_closure(_this));
        else {
          t1 = _this.___ChatAnimatedListState__scrollToBottomController_F;
          t1 === $ && B.throwLateFieldNI("_scrollToBottomController");
          t2 = t1.__AnimationController__status_A;
          t2 === $ && B.throwLateFieldNI("_status");
          if (t2 === L.AnimationStatus_3 || t2 === L.AnimationStatus_1)
            t1.reverse$0(0);
        }
      }
    },
    _handlePagination$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$_handlePagination$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.___ChatAnimatedListState__scrollController_F;
              t1 === $ && B.throwLateFieldNI("_scrollController");
              if (t1._positions.length !== 0)
                if ($async$self._framework$_element != null) {
                  t1 = $async$self.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A;
                  t1 === $ && B.throwLateFieldNI("_needsInitialScrollPositionAdjustment");
                  if (!t1)
                    $async$self._widget.toString;
                }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_handlePagination$0, $async$completer);
    },
    _scrollToMessageId$5$alignment$curve$duration$offset(messageId, alignment, curve, duration, offset) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, index, t1;
      var $async$_scrollToMessageId$5$alignment$curve$duration$offset = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.___ChatAnimatedListState__oldList_A;
              t1 === $ && B.throwLateFieldNI("_oldList");
              index = C.JSArray_methods.indexWhere$1(t1, new A._ChatAnimatedListState__scrollToMessageId_closure(messageId));
              if (index === -1) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._scrollToIndex$5$alignment$curve$duration$offset(index, alignment, curve, duration, offset);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_scrollToMessageId$5$alignment$curve$duration$offset, $async$completer);
    },
    _scrollToMessageId$1(messageId) {
      return this._scrollToMessageId$5$alignment$curve$duration$offset(messageId, 0, E.Cubic_O6W, I.Duration_250000, 0);
    },
    _scrollToMessageId$2$duration(messageId, duration) {
      return this._scrollToMessageId$5$alignment$curve$duration$offset(messageId, 0, E.Cubic_O6W, duration, 0);
    },
    _scrollToIndex$5$alignment$curve$duration$offset(index, alignment, curve, duration, offset) {
      return this._scrollToIndex$body$_ChatAnimatedListState(index, alignment, curve, duration, offset);
    },
    _scrollToIndex$1(index) {
      return this._scrollToIndex$5$alignment$curve$duration$offset(index, 0, E.Cubic_O6W, I.Duration_250000, 0);
    },
    _scrollToIndex$2$duration(index, duration) {
      return this._scrollToIndex$5$alignment$curve$duration$offset(index, 0, E.Cubic_O6W, duration, 0);
    },
    _scrollToIndex$body$_ChatAnimatedListState(index, alignment, curve, duration, offset) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, visualIndex, t1, t2, t3, t4, exception, $async$exception;
      var $async$_scrollToIndex$5$alignment$curve$duration$offset = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (index >= 0) {
                t1 = $async$self.___ChatAnimatedListState__oldList_A;
                t1 === $ && B.throwLateFieldNI("_oldList");
                t1 = index >= t1.length;
              } else
                t1 = true;
              if (t1) {
                // goto return
                $async$goto = 1;
                break;
              }
              if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, $async$self._listKey) == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              visualIndex = $async$self.visualPosition$1(index);
              $async$handler = 4;
              t1 = type$.nullable_double_Function_double;
              t2 = $async$self.___ChatAnimatedListState__observerController_F;
              $async$goto = duration._duration === 0 ? 7 : 9;
              break;
            case 7:
              // then
              t2 === $ && B.throwLateFieldNI("_observerController");
              $async$goto = 10;
              return B._asyncAwait(t2.innerJumpTo$8$alignment$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, B._asInt(visualIndex), false, t1._as(new A._ChatAnimatedListState__scrollToIndex_closure(offset)), null, C.EdgeInsets_0_0_0_0, D.ObserverRenderSliverType_0, null), $async$_scrollToIndex$5$alignment$curve$duration$offset);
            case 10:
              // returning from await.
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              t2 === $ && B.throwLateFieldNI("_observerController");
              t3 = B._asInt(visualIndex);
              t1 = t1._as(new A._ChatAnimatedListState__scrollToIndex_closure0(offset));
              t4 = new B._Future($.Zone__current, type$._Future_dynamic);
              t2._observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, new B._AsyncCompleter(t4, type$._AsyncCompleter_dynamic), curve, duration, t3, false, t1, null, C.EdgeInsets_0_0_0_0, D.ObserverRenderSliverType_0, null);
              $async$goto = 11;
              return B._asyncAwait(t4, $async$_scrollToIndex$5$alignment$curve$duration$offset);
            case 11:
              // returning from await.
            case 8:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$_scrollToIndex$5$alignment$curve$duration$offset, $async$completer);
    },
    _onInserted$2(position, data) {
      var t1, duration, _this = this;
      if (_this._userHasScrolled && _this.get$_isAtChatEndScrollPosition())
        _this._userHasScrolled = false;
      _this._widget.toString;
      t1 = _this.___ChatAnimatedListState__scrollController_F;
      t1 === $ && B.throwLateFieldNI("_scrollController");
      t1 = C.JSArray_methods.get$single(t1._positions)._maxScrollExtent;
      t1.toString;
      if (t1 === 0) {
        _this._widget.toString;
        duration = I.Duration_250000;
      } else
        duration = C.Duration_0;
      t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && B.throwLateFieldNI("_oldList");
      C.JSArray_methods.insert$2(t1, position, data);
      _this._updateOldListEmptyNotifier$0();
      t1 = _this._listKey.get$currentState();
      t1.toString;
      t1.insertItem$2$duration(_this.visualPosition$1(position), duration);
      _this._lastInsertedMessageId = data.get$id(data);
      _this._scrollToEnd$1(data);
    },
    _onRemoved$2(position, data) {
      var visualIndex, t1, _this = this;
      _this._widget.toString;
      visualIndex = _this.visualPosition$1(position);
      t1 = _this.___ChatAnimatedListState__oldList_A;
      t1 === $ && B.throwLateFieldNI("_oldList");
      C.JSArray_methods.removeAt$1(t1, position);
      _this._updateOldListEmptyNotifier$0();
      _this._listKey.get$currentState().removeItem$3$duration(0, visualIndex, new A._ChatAnimatedListState__onRemoved_closure(_this, data, position), I.Duration_250000);
    },
    visualPosition$1(indexPosition) {
      this._widget.toString;
      return indexPosition;
    },
    _onDiffUpdate$1(update) {
      var _this = this;
      type$.DataDiffUpdate_Message._as(update).when$1$4$change$insert$move$remove(new A._ChatAnimatedListState__onDiffUpdate_closure(_this), new A._ChatAnimatedListState__onDiffUpdate_closure0(_this), new A._ChatAnimatedListState__onDiffUpdate_closure1(_this), new A._ChatAnimatedListState__onDiffUpdate_closure2(_this), type$.void);
    },
    _updateOldListEmptyNotifier$0() {
      var newIsEmpty,
        t1 = this.___ChatAnimatedListState__oldList_A;
      t1 === $ && B.throwLateFieldNI("_oldList");
      newIsEmpty = t1.length === 0;
      t1 = this.___ChatAnimatedListState__oldListEmptyNotifier_A;
      t1 === $ && B.throwLateFieldNI("_oldListEmptyNotifier");
      if (newIsEmpty !== t1._change_notifier$_value)
        t1.set$value(0, newIsEmpty);
    },
    _processOperationsQueue$0() {
      var t1, t2, t3, t4, t5, ops, t6, _i, op, t7, t8, newList, updates, _i0, t9, t10, duration, newIsEmpty, _this = this,
        _s8_ = "_oldList",
        _s17_ = "_scrollController";
      if (_this._isProcessingOperations)
        return;
      _this._isProcessingOperations = true;
      for (t1 = _this._operationsQueue, t2 = _this._listKey, t3 = type$.List_Message, t4 = type$.Message, t5 = type$.ChatOperation; t1.length !== 0;) {
        ops = B.List_List$of(t1, true, t5);
        C.JSArray_methods.clear$0(t1);
        for (t6 = ops.length, _i = 0; _i < ops.length; ops.length === t6 || (0, B.throwConcurrentModificationError)(ops), ++_i) {
          op = ops[_i];
          switch (op.type.index) {
            case 0:
              t7 = op.index;
              t7.toString;
              t8 = op.message;
              t8.toString;
              _this._onInserted$2(t7, t8);
              break;
            case 3:
              t7 = op.index;
              t7.toString;
              t8 = op.message;
              t8.toString;
              _this._onRemoved$2(t7, t8);
              break;
            case 4:
              newList = op.messages;
              if (newList == null)
                newList = D.List_empty21;
              t7 = _this.___ChatAnimatedListState__oldList_A;
              t7 === $ && B.throwLateFieldNI(_s8_);
              updates = A.calculateDiff(A.MessageListDiff$(t7, newList), true, t4).getUpdatesWithData$0();
              for (t7 = updates.length, _i0 = 0; _i0 < updates.length; updates.length === t7 || (0, B.throwConcurrentModificationError)(updates), ++_i0)
                _this._onDiffUpdate$1(updates[_i0]);
              break;
            case 1:
              t7 = op.index;
              t7.toString;
              t8 = op.messages;
              t8.toString;
              t3._as(t8);
              if (_this._userHasScrolled) {
                _this._widget.toString;
                t9 = _this.___ChatAnimatedListState__scrollController_F;
                t9 === $ && B.throwLateFieldNI(_s17_);
                t10 = C.JSArray_methods.get$single(t9._positions)._pixels;
                t10.toString;
                _this._widget.toString;
                t9 = C.JSArray_methods.get$single(t9._positions)._maxScrollExtent;
                t9.toString;
                t9 = t10 >= t9;
              } else
                t9 = false;
              if (t9)
                _this._userHasScrolled = false;
              _this._widget.toString;
              t9 = _this.___ChatAnimatedListState__scrollController_F;
              t9 === $ && B.throwLateFieldNI(_s17_);
              t9 = C.JSArray_methods.get$single(t9._positions)._maxScrollExtent;
              t9.toString;
              if (t9 === 0) {
                _this._widget.toString;
                duration = I.Duration_250000;
              } else
                duration = C.Duration_0;
              t9 = _this.___ChatAnimatedListState__oldList_A;
              t9 === $ && B.throwLateFieldNI(_s8_);
              C.JSArray_methods.insertAll$2(t9, t7, t8);
              newIsEmpty = _this.___ChatAnimatedListState__oldList_A.length === 0;
              t9 = _this.___ChatAnimatedListState__oldListEmptyNotifier_A;
              t9 === $ && B.throwLateFieldNI("_oldListEmptyNotifier");
              if (newIsEmpty !== t9._change_notifier$_value)
                t9.set$value(0, newIsEmpty);
              _this._widget.toString;
              t2.get$currentState().insertAllItems$3$duration(t7, t8.length, duration);
              _this._lastInsertedMessageId = J.get$id$z(C.JSArray_methods.get$last(t8));
              _this._scrollToEnd$1(C.JSArray_methods.get$last(t8));
              break;
            case 2:
              t7 = _this.___ChatAnimatedListState__oldList_A;
              t7 === $ && B.throwLateFieldNI(_s8_);
              t8 = op.index;
              t8.toString;
              t9 = op.message;
              t9.toString;
              C.JSArray_methods.$indexSet(t7, t8, t9);
              break;
          }
        }
      }
      _this._isProcessingOperations = false;
    },
    set$___ChatAnimatedListState__oldList_A(___ChatAnimatedListState__oldList_A) {
      this.___ChatAnimatedListState__oldList_A = type$.List_Message._as(___ChatAnimatedListState__oldList_A);
    },
    set$___ChatAnimatedListState__oldListEmptyNotifier_A(___ChatAnimatedListState__oldListEmptyNotifier_A) {
      this.___ChatAnimatedListState__oldListEmptyNotifier_A = type$.ValueNotifier_bool._as(___ChatAnimatedListState__oldListEmptyNotifier_A);
    },
    set$___ChatAnimatedListState__operationsSubscription_F(___ChatAnimatedListState__operationsSubscription_F) {
      this.___ChatAnimatedListState__operationsSubscription_F = type$.StreamSubscription_ChatOperation._as(___ChatAnimatedListState__operationsSubscription_F);
    },
    set$___ChatAnimatedListState__scrollToBottomAnimation_F(___ChatAnimatedListState__scrollToBottomAnimation_F) {
      this.___ChatAnimatedListState__scrollToBottomAnimation_F = type$.Animation_double._as(___ChatAnimatedListState__scrollToBottomAnimation_F);
    },
    $isTickerProvider: 1
  };
  A.__ChatAnimatedListState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A.SliverSpacing.prototype = {
    createState$0() {
      return new A._SliverSpacingState(null, 0, 0, false);
    }
  };
  A._SliverSpacingState.prototype = {
    build$1(context) {
      return new A2.Consumer(new A._SliverSpacingState_build_closure(this, B.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data.padding.bottom), null, null, type$.Consumer_ComposerHeightNotifier);
    }
  };
  A.__SliverSpacingState_State_WidgetsBindingObserver.prototype = {};
  A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin.prototype = {
    initState$0() {
      this.super$State$initState();
      C.JSArray_methods.add$1($.WidgetsBinding__instance.WidgetsBinding__observers, this);
    },
    didChangeDependencies$0() {
      var t1, _this = this;
      _this.super$State$didChangeDependencies();
      if (!_this.KeyboardMixin__initialized) {
        t1 = _this._framework$_element;
        t1.toString;
        _this.KeyboardMixin__initialSafeArea = B.InheritedModel_inheritFrom(t1, null, type$.MediaQuery).data.padding.bottom;
        _this.KeyboardMixin__initialized = true;
      }
    },
    dispose$0() {
      $.WidgetsBinding__instance.removeObserver$1(this);
      var t1 = this.KeyboardMixin__keyboardDebounceTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this.super$State$dispose();
    },
    didChangeMetrics$0() {
      var t1, keyboardHeight, t2, _this = this;
      _this.super$WidgetsBindingObserver$didChangeMetrics();
      t1 = _this._framework$_element;
      if (t1 == null)
        return;
      keyboardHeight = O.View_maybeOf(t1)._viewInsets.bottom;
      t1 = _this._framework$_element;
      t1.toString;
      t1 = B.InheritedModel_inheritFrom(t1, null, type$.MediaQuery).data;
      if (keyboardHeight !== _this.KeyboardMixin__previousKeyboardHeight) {
        _this.KeyboardMixin__previousKeyboardHeight = keyboardHeight;
        t2 = _this.KeyboardMixin__keyboardDebounceTimer;
        if (t2 != null)
          t2.cancel$0(0);
        _this.KeyboardMixin__keyboardDebounceTimer = B.Timer_Timer(C.Duration_100000, new A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure(_this, keyboardHeight, t1.devicePixelRatio));
      }
    }
  };
  A.ChatMessage.prototype = {
    build$1(context) {
      var messageWidget, _this = this, _null = null,
        onMessageTap = H.Provider_of(context, false, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_TapUpDetails_and_index_int),
        onMessageDoubleTap = H.Provider_of(context, false, type$.nullable_void_Function_2_BuildContext_and_Message_$named_index_int),
        onMessageLongPress = H.Provider_of(context, false, type$.nullable_void_Function_2_BuildContext_and_Message_$named_details_LongPressStartDetails_and_index_int),
        isSentByMe = J.$eq$(H.Provider_of(context, false, type$.String), _this.message.get$authorId()),
        curvedAnimation = F.CurvedAnimation$(E.Cubic_O6W, _this.animation, _null),
        resolvedPadding = _this._resolveDefaultPadding$1(context),
        t1 = type$.JSArray_Widget,
        t2 = B._setArrayType([], t1),
        t3 = isSentByMe ? A4.Alignment_1_0 : Af.Alignment_m1_0,
        t4 = isSentByMe ? Al.AlignmentDirectional_1_0 : U.AlignmentDirectional_m1_0,
        t5 = isSentByMe ? E.CrossAxisAlignment_1 : E.CrossAxisAlignment_0,
        t6 = B._setArrayType([], t1);
      t1 = B._setArrayType([], t1);
      t1.push(new A3.Flexible(1, E.FlexFit_1, _this.child, _null));
      t6.push(W.Row$(t1, E.CrossAxisAlignment_1, _null, E.MainAxisAlignment_0, E.MainAxisSize_0, 0, _null, _null, E.VerticalDirection_1));
      t2.push(O.GestureDetector$(_null, new A5.FadeTransition(curvedAnimation, false, Ac.SizeTransition$(0, G.ScaleTransition$(t3, new F.Align(t4, _null, _null, T.Column$(t6, t5, _null, E.MainAxisAlignment_0, E.MainAxisSize_0, 0, _null, _null, E.VerticalDirection_1), _null), curvedAnimation), curvedAnimation), _null), E.DragStartBehavior_1, false, _null, new A.ChatMessage_build_closure(_this, onMessageDoubleTap, context), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.ChatMessage_build_closure0(_this, onMessageLongPress, context), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.ChatMessage_build_closure1(_this, onMessageTap, context), _null, _null, _null, _null, _null));
      messageWidget = T.Column$(t2, E.CrossAxisAlignment_2, _null, E.MainAxisAlignment_0, E.MainAxisSize_0, 0, _null, _null, E.VerticalDirection_1);
      if (!resolvedPadding.$eq(0, C.EdgeInsets_0_0_0_0)) {
        t1 = Aa.AnimatedPadding$(messageWidget, E.Cubic_O6W, I.Duration_250000, resolvedPadding);
        return t1;
      }
      return messageWidget;
    },
    _resolveDefaultPadding$1(context) {
      var t1;
      if (this.index === 0)
        return new B.EdgeInsets(8, 0, 8, 0);
      t1 = this.groupStatus;
      if ((t1 == null ? null : t1.isFirst) === false || this.isRemoved === true)
        t1 = new B.EdgeInsets(8, 2, 8, 0);
      else
        t1 = new B.EdgeInsets(8, 12, 8, 0);
      return t1;
    }
  };
  A.ChatMessageInternal.prototype = {
    createState$0() {
      return new A._ChatMessageInternalState();
    }
  };
  A._ChatMessageInternalState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      _this.___ChatMessageInternalState__updatedMessage_A = t1.message;
      if (t1.isRemoved === true)
        _this.set$___ChatMessageInternalState__operationsSubscription_A(null);
      else {
        t1 = _this._framework$_element;
        t1.toString;
        _this.set$___ChatMessageInternalState__operationsSubscription_A(type$.nullable_StreamSubscription_ChatOperation._as(H.Provider_of(t1, false, type$.ChatController).get$operationsStream().listen$1(new A._ChatMessageInternalState_initState_closure(_this))));
      }
    },
    dispose$0() {
      var t1 = this.___ChatMessageInternalState__operationsSubscription_A;
      t1 === $ && B.throwLateFieldNI("_operationsSubscription");
      if (t1 != null)
        t1.cancel$0(0);
      this.super$State$dispose();
    },
    build$1(context) {
      var isSentByMe, groupStatus, child, t3, t4, _this = this,
        builders = H.Provider_of(context, false, type$.Builders),
        t1 = H.Provider_of(context, false, type$.String),
        t2 = _this.___ChatMessageInternalState__updatedMessage_A;
      t2 === $ && B.throwLateFieldNI("_updatedMessage");
      isSentByMe = J.$eq$(t1, t2.get$authorId());
      groupStatus = _this._resolveGroupStatus$1(context);
      child = _this._buildMessage$6$groupStatus$isSentByMe(context, builders, _this.___ChatMessageInternalState__updatedMessage_A, _this._widget.index, groupStatus, isSentByMe);
      t1 = _this.___ChatMessageInternalState__updatedMessage_A;
      t2 = _this._widget;
      t3 = t2.index;
      t4 = t2.animation;
      t2 = t2.isRemoved;
      return new A.ChatMessage(t1, t3, t4, child, t2, groupStatus, null);
    },
    _resolveGroupStatus$1(context) {
      var chatController, messages, index, currentMessage, nextMessage, previousMessage, now, currentMessageDate, nextMessageDate, previousMessageDate, isGroupedWithNext, isGroupedWithPrevious, t1, t2, nextMessage0, previousMessage0, currentMessageDate0, nextMessageDate0, previousMessageDate0, isGroupedWithNext0, isGroupedWithPrevious0, exception, _this = this, _null = null;
      try {
        chatController = H.Provider_of(context, false, type$.ChatController);
        messages = chatController.get$messages();
        index = _this._widget.index;
        t1 = _this.___ChatMessageInternalState__updatedMessage_A;
        t1 === $ && B.throwLateFieldNI("_updatedMessage");
        currentMessage = t1;
        t1 = index;
        t2 = J.get$length$asx(messages);
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < t2 - 1) {
          t1 = index;
          if (typeof t1 !== "number")
            return t1.$add();
          nextMessage0 = J.$index$asx(messages, t1 + 1);
        } else
          nextMessage0 = _null;
        nextMessage = nextMessage0;
        t1 = index;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          t1 = index;
          if (typeof t1 !== "number")
            return t1.$sub();
          previousMessage0 = J.$index$asx(messages, t1 - 1);
        } else
          previousMessage0 = _null;
        previousMessage = previousMessage0;
        now = new B.DateTime(Date.now(), 0, false);
        currentMessageDate0 = currentMessage.get$resolvedTime();
        currentMessageDate = currentMessageDate0 == null ? now : currentMessageDate0;
        t1 = nextMessage;
        nextMessageDate0 = t1 == null ? _null : t1.get$resolvedTime();
        nextMessageDate = nextMessageDate0 == null ? now : nextMessageDate0;
        t1 = previousMessage;
        previousMessageDate0 = t1 == null ? _null : t1.get$resolvedTime();
        previousMessageDate = previousMessageDate0 == null ? now : previousMessageDate0;
        isGroupedWithNext0 = false;
        if (nextMessage != null)
          if (nextMessage.get$authorId() === currentMessage.get$authorId()) {
            t1 = _this._widget;
            t2 = t1.messagesGroupingMode;
            if (t2 == null)
              t2 = D.MessagesGroupingMode_0;
            t1 = t1.messageGroupingTimeoutInSeconds;
            if (t1 == null)
              t1 = 300;
            t1 = A._shouldGroupMessages(currentMessageDate, nextMessageDate, t2, t1);
            isGroupedWithNext0 = t1;
          }
        isGroupedWithNext = isGroupedWithNext0;
        isGroupedWithPrevious0 = false;
        if (previousMessage != null)
          if (previousMessage.get$authorId() === currentMessage.get$authorId()) {
            t1 = _this._widget;
            t2 = t1.messagesGroupingMode;
            if (t2 == null)
              t2 = D.MessagesGroupingMode_0;
            t1 = t1.messageGroupingTimeoutInSeconds;
            if (t1 == null)
              t1 = 300;
            t1 = A._shouldGroupMessages(previousMessageDate, currentMessageDate, t2, t1);
            isGroupedWithPrevious0 = t1;
          }
        isGroupedWithPrevious = isGroupedWithPrevious0;
        if (!B.boolConversionCheck(isGroupedWithNext) && !B.boolConversionCheck(isGroupedWithPrevious))
          return _null;
        t1 = B.boolConversionCheck(isGroupedWithPrevious);
        B.boolConversionCheck(isGroupedWithNext);
        if (B.boolConversionCheck(isGroupedWithNext))
          B.boolConversionCheck(isGroupedWithPrevious);
        return new A.MessageGroupStatus(!t1);
      } catch (exception) {
        return _null;
      }
    },
    _buildMessage$6$groupStatus$isSentByMe(context, builders, message, index, groupStatus, isSentByMe) {
      var t1, result, _null = null;
      if (type$.TextMessage._is(message)) {
        t1 = builders.textMessageBuilder;
        t1 = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return t1 == null ? new A.SimpleTextMessage(message, _null) : t1;
      }
      if (type$.TextStreamMessage._is(message)) {
        t1 = builders.textStreamMessageBuilder;
        t1 = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return t1 == null ? P.SizedBox_0_0_null_null : t1;
      }
      if (type$.ImageMessage._is(message)) {
        t1 = builders.imageMessageBuilder;
        result = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return result == null ? P.SizedBox_0_0_null_null : result;
      }
      if (type$.CustomMessage._is(message)) {
        t1 = builders.customMessageBuilder;
        t1 = t1 == null ? _null : t1.call$5$groupStatus$isSentByMe(context, message, index, groupStatus, isSentByMe);
        return t1 == null ? P.SizedBox_0_0_null_null : t1;
      }
    },
    set$___ChatMessageInternalState__operationsSubscription_A(___ChatMessageInternalState__operationsSubscription_A) {
      this.___ChatMessageInternalState__operationsSubscription_A = type$.nullable_StreamSubscription_ChatOperation._as(___ChatMessageInternalState__operationsSubscription_A);
    }
  };
  A.Composer.prototype = {
    createState$0() {
      return new A._ComposerState(new N.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget));
    }
  };
  A._ComposerState.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this, _null = null;
      _this.super$State$initState();
      _this._widget.toString;
      t1 = new A6.TextEditingController(U.TextEditingValue_Yyo, $.$get$ChangeNotifier__emptyListeners());
      type$.TextEditingController._as(t1);
      _this.___ComposerState__textController_F !== $ && B.throwLateFieldAI("_textController");
      _this.___ComposerState__textController_F = t1;
      t2 = B.FocusNode$(true, _null, true, true, _null, _null, false);
      _this.___ComposerState__focusNode_F !== $ && B.throwLateFieldAI("_focusNode");
      _this.___ComposerState__focusNode_F = t2;
      t3 = type$.ValueNotifier_bool;
      t3 = t3._as(new B.ValueNotifier(C.JSString_methods.trim$0(t1._change_notifier$_value.text).length !== 0, $.$get$ChangeNotifier__emptyListeners(), t3));
      _this.___ComposerState__hasTextNotifier_F !== $ && B.throwLateFieldAI("_hasTextNotifier");
      _this.set$___ComposerState__hasTextNotifier_F(t3);
      t2.set$onKeyEvent(_this.get$_handleKeyEvent());
      t1.addListener$1(0, _this.get$_handleTextControllerChange());
      t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ComposerState_initState_closure(_this)));
    },
    _handleKeyEvent$2(node, $event) {
      var t1, t2;
      type$.FocusNode._as(node);
      type$.KeyEvent._as($event);
      t1 = false;
      if ($event instanceof B.KeyDownEvent)
        if ($event.logicalKey.$eq(0, C.LogicalKeyboardKey_4294967309)) {
          t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__keyboard_F;
          t1 === $ && B.throwLateFieldNI("_keyboard");
          t1 = t1._pressedKeys;
          t2 = B._instanceType(t1)._eval$1("LinkedHashMapValuesIterable<2>");
          t1 = new B.LinkedHashMapValuesIterable(t1, t2).contains$1(0, C.LogicalKeyboardKey_8589934850) || new B.LinkedHashMapValuesIterable(t1, t2).contains$1(0, C.LogicalKeyboardKey_8589934851);
        }
      if (t1) {
        t1 = this.___ComposerState__textController_F;
        t1 === $ && B.throwLateFieldNI("_textController");
        this._handleSubmitted$1(t1._change_notifier$_value.text);
        return C.KeyEventResult_0;
      }
      return C.KeyEventResult_1;
    },
    didUpdateWidget$1(oldWidget) {
      var t1;
      this.super$State$didUpdateWidget(type$.Composer._as(oldWidget));
      this._widget.toString;
      t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ComposerState_didUpdateWidget_closure(this)));
    },
    dispose$0() {
      var t2, _this = this,
        t1 = _this.___ComposerState__hasTextNotifier_F;
      t1 === $ && B.throwLateFieldNI("_hasTextNotifier");
      t2 = $.$get$ChangeNotifier__emptyListeners();
      t1.set$_change_notifier$_listeners(t2);
      t1.ChangeNotifier__count = 0;
      t1 = _this.___ComposerState__textController_F;
      t1 === $ && B.throwLateFieldNI("_textController");
      t1.removeListener$1(0, _this.get$_handleTextControllerChange());
      _this._widget.toString;
      t1.set$_change_notifier$_listeners(t2);
      t1.ChangeNotifier__count = 0;
      _this._widget.toString;
      t1 = _this.___ComposerState__focusNode_F;
      t1 === $ && B.throwLateFieldNI("_focusNode");
      t1.dispose$0();
      _this.super$State$dispose();
    },
    build$1(context) {
      var bottomSafeArea, onAttachmentTap, theme, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, $content, _this = this, _null = null;
      _this._widget.toString;
      bottomSafeArea = B.InheritedModel_inheritFrom(context, _null, type$.MediaQuery).data.padding.bottom;
      onAttachmentTap = H.Provider_of(context, false, type$.nullable_void_Function);
      theme = R.SelectContext_select(context, new A._ComposerState_build_closure(), type$.ChatTheme, type$.Record_5_TextStyle_bodyMedium_and_Color_onSurface_and_Color_primary_and_Color_surfaceContainerHigh_and_Color_surfaceContainerLow);
      _this._widget.toString;
      t1 = theme._values[4].withValues$1$alpha(0.8);
      t2 = type$.JSArray_Widget;
      t3 = B._setArrayType([], t2);
      t4 = _this._widget.topWidget;
      if (t4 != null)
        t3.push(t4);
      _this._widget.toString;
      t4 = Ai.EdgeInsets_8_8_8_8.add$1(0, new B.EdgeInsets(0, 0, 0, bottomSafeArea));
      _this._widget.toString;
      if (onAttachmentTap != null) {
        t5 = theme._values[1].withValues$1$alpha(0.5);
        t5 = X.IconButton$(t5, _null, D.Icon_PJ0, _null, _null, onAttachmentTap, _null, _null, _null);
      } else
        t5 = P.SizedBox_0_0_null_null;
      t6 = _this._widget;
      t6.toString;
      t7 = _this.___ComposerState__textController_F;
      t7 === $ && B.throwLateFieldNI("_textController");
      t8 = theme._values;
      t9 = t8[0];
      t10 = t8[1].withValues$1$alpha(0.5);
      t9 = t9.copyWith$1$color(t10);
      _this._widget.toString;
      t10 = t8[3].withValues$1$alpha(0.8);
      t6 = Y.InputDecoration$(_null, D.OutlineInputBorder_Yew, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, t10, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t9, t6.hintText, _null, C.Color_Edl, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t9 = t8[0];
      _this._widget.toString;
      t8 = t8[1];
      t8 = t9.copyWith$1$color(t8);
      _this._widget.toString;
      t9 = _this.___ComposerState__focusNode_F;
      t9 === $ && B.throwLateFieldNI("_focusNode");
      t8 = A3.Expanded$(Y.TextField$(true, C.List_empty, false, _null, true, _null, Y.text_field0_TextField__defaultContextMenuBuilder$closure(), t7, _null, _null, t6, E.DragStartBehavior_1, true, _null, true, _null, false, t9, U.Type_EditableText_O5i, _null, _null, _null, _null, _null, _null, _null, 3, 1, _null, false, "\u2022", _null, new A._ComposerState_build_closure0(_this), _null, _this.get$_handleSubmitted(), _null, false, _null, false, _null, _null, A4.EdgeInsets_20_20_20_20, _null, _null, _null, _null, _null, _null, _null, t8, true, C.TextAlign_4, _null, D.TextCapitalization_10, _null, C.TextInputAction_12, _null), 1, _null);
      _this._widget.toString;
      t2 = B._setArrayType([t5, new F.SizedBox(8, _null, _null, _null), t8, new F.SizedBox(8, _null, _null, _null)], t2);
      _this._widget.toString;
      t5 = _this.___ComposerState__hasTextNotifier_F;
      t5 === $ && B.throwLateFieldNI("_hasTextNotifier");
      t2.push(A0.ValueListenableBuilder$(new A._ComposerState_build_closure1(_this, theme), t5, type$.bool));
      t3.push(new F.Padding(t4, W.Row$(t2, E.CrossAxisAlignment_2, _null, E.MainAxisAlignment_0, E.MainAxisSize_1, 0, _null, _null, E.VerticalDirection_1), _null));
      $content = F.Container$(_null, T.Column$(t3, E.CrossAxisAlignment_2, _null, E.MainAxisAlignment_0, E.MainAxisSize_1, 0, _null, _null, E.VerticalDirection_1), C.Clip_0, t1, _null, _null, _null, _null, _this._composer$_key, _null, _null, _null, _null, _null);
      _this._widget.toString;
      return N.Positioned$(0, A9.ClipRect$(S.BackdropFilter$($content, $.$get$_renderer().createBlurImageFilter$3$sigmaX$sigmaY$tileMode(20, 20, _null)), C.Clip_1), _null, _null, 0, 0, _null, _null);
    },
    _measure$0() {
      var t1, t2, t3, _this = this;
      if (_this._framework$_element == null)
        return;
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this._composer$_key);
      t1 = t1 == null ? null : t1.get$renderObject();
      type$.nullable_RenderBox._as(t1);
      if (t1 != null) {
        t1 = t1.get$size(0);
        t2 = _this._framework$_element;
        t2.toString;
        t2 = B.InheritedModel_inheritFrom(t2, null, type$.MediaQuery).data;
        t3 = _this._framework$_element;
        t3.toString;
        t3 = H.Provider_of(t3, false, type$.ComposerHeightNotifier);
        _this._widget.toString;
        t1 = t1._dy - t2.padding.bottom;
        if (t3._composer_height_notifier$_height !== t1) {
          t3._composer_height_notifier$_height = t1;
          t3.notifyListeners$0();
        }
      }
    },
    _handleTextControllerChange$0() {
      var t2,
        t1 = this.___ComposerState__hasTextNotifier_F;
      t1 === $ && B.throwLateFieldNI("_hasTextNotifier");
      t2 = this.___ComposerState__textController_F;
      t2 === $ && B.throwLateFieldNI("_textController");
      t1.set$value(0, C.JSString_methods.trim$0(t2._change_notifier$_value.text).length !== 0);
    },
    _handleSubmitted$1(text) {
      var t1, t2, _this = this;
      _this._widget.toString;
      t1 = C.JSString_methods.trim$0(text);
      if (t1.length === 0)
        return;
      t2 = _this._framework$_element;
      t2.toString;
      t2 = H.Provider_of(t2, false, type$.nullable_void_Function_String);
      if (t2 != null)
        t2.call$1(t1);
      _this._widget.toString;
      t1 = _this.___ComposerState__textController_F;
      t1 === $ && B.throwLateFieldNI("_textController");
      t1.super$ValueNotifier$value(0, U.TextEditingValue_2Hq);
    },
    set$___ComposerState__hasTextNotifier_F(___ComposerState__hasTextNotifier_F) {
      this.___ComposerState__hasTextNotifier_F = type$.ValueNotifier_bool._as(___ComposerState__hasTextNotifier_F);
    }
  };
  A.EmptyChatList.prototype = {
    createState$0() {
      return new A._EmptyChatListState(null, null);
    }
  };
  A._EmptyChatListState.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      _this._widget.toString;
      t1 = F.AnimationController$(_null, I.Duration_250000, _null, _null, _this);
      _this.___EmptyChatListState__controller_A = t1;
      _this._widget.toString;
      _this.set$___EmptyChatListState__opacityAnimation_A(type$.Animation_double._as(F.CurvedAnimation$(E.Cubic_O6W, t1, _null)));
      _this._widget.toString;
      B.Future_Future$delayed(C.Duration_50000, new A._EmptyChatListState_initState_closure(_this), type$.Null);
    },
    dispose$0() {
      var t1 = this.___EmptyChatListState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1.dispose$0();
      this.super$__EmptyChatListState_State_SingleTickerProviderStateMixin$dispose();
    },
    build$1(context) {
      var t2, _null = null,
        theme = R.SelectContext_select(context, new A._EmptyChatListState_build_closure(), type$.ChatTheme, type$.Record_2_TextStyle_bodyLarge_and_Color_onSurface),
        t1 = this.___EmptyChatListState__opacityAnimation_A;
      t1 === $ && B.throwLateFieldNI("_opacityAnimation");
      this._widget.toString;
      t2 = theme._0.copyWith$1$color(theme._1);
      return new A5.FadeTransition(t1, false, new F.Padding(D.EdgeInsets_0_0_0_120, F.Center$(V.Text$("No messages yet", _null, _null, _null, _null, _null, _null, _null, t2, _null, _null, _null, _null, _null), _null, _null, _null), _null), _null);
    },
    set$___EmptyChatListState__opacityAnimation_A(___EmptyChatListState__opacityAnimation_A) {
      this.___EmptyChatListState__opacityAnimation_A = type$.Animation_double._as(___EmptyChatListState__opacityAnimation_A);
    },
    $isTickerProvider: 1
  };
  A.__EmptyChatListState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.ScrollToBottom.prototype = {
    build$1(context) {
      return new A2.Consumer(new A.ScrollToBottom_build_closure(this, B.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data.padding.bottom, R.SelectContext_select(context, new A.ScrollToBottom_build_closure0(), type$.ChatTheme, type$.Record_2_Color_onSurface_and_Color_surfaceContainer)), null, null, type$.Consumer_ComposerHeightNotifier);
    }
  };
  A.SimpleTextMessage.prototype = {
    get$_isOnlyEmoji() {
      var t1 = this.message.get$metadata(0);
      return J.$eq$(t1 == null ? null : J.$index$asx(t1, "isOnlyEmoji"), true);
    },
    build$1(context) {
      var textContent, textDirection, t4, t5, _this = this, _null = null,
        theme = R.SelectContext_select(context, new A.SimpleTextMessage_build_closure(), type$.ChatTheme, type$.Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer),
        t1 = _this.message,
        isSentByMe = J.$eq$(H.Provider_of(context, false, type$.String), t1.authorId),
        backgroundColor = _this._resolveBackgroundColor$2(isSentByMe, theme),
        textStyle = _this._resolveTextStyle$2(isSentByMe, theme),
        timeStyle = _this._resolveTimeStyle$2(isSentByMe, theme),
        t2 = t1.get$resolvedTime(),
        t3 = t1.get$resolvedStatus(),
        timeAndStatus = new A.TimeAndStatus(t2, t3, true, isSentByMe, timeStyle, _null);
      if (_this.get$_isOnlyEmoji())
        t2 = textStyle.copyWith$1$fontSize(48);
      else
        t2 = textStyle;
      textContent = V.Text$(t1.text, _null, _null, _null, _null, _null, _null, _null, t2, _null, _null, _null, _null, _null);
      H.Provider_of(context, false, type$.Builders).toString;
      t1 = theme._values[5];
      t2 = _this.get$_isOnlyEmoji() ? _null : new F.BoxDecoration(backgroundColor, _null, _null, _null, _null, _null, _null, L.BoxShape_0);
      if (_this.get$_isOnlyEmoji()) {
        t3 = A1.EdgeInsets_16_10_16_10.get$horizontal();
        t3 /= 2;
        t3 = new B.EdgeInsets(t3, 0, t3, 0);
      } else
        t3 = A1.EdgeInsets_16_10_16_10;
      textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      t4 = type$.JSArray_Widget;
      t5 = B._setArrayType([], t4);
      t5.push(textContent);
      t5.push(Aj.Opacity$(timeAndStatus, 0));
      t5 = B._setArrayType([T.Column$(t5, E.CrossAxisAlignment_0, _null, E.MainAxisAlignment_0, E.MainAxisSize_0, 0, _null, _null, E.VerticalDirection_1)], t4);
      if (timeAndStatus != null)
        t5.push(N.Positioned_Positioned$directional(0, timeAndStatus, 0, _null, _null, textDirection, _null, _null));
      return A7.ClipRRect$(t1, F.Container$(_null, T.Column$(B._setArrayType([F.Container$(_null, new F.Stack(L.AlignmentDirectional_m1_m1, _null, L.StackFit_0, C.Clip_1, t5, _null), C.Clip_0, _null, _null, _null, _null, _null, _null, _null, t3, _null, _null, _null)], t4), E.CrossAxisAlignment_0, _null, E.MainAxisAlignment_0, E.MainAxisSize_0, 0, _null, _null, E.VerticalDirection_1), C.Clip_0, _null, _null, t2, _null, _null, _null, _null, _null, _null, _null, _null));
    },
    _resolveBackgroundColor$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        t1 = theme._values[4];
        return t1;
      }
      t1 = theme._values[6];
      return t1;
    },
    _resolveTextStyle$2(isSentByMe, theme) {
      var t1;
      if (isSentByMe) {
        t1 = theme._values;
        t1 = t1[0].copyWith$1$color(t1[2]);
        return t1;
      }
      t1 = theme._values;
      t1 = t1[0].copyWith$1$color(t1[3]);
      return t1;
    },
    _resolveTimeStyle$2(isSentByMe, theme) {
      var t1, t2;
      if (isSentByMe) {
        t1 = theme._values;
        t2 = t1[1];
        t1 = t2.copyWith$1$color(this.get$_isOnlyEmoji() ? t1[3] : t1[2]);
        return t1;
      }
      t1 = theme._values;
      t1 = t1[1].copyWith$1$color(t1[3]);
      return t1;
    }
  };
  A.TimeAndStatus.prototype = {
    build$1(context) {
      var t3, _this = this, _null = null,
        timeFormat = H.Provider_of(context, true, type$.DateFormat),
        t1 = B._setArrayType([], type$.JSArray_Widget),
        t2 = _this.time;
      if (t2 != null)
        t1.push(V.Text$(timeFormat.format$1(t2.toLocal$0()), _null, _null, _null, _null, _null, _null, _null, _this.textStyle, _null, _null, _null, _null, _null));
      if (_this.showStatus && _this.status != null) {
        t2 = _this.status;
        t3 = _this.textStyle;
        if (t2 === Ae.MessageStatus_3)
          t1.push(new F.SizedBox(6, 6, Ab.CircularProgressIndicator$(_null, t3.color, _null, _null, _null, _null, _null, 2, _null, _null), _null));
        else {
          t2.toString;
          t2 = R.getIconForStatus(t2);
          t1.push(F.Icon$(t2, t3.color, _null, 12));
        }
      }
      return W.Row$(t1, E.CrossAxisAlignment_2, _null, E.MainAxisAlignment_0, E.MainAxisSize_0, 2, _null, _null, E.VerticalDirection_1);
    }
  };
  A.ComposerHeightNotifier.prototype = {};
  A.KeyboardMixin.prototype = {};
  A.LoadMoreNotifier.prototype = {};
  A.MessageListDiff.prototype = {};
  A.SendButtonVisibilityMode.prototype = {
    _enumToString$0() {
      return "SendButtonVisibilityMode." + this._name;
    }
  };
  A.InputClearMode.prototype = {
    _enumToString$0() {
      return "InputClearMode." + this._name;
    }
  };
  A.ObserveDisplayingChildModel.prototype = {};
  A.ObserveDisplayingChildModelMixin.prototype = {
    get$layoutOffset() {
      var t1,
        parentData = this.renderObject.parentData;
      if (!(parentData instanceof G.SliverLogicalParentData))
        return 0;
      t1 = parentData.layoutOffset;
      return t1 == null ? 0 : t1;
    }
  };
  A.ObserveModel.prototype = {};
  A.ObserveScrollChildModel.prototype = {};
  A.ObservePrepareScrollToIndexModel.prototype = {};
  A.ObserverHandleContextsResultModel.prototype = {};
  A.ObserverIndexPositionModel.prototype = {};
  A.ObserverController.prototype = {
    fetchSliverContext$1$sliverContext(sliverContext) {
      return sliverContext == null && J.get$isNotEmpty$asx(this.sliverContexts) ? J.get$first$ax(this.sliverContexts) : sliverContext;
    },
    set$indexOffsetMap(indexOffsetMap) {
      this.indexOffsetMap = type$.Map_of_BuildContext_and_Map_int_ObserveScrollChildModel._as(indexOffsetMap);
    },
    set$sliverContexts(sliverContexts) {
      this.sliverContexts = type$.List_BuildContext._as(sliverContexts);
    },
    set$innerNeedOnceObserveCallBack(innerNeedOnceObserveCallBack) {
      this.innerNeedOnceObserveCallBack = type$.nullable_dynamic_Function._as(innerNeedOnceObserveCallBack);
    },
    set$innerReattachCallBack(innerReattachCallBack) {
      type$.nullable_dynamic_Function._as(innerReattachCallBack);
    }
  };
  A.ObserverControllerForNotification.prototype = {
    innerHandleDispatchOnceObserveComplete$1$resultModel(resultModel) {
      var completer, t1, resultType;
      B._instanceType(this)._eval$1("ObserverControllerForNotification.R?")._as(resultModel);
      completer = this.ObserverControllerForNotification_innerDispatchOnceObserveCompleter;
      if (completer == null)
        return;
      if ((completer.future._state & 30) === 0) {
        t1 = resultModel == null;
        resultType = !t1 ? D.ObserverWidgetObserveResultType_0 : D.ObserverWidgetObserveResultType_1;
        type$.nullable_SliverObserverHandleContextsResultModel_ObserveModel._as(resultModel);
        completer.complete$1(0, new A.ScrollViewOnceObserveNotificationResult(resultType, (t1 ? new A.SliverObserverHandleContextsResultModel(null, null, D.Map_empty7, type$.SliverObserverHandleContextsResultModel_ObserveModel) : resultModel).changeResultModel));
      }
      this.set$innerDispatchOnceObserveCompleter(null);
    },
    set$innerDispatchOnceObserveCompleter(innerDispatchOnceObserveCompleter) {
      this.ObserverControllerForNotification_innerDispatchOnceObserveCompleter = B._instanceType(this)._eval$1("Completer<ObserverControllerForNotification.S>?")._as(innerDispatchOnceObserveCompleter);
    }
  };
  A.ObserverControllerForInfo.prototype = {
    findCurrentFirstChild$1(obj) {
      var child, t1, t2, nextChild,
        firstChild = obj.ContainerRenderObjectMixin__firstChild;
      if (firstChild == null)
        return null;
      if (firstChild instanceof G.RenderIndexedSemantics)
        child = firstChild;
      else {
        t1 = B._instanceType(obj);
        t2 = t1._eval$1("ContainerRenderObjectMixin.0")._as(firstChild).parentData;
        t2.toString;
        nextChild = t1._eval$1("ContainerRenderObjectMixin.1")._as(t2).ContainerParentDataMixin_nextSibling;
        child = nextChild instanceof G.RenderIndexedSemantics ? nextChild : null;
      }
      return child;
    },
    findCurrentLastChild$1(obj) {
      var child, t1, t2, previousChild,
        lastChild = obj.ContainerRenderObjectMixin__lastChild;
      if (lastChild == null)
        return null;
      if (lastChild instanceof G.RenderIndexedSemantics)
        child = lastChild;
      else {
        t1 = B._instanceType(obj);
        t2 = t1._eval$1("ContainerRenderObjectMixin.0")._as(lastChild).parentData;
        t2.toString;
        previousChild = t1._eval$1("ContainerRenderObjectMixin.1")._as(t2).ContainerParentDataMixin_previousSibling;
        child = previousChild instanceof G.RenderIndexedSemantics ? previousChild : null;
      }
      return child;
    },
    viewportExtremeScrollExtent$2$obj$viewport(obj, viewport) {
      var t1,
        offset = type$.RenderViewportBase_ContainerParentDataMixin_RenderSliver._as(viewport)._viewport0$_offset;
      if (K.GrowthDirection_0 === type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection) {
        t1 = offset._maxScrollExtent;
        t1.toString;
      } else {
        t1 = offset._minScrollExtent;
        t1.toString;
      }
      return t1;
    }
  };
  A.ObserverControllerForScroll.prototype = {
    innerInitialIndexPosition$0() {
      var t1 = this.ObserverControllerForScroll_initialIndexModel.index;
      if (t1 <= 0)
        return;
      this.innerJumpTo$6$alignment$index$isFixedHeight$offset$padding$sliverContext(0, t1, false, null, C.EdgeInsets_0_0_0_0, null);
    },
    innerJumpTo$8$alignment$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      var t1;
      type$.nullable_double_Function_double._as(offset);
      t1 = new B._Future($.Zone__current, type$._Future_dynamic);
      this._observer_controller$_scrollToIndex$9$alignment$completer$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, new B._AsyncCompleter(t1, type$._AsyncCompleter_dynamic), index, false, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext);
      return t1;
    },
    innerJumpTo$6$alignment$index$isFixedHeight$offset$padding$sliverContext(alignment, index, isFixedHeight, offset, padding, sliverContext) {
      return this.innerJumpTo$8$alignment$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, index, isFixedHeight, offset, null, padding, null, sliverContext);
    },
    _observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, completer, curve, duration, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      return this._scrollToIndex$body$ObserverControllerForScroll(alignment, completer, curve, duration, index, false, type$.nullable_double_Function_double._as(offset), onPrepareScrollToIndex, padding, renderSliverType, sliverContext);
    },
    _observer_controller$_scrollToIndex$9$alignment$completer$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, completer, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      return this._observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext(alignment, completer, null, null, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext);
    },
    _scrollToIndex$body$ObserverControllerForScroll(alignment, completer, curve, duration, index, isFixedHeight, offset, onPrepareScrollToIndex, padding, renderSliverType, sliverContext) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, t2, obj, viewport, isAnimateTo, extremeScrollExtent, maxScrollExtent, precedingScrollExtent, t3, paintScrollExtent, pixels, targetScrollExtent, viewportOffset, viewportSize, viewportBoundaryExtent, targetOffset, targetScrollChildModel, firstChild, lastChild, _controller, ctx;
      var $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _controller = $async$self.controller;
              ctx = $async$self.fetchSliverContext$1$sliverContext(sliverContext);
              if (ctx == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = _controller._positions;
              t2 = t1.length;
              if (t2 === 0) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              obj = A.ObserverUtils_findRenderObject(ctx);
              if (!(obj instanceof G.RenderSliverMultiBoxAdaptor)) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              viewport = A.ObserverUtils_findViewport(obj);
              if (viewport == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.innerIsHandlingScroll = true;
              new A.ObserverScrollStartNotification().dispatch$1(ctx);
              isAnimateTo = duration != null && curve != null;
              t2 = obj._geometry;
              t2 = t2 == null ? null : t2.visible;
              $async$goto = t2 !== true && viewport._viewport0$_offset._pixels != null ? 3 : 4;
              break;
            case 3:
              // then
              extremeScrollExtent = $async$self.viewportExtremeScrollExtent$2$obj$viewport(obj, viewport);
              t2 = type$.SliverConstraints;
              maxScrollExtent = K.GrowthDirection_0 === t2._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? extremeScrollExtent : -extremeScrollExtent;
              $async$goto = obj.ContainerRenderObjectMixin__firstChild == null ? 5 : 7;
              break;
            case 5:
              // then
              precedingScrollExtent = t2._as(B.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent;
              t3 = obj._geometry;
              t3 = t3 == null ? null : t3.maxPaintExtent;
              paintScrollExtent = precedingScrollExtent + (t3 == null ? 0 : t3);
              t1 = C.JSArray_methods.get$single(t1)._pixels;
              t1.toString;
              if (K.GrowthDirection_0 === t2._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection)
                pixels = t1;
              else
                pixels = -t1;
              targetScrollExtent = pixels > paintScrollExtent ? paintScrollExtent : precedingScrollExtent;
              if (targetScrollExtent > maxScrollExtent)
                targetScrollExtent = maxScrollExtent;
              $async$goto = 8;
              return B._asyncAwait(_controller.animateTo$3$curve$duration(K.GrowthDirection_0 === t2._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? targetScrollExtent : -targetScrollExtent, C.Cubic_glB, D.Duration_1000), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 8:
              // returning from await.
              $async$goto = 9;
              return B._asyncAwait($.WidgetsBinding__instance.get$endOfFrame(), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              precedingScrollExtent = t2._as(B.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent;
              t1 = viewport._viewport0$_offset._pixels;
              t1.toString;
              if (K.GrowthDirection_0 === t2._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection)
                viewportOffset = t1;
              else
                viewportOffset = -t1;
              viewportSize = B.axisDirectionToAxis(t2._as(B.RenderObject.prototype.get$constraints.call(obj)).axisDirection) === C.Axis_0 ? viewport.get$size(0)._dx : viewport.get$size(0)._dy;
              t1 = viewport._cacheExtent;
              viewportBoundaryExtent = viewportSize * 0.5 + t1;
              $async$goto = precedingScrollExtent > viewportOffset + viewportBoundaryExtent ? 10 : 11;
              break;
            case 10:
              // then
              targetOffset = precedingScrollExtent - viewportBoundaryExtent;
              if (targetOffset > maxScrollExtent)
                targetOffset = maxScrollExtent;
              $async$goto = 12;
              return B._asyncAwait(_controller.animateTo$3$curve$duration(K.GrowthDirection_0 === t2._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? targetOffset : -targetOffset, C.Cubic_glB, D.Duration_1000), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 12:
              // returning from await.
              $async$goto = 13;
              return B._asyncAwait($.WidgetsBinding__instance.get$endOfFrame(), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 13:
              // returning from await.
            case 11:
              // join
            case 6:
              // join
            case 4:
              // join
              t1 = $async$self.indexOffsetMap.$index(0, ctx);
              targetScrollChildModel = t1 == null ? null : t1.$index(0, index);
              $async$goto = targetScrollChildModel != null ? 14 : 15;
              break;
            case 14:
              // then
              new A.ObserverScrollDecisionNotification().dispatch$1(ctx);
              $async$goto = 16;
              return B._asyncAwait($async$self._scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex($async$self._calculateTargetLayoutOffset$6$alignment$childLayoutOffset$childSize$obj$offset$padding(alignment, targetScrollChildModel.layoutOffset, targetScrollChildModel.size, obj, offset, padding), _controller, curve, duration, isAnimateTo, onPrepareScrollToIndex), $async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext);
            case 16:
              // returning from await.
              $async$self._handleScrollEnd$2$completer$context(completer, ctx);
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // join
              firstChild = $async$self.findCurrentFirstChild$1(obj);
              lastChild = $async$self.findCurrentLastChild$1(obj);
              if (firstChild == null || lastChild == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._handleScrollToIndex$12$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChild._proxy_box$_index, index, lastChild._proxy_box$_index, obj, offset, onPrepareScrollToIndex, padding);
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_observer_controller$_scrollToIndex$11$alignment$completer$curve$duration$index$isFixedHeight$offset$onPrepareScrollToIndex$padding$renderSliverType$sliverContext, $async$completer);
    },
    _handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, lastPageTurningOffset, obj, offset, onPrepareScrollToIndex, padding) {
      return this._handleScrollToIndex$body$ObserverControllerForScroll(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, lastPageTurningOffset, obj, type$.nullable_double_Function_double._as(offset), onPrepareScrollToIndex, padding);
    },
    _handleScrollToIndex$12$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, obj, offset, onPrepareScrollToIndex, padding) {
      return this._handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, null, obj, offset, onPrepareScrollToIndex, padding);
    },
    _handleScrollToIndex$body$ObserverControllerForScroll(alignment, completer, ctx, curve, duration, firstChildIndex, index, lastChildIndex, lastPageTurningOffset, obj, offset, onPrepareScrollToIndex, padding) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, _controller, t1, viewport, extremeScrollExtent, maxScrollExtent, isHorizontal, isAnimateTo, precedingScrollExtent, t2, sliverSize, firstChild, parentData, childLayoutOffset, targetLeadingOffset, prevPageOffset, prevPageOffsetRectified, lastChild, childSize, nextPageOffset, nextPageOffsetRectified, targetChild, t3, t4, currentChildIndex, t5, childSize0, calcResult, _box_0;
      var $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.firstChildIndex = firstChildIndex;
              _box_0.lastChildIndex = lastChildIndex;
              _box_0.lastPageTurningOffset = lastPageTurningOffset;
              _controller = $async$self.controller;
              t1 = _controller._positions.length;
              if (t1 === 0) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              viewport = A.ObserverUtils_findViewport(obj);
              if (viewport == null) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              extremeScrollExtent = $async$self.viewportExtremeScrollExtent$2$obj$viewport(obj, viewport);
              t1 = type$.SliverConstraints;
              maxScrollExtent = K.GrowthDirection_0 === t1._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? extremeScrollExtent : -extremeScrollExtent;
              isHorizontal = B.axisDirectionToAxis(t1._as(B.RenderObject.prototype.get$constraints.call(obj)).axisDirection) === C.Axis_0;
              isAnimateTo = duration != null && curve != null;
              precedingScrollExtent = t1._as(B.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent;
              $async$goto = index < firstChildIndex ? 3 : 5;
              break;
            case 3:
              // then
              if (isHorizontal) {
                t2 = obj.get$paintBounds();
                sliverSize = t2.right - t2.left;
              } else {
                t2 = obj.get$paintBounds();
                sliverSize = t2.bottom - t2.top;
              }
              firstChild = $async$self.findCurrentFirstChild$1(obj);
              parentData = firstChild == null ? null : firstChild.parentData;
              if (parentData instanceof G.SliverMultiBoxAdaptorParentData) {
                childLayoutOffset = parentData.layoutOffset;
                if (childLayoutOffset == null)
                  childLayoutOffset = 0;
              } else
                childLayoutOffset = 0;
              targetLeadingOffset = childLayoutOffset - sliverSize;
              prevPageOffset = (targetLeadingOffset < 0 ? 0 : targetLeadingOffset) + precedingScrollExtent;
              if (prevPageOffset < 0)
                prevPageOffset = 0;
              if (lastPageTurningOffset === prevPageOffset) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              _box_0.lastPageTurningOffset = prevPageOffset;
              prevPageOffsetRectified = K.GrowthDirection_0 === t1._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? prevPageOffset : -prevPageOffset;
              $async$goto = isAnimateTo ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return B._asyncAwait(_controller.animateTo$3$curve$duration(prevPageOffsetRectified, C.Cubic_glB, D.Duration_1000), $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              _controller.jumpTo$1(prevPageOffsetRectified);
            case 7:
              // join
              t1 = $.WidgetsBinding__instance;
              t1.toString;
              C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A.ObserverControllerForScroll__handleScrollToIndex_closure(_box_0, $async$self, obj, ctx, completer, index, alignment, padding, duration, curve, offset, onPrepareScrollToIndex)));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = index > lastChildIndex ? 10 : 12;
              break;
            case 10:
              // then
              lastChild = $async$self.findCurrentLastChild$1(obj);
              if (isHorizontal) {
                t2 = lastChild == null ? null : 0 + lastChild.get$size(0)._dx;
                childSize = t2;
              } else {
                t2 = lastChild == null ? null : 0 + lastChild.get$size(0)._dy;
                childSize = t2;
              }
              if (childSize == null)
                childSize = 0;
              parentData = lastChild == null ? null : lastChild.parentData;
              if (parentData instanceof G.SliverMultiBoxAdaptorParentData) {
                childLayoutOffset = parentData.layoutOffset;
                if (childLayoutOffset == null)
                  childLayoutOffset = 0;
              } else
                childLayoutOffset = 0;
              nextPageOffset = childLayoutOffset + childSize + precedingScrollExtent;
              if (nextPageOffset > maxScrollExtent)
                nextPageOffset = maxScrollExtent;
              if (lastPageTurningOffset === nextPageOffset) {
                $async$self._handleScrollInterruption$2$completer$context(completer, ctx);
                // goto return
                $async$goto = 1;
                break;
              }
              _box_0.lastPageTurningOffset = nextPageOffset;
              nextPageOffsetRectified = K.GrowthDirection_0 === t1._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? nextPageOffset : -nextPageOffset;
              $async$goto = isAnimateTo ? 13 : 15;
              break;
            case 13:
              // then
              $async$goto = 16;
              return B._asyncAwait(_controller.animateTo$3$curve$duration(nextPageOffsetRectified, C.Cubic_glB, D.Duration_1000), $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding);
            case 16:
              // returning from await.
              // goto join
              $async$goto = 14;
              break;
            case 15:
              // else
              _controller.jumpTo$1(nextPageOffsetRectified);
            case 14:
              // join
              t1 = $.WidgetsBinding__instance;
              t1.toString;
              C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A.ObserverControllerForScroll__handleScrollToIndex_closure0(_box_0, $async$self, obj, ctx, completer, index, alignment, padding, duration, curve, offset, onPrepareScrollToIndex)));
              // goto join
              $async$goto = 11;
              break;
            case 12:
              // else
              targetChild = obj.ContainerRenderObjectMixin__firstChild;
              t2 = B._instanceType(obj), t3 = t2._eval$1("ContainerRenderObjectMixin.0"), t2 = t2._eval$1("ContainerRenderObjectMixin.1");
            case 17:
              // for condition
              if (!(targetChild != null)) {
                // goto after for
                $async$goto = 18;
                break;
              }
              if (!(targetChild instanceof G.RenderIndexedSemantics)) {
                t4 = t3._as(targetChild).parentData;
                t4.toString;
                targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
                // goto for condition
                $async$goto = 17;
                break;
              }
              currentChildIndex = targetChild._proxy_box$_index;
              parentData = targetChild.parentData;
              if (parentData instanceof G.SliverMultiBoxAdaptorParentData) {
                childLayoutOffset = parentData.layoutOffset;
                if (childLayoutOffset == null)
                  childLayoutOffset = 0;
              } else
                childLayoutOffset = 0;
              t4 = B.axisDirectionToAxis(t1._as(B.RenderObject.prototype.get$constraints.call(obj)).axisDirection);
              t5 = targetChild._box$_size;
              if (t5 == null)
                t5 = B.throwExpression(B.StateError$("RenderBox was not laid out: " + B.getRuntimeTypeOfDartObject(targetChild).toString$0(0) + "#" + B.shortHash(targetChild)));
              childSize = 0 + t5._dx;
              childSize0 = 0 + t5._dy;
              childSize = t4 === C.Axis_0 ? childSize : childSize0;
              $async$self._updateIndexOffsetMap$4$childLayoutOffset$childSize$ctx$index(childLayoutOffset, childSize, ctx, currentChildIndex);
              $async$goto = currentChildIndex !== index ? 19 : 21;
              break;
            case 19:
              // then
              t4 = t3._as(targetChild).parentData;
              t4.toString;
              targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
              // goto for condition
              $async$goto = 17;
              break;
              // goto join
              $async$goto = 20;
              break;
            case 21:
              // else
              new A.ObserverScrollDecisionNotification().dispatch$1(ctx);
              calcResult = $async$self._calculateTargetLayoutOffset$6$alignment$childLayoutOffset$childSize$obj$offset$padding(alignment, childLayoutOffset, childSize, obj, offset, padding);
              t1 = isAnimateTo ? duration : null;
              $async$goto = 22;
              return B._asyncAwait($async$self._scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex(calcResult, _controller, isAnimateTo ? curve : null, t1, isAnimateTo, onPrepareScrollToIndex), $async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding);
            case 22:
              // returning from await.
              $async$self._handleScrollEnd$2$completer$context(completer, ctx);
            case 20:
              // join
              // goto after for
              $async$goto = 18;
              break;
              // goto for condition
              $async$goto = 17;
              break;
            case 18:
              // after for
            case 11:
              // join
            case 4:
              // join
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding, $async$completer);
    },
    _scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex(calcResult, controller, curve, duration, isAnimateTo, onPrepareScrollToIndex) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, targetOffset, t1, haveHandle;
      var $async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = B._Future$value(null, type$.nullable_bool);
              $async$goto = 3;
              return B._asyncAwait(t1, $async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex);
            case 3:
              // returning from await.
              haveHandle = $async$result;
              if (haveHandle == null ? false : haveHandle) {
                // goto return
                $async$goto = 1;
                break;
              }
              targetOffset = calcResult.calculateTargetLayoutOffset;
              $async$goto = isAnimateTo ? 4 : 6;
              break;
            case 4:
              // then
              t1 = duration == null ? D.Duration_1000 : duration;
              $async$goto = 7;
              return B._asyncAwait(controller.animateTo$3$curve$duration(targetOffset, curve == null ? L.C__Linear : curve, t1), $async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex);
            case 7:
              // returning from await.
              // goto join
              $async$goto = 5;
              break;
            case 6:
              // else
              controller.jumpTo$1(targetOffset);
            case 5:
              // join
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_scrollTo$6$calcResult$controller$curve$duration$isAnimateTo$onPrepareScrollToIndex, $async$completer);
    },
    _calculateTargetLayoutOffset$6$alignment$childLayoutOffset$childSize$obj$offset$padding(alignment, childLayoutOffset, childSize, obj, offset, padding) {
      var t1, targetOffset, viewport, t2, scrollOffset, extremeScrollExtent, remainingBottomExtent, needScrollExtent, outerOffset;
      type$.nullable_double_Function_double._as(offset);
      t1 = type$.SliverConstraints;
      targetOffset = childLayoutOffset + t1._as(B.RenderObject.prototype.get$constraints.call(obj)).precedingScrollExtent + childSize * alignment;
      viewport = A.ObserverUtils_findViewport(obj);
      if (viewport != null && viewport._viewport0$_offset._pixels != null) {
        t2 = viewport._viewport0$_offset._pixels;
        t2.toString;
        if (K.GrowthDirection_0 === t1._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection)
          scrollOffset = t2;
        else
          scrollOffset = -t2;
        extremeScrollExtent = this.viewportExtremeScrollExtent$2$obj$viewport(obj, viewport);
        remainingBottomExtent = (K.GrowthDirection_0 === t1._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? extremeScrollExtent : -extremeScrollExtent) - scrollOffset;
        needScrollExtent = targetOffset - scrollOffset;
      } else {
        scrollOffset = 0;
        remainingBottomExtent = 0;
        needScrollExtent = 0;
      }
      outerOffset = offset == null ? null : offset.call$1(targetOffset);
      needScrollExtent -= outerOffset == null ? 0 : outerOffset;
      targetOffset = C.JSNumber_methods.clamp$2(!(remainingBottomExtent >= needScrollExtent) ? remainingBottomExtent + scrollOffset : needScrollExtent + scrollOffset, 0, 17976931348623157e292);
      return new A.ObservePrepareScrollToIndexModel(K.GrowthDirection_0 === t1._as(B.RenderObject.prototype.get$constraints.call(obj)).growthDirection ? targetOffset : -targetOffset);
    },
    _updateIndexOffsetMap$4$childLayoutOffset$childSize$ctx$index(childLayoutOffset, childSize, ctx, index) {
      var map;
      if (!this.ObserverControllerForScroll_cacheJumpIndexOffset)
        return;
      map = this.indexOffsetMap.$index(0, ctx);
      if (map == null)
        map = B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.ObserveScrollChildModel);
      map.$indexSet(0, index, new A.ObserveScrollChildModel(childSize, childLayoutOffset));
      this.indexOffsetMap.$indexSet(0, ctx, map);
    },
    _handleScrollInterruption$2$completer$context(completer, context) {
      this.innerIsHandlingScroll = false;
      completer.complete$0(0);
      new A.ObserverScrollInterruptionNotification().dispatch$1(context);
    },
    _handleScrollEnd$2$completer$context(completer, context) {
      var t1;
      if (this.innerNeedOnceObserveCallBack != null) {
        t1 = $.WidgetsBinding__instance;
        t1.toString;
        C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A.ObserverControllerForScroll__handleScrollEnd_closure(this, completer, context)));
      } else {
        this.innerIsHandlingScroll = false;
        completer.complete$0(0);
        new A.ObserverScrollEndNotification().dispatch$1(context);
      }
    }
  };
  A.CommonOnceObserveNotificationResult.prototype = {};
  A.ObserverAutoTriggerObserveType.prototype = {
    _enumToString$0() {
      return "ObserverAutoTriggerObserveType." + this._name;
    }
  };
  A.ObserverTriggerOnObserveType.prototype = {
    _enumToString$0() {
      return "ObserverTriggerOnObserveType." + this._name;
    }
  };
  A.ObserverRenderSliverType.prototype = {
    _enumToString$0() {
      return "ObserverRenderSliverType." + this._name;
    }
  };
  A.ObserverWidget.prototype = {
    createState$0() {
      var t1 = B._instanceType(this);
      return A.ObserverWidgetState$(t1._eval$1("ObserverWidget.C"), t1._eval$1("ObserverWidget.M"), t1._eval$1("ObserverWidget.N"), t1._eval$1("ObserverWidget<ObserverWidget.C,ObserverWidget.M,ObserverWidget.N>"));
    }
  };
  A.ObserverWidgetState.prototype = {
    get$innerAutoTriggerObserveScrollNotifications() {
      var t1, t2;
      this._widget.toString;
      t1 = B._setArrayType([D.ObserverAutoTriggerObserveType_0, D.ObserverAutoTriggerObserveType_1, D.ObserverAutoTriggerObserveType_2], type$.JSArray_ObserverAutoTriggerObserveType);
      t2 = type$.MappedListIterable_ObserverAutoTriggerObserveType_Type;
      return B.List_List$of(new B.MappedListIterable(t1, type$.Type_Function_ObserverAutoTriggerObserveType._as(new A.ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure()), t2), true, t2._eval$1("ListIterable.E"));
    },
    initState$0() {
      this.super$State$initState();
      this._setupSliverController$1$isInitState(true);
    },
    didUpdateWidget$1(oldWidget) {
      B._instanceType(this)._eval$1("ObserverWidgetState.T")._as(oldWidget);
      this.super$State$didUpdateWidget(oldWidget);
      this._checkTagChange$1(oldWidget);
    },
    dispose$0() {
      var t1 = this.innerListeners;
      if (t1 != null)
        t1.clear$0(0);
      this.set$innerListeners(null);
      this.super$State$dispose();
    },
    build$1(context) {
      var _this = this, _null = null,
        t1 = B._instanceType(_this),
        resultWidget = new O.NotificationListener(new A.ObserverWidgetState_build_closure(_this), new O.NotificationListener(new A.ObserverWidgetState_build_closure0(_this), new A.ObserverWidgetScope(_this, _this.get$_handleScopeContext(), _this._widget.child, _null, t1._eval$1("ObserverWidgetScope<ObserverWidgetState.C,ObserverWidgetState.M,ObserverWidgetState.N,ObserverWidgetState.T>")), _null, type$.NotificationListener_ScrollNotification), _null, t1._eval$1("NotificationListener<ObserverWidgetState.N>"));
      return context.dependOnInheritedWidgetOfExactType$1$0(type$.ObserverWidgetTagManager) == null ? new A.ObserverWidgetTagManager(B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.BuildContext), resultWidget, _null) : resultWidget;
    },
    _setupSliverController$1$isInitState(isInitState) {
      var t1, _this = this,
        sliverController = _this._widget.sliverController;
      sliverController.set$indexOffsetMap(B.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.Map_int_ObserveScrollChildModel));
      sliverController.innerIsHandlingScroll = false;
      sliverController.set$innerNeedOnceObserveCallBack(new A.ObserverWidgetState__setupSliverController_closure(_this));
      sliverController.set$innerReattachCallBack(new A.ObserverWidgetState__setupSliverController_closure0(_this));
      t1 = $.WidgetsBinding__instance;
      t1.toString;
      C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A.ObserverWidgetState__setupSliverController_closure1(_this, sliverController, isInitState)));
    },
    _setupSliverController$0() {
      return this._setupSliverController$1$isInitState(false);
    },
    fetchTargetSliverContexts$0() {
      var visitor, sliverListContexts, _ctxs, t1, exception, _this = this,
        ctxs = _this.targetSliverContexts;
      if (J.get$isEmpty$asx(ctxs)) {
        sliverListContexts = _this._widget.sliverContexts;
        if (sliverListContexts != null)
          ctxs = sliverListContexts.call$0();
        else {
          _ctxs = B._setArrayType([], type$.JSArray_BuildContext);
          visitor = new A.ObserverWidgetState_fetchTargetSliverContexts_visitor(_this, _ctxs);
          try {
            t1 = _this._framework$_element;
            t1.toString;
            t1.visitChildren$1(type$.void_Function_Element._as(visitor));
          } catch (exception) {
          }
          ctxs = _ctxs;
        }
      }
      return ctxs;
    },
    fetchLeadingOffset$0() {
      var offset = this._widget.leadingOffset;
      return offset;
    },
    isTargetSliverContextType$1(obj) {
      this._widget.toString;
      return obj instanceof G.RenderSliverList;
    },
    updateInnerCanHandleObserve$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this;
      var $async$updateInnerCanHandleObserve$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              $async$self.innerCanHandleObserve = true;
              // goto return
              $async$goto = 1;
              break;
              if (!$async$self.innerCanHandleObserve) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.innerCanHandleObserve = false;
              $async$goto = 3;
              return B._asyncAwait(B.Future_Future$delayed(C.Duration_0, null, type$.dynamic), $async$updateInnerCanHandleObserve$0);
            case 3:
              // returning from await.
              $async$self.innerCanHandleObserve = true;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$updateInnerCanHandleObserve$0, $async$completer);
    },
    handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, isIgnoreInnerCanHandleObserve) {
      var t1, t2, t3, isHandlingScroll, ctxs, resultMap, changeResultMap, changeResultModel, i, ctx, targetObserveModel, lastResultModel, _this = this, _null = null;
      if (!isIgnoreInnerCanHandleObserve) {
        if (!_this.innerCanHandleObserve)
          return _null;
        _this.updateInnerCanHandleObserve$0();
      }
      t1 = _this._widget;
      t1.toString;
      if (isDependObserveCallback) {
        t2 = false;
        t3 = _this.innerListeners;
        t2 = t3 == null ? _null : t3._collection$_length === 0;
        t2 = t2 !== false;
        if (t2)
          return _null;
      }
      isHandlingScroll = t1.sliverController.innerIsHandlingScroll;
      if (isHandlingScroll)
        return _null;
      ctxs = _this.fetchTargetSliverContexts$0();
      t1 = type$.BuildContext;
      t2 = B._instanceType(_this);
      t3 = t2._eval$1("ObserverWidgetState.M");
      resultMap = B.LinkedHashMap_LinkedHashMap$_empty(t1, t3);
      changeResultMap = B.LinkedHashMap_LinkedHashMap$_empty(t1, t3);
      for (t1 = J.getInterceptor$asx(ctxs), t3 = !isForceObserve, changeResultModel = _null, i = 0; i < t1.get$length(ctxs); ++i) {
        ctx = t1.$index(ctxs, i);
        targetObserveModel = _this.handleObserve$1(ctx);
        if (targetObserveModel == null)
          continue;
        resultMap.$indexSet(0, ctx, targetObserveModel);
        if (!t3 || _this._widget.triggerOnObserveType === D.ObserverTriggerOnObserveType_0)
          changeResultMap.$indexSet(0, ctx, targetObserveModel);
        else {
          lastResultModel = _this.lastResultMap.$index(0, ctx);
          if (lastResultModel == null)
            changeResultMap.$indexSet(0, ctx, targetObserveModel);
          else if (!lastResultModel.$eq(0, targetObserveModel))
            changeResultMap.$indexSet(0, ctx, targetObserveModel);
        }
        if (i === 0 && changeResultMap.$index(0, ctx) != null)
          changeResultModel = changeResultMap.$index(0, ctx);
      }
      _this.set$lastResultMap(resultMap);
      _this._observer_widget$_notifyListeners$1(changeResultMap);
      return new A.ObserverHandleContextsResultModel(changeResultModel, changeResultMap, t2._eval$1("ObserverHandleContextsResultModel<ObserverWidgetState.M>"));
    },
    handleContexts$1$isIgnoreInnerCanHandleObserve(isIgnoreInnerCanHandleObserve) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, isIgnoreInnerCanHandleObserve);
    },
    handleContexts$3$isDependObserveCallback$isForceObserve$isFromObserveNotification(isDependObserveCallback, isForceObserve, isFromObserveNotification) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, true);
    },
    handleContexts$0() {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, true);
    },
    handleObserve$1(ctx) {
      this._widget.toString;
      return null;
    },
    _handleScopeContext$1(ctx) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$_handleScopeContext$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.scopeContext = ctx;
              $async$self._widget.toString;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_handleScopeContext$1, $async$completer);
    },
    _checkTagChange$1(oldWidget) {
      return this._checkTagChange$body$ObserverWidgetState(B._instanceType(this)._eval$1("ObserverWidgetState.T")._as(oldWidget));
    },
    _checkTagChange$body$ObserverWidgetState(oldWidget) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, _scopeContext, tagManager;
      var $async$_checkTagChange$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self._widget.toString;
              $async$goto = 3;
              return B._asyncAwait($.WidgetsBinding__instance.get$endOfFrame(), $async$_checkTagChange$1);
            case 3:
              // returning from await.
              _scopeContext = $async$self.scopeContext;
              if (_scopeContext == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              tagManager = _scopeContext.dependOnInheritedWidgetOfExactType$1$0(type$.ObserverWidgetTagManager);
              if (tagManager != null)
                tagManager._tagMap.remove$1(0, "");
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$_checkTagChange$1, $async$completer);
    },
    _observer_widget$_notifyListeners$1(changeResultMap) {
      var entry, _sliverContext, result, exception, stack, _listeners, localListeners, t2, t3, _i, t4, exception0, t5, _this = this,
        t1 = B._instanceType(_this);
      t1._eval$1("Map<BuildContext,ObserverWidgetState.M>")._as(changeResultMap);
      if (changeResultMap.__js_helper$_length === 0)
        return;
      _listeners = _this.innerListeners;
      if (_listeners == null || _listeners._collection$_length === 0)
        return;
      localListeners = B.List_List$of(_listeners, true, t1._eval$1("ObserverListenerEntry<ObserverWidgetState.M>"));
      for (t2 = localListeners.length, t3 = t1._eval$1("~(Map<BuildContext,ObserverWidgetState.M>)?"), t1 = t1._eval$1("~(ObserverWidgetState.M)?"), _i = 0; _i < t2; ++_i) {
        entry = localListeners[_i];
        try {
          J.get$list$x(entry);
          t4 = t3._as(entry.get$onObserveAll());
          t4.call$1(changeResultMap);
          t1._as(entry.get$onObserve());
          _sliverContext = J.get$context$x(entry);
          if (_sliverContext == null && J.get$isNotEmpty$asx(_this.targetSliverContexts))
            _sliverContext = J.get$first$ax(_this.targetSliverContexts);
          result = changeResultMap.$index(0, _sliverContext);
          if (result == null)
            continue;
          t1._as(entry.get$onObserve()).call$1(result);
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          t4 = B.ErrorDescription$("while dispatching result for " + B.getRuntimeTypeOfDartObject(_this).toString$0(0));
          t5 = $.FlutterError_onError;
          if (t5 != null)
            t5.call$1(new B.FlutterErrorDetails(exception, stack, "scrollview_observer", t4, new A.ObserverWidgetState__notifyListeners_closure(_this), false));
        }
      }
    },
    set$targetSliverContexts(targetSliverContexts) {
      this.targetSliverContexts = type$.List_BuildContext._as(targetSliverContexts);
    },
    set$lastResultMap(lastResultMap) {
      this.lastResultMap = B._instanceType(this)._eval$1("Map<BuildContext,ObserverWidgetState.M>")._as(lastResultMap);
    },
    set$innerListeners(innerListeners) {
      this.innerListeners = B._instanceType(this)._eval$1("LinkedList<ObserverListenerEntry<ObserverWidgetState.M>>?")._as(innerListeners);
    }
  };
  A.ObserverWidgetScope.prototype = {
    createElement$0(_) {
      var element = this.super$InheritedWidget$createElement(0);
      this.onCreateElement.call$1(element);
      return element;
    },
    updateShouldNotify$1(oldWidget) {
      return this.observerWidgetState !== type$.ObserverWidgetScope_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification._as(oldWidget).observerWidgetState;
    }
  };
  A.ObserverWidgetTagManager.prototype = {
    updateShouldNotify$1(oldWidget) {
      return this._tagMap !== type$.ObserverWidgetTagManager._as(oldWidget)._tagMap;
    }
  };
  A.ObserverWidgetObserveResultType.prototype = {
    _enumToString$0() {
      return "ObserverWidgetObserveResultType." + this._name;
    }
  };
  A.GridViewObserveDisplayingChildModel.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.GridViewObserveDisplayingChildModel)
        return this.index === other.index && this.renderObject === other.renderObject;
      else
        return false;
    },
    get$hashCode(_) {
      return this.index + B.Primitives_objectHashCode(this.renderObject);
    }
  };
  A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin.prototype = {};
  A.GridViewObserveModel.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.GridViewObserveModel) {
        t1 = type$.GridViewObserveDisplayingChildModel;
        return B.listEquals0(_this.firstGroupChildList, other.firstGroupChildList, t1) && B.listEquals0(_this.displayingChildModelList, other.displayingChildModelList, t1) && N.mapEquals(_this.displayingChildModelMap, other.displayingChildModelMap, type$.int, t1);
      } else
        return false;
    },
    get$hashCode(_) {
      return B.Primitives_objectHashCode(this.firstGroupChildList) + B.Primitives_objectHashCode(this.displayingChildModelList) + B.Primitives_objectHashCode(this.displayingChildModelMap);
    }
  };
  A.ListViewObserveDisplayingChildModel.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.ListViewObserveDisplayingChildModel)
        return this.index === other.index && this.renderObject === other.renderObject;
      else
        return false;
    },
    get$hashCode(_) {
      return this.index + B.Primitives_objectHashCode(this.renderObject);
    }
  };
  A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin.prototype = {};
  A.ListViewObserveModel.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.ListViewObserveModel) {
        if (J.$eq$(_this.firstChild, other.firstChild)) {
          t1 = type$.ListViewObserveDisplayingChildModel;
          t1 = B.listEquals0(_this.displayingChildModelList, other.displayingChildModelList, t1) && N.mapEquals(_this.displayingChildModelMap, other.displayingChildModelMap, type$.int, t1);
        } else
          t1 = false;
        return t1;
      } else
        return false;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.firstChild) + B.Primitives_objectHashCode(this.displayingChildModelList) + B.Primitives_objectHashCode(this.displayingChildModelMap);
    }
  };
  A.ObserverScrollNotification.prototype = {
    dispatch$1(target) {
      var t1 = target == null ? null : target._widget != null;
      if (t1 !== true)
        return;
      this.super$Notification$dispatch(target);
    }
  };
  A.ObserverScrollStartNotification.prototype = {};
  A.ObserverScrollInterruptionNotification.prototype = {};
  A.ObserverScrollDecisionNotification.prototype = {};
  A.ObserverScrollEndNotification.prototype = {};
  A.SliverObserverHandleContextsResultModel.prototype = {};
  A.SliverViewportObserveDisplayingChildModel.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.SliverViewportObserveDisplayingChildModel)
        return this.sliverContext === other.sliverContext && this.sliver === other.sliver;
      else
        return false;
    },
    get$hashCode(_) {
      return B.Primitives_objectHashCode(this.sliverContext) + B.Primitives_objectHashCode(this.sliver);
    }
  };
  A.SliverViewportObserveModel.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.SliverViewportObserveModel)
        return _this.viewport === other.viewport && _this.firstChild.$eq(0, other.firstChild) && B.listEquals0(_this.displayingChildModelList, other.displayingChildModelList, type$.SliverViewportObserveDisplayingChildModel);
      else
        return false;
    },
    get$hashCode(_) {
      var t1 = this.firstChild;
      return B.Primitives_objectHashCode(this.viewport) + (B.Primitives_objectHashCode(t1.sliverContext) + B.Primitives_objectHashCode(t1.sliver)) + B.Primitives_objectHashCode(this.displayingChildModelList);
    }
  };
  A.SliverObserverController.prototype = {};
  A._SliverObserverController_ObserverController_ObserverControllerForInfo.prototype = {};
  A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll.prototype = {};
  A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification.prototype = {};
  A.ScrollViewOnceObserveNotificationResult.prototype = {};
  A.SliverViewObserver.prototype = {
    createState$0() {
      return new A.MixViewObserverState(new Z.LinkedList(type$.LinkedList_SliverObserverListenerEntry), B._setArrayType([], type$.JSArray_BuildContext), B.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.ObserveModel), new Z.LinkedList(type$.LinkedList_ObserverListenerEntry_ObserveModel));
    }
  };
  A.MixViewObserverState.prototype = {
    dispose$0() {
      var t1 = this.innerSliverListeners;
      if (t1 != null)
        t1.clear$0(0);
      this.set$innerSliverListeners(null);
      this.super$ObserverWidgetState$dispose();
    },
    handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, isIgnoreInnerCanHandleObserve) {
      var observeViewportResult, handleContextsResult, t1, t2, _this = this, _null = null;
      if (!isIgnoreInnerCanHandleObserve) {
        if (!_this.innerCanHandleObserve)
          return _null;
        _this.updateInnerCanHandleObserve$0();
      }
      observeViewportResult = _this.handleObserveViewport$2$isDependObserveCallback$isForceObserve(isDependObserveCallback, isForceObserve);
      _this._notifySliverListeners$1(observeViewportResult);
      handleContextsResult = _this.super$ObserverWidgetState$handleContexts(isDependObserveCallback, isForceObserve, isFromObserveNotification, true);
      if (observeViewportResult == null && handleContextsResult == null)
        return _null;
      t1 = handleContextsResult == null;
      t2 = t1 ? _null : handleContextsResult.changeResultModel;
      t1 = t1 ? _null : handleContextsResult.changeResultMap;
      if (t1 == null)
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.BuildContext, type$.ObserveModel);
      return new A.SliverObserverHandleContextsResultModel(observeViewportResult, t2, t1, type$.SliverObserverHandleContextsResultModel_ObserveModel);
    },
    handleContexts$1$isIgnoreInnerCanHandleObserve(isIgnoreInnerCanHandleObserve) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, isIgnoreInnerCanHandleObserve);
    },
    handleContexts$3$isDependObserveCallback$isForceObserve$isFromObserveNotification(isDependObserveCallback, isForceObserve, isFromObserveNotification) {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(isDependObserveCallback, isForceObserve, isFromObserveNotification, true);
    },
    handleContexts$0() {
      return this.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve(true, false, false, true);
    },
    handleObserve$1(ctx) {
      var _obj, _this = this;
      _this._widget.toString;
      _obj = A.ObserverUtils_findRenderObject(ctx);
      if (A.ListViewObserver_isSupportRenderSliverType(_obj))
        return A.ObserverCore_handleListObserve(ctx, null, _this.get$fetchLeadingOffset(), _this._widget.toNextOverPercent);
      else if (type$.RenderSliverGrid._is(_obj))
        return A.ObserverCore_handleGridObserve(ctx, null, _this.get$fetchLeadingOffset(), _this._widget.toNextOverPercent);
      _this._widget.toString;
      return null;
    },
    handleObserveViewport$2$isDependObserveCallback$isForceObserve(isDependObserveCallback, isForceObserve) {
      var t2, t3, isHandlingScroll, ctxs, objList, firstObj, viewport, viewportOffset, targetChild, offset, startCalcPixels, indexOfTargetChild, viewportBottomOffset, t4, t5, nextChild, firstChild, displayingChildModelList, model, canReturnResult, _this = this, _null = null,
        t1 = _this._widget;
      t1.toString;
      t2 = false;
      if (isDependObserveCallback) {
        t3 = _this.innerSliverListeners;
        t2 = t3 == null ? _null : t3._collection$_length === 0;
        t2 = t2 !== false;
      }
      if (t2)
        return _null;
      isHandlingScroll = t1.sliverController.innerIsHandlingScroll;
      if (isHandlingScroll)
        return _null;
      ctxs = _this.fetchTargetSliverContexts$0();
      t1 = J.getInterceptor$ax(ctxs);
      t2 = t1.map$1$1(ctxs, new A.MixViewObserverState_handleObserveViewport_closure(), type$.nullable_RenderObject);
      objList = B.List_List$of(t2, true, t2.$ti._eval$1("ListIterable.E"));
      if (objList.length === 0)
        return _null;
      firstObj = C.JSArray_methods.get$first(objList);
      if (firstObj == null)
        return _null;
      viewport = A.ObserverUtils_findViewport(firstObj);
      if (viewport == null)
        return _null;
      viewportOffset = viewport._viewport0$_offset;
      targetChild = viewport.ContainerRenderObjectMixin__firstChild;
      if (targetChild == null)
        return _null;
      offset = _this._widget.leadingOffset;
      t2 = viewportOffset._pixels;
      t2.toString;
      startCalcPixels = t2 + offset;
      indexOfTargetChild = C.JSArray_methods.indexOf$1(objList, targetChild);
      t3 = viewportOffset._viewportDimension;
      t3.toString;
      viewportBottomOffset = t2 + t3;
      t2 = B._instanceType(viewport);
      t3 = t2._eval$1("ContainerRenderObjectMixin.0");
      t2 = t2._eval$1("ContainerRenderObjectMixin.1");
      while (true) {
        t4 = indexOfTargetChild === -1;
        if (!(t4 || !A.ObserverUtils_isDisplayingSliverInViewport(targetChild, viewportBottomOffset, startCalcPixels)))
          break;
        t5 = t3._as(targetChild).parentData;
        t5.toString;
        nextChild = t2._as(t5).ContainerParentDataMixin_nextSibling;
        if (nextChild == null)
          break;
        indexOfTargetChild = C.JSArray_methods.indexOf$1(objList, nextChild);
        targetChild = nextChild;
      }
      if (t4)
        return _null;
      firstChild = new A.SliverViewportObserveDisplayingChildModel(t1.$index(ctxs, indexOfTargetChild), targetChild);
      displayingChildModelList = B._setArrayType([firstChild], type$.JSArray_SliverViewportObserveDisplayingChildModel);
      t4 = t3._as(targetChild).parentData;
      t4.toString;
      targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
      for (; targetChild != null;) {
        if (!A.ObserverUtils_isDisplayingSliverInViewport(targetChild, viewportBottomOffset, startCalcPixels))
          break;
        indexOfTargetChild = C.JSArray_methods.indexOf$1(objList, targetChild);
        if (indexOfTargetChild !== -1)
          C.JSArray_methods.add$1(displayingChildModelList, new A.SliverViewportObserveDisplayingChildModel(t1.$index(ctxs, indexOfTargetChild), targetChild));
        t4 = t3._as(targetChild).parentData;
        t4.toString;
        targetChild = t2._as(t4).ContainerParentDataMixin_nextSibling;
      }
      model = new A.SliverViewportObserveModel(viewport, firstChild, displayingChildModelList);
      if (isForceObserve || _this._widget.triggerOnObserveType === D.ObserverTriggerOnObserveType_0)
        canReturnResult = true;
      else
        canReturnResult = !model.$eq(0, _this.lastViewportObserveResultModel);
      _this.lastViewportObserveResultModel = model;
      return canReturnResult ? model : _null;
    },
    _notifySliverListeners$1(observeViewportResult) {
      var entry, exception, stack, listeners, localListeners, t1, _i, t2, exception0, t3;
      if (observeViewportResult == null)
        return;
      listeners = this.innerSliverListeners;
      if (listeners == null || listeners._collection$_length === 0)
        return;
      localListeners = B.List_List$of(listeners, true, type$.SliverObserverListenerEntry);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        entry = localListeners[_i];
        try {
          J.get$list$x(entry);
          t2 = entry.get$onObserveViewport();
          t2.call$1(observeViewportResult);
        } catch (exception0) {
          exception = B.unwrapException(exception0);
          stack = B.getTraceFromException(exception0);
          t2 = B.ErrorDescription$("while dispatching result for " + B.getRuntimeTypeOfDartObject(this).toString$0(0));
          t3 = $.FlutterError_onError;
          if (t3 != null)
            t3.call$1(new B.FlutterErrorDetails(exception, stack, "scrollview_observer", t2, new A.MixViewObserverState__notifySliverListeners_closure(this), false));
        }
      }
    },
    set$innerSliverListeners(innerSliverListeners) {
      this.innerSliverListeners = type$.nullable_LinkedList_SliverObserverListenerEntry._as(innerSliverListeners);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["~()", "~(ChatOperation)", "~(int,Message)", "Widget(BuildContext,int)", "Widget(BuildContext,Message,int,Animation<double>{isRemoved:bool?,messageGroupingTimeoutInSeconds:int?,messagesGroupingMode:MessagesGroupingMode?})", "UserCache(BuildContext)", "ComposerHeightNotifier(BuildContext)", "LoadMoreNotifier(BuildContext)", "~(double)", "Future<~>(String{alignment:double,curve:Curve,duration:Duration,offset:double})", "Future<~>(int{alignment:double,curve:Curve,duration:Duration,offset:double})", "Widget(BuildContext,int,Animation<double>)", "bool(Message)", "Widget(BuildContext,Animation<double>)", "~(int,Message,Message)", "~(int,int,Message)", "SliverPadding(BuildContext,ComposerHeightNotifier,Widget?)", "~(TapUpDetails)", "~(LongPressStartDetails)", "KeyEventResult(FocusNode,KeyEvent)", "~(String)", "+bodyMedium,onSurface,primary,surfaceContainerHigh,surfaceContainerLow(TextStyle,Color,Color,Color,Color)(ChatTheme)", "+bodyLarge,onSurface(TextStyle,Color)(ChatTheme)", "+onSurface,surfaceContainer(Color,Color)(ChatTheme)", "Positioned(BuildContext,ComposerHeightNotifier,Widget?)", "+bodyMedium,labelSmall,onPrimary,onSurface,primary,shape,surfaceContainer(TextStyle,TextStyle,Color,Color,Color,BorderRadiusGeometry,Color)(ChatTheme)", "double()", "~(BuildContext)", "Type(ObserverAutoTriggerObserveType)", "bool(ScrollNotification)", "int(_Diagonal,_Diagonal)"]);
  A.ListDiffDelegate_closure.prototype = {
    call$2(a, b) {
      var t1 = this.T;
      return J.$eq$(t1._as(a), t1._as(b));
    },
    $signature() {
      return this.T._eval$1("bool(0,0)");
    }
  };
  A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._incomingItems;
      C.JSArray_methods.add$1(t2, this.incomingItem);
      C.JSArray_methods.sort$0(t2);
      ++t1._itemsCount;
    },
    $signature: 0
  };
  A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure0.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this;
      t1._removeActiveItemAt$2(t1._incomingItems, this.incomingItem.itemIndex).controller.dispose$0();
    },
    $signature: 9
  };
  A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure.prototype = {
    call$0() {
      var t1 = this.$this._outgoingItems;
      C.JSArray_methods.add$1(t1, this.outgoingItem);
      C.JSArray_methods.sort$0(t1);
    },
    $signature: 0
  };
  A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure0.prototype = {
    call$1(value) {
      var t4, t5, _i, item, t6,
        t1 = this.$this,
        t2 = t1._outgoingItems,
        t3 = this.outgoingItem;
      t1._removeActiveItemAt$2(t2, t3.itemIndex).controller.dispose$0();
      for (t4 = t1._incomingItems, t5 = t4.length, _i = 0; _i < t5; ++_i) {
        item = t4[_i];
        t6 = item.itemIndex;
        if (t6 > t3.itemIndex)
          item.itemIndex = t6 - 1;
      }
      for (t4 = t2.length, _i = 0; _i < t4; ++_i) {
        item = t2[_i];
        t5 = item.itemIndex;
        if (t5 > t3.itemIndex)
          item.itemIndex = t5 - 1;
      }
      t1.setState$1(new A._SliverAnimatedMultiBoxAdaptorState_removeItem__closure(t1));
    },
    $signature: 9
  };
  A._SliverAnimatedMultiBoxAdaptorState_removeItem__closure.prototype = {
    call$0() {
      return --this.$this._itemsCount;
    },
    $signature: 0
  };
  A._ChatState_build_closure.prototype = {
    call$1(__wc0_formal) {
      var t1 = this.$this.___ChatState__userCache_F;
      t1 === $ && B.throwLateFieldNI("_userCache");
      return t1;
    },
    $signature: typesOffset + 5
  };
  A._ChatState_build_closure0.prototype = {
    call$1(__wc1_formal) {
      return new A.ComposerHeightNotifier($.$get$ChangeNotifier__emptyListeners());
    },
    $signature: typesOffset + 6
  };
  A._ChatState_build_closure1.prototype = {
    call$1(__wc2_formal) {
      return new A.LoadMoreNotifier($.$get$ChangeNotifier__emptyListeners());
    },
    $signature: typesOffset + 7
  };
  A._ChatAnimatedListState_initState_closure.prototype = {
    call$1($event) {
      var t1 = this.$this;
      C.JSArray_methods.add$1(t1._operationsQueue, type$.ChatOperation._as($event));
      t1._processOperationsQueue$0();
    },
    $signature: typesOffset + 1
  };
  A._ChatAnimatedListState_onKeyboardHeightChanged_closure.prototype = {
    call$1(__wc0_formal) {
      return this.$call$body$_ChatAnimatedListState_onKeyboardHeightChanged_closure(type$.Duration._as(__wc0_formal));
    },
    $call$body$_ChatAnimatedListState_onKeyboardHeightChanged_closure(__wc0_formal) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, t3, t4, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              if (t1._framework$_element != null) {
                t2 = t1.___ChatAnimatedListState__scrollController_F;
                t2 === $ && B.throwLateFieldNI("_scrollController");
                t2 = t2._positions.length === 0 || $async$self.height === 0;
              } else
                t2 = true;
              if (t2) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1._widget.toString;
              t2 = t1.___ChatAnimatedListState__scrollController_F;
              t2 === $ && B.throwLateFieldNI("_scrollController");
              t3 = C.JSArray_methods.get$single(t2._positions)._pixels;
              t3.toString;
              t4 = C.JSArray_methods.get$single(t2._positions)._maxScrollExtent;
              t4.toString;
              t4 = Math.min(t3 + $async$self.height, t4);
              t1._widget.toString;
              $async$goto = 3;
              return B._asyncAwait(t2.animateTo$3$curve$duration(t4, E.Cubic_O6W, I.Duration_250000), $async$call$1);
            case 3:
              // returning from await.
              t1 = t1._scrollToBottomShowTimer;
              if (t1 != null)
                t1.cancel$0(0);
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 361
  };
  A._ChatAnimatedListState_build_closure.prototype = {
    call$3(context, index, animation) {
      var t1, t2, t3, message;
      type$.BuildContext._as(context);
      B._asInt(index);
      type$.Animation_double._as(animation);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__oldList_A;
      t2 === $ && B.throwLateFieldNI("_oldList");
      t3 = t1.visualPosition$1(index);
      if (!(t3 >= 0 && t3 < t2.length))
        return B.ioore(t2, t3);
      message = t2[t3];
      t3 = t1._widget;
      t3.toString;
      t2 = t1.visualPosition$1(index);
      t1._widget.toString;
      return t3.itemBuilder$6$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, message, t2, animation, null, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 11
  };
  A._ChatAnimatedListState_build_buildSlivers.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1._widget.toString;
      t2 = B._setArrayType([], type$.JSArray_Widget);
      t1._widget.toString;
      t2.push(new G.SliverPadding(new B.EdgeInsets(0, 8, 0, 0), null, null));
      t1._widget.toString;
      t2.push(this.sliverAnimatedList);
      t1._widget.toString;
      t2.push(t1._buildComposerHeightSliver$1(this.context));
      return t2;
    },
    $signature: 362
  };
  A._ChatAnimatedListState_build_closure0.prototype = {
    call$1(notification) {
      var t1;
      if (notification instanceof S.ScrollMetricsNotification) {
        t1 = this.$this;
        t1._adjustInitialScrollPosition$0();
        t1._handleToggleScrollToBottom$0();
        t1._handlePagination$0();
      }
      if (notification instanceof S.UserScrollNotification) {
        t1 = this.$this;
        t1._widget.toString;
        if (notification.direction === Am.ScrollDirection_1)
          t1._userHasScrolled = t1._paginationShouldTrigger = true;
        else if (t1.get$_isAtChatEndScrollPosition())
          t1._userHasScrolled = false;
      }
      if (notification instanceof S.ScrollUpdateNotification)
        this.$this._handleToggleScrollToBottom$0();
      return false;
    },
    $signature: 363
  };
  A._ChatAnimatedListState_build_closure1.prototype = {
    call$0() {
      var context = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this.$this._listKey),
        t1 = B._setArrayType([], type$.JSArray_BuildContext);
      if (context != null)
        t1.push(context);
      return t1;
    },
    $signature: 364
  };
  A._ChatAnimatedListState_build_closure2.prototype = {
    call$3(context, isEmpty, child) {
      var t1;
      if (B._asBool(isEmpty)) {
        t1 = this.builders.emptyChatListBuilder;
        t1 = t1 == null ? null : t1.call$1(context);
        return X.Positioned$fill(0, t1 == null ? D.EmptyChatList_null : t1);
      }
      return P.SizedBox_0_0_null_null;
    },
    $signature: 155
  };
  A._ChatAnimatedListState__scrollToEnd_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2;
      type$.Duration._as(__wc0_formal);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__scrollController_F;
      t2 === $ && B.throwLateFieldNI("_scrollController");
      t2 = t2._positions;
      if (t2.length === 0 || t1._framework$_element == null)
        return;
      t1._widget.toString;
      t2 = C.JSArray_methods.get$single(t2)._maxScrollExtent;
      t2.toString;
      if (t2 === 0)
        t1._initialScrollToEnd$0();
      else
        t1._subsequentScrollToEnd$1(this.data);
    },
    $signature: 2
  };
  A._ChatAnimatedListState__adjustInitialScrollPosition_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2, t3, t4;
      type$.Duration._as(__wc0_formal);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__scrollController_F;
      t2 === $ && B.throwLateFieldNI("_scrollController");
      t3 = t2._positions;
      if (t3.length === 0 || t1._framework$_element == null)
        return;
      t4 = t1.___ChatAnimatedListState__oldList_A;
      t4 === $ && B.throwLateFieldNI("_oldList");
      if (t4.length === 0) {
        t1.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = false;
        return;
      }
      t4 = t1.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A;
      t4 === $ && B.throwLateFieldNI("_needsInitialScrollPositionAdjustment");
      if (t4) {
        t3 = C.JSArray_methods.get$single(t3)._maxScrollExtent;
        t3.toString;
        if (t3 === 0)
          return;
        t3 = C.JSArray_methods.get$single(t2._positions)._pixels;
        t3.toString;
        if (t3 === t1.get$_chatEndScrollPosition())
          t1.___ChatAnimatedListState__needsInitialScrollPositionAdjustment_A = false;
        else
          t2.jumpTo$1(t1.get$_chatEndScrollPosition());
      }
    },
    $signature: 2
  };
  A._ChatAnimatedListState__handleScrollToBottom_closure.prototype = {
    call$1(__wc0_formal) {
      var t1, t2, t3, t4;
      type$.Duration._as(__wc0_formal);
      t1 = this.$this;
      t2 = t1.___ChatAnimatedListState__scrollController_F;
      t2 === $ && B.throwLateFieldNI("_scrollController");
      if (t2._positions.length === 0 || t1._framework$_element == null)
        return;
      t1._isScrollingToBottom = true;
      t3 = t1.___ChatAnimatedListState__scrollToBottomController_F;
      t3 === $ && B.throwLateFieldNI("_scrollToBottomController");
      t3.reverse$0(0);
      t1._widget.toString;
      t3 = t1.___ChatAnimatedListState__scrollAnimationController_F;
      t3 === $ && B.throwLateFieldNI("_scrollAnimationController");
      t4 = C.JSArray_methods.get$single(t2._positions)._pixels;
      t4.toString;
      t2 = C.JSArray_methods.get$single(t2._positions)._maxScrollExtent;
      t2.toString;
      t3.set$value(0, t4 / t2);
      t3.fling$0();
      t1._isScrollingToBottom = t1._userHasScrolled = false;
    },
    $signature: 2
  };
  A._ChatAnimatedListState__handleToggleScrollToBottom_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._framework$_element != null) {
        t1._userHasScrolled = true;
        t1 = t1.___ChatAnimatedListState__scrollToBottomController_F;
        t1 === $ && B.throwLateFieldNI("_scrollToBottomController");
        t1.forward$0(0);
      }
    },
    $signature: 0
  };
  A._ChatAnimatedListState__scrollToMessageId_closure.prototype = {
    call$1(m) {
      type$.Message._as(m);
      m.get$id(m);
      return false;
    },
    $signature: typesOffset + 12
  };
  A._ChatAnimatedListState__scrollToIndex_closure.prototype = {
    call$1(targetOffset) {
      return this.offset;
    },
    $signature: 13
  };
  A._ChatAnimatedListState__scrollToIndex_closure0.prototype = {
    call$1(targetOffset) {
      return this.offset;
    },
    $signature: 13
  };
  A._ChatAnimatedListState__onRemoved_closure.prototype = {
    call$2(context, animation) {
      type$.Animation_double._as(animation);
      return this.$this._widget.itemBuilder$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode(context, this.data, this.position, animation, true, null, null);
    },
    $signature: typesOffset + 13
  };
  A._ChatAnimatedListState__onDiffUpdate_closure0.prototype = {
    call$2(pos, data) {
      return this.$this._onInserted$2(pos, type$.Message._as(data));
    },
    $signature: typesOffset + 2
  };
  A._ChatAnimatedListState__onDiffUpdate_closure2.prototype = {
    call$2(pos, data) {
      return this.$this._onRemoved$2(pos, type$.Message._as(data));
    },
    $signature: typesOffset + 2
  };
  A._ChatAnimatedListState__onDiffUpdate_closure.prototype = {
    call$3(pos, oldData, newData) {
      var t1 = type$.Message;
      t1._as(oldData);
      t1._as(newData);
      t1 = this.$this;
      t1._onRemoved$2(pos, oldData);
      t1._onInserted$2(pos, newData);
      return null;
    },
    $signature: typesOffset + 14
  };
  A._ChatAnimatedListState__onDiffUpdate_closure1.prototype = {
    call$3(oldPos, newPos, data) {
      var t1, t2;
      type$.Message._as(data);
      t1 = this.$this;
      t1._onRemoved$2(oldPos, data);
      t2 = t1.___ChatAnimatedListState__oldList_A;
      t2 === $ && B.throwLateFieldNI("_oldList");
      t2 = t2.length;
      t1._onInserted$2(t2 !== 0 ? C.JSInt_methods.clamp$2(newPos, 0, t2) : 0, data);
      return null;
    },
    $signature: typesOffset + 15
  };
  A._SliverSpacingState_build_closure.prototype = {
    call$3(context, heightNotifier, child) {
      var t1, t2;
      type$.BuildContext._as(context);
      type$.ComposerHeightNotifier._as(heightNotifier);
      type$.nullable_Widget._as(child);
      t1 = heightNotifier._composer_height_notifier$_height;
      t2 = this.$this._widget.bottomPadding;
      return new G.SliverPadding(new B.EdgeInsets(0, 0, 0, t1 + t2 + this.safeArea), null, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 16
  };
  A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      if (t1._framework$_element != null) {
        t2 = Math.max(this.keyboardHeight / this.pixelRatio - t1.KeyboardMixin__initialSafeArea, 0);
        t1 = t1._widget.onKeyboardHeightChanged;
        if (t1 != null)
          t1.call$1(t2);
      }
    },
    $signature: 0
  };
  A.ChatMessage_build_closure1.prototype = {
    call$1(details) {
      var t2,
        t1 = this.onMessageTap;
      if (t1 == null)
        t1 = null;
      else {
        t2 = this.$this;
        t2 = t1.call$4$details$index(this.context, t2.message, details, t2.index);
        t1 = t2;
      }
      return t1;
    },
    $signature: typesOffset + 17
  };
  A.ChatMessage_build_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.onMessageDoubleTap;
      if (t1 == null)
        t1 = null;
      else {
        t2 = this.$this;
        t2 = t1.call$3$index(this.context, t2.message, t2.index);
        t1 = t2;
      }
      return t1;
    },
    $signature: 0
  };
  A.ChatMessage_build_closure0.prototype = {
    call$1(details) {
      var t2,
        t1 = this.onMessageLongPress;
      if (t1 == null)
        t1 = null;
      else {
        t2 = this.$this;
        t2 = t1.call$4$details$index(this.context, t2.message, details, t2.index);
        t1 = t2;
      }
      return t1;
    },
    $signature: typesOffset + 18
  };
  A._ChatMessageInternalState_initState_closure.prototype = {
    call$1($event) {
      var t1, t2, t3;
      type$.ChatOperation._as($event);
      switch ($event.type.index) {
        case 2:
          t1 = this.$this;
          t2 = t1.___ChatMessageInternalState__updatedMessage_A;
          t2 === $ && B.throwLateFieldNI("_updatedMessage");
          t3 = $event.oldMessage;
          if (t2.get$id(t2) === t3.get$id(t3))
            t1.setState$1(new A._ChatMessageInternalState_initState__closure(t1, $event));
          break;
        default:
          break;
      }
    },
    $signature: typesOffset + 1
  };
  A._ChatMessageInternalState_initState__closure.prototype = {
    call$0() {
      var t1 = this.event.message;
      t1.toString;
      this.$this.___ChatMessageInternalState__updatedMessage_A = t1;
    },
    $signature: 0
  };
  A._ComposerState_initState_closure.prototype = {
    call$1(__wc0_formal) {
      type$.Duration._as(__wc0_formal);
      return this.$this._measure$0();
    },
    $signature: 2
  };
  A._ComposerState_didUpdateWidget_closure.prototype = {
    call$1(__wc0_formal) {
      type$.Duration._as(__wc0_formal);
      return this.$this._measure$0();
    },
    $signature: 2
  };
  A._ComposerState_build_closure.prototype = {
    call$1(t) {
      var t1;
      type$.ChatTheme._as(t);
      t1 = t.colors;
      return new B._Record_5_bodyMedium_onSurface_primary_surfaceContainerHigh_surfaceContainerLow([t.typography.bodyMedium, t1.onSurface, t1.primary, t1.surfaceContainerHigh, t1.surfaceContainerLow]);
    },
    $signature: typesOffset + 21
  };
  A._ComposerState_build_closure0.prototype = {
    call$1(value) {
      var t1 = this.$this.___ComposerState__hasTextNotifier_F;
      t1 === $ && B.throwLateFieldNI("_hasTextNotifier");
      t1.set$value(0, C.JSString_methods.trim$0(value).length !== 0);
    },
    $signature: 23
  };
  A._ComposerState_build_closure1.prototype = {
    call$3(context, hasText, child) {
      var t1, t2, _null = null;
      B._asBool(hasText);
      t1 = this.$this;
      t1._widget.toString;
      if (hasText)
        t2 = this.theme._values[1].withValues$1$alpha(0.5);
      else
        t2 = this.theme._values[1].withValues$1$alpha(0.5);
      t1._widget.toString;
      return X.IconButton$(t2, _null, D.Icon_kve, _null, _null, !hasText ? _null : new A._ComposerState_build__closure(t1), _null, _null, _null);
    },
    $signature: 155
  };
  A._ComposerState_build__closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ComposerState__textController_F;
      t2 === $ && B.throwLateFieldNI("_textController");
      return t1._handleSubmitted$1(t2._change_notifier$_value.text);
    },
    $signature: 0
  };
  A._EmptyChatListState_initState_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._framework$_element != null) {
        t1 = t1.___EmptyChatListState__controller_A;
        t1 === $ && B.throwLateFieldNI("_controller");
        t1.forward$0(0);
      }
    },
    $signature: 3
  };
  A._EmptyChatListState_build_closure.prototype = {
    call$1(t) {
      type$.ChatTheme._as(t);
      return new B._Record_2_bodyLarge_onSurface(t.typography.bodyLarge, t.colors.onSurface);
    },
    $signature: typesOffset + 22
  };
  A.ScrollToBottom_build_closure0.prototype = {
    call$1(t) {
      var t1 = type$.ChatTheme._as(t).colors;
      return new B._Record_2_onSurface_surfaceContainer(t1.onSurface, t1.surfaceContainer);
    },
    $signature: typesOffset + 23
  };
  A.ScrollToBottom_build_closure.prototype = {
    call$3(context, heightNotifier, child) {
      var t1, t2, t3, _null = null;
      type$.BuildContext._as(context);
      type$.ComposerHeightNotifier._as(heightNotifier);
      type$.nullable_Widget._as(child);
      t1 = heightNotifier._composer_height_notifier$_height;
      t1 = t1 + 20 + this.bottomSafeArea;
      t2 = this.$this;
      t3 = this.theme;
      return N.Positioned$(t1, G.ScaleTransition$(L.Alignment_0_0, Q.FloatingActionButton$(t3._1, D.Icon_Ngt, t3._0, _null, _null, true, t2.onPressed, P.CircleBorder_oSW), t2.animation), _null, _null, _null, 16, _null, _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 24
  };
  A.SimpleTextMessage_build_closure.prototype = {
    call$1(t) {
      var t1, t2;
      type$.ChatTheme._as(t);
      t1 = t.typography;
      t2 = t.colors;
      return new B._Record_7_bodyMedium_labelSmall_onPrimary_onSurface_primary_shape_surfaceContainer([t1.bodyMedium, t1.labelSmall, t2.onPrimary, t2.onSurface, t2.primary, t.shape, t2.surfaceContainer]);
    },
    $signature: typesOffset + 25
  };
  A.ObserverControllerForScroll__handleScrollToIndex_closure.prototype = {
    call$1(_) {
      var t1, t2, firstChild, lastChild, firstChildIndex, t3, lastChildIndex, _this = this;
      type$.Duration._as(_);
      t1 = _this.$this;
      t2 = _this.obj;
      firstChild = t1.findCurrentFirstChild$1(t2);
      lastChild = t1.findCurrentLastChild$1(t2);
      if (firstChild == null || lastChild == null) {
        t1._handleScrollInterruption$2$completer$context(_this.completer, _this.ctx);
        return;
      }
      firstChildIndex = firstChild._proxy_box$_index;
      t3 = _this._box_0;
      t3.firstChildIndex = firstChildIndex;
      lastChildIndex = lastChild._proxy_box$_index;
      t3.lastChildIndex = lastChildIndex;
      t1._handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(_this.alignment, _this.completer, _this.ctx, _this.curve, _this.duration, firstChildIndex, _this.index, lastChildIndex, t3.lastPageTurningOffset, t2, _this.offset, _this.onPrepareScrollToIndex, _this.padding);
    },
    $signature: 2
  };
  A.ObserverControllerForScroll__handleScrollToIndex_closure0.prototype = {
    call$1(_) {
      var t1, t2, firstChild, lastChild, firstChildIndex, t3, lastChildIndex, _this = this;
      type$.Duration._as(_);
      t1 = _this.$this;
      t2 = _this.obj;
      firstChild = t1.findCurrentFirstChild$1(t2);
      lastChild = t1.findCurrentLastChild$1(t2);
      if (firstChild == null || lastChild == null) {
        t1._handleScrollInterruption$2$completer$context(_this.completer, _this.ctx);
        return;
      }
      firstChildIndex = firstChild._proxy_box$_index;
      t3 = _this._box_0;
      t3.firstChildIndex = firstChildIndex;
      lastChildIndex = lastChild._proxy_box$_index;
      t3.lastChildIndex = lastChildIndex;
      t1._handleScrollToIndex$13$alignment$completer$ctx$curve$duration$firstChildIndex$index$lastChildIndex$lastPageTurningOffset$obj$offset$onPrepareScrollToIndex$padding(_this.alignment, _this.completer, _this.ctx, _this.curve, _this.duration, firstChildIndex, _this.index, lastChildIndex, t3.lastPageTurningOffset, t2, _this.offset, _this.onPrepareScrollToIndex, _this.padding);
    },
    $signature: 2
  };
  A.ObserverControllerForScroll__handleScrollEnd_closure.prototype = {
    call$1(_) {
      var t1;
      type$.Duration._as(_);
      t1 = this.$this;
      t1.innerIsHandlingScroll = false;
      t1.innerNeedOnceObserveCallBack.call$0();
      this.completer.complete$0(0);
      new A.ObserverScrollEndNotification().dispatch$1(this.context);
    },
    $signature: 2
  };
  A.ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure.prototype = {
    call$1(type) {
      switch (type$.ObserverAutoTriggerObserveType._as(type).index) {
        case 0:
          return D.Type_ScrollStartNotification_Ezb;
        case 1:
          return D.Type_ScrollUpdateNotification_nu7;
        case 2:
          return D.Type_ScrollEndNotification_axn;
      }
    },
    $signature: typesOffset + 28
  };
  A.ObserverWidgetState_build_closure.prototype = {
    call$1(notification) {
      var result, sliverController,
        t1 = this.$this;
      B._instanceType(t1)._eval$1("ObserverWidgetState.N")._as(notification);
      result = t1.handleContexts$3$isDependObserveCallback$isForceObserve$isFromObserveNotification(false, true, true);
      sliverController = t1._widget.sliverController;
      if (sliverController instanceof A.SliverObserverController)
        sliverController.innerHandleDispatchOnceObserveComplete$1$resultModel(result);
      return true;
    },
    $signature() {
      return B._instanceType(this.$this)._eval$1("bool(ObserverWidgetState.N)");
    }
  };
  A.ObserverWidgetState_build_closure0.prototype = {
    call$1(notification) {
      var t1, t2;
      type$.ScrollNotification._as(notification);
      t1 = this.$this;
      t1._widget.toString;
      if (C.JSArray_methods.contains$1(t1.get$innerAutoTriggerObserveScrollNotifications(), B.getRuntimeTypeOfDartObject(notification))) {
        t2 = B.getRuntimeTypeOfDartObject(notification);
        $.WidgetsBinding__instance.get$endOfFrame().then$1$1(0, new A.ObserverWidgetState_build__closure(t1, D.Type_ScrollUpdateNotification_nu7 !== t2), type$.Null);
      }
      return false;
    },
    $signature: typesOffset + 29
  };
  A.ObserverWidgetState_build__closure.prototype = {
    call$1(_) {
      this.$this.handleContexts$1$isIgnoreInnerCanHandleObserve(this.isIgnoreInnerCanHandleObserve);
    },
    $signature: 9
  };
  A.ObserverWidgetState__setupSliverController_closure.prototype = {
    call$0() {
      this.$this.handleContexts$0();
    },
    $signature: 3
  };
  A.ObserverWidgetState__setupSliverController_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      J.clear$0$ax(t1.targetSliverContexts);
      t1._setupSliverController$0();
    },
    $signature: 3
  };
  A.ObserverWidgetState__setupSliverController_closure1.prototype = {
    call$1(timeStamp) {
      var t1, t2;
      type$.Duration._as(timeStamp);
      t1 = this.$this;
      t1.set$targetSliverContexts(t1.fetchTargetSliverContexts$0());
      t2 = this.sliverController;
      t2.set$sliverContexts(t1.targetSliverContexts);
      if (this.isInitState)
        t2.innerInitialIndexPosition$0();
    },
    $signature: 2
  };
  A.ObserverWidgetState_fetchTargetSliverContexts_visitor.prototype = {
    call$1(element) {
      type$.Element._as(element);
      if (this.$this.isTargetSliverContextType$1(element.get$renderObject())) {
        C.JSArray_methods.add$1(this._ctxs, element);
        return;
      }
      element.visitChildren$1(this);
    },
    $signature: 11
  };
  A.ObserverWidgetState__notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return B._setArrayType([B.DiagnosticsProperty$("The " + B.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending result was", t1, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.ObserverWidgetState_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 14
  };
  A.MixViewObserverState_handleObserveViewport_closure.prototype = {
    call$1(e) {
      return A.ObserverUtils_findRenderObject(type$.BuildContext._as(e));
    },
    $signature: 366
  };
  A.MixViewObserverState__notifySliverListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return B._setArrayType([B.DiagnosticsProperty$("The " + B.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending result was", t1, true, C.C__NoDefaultValue, _null, _null, _null, C.DiagnosticLevel_3, false, true, true, C.DiagnosticsTreeStyle_9, _null, type$.ObserverWidgetState_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 14
  };
  (function aliases() {
    var _ = A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin.prototype;
    _.super$__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__ChatAnimatedListState_State_TickerProviderStateMixin.prototype;
    _.super$__ChatAnimatedListState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__EmptyChatListState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__EmptyChatListState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.ObserverWidgetState.prototype;
    _.super$ObserverWidgetState$dispose = _.dispose$0;
    _.super$ObserverWidgetState$handleContexts = _.handleContexts$4$isDependObserveCallback$isForceObserve$isFromObserveNotification$isIgnoreInnerCanHandleObserve;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_0_u = hunkHelpers._instance_0u;
    _static_2(A, "diffutil_impl___diagonalComparator$closure", "_diagonalComparator", 30);
    _instance_2_u(A._SliverAnimatedMultiBoxAdaptorState.prototype, "get$_itemBuilder", "_itemBuilder$2", 3);
    _instance(A._ChatState.prototype, "get$_buildItem", 0, 4, function() {
      return {isRemoved: null, messageGroupingTimeoutInSeconds: null, messagesGroupingMode: null};
    }, ["call$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode", "call$4", "call$6$messageGroupingTimeoutInSeconds$messagesGroupingMode"], ["_buildItem$7$isRemoved$messageGroupingTimeoutInSeconds$messagesGroupingMode", "_buildItem$4", "_buildItem$6$messageGroupingTimeoutInSeconds$messagesGroupingMode"], 4, 0, 0);
    var _;
    _instance_1_u(_ = A._ChatAnimatedListState.prototype, "get$onKeyboardHeightChanged", "onKeyboardHeightChanged$1", 8);
    _instance_0_u(_, "get$_linkAnimationToScroll", "_linkAnimationToScroll$0", 0);
    _instance_0_u(_, "get$_handleScrollToBottom", "_handleScrollToBottom$0", 0);
    _instance(_, "get$_scrollToMessageId", 0, 1, null, ["call$5$alignment$curve$duration$offset", "call$1", "call$2$duration"], ["_scrollToMessageId$5$alignment$curve$duration$offset", "_scrollToMessageId$1", "_scrollToMessageId$2$duration"], 9, 0, 0);
    _instance(_, "get$_scrollToIndex", 0, 1, null, ["call$5$alignment$curve$duration$offset", "call$1", "call$2$duration"], ["_scrollToIndex$5$alignment$curve$duration$offset", "_scrollToIndex$1", "_scrollToIndex$2$duration"], 10, 0, 0);
    _instance_2_u(_ = A._ComposerState.prototype, "get$_handleKeyEvent", "_handleKeyEvent$2", 19);
    _instance_0_u(_, "get$_handleTextControllerChange", "_handleTextControllerChange$0", 0);
    _instance_1_u(_, "get$_handleSubmitted", "_handleSubmitted$1", 20);
    _instance_0_u(_ = A.ObserverWidgetState.prototype, "get$fetchLeadingOffset", "fetchLeadingOffset$0", 26);
    _instance_1_u(_, "get$_handleScopeContext", "_handleScopeContext$1", 27);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _mixin = hunkHelpers.mixin,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Object, [A.ListDiffDelegate, A._Snake, A._Diagonal, A._Range, A._CenteredArray, A.DiffResult, A._PostponedUpdate, A.DataInsert, A.DataRemove, A.DataChange, A.DataMove, A._ActiveItem, A.MessageGroupStatus, A.KeyboardMixin, A.ObserveDisplayingChildModel, A.ObserveDisplayingChildModelMixin, A.ObserveModel, A.ObserveScrollChildModel, A.ObservePrepareScrollToIndexModel, A.ObserverHandleContextsResultModel, A.ObserverIndexPositionModel, A.ObserverController, A.ObserverControllerForNotification, A.ObserverControllerForInfo, A.ObserverControllerForScroll, A.CommonOnceObserveNotificationResult, A.SliverViewportObserveDisplayingChildModel, A.SliverViewportObserveModel]);
    _inheritMany(B.Closure2Args, [A.ListDiffDelegate_closure, A._ChatAnimatedListState__onRemoved_closure, A._ChatAnimatedListState__onDiffUpdate_closure0, A._ChatAnimatedListState__onDiffUpdate_closure2]);
    _inheritMany(B.StatefulWidget, [A._SliverAnimatedMultiBoxAdaptor, A.Chat, A.ChatAnimatedList, A.SliverSpacing, A.ChatMessageInternal, A.Composer, A.EmptyChatList, A.ObserverWidget]);
    _inherit(A.SliverAnimatedList, A._SliverAnimatedMultiBoxAdaptor);
    _inheritMany(B.State, [A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin, A.__ChatState_State_WidgetsBindingObserver, A.__ChatAnimatedListState_State_TickerProviderStateMixin, A.__SliverSpacingState_State_WidgetsBindingObserver, A._ChatMessageInternalState, A._ComposerState, A.__EmptyChatListState_State_SingleTickerProviderStateMixin, A.ObserverWidgetState]);
    _inherit(A._SliverAnimatedMultiBoxAdaptorState, A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin);
    _inherit(A.SliverAnimatedListState, A._SliverAnimatedMultiBoxAdaptorState);
    _inheritMany(B.Closure0Args, [A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure, A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure, A._SliverAnimatedMultiBoxAdaptorState_removeItem__closure, A._ChatAnimatedListState_build_buildSlivers, A._ChatAnimatedListState_build_closure1, A._ChatAnimatedListState__handleToggleScrollToBottom_closure, A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin_didChangeMetrics_closure, A.ChatMessage_build_closure, A._ChatMessageInternalState_initState__closure, A._ComposerState_build__closure, A._EmptyChatListState_initState_closure, A.ObserverWidgetState__setupSliverController_closure, A.ObserverWidgetState__setupSliverController_closure0, A.ObserverWidgetState__notifyListeners_closure, A.MixViewObserverState__notifySliverListeners_closure]);
    _inheritMany(B.Closure, [A._SliverAnimatedMultiBoxAdaptorState_insertItem_closure0, A._SliverAnimatedMultiBoxAdaptorState_removeItem_closure0, A._ChatState_build_closure, A._ChatState_build_closure0, A._ChatState_build_closure1, A._ChatAnimatedListState_initState_closure, A._ChatAnimatedListState_onKeyboardHeightChanged_closure, A._ChatAnimatedListState_build_closure, A._ChatAnimatedListState_build_closure0, A._ChatAnimatedListState_build_closure2, A._ChatAnimatedListState__scrollToEnd_closure, A._ChatAnimatedListState__adjustInitialScrollPosition_closure, A._ChatAnimatedListState__handleScrollToBottom_closure, A._ChatAnimatedListState__scrollToMessageId_closure, A._ChatAnimatedListState__scrollToIndex_closure, A._ChatAnimatedListState__scrollToIndex_closure0, A._ChatAnimatedListState__onDiffUpdate_closure, A._ChatAnimatedListState__onDiffUpdate_closure1, A._SliverSpacingState_build_closure, A.ChatMessage_build_closure1, A.ChatMessage_build_closure0, A._ChatMessageInternalState_initState_closure, A._ComposerState_initState_closure, A._ComposerState_didUpdateWidget_closure, A._ComposerState_build_closure, A._ComposerState_build_closure0, A._ComposerState_build_closure1, A._EmptyChatListState_build_closure, A.ScrollToBottom_build_closure0, A.ScrollToBottom_build_closure, A.SimpleTextMessage_build_closure, A.ObserverControllerForScroll__handleScrollToIndex_closure, A.ObserverControllerForScroll__handleScrollToIndex_closure0, A.ObserverControllerForScroll__handleScrollEnd_closure, A.ObserverWidgetState_innerAutoTriggerObserveScrollNotifications_closure, A.ObserverWidgetState_build_closure, A.ObserverWidgetState_build_closure0, A.ObserverWidgetState_build__closure, A.ObserverWidgetState__setupSliverController_closure1, A.ObserverWidgetState_fetchTargetSliverContexts_visitor, A.MixViewObserverState_handleObserveViewport_closure]);
    _inheritMany(B._Enum, [A.MessagesGroupingMode, A.InitialScrollToEndMode, A.SendButtonVisibilityMode, A.InputClearMode, A.ObserverAutoTriggerObserveType, A.ObserverTriggerOnObserveType, A.ObserverRenderSliverType, A.ObserverWidgetObserveResultType]);
    _inheritMany(B.ChangeNotifier, [A.UserCache, A.ComposerHeightNotifier, A.LoadMoreNotifier]);
    _inherit(A._ChatState, A.__ChatState_State_WidgetsBindingObserver);
    _inherit(A._ChatAnimatedListState, A.__ChatAnimatedListState_State_TickerProviderStateMixin);
    _inherit(A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin, A.__SliverSpacingState_State_WidgetsBindingObserver);
    _inherit(A._SliverSpacingState, A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin);
    _inheritMany(B.StatelessWidget, [A.ChatMessage, A.ScrollToBottom, A.SimpleTextMessage, A.TimeAndStatus]);
    _inherit(A._EmptyChatListState, A.__EmptyChatListState_State_SingleTickerProviderStateMixin);
    _inherit(A.MessageListDiff, A.ListDiffDelegate);
    _inheritMany(B.InheritedWidget, [A.ObserverWidgetScope, A.ObserverWidgetTagManager]);
    _inheritMany(A.ObserveDisplayingChildModel, [A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin, A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin]);
    _inherit(A.GridViewObserveDisplayingChildModel, A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin);
    _inheritMany(A.ObserveModel, [A.GridViewObserveModel, A.ListViewObserveModel]);
    _inherit(A.ListViewObserveDisplayingChildModel, A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin);
    _inherit(A.ObserverScrollNotification, O.Notification0);
    _inheritMany(A.ObserverScrollNotification, [A.ObserverScrollStartNotification, A.ObserverScrollInterruptionNotification, A.ObserverScrollDecisionNotification, A.ObserverScrollEndNotification]);
    _inherit(A.SliverObserverHandleContextsResultModel, A.ObserverHandleContextsResultModel);
    _inherit(A._SliverObserverController_ObserverController_ObserverControllerForInfo, A.ObserverController);
    _inherit(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll, A._SliverObserverController_ObserverController_ObserverControllerForInfo);
    _inherit(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification, A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll);
    _inherit(A.SliverObserverController, A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification);
    _inherit(A.ScrollViewOnceObserveNotificationResult, A.CommonOnceObserveNotificationResult);
    _inherit(A.SliverViewObserver, A.ObserverWidget);
    _inherit(A.MixViewObserverState, A.ObserverWidgetState);
    _mixinHard(A.__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin, F.TickerProviderStateMixin);
    _mixin(A.__ChatState_State_WidgetsBindingObserver, B.WidgetsBindingObserver);
    _mixinHard(A.__ChatAnimatedListState_State_TickerProviderStateMixin, F.TickerProviderStateMixin);
    _mixin(A.__SliverSpacingState_State_WidgetsBindingObserver, B.WidgetsBindingObserver);
    _mixinHard(A.__SliverSpacingState_State_WidgetsBindingObserver_KeyboardMixin, A.KeyboardMixin);
    _mixinHard(A.__EmptyChatListState_State_SingleTickerProviderStateMixin, Ad.SingleTickerProviderStateMixin);
    _mixin(A._GridViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin, A.ObserveDisplayingChildModelMixin);
    _mixin(A._ListViewObserveDisplayingChildModel_ObserveDisplayingChildModel_ObserveDisplayingChildModelMixin, A.ObserveDisplayingChildModelMixin);
    _mixin(A._SliverObserverController_ObserverController_ObserverControllerForInfo, A.ObserverControllerForInfo);
    _mixin(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll, A.ObserverControllerForScroll);
    _mixin(A._SliverObserverController_ObserverController_ObserverControllerForInfo_ObserverControllerForScroll_ObserverControllerForNotification, A.ObserverControllerForNotification);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"ListDiffDelegate":{"IndexableItemDiffDelegate":["1"],"DiffDelegate":[]},"DataInsert":{"DataDiffUpdate":["1"]},"DataRemove":{"DataDiffUpdate":["1"]},"DataChange":{"DataDiffUpdate":["1"]},"DataMove":{"DataDiffUpdate":["1"]},"_ActiveItem":{"Comparable":["_ActiveItem"]},"SliverAnimatedList":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"SliverAnimatedListState":{"TickerProviderStateMixin":["SliverAnimatedList"],"State":["SliverAnimatedList"],"TickerProvider":[],"State.T":"SliverAnimatedList"},"_SliverAnimatedMultiBoxAdaptor":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverAnimatedMultiBoxAdaptorState":{"TickerProviderStateMixin":["1"],"State":["1"],"TickerProvider":[]},"MessagesGroupingMode":{"Enum":[]},"UserCache":{"ChangeNotifier":[],"Listenable":[]},"Chat":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ChatState":{"State":["Chat"],"WidgetsBindingObserver":[],"State.T":"Chat"},"ChatAnimatedList":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"InitialScrollToEndMode":{"Enum":[]},"_ChatAnimatedListState":{"TickerProviderStateMixin":["ChatAnimatedList"],"State":["ChatAnimatedList"],"TickerProvider":[],"State.T":"ChatAnimatedList"},"SliverSpacing":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverSpacingState":{"State":["SliverSpacing"],"WidgetsBindingObserver":[],"State.T":"SliverSpacing"},"ChatMessage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ChatMessageInternal":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ChatMessageInternalState":{"State":["ChatMessageInternal"],"State.T":"ChatMessageInternal"},"Composer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ComposerState":{"State":["Composer"],"State.T":"Composer"},"EmptyChatList":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_EmptyChatListState":{"State":["EmptyChatList"],"TickerProvider":[],"State.T":"EmptyChatList"},"ScrollToBottom":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"SimpleTextMessage":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"TimeAndStatus":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ComposerHeightNotifier":{"ChangeNotifier":[],"Listenable":[]},"LoadMoreNotifier":{"ChangeNotifier":[],"Listenable":[]},"MessageListDiff":{"ListDiffDelegate":["Message"],"IndexableItemDiffDelegate":["Message"],"DiffDelegate":[],"ListDiffDelegate.T":"Message"},"SendButtonVisibilityMode":{"Enum":[]},"InputClearMode":{"Enum":[]},"ObserverHandleContextsResultModel":{"ObserverHandleContextsResultModel.M":"1"},"ObserverAutoTriggerObserveType":{"Enum":[]},"ObserverTriggerOnObserveType":{"Enum":[]},"ObserverRenderSliverType":{"Enum":[]},"ObserverWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"ObserverWidgetState":{"State":["4"],"State.T":"4","ObserverWidgetState.C":"1","ObserverWidgetState.M":"2","ObserverWidgetState.N":"3","ObserverWidgetState.T":"4"},"ObserverWidgetScope":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ObserverWidgetTagManager":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ObserverWidgetObserveResultType":{"Enum":[]},"GridViewObserveDisplayingChildModel":{"ObserveDisplayingChildModel":[]},"GridViewObserveModel":{"ObserveModel":[]},"ListViewObserveDisplayingChildModel":{"ObserveDisplayingChildModel":[]},"ListViewObserveModel":{"ObserveModel":[]},"ScrollViewOnceObserveNotification":{"Notification0":[]},"ObserverScrollNotification":{"Notification0":[]},"ObserverScrollStartNotification":{"Notification0":[]},"ObserverScrollInterruptionNotification":{"Notification0":[]},"ObserverScrollDecisionNotification":{"Notification0":[]},"ObserverScrollEndNotification":{"Notification0":[]},"SliverObserverHandleContextsResultModel":{"ObserverHandleContextsResultModel":["ObserveModel"],"ObserverHandleContextsResultModel.M":"ObserveModel"},"SliverObserverController":{"ObserverControllerForNotification":["ObserveModel","SliverObserverHandleContextsResultModel<ObserveModel>","ScrollViewOnceObserveNotificationResult"],"ObserverController":[],"ObserverControllerForNotification.R":"SliverObserverHandleContextsResultModel<ObserveModel>","ObserverControllerForNotification.S":"ScrollViewOnceObserveNotificationResult"},"ScrollViewOnceObserveNotificationResult":{"CommonOnceObserveNotificationResult":["ObserveModel","SliverObserverHandleContextsResultModel<ObserveModel>"],"CommonOnceObserveNotificationResult.M":"ObserveModel"},"SliverViewObserver":{"ObserverWidget":["SliverObserverController","ObserveModel","ScrollViewOnceObserveNotification"],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[],"ObserverWidget.C":"SliverObserverController","ObserverWidget.M":"ObserveModel","ObserverWidget.N":"ScrollViewOnceObserveNotification"},"MixViewObserverState":{"ObserverWidgetState":["SliverObserverController","ObserveModel","ScrollViewOnceObserveNotification","SliverViewObserver"],"State":["SliverViewObserver"],"State.T":"SliverViewObserver","ObserverWidgetState.C":"SliverObserverController","ObserverWidgetState.M":"ObserveModel","ObserverWidgetState.N":"ScrollViewOnceObserveNotification","ObserverWidgetState.T":"SliverViewObserver"},"ObserverListenerEntry":{"LinkedListEntry":["ObserverListenerEntry<1>"]},"SliverObserverListenerEntry":{"LinkedListEntry":["SliverObserverListenerEntry"]}}'));
  B._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"_SliverAnimatedMultiBoxAdaptorState":1,"__SliverAnimatedMultiBoxAdaptorState_State_TickerProviderStateMixin":1,"KeyboardMixin":1}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Animation_double: findType("Animation<double>"),
      BuildContext: findType("BuildContext"),
      Builders: findType("Builders"),
      Chat: findType("Chat"),
      ChatController: findType("ChatController"),
      ChatOperation: findType("ChatOperation"),
      ChatTheme: findType("ChatTheme"),
      Composer: findType("Composer"),
      ComposerHeightNotifier: findType("ComposerHeightNotifier"),
      Consumer_ComposerHeightNotifier: findType("Consumer<ComposerHeightNotifier>"),
      CrossCache: findType("CrossCache"),
      CustomMessage: findType("CustomMessage"),
      DataDiffUpdate_Message: findType("DataDiffUpdate<Message>"),
      DateFormat: findType("DateFormat"),
      Directionality: findType("Directionality"),
      Duration: findType("Duration"),
      Element: findType("Element"),
      FocusNode: findType("FocusNode"),
      Future_nullable_User_Function_String: findType("Future<User?>(String)"),
      GridViewObserveDisplayingChildModel: findType("GridViewObserveDisplayingChildModel"),
      ImageMessage: findType("ImageMessage"),
      JSArray_BuildContext: findType("JSArray<BuildContext>"),
      JSArray_ChatOperation: findType("JSArray<ChatOperation>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_GridViewObserveDisplayingChildModel: findType("JSArray<GridViewObserveDisplayingChildModel>"),
      JSArray_ListViewObserveDisplayingChildModel: findType("JSArray<ListViewObserveDisplayingChildModel>"),
      JSArray_ObserverAutoTriggerObserveType: findType("JSArray<ObserverAutoTriggerObserveType>"),
      JSArray_SingleChildWidget: findType("JSArray<SingleChildWidget>"),
      JSArray_SliverViewportObserveDisplayingChildModel: findType("JSArray<SliverViewportObserveDisplayingChildModel>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray__ActiveItem: findType("JSArray<_ActiveItem>"),
      JSArray__Diagonal: findType("JSArray<_Diagonal>"),
      JSArray__PostponedUpdate: findType("JSArray<_PostponedUpdate>"),
      JSArray__Range: findType("JSArray<_Range>"),
      KeyEvent: findType("KeyEvent"),
      LabeledGlobalKey_SliverAnimatedListState: findType("LabeledGlobalKey<SliverAnimatedListState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LinkedList_ObserverListenerEntry_ObserveModel: findType("LinkedList<ObserverListenerEntry<ObserveModel>>"),
      LinkedList_SliverObserverListenerEntry: findType("LinkedList<SliverObserverListenerEntry>"),
      ListViewObserveDisplayingChildModel: findType("ListViewObserveDisplayingChildModel"),
      List_BuildContext: findType("List<BuildContext>"),
      List_Message: findType("List<Message>"),
      List__ActiveItem: findType("List<_ActiveItem>"),
      List__PostponedUpdate: findType("List<_PostponedUpdate>"),
      LoadMoreNotifier: findType("LoadMoreNotifier"),
      Map_int_ObserveScrollChildModel: findType("Map<int,ObserveScrollChildModel>"),
      Map_of_BuildContext_and_Map_int_ObserveScrollChildModel: findType("Map<BuildContext,Map<int,ObserveScrollChildModel>>"),
      MappedListIterable_ObserverAutoTriggerObserveType_Type: findType("MappedListIterable<ObserverAutoTriggerObserveType,Type>"),
      MediaQuery: findType("MediaQuery"),
      Message: findType("Message"),
      NotificationListener_Notification: findType("NotificationListener<Notification0>"),
      NotificationListener_ScrollNotification: findType("NotificationListener<ScrollNotification>"),
      Null: findType("Null"),
      ObserveModel: findType("ObserveModel"),
      ObserveScrollChildModel: findType("ObserveScrollChildModel"),
      ObserverAutoTriggerObserveType: findType("ObserverAutoTriggerObserveType"),
      ObserverWidgetScope_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification: findType("ObserverWidgetScope<ObserverController,ObserveModel,ScrollViewOnceObserveNotification,ObserverWidget<ObserverController,ObserveModel,ScrollViewOnceObserveNotification>>"),
      ObserverWidgetState_of_ObserverController_and_ObserveModel_and_ScrollViewOnceObserveNotification_and_ObserverWidget_ObserverController_ObserveModel_ScrollViewOnceObserveNotification: findType("ObserverWidgetState<ObserverController,ObserveModel,ScrollViewOnceObserveNotification,ObserverWidget<ObserverController,ObserveModel,ScrollViewOnceObserveNotification>>"),
      ObserverWidgetTagManager: findType("ObserverWidgetTagManager"),
      Record_2_Color_onSurface_and_Color_surfaceContainer: findType("+onSurface,surfaceContainer(Color,Color)"),
      Record_2_TextStyle_bodyLarge_and_Color_onSurface: findType("+bodyLarge,onSurface(TextStyle,Color)"),
      Record_5_TextStyle_bodyMedium_and_Color_onSurface_and_Color_primary_and_Color_surfaceContainerHigh_and_Color_surfaceContainerLow: findType("+bodyMedium,onSurface,primary,surfaceContainerHigh,surfaceContainerLow(TextStyle,Color,Color,Color,Color)"),
      Record_7_TextStyle_bodyMedium_and_TextStyle_labelSmall_and_Color_onPrimary_and_Color_onSurface_and_Color_primary_and_BorderRadiusGeometry_shape_and_Color_surfaceContainer: findType("+bodyMedium,labelSmall,onPrimary,onSurface,primary,shape,surfaceContainer(TextStyle,TextStyle,Color,Color,Color,BorderRadiusGeometry,Color)"),
      RenderSliverFixedExtentList: findType("RenderSliverFixedExtentList"),
      RenderSliverGrid: findType("RenderSliverGrid"),
      RenderViewportBase_ContainerParentDataMixin_RenderSliver: findType("RenderViewportBase<ContainerParentDataMixin<RenderSliver>>"),
      ScrollNotification: findType("ScrollNotification"),
      SliverConstraints: findType("SliverConstraints"),
      SliverMultiBoxAdaptorParentData: findType("SliverMultiBoxAdaptorParentData"),
      SliverObserverHandleContextsResultModel_ObserveModel: findType("SliverObserverHandleContextsResultModel<ObserveModel>"),
      SliverObserverListenerEntry: findType("SliverObserverListenerEntry"),
      SliverViewportObserveDisplayingChildModel: findType("SliverViewportObserveDisplayingChildModel"),
      StreamSubscription_ChatOperation: findType("StreamSubscription<ChatOperation>"),
      String: findType("String"),
      TextEditingController: findType("TextEditingController"),
      TextMessage: findType("TextMessage"),
      TextStreamMessage: findType("TextStreamMessage"),
      Type_Function_ObserverAutoTriggerObserveType: findType("Type(ObserverAutoTriggerObserveType)"),
      UserCache: findType("UserCache"),
      ValueKey_String: findType("ValueKey<String>"),
      ValueNotifier_bool: findType("ValueNotifier<bool>"),
      Widget_Function_2_BuildContext_and_Animation_double: findType("Widget(BuildContext,Animation<double>)"),
      _ActiveItem: findType("_ActiveItem"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _Diagonal: findType("_Diagonal"),
      _Future_dynamic: findType("_Future<@>"),
      bool: findType("bool"),
      dynamic: findType("@"),
      int: findType("int"),
      nullable_LinkedList_SliverObserverListenerEntry: findType("LinkedList<SliverObserverListenerEntry>?"),
      nullable_MessagesGroupingMode: findType("MessagesGroupingMode?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_RenderObject: findType("RenderObject?"),
      nullable_SliverObserverHandleContextsResultModel_ObserveModel: findType("SliverObserverHandleContextsResultModel<ObserveModel>?"),
      nullable_StreamSubscription_ChatOperation: findType("StreamSubscription<ChatOperation>?"),
      nullable_User: findType("User?"),
      nullable_Widget: findType("Widget?"),
      nullable_bool: findType("bool?"),
      nullable_double_Function_double: findType("double(double)?"),
      nullable_dynamic_Function: findType("@()?"),
      nullable_void_Function: findType("~()?"),
      nullable_void_Function_2_BuildContext_and_Message_$named_details_LongPressStartDetails_and_index_int: findType("~(BuildContext,Message{details:LongPressStartDetails,index:int})?"),
      nullable_void_Function_2_BuildContext_and_Message_$named_details_TapUpDetails_and_index_int: findType("~(BuildContext,Message{details:TapUpDetails,index:int})?"),
      nullable_void_Function_2_BuildContext_and_Message_$named_index_int: findType("~(BuildContext,Message{index:int})?"),
      nullable_void_Function_String: findType("~(String)?"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_Element: findType("~(Element)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.IconData_57523_MaterialIcons_null_false = new F.IconData(57523, "MaterialIcons", null, false);
    D.Icon_PJ0 = new F.Icon(D.IconData_57523_MaterialIcons_null_false, null, null, null, null);
    D.IconData_58737_MaterialIcons_null_true = new F.IconData(58737, "MaterialIcons", null, true);
    D.Icon_kve = new F.Icon(D.IconData_58737_MaterialIcons_null_true, null, null, null, null);
    D.Radius_24_24 = new B.Radius(24, 24);
    D.BorderRadius_KTf = new F.BorderRadius(D.Radius_24_24, D.Radius_24_24, D.Radius_24_24, D.Radius_24_24);
    D.OutlineInputBorder_Yew = new Ag.OutlineInputBorder(4, D.BorderRadius_KTf, L.BorderSide_Ah5);
    D.TextCapitalization_10 = new A6.TextCapitalization0(1, "sentences");
    D.SendButtonVisibilityMode_2 = new A.SendButtonVisibilityMode(2, "disabled");
    D.InputClearMode_0 = new A.InputClearMode(0, "always");
    D.Composer_52m = new A.Composer(null, "Type a message", null);
    D.Duration_1000 = new B.Duration(1000);
    D.EdgeInsets_0_0_0_120 = new B.EdgeInsets(0, 0, 0, 120);
    D.EmptyChatList_null = new A.EmptyChatList(null);
    D.IconData_58195_MaterialIcons_null_false = new F.IconData(58195, "MaterialIcons", null, false);
    D.Icon_Ngt = new F.Icon(D.IconData_58195_MaterialIcons_null_false, null, null, null, null);
    D.InitialScrollToEndMode_1 = new A.InitialScrollToEndMode(1, "jump");
    D.List_empty21 = B._setArrayType(makeConstList([]), B.findType("JSArray<Message>"));
    D.Map_empty7 = new B.ConstantStringMap(C.Object_empty, [], B.findType("ConstantStringMap<BuildContext,0&>"));
    D.MessagesGroupingMode_0 = new A.MessagesGroupingMode(0, "timeDifference");
    D.ObserverAutoTriggerObserveType_0 = new A.ObserverAutoTriggerObserveType(0, "scrollStart");
    D.ObserverAutoTriggerObserveType_1 = new A.ObserverAutoTriggerObserveType(1, "scrollUpdate");
    D.ObserverAutoTriggerObserveType_2 = new A.ObserverAutoTriggerObserveType(2, "scrollEnd");
    D.ObserverRenderSliverType_0 = new A.ObserverRenderSliverType(0, "list");
    D.ObserverTriggerOnObserveType_0 = new A.ObserverTriggerOnObserveType(0, "directly");
    D.ObserverTriggerOnObserveType_1 = new A.ObserverTriggerOnObserveType(1, "displayingItemsChange");
    D.ObserverWidgetObserveResultType_0 = new A.ObserverWidgetObserveResultType(0, "success");
    D.ObserverWidgetObserveResultType_1 = new A.ObserverWidgetObserveResultType(1, "interrupted");
    D.Type_ScrollEndNotification_axn = B.typeLiteral("ScrollEndNotification");
    D.Type_ScrollStartNotification_Ezb = B.typeLiteral("ScrollStartNotification");
    D.Type_ScrollUpdateNotification_nu7 = B.typeLiteral("ScrollUpdateNotification");
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_163", e: "endPart", h: h});
})($__dart_deferred_initializers__, "DmRxorGwB8HY6f9bjj9Wn0KnYcQ=");
;
//# sourceMappingURL=main.dart.js_163.part.js.map
