// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_186", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, C, D, Z, W, Af, A4, Ag, Ah, Ai, A5, Aj, U, Ak, A1, A6, Al, N, Am, O, An, A7, Ao, Ap, Aq,
  B = {
    Gradient_Gradient$radial(center, radius, colors, colorStops, tileMode, matrix4, focal) {
      var matrix32, t1;
      if (colors.length !== colorStops.length)
        C.throwExpression(C.ArgumentError$('"colors" and "colorStops" arguments must have equal length.', null));
      matrix32 = matrix4 != null ? C.toMatrix32(matrix4) : null;
      if (focal != null)
        t1 = focal.$eq(0, center);
      else
        t1 = true;
      if (t1)
        return $.$get$_renderer().createRadialGradient$6(0, center, radius, colors, colorStops, tileMode, matrix32);
      else
        return $.$get$_renderer().createConicalGradient$8(focal, 0, center, radius, colors, colorStops, tileMode, matrix32);
    },
    ImageDescriptor_encoded(buffer) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageDescriptor),
        $async$returnValue, descriptor;
      var $async$ImageDescriptor_encoded = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              descriptor = new B.ImageDescriptor();
              descriptor._ui$_data = buffer._ui$_list;
              $async$returnValue = descriptor;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$ImageDescriptor_encoded, $async$completer);
    },
    TextDecoration_TextDecoration$combine(decorations) {
      var t1, mask, _i;
      for (t1 = decorations.length, mask = 0, _i = 0; _i < t1; ++_i)
        mask |= decorations[_i]._mask;
      return new C.TextDecoration(mask);
    },
    ImageDescriptor: function ImageDescriptor() {
      this._ui$_data = null;
    },
    _CheckboxType: function _CheckboxType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Checkbox: function Checkbox(t0, t1, t2) {
      this.value = t0;
      this.onChanged = t1;
      this.key = t2;
    },
    _CheckboxState: function _CheckboxState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._checkbox$_painter = t0;
      _._previousValue = null;
      _.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _.ToggleableStateMixin___ToggleableStateMixin__position_A = t2;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t3;
      _.ToggleableStateMixin___ToggleableStateMixin__reaction_A = t4;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = t5;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t6;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = t7;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t8;
      _.ToggleableStateMixin__reactionAnimationDuration = t9;
      _.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = t10;
      _.ToggleableStateMixin__downPosition = t11;
      _.ToggleableStateMixin__focused = t12;
      _.ToggleableStateMixin__hovering = t13;
      _.TickerProviderStateMixin__tickers = t14;
      _.TickerProviderStateMixin__tickerModeNotifier = t15;
      _._framework$_element = _._widget = null;
    },
    _CheckboxState__widgetFillColor_closure: function _CheckboxState__widgetFillColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxState_build_closure: function _CheckboxState_build_closure(t0, t1) {
      this.$this = t0;
      this.checkboxTheme = t1;
    },
    _CheckboxPainter: function _CheckboxPainter(t0) {
      var _ = this;
      _._isActive = _._toggleable$_isHovered = _._toggleable$_isFocused = _._downPosition = _._splashRadius = _._toggleable$_focusColor = _._toggleable$_hoverColor = _._reactionColor = _._inactiveReactionColor = _._inactiveColor = _._activeColor = _._reactionHoverFade = _._reactionFocusFade = _._reaction = _._toggleable$_position = _._inactiveSide = _._activeSide = _._checkbox$_shape = _._previousValue = _._checkbox$_value = _._checkColor = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _CheckboxDefaultsM3: function _CheckboxDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._checkbox$_theme = t0;
      _._checkbox$_colors = t1;
      _.mouseCursor = t2;
      _.fillColor = t3;
      _.checkColor = t4;
      _.overlayColor = t5;
      _.splashRadius = t6;
      _.materialTapTargetSize = t7;
      _.visualDensity = t8;
      _.shape = t9;
      _.side = t10;
    },
    _CheckboxDefaultsM3_side_closure: function _CheckboxDefaultsM3_side_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM3_fillColor_closure: function _CheckboxDefaultsM3_fillColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM3_checkColor_closure: function _CheckboxDefaultsM3_checkColor_closure(t0) {
      this.$this = t0;
    },
    _CheckboxDefaultsM3_overlayColor_closure: function _CheckboxDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    __CheckboxState_State_TickerProviderStateMixin: function __CheckboxState_State_TickerProviderStateMixin() {
    },
    __CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin: function __CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin() {
    },
    Divider: function Divider(t0) {
      this.key = t0;
    },
    _RadioType: function _RadioType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Radio: function Radio(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.groupValue = t1;
      _.onChanged = t2;
      _.materialTapTargetSize = t3;
      _.key = t4;
      _.$ti = t5;
    },
    _RadioState: function _RadioState(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _._radio$_painter = t0;
      _.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _.ToggleableStateMixin___ToggleableStateMixin__position_A = t2;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t3;
      _.ToggleableStateMixin___ToggleableStateMixin__reaction_A = t4;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = t5;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t6;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = t7;
      _.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t8;
      _.ToggleableStateMixin__reactionAnimationDuration = t9;
      _.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = t10;
      _.ToggleableStateMixin__downPosition = t11;
      _.ToggleableStateMixin__focused = t12;
      _.ToggleableStateMixin__hovering = t13;
      _.TickerProviderStateMixin__tickers = t14;
      _.TickerProviderStateMixin__tickerModeNotifier = t15;
      _._framework$_element = _._widget = null;
      _.$ti = t16;
    },
    _RadioState__widgetFillColor_closure: function _RadioState__widgetFillColor_closure(t0) {
      this.$this = t0;
    },
    _RadioState_build_closure: function _RadioState_build_closure(t0, t1) {
      this.$this = t0;
      this.radioTheme = t1;
    },
    _RadioPainter: function _RadioPainter(t0) {
      var _ = this;
      _._isActive = _._toggleable$_isHovered = _._toggleable$_isFocused = _._downPosition = _._splashRadius = _._toggleable$_focusColor = _._toggleable$_hoverColor = _._reactionColor = _._inactiveReactionColor = _._inactiveColor = _._activeColor = _._reactionHoverFade = _._reactionFocusFade = _._reaction = _._toggleable$_position = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t0;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _RadioDefaultsM3: function _RadioDefaultsM3(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.context = t0;
      _.___RadioDefaultsM3__colors_FI = _.___RadioDefaultsM3__theme_FI = $;
      _.mouseCursor = t1;
      _.fillColor = t2;
      _.overlayColor = t3;
      _.splashRadius = t4;
      _.materialTapTargetSize = t5;
      _.visualDensity = t6;
    },
    _RadioDefaultsM3_fillColor_closure: function _RadioDefaultsM3_fillColor_closure(t0) {
      this.$this = t0;
    },
    _RadioDefaultsM3_overlayColor_closure: function _RadioDefaultsM3_overlayColor_closure(t0) {
      this.$this = t0;
    },
    __RadioState_State_TickerProviderStateMixin: function __RadioState_State_TickerProviderStateMixin() {
    },
    __RadioState_State_TickerProviderStateMixin_ToggleableStateMixin: function __RadioState_State_TickerProviderStateMixin_ToggleableStateMixin() {
    },
    _TextSpanEditingController$(textSpan) {
      var t1 = textSpan.toPlainText$1$includeSemanticsLabels(false);
      return new B._TextSpanEditingController(textSpan, new C.TextEditingValue(t1, D.TextSelection_kab, D.TextRange_m1_m1), $.$get$ChangeNotifier__emptyListeners());
    },
    SelectableText__defaultContextMenuBuilder(context, editableTextState) {
      type$.BuildContext._as(context);
      return L.AdaptiveTextSelectionToolbar$editableText(type$.EditableTextState._as(editableTextState));
    },
    _TextSpanEditingController: function _TextSpanEditingController(t0, t1, t2) {
      var _ = this;
      _._textSpan = t0;
      _._change_notifier$_value = t1;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _SelectableTextSelectionGestureDetectorBuilder: function _SelectableTextSelectionGestureDetectorBuilder(t0, t1) {
      var _ = this;
      _._selectable_text$_state = t0;
      _.delegate = t1;
      _._shouldShowSelectionToolbar = true;
      _._isShiftPressed = false;
      _._dragStartViewportOffset = _._dragStartScrollOffset = 0;
      _._dragStartSelection = null;
      _._longPressStartedWithoutFocus = false;
    },
    SelectableText: function SelectableText(t0, t1) {
      this.data = t0;
      this.key = t1;
    },
    _SelectableTextState: function _SelectableTextState(t0) {
      var _ = this;
      _.___SelectableTextState__controller_A = $;
      _._selectable_text$_focusNode = null;
      _._selectable_text$_showSelectionHandles = false;
      _.___SelectableTextState_forcePressEnabled_A = _.___SelectableTextState__selectionGestureDetectorBuilder_A = $;
      _.editableTextKey = t0;
      _._framework$_element = _._widget = null;
    },
    _SelectableTextState__onControllerChanged_closure: function _SelectableTextState__onControllerChanged_closure(t0, t1) {
      this.$this = t0;
      this.showSelectionHandles = t1;
    },
    _SelectableTextState__handleSelectionChanged_closure: function _SelectableTextState__handleSelectionChanged_closure(t0, t1) {
      this.$this = t0;
      this.willShowSelectionHandles = t1;
    },
    _SelectableTextState_build_closure: function _SelectableTextState_build_closure(t0) {
      this.$this = t0;
    },
    TextButton_TextButton$icon(icon, label, onPressed, style) {
      var _null = null;
      return new B._TextButtonWithIcon(onPressed, _null, _null, _null, style, D.Clip_0, _null, false, _null, true, _null, new B._TextButtonWithIconChild(label, icon, style, _null, _null), _null);
    },
    _TextButtonWithIcon: function _TextButtonWithIcon(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.onPressed = t0;
      _.onLongPress = t1;
      _.onHover = t2;
      _.onFocusChange = t3;
      _.style = t4;
      _.clipBehavior = t5;
      _.focusNode = t6;
      _.autofocus = t7;
      _.statesController = t8;
      _.isSemanticButton = t9;
      _.tooltip = t10;
      _.child = t11;
      _.key = t12;
    },
    _TextButtonWithIconChild: function _TextButtonWithIconChild(t0, t1, t2, t3, t4) {
      var _ = this;
      _.label = t0;
      _.icon = t1;
      _.buttonStyle = t2;
      _.iconAlignment = t3;
      _.key = t4;
    },
    _httpClient() {
      return type$.JSObject._as(new self.XMLHttpRequest());
    },
    _imgElementFactory() {
      var t1 = type$.JSObject;
      return t1._as(t1._as(self.document).createElement("img"));
    },
    _ForwardingImageStreamCompleter$(task, debugLabel, informationCollector) {
      var t1 = new B._ForwardingImageStreamCompleter(task, C._setArrayType([], type$.JSArray_ImageStreamListener), C._setArrayType([], type$.JSArray_of_void_Function_2_Object_and_nullable_StackTrace), C._setArrayType([], type$.JSArray_of_void_Function));
      t1._ForwardingImageStreamCompleter$3$debugLabel$informationCollector(task, debugLabel, informationCollector);
      return t1;
    },
    NetworkImage: function NetworkImage(t0) {
      this.url = t0;
    },
    NetworkImage__loadAsync_loadViaDecode: function NetworkImage__loadAsync_loadViaDecode(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.decode = t1;
      _.chunkEvents = t2;
      _.key = t3;
    },
    NetworkImage__loadAsync_loadViaImgElement: function NetworkImage__loadAsync_loadViaImgElement(t0, t1) {
      this.$this = t0;
      this.key = t1;
    },
    NetworkImage__loadAsync_closure: function NetworkImage__loadAsync_closure(t0) {
      this.chunkEvents = t0;
    },
    NetworkImage__fetchImageBytes_closure: function NetworkImage__fetchImageBytes_closure(t0, t1, t2) {
      this.request = t0;
      this.completer = t1;
      this.resolved = t2;
    },
    NetworkImage__fetchImageBytes_closure0: function NetworkImage__fetchImageBytes_closure0(t0, t1, t2) {
      this.completer = t0;
      this.request = t1;
      this.resolved = t2;
    },
    _ForwardingImageStreamCompleter: function _ForwardingImageStreamCompleter(t0, t1, t2, t3) {
      var _ = this;
      _.task = t0;
      _.resolved = false;
      _.___ForwardingImageStreamCompleter_handle_F = _.___ForwardingImageStreamCompleter_completer_F = $;
      _.__network_image_web$_disposed = false;
      _._image_stream$_listeners = t1;
      _._ephemeralErrorListeners = t2;
      _.debugLabel = _._currentError = _._currentImage = null;
      _._addingInitialListeners = _._hadAtLeastOneListener = false;
      _._keepAliveHandles = 0;
      _._image_stream$_disposed = false;
      _._onLastListenerRemovedCallbacks = t3;
    },
    _ForwardingImageStreamCompleter_closure: function _ForwardingImageStreamCompleter_closure(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter__closure: function _ForwardingImageStreamCompleter__closure() {
    },
    _ForwardingImageStreamCompleter__closure0: function _ForwardingImageStreamCompleter__closure0(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter__closure1: function _ForwardingImageStreamCompleter__closure1(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter__closure2: function _ForwardingImageStreamCompleter__closure2(t0) {
      this.$this = t0;
    },
    _ForwardingImageStreamCompleter_closure0: function _ForwardingImageStreamCompleter_closure0(t0, t1) {
      this.$this = t0;
      this.informationCollector = t1;
    },
    WebImageInfo: function WebImageInfo(t0, t1) {
      this.htmlImage = t0;
      this.debugLabel = t1;
    },
    NetworkImageLoadException$(statusCode, uri) {
      return new B.NetworkImageLoadException("HTTP request failed, statusCode: " + statusCode + ", " + uri.toString$0(0), uri);
    },
    NetworkImageLoadException: function NetworkImageLoadException(t0, t1) {
      this._image_provider$_message = t0;
      this.uri = t1;
    },
    OneFrameImageStreamCompleter$(image, informationCollector) {
      var t1 = new B.OneFrameImageStreamCompleter(C._setArrayType([], type$.JSArray_ImageStreamListener), C._setArrayType([], type$.JSArray_of_void_Function_2_Object_and_nullable_StackTrace), C._setArrayType([], type$.JSArray_of_void_Function));
      t1.OneFrameImageStreamCompleter$2$informationCollector(image, informationCollector);
      return t1;
    },
    OneFrameImageStreamCompleter: function OneFrameImageStreamCompleter(t0, t1, t2) {
      var _ = this;
      _._image_stream$_listeners = t0;
      _._ephemeralErrorListeners = t1;
      _.debugLabel = _._currentError = _._currentImage = null;
      _._addingInitialListeners = _._hadAtLeastOneListener = false;
      _._keepAliveHandles = 0;
      _._image_stream$_disposed = false;
      _._onLastListenerRemovedCallbacks = t2;
    },
    OneFrameImageStreamCompleter_closure: function OneFrameImageStreamCompleter_closure(t0, t1) {
      this.$this = t0;
      this.informationCollector = t1;
    },
    OvalBorder: function OvalBorder(t0, t1) {
      this.eccentricity = t0;
      this.side = t1;
    },
    RenderFittedBox: function RenderFittedBox(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._proxy_box$_resolvedAlignment = null;
      _._proxy_box$_fit = t0;
      _._proxy_box$_alignment = t1;
      _._proxy_box$_textDirection = t2;
      _._proxy_box$_transform = _._proxy_box$_hasVisualOverflow = null;
      _._proxy_box$_clipBehavior = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderFittedBox_hitTestChildren_closure: function RenderFittedBox_hitTestChildren_closure(t0) {
      this.$this = t0;
    },
    TableBorder: function TableBorder(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.top = t0;
      _.right = t1;
      _.bottom = t2;
      _.left = t3;
      _.horizontalInside = t4;
      _.verticalInside = t5;
      _.borderRadius = t6;
    },
    FittedBox$(alignment, child, clipBehavior, fit) {
      return new B.FittedBox(fit, alignment, clipBehavior, child, null);
    },
    FittedBox: function FittedBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fit = t0;
      _.alignment = t1;
      _.clipBehavior = t2;
      _.child = t3;
      _.key = t4;
    },
    Spacer: function Spacer(t0) {
      this.key = t0;
    },
    ToggleableStateMixin: function ToggleableStateMixin() {
    },
    ToggleableStateMixin__handleTapDown_closure: function ToggleableStateMixin__handleTapDown_closure(t0, t1) {
      this.$this = t0;
      this.details = t1;
    },
    ToggleableStateMixin__handleTapEnd_closure: function ToggleableStateMixin__handleTapEnd_closure(t0) {
      this.$this = t0;
    },
    ToggleableStateMixin__handleFocusHighlightChanged_closure: function ToggleableStateMixin__handleFocusHighlightChanged_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    ToggleableStateMixin__handleHoverChanged_closure: function ToggleableStateMixin__handleHoverChanged_closure(t0, t1) {
      this.$this = t0;
      this.hovering = t1;
    },
    ToggleablePainter: function ToggleablePainter() {
    },
    AccentRenderConfig: function AccentRenderConfig(t0, t1, t2) {
      this.overChar = t0;
      this.overImageName = t1;
      this.underImageName = t2;
    },
    FontMetrics_fromMap(map) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, exception;
      try {
        map.$index(0, "slant").toString;
        map.$index(0, "space").toString;
        map.$index(0, "stretch").toString;
        map.$index(0, "shrink").toString;
        t1 = map.$index(0, "xHeight");
        t1.toString;
        t2 = map.$index(0, "quad");
        t2.toString;
        map.$index(0, "extraSpace").toString;
        t3 = map.$index(0, "num1");
        t3.toString;
        t4 = map.$index(0, "num2");
        t4.toString;
        t5 = map.$index(0, "num3");
        t5.toString;
        t6 = map.$index(0, "denom1");
        t6.toString;
        t7 = map.$index(0, "denom2");
        t7.toString;
        t8 = map.$index(0, "sup1");
        t8.toString;
        t9 = map.$index(0, "sup2");
        t9.toString;
        t10 = map.$index(0, "sup3");
        t10.toString;
        t11 = map.$index(0, "sub1");
        t11.toString;
        t12 = map.$index(0, "sub2");
        t12.toString;
        t13 = map.$index(0, "supDrop");
        t13.toString;
        t14 = map.$index(0, "subDrop");
        t14.toString;
        map.$index(0, "delim1").toString;
        map.$index(0, "delim2").toString;
        t15 = map.$index(0, "axisHeight");
        t15.toString;
        t16 = map.$index(0, "defaultRuleThickness");
        t16.toString;
        t17 = map.$index(0, "bigOpSpacing1");
        t17.toString;
        t18 = map.$index(0, "bigOpSpacing2");
        t18.toString;
        t19 = map.$index(0, "bigOpSpacing3");
        t19.toString;
        t20 = map.$index(0, "bigOpSpacing4");
        t20.toString;
        t21 = map.$index(0, "bigOpSpacing5");
        t21.toString;
        t22 = map.$index(0, "sqrtRuleThickness");
        t22.toString;
        map.$index(0, "ptPerEm").toString;
        map.$index(0, "doubleRuleSep").toString;
        map.$index(0, "arrayRuleWidth").toString;
        map.$index(0, "fboxsep").toString;
        t23 = map.$index(0, "fboxrule");
        t23.toString;
        return new B.FontMetrics(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23);
      } catch (exception) {
        if (type$.Error._is(C.unwrapException(exception)))
          return null;
        else
          throw exception;
      }
    },
    FontMetrics: function FontMetrics(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.xHeight = t0;
      _.quad = t1;
      _.num1 = t2;
      _.num2 = t3;
      _.num3 = t4;
      _.denom1 = t5;
      _.denom2 = t6;
      _.sup1 = t7;
      _.sup2 = t8;
      _.sup3 = t9;
      _.sub1 = t10;
      _.sub2 = t11;
      _.supDrop = t12;
      _.subDrop = t13;
      _.axisHeight = t14;
      _.defaultRuleThickness = t15;
      _.bigOpSpacing1 = t16;
      _.bigOpSpacing2 = t17;
      _.bigOpSpacing3 = t18;
      _.bigOpSpacing4 = t19;
      _.bigOpSpacing5 = t20;
      _.sqrtRuleThickness = t21;
      _.fboxrule = t22;
    },
    AccentNode$(base, isShifty, isStretchy, label) {
      return new B.AccentNode(base, label, isStretchy, isShifty);
    },
    AccentNode: function AccentNode(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.label = t1;
      _.isStretchy = t2;
      _.isShifty = t3;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    AccentNode_buildWidget_closure: function AccentNode_buildWidget_closure(t0, t1) {
      this._box_0 = t0;
      this.options = t1;
    },
    AccentNode_buildWidget_closure0: function AccentNode_buildWidget_closure0(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    AccentNode_buildWidget_closure1: function AccentNode_buildWidget_closure1(t0) {
      this.skew = t0;
    },
    AccentUnderNode$(base, label) {
      return new B.AccentUnderNode(base, label);
    },
    AccentUnderNode: function AccentUnderNode(t0, t1) {
      var _ = this;
      _.base = t0;
      _.label = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    AccentUnderNode_buildWidget_closure0: function AccentUnderNode_buildWidget_closure0() {
    },
    AccentUnderNode_buildWidget_closure: function AccentUnderNode_buildWidget_closure(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    CursorNode: function CursorNode() {
      this._oldChildBuildResults = this._oldBuildResult = this._oldOptions = null;
    },
    _BaselineDistance: function _BaselineDistance(t0, t1, t2) {
      this.baselineDistance = t0;
      this.child = t1;
      this.key = t2;
    },
    _BaselineDistanceBox: function _BaselineDistanceBox(t0, t1, t2, t3) {
      var _ = this;
      _.baselineDistance = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    EnclosureNode$(backgroundcolor, base, bordercolor, hasBorder, horizontalPadding, notation, verticalPadding) {
      return new B.EnclosureNode(base, hasBorder, bordercolor, backgroundcolor, notation, horizontalPadding, verticalPadding);
    },
    EnclosureNode: function EnclosureNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.base = t0;
      _.hasBorder = t1;
      _.bordercolor = t2;
      _.backgroundcolor = t3;
      _.notation = t4;
      _.horizontalPadding = t5;
      _.verticalPadding = t6;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    EnclosureNode_buildWidget_closure: function EnclosureNode_buildWidget_closure(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    EnclosureNode_buildWidget_closure0: function EnclosureNode_buildWidget_closure0(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    LinePainter: function LinePainter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.startRelativeX = t0;
      _.startRelativeY = t1;
      _.endRelativeX = t2;
      _.endRelativeY = t3;
      _.lineWidth = t4;
      _.color = t5;
      _._repaint = t6;
    },
    HorizontalStrikeDelegate: function HorizontalStrikeDelegate(t0, t1, t2) {
      var _ = this;
      _.ruleThickness = t0;
      _.vShift = t1;
      _.color = t2;
      _.width = _.height = 0;
    },
    EquationArrayNode: function EquationArrayNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.arrayStretch = t0;
      _.addJot = t1;
      _.body = t2;
      _.hlines = t3;
      _.rowSpacings = t4;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    EquationArrayNode_buildWidget_closure: function EquationArrayNode_buildWidget_closure(t0) {
      this.options = t0;
    },
    EquationArrayNode_buildWidget_closure0: function EquationArrayNode_buildWidget_closure0() {
    },
    EquationArrayNode_toJson_closure: function EquationArrayNode_toJson_closure() {
    },
    EquationArrayNode_toJson_closure0: function EquationArrayNode_toJson_closure0() {
    },
    EquationArrayNode_toJson_closure1: function EquationArrayNode_toJson_closure1() {
    },
    FracNode$(barSize, continued, denominator, numerator) {
      return new B.FracNode(numerator, denominator, barSize, continued);
    },
    FracNode: function FracNode(t0, t1, t2, t3) {
      var _ = this;
      _.numerator = t0;
      _.denominator = t1;
      _.barSize = t2;
      _.continued = t3;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _FracPos: function _FracPos(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FracLayoutDelegate: function FracLayoutDelegate(t0, t1) {
      var _ = this;
      _.barSize = t0;
      _.options = t1;
      _.barLength = _.width = _.a = _.height = _.theta = 0;
    },
    FunctionNode$(argument, functionName) {
      return new B.FunctionNode(functionName, argument);
    },
    FunctionNode: function FunctionNode(t0, t1) {
      var _ = this;
      _.functionName = t0;
      _.argument = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    LeftRightNode$(body, leftDelim, middle, rightDelim) {
      return new B.LeftRightNode(leftDelim, rightDelim, body, middle);
    },
    buildCustomSizedDelimWidget(delim, minDelimiterHeight, options) {
      var axisHeight, sequence, delimConf, t1, _null = null;
      if (delim == null) {
        axisHeight = new B.Measurement(options.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(options);
        return B.ShiftBaseline$(E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, minDelimiterHeight, _null, _null, _null, _null, _null, A.Measurement_83w.toLpUnder$1(options)), axisHeight, 0.5);
      }
      if (A.Set_6NNqz.contains$1(0, delim))
        sequence = A.List_vQP;
      else
        sequence = A.Set_yInQh.contains$1(0, delim) ? A.List_vQP : A.List_oAf;
      delimConf = B.IterableExtension_firstWhereOrNull(sequence, new B.buildCustomSizedDelimWidget_closure(delim, options, minDelimiterHeight), type$.DelimiterConf);
      if (A.Set_6NNqz.contains$1(0, delim))
        delimConf = delimConf == null ? D.JSArray_methods.get$last(sequence) : delimConf;
      if (delimConf != null) {
        axisHeight = new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options);
        t1 = delimConf.font;
        return B.ShiftBaseline$(B.makeChar(delim, t1, B.getCharacterMetrics(delim, t1.get$fontName(), A.Mode_0), options, false), axisHeight, 0.5);
      } else
        return B.makeStackedDelim(delim, minDelimiterHeight, A.Mode_0, options);
    },
    makeStackedDelim(delim, minDelimiterHeight, mode, options) {
      var t4, t5, t6, t7, topHeight, repeatHeight, bottomHeight, t8, t9, middleMetrics, middleHeight, middleFactor, repeatCount, axisHeight, i, _null = null,
        conf = A.Map_TitJ9.$index(0, delim),
        t1 = conf.top,
        t2 = conf.font,
        t3 = B.getCharacterMetrics(t1, t2.get$fontName(), A.Mode_0);
      t3.toString;
      t4 = conf.repeat;
      t5 = B.getCharacterMetrics(t4, t2.get$fontName(), A.Mode_0);
      t5.toString;
      t6 = conf.bottom;
      t7 = B.getCharacterMetrics(t6, t2.get$fontName(), A.Mode_0);
      t7.toString;
      topHeight = new B.Measurement(t3.height + t3.depth, A.Unit_16).toLpUnder$1(options);
      repeatHeight = new B.Measurement(t5.height + t5.depth, A.Unit_16).toLpUnder$1(options);
      bottomHeight = new B.Measurement(t7.height + t7.depth, A.Unit_16).toLpUnder$1(options);
      t8 = conf.middle;
      t9 = t8 != null;
      if (t9) {
        middleMetrics = B.getCharacterMetrics(t8, t2.get$fontName(), A.Mode_0);
        middleHeight = new B.Measurement(middleMetrics.height + middleMetrics.depth, A.Unit_16).toLpUnder$1(options);
        middleFactor = 2;
      } else {
        middleMetrics = _null;
        middleHeight = 0;
        middleFactor = 1;
      }
      repeatCount = D.JSNumber_methods.ceil$0(Math.max(0, (minDelimiterHeight - (topHeight + bottomHeight + middleHeight)) / (repeatHeight * middleFactor)));
      axisHeight = new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options);
      t1 = C._setArrayType([B.makeChar(t1, t2, t3, options, false)], type$.JSArray_Widget);
      for (i = 0; i < repeatCount; ++i)
        t1.push(B.makeChar(t4, t2, t5, options, false));
      if (t9) {
        middleMetrics.toString;
        t1.push(B.makeChar(t8, t2, middleMetrics, options, false));
      }
      if (t9)
        for (i = 0; i < repeatCount; ++i)
          t1.push(B.makeChar(t4, t2, t5, options, false));
      t1.push(B.makeChar(t6, t2, t7, options, false));
      return B.ShiftBaseline$(Ac.Column$(t1, G.CrossAxisAlignment_0, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1), axisHeight, 0.5);
    },
    LeftRightNode: function LeftRightNode(t0, t1, t2, t3) {
      var _ = this;
      _.leftDelim = t0;
      _.rightDelim = t1;
      _.body = t2;
      _.middle = t3;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    LeftRightNode_buildWidget_closure: function LeftRightNode_buildWidget_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.a = t1;
      _.options = t2;
      _.numElements = t3;
      _.childBuildResults = t4;
    },
    LeftRightNode_buildWidget__closure0: function LeftRightNode_buildWidget__closure0(t0, t1) {
      this.a = t0;
      this.options = t1;
    },
    LeftRightNode_buildWidget__closure: function LeftRightNode_buildWidget__closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.index = t1;
      _.numElements = t2;
      _.options = t3;
    },
    LeftRightNode_toJson_closure: function LeftRightNode_toJson_closure() {
    },
    buildCustomSizedDelimWidget_closure: function buildCustomSizedDelimWidget_closure(t0, t1, t2) {
      this.delim = t0;
      this.options = t1;
      this.minDelimiterHeight = t2;
    },
    StackDelimiterConf: function StackDelimiterConf(t0, t1, t2, t3, t4) {
      var _ = this;
      _.top = t0;
      _.middle = t1;
      _.repeat = t2;
      _.bottom = t3;
      _.font = t4;
    },
    MatrixNode_MatrixNode(arrayStretch, body, columnAligns, hLines, hskipBeforeAndAfter, isSmall, rowSpacings, vLines) {
      var t3, t4, cols, sanitizedColumnAligns, sanitizedVLines, t5, rows, sanitizedBody,
        t1 = C._arrayInstanceType(body),
        t2 = B.IterableIntegerExtension_get_maxOrNull(new C.MappedListIterable(body, t1._eval$1("int(1)")._as(new B.MatrixNode_MatrixNode_closure()), t1._eval$1("MappedListIterable<1,int>")));
      if (t2 == null)
        t2 = 0;
      t3 = columnAligns.length;
      t4 = vLines.length;
      cols = Math.max(Math.max(t2, t3), t4 - 1);
      sanitizedColumnAligns = B.ListExtension_extendToByFill(columnAligns, cols, A.MatrixColumnAlign_1, type$.MatrixColumnAlign);
      t4 = type$.MatrixSeparatorStyle;
      sanitizedVLines = B.ListExtension_extendToByFill(vLines, cols + 1, A.MatrixSeparatorStyle_2, t4);
      t3 = body.length;
      t2 = rowSpacings.length;
      t5 = hLines.length;
      rows = Math.max(Math.max(t3, t2), t5 - 1);
      t5 = t1._eval$1("MappedListIterable<1,List<EquationRowNode?>>");
      sanitizedBody = B.ListExtension_extendToByFill(C.List_List$of(new C.MappedListIterable(body, t1._eval$1("List<EquationRowNode?>(1)")._as(new B.MatrixNode_MatrixNode_closure0(cols)), t5), false, t5._eval$1("ListIterable.E")), rows, C.List_List$filled(cols, null, false, type$.nullable_EquationRowNode), type$.List_nullable_EquationRowNode);
      return new B.MatrixNode(arrayStretch, hskipBeforeAndAfter, isSmall, sanitizedColumnAligns, sanitizedVLines, B.ListExtension_extendToByFill(rowSpacings, rows, A.Measurement_0_Unit_0, type$.Measurement), B.ListExtension_extendToByFill(hLines, rows + 1, A.MatrixSeparatorStyle_2, t4), sanitizedBody, rows, cols);
    },
    MatrixSeparatorStyle: function MatrixSeparatorStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MatrixColumnAlign: function MatrixColumnAlign(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MatrixNode: function MatrixNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.arrayStretch = t0;
      _.hskipBeforeAndAfter = t1;
      _.isSmall = t2;
      _.columnAligns = t3;
      _.vLines = t4;
      _.rowSpacings = t5;
      _.hLines = t6;
      _.body = t7;
      _.rows = t8;
      _.cols = t9;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    MatrixNode_MatrixNode_closure: function MatrixNode_MatrixNode_closure() {
    },
    MatrixNode_MatrixNode_closure0: function MatrixNode_MatrixNode_closure0(t0) {
      this.cols = t0;
    },
    MatrixNode_buildWidget_closure: function MatrixNode_buildWidget_closure(t0) {
      this.options = t0;
    },
    MatrixNode_buildWidget_closure0: function MatrixNode_buildWidget_closure0() {
    },
    MatrixNode_computeChildren_closure: function MatrixNode_computeChildren_closure() {
    },
    MatrixNode_toJson_closure: function MatrixNode_toJson_closure() {
    },
    MatrixNode_toJson_closure0: function MatrixNode_toJson_closure0() {
    },
    MatrixNode_toJson_closure1: function MatrixNode_toJson_closure1() {
    },
    MatrixNode_toJson_closure2: function MatrixNode_toJson_closure2() {
    },
    MatrixNode_toJson_closure3: function MatrixNode_toJson_closure3() {
    },
    MatrixNode_toJson_closure4: function MatrixNode_toJson_closure4() {
    },
    MatrixNode_toJson_closure5: function MatrixNode_toJson_closure5() {
    },
    MatrixNode_toJson__closure: function MatrixNode_toJson__closure() {
    },
    MatrixLayoutDelegate: function MatrixLayoutDelegate(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.rows = t0;
      _.cols = t1;
      _.ruleThickness = t2;
      _.arrayskip = t3;
      _.rowSpacings = t4;
      _.hLines = t5;
      _.hskipBeforeAndAfter = t6;
      _.arraycolsep = t7;
      _.vLines = t8;
      _.columnAligns = t9;
      _.hLinePos = t10;
      _.vLinePos = t11;
      _.width = _.totalHeight = 0;
    },
    MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure: function MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.colPos = t1;
      _.colWidths = t2;
      _.childWidths = t3;
    },
    MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure: function MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure(t0, t1) {
      this.childrenBaselines = t0;
      this.childrenHeights = t1;
    },
    MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0: function MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0(t0, t1, t2) {
      this.$this = t0;
      this.rowBaselinePos = t1;
      this.childHeights = t2;
    },
    MultiscriptsNode$(base, sub, sup) {
      return new B.MultiscriptsNode(base, sub, sup);
    },
    MultiscriptsNode: function MultiscriptsNode(t0, t1, t2) {
      var _ = this;
      _.base = t0;
      _.sub = t1;
      _.sup = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    NaryOperatorNode: function NaryOperatorNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.operator = t0;
      _.lowerLimit = t1;
      _.upperLimit = t2;
      _.naryand = t3;
      _.limits = t4;
      _.allowLargeOp = t5;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    OverNode$(above, base, stackRel) {
      return new B.OverNode(base, above, stackRel);
    },
    OverNode: function OverNode(t0, t1, t2) {
      var _ = this;
      _.base = t0;
      _.above = t1;
      _.stackRel = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    PhantomNode: function PhantomNode(t0, t1, t2, t3) {
      var _ = this;
      _.phantomChild = t0;
      _.zeroWidth = t1;
      _.zeroHeight = t2;
      _.zeroDepth = t3;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    RaiseBoxNode: function RaiseBoxNode(t0, t1) {
      var _ = this;
      _.body = t0;
      _.dy = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    SpaceNode$(breakPenalty, fill, height, mode, shift, width) {
      return new B.SpaceNode(height, width, shift, breakPenalty, fill, mode, false);
    },
    SpaceNode$alignerOrSpacer() {
      return new B.SpaceNode(A.Measurement_0_Unit_0, A.Measurement_0_Unit_0, A.Measurement_0_Unit_0, null, true, A.Mode_0, true);
    },
    SpaceNode: function SpaceNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.height = t0;
      _.width = t1;
      _.shift = t2;
      _.breakPenalty = t3;
      _.fill = t4;
      _.mode = t5;
      _.alignerOrSpacer = t6;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    getSqrtAdvanceWidth(minDelimiterHeight, baseWidth, options) {
      var delimOptions,
        delimConf = B.IterableExtension_firstWhereOrNull(A.List_Hga, new B.getSqrtAdvanceWidth_closure(options, minDelimiterHeight), type$.DelimiterConf);
      if (delimConf != null) {
        delimOptions = options.havingStyle$1(delimConf.style);
        if (delimConf.font.get$fontName() === "Main-Regular")
          return new B.Measurement(0.833, A.Unit_16).toLpUnder$1(delimOptions);
        else
          return new B.Measurement(1, A.Unit_16).toLpUnder$1(delimOptions);
      } else
        return new B.Measurement(1.056, A.Unit_16).toLpUnder$1(options);
    },
    sqrtSvg(baseWidth, minDelimiterHeight, options) {
      var t1, t2, delimOptions, viewPortHeight, t3, t4, viewPortWidth, svgPath, t5, viewBoxHeight,
        delimConf = B.IterableExtension_firstWhereOrNull(A.List_Hga, new B.sqrtSvg_closure(options, minDelimiterHeight), type$.DelimiterConf);
      if (delimConf != null) {
        t1 = delimConf.font;
        t2 = A.Map_9JvRE.$index(0, t1.get$fontName());
        t2.toString;
        delimOptions = options.havingStyle$1(delimConf.style);
        viewPortHeight = new B.Measurement(t2 + 0 + 0.08, A.Unit_16).toLpUnder$1(delimOptions);
        t3 = delimOptions.fontSize;
        t4 = options.color;
        if (t1.get$fontName() === "Main-Regular") {
          viewPortWidth = new B.Measurement(0.833, A.Unit_16).toLpUnder$1(delimOptions) + baseWidth;
          t1 = new B.Measurement(viewPortWidth, A.Unit_15).toLpUnder$1(delimOptions);
          svgPath = B.sqrtPath("sqrtMain", 0, 1080);
          t2 = new B.Measurement(options.get$fontMetrics().sqrtRuleThickness + 0, A.Unit_16).toLpUnder$1(delimOptions);
          t5 = new B.Measurement(0.08, A.Unit_16).toLpUnder$1(delimOptions);
          return new B.ResetBaseline(t2, B.MinDimension$(0, B.svgWidgetFromPath(svgPath, new C.Size(viewPortWidth, viewPortHeight), new C.Rect(0, 0, 0 + t1 / t3 * 1000, 1080), t4, K.Alignment_m1_m1, P.BoxFit_0), 0, 0, -t5), null);
        } else {
          viewPortWidth = Math.max(new B.Measurement(1, A.Unit_16).toLpUnder$1(delimOptions) + baseWidth, new B.Measurement(1.02, A.Unit_16).toLpUnder$1(delimOptions) / t3);
          viewBoxHeight = 1080 * t2;
          t2 = new B.Measurement(viewPortWidth, A.Unit_15).toLpUnder$1(delimOptions);
          svgPath = B.sqrtPath("sqrt" + D.JSString_methods.substring$2(t1.get$fontName(), 0, 5), 0, viewBoxHeight);
          t1 = new B.Measurement(options.get$fontMetrics().sqrtRuleThickness + 0, A.Unit_16).toLpUnder$1(delimOptions);
          t5 = new B.Measurement(0.08, A.Unit_16).toLpUnder$1(delimOptions);
          return new B.ResetBaseline(t1, B.MinDimension$(0, B.svgWidgetFromPath(svgPath, new C.Size(viewPortWidth, viewPortHeight), new C.Rect(0, 0, 0 + t2 / t3 * 1000, 0 + viewBoxHeight), t4, K.Alignment_m1_m1, P.BoxFit_2), 0, 0, -t5), null);
        }
      } else {
        t1 = new B.Measurement(0.08, A.Unit_16).toLpUnder$1(options);
        t2 = options.fontSize;
        viewBoxHeight = 1000 * (new B.Measurement(minDelimiterHeight, A.Unit_15).toLpUnder$1(options) / t2) + 0 + 80;
        viewPortWidth = new B.Measurement(1.056, A.Unit_16).toLpUnder$1(options) + baseWidth;
        t3 = new B.Measurement(viewPortWidth, A.Unit_15).toLpUnder$1(options);
        svgPath = B.sqrtPath("sqrtTall", 0, viewBoxHeight);
        t4 = new B.Measurement(options.get$fontMetrics().sqrtRuleThickness + 0, A.Unit_16).toLpUnder$1(options);
        t5 = new B.Measurement(0.08, A.Unit_16).toLpUnder$1(options);
        return new B.ResetBaseline(t4, B.MinDimension$(0, B.svgWidgetFromPath(svgPath, new C.Size(viewPortWidth, minDelimiterHeight + t1), new C.Rect(0, 0, 0 + t3 / t2 * 1000, 0 + viewBoxHeight), options.color, K.Alignment_m1_m1, P.BoxFit_2), 0, 0, -t5), null);
      }
    },
    SqrtNode: function SqrtNode(t0, t1) {
      var _ = this;
      _.index = t0;
      _.base = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    SqrtNode_buildWidget_closure: function SqrtNode_buildWidget_closure(t0) {
      this.options = t0;
    },
    _SqrtPos: function _SqrtPos(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SqrtLayoutDelegate: function SqrtLayoutDelegate(t0, t1) {
      this.options = t0;
      this.baseOptions = t1;
      this.heightAboveBaseline = 0;
    },
    getSqrtAdvanceWidth_closure: function getSqrtAdvanceWidth_closure(t0, t1) {
      this.options = t0;
      this.minDelimiterHeight = t1;
    },
    sqrtSvg_closure: function sqrtSvg_closure(t0, t1) {
      this.options = t0;
      this.minDelimiterHeight = t1;
    },
    StretchyOpNode: function StretchyOpNode(t0, t1, t2) {
      var _ = this;
      _.symbol = t0;
      _.above = t1;
      _.below = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    StretchyOpNode_buildWidget_closure0: function StretchyOpNode_buildWidget_closure0(t0) {
      this.options = t0;
    },
    StretchyOpNode_buildWidget_closure: function StretchyOpNode_buildWidget_closure(t0, t1) {
      this.$this = t0;
      this.options = t1;
    },
    StyleNode$(children, optionsDiff) {
      return new B.StyleNode(children, optionsDiff);
    },
    StyleNode: function StyleNode(t0, t1) {
      var _ = this;
      _.children = t0;
      _.optionsDiff = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__TransparentNode_rightType_FI = _.__TransparentNode_leftType_FI = _.__TransparentNode_flattenedChildList_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    StyleNode_toJson_closure: function StyleNode_toJson_closure() {
    },
    stringToNode(string, mode) {
      var t1 = type$.MappedListIterable_String_SymbolNode;
      return B.EquationRowNode$(C.List_List$of(new C.MappedListIterable(C._setArrayType(string.split(""), type$.JSArray_String), type$.SymbolNode_Function_String._as(new B.stringToNode_closure(mode)), t1), false, t1._eval$1("ListIterable.E")), null);
    },
    getDefaultAtomTypeForSymbol(symbol, mode, variantForm) {
      var t1, renderConfig,
        symbolRenderConfig = A.Map_LoPS5.$index(0, symbol);
      if (variantForm)
        symbolRenderConfig = symbolRenderConfig == null ? null : symbolRenderConfig.variantForm;
      t1 = mode === A.Mode_0;
      if (t1)
        renderConfig = symbolRenderConfig == null ? null : symbolRenderConfig.math;
      else
        renderConfig = symbolRenderConfig == null ? null : symbolRenderConfig.text;
      if (renderConfig != null) {
        t1 = renderConfig.defaultType;
        return t1 == null ? A.AtomType_0 : t1;
      }
      if (!variantForm && t1) {
        if (A.Map_W7r5a.containsKey$1(0, symbol))
          return A.AtomType_3;
        if (A.Map_uUUqS.containsKey$1(0, symbol)) {
          t1 = $.compactedCompositeSymbolTypes.$index(0, symbol);
          t1.toString;
          return t1;
        }
        if (A.Set_Vj9Rm.contains$1(0, symbol))
          return A.AtomType_3;
      }
      return A.AtomType_0;
    },
    SymbolNode: function SymbolNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.symbol = t0;
      _.variantForm = t1;
      _.__SymbolNode_atomType_FI = $;
      _.overrideAtomType = t2;
      _.overrideFont = t3;
      _.mode = t4;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    SymbolNode_buildWidget_closure: function SymbolNode_buildWidget_closure() {
    },
    stringToNode_closure: function stringToNode_closure(t0) {
      this.mode = t0;
    },
    UnderNode$(base, below) {
      return new B.UnderNode(base, below);
    },
    UnderNode: function UnderNode(t0, t1) {
      var _ = this;
      _.base = t0;
      _.below = t1;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = _.__SlotableNode_children_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    MathOptions$_(color, fontSize, logicalPpi, mathFontOptions, sizeUnderTextStyle, style, textFontOptions) {
      return new B.MathOptions(style, color, sizeUnderTextStyle, textFontOptions, mathFontOptions, fontSize, logicalPpi);
    },
    MathOptions_MathOptions(color, fontSize, logicalPpi, mathFontOptions, sizeUnderTextStyle, style, textFontOptions) {
      var effectiveFontSize;
      if (fontSize == null)
        effectiveFontSize = 22.139200221392002;
      else
        effectiveFontSize = fontSize;
      return B.MathOptions$_(color, effectiveFontSize, effectiveFontSize * 72.27 / 10, mathFontOptions, sizeUnderTextStyle, style, textFontOptions);
    },
    MathOptions: function MathOptions(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.style = t0;
      _.color = t1;
      _.__MathOptions_size_FI = $;
      _.sizeUnderTextStyle = t2;
      _.textFontOptions = t3;
      _.mathFontOptions = t4;
      _.__MathOptions_fontMetrics_FI = _.__MathOptions_sizeMultiplier_FI = $;
      _.fontSize = t5;
      _.logicalPpi = t6;
    },
    OptionsDiff: function OptionsDiff(t0, t1, t2, t3, t4) {
      var _ = this;
      _.style = t0;
      _.size = t1;
      _.color = t2;
      _.textFontOptions = t3;
      _.mathFontOptions = t4;
    },
    FontOptions: function FontOptions(t0, t1, t2, t3) {
      var _ = this;
      _.fontFamily = t0;
      _.fontWeight = t1;
      _.fontShape = t2;
      _.fallback = t3;
    },
    PartialFontOptions: function PartialFontOptions(t0, t1, t2) {
      this.fontFamily = t0;
      this.fontWeight = t1;
      this.fontShape = t2;
    },
    MeasurementExtOnNum_get_mu(_this) {
      return new B.Measurement(_this, A.Unit_14);
    },
    Unit: function Unit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Measurement: function Measurement(t0, t1) {
      this.value = t0;
      this.unit = t1;
    },
    MathSize: function MathSize(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MathStyleExt_reduce(_this, diff) {
      var t2,
        t1 = diff.index;
      if (!(t1 < 7))
        return C.ioore(A.List_9iU, t1);
      t1 = A.List_9iU[t1];
      t2 = _this.index;
      if (!(t2 < 8))
        return C.ioore(t1, t2);
      t2 = t1[t2];
      if (!(t2 < 8))
        return C.ioore(A.List_c06, t2);
      t2 = A.List_c06[t2];
      return t2;
    },
    MathStyleExtOnSize_underStyle(_this, style) {
      var t2,
        t1 = style.index;
      if (t1 <= 3)
        return _this;
      t2 = _this.index;
      if (!(t2 < 11))
        return C.ioore(A.List_VdS, t2);
      t2 = A.List_VdS[t2];
      t1 = (t1 / 2 | 0) - 1;
      if (!(t1 >= 0 && t1 < 3))
        return C.ioore(t2, t1);
      t1 = t2[t1] - 1;
      if (!(t1 >= 0 && t1 < 11))
        return C.ioore(A.List_1HU, t1);
      return A.List_1HU[t1];
    },
    MathStyle: function MathStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    MathStyleDiff: function MathStyleDiff(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SymbolRenderConfig: function SymbolRenderConfig(t0, t1, t2) {
      this.math = t0;
      this.text = t1;
      this.variantForm = t2;
    },
    RenderConfig: function RenderConfig(t0, t1, t2) {
      this.replaceChar = t0;
      this.defaultFont = t1;
      this.defaultType = t2;
    },
    SyntaxNode$($parent, pos, value) {
      return new B.SyntaxNode(value, pos);
    },
    EquationRowNode$(children, overrideType) {
      return new B.EquationRowNode(overrideType, children, A.TextRange_0_m1);
    },
    GreenNodeWrappingExt_wrapWithEquationRow(_this) {
      if (_this instanceof B.EquationRowNode)
        return _this;
      return B.EquationRowNode$(C._setArrayType([_this], type$.JSArray_GreenNode), null);
    },
    GreenNodeWrappingExt_expandEquationRow(_this) {
      if (_this instanceof B.EquationRowNode)
        return _this.children;
      return C._setArrayType([_this], type$.JSArray_GreenNode);
    },
    GreenNodeListWrappingExt_wrapWithEquationRow(_this) {
      var t1 = J.getInterceptor$asx(_this);
      if (t1.get$length(_this) === 1 && t1.$index(_this, 0) instanceof B.EquationRowNode)
        return type$.EquationRowNode._as(t1.$index(_this, 0));
      return B.EquationRowNode$(_this, null);
    },
    _traverseNonSpaceNodes(childTypeList, callback) {
      var t1, prev, _i, child;
      for (t1 = childTypeList.length, prev = null, _i = 0; _i < t1; ++_i) {
        child = childTypeList[_i];
        if (child.leftType === A.AtomType_8 || child.rightType === A.AtomType_8)
          continue;
        callback.call$2(prev, child);
        prev = child;
      }
      if (prev != null)
        callback.call$2(prev, null);
    },
    SyntaxTree: function SyntaxTree(t0) {
      this.greenRoot = t0;
      this.__SyntaxTree_root_FI = $;
    },
    SyntaxNode: function SyntaxNode(t0, t1) {
      this.value = t0;
      this.pos = t1;
      this.__SyntaxNode_children_FI = $;
    },
    GreenNode: function GreenNode() {
    },
    ParentableNode: function ParentableNode() {
    },
    PositionDependentMixin: function PositionDependentMixin() {
    },
    SlotableNode: function SlotableNode() {
    },
    SlotableNode_computeWidth_closure: function SlotableNode_computeWidth_closure(t0) {
      this.$this = t0;
    },
    TransparentNode: function TransparentNode() {
    },
    TransparentNode_computeWidth_closure: function TransparentNode_computeWidth_closure() {
    },
    TransparentNode_computeChildPositions_closure: function TransparentNode_computeChildPositions_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    TransparentNode_buildWidget_closure: function TransparentNode_buildWidget_closure() {
    },
    TransparentNode_flattenedChildList_closure: function TransparentNode_flattenedChildList_closure() {
    },
    EquationRowNode: function EquationRowNode(t0, t1, t2) {
      var _ = this;
      _.overrideType = t0;
      _.children = t1;
      _._syntax_tree$_key = null;
      _.__EquationRowNode_caretPositions_FI = _.__EquationRowNode_flattenedChildList_FI = $;
      _.PositionDependentMixin_range = t2;
      _.__ParentableNode_childPositions_FI = _.__ParentableNode_editingWidth_FI = $;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    EquationRowNode_computeWidth_closure: function EquationRowNode_computeWidth_closure() {
    },
    EquationRowNode_computeChildPositions_closure: function EquationRowNode_computeChildPositions_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    EquationRowNode_flattenedChildList_closure: function EquationRowNode_flattenedChildList_closure() {
    },
    EquationRowNode_computeCaretPositions_closure: function EquationRowNode_computeCaretPositions_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    EquationRowNode_buildWidget_closure: function EquationRowNode_buildWidget_closure() {
    },
    EquationRowNode_buildWidget_closure0: function EquationRowNode_buildWidget_closure0() {
    },
    EquationRowNode_buildWidget_closure1: function EquationRowNode_buildWidget_closure1(t0, t1) {
      this.$this = t0;
      this.flattenedChildOptions = t1;
    },
    EquationRowNode_buildWidget_closure2: function EquationRowNode_buildWidget_closure2() {
    },
    EquationRowNode_buildWidget_closure3: function EquationRowNode_buildWidget_closure3() {
    },
    EquationRowNode_buildWidget_closure4: function EquationRowNode_buildWidget_closure4(t0, t1, t2) {
      this.$this = t0;
      this.lineChildren = t1;
      this.options = t2;
    },
    EquationRowNode_buildWidget__closure1: function EquationRowNode_buildWidget__closure1() {
    },
    EquationRowNode_buildWidget__closure2: function EquationRowNode_buildWidget__closure2(t0) {
      this.$this = t0;
    },
    EquationRowNode_buildWidget__closure0: function EquationRowNode_buildWidget__closure0(t0) {
      this.$this = t0;
    },
    EquationRowNode_buildWidget__closure: function EquationRowNode_buildWidget__closure(t0, t1, t2) {
      this.$this = t0;
      this.lineChildren = t1;
      this.options = t2;
    },
    EquationRowNode_toJson_closure: function EquationRowNode_toJson_closure() {
    },
    _ClipChildrenMixin: function _ClipChildrenMixin() {
    },
    LeafNode: function LeafNode() {
    },
    AtomType: function AtomType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TemporaryNode: function TemporaryNode() {
    },
    BuildResult: function BuildResult(t0, t1, t2, t3, t4) {
      var _ = this;
      _.widget = t0;
      _.options = t1;
      _.italic = t2;
      _.skew = t3;
      _.results = t4;
    },
    _NodeSpacingConf: function _NodeSpacingConf(t0, t1, t2, t3) {
      var _ = this;
      _.leftType = t0;
      _.rightType = t1;
      _.options = t2;
      _.spacingAfter = t3;
    },
    _EquationRowNode_ParentableNode_PositionDependentMixin: function _EquationRowNode_ParentableNode_PositionDependentMixin() {
    },
    _EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin: function _EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin() {
    },
    _TransparentNode_ParentableNode__ClipChildrenMixin: function _TransparentNode_ParentableNode__ClipChildrenMixin() {
    },
    Mode: function Mode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    getCharacterMetrics(character, fontName, mode) {
      var ch, t1, extraCh,
        metricsMapFont = A.Map_uvILB.$index(0, fontName);
      if (metricsMapFont == null)
        throw C.wrapException(C.Exception_Exception("Font metrics not found for font: " + fontName + "."));
      if (0 >= character.length)
        return C.ioore(character, 0);
      ch = character.charCodeAt(0);
      if (metricsMapFont.containsKey$1(0, ch))
        return metricsMapFont.$index(0, ch);
      t1 = A.Map_yfgyh.$index(0, character[0]);
      if (t1 == null)
        extraCh = null;
      else {
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        extraCh = t1.charCodeAt(0);
      }
      if (extraCh != null)
        return metricsMapFont.$index(0, ch);
      if (mode === A.Mode_1 && B.supportedCodepoint(ch))
        return metricsMapFont.$index(0, 77);
      return null;
    },
    getGlobalMetrics(size) {
      switch (size.index) {
        case 0:
        case 1:
          return $.$get$scriptscriptFontMetrics();
        case 2:
        case 3:
          return $.$get$scriptFontMetrics();
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
          return $.$get$textFontMetrics();
        default:
          throw C.wrapException(C.ArgumentError$(size, null));
      }
    },
    textFontMetrics_closure: function textFontMetrics_closure() {
    },
    scriptFontMetrics_closure: function scriptFontMetrics_closure() {
    },
    scriptscriptFontMetrics_closure: function scriptscriptFontMetrics_closure() {
    },
    CharacterMetrics: function CharacterMetrics(t0, t1, t2, t3) {
      var _ = this;
      _.depth = t0;
      _.height = t1;
      _.italic = t2;
      _.skew = t3;
    },
    supportedCodepoint(codepoint) {
      return D.JSArray_methods.any$1($.$get$allBlocks(), new B.supportedCodepoint_closure(codepoint));
    },
    allBlocks_closure: function allBlocks_closure() {
    },
    supportedCodepoint_closure: function supportedCodepoint_closure(t0) {
      this.codepoint = t0;
    },
    environments() {
      if ($._environments.__js_helper$_length === 0)
        $.$get$_environmentsEntries().forEach$1(0, new B.environments_closure());
      return $._environments;
    },
    EnvContext: function EnvContext(t0) {
      this.envName = t0;
    },
    EnvSpec: function EnvSpec(t0) {
      this.handler = t0;
    },
    environments_closure: function environments_closure() {
    },
    _casesHandler(parser, context) {
      var body, t1, t2;
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      body = B.parseEqnArray(parser, false, new B._casesHandler_closure(context));
      t1 = context.envName;
      t1 = t1 === "rcases" || t1 === "drcases";
      t2 = type$.JSArray_EquationRowNode;
      if (t1)
        return B.LeftRightNode$(C._setArrayType([B.GreenNodeWrappingExt_wrapWithEquationRow(body)], t2), null, F.List_empty12, "}");
      else
        return B.LeftRightNode$(C._setArrayType([B.GreenNodeWrappingExt_wrapWithEquationRow(body)], t2), "{", F.List_empty12, null);
    },
    _alignedHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      return B.parseEqnArray(parser, true, new B._alignedHandler_closure());
    },
    _alignedAtHandler(parser, context) {
      var cols;
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      cols = C.Primitives_parseInt(J.map$1$1$ax(B.assertNodeType(parser.parseArgNode$2$mode$optional(null, false), type$.EquationRowNode).children, new B._alignedAtHandler_closure(), type$.String).join$1(0, ""), null);
      if (cols == null)
        throw C.wrapException(B.ParseException$("Invalid argument for environment: alignedat", null));
      return B.parseEqnArray(parser, true, new B._alignedAtHandler_closure0(cols));
    },
    parseEqnArray(parser, addJot, concatRow) {
      var stretch, arrayStretch, row, body, rowGaps, hLinesBeforeRow, t6, t7, cellBody, next, t8, rows, _null = null,
        t1 = parser.macroExpander,
        t2 = t1.macros,
        t3 = t2.undefStack,
        t4 = type$.String,
        t5 = t2.$ti._eval$1("1?");
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t2.$set$2(0, "\\\\", B.MacroDefinition$fromString("\\cr"));
      stretch = t1.expandMacroAsText$1("\\arraystretch");
      if (stretch == null)
        arrayStretch = 1;
      else {
        arrayStretch = C.Primitives_parseDouble(stretch);
        if (arrayStretch == null || arrayStretch < 0)
          throw C.wrapException(B.ParseException$("Invalid \\arraystretch: " + stretch, _null));
      }
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t1 = type$.JSArray_EquationRowNode;
      row = C._setArrayType([], t1);
      body = C._setArrayType([row], type$.JSArray_List_EquationRowNode);
      rowGaps = C._setArrayType([], type$.JSArray_Measurement);
      hLinesBeforeRow = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      t6 = type$.MatrixSeparatorStyle;
      t7 = B.IterableExtension_get_lastOrNull(B.getHLines(parser), t6);
      D.JSArray_methods.add$1(hLinesBeforeRow, t7 == null ? A.MatrixSeparatorStyle_2 : t7);
      for (t7 = type$.CrNode; true;) {
        cellBody = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, "\\cr");
        t2.endGroup$0();
        D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
        D.JSArray_methods.add$1(row, B.GreenNodeListWrappingExt_wrapWithEquationRow(cellBody));
        next = parser.fetch$0(0).text;
        if (next === "&")
          parser.nextToken = null;
        else if (next === "\\end") {
          if (hLinesBeforeRow.length < body.length + 1)
            D.JSArray_methods.add$1(hLinesBeforeRow, A.MatrixSeparatorStyle_2);
          break;
        } else if (next === "\\cr") {
          t8 = B.assertNodeType(parser.parseFunction$3(_null, _null, _null), t7).size;
          D.JSArray_methods.add$1(rowGaps, t8 == null ? A.Measurement_0_Unit_0 : t8);
          t8 = B.IterableExtension_get_lastOrNull(B.getHLines(parser), t6);
          D.JSArray_methods.add$1(hLinesBeforeRow, t8 == null ? A.MatrixSeparatorStyle_2 : t8);
          row = C._setArrayType([], t1);
          D.JSArray_methods.add$1(body, row);
        } else
          throw C.wrapException(B.ParseException$("Expected & or \\\\ or \\cr or \\end", parser.nextToken));
      }
      t2.endGroup$0();
      t2.endGroup$0();
      t1 = type$.MappedListIterable_of_List_EquationRowNode_and_EquationRowNode;
      rows = C.List_List$of(new C.MappedListIterable(body, type$.EquationRowNode_Function_List_EquationRowNode._as(concatRow), t1), true, t1._eval$1("ListIterable.E"));
      t1 = rows.length;
      t6 = B.ListExtension_extendToByFill(hLinesBeforeRow, t1 + 1, A.MatrixSeparatorStyle_2, t6);
      return new B.EquationArrayNode(arrayStretch, addJot, rows, t6, B.ListExtension_extendToByFill(rowGaps, t1, A.Measurement_0_Unit_0, type$.Measurement));
    },
    _casesHandler_closure: function _casesHandler_closure(t0) {
      this.context = t0;
    },
    _alignedHandler_closure: function _alignedHandler_closure() {
    },
    _alignedHandler__closure: function _alignedHandler__closure() {
    },
    _alignedAtHandler_closure: function _alignedAtHandler_closure() {
    },
    _alignedAtHandler_closure0: function _alignedAtHandler_closure0(t0) {
      this.cols = t0;
    },
    _alignedAtHandler__closure: function _alignedAtHandler__closure() {
    },
    RegisterFunctionExt_registerFunctions(_this, entries) {
      entries.forEach$1(0, new B.RegisterFunctionExt_registerFunctions_closure(_this));
    },
    FunctionContext: function FunctionContext(t0, t1, t2) {
      this.funcName = t0;
      this.breakOnTokenText = t1;
      this.infixExistingArguments = t2;
    },
    FunctionSpec: function FunctionSpec(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.greediness = t0;
      _.allowedInText = t1;
      _.allowedInMath = t2;
      _.infix = t3;
      _.handler = t4;
      _.$ti = t5;
    },
    RegisterFunctionExt_registerFunctions_closure: function RegisterFunctionExt_registerFunctions_closure(t0) {
      this._this = t0;
    },
    _accentHandler(parser, context) {
      var t1, t2, isStretchy, isShifty;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      t2 = context.funcName;
      isStretchy = !A.Set_H6XGa.contains$1(0, t2);
      isShifty = !isStretchy || A.Set_hM5f1.contains$1(0, t2);
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = A.Map_mBRlU.$index(0, t2);
      t2.toString;
      return B.AccentNode$(t1, isShifty, isStretchy, t2);
    },
    _textAccentHandler(parser, context) {
      var t1, t2, node;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      if (t1 instanceof B.SymbolNode) {
        t2 = A.Map_qW5F6.$index(0, context.funcName);
        t2.toString;
        return t1.withSymbol$1(t1.symbol + t2);
      }
      if (t1 instanceof B.EquationRowNode && J.get$length$asx(t1.children) === 1) {
        node = J.$index$asx(t1.children, 0);
        if (node instanceof B.SymbolNode) {
          t1 = A.Map_qW5F6.$index(0, context.funcName);
          t1.toString;
          return node.withSymbol$1(node.symbol + t1);
        }
      }
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = A.Map_mBRlU.$index(0, context.funcName);
      t2.toString;
      return B.AccentNode$(t1, true, false, t2);
    },
    _accentUnderHandler(parser, context) {
      var t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = A.Map_ROG3o.$index(0, context.funcName);
      t2.toString;
      return B.AccentUnderNode$(t1, t2);
    },
    _throwExceptionHandler(parser, context) {
      type$.TexParser._as(parser);
      throw C.wrapException(B.ParseException$(type$.FunctionContext._as(context).funcName + " valid only within array environment", null));
    },
    _arrowHandler(parser, context) {
      var below, t1, t2, t3, t4;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      below = parser.parseArgNode$2$mode$optional(null, true);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t2 = below == null ? null : B.GreenNodeWrappingExt_wrapWithEquationRow(below);
      t3 = context.funcName;
      t4 = A.Map_i9JgH.$index(0, t3);
      return new B.StretchyOpNode(t4 == null ? t3 : t4, t1, t2);
    },
    _breakHandler(parser, context) {
      var t1;
      type$.TexParser._as(parser);
      t1 = type$.FunctionContext._as(context).funcName === "\\nobreak" ? 10000 : 0;
      return B.SpaceNode$(t1, false, A.Measurement_0_Unit_0, parser.mode, A.Measurement_0_Unit_0, A.Measurement_0_Unit_0);
    },
    _charHandler(parser, context) {
      var number, code, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      number = J.map$1$1$ax(B.assertNodeType(parser.parseArgNode$2$mode$optional(_null, false), type$.EquationRowNode).children, new B._charHandler_closure(), type$.String).join$1(0, "");
      code = C.Primitives_parseInt(number, _null);
      if (code == null)
        throw C.wrapException(B.ParseException$("\\@char has non-numeric argument " + number, _null));
      return new B.SymbolNode(C.Primitives_stringFromCharCode(code), false, A.AtomType_0, _null, parser.mode);
    },
    _textcolorHandler(parser, context) {
      var t1, t2, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgColor$1$optional(false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(_null, false);
      t2.toString;
      return B.StyleNode$(B.GreenNodeWrappingExt_expandEquationRow(t2), new B.OptionsDiff(_null, _null, t1, _null, _null));
    },
    _colorHandler(parser, context) {
      var color, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      color = parser.parseArgColor$1$optional(false);
      return B.StyleNode$(parser.parseExpression$2$breakOnInfix$breakOnTokenText(true, context.breakOnTokenText), new B.OptionsDiff(_null, _null, color, _null, _null));
    },
    _crHandler(parser, context) {
      var size;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      size = parser.parseArgSize$1$optional(true);
      return new B.CrNode(size);
    },
    _checkDelimiter(delim, context) {
      var t1;
      if (delim instanceof B.SymbolNode)
        if (D.JSArray_methods.any$1($.$get$_delimiterSymbols(), new B._checkDelimiter_closure(delim))) {
          t1 = delim.symbol;
          if (t1 === "<" || t1 === "lt")
            return "\u27e8";
          else if (t1 === ">" || t1 === "gt")
            return "\u27e9";
          else if (t1 === ".")
            return null;
          else
            return t1;
        } else
          throw C.wrapException(B.ParseException$("Invalid delimiter '" + delim.symbol + "' after '" + context.funcName + "'", null));
      else
        throw C.wrapException(B.ParseException$("Invalid delimiter type '" + C.getRuntimeTypeOfDartObject(delim).toString$0(0) + "'", null));
    },
    _delimSizeHandler(parser, context) {
      var t1, delim;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      delim = B._checkDelimiter(t1, context);
      if (delim == null)
        t1 = B.SpaceNode$(null, false, A.Measurement_0_Unit_0, A.Mode_0, A.Measurement_0_Unit_0, A.Measurement_0_Unit_0);
      else {
        t1 = context.funcName;
        t1 = new B.SymbolNode(delim, false, A.Map_PP6Nv.$index(0, t1), new B.FontOptions("Size" + C.S(A.Map_PPymm.$index(0, t1)), F.FontWeight_3, D.FontStyle_0, A.List_empty22), A.Mode_0);
      }
      return t1;
    },
    _rightHandler(parser, context) {
      var t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      return new B._LeftRightRightNode(B._checkDelimiter(t1, context));
    },
    _leftHandler(parser, context) {
      var t1, delim, body, right, splittedBody, middles, t2, _i, element, t3, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      delim = B._checkDelimiter(t1, context);
      ++parser.leftrightDepth;
      body = parser.parseExpression$1$breakOnInfix(false);
      --parser.leftrightDepth;
      parser.expect$2$consume("\\right", false);
      right = B.assertNodeType(parser.parseFunction$3(_null, _null, _null), type$._LeftRightRightNode);
      t1 = type$.JSArray_GreenNode;
      splittedBody = C._setArrayType([C._setArrayType([], t1)], type$.JSArray_List_GreenNode);
      middles = C._setArrayType([], type$.JSArray_nullable_String);
      for (t2 = body.length, _i = 0; _i < body.length; body.length === t2 || (0, C.throwConcurrentModificationError)(body), ++_i) {
        element = body[_i];
        if (element instanceof B._MiddleNode) {
          D.JSArray_methods.add$1(splittedBody, C._setArrayType([], t1));
          t3 = element.delim;
          D.JSArray_methods.add$1(middles, t3 === "." ? _null : t3);
        } else
          D.JSArray_methods.add$1(D.JSArray_methods.get$last(splittedBody), element);
      }
      t1 = delim === "." ? _null : delim;
      t2 = right.delim;
      if (t2 === ".")
        t2 = _null;
      t3 = type$.MappedListIterable_of_List_GreenNode_and_EquationRowNode;
      return B.LeftRightNode$(C.List_List$of(new C.MappedListIterable(splittedBody, type$.EquationRowNode_Function_List_GreenNode._as(new B._leftHandler_closure()), t3), false, t3._eval$1("ListIterable.E")), t1, middles, t2);
    },
    _middleHandler(parser, context) {
      var t1, delim, contexts, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      delim = B._checkDelimiter(t1, context);
      if (parser.leftrightDepth <= 0)
        throw C.wrapException(B.ParseException$("\\middle without preceding \\left", null));
      contexts = parser.argParsingContexts.toList$1$growable(0, false);
      t1 = contexts.length;
      t2 = t1 - 2;
      if (!(t2 >= 0))
        return C.ioore(contexts, t2);
      if (contexts[t2].funcName !== "\\left")
        throw C.wrapException(B.ParseException$("\\middle must be within \\left and \\right", null));
      return new B._MiddleNode(delim);
    },
    _colorboxHandler(parser, context) {
      var color, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      color = parser.parseArgColor$1$optional(false);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_1, false);
      t1.toString;
      return B.EnclosureNode$(color, B.GreenNodeWrappingExt_wrapWithEquationRow(t1), null, false, new B.Measurement(0.3, A.Unit_16), D.List_empty, new B.Measurement(0.3, A.Unit_16));
    },
    _fcolorboxHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgColor$1$optional(false);
      t1.toString;
      t2 = parser.parseArgColor$1$optional(false);
      t2.toString;
      t3 = parser.parseArgNode$2$mode$optional(A.Mode_1, false);
      t3.toString;
      return B.EnclosureNode$(t2, B.GreenNodeWrappingExt_wrapWithEquationRow(t3), t1, true, new B.Measurement(0.3, A.Unit_16), D.List_empty, new B.Measurement(0.3, A.Unit_16));
    },
    _fboxHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return B.EnclosureNode$(null, B.GreenNodeWrappingExt_wrapWithEquationRow(parser.parseArgHbox$1$optional(false)), null, true, new B.Measurement(0.3, A.Unit_16), D.List_empty, new B.Measurement(0.3, A.Unit_16));
    },
    _cancelHandler(parser, context) {
      var t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = A.Map_MxbnW.$index(0, context.funcName);
      t2.toString;
      return B.EnclosureNode$(null, B.GreenNodeWrappingExt_wrapWithEquationRow(t1), null, false, new B.Measurement(0.2, A.Unit_16), t2, new B.Measurement(0.2, A.Unit_16));
    },
    _enviromentHandler(parser, context) {
      var nameGroup, envName, result, endNameToken, t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      nameGroup = parser.parseArgNode$2$mode$optional(A.Mode_1, false);
      if (J.any$1$ax(nameGroup.get$children(nameGroup), new B._enviromentHandler_closure()))
        throw C.wrapException(B.ParseException$("Invalid environment name", _null));
      envName = J.map$1$1$ax(nameGroup.get$children(nameGroup), new B._enviromentHandler_closure0(), type$.String).join$0(0);
      if (context.funcName === "\\begin") {
        if (!B.environments().containsKey$1(0, envName))
          throw C.wrapException(B.ParseException$("No such environment: " + envName, _null));
        result = B.environments().$index(0, envName).handler.call$2(parser, new B.EnvContext(envName));
        parser.expect$2$consume("\\end", false);
        endNameToken = parser.nextToken;
        t1 = B.assertNodeType(parser.parseFunction$3(_null, _null, _null), type$._EndEnvironmentNode).name;
        if (t1 !== envName)
          throw C.wrapException(B.ParseException$("Mismatch: \\begin{" + envName + "} matched by \\end{" + t1 + "}", endNameToken));
        return result;
      } else
        return new B._EndEnvironmentNode(envName);
    },
    _fontHandler(parser, context) {
      var t1, func, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(_null, false);
      t1.toString;
      func = context.funcName;
      if (A.Map_qsqNW.containsKey$1(0, func))
        func = A.Map_qsqNW.$index(0, func);
      return B.StyleNode$(B.GreenNodeWrappingExt_expandEquationRow(t1), new B.OptionsDiff(_null, _null, _null, _null, A.Map_0eATf.$index(0, func)));
    },
    _boldSymbolHandler(parser, context) {
      var t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(_null, false);
      t1.toString;
      return B.StyleNode$(B.GreenNodeWrappingExt_expandEquationRow(t1), new B.OptionsDiff(_null, _null, _null, _null, A.FontOptions_eIp));
    },
    _textFontHandler(parser, context) {
      var _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return B.StyleNode$(parser.parseExpression$2$breakOnInfix$breakOnTokenText(true, context.breakOnTokenText), new B.OptionsDiff(_null, _null, _null, _null, A.Map_0eATf.$index(0, "\\math" + D.JSString_methods.substring$1(context.funcName, 1))));
    },
    _fracHandler(parser, context) {
      var t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(null, false);
      t2.toString;
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      return B._internalFracHandler(B.GreenNodeWrappingExt_wrapWithEquationRow(t2), context.funcName, t1);
    },
    _internalFracHandler(denom, funcName, numer) {
      var size, t1, res, _null = null,
        hasBarLine = false,
        leftDelim = _null,
        rightDelim = _null;
      switch (funcName) {
        case "\\cfrac":
        case "\\dfrac":
        case "\\frac":
        case "\\tfrac":
          hasBarLine = true;
          break;
        case "\\\\atopfrac":
          break;
        case "\\dbinom":
        case "\\binom":
        case "\\tbinom":
          leftDelim = "(";
          rightDelim = ")";
          break;
        case "\\\\bracefrac":
          leftDelim = "{";
          rightDelim = "}";
          break;
        case "\\\\brackfrac":
          leftDelim = "[";
          rightDelim = "]";
          break;
        default:
          throw C.wrapException(B.ParseException$("Unrecognized genfrac command", _null));
      }
      switch (funcName) {
        case "\\cfrac":
        case "\\dfrac":
        case "\\dbinom":
          size = A.MathStyle_0;
          break;
        case "\\tfrac":
        case "\\tbinom":
          size = A.MathStyle_2;
          break;
        default:
          size = _null;
      }
      t1 = hasBarLine ? _null : A.Measurement_0_Unit_0;
      res = B.FracNode$(t1, funcName === "\\cfrac", denom, numer);
      if (leftDelim != null || rightDelim != null)
        res = B.LeftRightNode$(C._setArrayType([B.GreenNodeWrappingExt_wrapWithEquationRow(res)], type$.JSArray_EquationRowNode), leftDelim, F.List_empty12, rightDelim);
      return size != null ? B.StyleNode$(C._setArrayType([res], type$.JSArray_GreenNode), new B.OptionsDiff(size, _null, _null, _null, _null)) : res;
    },
    _overHandler(parser, context) {
      var replaceWith, denomBody, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      switch (context.funcName) {
        case "\\over":
          replaceWith = "\\frac";
          break;
        case "\\choose":
          replaceWith = "\\binom";
          break;
        case "\\atop":
          replaceWith = "\\\\atopfrac";
          break;
        case "\\brace":
          replaceWith = "\\\\bracefrac";
          break;
        case "\\brack":
          replaceWith = "\\\\brackfrac";
          break;
        default:
          throw C.wrapException(C.ArgumentError$("Unrecognized infix genfrac command", null));
      }
      denomBody = parser.parseExpression$2$breakOnTokenText$infixArgumentMode(context.breakOnTokenText, true);
      t1 = B.GreenNodeListWrappingExt_wrapWithEquationRow(context.infixExistingArguments);
      return B._internalFracHandler(B.GreenNodeListWrappingExt_wrapWithEquationRow(denomBody), replaceWith, t1);
    },
    _genfracHandler(parser, context) {
      var t1, t2, t3, t4, t5, t6, t7, leftDelimNode, rightDelimNode, leftDelim, rightDelim, style, res, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t2.toString;
      t3 = parser.parseArgSize$1$optional(false);
      t3.toString;
      t4 = parser.parseArgNode$2$mode$optional(A.Mode_1, false);
      t4.toString;
      t5 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t5.toString;
      t6 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t6.toString;
      if (t1 instanceof B.EquationRowNode) {
        t1 = t1.children;
        t7 = J.getInterceptor$asx(t1);
        leftDelimNode = t7.get$length(t1) === 1 ? t7.get$first(t1) : _null;
      } else
        leftDelimNode = t1;
      if (t2 instanceof B.EquationRowNode) {
        t1 = t2.children;
        t2 = J.getInterceptor$asx(t1);
        rightDelimNode = t2.get$length(t1) === 1 ? t2.get$first(t1) : _null;
      } else
        rightDelimNode = t2;
      leftDelim = leftDelimNode instanceof B.SymbolNode && leftDelimNode.get$atomType() === A.AtomType_4 ? leftDelimNode.symbol : _null;
      rightDelim = rightDelimNode instanceof B.SymbolNode && rightDelimNode.get$atomType() === A.AtomType_5 ? rightDelimNode.symbol : _null;
      style = J.get$isNotEmpty$asx(B.GreenNodeWrappingExt_expandEquationRow(t4)) ? C.Primitives_parseInt(B.assertNodeType(J.$index$asx(B.GreenNodeWrappingExt_expandEquationRow(t4), 0), type$.SymbolNode).symbol, _null) : _null;
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t5);
      res = B.FracNode$(t3, false, B.GreenNodeWrappingExt_wrapWithEquationRow(t6), t1);
      if (leftDelim != null || rightDelim != null)
        res = B.LeftRightNode$(C._setArrayType([B.GreenNodeWrappingExt_wrapWithEquationRow(res)], type$.JSArray_EquationRowNode), leftDelim, F.List_empty12, rightDelim);
      if (style != null) {
        t1 = C._setArrayType([res], type$.JSArray_GreenNode);
        t2 = D.JSNumber_methods.toInt$0(D.JSInt_methods.clamp$2(style * 2, 0, 6));
        if (!(t2 >= 0 && t2 < 8))
          return C.ioore(A.List_c06, t2);
        res = B.StyleNode$(t1, new B.OptionsDiff(A.List_c06[t2], _null, _null, _null, _null));
      }
      return res;
    },
    _aboveHandler(parser, context) {
      var barSize, denomBody, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      barSize = parser.parseArgSize$1$optional(false);
      denomBody = parser.parseExpression$2$breakOnTokenText$infixArgumentMode(context.breakOnTokenText, true);
      t1 = B.GreenNodeListWrappingExt_wrapWithEquationRow(context.infixExistingArguments);
      return B.FracNode$(barSize, false, B.GreenNodeListWrappingExt_wrapWithEquationRow(denomBody), t1);
    },
    _aboveFracHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t1.toString;
      t2 = parser.parseArgSize$1$optional(false);
      t2.toString;
      t3 = parser.parseArgNode$2$mode$optional(A.Mode_0, false);
      t3.toString;
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      return B.FracNode$(t2, false, B.GreenNodeWrappingExt_wrapWithEquationRow(t3), t1);
    },
    _horizBraceHandler(parser, context) {
      var t1, scripts, res;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      scripts = parser.parseScripts$0();
      if (context.funcName === "\\overbrace") {
        res = B.AccentNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(t1), false, true, "\u23de");
        t1 = scripts.superscript;
        if (t1 != null)
          res = B.OverNode$(t1, B.GreenNodeWrappingExt_wrapWithEquationRow(res), false);
        t1 = scripts.subscript;
        return t1 != null ? B.UnderNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(res), t1) : res;
      } else {
        res = B.AccentUnderNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(t1), "\u23df");
        t1 = scripts.subscript;
        if (t1 != null)
          res = B.UnderNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(res), t1);
        t1 = scripts.superscript;
        return t1 != null ? B.OverNode$(t1, B.GreenNodeWrappingExt_wrapWithEquationRow(res), false) : res;
      }
    },
    _kernHandler(parser, context) {
      var size, t1, t2, muUnit,
        _s15_ = "mathVsTextUnits";
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      size = parser.parseArgSize$1$optional(false);
      if (size == null)
        size = A.Measurement_0_Unit_0;
      t1 = context.funcName;
      if (1 >= t1.length)
        return C.ioore(t1, 1);
      t2 = size.unit;
      muUnit = t2 === A.Unit_14;
      if (t1[1] === "m") {
        if (!muUnit)
          parser.settings.reportNonstrict$2(_s15_, "LaTeX's " + t1 + " supports only mu units, not " + t2.toString$0(0) + " units");
        if (parser.mode !== A.Mode_0)
          parser.settings.reportNonstrict$2(_s15_, "LaTeX's " + t1 + " works only in math mode");
      } else if (muUnit)
        parser.settings.reportNonstrict$2(_s15_, "LaTeX's " + t1 + " doesn't support mu units");
      return B.SpaceNode$(null, false, A.Measurement_0_Unit_0, parser.mode, A.Measurement_0_Unit_0, size);
    },
    _mathLeftHandler(parser, context) {
      var outerMode, t1, $close, body, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      outerMode = parser.mode;
      parser.mode = A.Mode_0;
      t1 = parser.macroExpander;
      t1.mode = A.Mode_0;
      $close = context.funcName === "\\(" ? "\\)" : "$";
      body = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, $close);
      parser.expect$1($close);
      t1.mode = parser.mode = outerMode;
      return B.StyleNode$(body, new B.OptionsDiff(A.MathStyle_2, _null, _null, _null, _null));
    },
    _mathRightHandler(parser, context) {
      type$.TexParser._as(parser);
      throw C.wrapException(B.ParseException$("Mismatched " + type$.FunctionContext._as(context).funcName, null));
    },
    _mclassHandler(parser, context) {
      var t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      return B.EquationRowNode$(B.GreenNodeWrappingExt_expandEquationRow(t1), A.Map_ZC8v1.$index(0, context.funcName));
    },
    _parseNaryOperator(command, parser, context) {
      var t2,
        scriptsResult = parser.parseScripts$1$allowLimits(true),
        t1 = parser.parseAtom$1(context.breakOnTokenText),
        arg = t1 == null ? null : B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      t1 = A.Map_MYH09.$index(0, command).symbol;
      t2 = arg == null ? B.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), null) : arg;
      return new B.NaryOperatorNode(t1, scriptsResult.subscript, scriptsResult.superscript, t2, scriptsResult.limits, command !== "\\smallint");
    },
    _parseMathFunction(funcNameBase, parser, context, defaultLimits) {
      var limits, base, t2, functionName,
        scriptsResult = parser.parseScripts$1$allowLimits(true),
        t1 = parser.parseAtom$1(context.breakOnTokenText),
        arg = t1 == null ? null : B.GreenNodeWrappingExt_wrapWithEquationRow(t1);
      if (arg == null)
        arg = B.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), null);
      limits = scriptsResult.limits;
      if (limits == null)
        limits = defaultLimits;
      base = B.GreenNodeWrappingExt_wrapWithEquationRow(funcNameBase);
      t1 = scriptsResult.subscript;
      t2 = t1 == null;
      if (t2 && scriptsResult.superscript == null)
        return B.FunctionNode$(arg, base);
      if (limits) {
        functionName = !t2 ? B.GreenNodeWrappingExt_wrapWithEquationRow(B.UnderNode$(base, t1)) : base;
        t1 = scriptsResult.superscript;
        return B.FunctionNode$(arg, B.GreenNodeWrappingExt_wrapWithEquationRow(t1 != null ? B.GreenNodeWrappingExt_wrapWithEquationRow(B.OverNode$(t1, functionName, false)) : functionName));
      } else
        return B.FunctionNode$(arg, B.GreenNodeWrappingExt_wrapWithEquationRow(B.MultiscriptsNode$(base, t1, scriptsResult.superscript)));
    },
    _bigOpHandler(parser, context) {
      var fName, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      fName = context.funcName;
      if (fName.length === 1) {
        t1 = A.Map_xHZD8.$index(0, fName);
        t1.toString;
        fName = t1;
      }
      return B._parseNaryOperator(fName, parser, context);
    },
    _mathFunctionHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return B._parseMathFunction(B.stringToNode(D.JSString_methods.substring$1(context.funcName, 1), A.Mode_1), parser, context, false);
    },
    _mathLimitsHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return B._parseMathFunction(B.stringToNode(D.JSString_methods.substring$1(context.funcName, 1), A.Mode_1), parser, context, true);
    },
    _integralHandler(parser, context) {
      var fName, t1;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      fName = context.funcName;
      if (fName.length === 1) {
        t1 = A.Map_zBg4B.$index(0, fName);
        t1.toString;
        fName = t1;
      }
      return B._parseNaryOperator(fName, parser, context);
    },
    _operatorNameHandler(parser, context) {
      var t1, t2, scripts, body, $name, t3, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(_null, false);
      t1.toString;
      t2 = context.funcName;
      scripts = parser.parseScripts$1$allowLimits(t2 === "\\operatorname*");
      body = parser.parseGroup$5$consumeSpaces$greediness$mode$optional(t2, true, 1, _null, false);
      if (body == null)
        body = B.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null);
      $name = B.StyleNode$(B.GreenNodeWrappingExt_expandEquationRow(t1), new B.OptionsDiff(_null, _null, _null, _null, A.FontOptions_25d));
      t1 = scripts.subscript;
      t2 = t1 == null;
      if (!(t2 && scripts.superscript == null))
        if (scripts.limits === true) {
          t3 = scripts.superscript;
          if (t3 != null)
            $name = B.OverNode$(t3, B.GreenNodeWrappingExt_wrapWithEquationRow($name), false);
          if (!t2)
            $name = B.UnderNode$(B.GreenNodeWrappingExt_wrapWithEquationRow($name), t1);
        } else
          $name = B.MultiscriptsNode$(B.GreenNodeWrappingExt_wrapWithEquationRow($name), t1, scripts.superscript);
      t1 = B.GreenNodeWrappingExt_wrapWithEquationRow($name);
      return B.FunctionNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(body), t1);
    },
    _phantomHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = context.funcName;
      t3 = t2 === "\\hphantom";
      return new B.PhantomNode(B.GreenNodeWrappingExt_wrapWithEquationRow(t1), t2 === "\\vphantom", t3, t3);
    },
    _raiseBoxHandler(parser, context) {
      var dy;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      dy = parser.parseArgSize$1$optional(false);
      if (dy == null)
        dy = A.Measurement_0_Unit_0;
      return new B.RaiseBoxNode(B.GreenNodeWrappingExt_wrapWithEquationRow(parser.parseArgHbox$1$optional(false)), dy);
    },
    _ruleHandler(parser, context) {
      var shift, width, height;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      shift = parser.parseArgSize$1$optional(true);
      if (shift == null)
        shift = A.Measurement_0_Unit_0;
      width = parser.parseArgSize$1$optional(false);
      if (width == null)
        width = A.Measurement_0_Unit_0;
      height = parser.parseArgSize$1$optional(false);
      return B.SpaceNode$(null, true, height == null ? A.Measurement_0_Unit_0 : height, A.Mode_0, shift, width);
    },
    _sizingHandler(parser, context) {
      var body, t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      body = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, context.breakOnTokenText);
      t1 = D.JSArray_methods.indexOf$1(A.List_RJL, context.funcName);
      if (!(t1 >= 0 && t1 < 11))
        return C.ioore(A.List_1HU, t1);
      return B.StyleNode$(body, new B.OptionsDiff(_null, A.List_1HU[t1], _null, _null, _null));
    },
    _sqrtHandler(parser, context) {
      var index, t1, t2;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      index = parser.parseArgNode$2$mode$optional(null, true);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = index == null ? null : B.GreenNodeWrappingExt_wrapWithEquationRow(index);
      return new B.SqrtNode(t2, B.GreenNodeWrappingExt_wrapWithEquationRow(t1));
    },
    _stylingHandler(parser, context) {
      var t1, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = context.funcName;
      return B.StyleNode$(parser.parseExpression$2$breakOnInfix$breakOnTokenText(true, context.breakOnTokenText), new B.OptionsDiff(A.Map_MRjU2.$index(0, D.JSString_methods.substring$2(t1, 1, t1.length - 5)), _null, _null, _null, _null));
    },
    _textHandler(parser, context) {
      var t1, fontOptions, _null = null;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(A.Mode_1, false);
      t1.toString;
      fontOptions = A.Map_sP8MA.$index(0, context.funcName);
      if (fontOptions == null)
        return t1;
      return B.StyleNode$(B.GreenNodeWrappingExt_expandEquationRow(t1), new B.OptionsDiff(_null, _null, _null, fontOptions, _null));
    },
    _underOverHandler(parser, context) {
      var t1, t2, t3;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      t2 = parser.parseArgNode$2$mode$optional(null, false);
      t2.toString;
      t3 = context.funcName;
      if (t3 === "\\underset")
        return B.UnderNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(t2), B.GreenNodeWrappingExt_wrapWithEquationRow(t1));
      else {
        t2 = B.GreenNodeWrappingExt_wrapWithEquationRow(t2);
        return B.OverNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(t1), t2, t3 === "\\stackrel");
      }
    },
    _charHandler_closure: function _charHandler_closure() {
    },
    CrNode: function CrNode(t0) {
      var _ = this;
      _.size = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _delimiterSymbols_closure: function _delimiterSymbols_closure() {
    },
    _checkDelimiter_closure: function _checkDelimiter_closure(t0) {
      this.delim = t0;
    },
    _LeftRightRightNode: function _LeftRightRightNode(t0) {
      var _ = this;
      _.delim = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _leftHandler_closure: function _leftHandler_closure() {
    },
    _MiddleNode: function _MiddleNode(t0) {
      var _ = this;
      _.delim = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    _enviromentHandler_closure: function _enviromentHandler_closure() {
    },
    _enviromentHandler_closure0: function _enviromentHandler_closure0() {
    },
    _EndEnvironmentNode: function _EndEnvironmentNode(t0) {
      var _ = this;
      _.name = t0;
      _._oldChildBuildResults = _._oldBuildResult = _._oldOptions = null;
    },
    Lexer$(input, settings) {
      var t1 = C.LinkedHashMap_LinkedHashMap$_literal(["%", 14], type$.String, type$.int),
        t2 = $.$get$Lexer_tokenRegex().allMatches$1(0, input);
      return new B.Lexer(input, settings, t1, new C._AllMatchesIterator(t2._re, t2.__js_helper$_string, t2.__js_helper$_start));
    },
    Lexer: function Lexer(t0, t1, t2, t3) {
      var _ = this;
      _.input = t0;
      _.settings = t1;
      _.catCodes = t2;
      _.pos = 0;
      _.it = t3;
    },
    MacroExpander: function MacroExpander(t0, t1, t2, t3, t4) {
      var _ = this;
      _.settings = t0;
      _.mode = t1;
      _.expansionCount = 0;
      _.stack = t2;
      _.lexer = t3;
      _.macros = t4;
    },
    MacroExpander_consumeArgs_closure: function MacroExpander_consumeArgs_closure(t0) {
      this.$this = t0;
    },
    MacroExpander_expandMacroAsText_closure: function MacroExpander_expandMacroAsText_closure() {
    },
    MacroDefinition$(expand, unexpandable) {
      return new B.MacroDefinition(expand, false);
    },
    MacroDefinition$fromString(output) {
      return new B.MacroDefinition(new B.MacroDefinition$fromString_closure(output), false);
    },
    MacroDefinition$fromCtxString(expand) {
      return new B.MacroDefinition(new B.MacroDefinition$fromCtxString_closure(expand), false);
    },
    MacroDefinition$fromMacroExpansion(output) {
      return new B.MacroDefinition(new B.MacroDefinition$fromMacroExpansion_closure(output), false);
    },
    MacroExpansion_fromString(expansion, context) {
      var t1, stripped, numArgs0, bodyLexer, tokens, tok, numArgs = 0;
      if (D.JSString_methods.contains$1(expansion, "#")) {
        t1 = $.$get$MacroExpansion__strippedRegex();
        stripped = C.stringReplaceAllUnchecked(expansion, t1, "");
        while (true) {
          numArgs0 = numArgs + 1;
          if (!C.stringContainsUnchecked(stripped, "#" + numArgs0, 0))
            break;
          numArgs = numArgs0;
        }
      }
      bodyLexer = B.Lexer$(expansion, context.settings);
      tokens = C._setArrayType([], type$.JSArray_Token);
      tok = bodyLexer.lex$0();
      for (; tok.text !== "EOF";) {
        D.JSArray_methods.add$1(tokens, tok);
        tok = bodyLexer.lex$0();
      }
      t1 = type$.ReversedListIterable_Token;
      return new B.MacroExpansion(C.List_List$of(new C.ReversedListIterable(tokens, t1), true, t1._eval$1("ListIterable.E")), numArgs);
    },
    newcommand(context, existsOK, nonexistsOK) {
      var arg, $name, exists, token, argText, numArgs, _null = null,
        t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = arg.length;
      if (t1 !== 1)
        throw C.wrapException(B.ParseException$("\\newcommand's first argument must be a macro name", _null));
      if (0 >= t1)
        return C.ioore(arg, 0);
      $name = arg[0].text;
      exists = context.isDefined$1($name);
      if (exists && !existsOK)
        throw C.wrapException(B.ParseException$("\\newcommand{" + $name + "} attempting to redefine " + $name + "; use \\renewcommand", _null));
      if (!exists && !nonexistsOK)
        throw C.wrapException(B.ParseException$("\\renewcommand{" + $name + "} when command " + $name + " does not yet exist; use \\newcommand", _null));
      t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = arg.length;
      if (t1 === 1) {
        if (0 >= t1)
          return C.ioore(arg, 0);
        t1 = arg[0].text === "[";
      } else
        t1 = false;
      if (t1) {
        token = context.expandNextToken$0();
        argText = "";
        while (true) {
          t1 = token.text;
          if (!(t1 !== "]" && t1 !== "EOF"))
            break;
          argText += t1;
          token = context.expandNextToken$0();
        }
        t1 = C.RegExp_RegExp("^\\s*[0-9]+\\s*$", true, false, false, false);
        if (!t1._nativeRegExp.test(argText))
          throw C.wrapException(B.ParseException$("Invalid number of arguments: " + argText, _null));
        numArgs = C.int_parse(argText, _null);
        t1 = context.consumeArgs$1(1);
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        arg = t1[0];
      } else
        numArgs = 0;
      context.macros.$set$2(0, $name, B.MacroDefinition$fromMacroExpansion(new B.MacroExpansion(arg, numArgs)));
      return "";
    },
    MacroDefinition: function MacroDefinition(t0, t1) {
      this.expand = t0;
      this.unexpandable = t1;
    },
    MacroDefinition$fromString_closure: function MacroDefinition$fromString_closure(t0) {
      this.output = t0;
    },
    MacroDefinition$fromCtxString_closure: function MacroDefinition$fromCtxString_closure(t0) {
      this.expand = t0;
    },
    MacroDefinition$fromMacroExpansion_closure: function MacroDefinition$fromMacroExpansion_closure(t0) {
      this.output = t0;
    },
    MacroExpansion: function MacroExpansion(t0, t1) {
      this.tokens = t0;
      this.numArgs = t1;
    },
    builtinMacros_closure: function builtinMacros_closure() {
    },
    builtinMacros_closure0: function builtinMacros_closure0() {
    },
    builtinMacros_closure1: function builtinMacros_closure1() {
    },
    builtinMacros_closure2: function builtinMacros_closure2() {
    },
    builtinMacros_closure3: function builtinMacros_closure3() {
    },
    builtinMacros_closure4: function builtinMacros_closure4() {
    },
    builtinMacros_closure5: function builtinMacros_closure5() {
    },
    builtinMacros_closure6: function builtinMacros_closure6() {
    },
    builtinMacros_closure7: function builtinMacros_closure7() {
    },
    builtinMacros_closure8: function builtinMacros_closure8() {
    },
    builtinMacros_closure9: function builtinMacros_closure9() {
    },
    builtinMacros__closure0: function builtinMacros__closure0() {
    },
    builtinMacros_closure10: function builtinMacros_closure10() {
    },
    builtinMacros__closure: function builtinMacros__closure() {
    },
    builtinMacros_closure11: function builtinMacros_closure11() {
    },
    builtinMacros_closure12: function builtinMacros_closure12() {
    },
    builtinMacros_closure13: function builtinMacros_closure13() {
    },
    Namespace: function Namespace(t0, t1, t2, t3) {
      var _ = this;
      _.current = t0;
      _.builtins = t1;
      _.undefStack = t2;
      _.$ti = t3;
    },
    Namespace_endGroup_closure: function Namespace_endGroup_closure(t0) {
      this.$this = t0;
    },
    ParseException$(message, token) {
      var t1 = new B.ParseException(message, token);
      t1.ParseException$2(message, token);
      return t1;
    },
    ParseException: function ParseException(t0, t1) {
      this.message = t0;
      this.token = t1;
    },
    ParseException_closure: function ParseException_closure() {
    },
    assertNodeType(node, $T) {
      if ($T._is(node))
        return node;
      throw C.wrapException(B.ParseException$("Expected node of type " + C.createRuntimeType($T).toString$0(0) + ", but got node of type " + J.get$runtimeType$(node).toString$0(0), null));
    },
    TexParser: function TexParser(t0, t1, t2, t3) {
      var _ = this;
      _.settings = t0;
      _.mode = t1;
      _.leftrightDepth = 0;
      _.macroExpander = t2;
      _.nextToken = null;
      _.argParsingContexts = t3;
    },
    TexParser__parseSymbol_closure: function TexParser__parseSymbol_closure() {
    },
    ArgumentParsingContext: function ArgumentParsingContext(t0, t1) {
      this.funcName = t0;
      this.currArgNum = -1;
      this.funcData = t1;
    },
    ScriptsParsingResults: function ScriptsParsingResults(t0, t1, t2) {
      this.subscript = t0;
      this.superscript = t1;
      this.limits = t2;
    },
    Strict: function Strict(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TexParserSettings: function TexParserSettings(t0) {
      this.strict = t0;
    },
    SourceLocation$0(lexer, start, end) {
      return new B.SourceLocation0(lexer, start, end);
    },
    SourceLocation_range(first, second) {
      var t2,
        t1 = first.loc;
      if (t1 != null) {
        t2 = second.loc;
        t2 = t2 == null || t1.lexer !== t2.lexer;
      } else
        t2 = true;
      if (t2)
        return null;
      else
        return new B.SourceLocation0(t1.lexer, t1.start, second.loc.end);
    },
    SourceLocation0: function SourceLocation0(t0, t1, t2) {
      this.lexer = t0;
      this.start = t1;
      this.end = t2;
    },
    TexSymbolConfig: function TexSymbolConfig(t0, t1, t2) {
      this.symbol = t0;
      this.variantForm = t1;
      this.type = t2;
    },
    Token$(text, loc) {
      return new B.Token(text, loc);
    },
    Token_range(startToken, endToken, text) {
      return new B.Token(text, B.SourceLocation_range(startToken, endToken));
    },
    Token: function Token(t0, t1) {
      this.text = t0;
      this.loc = t1;
      this.noexpand = false;
    },
    CustomLayoutId$(child, id, $T) {
      return new B.CustomLayoutId(id, child, new Ay.ValueKey(id, $T._eval$1("ValueKey<0>")), $T._eval$1("CustomLayoutId<0>"));
    },
    CustomLayoutDelegate: function CustomLayoutDelegate() {
    },
    CustomLayoutParentData: function CustomLayoutParentData(t0, t1, t2, t3) {
      var _ = this;
      _.id = null;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
      _.$ti = t3;
    },
    CustomLayoutId: function CustomLayoutId(t0, t1, t2, t3) {
      var _ = this;
      _.id = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    CustomLayout: function CustomLayout(t0, t1, t2, t3) {
      var _ = this;
      _.delegate = t0;
      _.children = t1;
      _.key = t2;
      _.$ti = t3;
    },
    RenderCustomLayout: function RenderCustomLayout(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._custom_layout0$_delegate = t0;
      _.ContainerRenderObjectMixin__childCount = t1;
      _.ContainerRenderObjectMixin__firstChild = t2;
      _.ContainerRenderObjectMixin__lastChild = t3;
      _._layoutCacheStorage = t4;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _.$ti = t6;
    },
    RenderCustomLayout_computeMinIntrinsicWidth_closure: function RenderCustomLayout_computeMinIntrinsicWidth_closure() {
    },
    RenderCustomLayout_computeMaxIntrinsicWidth_closure: function RenderCustomLayout_computeMaxIntrinsicWidth_closure() {
    },
    RenderCustomLayout_computeMinIntrinsicHeight_closure: function RenderCustomLayout_computeMinIntrinsicHeight_closure() {
    },
    RenderCustomLayout_computeMaxIntrinsicHeight_closure: function RenderCustomLayout_computeMaxIntrinsicHeight_closure() {
    },
    AxisConfiguration: function AxisConfiguration(t0, t1, t2) {
      this.size = t0;
      this.offsetTable = t1;
      this.$ti = t2;
    },
    IntrinsicLayoutDelegate: function IntrinsicLayoutDelegate() {
    },
    IntrinsicLayoutDelegate_getIntrinsicSize_closure: function IntrinsicLayoutDelegate_getIntrinsicSize_closure(t0, t1) {
      this.$this = t0;
      this.childSize = t1;
    },
    IntrinsicLayoutDelegate_getIntrinsicSize_closure0: function IntrinsicLayoutDelegate_getIntrinsicSize_closure0(t0, t1) {
      this.$this = t0;
      this.childSize = t1;
    },
    IntrinsicLayoutDelegate_computeLayout_closure: function IntrinsicLayoutDelegate_computeLayout_closure(t0) {
      this.$this = t0;
    },
    IntrinsicLayoutDelegate_computeLayout_closure0: function IntrinsicLayoutDelegate_computeLayout_closure0(t0) {
      this.$this = t0;
    },
    IntrinsicLayoutDelegate_computeLayout_closure1: function IntrinsicLayoutDelegate_computeLayout_closure1(t0, t1) {
      this.$this = t0;
      this.dry = t1;
    },
    IntrinsicLayoutDelegate_computeLayout_closure2: function IntrinsicLayoutDelegate_computeLayout_closure2(t0, t1, t2) {
      this.$this = t0;
      this.hconf = t1;
      this.vconf = t2;
    },
    _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin: function _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    RenderEqnArray$(arrayskip, hlines, jotSize, rowSpacings, ruleThickness) {
      var i, _null = null,
        t1 = C._setArrayType([], type$.JSArray_double),
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = new E.TextPainter(_null, D.TextAlign_4, D.TextDirection_1, D._LinearTextScaler_1.$eq(0, D._LinearTextScaler_1) ? new C._LinearTextScaler(1) : D._LinearTextScaler_1, _null, _null, _null, _null, F.TextWidthBasis_0, _null);
      t1 = new B.RenderEqnArray(ruleThickness, jotSize, arrayskip, hlines, rowSpacings, t1, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    EqnArrayParentData: function EqnArrayParentData(t0, t1, t2) {
      this.ContainerParentDataMixin_previousSibling = t0;
      this.ContainerParentDataMixin_nextSibling = t1;
      this.offset = t2;
    },
    EqnArray: function EqnArray(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.ruleThickness = t0;
      _.jotSize = t1;
      _.arrayskip = t2;
      _.hlines = t3;
      _.rowSpacings = t4;
      _.children = t5;
      _.key = t6;
    },
    RenderEqnArray: function RenderEqnArray(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _._ruleThickness = t0;
      _._jotSize = t1;
      _._arrayskip = t2;
      _._hlines = t3;
      _._rowSpacings = t4;
      _.hlinePos = t5;
      _.width = 0;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t6;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t7;
      _.ContainerRenderObjectMixin__childCount = t8;
      _.ContainerRenderObjectMixin__firstChild = t9;
      _.ContainerRenderObjectMixin__lastChild = t10;
      _._layoutCacheStorage = t11;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t12;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderEqnArray__computeLayout_closure: function RenderEqnArray__computeLayout_closure() {
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    LayoutBuilderPreserveBaseline: function LayoutBuilderPreserveBaseline(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    _RenderLayoutBuilderPreserveBaseline: function _RenderLayoutBuilderPreserveBaseline(t0, t1, t2, t3) {
      var _ = this;
      _.RenderConstrainedLayoutBuilder__callback = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin: function __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin() {
    },
    __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder: function __RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder() {
    },
    LineElement$(alignerOrSpacer, canBreakBefore, child, customCrossSize, trailingMargin) {
      return new B.LineElement(false, customCrossSize, trailingMargin, alignerOrSpacer, child, null);
    },
    Line$(children, key) {
      return new B.Line(children, key);
    },
    RenderLine$(children, crossAxisAlignment, minDepth, minHeight, textBaseline, textDirection) {
      var i, t1, _null = null,
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = new E.TextPainter(_null, D.TextAlign_4, D.TextDirection_1, D._LinearTextScaler_1.$eq(0, D._LinearTextScaler_1) ? new C._LinearTextScaler(1) : D._LinearTextScaler_1, _null, _null, _null, _null, F.TextWidthBasis_0, _null);
      t1 = new B.RenderLine(crossAxisAlignment, minDepth, minHeight, textBaseline, textDirection, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, children);
      return t1;
    },
    LineParentData: function LineParentData(t0, t1, t2) {
      var _ = this;
      _.canBreakBefore = false;
      _.customCrossSize = null;
      _.trailingMargin = 0;
      _.alignerOrSpacer = false;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    LineElement: function LineElement(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.canBreakBefore = t0;
      _.customCrossSize = t1;
      _.trailingMargin = t2;
      _.alignerOrSpacer = t3;
      _.child = t4;
      _.key = t5;
    },
    Line: function Line(t0, t1) {
      this.children = t0;
      this.key = t1;
    },
    RenderLine: function RenderLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._line$_crossAxisAlignment = t0;
      _._line$_minDepth = t1;
      _._line$_minHeight = t2;
      _._line$_textBaseline = t3;
      _._line$_textDirection = t4;
      _._line$_overflow = null;
      _.maxHeightAboveBaseline = 0;
      _.__RenderLine_caretOffsets_A = $;
      _.alignColWidth = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t5;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t6;
      _.ContainerRenderObjectMixin__childCount = t7;
      _.ContainerRenderObjectMixin__firstChild = t8;
      _.ContainerRenderObjectMixin__lastChild = t9;
      _._layoutCacheStorage = t10;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t11;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderLine_computeMinIntrinsicWidth_closure: function RenderLine_computeMinIntrinsicWidth_closure() {
    },
    RenderLine_computeMaxIntrinsicWidth_closure: function RenderLine_computeMaxIntrinsicWidth_closure() {
    },
    RenderLine_computeMinIntrinsicHeight_closure: function RenderLine_computeMinIntrinsicHeight_closure() {
    },
    RenderLine_computeMaxIntrinsicHeight_closure: function RenderLine_computeMaxIntrinsicHeight_closure() {
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin: function _RenderLine_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    RenderEditableLine$(crossAxisAlignment, cursorBlinkOpacityController, cursorColor, cursorHeight, cursorOffset, cursorRadius, cursorWidth, devicePixelRatio, endHandleLayerLink, hintingColor, minDepth, minHeight, node, paintCursorAboveText, preferredLineHeight, selection, selectionColor, showCursor, startHandleLayerLink, textBaseline, textDirection) {
      var i, t1, _null = null,
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = new E.TextPainter(_null, D.TextAlign_4, D.TextDirection_1, D._LinearTextScaler_1.$eq(0, D._LinearTextScaler_1) ? new C._LinearTextScaler(1) : D._LinearTextScaler_1, _null, _null, _null, _null, F.TextWidthBasis_0, _null);
      t1 = new B.RenderEditableLine(cursorBlinkOpacityController, cursorColor, cursorOffset, cursorRadius, cursorWidth, cursorHeight, devicePixelRatio, hintingColor, paintCursorAboveText, preferredLineHeight, selection, selectionColor, showCursor, startHandleLayerLink, endHandleLayerLink, crossAxisAlignment, minDepth, minHeight, textBaseline, textDirection, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    EditableLine: function EditableLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.cursorBlinkOpacityController = t0;
      _.cursorColor = t1;
      _.cursorOffset = t2;
      _.cursorRadius = t3;
      _.cursorWidth = t4;
      _.cursorHeight = t5;
      _.devicePixelRatio = t6;
      _.hintingColor = t7;
      _.node = t8;
      _.paintCursorAboveText = t9;
      _.preferredLineHeight = t10;
      _.selection = t11;
      _.selectionColor = t12;
      _.showCursor = t13;
      _.startHandleLayerLink = t14;
      _.endHandleLayerLink = t15;
      _.children = t16;
      _.key = t17;
    },
    RenderEditableLine: function RenderEditableLine(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _._line_editable$_cursorBlinkOpacityController = t0;
      _._cursorColor = t1;
      _._line_editable$_cursorOffset = t2;
      _._line_editable$_cursorRadius = t3;
      _._line_editable$_cursorWidth = t4;
      _._line_editable$_cursorHeight = t5;
      _._line_editable$_devicePixelRatio = t6;
      _._hintingColor = t7;
      _._paintCursorAboveText = t8;
      _.preferredLineHeight = t9;
      _._line_editable$_selection = t10;
      _._line_editable$_selectionColor = t11;
      _._line_editable$_showCursor = t12;
      _._line_editable$_startHandleLayerLink = t13;
      _._line_editable$_endHandleLayerLink = t14;
      _._line$_crossAxisAlignment = t15;
      _._line$_minDepth = t16;
      _._line$_minHeight = t17;
      _._line$_textBaseline = t18;
      _._line$_textDirection = t19;
      _._line$_overflow = null;
      _.maxHeightAboveBaseline = 0;
      _.__RenderLine_caretOffsets_A = $;
      _.alignColWidth = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t20;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t21;
      _.ContainerRenderObjectMixin__childCount = t22;
      _.ContainerRenderObjectMixin__firstChild = t23;
      _.ContainerRenderObjectMixin__lastChild = t24;
      _._layoutCacheStorage = t25;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t26;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    MinDimension$(bottomPadding, child, minDepth, minHeight, topPadding) {
      return new B.MinDimension(minHeight, minDepth, topPadding, bottomPadding, child, null);
    },
    MinDimension: function MinDimension(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.minHeight = t0;
      _.minDepth = t1;
      _.topPadding = t2;
      _.bottomPadding = t3;
      _.child = t4;
      _.key = t5;
    },
    RenderMinDimension: function RenderMinDimension(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._minHeight = t0;
      _._minDepth = t1;
      _._topPadding = t2;
      _._bottomPadding = t3;
      _.distanceToBaseline = 0;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    Multiscripts$(alignPostscripts, baseResult, isBaseCharacterBox, presubResult, presupResult, subResult, supResult) {
      return new B.Multiscripts(false, isBaseCharacterBox, baseResult, subResult, supResult, presubResult, presupResult, null);
    },
    calculateUV(base, isBaseCharacterBox, sub, sup) {
      var t3, r, v, t4, t5, q, u, hx, dx, theta, hy, psi,
        t1 = base.options,
        metrics = t1.get$fontMetrics(),
        h = base.baseline,
        t2 = sub != null;
      if (t2) {
        t3 = sub.options;
        r = new B.Measurement(t3.get$fontMetrics().subDrop, A.Unit_16).toLpUnder$1(t3);
        v = isBaseCharacterBox ? 0 : base.fullHeight - h + r;
      } else
        v = 0;
      t3 = sup == null;
      t4 = !t3;
      if (t4) {
        t5 = sup.options;
        q = new B.Measurement(t5.get$fontMetrics().supDrop, A.Unit_16).toLpUnder$1(t5);
        u = isBaseCharacterBox ? 0 : h - q;
      } else
        u = 0;
      if (t3 && t2) {
        hx = sub.baseline;
        v = Math.max(v, Math.max(new B.Measurement(metrics.sub1, A.Unit_16).toLpUnder$1(t1), hx - 0.8 * new B.Measurement(metrics.xHeight, A.Unit_16).toLpUnder$1(t1)));
      } else if (t4) {
        dx = sup.fullHeight - sup.baseline;
        t3 = t1.style;
        if (t3 === A.MathStyle_0)
          t3 = metrics.sup1;
        else
          t3 = (t3.index & 1) === 0 ? metrics.sup3 : metrics.sup2;
        t4 = metrics.xHeight;
        u = Math.max(u, Math.max(new B.Measurement(t3, A.Unit_16).toLpUnder$1(t1), dx + 0.25 * new B.Measurement(t4, A.Unit_16).toLpUnder$1(t1)));
        if (t2) {
          v = Math.max(v, new B.Measurement(metrics.sub2, A.Unit_16).toLpUnder$1(t1));
          theta = new B.Measurement(metrics.defaultRuleThickness, A.Unit_16).toLpUnder$1(t1);
          hy = sub.baseline;
          t2 = u - dx;
          t3 = 4 * theta;
          if (t2 - (hy - v) < t3) {
            v = t3 - u + dx + hy;
            psi = 0.8 * new B.Measurement(t4, A.Unit_16).toLpUnder$1(t1) - t2;
            if (psi > 0) {
              u += psi;
              v -= psi;
            }
          }
        }
      }
      return new B.Tuple2(u, v, type$.Tuple2_double_double);
    },
    _ScriptPos: function _ScriptPos(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Multiscripts: function Multiscripts(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.alignPostscripts = t0;
      _.isBaseCharacterBox = t1;
      _.baseResult = t2;
      _.subResult = t3;
      _.supResult = t4;
      _.presubResult = t5;
      _.presupResult = t6;
      _.key = t7;
    },
    MultiscriptsLayoutDelegate: function MultiscriptsLayoutDelegate(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.alignPostscripts = t0;
      _.italic = t1;
      _.isBaseCharacterBox = t2;
      _.baseOptions = t3;
      _.subOptions = t4;
      _.supOptions = t5;
      _.presubOptions = t6;
      _.presupOptions = t7;
      _.baselineDistance = 0;
    },
    _ScriptUvConf: function _ScriptUvConf(t0, t1, t2) {
      this.fullHeight = t0;
      this.baseline = t1;
      this.options = t2;
    },
    ResetBaseline: function ResetBaseline(t0, t1, t2) {
      this.height = t0;
      this.child = t1;
      this.key = t2;
    },
    RenderResetBaseline: function RenderResetBaseline(t0, t1, t2, t3) {
      var _ = this;
      _._reset_baseline$_height = t0;
      _.RenderObjectWithChildMixin__child = t1;
      _._layoutCacheStorage = t2;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t3;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    ResetDimension$(child, depth, height, horizontalAlignment, width) {
      return new B.ResetDimension(height, depth, width, horizontalAlignment, child, null);
    },
    ResetDimension: function ResetDimension(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.height = t0;
      _.depth = t1;
      _.width = t2;
      _.horizontalAlignment = t3;
      _.child = t4;
      _.key = t5;
    },
    RenderResetDimension: function RenderResetDimension(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._layoutHeight = t0;
      _._layoutDepth = t1;
      _._layoutWidth = t2;
      _._horizontalAlignment = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    ShiftBaseline$(child, offset, relativePos) {
      return new B.ShiftBaseline(relativePos, offset, child, null);
    },
    ShiftBaseline: function ShiftBaseline(t0, t1, t2, t3) {
      var _ = this;
      _.relativePos = t0;
      _.offset = t1;
      _.child = t2;
      _.key = t3;
    },
    RenderShiftBaseline: function RenderShiftBaseline(t0, t1, t2, t3, t4) {
      var _ = this;
      _._relativePos = t0;
      _._shift_baseline$_offset = t1;
      _._shift_baseline$_height = 0;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    VListElement$(child, customCrossSize, hShift, trailingMargin) {
      return new B.VListElement(customCrossSize, trailingMargin, hShift, child, null);
    },
    VList$(baselineReferenceWidgetIndex, children) {
      return new B.VList(baselineReferenceWidgetIndex, children, null);
    },
    RenderRelativeWidthColumn$(baselineReferenceWidgetIndex, crossAxisAlignment, textBaseline, textDirection) {
      var i, t1, _null = null,
        _list = J.JSArray_JSArray$allocateFixed(4, type$.TextPainter);
      for (i = 0; i < 4; ++i)
        _list[i] = new E.TextPainter(_null, D.TextAlign_4, D.TextDirection_1, D._LinearTextScaler_1.$eq(0, D._LinearTextScaler_1) ? new C._LinearTextScaler(1) : D._LinearTextScaler_1, _null, _null, _null, _null, F.TextWidthBasis_0, _null);
      t1 = new B.RenderRelativeWidthColumn(textBaseline, baselineReferenceWidgetIndex, crossAxisAlignment, textDirection, _list, true, 0, _null, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.addAll$1(0, _null);
      return t1;
    },
    VListParentData: function VListParentData(t0, t1, t2) {
      var _ = this;
      _.customCrossSize = null;
      _.hShift = _.trailingMargin = 0;
      _.ContainerParentDataMixin_previousSibling = t0;
      _.ContainerParentDataMixin_nextSibling = t1;
      _.offset = t2;
    },
    VListElement: function VListElement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.customCrossSize = t0;
      _.trailingMargin = t1;
      _.hShift = t2;
      _.child = t3;
      _.key = t4;
    },
    VList: function VList(t0, t1, t2) {
      this.baselineReferenceWidgetIndex = t0;
      this.children = t1;
      this.key = t2;
    },
    RenderRelativeWidthColumn: function RenderRelativeWidthColumn(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._vlist$_textBaseline = t0;
      _._baselineReferenceWidgetIndex = t1;
      _._vlist$_crossAxisAlignment = t2;
      _._vlist$_textDirection = t3;
      _.distanceToBaseline = _._vlist$_overflow = null;
      _.DebugOverflowIndicatorMixin__indicatorLabel = t4;
      _.DebugOverflowIndicatorMixin__overflowReportNeeded = t5;
      _.ContainerRenderObjectMixin__childCount = t6;
      _.ContainerRenderObjectMixin__firstChild = t7;
      _.ContainerRenderObjectMixin__lastChild = t8;
      _._layoutCacheStorage = t9;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t10;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure: function RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure() {
    },
    RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure: function RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure() {
    },
    RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure: function RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure() {
    },
    RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure: function RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure() {
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin() {
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin() {
    },
    _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin: function _RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin() {
    },
    getHeightForDelim(delim, fontName, options, style) {
      var char, metrics,
        t1 = A.Map_LoPS5.$index(0, delim);
      if (t1 == null)
        char = null;
      else {
        t1 = t1.math;
        t1 = t1 == null ? null : t1.replaceChar;
        char = t1;
      }
      metrics = B.getCharacterMetrics(char == null ? delim : char, fontName, A.Mode_0);
      if (metrics == null)
        throw C.wrapException(C.StateError$("Illegal delimiter char " + delim + "(" + B.unicodeLiteral(delim) + ") appeared in AST"));
      return new B.Measurement(metrics.height + metrics.depth, A.Unit_16).toLpUnder$1(options.havingStyle$1(style));
    },
    DelimiterConf: function DelimiterConf(t0, t1) {
      this.font = t0;
      this.style = t1;
    },
    strechySvgSpan($name, width, options) {
      var effCharNum, pathName, viewBoxWidth, viewBoxHeight, height, imgIndex, t1, t2, data, numSvgChildren, actualWidth, t3, aligns, widths, _list, index, t4, t5;
      if (A.Set_SjXog.contains$1(0, $name)) {
        effCharNum = D.JSNumber_methods.ceil$0(width / new B.Measurement(1, A.Unit_16).toLpUnder$1(options));
        if (effCharNum > 5)
          if ($name === "widehat" || $name === "widecheck") {
            pathName = $name + "4";
            viewBoxWidth = 2364;
            viewBoxHeight = 420;
            height = 0.42;
          } else {
            viewBoxWidth = 2340;
            viewBoxHeight = 312;
            pathName = "tilde4";
            height = 0.34;
          }
        else {
          if (!(effCharNum >= 0))
            return C.ioore(A.List_J9A, effCharNum);
          imgIndex = A.List_J9A[effCharNum];
          t1 = $name === "widehat" || $name === "widecheck";
          t2 = "" + imgIndex;
          if (t1) {
            if (!(imgIndex < 5))
              return C.ioore(A.List_Sn5, imgIndex);
            viewBoxWidth = A.List_Sn5[imgIndex];
            viewBoxHeight = A.List_3PE[imgIndex];
            height = A.List_PIO[imgIndex];
            pathName = $name + t2;
          } else {
            if (!(imgIndex < 5))
              return C.ioore(A.List_cuD, imgIndex);
            viewBoxWidth = A.List_cuD[imgIndex];
            viewBoxHeight = A.List_b7O[imgIndex];
            height = A.List_F26[imgIndex];
            pathName = "tilde" + t2;
          }
        }
        height = new B.Measurement(height, A.Unit_16).toLpUnder$1(options);
        t1 = A.Map_I87FN.$index(0, pathName);
        t1.toString;
        return B.svgWidgetFromPath(t1, new C.Size(width, height), new C.Rect(0, 0, viewBoxWidth, viewBoxHeight), options.color, K.Alignment_m1_m1, P.BoxFit_0);
      } else {
        data = A.Map_B3hpY.$index(0, $name);
        if (data == null)
          throw C.wrapException(C.ArgumentError$value($name, "name", "Invalid stretchy svg name"));
        t1 = data.viewBoxHeight;
        height = new B.Measurement(t1 / 1000, A.Unit_16).toLpUnder$1(options);
        t2 = data.paths;
        numSvgChildren = t2.length;
        actualWidth = Math.max(width, new B.Measurement(data.minWidth, A.Unit_16).toLpUnder$1(options));
        switch (numSvgChildren) {
          case 1:
            t3 = data.align;
            t3.toString;
            aligns = C._setArrayType([t3], type$.JSArray_Alignment);
            widths = C._setArrayType([actualWidth], type$.JSArray_double);
            break;
          case 2:
            t3 = actualWidth / 2;
            widths = C._setArrayType([t3, t3], type$.JSArray_double);
            aligns = A.List_eKf;
            break;
          case 3:
            t3 = actualWidth / 4;
            widths = C._setArrayType([t3, actualWidth / 2, t3], type$.JSArray_double);
            aligns = A.List_UOF;
            break;
          default:
            throw C.wrapException(C.StateError$("Bug inside stretchy svg code"));
        }
        _list = J.JSArray_JSArray$allocateFixed(numSvgChildren, type$.Widget);
        for (t3 = options.color, index = 0; index < numSvgChildren; ++index) {
          t4 = A.Map_I87FN.$index(0, t2[index]);
          t4.toString;
          if (!(index < widths.length))
            return C.ioore(widths, index);
          t5 = widths[index];
          if (!(index < aligns.length))
            return C.ioore(aligns, index);
          _list[index] = B.svgWidgetFromPath(t4, new C.Size(t5, height), new C.Rect(0, 0, 400000, t1), t3, aligns[index], P.BoxFit_2);
        }
        return O.Row$(_list, G.CrossAxisAlignment_0, null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, null, null, G.VerticalDirection_1);
      }
    },
    _KatexImagesData: function _KatexImagesData(t0, t1, t2, t3) {
      var _ = this;
      _.paths = t0;
      _.minWidth = t1;
      _.viewBoxHeight = t2;
      _.align = t3;
    },
    makeDecoratedEqualSymbol(symbol, type, mode, options) {
      var decoratorSymbols, decoratorSize, t1, t2, decorator, _null = null,
        decoratorFont = _null;
      switch (symbol) {
        case "\u2259":
          decoratorSymbols = C._setArrayType(["\u2227"], type$.JSArray_String);
          decoratorSize = A.MathSize_0;
          break;
        case "\u225a":
          decoratorSymbols = C._setArrayType(["\u2228"], type$.JSArray_String);
          decoratorSize = A.MathSize_0;
          break;
        case "\u225b":
          decoratorSymbols = C._setArrayType(["\u22c6"], type$.JSArray_String);
          decoratorSize = A.MathSize_2;
          break;
        case "\u225d":
          decoratorSymbols = C._setArrayType(["d", "e", "f"], type$.JSArray_String);
          decoratorFont = A.FontOptions_25d;
          decoratorSize = A.MathSize_0;
          break;
        case "\u225e":
          decoratorSymbols = C._setArrayType(["m"], type$.JSArray_String);
          decoratorFont = A.FontOptions_25d;
          decoratorSize = A.MathSize_0;
          break;
        case "\u225f":
          decoratorSymbols = C._setArrayType(["?"], type$.JSArray_String);
          decoratorSize = A.MathSize_0;
          break;
        default:
          throw C.wrapException(C.ArgumentError$value(B.unicodeLiteral(symbol), "symbol", "Not a decorator character"));
      }
      t1 = C._arrayInstanceType(decoratorSymbols);
      t2 = t1._eval$1("MappedListIterable<1,SymbolNode>");
      decorator = B.StyleNode$(C.List_List$of(new C.MappedListIterable(decoratorSymbols, t1._eval$1("SymbolNode(1)")._as(new B.makeDecoratedEqualSymbol_closure(mode)), t2), false, t2._eval$1("ListIterable.E")), new B.OptionsDiff(_null, decoratorSize, _null, _null, decoratorFont));
      t2 = B.GreenNodeWrappingExt_wrapWithEquationRow(new B.SymbolNode("=", false, type, _null, mode));
      return B.SyntaxNode$(_null, 0, B.OverNode$(B.GreenNodeWrappingExt_wrapWithEquationRow(decorator), t2, false)).buildWidget$1(options);
    },
    makeDecoratedEqualSymbol_closure: function makeDecoratedEqualSymbol_closure(t0) {
      this.mode = t0;
    },
    makeBaseSymbol(atomType, mode, options, overrideFont, symbol, variantForm) {
      var t1, t2, t3, renderConfig, char, _box_0, useMathFont, font, charMetrics, t4, _i, fallback, t5, postfix, italic, defaultFont, characterMetrics, chars, res1, res2, widget1, widget2, _null = null,
        symbolRenderConfig = A.Map_LoPS5.$index(0, symbol);
      if (symbolRenderConfig != null) {
        if (variantForm)
          symbolRenderConfig = symbolRenderConfig.variantForm;
        t1 = mode === A.Mode_0;
        if (t1) {
          t2 = symbolRenderConfig == null;
          t3 = t2 ? _null : symbolRenderConfig.math;
          if (t3 == null) {
            t2 = t2 ? _null : symbolRenderConfig.text;
            renderConfig = t2;
          } else
            renderConfig = t3;
        } else {
          t2 = symbolRenderConfig == null;
          t3 = t2 ? _null : symbolRenderConfig.text;
          if (t3 == null) {
            t2 = t2 ? _null : symbolRenderConfig.math;
            renderConfig = t2;
          } else
            renderConfig = t3;
        }
        t2 = renderConfig == null;
        char = t2 ? _null : renderConfig.replaceChar;
        if (char == null)
          char = symbol;
        if (atomType === A.AtomType_0) {
          if (0 >= symbol.length)
            return C.ioore(symbol, 0);
          t3 = symbol.charCodeAt(0) !== 55349;
        } else
          t3 = false;
        if (t3) {
          _box_0 = {};
          if (!t1)
            useMathFont = mode === A.Mode_1 && options.mathFontOptions != null;
          else
            useMathFont = true;
          if (overrideFont == null)
            font = useMathFont ? options.mathFontOptions : options.textFontOptions;
          else
            font = overrideFont;
          _box_0.font = font;
          if (font != null) {
            charMetrics = B.getCharacterMetrics(char, font.get$fontName(), mode);
            if (charMetrics == null) {
              for (t3 = font.fallback, t4 = t3.length, _i = 0; _i < t4; ++_i) {
                fallback = t3[_i];
                t5 = fallback.fontWeight === F.FontWeight_6 ? "Bold" : "";
                postfix = t5 + (fallback.fontShape === A.FontStyle_1 ? "Italic" : "");
                t5 = postfix.length === 0 ? "Regular" : postfix;
                charMetrics = B.getCharacterMetrics(char, fallback.fontFamily + "-" + t5, mode);
                if (charMetrics != null) {
                  _box_0.font = fallback;
                  break;
                }
              }
              _box_0.font.toString;
            }
            if (charMetrics != null) {
              italic = new B.Measurement(charMetrics.italic, A.Unit_16).toLpUnder$1(options);
              t2 = new B.Measurement(charMetrics.skew, A.Unit_16).toLpUnder$1(options);
              return new B.BuildResult(B.makeChar(symbol, _box_0.font, charMetrics, options, t1), options, italic, t2, _null);
            } else if (A.Map_jLcbb.containsKey$1(0, symbol) && _box_0.font.fontFamily === "Typewriter") {
              t1 = type$.MappedListIterable_String_Widget;
              return new B.BuildResult(O.Row$(C.List_List$of(new C.MappedListIterable(C._setArrayType(A.Map_jLcbb.$index(0, symbol).split(""), type$.JSArray_String), type$.Widget_Function_String._as(new B.makeBaseSymbol_closure(_box_0, mode, options)), t1), false, t1._eval$1("ListIterable.E")), G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, D.TextBaseline_0, _null, G.VerticalDirection_1), options, 0, 0, _null);
            }
          }
        }
        defaultFont = t2 ? _null : renderConfig.defaultFont;
        if (defaultFont == null)
          defaultFont = A.FontOptions_25d;
        t2 = t2 ? _null : renderConfig.replaceChar;
        if (t2 == null)
          t2 = symbol;
        characterMetrics = B.getCharacterMetrics(t2, defaultFont.get$fontName(), A.Mode_0);
        t2 = characterMetrics == null;
        italic = t2 ? _null : new B.Measurement(characterMetrics.italic, A.Unit_16).toLpUnder$1(options);
        if (italic == null)
          italic = 0;
        t1 = B.makeChar(char, defaultFont, characterMetrics, options, t1);
        t2 = t2 ? _null : new B.Measurement(characterMetrics.skew, A.Unit_16).toLpUnder$1(options);
        return new B.BuildResult(t1, options, italic, t2 == null ? 0 : t2, _null);
      } else {
        t1 = mode === A.Mode_0;
        if (t1 && !variantForm)
          if (A.Map_W7r5a.containsKey$1(0, symbol)) {
            chars = A.Map_W7r5a.$index(0, symbol);
            t1 = chars[0];
            t2 = chars[1];
            res1 = B.makeBaseSymbol(atomType, mode, options, _null, t1, false);
            res2 = B.makeBaseSymbol(atomType, mode, options, _null, t2, false);
            return new B.BuildResult(O.Row$(C._setArrayType([B.ResetDimension$(res1.widget, _null, _null, G.CrossAxisAlignment_0, 0), res2.widget], type$.JSArray_Widget), G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, D.TextBaseline_0, _null, G.VerticalDirection_1), options, res2.italic, 0, _null);
          } else if (A.Map_uUUqS.containsKey$1(0, symbol)) {
            t1 = A.Map_uUUqS.$index(0, symbol);
            t1.toString;
            t2 = $.$get$compactedCompositeSymbolSpacings().$index(0, symbol);
            t2.toString;
            t3 = t1[0];
            t1 = t1[1];
            res1 = B.makeBaseSymbol(atomType, mode, options, _null, t3, false);
            res2 = B.makeBaseSymbol(atomType, mode, options, _null, t1, false);
            widget1 = res1.widget;
            widget1 = t3 !== ":" ? widget1 : B.ShiftBaseline$(widget1, new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options), 0.5);
            widget2 = res2.widget;
            widget2 = t1 !== ":" ? widget2 : B.ShiftBaseline$(widget2, new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options), 0.5);
            return new B.BuildResult(B.Line$(C._setArrayType([B.LineElement$(false, false, widget1, _null, t2.toLpUnder$1(options)), widget2], type$.JSArray_Widget), _null), options, res2.italic, 0, _null);
          } else if (A.Set_Vj9Rm.contains$1(0, symbol))
            return B.makeDecoratedEqualSymbol(symbol, atomType, mode, options);
      }
      return new B.BuildResult(B.makeChar(symbol, A.FontOptions_25d, _null, options, t1), options, 0, 0, _null);
    },
    makeChar(character, font, characterMetrics, options, needItalic) {
      var italic, _null = null,
        t1 = characterMetrics == null,
        t2 = t1 ? _null : new B.Measurement(characterMetrics.height, A.Unit_16).toLpUnder$1(options),
        t3 = t1 ? _null : new B.Measurement(characterMetrics.depth, A.Unit_16).toLpUnder$1(options),
        t4 = font.fontFamily,
        t5 = font.fontWeight,
        t6 = font.fontShape,
        charWidget = B.ResetDimension$(E.RichText$(_null, _null, _null, F.TextOverflow_3, _null, _null, false, _null, E.TextSpan$(_null, E.TextStyle$(_null, _null, options.color, _null, _null, _null, _null, _null, "packages/flutter_math_fork/KaTeX_" + t4, _null, _null, new B.Measurement(1, A.Unit_16).toLpUnder$1(options), t6, _null, t5, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), character), D.TextAlign_4, _null, _null, D._LinearTextScaler_1, F.TextWidthBasis_0), t3, t2, G.CrossAxisAlignment_2, _null);
      if (needItalic) {
        italic = t1 ? _null : new B.Measurement(characterMetrics.italic, A.Unit_16).toLpUnder$1(options);
        return new E.Padding(new C.EdgeInsets(0, 0, italic == null ? 0 : italic, 0), charWidget, _null);
      }
      return charWidget;
    },
    makeBaseSymbol_closure: function makeBaseSymbol_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.mode = t1;
      this.options = t2;
    },
    unicodeLiteral(str) {
      return new C.MappedListIterable(C._setArrayType(str.split(""), type$.JSArray_String), type$.String_Function_String._as(new B.unicodeLiteral_closure(false)), type$.MappedListIterable_String_String).join$0(0);
    },
    unicodeLiteral_closure: function unicodeLiteral_closure(t0) {
      this.escape = t0;
    },
    BuildException: function BuildException(t0) {
      this.message = t0;
    },
    Math_Math$tex(expression, mathStyle, onErrorFallback, options, settings, textScaleFactor, textStyle) {
      var e, e0, t1, t2, t3, t4, t5, parse, exception, ast = null, parseError = null;
      try {
        t1 = C.ListQueue$(null, type$.ArgumentParsingContext);
        t2 = C._setArrayType([], type$.JSArray_Token);
        t3 = $.$get$builtinMacros();
        t4 = C._setArrayType([], type$.JSArray_Map_of_String_and_nullable_MacroDefinition);
        t5 = type$.String;
        t3 = new B.Namespace(C.LinkedHashMap_LinkedHashMap$from(A.Map_empty9, t5, type$.MacroDefinition), t3, t4, type$.Namespace_MacroDefinition);
        t1 = new B.TexParser(settings, A.Mode_0, new B.MacroExpander(settings, A.Mode_0, t2, B.Lexer$(expression, settings), t3), t1);
        D.JSArray_methods.add$1(t4, C.LinkedHashMap_LinkedHashMap$_empty(t5, type$.nullable_MacroDefinition));
        parse = t1.parseExpression$1$breakOnInfix(false);
        t1.expect$1("EOF");
        t3.endGroup$0();
        ast = new B.SyntaxTree(B.GreenNodeListWrappingExt_wrapWithEquationRow(parse));
      } catch (exception) {
        t1 = C.unwrapException(exception);
        if (t1 instanceof B.ParseException) {
          e = t1;
          parseError = e;
        } else {
          e0 = t1;
          parseError = B.ParseException$("Unsanitized parse exception detected: " + C.S(e0) + string$.x2ePleas, null);
        }
      }
      return new B.Math(ast, mathStyle, onErrorFallback, options, parseError, textScaleFactor, textStyle, null);
    },
    Math_defaultOnErrorFallback(error) {
      return new B.SelectableText(error.get$messageWithType(), null);
    },
    Math: function Math(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.ast = t0;
      _.mathStyle = t1;
      _.onErrorFallback = t2;
      _.options = t3;
      _.parseError = t4;
      _.textScaleFactor = t5;
      _.textStyle = t6;
      _.key = t7;
    },
    FlutterMathMode: function FlutterMathMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Cache0: function Cache0(t0, t1) {
      this._cache$_pending = t0;
      this._cache$_cache = t1;
    },
    Cache_putIfAbsent_closure: function Cache_putIfAbsent_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.$this = t1;
      this.key = t2;
    },
    SvgTheme: function SvgTheme() {
    },
    SvgLoader: function SvgLoader() {
    },
    SvgLoader__load_closure: function SvgLoader__load_closure(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    SvgLoader__load__closure: function SvgLoader__load__closure(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    SvgLoader_loadBytes_closure: function SvgLoader_loadBytes_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    SvgCacheKey: function SvgCacheKey(t0, t1, t2) {
      this.theme = t0;
      this.keyData = t1;
      this.colorMapper = t2;
    },
    SvgStringLoader: function SvgStringLoader(t0, t1, t2) {
      this._svg = t0;
      this.theme = t1;
      this.colorMapper = t2;
    },
    Svg: function Svg(t0) {
      this.cache = t0;
    },
    SvgPicture: function SvgPicture(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.fit = t2;
      _.alignment = t3;
      _.bytesLoader = t4;
      _.colorFilter = t5;
      _.key = t6;
    },
    CodeField: function CodeField(t0, t1, t2) {
      this.name = t0;
      this.codes = t1;
      this.key = t2;
    },
    _CodeFieldState: function _CodeFieldState() {
      this._copied = false;
      this._framework$_element = this._widget = null;
    },
    _CodeFieldState_build_closure: function _CodeFieldState_build_closure(t0) {
      this.$this = t0;
    },
    _CodeFieldState_build__closure: function _CodeFieldState_build__closure(t0) {
      this.$this = t0;
    },
    _CodeFieldState_build___closure: function _CodeFieldState_build___closure(t0) {
      this.$this = t0;
    },
    _CodeFieldState_build__closure0: function _CodeFieldState_build__closure0(t0) {
      this.$this = t0;
    },
    CustomDivider: function CustomDivider(t0, t1, t2) {
      this.color = t0;
      this.height = t1;
      this.key = t2;
    },
    RenderDivider: function RenderDivider(t0, t1, t2, t3, t4) {
      var _ = this;
      _._custom_divider$_color = t0;
      _._custom_divider$_height = t1;
      _._custom_divider$_width = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomImageError: function CustomImageError(t0) {
      this.key = t0;
    },
    RenderCustomImageError: function RenderCustomImageError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._iconColor = t0;
      _._outlineColor = t1;
      _._custom_error_image$_backgroundColor = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._layoutCacheStorage = t4;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomImageLoading: function CustomImageLoading(t0, t1) {
      this.progress = t0;
      this.key = t1;
    },
    RenderCustomImageLoading: function RenderCustomImageLoading(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._iconColor = t0;
      _._outlineColor = t1;
      _._custom_error_image$_backgroundColor = t2;
      _._progress = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    CustomRb: function CustomRb(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.value = t1;
      _.textDirection = t2;
      _.key = t3;
    },
    CustomRb_build_closure: function CustomRb_build_closure() {
    },
    CustomCb: function CustomCb(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.value = t1;
      _.textDirection = t2;
      _.key = t3;
    },
    CustomCb_build_closure: function CustomCb_build_closure() {
    },
    BlockQuoteWidget: function BlockQuoteWidget(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.direction = t1;
      _.color = t2;
      _.width = t3;
      _.key = t4;
    },
    BlockQuotePainter: function BlockQuotePainter(t0, t1, t2, t3) {
      var _ = this;
      _.color = t0;
      _.direction = t1;
      _.width = t2;
      _._repaint = t3;
    },
    LinkButton: function LinkButton(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.text = t0;
      _.child = t1;
      _.onPressed = t2;
      _.config = t3;
      _.color = t4;
      _.hoverColor = t5;
      _.key = t6;
    },
    _LinkButtonState: function _LinkButtonState() {
      this._link_button$_isHovering = false;
      this._framework$_element = this._widget = null;
    },
    _LinkButtonState_build_closure2: function _LinkButtonState_build_closure2(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure3: function _LinkButtonState_build_closure3(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure0: function _LinkButtonState_build_closure0(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure1: function _LinkButtonState_build_closure1(t0) {
      this.$this = t0;
    },
    _LinkButtonState_build_closure: function _LinkButtonState_build_closure(t0) {
      this.$this = t0;
    },
    _LinkButtonState__handleHover_closure: function _LinkButtonState__handleHover_closure(t0, t1) {
      this.$this = t0;
      this.hover = t1;
    },
    _LinkButtonState__handlePress_closure: function _LinkButtonState__handlePress_closure() {
    },
    GptMarkdownConfig$(codeBuilder, components, followLinkColor, highlightBuilder, imageBuilder, inlineComponents, latexBuilder, latexWorkaround, linkBuilder, maxLines, onLinkTap, orderedListBuilder, overflow, sourceTagBuilder, style, tableBuilder, textAlign, textDirection, textScaler, unOrderedListBuilder) {
      return new B.GptMarkdownConfig(textDirection, style, textAlign, textScaler, onLinkTap, latexWorkaround, latexBuilder, sourceTagBuilder, false, codeBuilder, orderedListBuilder, unOrderedListBuilder, maxLines, overflow, highlightBuilder, linkBuilder, imageBuilder, components, inlineComponents, tableBuilder);
    },
    GptMarkdownConfig: function GptMarkdownConfig(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19) {
      var _ = this;
      _.textDirection = t0;
      _.style = t1;
      _.textAlign = t2;
      _.textScaler = t3;
      _.onLinkTap = t4;
      _.latexWorkaround = t5;
      _.latexBuilder = t6;
      _.sourceTagBuilder = t7;
      _.followLinkColor = t8;
      _.codeBuilder = t9;
      _.orderedListBuilder = t10;
      _.unOrderedListBuilder = t11;
      _.maxLines = t12;
      _.overflow = t13;
      _.highlightBuilder = t14;
      _.linkBuilder = t15;
      _.imageBuilder = t16;
      _.components = t17;
      _.inlineComponents = t18;
      _.tableBuilder = t19;
    },
    SelectableAdapter: function SelectableAdapter(t0, t1, t2) {
      this.child = t0;
      this.selectedText = t1;
      this.key = t2;
    },
    _SelectableAdapter: function _SelectableAdapter(t0, t1, t2, t3) {
      var _ = this;
      _.registrar = t0;
      _.selectedText = t1;
      _.child = t2;
      _.key = t3;
    },
    _RenderSelectableAdapter: function _RenderSelectableAdapter(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._selectable_adapter$_geometry = t0;
      _._selectable_adapter$_selectionColor = t1;
      _._endHandle = _._startHandle = _._selectable_adapter$_end = _._selectable_adapter$_start = null;
      _.SelectionRegistrant__registrar = t2;
      _.SelectionRegistrant__subscribedToSelectionRegistrar = t3;
      _.RenderObjectWithChildMixin__child = t4;
      _._layoutCacheStorage = t5;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    __RenderSelectableAdapter_RenderProxyBox_Selectable: function __RenderSelectableAdapter_RenderProxyBox_Selectable() {
    },
    __RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant: function __RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant() {
    },
    UnorderedListView$(bulletColor, bulletSize, child, padding, spacing, textDirection) {
      return new B.UnorderedListView(bulletSize, spacing, padding, textDirection, bulletColor, child, null);
    },
    UnorderedListView: function UnorderedListView(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.bulletSize = t0;
      _.spacing = t1;
      _.padding = t2;
      _.textDirection = t3;
      _.bulletColor = t4;
      _.child = t5;
      _.key = t6;
    },
    OrderedListView: function OrderedListView(t0, t1, t2, t3, t4) {
      var _ = this;
      _.no = t0;
      _._unordered_ordered_list$_style = t1;
      _.textDirection = t2;
      _.child = t3;
      _.key = t4;
    },
    GptMarkdown$(data, onLinkTap, style) {
      return new B.GptMarkdown(data, style, onLinkTap, null);
    },
    MarkdownComponent_generate(context, text, config, includeGlobalComponents) {
      var components, spans, t1;
      if (includeGlobalComponents)
        components = C._setArrayType([new B.CodeBlockMd(), new B.LatexMathMultiLine(), new B.NewLines(), new B.BlockQuote(), new B.TableMd(), new B.HTag(), new B.UnOrderedList(), new B.OrderedList(), new B.RadioButtonMd(), new B.CheckBoxMd(), new B.HrLine(), new B.IndentMd()], type$.JSArray_MarkdownComponent);
      else
        components = $.$get$MarkdownComponent_inlineComponents();
      spans = C._setArrayType([], type$.JSArray_InlineSpan);
      t1 = C._arrayInstanceType(components);
      C.stringReplaceAllFuncUnchecked(text, C.RegExp_RegExp(new C.MappedListIterable(components, t1._eval$1("String(1)")._as(new B.MarkdownComponent_generate_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "|"), true, true, true, false), type$.nullable_String_Function_Match._as(new B.MarkdownComponent_generate_closure0(components, spans, context, config)), type$.nullable_String_Function_String._as(new B.MarkdownComponent_generate_closure1(includeGlobalComponents, context, config, spans)));
      return spans;
    },
    LatexMathMultiLine$() {
      return new B.LatexMathMultiLine();
    },
    TableMd$() {
      return new B.TableMd();
    },
    GptMarkdownTheme_of(context) {
      var themeData, t1, t2, t3, t4,
        theme = H.Theme_of(context),
        provider = context.dependOnInheritedWidgetOfExactType$1$0(type$.GptMarkdownTheme);
      if (provider != null)
        return provider.gptThemeData;
      themeData = type$.nullable_GptMarkdownThemeData._as(theme.extensions.$index(0, C.createRuntimeType(type$.GptMarkdownThemeData)));
      if (themeData != null)
        return themeData;
      t1 = theme.textTheme;
      t2 = theme.colorScheme;
      t3 = t2._onSurfaceVariant;
      if (t3 == null)
        t3 = t2.onSurface;
      t3 = C.Color$fromARGB(50, t3.toARGB32$0() >>> 16 & 255, t3.toARGB32$0() >>> 8 & 255, t3.toARGB32$0() & 255);
      t4 = t2._outline;
      if (t4 == null) {
        t4 = t2._onBackground;
        t2 = t4 == null ? t2.onSurface : t4;
      } else
        t2 = t4;
      return new B.GptMarkdownThemeData(t3, t1.headlineLarge, t1.headlineMedium, t1.headlineSmall, t1.titleLarge, t1.titleMedium, t1.titleSmall, 1, t2, G.MaterialColor_45F, G.MaterialColor_nI1);
    },
    GptMarkdown: function GptMarkdown(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.style = t1;
      _.onLinkTap = t2;
      _.key = t3;
    },
    MarkdownComponent: function MarkdownComponent() {
    },
    MarkdownComponent_generate_closure: function MarkdownComponent_generate_closure() {
    },
    MarkdownComponent_generate_closure0: function MarkdownComponent_generate_closure0(t0, t1, t2, t3) {
      var _ = this;
      _.components = t0;
      _.spans = t1;
      _.context = t2;
      _.config = t3;
    },
    MarkdownComponent_generate_closure1: function MarkdownComponent_generate_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.includeGlobalComponents = t0;
      _.context = t1;
      _.config = t2;
      _.spans = t3;
    },
    InlineMd: function InlineMd() {
    },
    BlockMd: function BlockMd() {
    },
    IndentMd: function IndentMd() {
    },
    HTag: function HTag() {
    },
    NewLines: function NewLines() {
    },
    HrLine: function HrLine() {
    },
    CheckBoxMd: function CheckBoxMd() {
    },
    RadioButtonMd: function RadioButtonMd() {
    },
    BlockQuote: function BlockQuote() {
    },
    UnOrderedList: function UnOrderedList() {
    },
    OrderedList: function OrderedList() {
    },
    HighlightedText: function HighlightedText() {
    },
    BoldMd: function BoldMd() {
    },
    StrikeMd: function StrikeMd() {
    },
    ItalicMd: function ItalicMd() {
    },
    LatexMathMultiLine: function LatexMathMultiLine() {
    },
    LatexMathMultiLine_build_closure: function LatexMathMultiLine_build_closure() {
    },
    LatexMathMultiLine_build_closure0: function LatexMathMultiLine_build_closure0(t0, t1, t2) {
      this.config = t0;
      this.workaround = t1;
      this.mathText = t2;
    },
    LatexMathMultiLine_build__closure: function LatexMathMultiLine_build__closure(t0, t1, t2, t3) {
      var _ = this;
      _.workaround = t0;
      _.mathText = t1;
      _.config = t2;
      _.textStyle = t3;
    },
    LatexMath: function LatexMath() {
    },
    LatexMath_span_closure: function LatexMath_span_closure() {
    },
    LatexMath_span_closure0: function LatexMath_span_closure0(t0, t1, t2) {
      this.config = t0;
      this.workaround = t1;
      this.mathText = t2;
    },
    LatexMath_span__closure: function LatexMath_span__closure(t0, t1, t2, t3) {
      var _ = this;
      _.workaround = t0;
      _.mathText = t1;
      _.config = t2;
      _.textStyle = t3;
    },
    SourceTag: function SourceTag() {
    },
    ATagMd: function ATagMd() {
    },
    ATagMd_span_closure: function ATagMd_span_closure(t0, t1, t2) {
      this.config = t0;
      this.url = t1;
      this.linkText = t2;
    },
    ImageMd: function ImageMd() {
    },
    ImageMd_span_closure0: function ImageMd_span_closure0() {
    },
    ImageMd_span_closure: function ImageMd_span_closure() {
    },
    TableMd: function TableMd() {
    },
    TableMd_build_closure: function TableMd_build_closure() {
    },
    TableMd_build__closure0: function TableMd_build__closure0() {
    },
    TableMd_build_closure0: function TableMd_build_closure0(t0) {
      this.separatorRow = t0;
    },
    TableMd_build_closure1: function TableMd_build_closure1(t0) {
      this.hasHeader = t0;
    },
    TableMd_build_closure2: function TableMd_build_closure2(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.hasHeader = t1;
      _.context = t2;
      _.config = t3;
    },
    TableMd_build__closure: function TableMd_build__closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.entry = t1;
      _.context = t2;
      _.config = t3;
    },
    CodeBlockMd: function CodeBlockMd() {
    },
    UnderLineMd: function UnderLineMd() {
    },
    MdWidget: function MdWidget(t0, t1, t2, t3, t4) {
      var _ = this;
      _.exp = t0;
      _.context = t1;
      _.includeGlobalComponents = t2;
      _.config = t3;
      _.key = t4;
    },
    _MdWidgetState: function _MdWidgetState(t0) {
      this.list = t0;
      this._framework$_element = this._widget = null;
    },
    CustomTableColumnWidth: function CustomTableColumnWidth() {
    },
    GptMarkdownThemeData: function GptMarkdownThemeData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.highlightColor = t0;
      _.h1 = t1;
      _.h2 = t2;
      _.h3 = t3;
      _.h4 = t4;
      _.h5 = t5;
      _.h6 = t6;
      _.hrLineThickness = t7;
      _.hrLineColor = t8;
      _.linkColor = t9;
      _.linkHoverColor = t10;
    },
    _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure: function _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure(t0) {
      this.$this = t0;
    },
    SingleChildStatefulWidget: function SingleChildStatefulWidget() {
    },
    SingleChildState: function SingleChildState() {
    },
    SingleChildStatefulElement: function SingleChildStatefulElement(t0, t1, t2, t3) {
      var _ = this;
      _.SingleChildWidgetElementMixin__parent = t0;
      _._framework$_state = t1;
      _._didChangeDependencies = false;
      _._slot = _._notificationTree = _._framework$_parent = _._framework$_child = null;
      _.__Element__depth_A = $;
      _._widget = t2;
      _._parentBuildScope = _._framework$_owner = null;
      _._lifecycleState = t3;
      _._dependencies = _._inheritedElements = null;
      _._hadUnsatisfiedDependencies = false;
      _._dirty = true;
      _._inDirtyList = false;
    },
    _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin: function _SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin() {
    },
    isCubicCommand(command) {
      return command === A.SvgPathSegType_6 || command === A.SvgPathSegType_7 || command === A.SvgPathSegType_16 || command === A.SvgPathSegType_17;
    },
    isQuadraticCommand(command) {
      return command === A.SvgPathSegType_8 || command === A.SvgPathSegType_9 || command === A.SvgPathSegType_18 || command === A.SvgPathSegType_19;
    },
    PathSegmentData$() {
      return new B.PathSegmentData(A.SvgPathSegType_0, A._PathOffset_0_0, A._PathOffset_0_0, A._PathOffset_0_0);
    },
    _PathOffset: function _PathOffset(t0, t1) {
      this.dx = t0;
      this.dy = t1;
    },
    SvgPathStringSource: function SvgPathStringSource(t0, t1, t2) {
      var _ = this;
      _._path_parsing$_string = t0;
      _._previousCommand = t1;
      _._idx = 0;
      _._path_parsing$_length = t2;
    },
    PathSegmentData: function PathSegmentData(t0, t1, t2, t3) {
      var _ = this;
      _.command = t0;
      _.targetPoint = t1;
      _.point1 = t2;
      _.point2 = t3;
      _.arcLarge = _.arcSweep = false;
    },
    SvgPathNormalizer: function SvgPathNormalizer(t0, t1, t2, t3) {
      var _ = this;
      _._currentPoint = t0;
      _._subPathPoint = t1;
      _._controlPoint = t2;
      _._lastCommand = t3;
    },
    SvgPathSegType: function SvgPathSegType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Context1: function Context1(t0, t1) {
      this.buffer = t0;
      this.position = t1;
    },
    ParserException: function ParserException(t0) {
      this.failure = t0;
    },
    Parser: function Parser() {
    },
    Result: function Result() {
    },
    Success: function Success(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.buffer = t1;
      _.position = t2;
      _.$ti = t3;
    },
    Failure: function Failure(t0, t1, t2) {
      this.message = t0;
      this.buffer = t1;
      this.position = t2;
    },
    Token_lineAndColumnOf(buffer, position) {
      var t1, line, offset, t2, offset0;
      for (t1 = new B.MatchesIterable(new B.TokenParser($.$get$Token__newlineParser(), type$.TokenParser_String), buffer, 0, false, type$.MatchesIterable_Token_String).get$iterator(0), line = 1, offset = 0; t1.moveNext$0(); offset = offset0) {
        t2 = t1.__MatchesIterator_current_A;
        t2 === $ && C.throwLateFieldNI("current");
        offset0 = t2.stop;
        if (position < offset0)
          return C._setArrayType([line, position - offset + 1], type$.JSArray_int);
        ++line;
      }
      return C._setArrayType([line, position - offset + 1], type$.JSArray_int);
    },
    Token_positionString(buffer, position) {
      var lineAndColumn = B.Token_lineAndColumnOf(buffer, position);
      return "" + lineAndColumn[0] + ":" + lineAndColumn[1];
    },
    Token0: function Token0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.buffer = t1;
      _.start = t2;
      _.stop = t3;
      _.$ti = t4;
    },
    _throwUnsupported() {
      return C.throwExpression(C.UnsupportedError$("Unsupported operation on parser reference"));
    },
    ReferenceParser: function ReferenceParser(t0, t1, t2) {
      this.$function = t0;
      this.$arguments = t1;
      this.$ti = t2;
    },
    MatchesIterable: function MatchesIterable(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parser = t0;
      _.input = t1;
      _.start = t2;
      _.overlapping = t3;
      _.$ti = t4;
    },
    MatchesIterator: function MatchesIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parser = t0;
      _.input = t1;
      _.overlapping = t2;
      _.start = t3;
      _.__MatchesIterator_current_A = $;
      _.$ti = t4;
    },
    FlattenParser: function FlattenParser(t0, t1) {
      this.message = t0;
      this.delegate = t1;
    },
    MapParserExtension_map(_this, callback, hasSideEffects, $R, $S) {
      return new B.MapParser(callback, false, _this, $R._eval$1("@<0>")._bind$1($S)._eval$1("MapParser<1,2>"));
    },
    MapParser: function MapParser(t0, t1, t2, t3) {
      var _ = this;
      _.callback = t0;
      _.hasSideEffects = t1;
      _.delegate = t2;
      _.$ti = t3;
    },
    TokenParser: function TokenParser(t0, t1) {
      this.delegate = t0;
      this.$ti = t1;
    },
    char(char, message) {
      var t1;
      if (0 >= char.length)
        return C.ioore(char, 0);
      t1 = type$.CodeUnits;
      t1 = new C.MappedListIterable(new C.CodeUnits(char), t1._eval$1("String(ListBase.E)")._as(B.code___toFormattedChar$closure()), t1._eval$1("MappedListIterable<ListBase.E,String>")).join$0(0);
      return new B.SingleCharacterParser(new B.SingleCharPredicate(char.charCodeAt(0)), '"' + t1 + '" expected');
    },
    SingleCharPredicate: function SingleCharPredicate(t0) {
      this.value = t0;
    },
    ConstantCharPredicate: function ConstantCharPredicate(t0) {
      this.constant = t0;
    },
    LookupCharPredicate: function LookupCharPredicate(t0, t1, t2) {
      this.start = t0;
      this.stop = t1;
      this.bits = t2;
    },
    NotCharacterPredicate: function NotCharacterPredicate(t0) {
      this.predicate = t0;
    },
    optimizedRanges(ranges) {
      var mergedRanges, t1, _i, thisRange, lastRange, matchingCount, t2, t3,
        sortedRanges = C.List_List$of(type$.Iterable_RangeCharPredicate._as(ranges), false, type$.RangeCharPredicate);
      D.JSArray_methods.sort$1(sortedRanges, new B.optimizedRanges_closure());
      mergedRanges = C._setArrayType([], type$.JSArray_RangeCharPredicate);
      for (t1 = sortedRanges.length, _i = 0; _i < t1; ++_i) {
        thisRange = sortedRanges[_i];
        if (mergedRanges.length === 0)
          D.JSArray_methods.add$1(mergedRanges, thisRange);
        else {
          lastRange = D.JSArray_methods.get$last(mergedRanges);
          if (lastRange.stop + 1 >= thisRange.start)
            D.JSArray_methods.$indexSet(mergedRanges, mergedRanges.length - 1, new B.RangeCharPredicate(lastRange.start, thisRange.stop));
          else
            D.JSArray_methods.add$1(mergedRanges, thisRange);
        }
      }
      matchingCount = D.JSArray_methods.fold$1$2(mergedRanges, 0, new B.optimizedRanges_closure0(), type$.int);
      if (matchingCount === 0)
        return A.ConstantCharPredicate_false;
      else if (matchingCount - 1 === 65535)
        return A.ConstantCharPredicate_true;
      else {
        t1 = mergedRanges.length;
        if (t1 === 1) {
          if (0 >= t1)
            return C.ioore(mergedRanges, 0);
          t1 = mergedRanges[0];
          t2 = t1.start;
          return t2 === t1.stop ? new B.SingleCharPredicate(t2) : t1;
        } else {
          t1 = D.JSArray_methods.get$first(mergedRanges);
          t2 = D.JSArray_methods.get$last(mergedRanges);
          t3 = D.JSInt_methods._shrOtherPositive$1(D.JSArray_methods.get$last(mergedRanges).stop - D.JSArray_methods.get$first(mergedRanges).start + 1 + 31, 5);
          t1 = new B.LookupCharPredicate(t1.start, t2.stop, new Uint32Array(t3));
          t1.LookupCharPredicate$1(mergedRanges);
          return t1;
        }
      }
    },
    optimizedRanges_closure: function optimizedRanges_closure() {
    },
    optimizedRanges_closure0: function optimizedRanges_closure0() {
    },
    pattern(element, message) {
      var t2,
        t1 = $.$get$_pattern().parseOn$1(new B.Context1(element, 0));
      t1 = t1.get$value(t1);
      if (message == null) {
        t2 = type$.CodeUnits;
        t2 = "[" + new C.MappedListIterable(new C.CodeUnits(element), t2._eval$1("String(ListBase.E)")._as(B.code___toFormattedChar$closure()), t2._eval$1("MappedListIterable<ListBase.E,String>")).join$0(0) + "] expected";
      } else
        t2 = message;
      return new B.SingleCharacterParser(t1, t2);
    },
    _single_closure: function _single_closure() {
    },
    _range_closure: function _range_closure() {
    },
    _pattern_closure: function _pattern_closure() {
    },
    CharacterPredicate: function CharacterPredicate() {
    },
    RangeCharPredicate: function RangeCharPredicate(t0, t1) {
      this.start = t0;
      this.stop = t1;
    },
    WhitespaceCharPredicate: function WhitespaceCharPredicate() {
    },
    ChoiceIterableExtension_toChoiceParser(_this, failureJoiner, $R) {
      var t1 = failureJoiner == null ? B.failure_joiner__selectLast$closure() : failureJoiner;
      return new B.ChoiceParser(t1, C.List_List$of(_this, false, $R._eval$1("Parser<0>")), $R._eval$1("ChoiceParser<0>"));
    },
    ChoiceParser$(children, failureJoiner, $R) {
      var t1 = failureJoiner == null ? B.failure_joiner__selectLast$closure() : failureJoiner;
      return new B.ChoiceParser(t1, C.List_List$of(children, false, $R._eval$1("Parser<0>")), $R._eval$1("ChoiceParser<0>"));
    },
    ChoiceParser: function ChoiceParser(t0, t1, t2) {
      this.failureJoiner = t0;
      this.children = t1;
      this.$ti = t2;
    },
    DelegateParser: function DelegateParser() {
    },
    seq2(parser1, parser2, R1, R2) {
      return new B.SequenceParser2(parser1, parser2, R1._eval$1("@<0>")._bind$1(R2)._eval$1("SequenceParser2<1,2>"));
    },
    SequenceParser2$(parser1, parser2, R1, R2) {
      return new B.SequenceParser2(parser1, parser2, R1._eval$1("@<0>")._bind$1(R2)._eval$1("SequenceParser2<1,2>"));
    },
    RecordParserExtension2_map2(_this, callback, T1, T2, $R) {
      return B.MapParserExtension_map(_this, new B.RecordParserExtension2_map2_closure(callback, T1, T2, $R), false, T1._eval$1("@<0>")._bind$1(T2)._eval$1("+(1,2)"), $R);
    },
    SequenceParser2: function SequenceParser2(t0, t1, t2) {
      this.parser1 = t0;
      this.parser2 = t1;
      this.$ti = t2;
    },
    RecordParserExtension2_map2_closure: function RecordParserExtension2_map2_closure(t0, t1, t2, t3) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.R = t3;
    },
    seq3(parser1, parser2, parser3, R1, R2, R3) {
      return new B.SequenceParser3(parser1, parser2, parser3, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._eval$1("SequenceParser3<1,2,3>"));
    },
    SequenceParser3$(parser1, parser2, parser3, R1, R2, R3) {
      return new B.SequenceParser3(parser1, parser2, parser3, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._eval$1("SequenceParser3<1,2,3>"));
    },
    RecordParserExtension3_map3(_this, callback, T1, T2, T3, $R) {
      return B.MapParserExtension_map(_this, new B.RecordParserExtension3_map3_closure(callback, T1, T2, T3, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._eval$1("+(1,2,3)"), $R);
    },
    SequenceParser3: function SequenceParser3(t0, t1, t2, t3) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.$ti = t3;
    },
    RecordParserExtension3_map3_closure: function RecordParserExtension3_map3_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.R = t4;
    },
    seq4(parser1, parser2, parser3, parser4, R1, R2, R3, R4) {
      return new B.SequenceParser4(parser1, parser2, parser3, parser4, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._bind$1(R4)._eval$1("SequenceParser4<1,2,3,4>"));
    },
    RecordParserExtension4_map4(_this, callback, T1, T2, T3, T4, $R) {
      return B.MapParserExtension_map(_this, new B.RecordParserExtension4_map4_closure(callback, T1, T2, T3, T4, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._bind$1(T4)._eval$1("+(1,2,3,4)"), $R);
    },
    SequenceParser4: function SequenceParser4(t0, t1, t2, t3, t4) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.parser4 = t3;
      _.$ti = t4;
    },
    RecordParserExtension4_map4_closure: function RecordParserExtension4_map4_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.T4 = t4;
      _.R = t5;
    },
    seq5(parser1, parser2, parser3, parser4, parser5, R1, R2, R3, R4, R5) {
      return new B.SequenceParser5(parser1, parser2, parser3, parser4, parser5, R1._eval$1("@<0>")._bind$1(R2)._bind$1(R3)._bind$1(R4)._bind$1(R5)._eval$1("SequenceParser5<1,2,3,4,5>"));
    },
    RecordParserExtension5_map5(_this, callback, T1, T2, T3, T4, T5, $R) {
      return B.MapParserExtension_map(_this, new B.RecordParserExtension5_map5_closure(callback, T1, T2, T3, T4, T5, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._bind$1(T4)._bind$1(T5)._eval$1("+(1,2,3,4,5)"), $R);
    },
    SequenceParser5: function SequenceParser5(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.parser4 = t3;
      _.parser5 = t4;
      _.$ti = t5;
    },
    RecordParserExtension5_map5_closure: function RecordParserExtension5_map5_closure(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.T4 = t4;
      _.T5 = t5;
      _.R = t6;
    },
    RecordParserExtension8_map8(_this, callback, T1, T2, T3, T4, T5, T6, T7, T8, $R) {
      return B.MapParserExtension_map(_this, new B.RecordParserExtension8_map8_closure(callback, T1, T2, T3, T4, T5, T6, T7, T8, $R), false, T1._eval$1("@<0>")._bind$1(T2)._bind$1(T3)._bind$1(T4)._bind$1(T5)._bind$1(T6)._bind$1(T7)._bind$1(T8)._eval$1("+(1,2,3,4,5,6,7,8)"), $R);
    },
    SequenceParser8: function SequenceParser8(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.parser1 = t0;
      _.parser2 = t1;
      _.parser3 = t2;
      _.parser4 = t3;
      _.parser5 = t4;
      _.parser6 = t5;
      _.parser7 = t6;
      _.parser8 = t7;
      _.$ti = t8;
    },
    RecordParserExtension8_map8_closure: function RecordParserExtension8_map8_closure(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.callback = t0;
      _.T1 = t1;
      _.T2 = t2;
      _.T3 = t3;
      _.T4 = t4;
      _.T5 = t5;
      _.T6 = t6;
      _.T7 = t7;
      _.T8 = t8;
      _.R = t9;
    },
    ListParser: function ListParser() {
    },
    OptionalParserExtension_optional(_this, $R) {
      return new B.OptionalParser(null, _this, $R._eval$1("OptionalParser<0?>"));
    },
    OptionalParser: function OptionalParser(t0, t1, t2) {
      this.otherwise = t0;
      this.delegate = t1;
      this.$ti = t2;
    },
    SkipParser: function SkipParser(t0, t1, t2, t3) {
      var _ = this;
      _.before = t0;
      _.after = t1;
      _.delegate = t2;
      _.$ti = t3;
    },
    EpsilonParser: function EpsilonParser(t0, t1) {
      this.result = t0;
      this.$ti = t1;
    },
    NewlineParser: function NewlineParser(t0) {
      this.message = t0;
    },
    any() {
      return new B.AnyCharacterParser("input expected");
    },
    AnyCharacterParser: function AnyCharacterParser(t0) {
      this.message = t0;
    },
    SingleCharacterParser: function SingleCharacterParser(t0, t1) {
      this.predicate = t0;
      this.message = t1;
    },
    PredicateParser: function PredicateParser(t0, t1, t2) {
      this.length = t0;
      this.predicate = t1;
      this.message = t2;
    },
    PredicateStringExtension_toParser(_this) {
      var t1 = _this.length;
      if (t1 === 0)
        return new B.EpsilonParser(_this, type$.EpsilonParser_String);
      else if (t1 === 1) {
        t1 = B.char(_this, null);
        return t1;
      } else {
        t1 = B.string(_this, null);
        return t1;
      }
    },
    string(element, message) {
      return new B.PredicateParser(element.length, new B.string_closure(element), '"' + element + '" expected');
    },
    string_closure: function string_closure(t0) {
      this.element = t0;
    },
    RepeatingCharacterParserExtension_repeatString(_this, min, max, message) {
      return new B.RepeatingCharacterParser(_this.predicate, message, min, max);
    },
    RepeatingCharacterParser: function RepeatingCharacterParser(t0, t1, t2, t3) {
      var _ = this;
      _.predicate = t0;
      _.message = t1;
      _.min = t2;
      _.max = t3;
    },
    LazyRepeatingParser: function LazyRepeatingParser(t0, t1, t2, t3, t4) {
      var _ = this;
      _.limit = t0;
      _.min = t1;
      _.max = t2;
      _.delegate = t3;
      _.$ti = t4;
    },
    LimitedRepeatingParser: function LimitedRepeatingParser() {
    },
    PossessiveRepeatingParserExtension_star(_this, $R) {
      return B.PossessiveRepeatingParserExtension_repeat(_this, 0, 9007199254740991, $R);
    },
    PossessiveRepeatingParserExtension_repeat(_this, min, max, $R) {
      return new B.PossessiveRepeatingParser(min, max, _this, $R._eval$1("PossessiveRepeatingParser<0>"));
    },
    PossessiveRepeatingParser: function PossessiveRepeatingParser(t0, t1, t2, t3) {
      var _ = this;
      _.min = t0;
      _.max = t1;
      _.delegate = t2;
      _.$ti = t3;
    },
    RepeatingParser: function RepeatingParser() {
    },
    ProxyProvider$(child, create, update, $T, $R) {
      var _null = null;
      return new B.ProxyProvider(new A7._CreateInheritedProvider(create, new B.ProxyProvider_closure(update, $R, $T), _null, _null, _null, $R._eval$1("_CreateInheritedProvider<0>")), _null, _null, child, _null, $T._eval$1("@<0>")._bind$1($R)._eval$1("ProxyProvider<1,2>"));
    },
    ProxyProvider0: function ProxyProvider0() {
    },
    ProxyProvider: function ProxyProvider(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._provider$_delegate = t0;
      _._lazy = t1;
      _.builder = t2;
      _._nested$_child = t3;
      _.key = t4;
      _.$ti = t5;
    },
    ProxyProvider_closure: function ProxyProvider_closure(t0, t1, t2) {
      this.update = t0;
      this.R = t1;
      this.T = t2;
    },
    Selector2$(builder, selector, $A, $B, $S) {
      return new B.Selector2(builder, new B.Selector2_closure(selector, $S, $A, $B), null, null, null, $A._eval$1("@<0>")._bind$1($B)._bind$1($S)._eval$1("Selector2<1,2,3>"));
    },
    Selector0: function Selector0() {
    },
    _Selector0State: function _Selector0State(t0) {
      var _ = this;
      _._framework$_element = _._widget = _.oldWidget = _.cache = _.value = null;
      _.$ti = t0;
    },
    _Selector0State_buildWithChild_closure: function _Selector0State_buildWithChild_closure(t0, t1, t2) {
      this.$this = t0;
      this.selected = t1;
      this.child = t2;
    },
    Selector2: function Selector2(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.builder = t0;
      _.selector = t1;
      _._shouldRebuild = t2;
      _._nested$_child = t3;
      _.key = t4;
      _.$ti = t5;
    },
    Selector2_closure: function Selector2_closure(t0, t1, t2, t3) {
      var _ = this;
      _.selector = t0;
      _.S = t1;
      _.A = t2;
      _.B = t3;
    },
    Tuple2: function Tuple2(t0, t1, t2) {
      this.item1 = t0;
      this.item2 = t1;
      this.$ti = t2;
    },
    Tuple3: function Tuple3(t0, t1, t2, t3) {
      var _ = this;
      _.item1 = t0;
      _.item2 = t1;
      _.item3 = t2;
      _.$ti = t3;
    },
    RenderWebVectorGraphic: function RenderWebVectorGraphic(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._html_render_vector_graphics$_assetKey = t0;
      _._html_render_vector_graphics$_pictureInfo = t1;
      _._html_render_vector_graphics$_colorFilter = t2;
      _._html_render_vector_graphics$_opacityValue = 1;
      _._html_render_vector_graphics$_opacity = t3;
      _._transformLayer = t4;
      _._html_render_vector_graphics$_opacityHandle = t5;
      _._filterLayer = t6;
      _._html_render_vector_graphics$_transform = t7;
      _._layoutCacheStorage = t8;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t9;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderWebVectorGraphic_paint_closure: function RenderWebVectorGraphic_paint_closure(t0) {
      this.$this = t0;
    },
    RenderWebVectorGraphic_paint__closure: function RenderWebVectorGraphic_paint__closure(t0) {
      this.$this = t0;
    },
    RenderWebVectorGraphic_paint___closure: function RenderWebVectorGraphic_paint___closure(t0) {
      this.$this = t0;
    },
    decodeVectorGraphics(data, clipViewbox, loader, locale, textDirection) {
      var process, e, s, t1, exception, onError = null;
      try {
        process = new B.decodeVectorGraphics_process(loader, locale, textDirection, clipViewbox, onError, data);
        t1 = process.call$0();
        return t1;
      } catch (exception) {
        e = C.unwrapException(exception);
        s = C.getTraceFromException(exception);
        t1 = $._pendingDecodes.remove$1(0, loader);
        if (t1 != null)
          t1.completeError$2(e, s);
        throw C.wrapException(new B.VectorGraphicsDecodeException(loader, e));
      }
    },
    FlutterVectorGraphicsListener$_(_id, _pictureFactory, _recorder, _canvas, _locale, _textDirection, _clipViewbox, onError) {
      var t1 = type$.int;
      return new B.FlutterVectorGraphicsListener(_id, _pictureFactory, _locale, _textDirection, _clipViewbox, _recorder, _canvas, C._setArrayType([], type$.JSArray_Paint), C._setArrayType([], type$.JSArray_Path_2), C._setArrayType([], type$.JSArray_Shader), C._setArrayType([], type$.JSArray__TextConfig), C._setArrayType([], type$.JSArray__TextPosition), C._setArrayType([], type$.JSArray_Future_void), C.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Image), C.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PatternState), D.Size_0_0);
    },
    PictureInfo: function PictureInfo(t0, t1) {
      this.picture = t0;
      this.size = t1;
    },
    decodeVectorGraphics_process: function decodeVectorGraphics_process(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.loader = t0;
      _.locale = t1;
      _.textDirection = t2;
      _.clipViewbox = t3;
      _.onError = t4;
      _.data = t5;
    },
    decodeVectorGraphics_process_closure: function decodeVectorGraphics_process_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.data = t1;
      this.listener = t2;
    },
    _PatternConfig: function _PatternConfig(t0, t1, t2, t3) {
      var _ = this;
      _._patternId = t0;
      _._listener0$_width = t1;
      _._listener0$_height = t2;
      _._listener0$_transform = t3;
    },
    _PatternState: function _PatternState() {
      this.recorder = this.shader = this.canvas = null;
    },
    _DefaultPictureFactory: function _DefaultPictureFactory() {
    },
    FlutterVectorGraphicsListener: function FlutterVectorGraphicsListener(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._listener0$_id = t0;
      _._pictureFactory = t1;
      _._listener0$_locale = t2;
      _._listener0$_textDirection = t3;
      _._clipViewbox = t4;
      _._recorder = t5;
      _._listener0$_canvas = t6;
      _._paints = t7;
      _._paths = t8;
      _._shaders = t9;
      _._textConfig = t10;
      _._textPositions = t11;
      _._listener0$_pendingImages = t12;
      _._images = t13;
      _._patterns = t14;
      _._currentPath = null;
      _._listener0$_size = t15;
      _._accumulatedTextPositionX = null;
      _._textPositionY = 0;
      _._currentPattern = _._textTransform = null;
    },
    FlutterVectorGraphicsListener_onDrawText_draw: function FlutterVectorGraphicsListener_onDrawText_draw(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.patternId = t2;
      _.textConfig = t3;
      _.dx = t4;
      _.dy = t5;
    },
    FlutterVectorGraphicsListener_onImage_closure: function FlutterVectorGraphicsListener_onImage_closure(t0) {
      this.data = t0;
    },
    FlutterVectorGraphicsListener_onImage__closure: function FlutterVectorGraphicsListener_onImage__closure() {
    },
    FlutterVectorGraphicsListener_onImage_closure0: function FlutterVectorGraphicsListener_onImage_closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.cacheCompleter = t1;
      _.listener = t2;
      _.imageId = t3;
      _.completer = t4;
    },
    FlutterVectorGraphicsListener_onImage_closure1: function FlutterVectorGraphicsListener_onImage_closure1(t0, t1, t2, t3) {
      var _ = this;
      _.completer = t0;
      _.cacheCompleter = t1;
      _.listener = t2;
      _.onError = t3;
    },
    _TextPosition: function _TextPosition(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.x = t0;
      _.y = t1;
      _.dx = t2;
      _.dy = t3;
      _.reset = t4;
      _.transform = t5;
    },
    _TextConfig: function _TextConfig(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.text = t0;
      _.fontFamily = t1;
      _.fontSize = t2;
      _.xAnchorMultiplier = t3;
      _.fontWeight = t4;
      _.decoration = t5;
      _.decorationStyle = t6;
      _.decorationColor = t7;
    },
    VectorGraphicsDecodeException: function VectorGraphicsDecodeException(t0, t1) {
      this.source = t0;
      this.originalException = t1;
    },
    BytesLoader: function BytesLoader() {
    },
    RasterKey: function RasterKey(t0, t1, t2) {
      this.assetKey = t0;
      this.width = t1;
      this.height = t2;
    },
    RasterData: function RasterData(t0, t1, t2) {
      this._render_vector_graphic$_image = t0;
      this.key = t1;
      this.count = t2;
    },
    RenderVectorGraphic: function RenderVectorGraphic(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._assetKey = t0;
      _._render_vector_graphic$_pictureInfo = t1;
      _._render_vector_graphic$_colorFilter = t2;
      _._render_vector_graphic$_devicePixelRatio = t3;
      _._opacityValue = 1;
      _._render_vector_graphic$_opacity = t4;
      _._render_vector_graphic$_scale = t5;
      _._rasterData = null;
      _._layoutCacheStorage = t6;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderPictureVectorGraphic: function RenderPictureVectorGraphic(t0, t1, t2, t3, t4) {
      var _ = this;
      _._render_vector_graphic$_pictureInfo = t0;
      _._render_vector_graphic$_colorFilter = t1;
      _._opacityValue = 1;
      _._render_vector_graphic$_opacity = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderingStrategy: function RenderingStrategy(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    VectorGraphic: function VectorGraphic(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.loader = t0;
      _.width = t1;
      _.height = t2;
      _.fit = t3;
      _.alignment = t4;
      _.matchTextDirection = t5;
      _.semanticsLabel = t6;
      _.excludeFromSemantics = t7;
      _.clipBehavior = t8;
      _.placeholderBuilder = t9;
      _.errorBuilder = t10;
      _.transitionDuration = t11;
      _.colorFilter = t12;
      _.opacity = t13;
      _.strategy = t14;
      _.clipViewbox = t15;
      _.key = t16;
    },
    _PictureData: function _PictureData(t0, t1, t2) {
      this.pictureInfo = t0;
      this.key = t1;
      this.count = t2;
    },
    _PictureKey: function _PictureKey(t0, t1, t2, t3) {
      var _ = this;
      _.cacheKey = t0;
      _.locale = t1;
      _.textDirection = t2;
      _.clipViewbox = t3;
    },
    _VectorGraphicWidgetState: function _VectorGraphicWidgetState() {
      var _ = this;
      _._framework$_element = _._widget = _.textDirection = _.locale = _._stackTrace = _._vector_graphics$_error = _._pictureInfo = null;
    },
    _VectorGraphicWidgetState__loadPicture_closure: function _VectorGraphicWidgetState__loadPicture_closure(t0, t1) {
      this.key = t0;
      this.loader = t1;
    },
    _VectorGraphicWidgetState__loadPicture_closure0: function _VectorGraphicWidgetState__loadPicture_closure0(t0) {
      this.key = t0;
    },
    _VectorGraphicWidgetState__loadPicture_closure1: function _VectorGraphicWidgetState__loadPicture_closure1(t0) {
      this.key = t0;
    },
    _VectorGraphicWidgetState__handleError_closure: function _VectorGraphicWidgetState__handleError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _VectorGraphicWidgetState__loadAssetBytes_closure: function _VectorGraphicWidgetState__loadAssetBytes_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _VectorGraphicWidgetState__loadAssetBytes_closure0: function _VectorGraphicWidgetState__loadAssetBytes_closure0(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _RawVectorGraphicWidget: function _RawVectorGraphicWidget(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.pictureInfo = t0;
      _.colorFilter = t1;
      _.scale = t2;
      _.opacity = t3;
      _.assetKey = t4;
      _.child = t5;
      _.key = t6;
    },
    _RawWebVectorGraphicWidget: function _RawWebVectorGraphicWidget(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.pictureInfo = t0;
      _.colorFilter = t1;
      _.opacity = t2;
      _.assetKey = t3;
      _.child = t4;
      _.key = t5;
    },
    _RawPictureVectorGraphicWidget: function _RawPictureVectorGraphicWidget(t0, t1, t2, t3, t4) {
      var _ = this;
      _.pictureInfo = t0;
      _.colorFilter = t1;
      _.opacity = t2;
      _.child = t3;
      _.key = t4;
    },
    DecodeResponse: function DecodeResponse(t0, t1) {
      this.complete = t0;
      this._vector_graphics_codec$_buffer = t1;
    },
    VectorGraphicsCodec: function VectorGraphicsCodec() {
    },
    VectorGraphicsCodecListener: function VectorGraphicsCodecListener() {
    },
    _CurrentSection: function _CurrentSection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    VectorGraphicsBuffer: function VectorGraphicsBuffer(t0, t1, t2) {
      var _ = this;
      _._vector_graphics_codec$_buffer = t0;
      _._vector_graphics_codec$_isDone = false;
      _._vector_graphics_codec$_eightBytes = t1;
      _.__VectorGraphicsBuffer__eightBytesAsList_A = $;
      _._nextPatternId = _._nextImageId = _._nextTextPositionId = _._nextTextId = _._nextShaderId = _._nextPathId = _._nextPaintId = 0;
      _._addedCommandTag = false;
      _._decodePhase = t2;
    },
    _ReadBuffer: function _ReadBuffer(t0) {
      this.data = t0;
      this._vector_graphics_codec$_position = 0;
    },
    DrawCommandBuilder: function DrawCommandBuilder(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._draw_command_builder$_paints = t0;
      _._draw_command_builder$_paths = t1;
      _._draw_command_builder$_text = t2;
      _._draw_command_builder$_images = t3;
      _._drawImages = t4;
      _._vertices = t5;
      _._commands = t6;
      _._draw_command_builder$_patterns = t7;
      _._patternData = t8;
      _._draw_command_builder$_textPositions = t9;
    },
    DrawCommandBuilder__getOrGenerateId_closure: function DrawCommandBuilder__getOrGenerateId_closure(t0) {
      this.map = t0;
    },
    Point_lerp(a, b, t) {
      return new B.Point(B.lerpDouble0(a.x, b.x, t), B.lerpDouble0(a.y, b.y, t));
    },
    Point_distance(a, b) {
      var x = a.x - b.x,
        y = a.y - b.y;
      return Math.sqrt(x * x + y * y);
    },
    Point: function Point(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    Rect0: function Rect0(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    ImageData: function ImageData(t0, t1) {
      this.data = t0;
      this.format = t1;
    },
    DrawImageData: function DrawImageData(t0, t1, t2) {
      this.id = t0;
      this.rect = t1;
      this.transform = t2;
    },
    AffineMatrix$(a, b, c, d, e, f, m4_10) {
      return new B.AffineMatrix(a, b, c, d, e, f, m4_10 == null ? a : m4_10);
    },
    _transformRect(transform, rect) {
      var t2, wx, t3, hx, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, ury, t4, llx, lly, lrx, lry,
        x = rect.left,
        y = rect.top,
        w = rect.right - x,
        h = rect.bottom - y,
        t1 = transform.length;
      if (0 >= t1)
        return C.ioore(transform, 0);
      t2 = transform[0];
      wx = t2 * w;
      if (4 >= t1)
        return C.ioore(transform, 4);
      t3 = transform[4];
      hx = t3 * h;
      if (12 >= t1)
        return C.ioore(transform, 12);
      rx = t2 * x + t3 * y + transform[12];
      t3 = transform[1];
      wy = t3 * w;
      t2 = transform[5];
      hy = t2 * h;
      if (13 >= t1)
        return C.ioore(transform, 13);
      ry = t3 * x + t2 * y + transform[13];
      t2 = transform[3];
      t3 = false;
      if (t2 === 0)
        if (transform[7] === 0) {
          if (15 >= t1)
            return C.ioore(transform, 15);
          t3 = transform[15] === 1;
        }
      if (t3) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return new B.Rect0(left, $top, right, bottom);
      } else {
        t3 = transform[7];
        hw = t3 * h;
        if (15 >= t1)
          return C.ioore(transform, 15);
        rw = t2 * x + t3 * y + transform[15];
        ulx = rx / rw;
        uly = ry / rw;
        t3 = rx + wx;
        t2 = rw + t2 * w;
        urx = t3 / t2;
        t1 = ry + wy;
        ury = t1 / t2;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t2 += hw;
        lrx = (t3 + hx) / t2;
        lry = (t1 + hy) / t2;
        return new B.Rect0(B._min4(ulx, urx, llx, lrx), B._min4(uly, ury, lly, lry), B._max4(ulx, urx, llx, lrx), B._max4(uly, ury, lly, lry));
      }
    },
    _min4(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    _max4(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    AffineMatrix: function AffineMatrix(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
      _.e = t4;
      _.f = t5;
      _._m4_10 = t6;
    },
    CubicToCommand_subdivide(start, control1, control2, end, t) {
      var ab = B.Point_lerp(start, control1, t),
        bc = B.Point_lerp(control1, control2, t),
        cd = B.Point_lerp(control2, end, t),
        abc = B.Point_lerp(ab, bc, t),
        bcd = B.Point_lerp(bc, cd, t);
      return C._setArrayType([start, ab, abc, B.Point_lerp(abc, bcd, t), bcd, cd, end], type$.JSArray_Point);
    },
    Path$(commands, fillType) {
      var t1 = C._setArrayType([], type$.JSArray_PathCommand);
      D.JSArray_methods.addAll$1(t1, commands);
      return new B.Path(t1, fillType);
    },
    parseSvgPathData(svg, type) {
      var parser, t1, pathBuilder, normalizer, t2, t3;
      if (svg === "")
        return B.Path$(A.List_empty26, type == null ? A.PathFillType_00 : type);
      parser = new B.SvgPathStringSource(svg, A.SvgPathSegType_0, svg.length);
      parser._skipOptionalSvgSpaces$0();
      t1 = C._setArrayType([], type$.JSArray_PathCommand);
      pathBuilder = new B.PathBuilder(t1, type == null ? A.PathFillType_00 : type);
      normalizer = new B.SvgPathNormalizer(A._PathOffset_0_0, A._PathOffset_0_0, A._PathOffset_0_0, A.SvgPathSegType_0);
      for (t1 = parser.parseSegments$0(), t2 = t1.$ti, t1 = new C._SyncStarIterator(t1._outerHelper(), t2._eval$1("_SyncStarIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._async$_current;
        normalizer.emitSegment$2(t3 == null ? t2._as(t3) : t3, pathBuilder);
      }
      return pathBuilder.toPath$0();
    },
    PathFillType0: function PathFillType0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PathCommandType: function PathCommandType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PathCommand: function PathCommand() {
    },
    LineToCommand: function LineToCommand(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.type = t2;
    },
    MoveToCommand: function MoveToCommand(t0, t1, t2) {
      this.x = t0;
      this.y = t1;
      this.type = t2;
    },
    CubicToCommand: function CubicToCommand(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.x1 = t0;
      _.y1 = t1;
      _.x2 = t2;
      _.y2 = t3;
      _.x3 = t4;
      _.y3 = t5;
      _.type = t6;
    },
    CubicToCommand_computeLength_compute: function CubicToCommand_computeLength_compute() {
    },
    CloseCommand: function CloseCommand(t0) {
      this.type = t0;
    },
    PathBuilder: function PathBuilder(t0, t1) {
      this._path$_commands = t0;
      this.__PathBuilder_fillType_A = t1;
    },
    Path: function Path(t0, t1) {
      this._path$_commands = t0;
      this.fillType = t1;
    },
    _CircularIntervalList: function _CircularIntervalList(t0) {
      this._vals = t0;
      this._path$_idx = 0;
    },
    _PathDasher: function _PathDasher(t0, t1, t2, t3) {
      var _ = this;
      _._path$_intervals = t0;
      _.___PathDasher_length_A = $;
      _.currentPoint = t1;
      _.currentSubpathPoint = t2;
      _.___PathDasher_draw_A = $;
      _._dashedCommands = t3;
    },
    PatternData: function PatternData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.x = t0;
      _.y = t1;
      _.width = t2;
      _.height = t3;
      _.transform = t4;
    },
    ImageSizeData_ImageSizeData$fromBytes(bytes) {
      var t2, t3, t4,
        t1 = bytes.length;
      if (t1 === 0)
        throw C.wrapException(C.ArgumentError$("bytes was empty", null));
      t2 = bytes.byteLength;
      t3 = false;
      if (t2 > 20) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 137) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 80) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            if (bytes[2] === 78) {
              if (3 >= t1)
                return C.ioore(bytes, 3);
              if (bytes[3] === 71) {
                if (4 >= t1)
                  return C.ioore(bytes, 4);
                if (bytes[4] === 13) {
                  if (5 >= t1)
                    return C.ioore(bytes, 5);
                  if (bytes[5] === 10) {
                    if (6 >= t1)
                      return C.ioore(bytes, 6);
                    if (bytes[6] === 26) {
                      if (7 >= t1)
                        return C.ioore(bytes, 7);
                      t3 = bytes[7] === 10;
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (t3) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new B.PngImageSizeData(t1.getUint32(16, false), t1.getUint32(20, false));
      }
      t3 = false;
      if (t2 > 8) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 71) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 73) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            if (bytes[2] === 70) {
              if (3 >= t1)
                return C.ioore(bytes, 3);
              if (bytes[3] === 56) {
                if (4 >= t1)
                  return C.ioore(bytes, 4);
                t4 = bytes[4];
                if (t4 === 55 || t4 === 57) {
                  if (5 >= t1)
                    return C.ioore(bytes, 5);
                  t3 = bytes[5] === 97;
                }
              }
            }
          }
        }
      }
      if (t3) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new B.GifImageSizeData(t1.getUint16(6, true), t1.getUint16(8, true));
      }
      t3 = false;
      if (t2 > 12) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 255) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 216) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            t3 = bytes[2] === 255;
          }
        }
      }
      if (t3)
        return B.JpegImageSizeData_JpegImageSizeData$_fromBytes(J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes)));
      t3 = false;
      if (t2 > 28) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 82) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          if (bytes[1] === 73) {
            if (2 >= t1)
              return C.ioore(bytes, 2);
            if (bytes[2] === 70) {
              if (3 >= t1)
                return C.ioore(bytes, 3);
              if (bytes[3] === 70) {
                if (8 >= t1)
                  return C.ioore(bytes, 8);
                if (bytes[8] === 87) {
                  if (9 >= t1)
                    return C.ioore(bytes, 9);
                  if (bytes[9] === 69) {
                    if (10 >= t1)
                      return C.ioore(bytes, 10);
                    if (bytes[10] === 66) {
                      if (11 >= t1)
                        return C.ioore(bytes, 11);
                      t3 = bytes[11] === 80;
                    }
                  }
                }
              }
            }
          }
        }
      }
      if (t3) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new B.WebPImageSizeData(t1.getUint16(26, true), t1.getUint16(28, true));
      }
      t3 = false;
      if (t2 > 22) {
        if (0 >= t1)
          return C.ioore(bytes, 0);
        if (bytes[0] === 66) {
          if (1 >= t1)
            return C.ioore(bytes, 1);
          t1 = bytes[1] === 77;
        } else
          t1 = t3;
      } else
        t1 = t3;
      if (t1) {
        t1 = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(bytes));
        return new B.BmpImageSizeData(t1.getInt32(18, true), t1.getInt32(22, true));
      }
      throw C.wrapException(C.ArgumentError$("unknown image type", null));
    },
    JpegImageSizeData_JpegImageSizeData$_fromBytes(data) {
      var t1,
        index = 4 + data.getUint16(4, false);
      for (; index < data.byteLength;) {
        if (data.getUint8(index) !== 255)
          throw C.wrapException(C.StateError$("Invalid JPEG file"));
        if (D.JSArray_methods.contains$1(A.List_192_193_194, data.getUint8(index + 1))) {
          t1 = data.getUint16(index + 5, false);
          return new B.JpegImageSizeData(data.getUint16(index + 7, false), t1);
        }
        index += 2;
        index += data.getUint16(index, false);
      }
      throw C.wrapException(C.StateError$("Invalid JPEG"));
    },
    ImageFormat: function ImageFormat(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ImageSizeData: function ImageSizeData() {
    },
    PngImageSizeData: function PngImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    GifImageSizeData: function GifImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    JpegImageSizeData: function JpegImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    WebPImageSizeData: function WebPImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    BmpImageSizeData: function BmpImageSizeData(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    Color$fromRGBO0(r, g, b, opacity) {
      return new B.Color0(((D.JSNumber_methods._tdivFast$1(opacity * 255, 1) & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color$fromARGB0(a, r, g, b) {
      return new B.Color0(((a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255) >>> 0);
    },
    Color0: function Color0(t0) {
      this.value = t0;
    },
    Gradient: function Gradient() {
    },
    LinearGradient0: function LinearGradient0(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.from = t0;
      _.to = t1;
      _.id = t2;
      _.colors = t3;
      _.offsets = t4;
      _.tileMode = t5;
      _.unitMode = t6;
      _.transform = t7;
    },
    GradientUnitMode: function GradientUnitMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RadialGradient: function RadialGradient(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.center = t0;
      _.radius = t1;
      _.focalPoint = t2;
      _.id = t3;
      _.colors = t4;
      _.offsets = t5;
      _.tileMode = t6;
      _.unitMode = t7;
      _.transform = t8;
    },
    Paint: function Paint(t0, t1, t2) {
      this.blendMode = t0;
      this.stroke = t1;
      this.fill = t2;
    },
    Stroke: function Stroke(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.color = t0;
      _.shader = t1;
      _.cap = t2;
      _.join = t3;
      _.miterLimit = t4;
      _.width = t5;
    },
    Fill: function Fill(t0, t1) {
      this.color = t0;
      this.shader = t1;
    },
    BlendMode0: function BlendMode0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PaintingStyle0: function PaintingStyle0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    StrokeCap0: function StrokeCap0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    StrokeJoin0: function StrokeJoin0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TileMode0: function TileMode0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextPosition0: function TextPosition0(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.x = t0;
      _.dx = t1;
      _.y = t2;
      _.dy = t3;
      _.reset = t4;
      _.transform = t5;
    },
    TextConfig: function TextConfig(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.text = t0;
      _.xAnchorMultiplier = t1;
      _.fontSize = t2;
      _.fontFamily = t3;
      _.fontWeight = t4;
      _.decoration = t5;
      _.decorationStyle = t6;
      _.decorationColor = t7;
    },
    FontWeight0: function FontWeight0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextDecorationStyle0: function TextDecorationStyle0(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextDecoration0: function TextDecoration0(t0) {
      this.mask = t0;
    },
    ViewportNode$(attributes, children, height, transform, width) {
      var t1 = children == null ? C._setArrayType([], type$.JSArray_Node) : children;
      return new B.ViewportNode(width, height, t1, attributes, transform);
    },
    ParentNode$(attributes, children, precalculatedTransform) {
      var t1 = children == null ? C._setArrayType([], type$.JSArray_Node) : children;
      return new B.ParentNode(t1, attributes, precalculatedTransform == null ? attributes.transform : precalculatedTransform);
    },
    TextPositionNode$(attributes, reset) {
      var t1 = C._setArrayType([], type$.JSArray_Node);
      return new B.TextPositionNode(reset, t1, attributes, attributes.transform);
    },
    SaveLayerNode$(attributes, children, paint) {
      return new B.SaveLayerNode(paint, children, attributes, A.AffineMatrix_qrl);
    },
    PathNode$(path, attributes) {
      return new B.PathNode(path, attributes, attributes.transform);
    },
    DeferredNode$(attributes, refId, resolver) {
      return new B.DeferredNode(refId, resolver, attributes, attributes.transform);
    },
    TextNode$(text, attributes) {
      return new B.TextNode(text, attributes, attributes.transform);
    },
    ImageNode$(data, format, attributes) {
      return new B.ImageNode(data, format, attributes, attributes.transform);
    },
    Node0: function Node0() {
    },
    _EmptyNode: function _EmptyNode() {
    },
    TransformableNode: function TransformableNode() {
    },
    AttributedNode: function AttributedNode() {
    },
    ViewportNode: function ViewportNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _._node$_children = t2;
      _.attributes = t3;
      _.transform = t4;
    },
    ParentNode: function ParentNode(t0, t1, t2) {
      this._node$_children = t0;
      this.attributes = t1;
      this.transform = t2;
    },
    TextPositionNode: function TextPositionNode(t0, t1, t2, t3) {
      var _ = this;
      _.reset = t0;
      _._node$_children = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    SaveLayerNode: function SaveLayerNode(t0, t1, t2, t3) {
      var _ = this;
      _.paint = t0;
      _._node$_children = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    ClipNode: function ClipNode(t0, t1, t2, t3) {
      var _ = this;
      _.resolver = t0;
      _.clipId = t1;
      _.child = t2;
      _.transform = t3;
    },
    MaskNode: function MaskNode(t0, t1, t2, t3, t4) {
      var _ = this;
      _.maskId = t0;
      _.child = t1;
      _.blendMode = t2;
      _.resolver = t3;
      _.transform = t4;
    },
    PathNode: function PathNode(t0, t1, t2) {
      this.path = t0;
      this.attributes = t1;
      this.transform = t2;
    },
    DeferredNode: function DeferredNode(t0, t1, t2, t3) {
      var _ = this;
      _.refId = t0;
      _.resolver = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    TextNode: function TextNode(t0, t1, t2) {
      this.text = t0;
      this.attributes = t1;
      this.transform = t2;
    },
    ImageNode: function ImageNode(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.format = t1;
      _.attributes = t2;
      _.transform = t3;
    },
    PatternNode: function PatternNode(t0, t1, t2, t3) {
      var _ = this;
      _.patternId = t0;
      _.child = t1;
      _.resolver = t2;
      _.transform = t3;
    },
    _Elements_svg(parserState, warningsAsErrors) {
      var t1, t2,
        viewBox = parserState._parseViewBox$0();
      if (parserState._parser$_root != null) {
        t1 = parserState._parentDrawables;
        t1._collection$_add$1(0, t1.$ti._precomputed1._as(new B._SvgGroupTuple("svg", B.ViewportNode$(parserState._currentAttributes, null, viewBox.height, viewBox.transform, viewBox.width))));
        return;
      }
      t1 = B.ViewportNode$(parserState._currentAttributes, null, viewBox.height, viewBox.transform, viewBox.width);
      parserState._parser$_root = t1;
      t2 = parserState._currentStartElement;
      t2.toString;
      parserState.addGroup$2(t2, t1);
      return;
    },
    _Elements_g(parserState, warningsAsErrors) {
      var $parent, group, t2, t3,
        t1 = parserState._currentStartElement;
      t1 = t1 == null ? null : t1.isSelfClosing;
      if (t1 === true)
        return;
      $parent = parserState._parentDrawables.get$last(0).drawable;
      t1 = parserState._currentAttributes;
      group = B.ParentNode$(t1, null, null);
      t2 = parserState._definitions;
      t3 = t2.get$getDrawable();
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(group, t1.clipPathId, t2.get$getClipPath(), parserState.attribute$1("mask"), t3, t2.getPattern$1(parserState), t3);
      t3 = parserState._currentStartElement;
      t3.toString;
      parserState.addGroup$2(t3, group);
      return;
    },
    _Elements_textOrTspan(parserState, warningsAsErrors) {
      var $parent, element, group, t2,
        t1 = parserState._currentStartElement;
      t1 = t1 == null ? null : t1.isSelfClosing;
      if (t1 === true)
        return;
      $parent = parserState._parentDrawables.get$last(0).drawable;
      element = parserState._currentStartElement;
      group = B.TextPositionNode$(parserState._currentAttributes, element.get$localName(0) === "text");
      t1 = parserState._definitions;
      t2 = t1.get$getDrawable();
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(group, parserState._currentAttributes.clipPathId, t1.get$getClipPath(), parserState.attribute$1("mask"), t2, t1.getPattern$1(parserState), t2);
      parserState.addGroup$2(element, group);
      return;
    },
    _Elements_symbol(parserState, warningsAsErrors) {
      var group = B.ParentNode$(parserState._currentAttributes, null, null),
        t1 = parserState._currentStartElement;
      t1.toString;
      parserState.addGroup$2(t1, group);
      return;
    },
    _Elements_pattern(parserState, warningsAsErrors) {
      var rawHeight, patternWidth, patternHeight, viewBox, t1, rawX, rawY, group, _null = null,
        attributes = parserState._currentAttributes,
        rawWidth = parserState.attribute$1("width");
      if (rawWidth == null)
        rawWidth = "";
      rawHeight = parserState.attribute$1("height");
      if (rawHeight == null)
        rawHeight = "";
      patternWidth = B.parsePatternUnitToDouble(rawWidth, "width", parserState._parser$_root);
      patternHeight = B.parsePatternUnitToDouble(rawHeight, "height", parserState._parser$_root);
      if (patternWidth == null || patternHeight == null) {
        viewBox = parserState._parseViewBox$0();
        patternWidth = viewBox.width;
        patternHeight = viewBox.height;
      }
      t1 = attributes.raw;
      rawX = t1.$index(0, "x");
      rawY = t1.$index(0, "y");
      parserState.patternIds.add$1(0, "url(#" + C.S(parserState._currentAttributes.id) + ")");
      group = B.ParentNode$(B.SvgAttributes$_(attributes.blendMode, attributes.clipPathId, attributes.clipRule, attributes.color, _null, _null, attributes.fill, attributes.fillRule, attributes.fontFamily, attributes.fontSize, attributes.fontWeight, patternHeight, attributes.href, attributes.id, t1, attributes.stroke, _null, _null, _null, _null, attributes.transform, patternWidth, B.DoubleOrPercentage_fromString(rawX), B.DoubleOrPercentage_fromString(rawY)), _null, _null);
      t1 = parserState._currentStartElement;
      t1.toString;
      parserState.addGroup$2(t1, group);
      return;
    },
    _Elements_use(parserState, warningsAsErrors) {
      var t1, t2, t3, group,
        $parent = parserState._parentDrawables.get$last(0).drawable,
        xlinkHref = parserState._currentAttributes.href;
      if (xlinkHref == null || xlinkHref.length === 0)
        return;
      t1 = B.parseTransform(parserState.attribute$1("transform"));
      if (t1 == null)
        t1 = A.AffineMatrix_qrl;
      t2 = parserState.theme;
      t3 = B.parseDoubleWithUnits(parserState.attribute$2$def("x", "0"), t2, false);
      t3.toString;
      t2 = B.parseDoubleWithUnits(parserState.attribute$2$def("y", "0"), t2, false);
      t2.toString;
      group = B.ParentNode$(A.SvgAttributes_781, null, t1.translated$2(t3, t2));
      t2 = parserState._definitions;
      t3 = t2.get$getDrawable();
      t1 = t2.get$getClipPath();
      group.addChild$4$clipResolver$maskResolver$patternResolver(B.DeferredNode$(parserState._currentAttributes, "url(" + C.S(xlinkHref) + ")", t3), t1, t3, t3);
      if ("#" + C.S(parserState._currentAttributes.id) !== xlinkHref)
        parserState.checkForIri$1(group);
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(group, parserState._currentAttributes.clipPathId, t1, parserState.attribute$1("mask"), t3, t2.getPattern$1(parserState), t3);
      return;
    },
    _Elements_parseStops(parserState, colors, offsets) {
      var t1, t2, t3, rawOpacity, stopColor, t4, rawOffset,
        _s10_ = "stop-color";
      for (t1 = parserState._readSubtree$0(), t2 = t1.$ti, t1 = new C._SyncStarIterator(t1._outerHelper(), t2._eval$1("_SyncStarIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
        t3 = t1._async$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 instanceof B.XmlEndElementEvent)
          continue;
        if (t3 instanceof B.XmlStartElementEvent) {
          rawOpacity = parserState._currentAttributes.raw.$index(0, "stop-opacity");
          if (rawOpacity == null)
            rawOpacity = "1";
          t3 = parserState._currentAttributes.raw.$index(0, _s10_);
          if (t3 == null)
            t3 = null;
          stopColor = parserState.parseColor$3$attributeName$id(t3, _s10_, parserState._currentAttributes.id);
          if (stopColor == null)
            stopColor = A.Color_4278190080;
          t3 = B.parseDouble(rawOpacity, false);
          t3.toString;
          t4 = stopColor.value;
          D.JSArray_methods.add$1(colors, B.Color$fromRGBO0(t4 >>> 16 & 255, t4 >>> 8 & 255, t4 & 255, t3));
          rawOffset = parserState._currentAttributes.raw.$index(0, "offset");
          D.JSArray_methods.add$1(offsets, B.parseDecimalOrPercentage(rawOffset == null ? "0%" : rawOffset));
        }
      }
      return;
    },
    _Elements_radialGradient(parserState, warningsAsErrors) {
      var offsets, colors, cx, cy, r, fx, fy, t2,
        unitMode = parserState.parseGradientUnitMode$0(),
        rawCx = parserState.attribute$2$def("cx", "50%"),
        rawCy = parserState.attribute$2$def("cy", "50%"),
        rawR = parserState.attribute$2$def("r", "50%"),
        rawFx = parserState.attribute$2$def("fx", rawCx),
        rawFy = parserState.attribute$2$def("fy", rawCy),
        spreadMethod = parserState.parseTileMode$0(),
        t1 = parserState._currentAttributes,
        originalTransform = B.parseTransform(parserState.attribute$1("gradientTransform"));
      if (!parserState._currentStartElement.isSelfClosing) {
        offsets = C._setArrayType([], type$.JSArray_double);
        colors = C._setArrayType([], type$.JSArray_Color_2);
        B._Elements_parseStops(parserState, colors, offsets);
      } else {
        offsets = null;
        colors = null;
      }
      rawCx.toString;
      cx = B.parseDecimalOrPercentage(rawCx);
      rawCy.toString;
      cy = B.parseDecimalOrPercentage(rawCy);
      rawR.toString;
      r = B.parseDecimalOrPercentage(rawR);
      rawFx.toString;
      fx = B.parseDecimalOrPercentage(rawFx);
      rawFy.toString;
      fy = B.parseDecimalOrPercentage(rawFy);
      t2 = fx !== cx || fy !== cy ? new B.Point(fx, fy) : null;
      parserState._definitions.addGradient$2(new B.RadialGradient(new B.Point(cx, cy), r, t2, "url(#" + C.S(t1.id) + ")", colors, offsets, spreadMethod, unitMode, originalTransform), parserState._currentAttributes.href);
      return;
    },
    _Elements_linearGradient(parserState, warningsAsErrors) {
      var t2, t3, t4, t5, originalTransform, spreadMethod, offsets, colors,
        unitMode = parserState.parseGradientUnitMode$0(),
        t1 = parserState.attribute$2$def("x1", "0%");
      t1.toString;
      t2 = parserState.attribute$2$def("x2", "100%");
      t2.toString;
      t3 = parserState.attribute$2$def("y1", "0%");
      t3.toString;
      t4 = parserState.attribute$2$def("y2", "0%");
      t4.toString;
      t5 = parserState._currentAttributes;
      originalTransform = B.parseTransform(parserState.attribute$1("gradientTransform"));
      spreadMethod = parserState.parseTileMode$0();
      if (!parserState._currentStartElement.isSelfClosing) {
        offsets = C._setArrayType([], type$.JSArray_double);
        colors = C._setArrayType([], type$.JSArray_Color_2);
        B._Elements_parseStops(parserState, colors, offsets);
      } else {
        offsets = null;
        colors = null;
      }
      parserState._definitions.addGradient$2(new B.LinearGradient0(new B.Point(B.parseDecimalOrPercentage(t1), B.parseDecimalOrPercentage(t3)), new B.Point(B.parseDecimalOrPercentage(t2), B.parseDecimalOrPercentage(t4)), "url(#" + C.S(t5.id) + ")", colors, offsets, spreadMethod, unitMode, originalTransform), parserState._currentAttributes.href);
      return;
    },
    _Elements_clipPath(parserState, warningsAsErrors) {
      var t2, t3, t4, t5, t6, t7, t8, pathFn, t9, t10,
        t1 = parserState._currentAttributes,
        pathNodes = C._setArrayType([], type$.JSArray_Node);
      for (t2 = parserState._readSubtree$0(), t3 = t2.$ti, t2 = new C._SyncStarIterator(t2._outerHelper(), t3._eval$1("_SyncStarIterator<1>")), t3 = t3._precomputed1, t4 = parserState._definitions, t5 = t4.get$getDrawable(), t6 = type$.JSArray_PathCommand, t7 = parserState._parentDrawables; t2.moveNext$0();) {
        t8 = t2._async$_current;
        if (t8 == null)
          t8 = t3._as(t8);
        if (t8 instanceof B.XmlEndElementEvent)
          continue;
        if (t8 instanceof B.XmlStartElementEvent) {
          t8 = t8.name;
          pathFn = A.Map_BvFKH.$index(0, t8);
          if (pathFn != null) {
            t8 = pathFn.call$1(parserState);
            t8.toString;
            t9 = t7.get$last(0).drawable;
            t8 = parserState.applyTransformIfNeeded$2(t8, t9.transform)._path$_commands;
            t8 = C._setArrayType(t8.slice(0), C._arrayInstanceType(t8));
            t9 = parserState._currentAttributes.clipRule;
            if (t9 == null)
              t9 = A.PathFillType_00;
            t10 = C._setArrayType([], t6);
            D.JSArray_methods.addAll$1(t10, t8);
            t8 = parserState._currentAttributes;
            D.JSArray_methods.add$1(pathNodes, new B.PathNode(new B.Path(t10, t9), t8, t8.transform));
          } else if (t8 === "use") {
            t8 = parserState._currentAttributes;
            D.JSArray_methods.add$1(pathNodes, new B.DeferredNode("url(" + C.S(t8.href) + ")", t5, t8, t8.transform));
          }
        }
      }
      t4.addClipPath$2("url(#" + C.S(t1.id) + ")", pathNodes);
      return;
    },
    _Elements_image(parserState, warningsAsErrors) {
      var semiColonLocation, t1, t2, t3, mimeType, format, image,
        xlinkHref = parserState._currentAttributes.href;
      if (xlinkHref == null)
        return;
      if (D.JSString_methods.startsWith$1(xlinkHref, "data:")) {
        semiColonLocation = D.JSString_methods.indexOf$1(xlinkHref, ";") + 1;
        t1 = D.JSString_methods.indexOf$2(xlinkHref, ",", semiColonLocation);
        t2 = D.JSString_methods.substring$2(xlinkHref, D.JSString_methods.indexOf$1(xlinkHref, "/") + 1, semiColonLocation - 1);
        t3 = $.$get$_whitespacePattern();
        mimeType = C.stringReplaceAllUnchecked(t2, t3, "").toLowerCase();
        format = A.Map_rXDqg.$index(0, mimeType);
        if (format == null) {
          C.print("Warning: Unsupported image format " + mimeType);
          return;
        }
        t1 = D.JSString_methods.substring$1(xlinkHref, t1 + 1);
        image = B.ImageNode$(D.C_Base64Decoder.convert$1(C.stringReplaceAllUnchecked(t1, t3, "")), format, parserState._currentAttributes);
        t1 = parserState._definitions;
        t2 = t1.get$getDrawable();
        parserState._parentDrawables.get$last(0).drawable.addChild$4$clipResolver$maskResolver$patternResolver(image, t1.get$getClipPath(), t2, t2);
        parserState.checkForIri$1(image);
        return;
      }
      return;
    },
    _Paths_circle(parserState) {
      var t3, t4, t5,
        t1 = parserState.theme,
        t2 = B.parseDoubleWithUnits(parserState.attribute$2$def("cx", "0"), t1, false);
      t2.toString;
      t3 = B.parseDoubleWithUnits(parserState.attribute$2$def("cy", "0"), t1, false);
      t3.toString;
      t1 = B.parseDoubleWithUnits(parserState.attribute$2$def("r", "0"), t1, false);
      t1.toString;
      t4 = parserState._currentAttributes.fillRule;
      t5 = C._setArrayType([], type$.JSArray_PathCommand);
      return new B.PathBuilder(t5, t4 == null ? A.PathFillType_00 : t4).addOval$1(new B.Rect0(t2 - t1, t3 - t1, t2 + t1, t3 + t1)).toPath$0();
    },
    _Paths_path(parserState) {
      var t1 = parserState.attribute$2$def("d", "");
      t1.toString;
      return B.parseSvgPathData(t1, parserState._currentAttributes.fillRule);
    },
    _Paths_rect(parserState) {
      var t3, t4, t5, rxRaw, ryRaw, t6, t7, t8,
        t1 = parserState.theme,
        t2 = B.parseDoubleWithUnits(parserState.attribute$2$def("x", "0"), t1, false);
      t2.toString;
      t3 = B.parseDoubleWithUnits(parserState.attribute$2$def("y", "0"), t1, false);
      t3.toString;
      t4 = B.parseDoubleWithUnits(parserState.attribute$2$def("width", "0"), t1, false);
      t4.toString;
      t5 = B.parseDoubleWithUnits(parserState.attribute$2$def("height", "0"), t1, false);
      t5.toString;
      rxRaw = parserState.attribute$1("rx");
      ryRaw = parserState.attribute$1("ry");
      if (rxRaw == null)
        rxRaw = ryRaw;
      if (ryRaw == null)
        ryRaw = rxRaw;
      if (rxRaw != null && rxRaw !== "") {
        t6 = B.parseDoubleWithUnits(rxRaw, t1, false);
        t6.toString;
        t1 = B.parseDoubleWithUnits(ryRaw, t1, false);
        t1.toString;
        t7 = parserState._currentAttributes.fillRule;
        t8 = C._setArrayType([], type$.JSArray_PathCommand);
        return new B.PathBuilder(t8, t7 == null ? A.PathFillType_00 : t7).addRRect$3(new B.Rect0(t2, t3, t2 + t4, t3 + t5), t6, t1).toPath$0();
      }
      t1 = parserState._currentAttributes.fillRule;
      t6 = C._setArrayType([], type$.JSArray_PathCommand);
      return new B.PathBuilder(t6, t1 == null ? A.PathFillType_00 : t1).addRect$1(new B.Rect0(t2, t3, t2 + t4, t3 + t5)).toPath$0();
    },
    _Paths_polygon(parserState) {
      return B._Paths_parsePathFromPoints(parserState, true);
    },
    _Paths_polyline(parserState) {
      return B._Paths_parsePathFromPoints(parserState, false);
    },
    _Paths_parsePathFromPoints(parserState, $close) {
      var t2,
        t1 = parserState.attribute$2$def("points", "");
      t1.toString;
      if (t1 === "")
        return null;
      t2 = $close ? "z" : "";
      return B.parseSvgPathData("M" + t1 + t2, parserState._currentAttributes.fillRule);
    },
    _Paths_ellipse(parserState) {
      var t3, t4, t5, t6,
        t1 = parserState.theme,
        t2 = B.parseDoubleWithUnits(parserState.attribute$2$def("cx", "0"), t1, false);
      t2.toString;
      t3 = B.parseDoubleWithUnits(parserState.attribute$2$def("cy", "0"), t1, false);
      t3.toString;
      t4 = B.parseDoubleWithUnits(parserState.attribute$2$def("rx", "0"), t1, false);
      t4.toString;
      t1 = B.parseDoubleWithUnits(parserState.attribute$2$def("ry", "0"), t1, false);
      t1.toString;
      t2 -= t4;
      t3 -= t1;
      t5 = parserState._currentAttributes.fillRule;
      t6 = C._setArrayType([], type$.JSArray_PathCommand);
      return new B.PathBuilder(t6, t5 == null ? A.PathFillType_00 : t5).addOval$1(new B.Rect0(t2, t3, t2 + t4 * 2, t3 + t1 * 2)).toPath$0();
    },
    _Paths_line(parserState) {
      var t3, t4, t5, t6,
        t1 = parserState.theme,
        t2 = B.parseDoubleWithUnits(parserState.attribute$2$def("x1", "0"), t1, false);
      t2.toString;
      t3 = B.parseDoubleWithUnits(parserState.attribute$2$def("x2", "0"), t1, false);
      t3.toString;
      t4 = B.parseDoubleWithUnits(parserState.attribute$2$def("y1", "0"), t1, false);
      t4.toString;
      t1 = B.parseDoubleWithUnits(parserState.attribute$2$def("y2", "0"), t1, false);
      t1.toString;
      t5 = parserState._currentAttributes.fillRule;
      t6 = C._setArrayType([], type$.JSArray_PathCommand);
      if (t5 == null)
        t5 = A.PathFillType_00;
      D.JSArray_methods.add$1(t6, new B.MoveToCommand(t2, t4, A.PathCommandType_0));
      D.JSArray_methods.add$1(t6, new B.LineToCommand(t3, t1, A.PathCommandType_1));
      return new B.PathBuilder(t6, t5).toPath$0();
    },
    SvgAttributes$_(blendMode, clipPathId, clipRule, color, dx, dy, fill, fillRule, fontFamily, fontSize, fontWeight, height, href, id, raw, stroke, textAnchorMultiplier, textDecoration, textDecorationColor, textDecorationStyle, transform, width, x, y) {
      return new B.SvgAttributes(raw, id, href, color, stroke, fill, transform, fillRule, clipRule, clipPathId, blendMode, fontFamily, fontWeight, fontSize, textDecoration, textDecorationStyle, textDecorationColor, width, height, x, textAnchorMultiplier, y, dx, dy);
    },
    DoubleOrPercentage_fromString(raw) {
      var t1;
      if (raw == null || raw === "")
        return null;
      if (B.isPercentage(raw))
        return new B.DoubleOrPercentage(B.parsePercentage(raw, 1), true);
      t1 = B.parseDouble(raw, false);
      t1.toString;
      return new B.DoubleOrPercentage(t1, false);
    },
    _SvgGroupTuple: function _SvgGroupTuple(t0, t1) {
      this.name = t0;
      this.drawable = t1;
    },
    SvgParser: function SvgParser(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.theme = t0;
      _._colorMapper = t1;
      _._eventIterator = t2;
      _._warningsAsErrors = t3;
      _._definitions = t4;
      _._parentDrawables = t5;
      _.enableOverdrawOptimizer = _.enableClippingOptimizer = _.enableMaskingOptimizer = true;
      _.patternIds = t6;
      _._parser$_root = null;
      _._currentAttributes = t7;
      _._currentStartElement = null;
      _.depth = 0;
      _._lastEndElementEvent = null;
      _._lastTextEndedWithSpace = false;
    },
    SvgParser__parseColor_closure: function SvgParser__parseColor_closure() {
    },
    SvgParser__parseColor_closure0: function SvgParser__parseColor_closure0() {
    },
    SvgParser__parseColor_closure1: function SvgParser__parseColor_closure1() {
    },
    SvgParser__parseColor_closure2: function SvgParser__parseColor_closure2(t0) {
      this.saturation = t0;
    },
    SvgParser__parseColor_closure3: function SvgParser__parseColor_closure3(t0) {
      this.luminance = t0;
    },
    SvgParser__parseColor_closure4: function SvgParser__parseColor_closure4(t0) {
      this.luminance = t0;
    },
    SvgParser__parseColor_closure5: function SvgParser__parseColor_closure5() {
    },
    SvgParser__parseColor_closure6: function SvgParser__parseColor_closure6() {
    },
    _Resolver: function _Resolver(t0, t1, t2, t3) {
      var _ = this;
      _._drawables = t0;
      _._parser$_shaders = t1;
      _._clips = t2;
      _._deferredShaders = t3;
    },
    _Resolver_getClipPath_extractPathsFromNode: function _Resolver_getClipPath_extractPathsFromNode(t0, t1) {
      this._box_0 = t0;
      this.pathBuilders = t1;
    },
    _Resolver_getClipPath_closure: function _Resolver_getClipPath_closure() {
    },
    _Resolver_addDeferredGradient_closure: function _Resolver_addDeferredGradient_closure() {
    },
    _Resolver_addClipPath_closure: function _Resolver_addClipPath_closure(t0) {
      this.pathNodes = t0;
    },
    _Resolver_addDrawable_closure: function _Resolver_addDrawable_closure(t0) {
      this.drawable = t0;
    },
    _Viewport: function _Viewport(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.transform = t2;
    },
    SvgAttributes: function SvgAttributes(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.raw = t0;
      _.id = t1;
      _.href = t2;
      _.color = t3;
      _.stroke = t4;
      _.fill = t5;
      _.transform = t6;
      _.fillRule = t7;
      _.clipRule = t8;
      _.clipPathId = t9;
      _.blendMode = t10;
      _.fontFamily = t11;
      _.fontWeight = t12;
      _.fontSize = t13;
      _.textDecoration = t14;
      _.textDecorationStyle = t15;
      _.textDecorationColor = t16;
      _.width = t17;
      _.height = t18;
      _.x = t19;
      _.textAnchorMultiplier = t20;
      _.y = t21;
      _.dx = t22;
      _.dy = t23;
    },
    SvgAttributes_heritable_closure: function SvgAttributes_heritable_closure() {
    },
    DoubleOrPercentage: function DoubleOrPercentage(t0, t1) {
      this._parser$_value = t0;
      this._isPercentage = t1;
    },
    SvgStrokeAttributes: function SvgStrokeAttributes(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _._definitions = t0;
      _.color = t1;
      _.shaderId = t2;
      _.join = t3;
      _.cap = t4;
      _.miterLimit = t5;
      _.width = t6;
      _.dashArray = t7;
      _.dashOffset = t8;
      _.hasPattern = t9;
      _.opacity = t10;
    },
    SvgFillAttributes: function SvgFillAttributes(t0, t1, t2, t3, t4) {
      var _ = this;
      _._definitions = t0;
      _.color = t1;
      _.opacity = t2;
      _.shaderId = t3;
      _.hasPattern = t4;
    },
    ColorOrNone: function ColorOrNone(t0, t1) {
      this.isNone = t0;
      this.color = t1;
    },
    ResolvingVisitor: function ResolvingVisitor() {
      this.__ResolvingVisitor__bounds_A = $;
    },
    ResolvedTextPositionNode: function ResolvedTextPositionNode(t0, t1) {
      this.textPosition = t0;
      this.children = t1;
    },
    ResolvedTextNode: function ResolvedTextNode(t0, t1) {
      this.textConfig = t0;
      this.paint = t1;
    },
    ResolvedPathNode: function ResolvedPathNode(t0, t1, t2) {
      this.paint = t0;
      this.bounds = t1;
      this.path = t2;
    },
    ResolvedClipNode: function ResolvedClipNode(t0, t1) {
      this.clips = t0;
      this.child = t1;
    },
    ResolvedMaskNode: function ResolvedMaskNode(t0, t1, t2) {
      this.mask = t0;
      this.child = t1;
      this.blendMode = t2;
    },
    ResolvedImageNode: function ResolvedImageNode(t0, t1, t2, t3) {
      var _ = this;
      _.data = t0;
      _.format = t1;
      _.rect = t2;
      _.transform = t3;
    },
    ResolvedPatternNode: function ResolvedPatternNode(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.child = t0;
      _.pattern = t1;
      _.x = t2;
      _.y = t3;
      _.width = t4;
      _.height = t5;
      _.id = t6;
      _.transform = t7;
    },
    SvgTheme0: function SvgTheme0(t0, t1, t2) {
      this.currentColor = t0;
      this.fontSize = t1;
      this.xHeight = t2;
    },
    Visitor: function Visitor() {
    },
    ErrorOnUnResolvedNode: function ErrorOnUnResolvedNode() {
    },
    CommandBuilderVisitor: function CommandBuilderVisitor(t0) {
      var _ = this;
      _._builder = t0;
      _.__CommandBuilderVisitor__height_A = _.__CommandBuilderVisitor__width_A = $;
      _.currentPatternId = null;
    },
    CommandBuilderVisitor_visitResolvedTextPositionNode_closure: function CommandBuilderVisitor_visitResolvedTextPositionNode_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode: function _CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode() {
    },
    VectorInstructions: function VectorInstructions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.paints = t2;
      _.paths = t3;
      _.vertices = t4;
      _.text = t5;
      _.images = t6;
      _.drawImages = t7;
      _.patternData = t8;
      _.textPositions = t9;
      _.commands = t10;
    },
    DrawCommandType: function DrawCommandType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DrawCommand: function DrawCommand(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.debugString = t0;
      _.type = t1;
      _.objectId = t2;
      _.paintId = t3;
      _.patternId = t4;
      _.patternDataId = t5;
    },
    Matrix41: function Matrix41(t0) {
      this._vector_math$_m4storage = t0;
    },
    Vector40: function Vector40(t0) {
      this._vector_math$_v4storage = t0;
    },
    DtdExternalId: function DtdExternalId(t0, t1, t2, t3) {
      var _ = this;
      _.publicId = t0;
      _.publicIdType = t1;
      _.systemId = t2;
      _.systemIdType = t3;
    },
    _textReplace(match) {
      var t1 = match.group$1(0);
      t1.toString;
      switch (t1) {
        case "<":
          return "&lt;";
        case "&":
          return "&amp;";
        case "]]>":
          return "]]&gt;";
        default:
          return B._asNumericCharacterReferences(t1);
      }
    },
    _singeQuoteAttributeReplace(match) {
      var t1 = match.group$1(0);
      t1.toString;
      switch (t1) {
        case "'":
          return "&apos;";
        case "&":
          return "&amp;";
        case "<":
          return "&lt;";
        default:
          return B._asNumericCharacterReferences(t1);
      }
    },
    _doubleQuoteAttributeReplace(match) {
      var t1 = match.group$1(0);
      t1.toString;
      switch (t1) {
        case '"':
          return "&quot;";
        case "&":
          return "&amp;";
        case "<":
          return "&lt;";
        default:
          return B._asNumericCharacterReferences(t1);
      }
    },
    _asNumericCharacterReferences(toEscape) {
      var t1 = type$.Runes;
      return C.MappedIterable_MappedIterable(new C.Runes(toEscape), t1._eval$1("String(Iterable.E)")._as(new B._asNumericCharacterReferences_closure()), t1._eval$1("Iterable.E"), type$.String).join$0(0);
    },
    XmlDefaultEntityMapping: function XmlDefaultEntityMapping() {
    },
    _asNumericCharacterReferences_closure: function _asNumericCharacterReferences_closure() {
    },
    XmlEntityMapping: function XmlEntityMapping() {
    },
    XmlAttributeType: function XmlAttributeType(t0, t1, t2) {
      this.token = t0;
      this.index = t1;
      this._name = t2;
    },
    XmlNodeType: function XmlNodeType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    XmlException: function XmlException() {
    },
    XmlFormatException: function XmlFormatException() {
    },
    XmlParserException$(message, buffer, position) {
      return new B.XmlParserException(buffer, position, $, $, $, message);
    },
    XmlParserException: function XmlParserException(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.buffer = t0;
      _.position = t1;
      _.XmlFormatException___XmlFormatException_line_FI = t2;
      _.XmlFormatException___XmlFormatException_column_FI = t3;
      _.XmlFormatException___XmlFormatException__lineAndColumn_FI = t4;
      _.message = t5;
    },
    _XmlParserException_XmlException_XmlFormatException: function _XmlParserException_XmlException_XmlFormatException() {
    },
    XmlCache: function XmlCache(t0, t1, t2, t3) {
      var _ = this;
      _._loader = t0;
      _._maxSize = t1;
      _._cache0$_values = t2;
      _.$ti = t3;
    },
    XmlCharacterDataParser: function XmlCharacterDataParser(t0, t1) {
      this._stopper = t0;
      this._character_data_parser$_minLength = t1;
    },
    XmlAnnotator: function XmlAnnotator(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.validateNesting = t0;
      _.validateDocument = t1;
      _.withBuffer = t2;
      _.withLocation = t3;
      _.withParent = t4;
      _._roots = t5;
      _._parents = t6;
    },
    XmlHasBuffer: function XmlHasBuffer() {
    },
    XmlHasLocation: function XmlHasLocation() {
    },
    XmlHasParent: function XmlHasParent() {
    },
    XmlEventEncoder: function XmlEventEncoder(t0) {
      this.entityMapping = t0;
    },
    _XmlEventEncoderSink: function _XmlEventEncoderSink(t0, t1) {
      this.sink = t0;
      this.entityMapping = t1;
    },
    __XmlEventEncoderSink_Object_XmlEventVisitor: function __XmlEventEncoderSink_Object_XmlEventVisitor() {
    },
    XmlEvent: function XmlEvent() {
    },
    _XmlEvent_Object_XmlHasParent: function _XmlEvent_Object_XmlHasParent() {
    },
    _XmlEvent_Object_XmlHasParent_XmlHasLocation: function _XmlEvent_Object_XmlHasParent_XmlHasLocation() {
    },
    _XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer: function _XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer() {
    },
    XmlCDATAEvent: function XmlCDATAEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    XmlCommentEvent: function XmlCommentEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.value = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    XmlDeclarationEvent: function XmlDeclarationEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.attributes = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    XmlDoctypeEvent: function XmlDoctypeEvent(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.name = t0;
      _.externalId = t1;
      _.internalSubset = t2;
      _.XmlHasBuffer__buffer = t3;
      _.XmlHasLocation__start = t4;
      _.XmlHasLocation__stop = t5;
      _.XmlHasParent__parent = t6;
    },
    XmlEndElementEvent: function XmlEndElementEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.name = t0;
      _.XmlHasBuffer__buffer = t1;
      _.XmlHasLocation__start = t2;
      _.XmlHasLocation__stop = t3;
      _.XmlHasParent__parent = t4;
    },
    _XmlEndElementEvent_XmlEvent_XmlNamed: function _XmlEndElementEvent_XmlEvent_XmlNamed() {
    },
    XmlProcessingEvent: function XmlProcessingEvent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.target = t0;
      _.value = t1;
      _.XmlHasBuffer__buffer = t2;
      _.XmlHasLocation__start = t3;
      _.XmlHasLocation__stop = t4;
      _.XmlHasParent__parent = t5;
    },
    XmlStartElementEvent: function XmlStartElementEvent(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.name = t0;
      _.attributes = t1;
      _.isSelfClosing = t2;
      _.XmlHasBuffer__buffer = t3;
      _.XmlHasLocation__start = t4;
      _.XmlHasLocation__stop = t5;
      _.XmlHasParent__parent = t6;
    },
    _XmlStartElementEvent_XmlEvent_XmlNamed: function _XmlStartElementEvent_XmlEvent_XmlNamed() {
    },
    XmlRawTextEvent: function XmlRawTextEvent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.raw = t0;
      _.entityMapping = t1;
      _.__XmlRawTextEvent_value_FI = $;
      _.XmlHasBuffer__buffer = t2;
      _.XmlHasLocation__start = t3;
      _.XmlHasLocation__stop = t4;
      _.XmlHasParent__parent = t5;
    },
    XmlEventIterable: function XmlEventIterable(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.input = t0;
      _.entityMapping = t1;
      _.validateNesting = t2;
      _.validateDocument = t3;
      _.withBuffer = t4;
      _.withLocation = t5;
      _.withParent = t6;
    },
    XmlEventIterator: function XmlEventIterator(t0, t1, t2) {
      var _ = this;
      _._eventParser = t0;
      _._annotator = t1;
      _._iterator$_context = t2;
      _._iterator$_current = null;
    },
    XmlEventParser: function XmlEventParser(t0) {
      this.entityMapping = t0;
    },
    XmlEventParser_characterData_closure: function XmlEventParser_characterData_closure(t0) {
      this.$this = t0;
    },
    XmlEventParser_startElement_closure: function XmlEventParser_startElement_closure() {
    },
    XmlEventParser_attribute_closure: function XmlEventParser_attribute_closure(t0) {
      this.$this = t0;
    },
    XmlEventParser_attributeAssignment_closure: function XmlEventParser_attributeAssignment_closure() {
    },
    XmlEventParser_attributeValueDoubleQuote_closure: function XmlEventParser_attributeValueDoubleQuote_closure() {
    },
    XmlEventParser_attributeValueSingleQuote_closure: function XmlEventParser_attributeValueSingleQuote_closure() {
    },
    XmlEventParser_attributeValueNoQuote_closure: function XmlEventParser_attributeValueNoQuote_closure() {
    },
    XmlEventParser_endElement_closure: function XmlEventParser_endElement_closure() {
    },
    XmlEventParser_comment_closure: function XmlEventParser_comment_closure() {
    },
    XmlEventParser_cdata_closure: function XmlEventParser_cdata_closure() {
    },
    XmlEventParser_declaration_closure: function XmlEventParser_declaration_closure() {
    },
    XmlEventParser_processing_closure: function XmlEventParser_processing_closure() {
    },
    XmlEventParser_processing_closure0: function XmlEventParser_processing_closure0() {
    },
    XmlEventParser_doctype_closure: function XmlEventParser_doctype_closure() {
    },
    XmlEventParser_doctypeExternalIdSystem_closure: function XmlEventParser_doctypeExternalIdSystem_closure() {
    },
    XmlEventParser_doctypeExternalIdPublic_closure: function XmlEventParser_doctypeExternalIdPublic_closure() {
    },
    XmlEventParser_doctypeIntSubset_closure: function XmlEventParser_doctypeIntSubset_closure() {
    },
    eventParserCache_closure: function eventParserCache_closure() {
    },
    ConversionSink: function ConversionSink(t0, t1) {
      this.callback = t0;
      this.$ti = t1;
    },
    XmlEventAttribute: function XmlEventAttribute(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.value = t1;
      _.attributeType = t2;
      _.XmlHasParent__parent = t3;
    },
    _XmlEventAttribute_Object_XmlNamed: function _XmlEventAttribute_Object_XmlNamed() {
    },
    _XmlEventAttribute_Object_XmlNamed_XmlHasParent: function _XmlEventAttribute_Object_XmlNamed_XmlHasParent() {
    },
    XmlNamed: function XmlNamed() {
    },
    XmlEventVisitor: function XmlEventVisitor() {
    },
    IterableExtension_firstWhereOrNull(_this, test, $T) {
      var t1, _i, element;
      for (t1 = _this.length, _i = 0; _i < t1; ++_i) {
        element = _this[_i];
        if (C.boolConversionCheck(test.call$1(element)))
          return element;
      }
      return null;
    },
    IterableExtension_get_lastOrNull(_this, $T) {
      if (_this.length === 0)
        return null;
      return D.JSArray_methods.get$last(_this);
    },
    IterableNullableExtension_whereNotNull(_this, $T) {
      return new C._SyncStarIterable(B.IterableNullableExtension_whereNotNull$body(_this, $T), $T._eval$1("_SyncStarIterable<0>"));
    },
    IterableNullableExtension_whereNotNull$body($async$_this, $async$$T) {
      return function() {
        var _this = $async$_this,
          $T = $async$$T;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1, element;
        return function $async$IterableNullableExtension_whereNotNull($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(_this);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                element = t1.get$current(t1);
                $async$goto = element != null ? 4 : 5;
                break;
              case 4:
                // then
                $async$goto = 6;
                return $async$iterator._async$_current = element, 1;
              case 6:
                // after yield
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    IterableIntegerExtension_get_maxOrNull(_this) {
      var value, newValue,
        t1 = _this.$ti,
        iterator = new C.ListIterator(_this, _this.get$length(0), t1._eval$1("ListIterator<ListIterable.E>"));
      if (iterator.moveNext$0()) {
        value = iterator.__internal$_current;
        if (value == null)
          value = t1._eval$1("ListIterable.E")._as(value);
        for (t1 = t1._eval$1("ListIterable.E"); iterator.moveNext$0();) {
          newValue = iterator.__internal$_current;
          if (newValue == null)
            newValue = t1._as(newValue);
          if (newValue > value)
            value = newValue;
        }
        return value;
      }
      return null;
    },
    IterableIntegerExtension_get_sum(_this) {
      var t1, t2, result, t3;
      for (t1 = _this.$ti, t2 = new C.ListIterator(_this, _this.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"), result = 0; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        result += t3 == null ? t1._as(t3) : t3;
      }
      return result;
    },
    IterableDoubleExtension_get_maxOrNull(_this) {
      var value, newValue,
        t1 = _this.$ti,
        iterator = new C.ListIterator(_this, _this.get$length(0), t1._eval$1("ListIterator<ListIterable.E>"));
      if (iterator.moveNext$0()) {
        value = iterator.__internal$_current;
        if (value == null)
          value = t1._eval$1("ListIterable.E")._as(value);
        if (isNaN(value))
          return value;
        for (t1 = t1._eval$1("ListIterable.E"); iterator.moveNext$0();) {
          newValue = iterator.__internal$_current;
          if (newValue == null)
            newValue = t1._as(newValue);
          if (isNaN(newValue))
            return newValue;
          if (newValue > value)
            value = newValue;
        }
        return value;
      }
      return null;
    },
    IterableDoubleExtension_get_sum(_this) {
      var t1, result, _i;
      for (t1 = _this.length, result = 0, _i = 0; _i < t1; ++_i)
        result += _this[_i];
      return result;
    },
    ListExtensions_mapIndexed(_this, convert, $E, $R) {
      return new C._SyncStarIterable(B.ListExtensions_mapIndexed$body(_this, convert, $E, $R), $R._eval$1("_SyncStarIterable<0>"));
    },
    ListExtensions_mapIndexed$body($async$_this, $async$convert, $async$$E, $async$$R) {
      return function() {
        var _this = $async$_this,
          convert = $async$convert,
          $E = $async$$E,
          $R = $async$$R;
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], index;
        return function $async$ListExtensions_mapIndexed($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                index = 0;
              case 2:
                // for condition
                if (!(index < _this.length)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                $async$goto = 5;
                return $async$iterator._async$_current = convert.call$2(index, _this[index]), 1;
              case 5:
                // after yield
              case 3:
                // for update
                ++index;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    getSpacingSize(left, right, style) {
      var t1;
      if (style.index >= 4) {
        t1 = A.Map_xSVzb.$index(0, left);
        t1 = t1 == null ? null : t1.$index(0, right);
      } else {
        t1 = A.Map_xSiqr.$index(0, left);
        t1 = t1 == null ? null : t1.$index(0, right);
      }
      return t1 == null ? A.Measurement_0_Unit_0 : t1;
    },
    getHLines(parser) {
      var next, next0,
        hlineInfo = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      parser.consumeSpaces$0();
      next = parser.fetch$0(0).text;
      while (true) {
        if (!(next === "\\hline" || next === "\\hdashline"))
          break;
        parser.nextToken = null;
        D.JSArray_methods.add$1(hlineInfo, next === "\\hdashline" ? A.MatrixSeparatorStyle_1 : A.MatrixSeparatorStyle_0);
        parser.consumeSpaces$0();
        next0 = parser.fetch$0(0).text;
        next = next0;
      }
      return hlineInfo;
    },
    parseArray(parser, arrayStretch, colAligns, hskipBeforeAndAfter, isSmall, separators, style) {
      var stretch, row, body, rowGaps, hLinesBeforeRow, t6, t7, cellBody, next, t8, _null = null,
        t1 = parser.macroExpander,
        t2 = t1.macros,
        t3 = t2.undefStack,
        t4 = type$.String,
        t5 = t2.$ti._eval$1("1?");
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t2.$set$2(0, "\\\\", B.MacroDefinition$fromString("\\cr"));
      if (arrayStretch == null) {
        stretch = t1.expandMacroAsText$1("\\arraystretch");
        if (stretch == null)
          arrayStretch = 1;
        else {
          arrayStretch = C.Primitives_parseDouble(stretch);
          if (arrayStretch == null || arrayStretch < 0)
            throw C.wrapException(B.ParseException$("Invalid \\arraystretch: " + stretch, _null));
        }
      }
      D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
      t1 = type$.JSArray_EquationRowNode;
      row = C._setArrayType([], t1);
      body = C._setArrayType([row], type$.JSArray_List_EquationRowNode);
      rowGaps = C._setArrayType([], type$.JSArray_Measurement);
      hLinesBeforeRow = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      t6 = type$.MatrixSeparatorStyle;
      t7 = B.IterableExtension_get_lastOrNull(B.getHLines(parser), t6);
      D.JSArray_methods.add$1(hLinesBeforeRow, t7 == null ? A.MatrixSeparatorStyle_2 : t7);
      for (t7 = type$.CrNode; true;) {
        cellBody = parser.parseExpression$2$breakOnInfix$breakOnTokenText(false, "\\cr");
        t2.endGroup$0();
        D.JSArray_methods.add$1(t3, C.LinkedHashMap_LinkedHashMap$_empty(t4, t5));
        D.JSArray_methods.add$1(row, B.GreenNodeWrappingExt_wrapWithEquationRow(B.StyleNode$(cellBody, new B.OptionsDiff(style, _null, _null, _null, _null))));
        next = parser.fetch$0(0).text;
        if (next === "&")
          parser.nextToken = null;
        else if (next === "\\end") {
          if (row.length === 1 && cellBody.length === 0) {
            if (0 >= body.length)
              return C.ioore(body, -1);
            body.pop();
          }
          if (hLinesBeforeRow.length < body.length + 1)
            D.JSArray_methods.add$1(hLinesBeforeRow, A.MatrixSeparatorStyle_2);
          break;
        } else if (next === "\\cr") {
          t8 = B.assertNodeType(parser.parseFunction$3(_null, _null, _null), t7).size;
          D.JSArray_methods.add$1(rowGaps, t8 == null ? A.Measurement_0_Unit_0 : t8);
          t8 = B.IterableExtension_get_lastOrNull(B.getHLines(parser), t6);
          D.JSArray_methods.add$1(hLinesBeforeRow, t8 == null ? A.MatrixSeparatorStyle_2 : t8);
          row = C._setArrayType([], t1);
          D.JSArray_methods.add$1(body, row);
        } else
          throw C.wrapException(B.ParseException$("Expected & or \\\\ or \\cr or \\end", parser.nextToken));
      }
      t2.endGroup$0();
      t2.endGroup$0();
      return B.MatrixNode_MatrixNode(arrayStretch, body, colAligns, hLinesBeforeRow, hskipBeforeAndAfter, isSmall, rowGaps, separators);
    },
    _arrayHandler(parser, context) {
      var symArg, colalign, separators, aligns, t1, t2, alignSpecified, lastIsSeparator, ca, t3;
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      symArg = parser.parseArgNode$2$mode$optional(null, false);
      colalign = symArg instanceof B.SymbolNode ? C._setArrayType([symArg], type$.JSArray_SymbolNode) : B.assertNodeType(symArg, type$.EquationRowNode).children;
      separators = C._setArrayType([], type$.JSArray_MatrixSeparatorStyle);
      aligns = C._setArrayType([], type$.JSArray_MatrixColumnAlign);
      for (t1 = J.get$iterator$ax(colalign), t2 = type$.SymbolNode, alignSpecified = true, lastIsSeparator = false; t1.moveNext$0();) {
        ca = B.assertNodeType(t1.get$current(t1), t2).symbol;
        switch (ca) {
          case "l":
          case "c":
          case "r":
            t3 = A.Map_38VCd.$index(0, ca);
            t3.toString;
            D.JSArray_methods.add$1(aligns, t3);
            if (alignSpecified)
              D.JSArray_methods.add$1(separators, A.MatrixSeparatorStyle_2);
            alignSpecified = true;
            lastIsSeparator = false;
            break;
          case "|":
          case ":":
            if (alignSpecified) {
              t3 = A.Map_a0fCI.$index(0, ca);
              t3.toString;
              D.JSArray_methods.add$1(separators, t3);
            }
            alignSpecified = false;
            lastIsSeparator = true;
            break;
          default:
            throw C.wrapException(B.ParseException$("Unknown column alignment: " + ca, null));
        }
      }
      if (!lastIsSeparator)
        D.JSArray_methods.add$1(separators, A.MatrixSeparatorStyle_2);
      return B.parseArray(parser, null, aligns, true, false, separators, D.JSString_methods.substring$2(context.envName, 0, 1) === "d" ? A.MathStyle_0 : A.MathStyle_2);
    },
    _matrixHandler(parser, context) {
      var t1, delimiters, res, t2;
      type$.TexParser._as(parser);
      t1 = type$.EnvContext._as(context).envName;
      delimiters = A.Map_z9QPz.$index(0, t1);
      res = B.parseArray(parser, null, A.List_empty30, false, false, A.List_empty29, D.JSString_methods.substring$2(t1, 0, 1) === "d" ? A.MathStyle_0 : A.MathStyle_2);
      if (delimiters == null)
        t1 = res;
      else {
        t1 = delimiters[0];
        t2 = delimiters[1];
        t2 = B.LeftRightNode$(C._setArrayType([B.GreenNodeListWrappingExt_wrapWithEquationRow(C._setArrayType([res], type$.JSArray_MatrixNode))], type$.JSArray_EquationRowNode), t1, F.List_empty12, t2);
        t1 = t2;
      }
      return t1;
    },
    _smallMatrixHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      return B.parseArray(parser, 0.5, A.List_empty30, false, true, A.List_empty29, A.MathStyle_4);
    },
    _subArrayHandler(parser, context) {
      var symArg, colalign, aligns, t1, t2, ca, t3, res, _null = null,
        _s38_ = "{subarray} can contain only one column";
      type$.TexParser._as(parser);
      type$.EnvContext._as(context);
      symArg = parser.parseArgNode$2$mode$optional(_null, false);
      colalign = symArg instanceof B.SymbolNode ? C._setArrayType([symArg], type$.JSArray_SymbolNode) : B.assertNodeType(symArg, type$.EquationRowNode).children;
      aligns = C._setArrayType([], type$.JSArray_MatrixColumnAlign);
      for (t1 = J.get$iterator$ax(colalign), t2 = type$.SymbolNode; t1.moveNext$0();) {
        ca = B.assertNodeType(t1.get$current(t1), t2).symbol;
        t3 = ca === "l";
        if (t3 || ca === "c")
          D.JSArray_methods.add$1(aligns, t3 ? A.MatrixColumnAlign_0 : A.MatrixColumnAlign_1);
        else
          throw C.wrapException(B.ParseException$("Unknown column alignment: " + ca, _null));
      }
      if (aligns.length > 1)
        throw C.wrapException(B.ParseException$(_s38_, _null));
      res = B.parseArray(parser, 0.5, aligns, false, false, A.List_empty29, A.MathStyle_4);
      if (J.get$length$asx(J.$index$asx(res.body, 0)) > 1)
        throw C.wrapException(B.ParseException$(_s38_, _null));
      return res;
    },
    _cursorHandler(parser, context) {
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      return new B.CursorNode();
    },
    _notHandler(parser, context) {
      var t1, node, remappedSymbol;
      type$.TexParser._as(parser);
      type$.FunctionContext._as(context);
      t1 = parser.parseArgNode$2$mode$optional(null, false);
      t1.toString;
      node = B.assertNodeType(t1, type$.SymbolNode);
      remappedSymbol = A.Map_z17bk.$index(0, node.symbol);
      if (node.mode !== A.Mode_0 || node.variantForm || remappedSymbol == null)
        throw C.wrapException(B.ParseException$("\\not has to be followed by a combinable character", null));
      return node.withSymbol$1(remappedSymbol);
    },
    staticSvg($name, options, needBaseline) {
      var width, height, viewPortWidth, viewPortHeight, t1, svgWidget,
        dimen = A.Map_RARog.$index(0, $name);
      if (dimen == null)
        throw C.wrapException(C.ArgumentError$value($name, "name", "Invalid static svg name"));
      width = dimen[0];
      height = dimen[1];
      viewPortWidth = new B.Measurement(width, A.Unit_16).toLpUnder$1(options);
      viewPortHeight = new B.Measurement(height, A.Unit_16).toLpUnder$1(options);
      t1 = A.Map_I87FN.$index(0, $name);
      t1.toString;
      svgWidget = B.svgWidgetFromPath(t1, new C.Size(viewPortWidth, viewPortHeight), new C.Rect(0, 0, 0 + 1000 * width, 0 + 1000 * height), options.color, K.Alignment_m1_m1, P.BoxFit_0);
      if (needBaseline)
        return new B.ResetBaseline(viewPortHeight, svgWidget, null);
      return svgWidget;
    },
    sqrtPath(size, extraViniculum, viewBoxHeight) {
      var t1, path;
      extraViniculum = 1000 * extraViniculum;
      switch (size) {
        case "sqrtMain":
          t1 = "" + (40 + extraViniculum);
          path = "M95," + (622 + extraViniculum + 80) + "\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl" + C.S(extraViniculum / 2.075) + " -" + extraViniculum + "\nc5.3,-9.3,12,-14,20,-14\nH400000v" + t1 + "H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM" + (834 + extraViniculum) + " 80h400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize1":
          t1 = "" + (40 + extraViniculum);
          path = "M263," + (601 + extraViniculum + 80) + "c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl" + C.S(extraViniculum / 2.084) + " -" + extraViniculum + "\nc4.7,-7.3,11,-11,19,-11\nH40000v" + t1 + "H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM" + (1001 + extraViniculum) + " 80h400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize2":
          t1 = "" + (40 + extraViniculum);
          path = "M983 " + (10 + extraViniculum + 80) + "\nl" + C.S(extraViniculum / 3.13) + " -" + extraViniculum + "\nc4,-6.7,10,-10,18,-10 H400000v" + t1 + "\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM" + (1001 + extraViniculum) + " 80h400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize3":
          t1 = "" + (40 + extraViniculum);
          path = "M424," + (2398 + extraViniculum + 80) + "\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl" + C.S(extraViniculum / 4.223) + " -" + extraViniculum + "c4,-6.7,10,-10,18,-10 H400000\nv" + t1 + "H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M" + (1001 + extraViniculum) + " 80\nh400000v" + t1 + "h-400000z";
          break;
        case "sqrtSize4":
          t1 = "" + (40 + extraViniculum);
          path = "M473," + (2713 + extraViniculum + 80) + "\nc339.3,-1799.3,509.3,-2700,510,-2702 l" + C.S(extraViniculum / 5.298) + " -" + extraViniculum + "\nc3.3,-7.3,9.3,-11,18,-11 H400000v" + t1 + "H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM" + (1001 + extraViniculum) + " 80h400000v" + t1 + "H1017.7z";
          break;
        case "sqrtTall":
          t1 = "" + (40 + extraViniculum);
          path = "M702 " + (extraViniculum + 80) + "H400000" + t1 + "\nH742v" + C.S(viewBoxHeight - 54 - 80 - extraViniculum) + "l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 80H400000v" + t1 + "H742z";
          break;
        default:
          path = "";
      }
      return path;
    },
    svgWidgetFromPath(path, viewPort, viewBox, color, align, fit) {
      var _null = null,
        alignment = $.$get$_alignmentToString().$index(0, align),
        meetOrSlice = fit === P.BoxFit_1 ? "meet" : "slice",
        preserveAspectRatio = fit === P.BoxFit_0 ? "none" : C.S(alignment) + " " + meetOrSlice,
        t1 = viewPort._dx,
        t2 = viewPort._dy,
        t3 = viewBox.left,
        t4 = viewBox.top,
        t5 = color.get$red(),
        t6 = color.get$green(),
        t7 = color.get$blue();
      return E.Container$(_null, new B.SvgPicture(t1, t2, fit, align, new B.SvgStringLoader('<svg xmlns="http://www.w3.org/2000/svg" width="' + C.S(t1) + '" height="' + C.S(t2) + '" preserveAspectRatio="' + preserveAspectRatio + '" viewBox="' + C.S(t3) + " " + C.S(t4) + " " + C.S(viewBox.right - t3) + " " + C.S(viewBox.bottom - t4) + '" ><path fill="rgb(' + t5 + "," + t6 + "," + t7 + ')" d="' + path + '"></path></svg>', _null, _null), _null, _null), D.Clip_0, _null, _null, _null, _null, t2, _null, _null, _null, _null, _null, t1);
    },
    RenderBoxLayout_getLayoutSize(_this, constraints, dry) {
      var boxSize;
      if (dry)
        boxSize = _this._computeIntrinsics$2$3(D.C__DryLayout, constraints, _this.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      else {
        _this.layout$2$parentUsesSize(constraints, true);
        boxSize = _this.get$size(0);
      }
      return boxSize;
    },
    NumIterableExtension_get_max(_this, $T) {
      var value, newValue,
        t1 = C._arrayInstanceType(_this),
        iterator = new J.ArrayIterator(_this, _this.length, t1._eval$1("ArrayIterator<1>"));
      if (iterator.moveNext$0()) {
        value = iterator.__interceptors$_current;
        if (value == null)
          value = t1._precomputed1._as(value);
        for (t1 = t1._precomputed1; iterator.moveNext$0();) {
          newValue = iterator.__interceptors$_current;
          if (newValue == null)
            newValue = t1._as(newValue);
          if (J.compareTo$1$ns(value, newValue) < 0)
            value = newValue;
        }
        return value;
      }
      throw C.wrapException(C.StateError$("No element"));
    },
    ListExtension_extendToByFill(_this, desiredLength, fill, $T) {
      var _list, index,
        t1 = J.getInterceptor$asx(_this);
      if (t1.get$length(_this) >= desiredLength)
        t1 = _this;
      else {
        _list = J.JSArray_JSArray$allocateFixed(desiredLength, $T);
        for (index = 0; index < desiredLength; ++index)
          _list[index] = index < t1.get$length(_this) ? t1.$index(_this, index) : fill;
        t1 = _list;
      }
      return t1;
    },
    NumListSearchExt_slotFor(_this, value, $T) {
      var left, i, element,
        right = _this.length;
      for (left = -1, i = 0; i < right; ++i) {
        element = _this[i];
        if (element < value)
          left = i;
        else if (element === value)
          return i;
        else if (element > value) {
          right = i;
          break;
        }
      }
      return (left + right) / 2;
    },
    IntExt_clampInt(_this, lowerLimit, upperLimit) {
      if (_this.$lt(0, lowerLimit))
        return lowerLimit;
      if (_this.$gt(0, upperLimit))
        return upperLimit;
      return _this;
    },
    _testCompute(callback, message, debugLabel, $Q, $R) {
      var result = $R._eval$1("@<0>")._bind$1($Q)._eval$1("1/(2)")._as(callback).call$1($Q._as(message));
      if ($R._eval$1("Future<0>")._is(result))
        return result;
      return new C.SynchronousFuture(result, $R._eval$1("SynchronousFuture<0>"));
    },
    resolve(parser, $R) {
      var todo, seen, t2, $parent, t3, _i, child, referenced,
        t1 = type$.Parser_dynamic,
        mapping = C.LinkedHashMap_LinkedHashMap$_empty(type$.ResolvableParser_dynamic, t1);
      parser = B._dereference(parser, mapping, $R);
      todo = C._setArrayType([parser], type$.JSArray_Parser_dynamic);
      seen = C.LinkedHashSet_LinkedHashSet$_literal([parser], t1);
      for (t1 = type$.dynamic; t2 = todo.length, t2 !== 0;) {
        if (0 >= t2)
          return C.ioore(todo, -1);
        $parent = todo.pop();
        for (t2 = $parent.get$children($parent), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
          child = t2[_i];
          if (child instanceof B.ReferenceParser) {
            referenced = B._dereference(child, mapping, t1);
            $parent.replace$2(0, child, referenced);
            child = referenced;
          }
          if (seen.add$1(0, child))
            D.JSArray_methods.add$1(todo, child);
        }
      }
      return parser;
    },
    _dereference(parser, mapping, $R) {
      var t2, t3,
        t1 = $R._eval$1("ResolvableParser<0>"),
        references = C.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (; t1._is(parser);) {
        if (mapping.containsKey$1(0, parser))
          return $R._eval$1("Parser<0>")._as(mapping.$index(0, parser));
        else if (!references.add$1(0, parser))
          throw C.wrapException(C.StateError$("Recursive references detected: " + references.toString$0(0)));
        parser = parser.$ti._eval$1("Parser<1>")._as(C.Primitives_applyFunction(parser.$function, parser.$arguments, null));
      }
      for (t1 = C._LinkedHashSetIterator$(references, references._collection$_modifications, references.$ti._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        mapping.$indexSet(0, t3 == null ? t2._as(t3) : t3, parser);
      }
      return parser;
    },
    _toFormattedChar(code) {
      C._asInt(code);
      switch (code) {
        case 8:
          return "\\b";
        case 9:
          return "\\t";
        case 10:
          return "\\n";
        case 11:
          return "\\v";
        case 12:
          return "\\f";
        case 13:
          return "\\r";
        case 34:
          return '\\"';
        case 39:
          return "\\'";
        case 92:
          return "\\\\";
      }
      if (code < 32)
        return "\\x" + D.JSString_methods.padLeft$2(D.JSInt_methods.toRadixString$1(code, 16), 2, "0");
      return C.Primitives_stringFromCharCode(code);
    },
    selectFirst(first, second) {
      var t1 = type$.Failure;
      t1._as(first);
      t1._as(second);
      return first;
    },
    selectLast(first, second) {
      var t1 = type$.Failure;
      t1._as(first);
      return t1._as(second);
    },
    selectFarthest(first, second) {
      var t1 = type$.Failure;
      t1._as(first);
      t1._as(second);
      return first.position <= second.position ? second : first;
    },
    useHtmlRenderObject() {
      var picture, image, recorder, exception,
        t1 = $._cachedUseHtmlRenderObject;
      if (t1 != null)
        return t1;
      t1 = $.$get$_renderer();
      recorder = t1.createPictureRecorder$0();
      t1.createCanvas$2(recorder, null);
      picture = recorder.endRecording$0();
      image = null;
      try {
        image = picture.toImageSync$2(1, 1);
        $._cachedUseHtmlRenderObject = false;
      } catch (exception) {
        if (type$.UnsupportedError._is(C.unwrapException(exception)))
          $._cachedUseHtmlRenderObject = true;
        else
          throw exception;
      } finally {
        t1 = image;
        if (t1 != null)
          t1.dispose$0();
        picture.dispose$0();
      }
      t1 = $._cachedUseHtmlRenderObject;
      t1.toString;
      return t1;
    },
    toDouble(byteData) {
      var o, outE, outM,
        bits = byteData.getUint16(0, false) & 65535,
        s = bits & 32768,
        e = bits >>> 10 & 31,
        m = bits & 1023;
      if (e === 0) {
        if (m !== 0) {
          byteData.$flags & 2 && C.throwUnsupportedOperation(byteData, 11);
          byteData.setUint32(0, 1056964608 + m, false);
          o = byteData.getFloat32(0, false) - $.$get$FP32_DENORMAL_FLOAT().getFloat32(0, false);
          return s === 0 ? o : -o;
        }
        outE = 0;
        outM = 0;
      } else {
        outM = m << 13;
        if (e === 31) {
          if (outM !== 0)
            outM |= 4194304;
          outE = 255;
        } else
          outE = e - 15 + 127;
      }
      byteData.$flags & 2 && C.throwUnsupportedOperation(byteData, 11);
      byteData.setUint32(0, (s << 16 | outE << 23 | outM) >>> 0, false);
      return byteData.getFloat32(0, false);
    },
    parseDouble(rawDouble, tryParse) {
      if (rawDouble == null)
        return null;
      rawDouble = D.JSString_methods.trim$0(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(D.JSString_methods.replaceFirst$2(rawDouble, "rem", ""), "em", ""), "ex", ""), "px", ""), "pt", ""));
      if (tryParse)
        return C.Primitives_parseDouble(rawDouble);
      return C.double_parse(rawDouble);
    },
    parseDoubleWithUnits(rawDouble, theme, tryParse) {
      var unit, value, _null = null,
        t1 = rawDouble == null,
        t2 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "pt");
      if (t2 === true)
        unit = 1.3333333333333333;
      else {
        t2 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "rem");
        if (t2 === true)
          unit = theme.fontSize;
        else {
          t2 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "em");
          if (t2 === true)
            unit = theme.fontSize;
          else {
            t1 = t1 ? _null : D.JSString_methods.contains$1(rawDouble, "ex");
            unit = t1 === true ? theme.xHeight : 1;
          }
        }
      }
      value = B.parseDouble(rawDouble, tryParse);
      return value != null ? value * unit : _null;
    },
    _parseTransformParams(params) {
      var t1, current, i, char, isSeparator, isExponent, t2,
        result = C._setArrayType([], type$.JSArray_double);
      for (t1 = params.length, current = "", i = 0; i < t1; ++i) {
        char = params[i];
        isSeparator = char === " " || char === "-" || char === ",";
        isExponent = i > 0 && params[i - 1].toLowerCase() === "e";
        if (isSeparator && !isExponent) {
          if (current !== "") {
            t2 = B.parseDouble(current, false);
            t2.toString;
            D.JSArray_methods.add$1(result, t2);
          }
          current = char === "-" ? "-" : "";
        } else {
          if (char === ".")
            if (C.stringContainsUnchecked(current, ".", 0)) {
              t2 = B.parseDouble(current, false);
              t2.toString;
              D.JSArray_methods.add$1(result, t2);
              current = "";
            }
          current += char;
        }
      }
      if (current.length !== 0) {
        t1 = B.parseDouble(current, false);
        t1.toString;
        D.JSArray_methods.add$1(result, t1);
      }
      return result;
    },
    parseTransform(transform) {
      var t1, t2, matches, result, t3, t4, command, params, transformer;
      if (transform == null || transform === "")
        return null;
      t1 = $.$get$_transformValidator();
      C._asString(transform);
      if (!t1._nativeRegExp.test(transform))
        throw C.wrapException(C.StateError$("illegal or unsupported transform: " + transform));
      t1 = $.$get$_transformCommand().allMatches$1(0, transform);
      t1 = C.List_List$of(t1, true, C._instanceType(t1)._eval$1("Iterable.E"));
      t2 = C._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      matches = new C.ReversedListIterable(t1, t2);
      for (t1 = new C.ListIterator(matches, matches.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"), result = A.AffineMatrix_qrl; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t4 = t3.group$1(1);
        t4.toString;
        command = D.JSString_methods.trim$0(t4);
        t3 = t3.group$1(2);
        t3.toString;
        params = B._parseTransformParams(D.JSString_methods.trim$0(t3));
        transformer = A.Map_uCfR4.$index(0, command);
        if (transformer == null)
          throw C.wrapException(C.StateError$("Unsupported transform: " + command));
        result = transformer.call$2(params, result);
      }
      return result;
    },
    _parseSvgMatrix(params, current) {
      var t1, a, b, c, d, e;
      type$.List_double._as(params);
      t1 = params.length;
      if (0 >= t1)
        return C.ioore(params, 0);
      a = params[0];
      if (1 >= t1)
        return C.ioore(params, 1);
      b = params[1];
      if (2 >= t1)
        return C.ioore(params, 2);
      c = params[2];
      if (3 >= t1)
        return C.ioore(params, 3);
      d = params[3];
      if (4 >= t1)
        return C.ioore(params, 4);
      e = params[4];
      if (5 >= t1)
        return C.ioore(params, 5);
      return B.AffineMatrix$(a, b, c, d, e, params[5], null).multiplied$1(current);
    },
    _parseSvgSkewX(params, current) {
      return B.AffineMatrix$(1, 0, Math.tan(D.JSArray_methods.get$first(type$.List_double._as(params))), 1, 0, 0, null).multiplied$1(current);
    },
    _parseSvgSkewY(params, current) {
      return B.AffineMatrix$(1, Math.tan(D.JSArray_methods.get$first(type$.List_double._as(params))), 0, 1, 0, 0, null).multiplied$1(current);
    },
    _parseSvgTranslate(params, current) {
      var y;
      type$.List_double._as(params);
      y = params.length < 2 ? 0 : params[1];
      return B.AffineMatrix$(1, 0, 0, 1, D.JSArray_methods.get$first(params), y, null).multiplied$1(current);
    },
    _parseSvgScale(params, current) {
      var t1, x;
      type$.List_double._as(params);
      t1 = params.length;
      if (0 >= t1)
        return C.ioore(params, 0);
      x = params[0];
      return B.AffineMatrix$(x, 0, 0, t1 < 2 ? x : params[1], 0, 0, null).multiplied$1(current);
    },
    _parseSvgRotate(params, current) {
      var rotate, t1, x, y;
      type$.List_double._as(params);
      if (0 >= params.length)
        return C.ioore(params, 0);
      rotate = A.AffineMatrix_qrl.rotated$1(params[0] * 3.141592653589793 / 180);
      t1 = params.length;
      if (t1 > 1) {
        x = params[1];
        if (t1 === 3) {
          if (2 >= t1)
            return C.ioore(params, 2);
          y = params[2];
        } else
          y = x;
        return B.AffineMatrix$(1, 0, 0, 1, x, y, null).multiplied$1(rotate).translated$2(-x, -y).multiplied$1(current);
      } else
        return rotate.multiplied$1(current);
    },
    parseRawFillRule(rawFillRule) {
      if (rawFillRule === "inherit" || rawFillRule == null)
        return null;
      return rawFillRule !== "evenodd" ? A.PathFillType_00 : A.PathFillType_10;
    },
    parseDecimalOrPercentage(val) {
      var t1;
      if (B.isPercentage(val))
        return B.parsePercentage(val, 1);
      else {
        t1 = B.parseDouble(val, false);
        t1.toString;
        return t1;
      }
    },
    parsePercentage(val, multiplier) {
      var t1 = B.parseDouble(D.JSString_methods.substring$2(val, 0, val.length - 1), false);
      t1.toString;
      return t1 / 100 * multiplier;
    },
    isPercentage(val) {
      var t1 = D.JSString_methods.endsWith$1(val, "%");
      return t1;
    },
    parsePatternUnitToDouble(rawValue, mode, viewBox) {
      var viewBoxValue, t1, value;
      if (viewBox != null)
        if (mode === "width")
          viewBoxValue = viewBox.width;
        else
          viewBoxValue = mode === "height" ? viewBox.height : null;
      else
        viewBoxValue = null;
      if (D.JSString_methods.contains$1(rawValue, "%")) {
        t1 = C.double_parse(D.JSString_methods.substring$2(rawValue, 0, rawValue.length - 1));
        viewBoxValue.toString;
        value = t1 / 100 * viewBoxValue;
      } else if (D.JSString_methods.startsWith$1(rawValue, "0.")) {
        t1 = C.double_parse(rawValue);
        viewBoxValue.toString;
        value = t1 * viewBoxValue;
      } else
        value = rawValue.length !== 0 ? C.double_parse(rawValue) : null;
      return value;
    },
    listEquals1(a, b, $T) {
      var index, t1;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      if (a === b)
        return true;
      for (index = 0; index < a.length; ++index) {
        t1 = a[index];
        if (!(index < b.length))
          return C.ioore(b, index);
        if (!J.$eq$(t1, b[index]))
          return false;
      }
      return true;
    },
    lerpDouble0(a, b, t) {
      return (1 - t) * a + t * b;
    },
    _encodeMatrix(matrix) {
      if (matrix == null || matrix.$eq(0, A.AffineMatrix_qrl))
        return null;
      return matrix.toMatrix4$0();
    },
    _encodeShader(shader, shaderIds, codec, buffer) {
      var t1, t2, t3, t4, t5, _i, shaderId, t6, t7, t8;
      if (shader == null)
        return;
      if (shader instanceof B.LinearGradient0) {
        t1 = shader.from;
        t2 = shader.to;
        t3 = C._setArrayType([], type$.JSArray_int);
        for (t4 = shader.colors, t5 = t4.length, _i = 0; _i < t4.length; t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i)
          t3.push(t4[_i].value);
        t3 = new Int32Array(C._ensureNativeList(t3));
        t4 = shader.offsets;
        t4.toString;
        t4 = new Float32Array(C._ensureNativeList(t4));
        t5 = shader.tileMode.index;
        buffer._checkPhase$1(A._CurrentSection_2);
        shaderId = buffer._nextShaderId++;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 39);
        buffer._putUint16$1(shaderId);
        buffer._putFloat32$1(t1.x);
        buffer._putFloat32$1(t1.y);
        buffer._putFloat32$1(t2.x);
        buffer._putFloat32$1(t2.y);
        buffer._putUint16$1(t3.length);
        buffer._putInt32List$1(t3);
        buffer._putUint16$1(t4.length);
        buffer._putFloat32List$1(t4);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t5);
      } else if (shader instanceof B.RadialGradient) {
        t1 = shader.center;
        t2 = shader.radius;
        t3 = shader.focalPoint;
        t4 = t3 == null;
        t5 = t4 ? null : t3.x;
        t3 = t4 ? null : t3.y;
        t4 = C._setArrayType([], type$.JSArray_int);
        for (t6 = shader.colors, t7 = t6.length, _i = 0; _i < t6.length; t6.length === t7 || (0, C.throwConcurrentModificationError)(t6), ++_i)
          t4.push(t6[_i].value);
        t4 = new Int32Array(C._ensureNativeList(t4));
        t6 = shader.offsets;
        t6.toString;
        t6 = new Float32Array(C._ensureNativeList(t6));
        t7 = shader.tileMode.index;
        t8 = B._encodeMatrix(shader.transform);
        buffer._checkPhase$1(A._CurrentSection_2);
        shaderId = buffer._nextShaderId++;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 40);
        buffer._putUint16$1(shaderId);
        buffer._putFloat32$1(t1.x);
        buffer._putFloat32$1(t1.y);
        buffer._putFloat32$1(t2);
        t1 = t5 != null && t3 != null;
        t2 = buffer._vector_graphics_codec$_buffer;
        if (t1) {
          D.JSArray_methods.add$1(t2, 1);
          buffer._putFloat32$1(t5);
          buffer._putFloat32$1(t3);
        } else
          D.JSArray_methods.add$1(t2, 0);
        buffer._putUint16$1(t4.length);
        buffer._putInt32List$1(t4);
        buffer._putUint16$1(t6.length);
        buffer._putFloat32List$1(t6);
        buffer._writeTransform$1(t8);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t7);
      } else
        throw C.wrapException(C.StateError$("illegal shader type: " + shader.toString$0(0)));
      shaderIds.$indexSet(0, shader, shaderId);
    },
    _encodeInstructions(instructions, useHalfPrecisionControlPoints) {
      var fillIds, strokeIds, shaderIds, t4, t5, _i, data, t6, t7, t8, t9, t10, t11, paint, nextPaintId, fill, stroke, shaderId, t12, t13, t14, pathIds, nextPathId, path, controlPointTypes, controlPoints, _i0, command, t15, t16, mod, position, textConfig, encoded, vertices, patternData, drawImageData, result, _null = null, _65535 = 65535,
        t1 = type$.JSArray_int,
        t2 = C._setArrayType([], t1),
        t3 = new DataView(new ArrayBuffer(8)),
        buffer = new B.VectorGraphicsBuffer(t2, t3, A._CurrentSection_0);
      buffer.__VectorGraphicsBuffer__eightBytesAsList_A = J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(t3));
      buffer._putUint32$1(8924514);
      D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 1);
      if (buffer._decodePhase.index !== 0)
        C.throwExpression(C.StateError$("Size already written"));
      buffer._decodePhase = A._CurrentSection_1;
      D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 41);
      buffer._putFloat32$1(instructions.width);
      buffer._putFloat32$1(instructions.height);
      t2 = type$.int;
      fillIds = C.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      strokeIds = C.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      shaderIds = C.LinkedHashMap_LinkedHashMap$_empty(type$.Gradient, t2);
      for (t4 = instructions.images, t5 = t4.length, _i = 0; _i < t4.length; t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i) {
        data = t4[_i];
        t6 = data.data;
        buffer._checkPhase$1(A._CurrentSection_1);
        t7 = buffer._nextImageId++;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 46);
        t3.setUint16(0, t7, true);
        t7 = buffer._vector_graphics_codec$_buffer;
        t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t9 = C.instanceType(t8);
        t10 = new C.SubListIterable(t8, 0, 2, t9._eval$1("SubListIterable<ListBase.E>"));
        t10.SubListIterable$3(t8, 0, 2, t9._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t7, t10);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, data.format);
        t10 = t6.length;
        t3.setUint32(0, t10, true);
        t7 = buffer._vector_graphics_codec$_buffer;
        t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t8 = C.instanceType(t9);
        t11 = new C.SubListIterable(t9, 0, 4, t8._eval$1("SubListIterable<ListBase.E>"));
        t11.SubListIterable$3(t9, 0, 4, t8._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t7, t11);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(t6), t6.byteOffset, t10));
      }
      for (t4 = instructions.paints, t5 = t4.length, _i = 0; t6 = t4.length, _i < t6; t4.length === t5 || (0, C.throwConcurrentModificationError)(t4), ++_i) {
        paint = t4[_i];
        t6 = paint.fill;
        B._encodeShader(t6 == null ? _null : t6.shader, shaderIds, A.C_VectorGraphicsCodec, buffer);
        t6 = paint.stroke;
        B._encodeShader(t6 == null ? _null : t6.shader, shaderIds, A.C_VectorGraphicsCodec, buffer);
      }
      for (nextPaintId = 0, _i = 0; _i < t4.length; t4.length === t6 || (0, C.throwConcurrentModificationError)(t4), ++_i) {
        paint = t4[_i];
        fill = paint.fill;
        stroke = paint.stroke;
        if (fill != null) {
          shaderId = shaderIds.$index(0, fill.shader);
          t5 = fill.color;
          buffer._checkPhase$1(A._CurrentSection_3);
          t7 = buffer._nextPaintId++;
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 28);
          t3.setUint32(0, t5.value, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t9 = C.instanceType(t8);
          t10 = new C.SubListIterable(t8, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
          t10.SubListIterable$3(t8, 0, 4, t9._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t10);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, paint.blendMode.index);
          t3.setUint16(0, t7, true);
          t10 = buffer._vector_graphics_codec$_buffer;
          t5 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t8 = C.instanceType(t5);
          t9 = new C.SubListIterable(t5, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
          t9.SubListIterable$3(t5, 0, 2, t8._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t10, t9);
          t3.setUint16(0, shaderId == null ? _65535 : shaderId, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t9 = C.instanceType(t8);
          t10 = new C.SubListIterable(t8, 0, 2, t9._eval$1("SubListIterable<ListBase.E>"));
          t10.SubListIterable$3(t8, 0, 2, t9._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t10);
          fillIds.$indexSet(0, nextPaintId, t7);
        }
        if (stroke != null) {
          shaderId = shaderIds.$index(0, stroke.shader);
          t5 = stroke.color;
          t7 = stroke.cap;
          t7 = t7 == null ? _null : t7.index;
          if (t7 == null)
            t7 = 0;
          t8 = stroke.join;
          t8 = t8 == null ? _null : t8.index;
          if (t8 == null)
            t8 = 0;
          t9 = stroke.miterLimit;
          if (t9 == null)
            t9 = 4;
          t10 = stroke.width;
          if (t10 == null)
            t10 = 1;
          buffer._checkPhase$1(A._CurrentSection_3);
          t11 = buffer._nextPaintId++;
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 29);
          t3.setUint32(0, t5.value, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t12 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t13 = C.instanceType(t12);
          t14 = new C.SubListIterable(t12, 0, 4, t13._eval$1("SubListIterable<ListBase.E>"));
          t14.SubListIterable$3(t12, 0, 4, t13._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t14);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t7);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t8);
          D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, paint.blendMode.index);
          t3.setFloat32(0, t9, true);
          t9 = buffer._vector_graphics_codec$_buffer;
          t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t5 = C.instanceType(t8);
          t7 = new C.SubListIterable(t8, 0, 4, t5._eval$1("SubListIterable<ListBase.E>"));
          t7.SubListIterable$3(t8, 0, 4, t5._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t9, t7);
          t3.setFloat32(0, t10, true);
          t10 = buffer._vector_graphics_codec$_buffer;
          t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t5 = C.instanceType(t7);
          t8 = new C.SubListIterable(t7, 0, 4, t5._eval$1("SubListIterable<ListBase.E>"));
          t8.SubListIterable$3(t7, 0, 4, t5._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t10, t8);
          t3.setUint16(0, t11, true);
          t8 = buffer._vector_graphics_codec$_buffer;
          t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t5 = C.instanceType(t10);
          t7 = new C.SubListIterable(t10, 0, 2, t5._eval$1("SubListIterable<ListBase.E>"));
          t7.SubListIterable$3(t10, 0, 2, t5._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t8, t7);
          t3.setUint16(0, shaderId == null ? _65535 : shaderId, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t8 = C.instanceType(t7);
          t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
          t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t9);
          strokeIds.$indexSet(0, nextPaintId, t11);
        }
        ++nextPaintId;
      }
      pathIds = C.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
      for (t2 = instructions.paths, t4 = t2.length, t5 = type$.CubicToCommand, t6 = type$.JSArray_double, t7 = type$.LineToCommand, t8 = type$.MoveToCommand, nextPathId = 0, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        path = t2[_i];
        controlPointTypes = C._setArrayType([], t1);
        controlPoints = C._setArrayType([], t6);
        for (t9 = path._path$_commands, t10 = t9.length, _i0 = 0; _i0 < t9.length; t9.length === t10 || (0, C.throwConcurrentModificationError)(t9), ++_i0) {
          command = t9[_i0];
          switch (command.type.index) {
            case 0:
              t8._as(command);
              D.JSArray_methods.add$1(controlPointTypes, 0);
              D.JSArray_methods.addAll$1(controlPoints, C._setArrayType([command.x, command.y], t6));
              break;
            case 1:
              t7._as(command);
              D.JSArray_methods.add$1(controlPointTypes, 1);
              D.JSArray_methods.addAll$1(controlPoints, C._setArrayType([command.x, command.y], t6));
              break;
            case 2:
              t5._as(command);
              D.JSArray_methods.add$1(controlPointTypes, 2);
              D.JSArray_methods.addAll$1(controlPoints, C._setArrayType([command.x1, command.y1, command.x2, command.y2, command.x3, command.y3], t6));
              break;
            case 3:
              D.JSArray_methods.add$1(controlPointTypes, 3);
              break;
          }
        }
        t9 = new Uint8Array(C._ensureNativeList(controlPointTypes));
        t10 = new Float32Array(C._ensureNativeList(controlPoints));
        buffer._checkPhase$1(A._CurrentSection_4);
        t11 = buffer._nextPathId++;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 27);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, path.fillType.index);
        t3.setUint16(0, t11, true);
        t12 = buffer._vector_graphics_codec$_buffer;
        t13 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t14 = C.instanceType(t13);
        t15 = new C.SubListIterable(t13, 0, 2, t14._eval$1("SubListIterable<ListBase.E>"));
        t15.SubListIterable$3(t13, 0, 2, t14._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t12, t15);
        t15 = t9.length;
        t3.setUint32(0, t15, true);
        t12 = buffer._vector_graphics_codec$_buffer;
        t14 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t13 = C.instanceType(t14);
        t16 = new C.SubListIterable(t14, 0, 4, t13._eval$1("SubListIterable<ListBase.E>"));
        t16.SubListIterable$3(t14, 0, 4, t13._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t12, t16);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(t9), t9.byteOffset, t15));
        t15 = t10.length;
        t3.setUint32(0, t15, true);
        t9 = buffer._vector_graphics_codec$_buffer;
        t16 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t12 = C.instanceType(t16);
        t13 = new C.SubListIterable(t16, 0, 4, t12._eval$1("SubListIterable<ListBase.E>"));
        t13.SubListIterable$3(t16, 0, 4, t12._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t9, t13);
        t9 = buffer._vector_graphics_codec$_buffer;
        mod = D.JSInt_methods.$mod(t9.length, 4);
        if (mod !== 0) {
          t12 = $.$get$VectorGraphicsBuffer__zeroBuffer();
          t13 = 4 - mod;
          t14 = C.instanceType(t12);
          t16 = new C.SubListIterable(t12, 0, t13, t14._eval$1("SubListIterable<ListBase.E>"));
          t16.SubListIterable$3(t12, 0, t13, t14._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t9, t16);
        }
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat32List_methods.get$buffer(t10), t10.byteOffset, 4 * t15));
        pathIds.$indexSet(0, nextPathId, t11);
        ++nextPathId;
      }
      for (t2 = instructions.textPositions, t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        position = t2[_i];
        t5 = position.x;
        t6 = position.y;
        t7 = position.dx;
        t8 = position.dy;
        t9 = position.transform;
        t9 = t9 == null ? _null : t9.toMatrix4$0();
        buffer._checkPhase$1(A._CurrentSection_5);
        t10 = buffer._nextTextPositionId++;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 50);
        t3.setUint16(0, t10, true);
        t10 = buffer._vector_graphics_codec$_buffer;
        t11 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t12 = C.instanceType(t11);
        t13 = new C.SubListIterable(t11, 0, 2, t12._eval$1("SubListIterable<ListBase.E>"));
        t13.SubListIterable$3(t11, 0, 2, t12._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t10, t13);
        t3.setFloat32(0, t5 == null ? 0 / 0 : t5, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t11 = C.instanceType(t10);
        t12 = new C.SubListIterable(t10, 0, 4, t11._eval$1("SubListIterable<ListBase.E>"));
        t12.SubListIterable$3(t10, 0, 4, t11._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t12);
        t3.setFloat32(0, t6 == null ? 0 / 0 : t6, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t10 = C.instanceType(t6);
        t11 = new C.SubListIterable(t6, 0, 4, t10._eval$1("SubListIterable<ListBase.E>"));
        t11.SubListIterable$3(t6, 0, 4, t10._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t11);
        t3.setFloat32(0, t7 == null ? 0 / 0 : t7, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t7 = C.instanceType(t6);
        t10 = new C.SubListIterable(t6, 0, 4, t7._eval$1("SubListIterable<ListBase.E>"));
        t10.SubListIterable$3(t6, 0, 4, t7._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t10);
        t3.setFloat32(0, t8 == null ? 0 / 0 : t8, true);
        t5 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t7 = C.instanceType(t6);
        t8 = new C.SubListIterable(t6, 0, 4, t7._eval$1("SubListIterable<ListBase.E>"));
        t8.SubListIterable$3(t6, 0, 4, t7._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t5, t8);
        t5 = position.reset ? 1 : 0;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t5);
        t5 = buffer._vector_graphics_codec$_buffer;
        if (t9 != null) {
          t6 = t9.length;
          D.JSArray_methods.add$1(t5, t6);
          t5 = buffer._vector_graphics_codec$_buffer;
          mod = D.JSInt_methods.$mod(t5.length, 8);
          if (mod !== 0) {
            t7 = $.$get$VectorGraphicsBuffer__zeroBuffer();
            t8 = 8 - mod;
            t10 = C.instanceType(t7);
            t11 = new C.SubListIterable(t7, 0, t8, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t7, 0, t8, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t5, t11);
          }
          D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(t9), t9.byteOffset, 8 * t6));
        } else
          D.JSArray_methods.add$1(t5, 0);
      }
      for (t2 = instructions.text, t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        textConfig = t2[_i];
        t5 = textConfig.fontFamily;
        buffer._checkPhase$1(A._CurrentSection_6);
        t6 = buffer._nextTextId++;
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 45);
        t3.setUint16(0, t6, true);
        t6 = buffer._vector_graphics_codec$_buffer;
        t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t8 = C.instanceType(t7);
        t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
        t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t6, t9);
        t3.setFloat32(0, textConfig.xAnchorMultiplier, true);
        t9 = buffer._vector_graphics_codec$_buffer;
        t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t7 = C.instanceType(t6);
        t8 = new C.SubListIterable(t6, 0, 4, t7._eval$1("SubListIterable<ListBase.E>"));
        t8.SubListIterable$3(t6, 0, 4, t7._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t9, t8);
        t3.setFloat32(0, textConfig.fontSize, true);
        t8 = buffer._vector_graphics_codec$_buffer;
        t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t6 = C.instanceType(t9);
        t7 = new C.SubListIterable(t9, 0, 4, t6._eval$1("SubListIterable<ListBase.E>"));
        t7.SubListIterable$3(t9, 0, 4, t6._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t8, t7);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, textConfig.fontWeight.index);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, textConfig.decoration.mask);
        D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, textConfig.decorationStyle.index);
        t3.setUint32(0, textConfig.decorationColor.value, true);
        t7 = buffer._vector_graphics_codec$_buffer;
        t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t6 = C.instanceType(t8);
        t9 = new C.SubListIterable(t8, 0, 4, t6._eval$1("SubListIterable<ListBase.E>"));
        t9.SubListIterable$3(t8, 0, 4, t6._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t7, t9);
        if (t5 != null) {
          encoded = D.C_Utf8Encoder.convert$1(t5);
          t5 = encoded.length;
          t3.setUint16(0, t5, true);
          t6 = buffer._vector_graphics_codec$_buffer;
          t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t8 = C.instanceType(t7);
          t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
          t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t6, t9);
          D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(encoded), encoded.byteOffset, t5));
        } else {
          t3.setUint16(0, 0, true);
          t5 = buffer._vector_graphics_codec$_buffer;
          t6 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
          t7 = C.instanceType(t6);
          t8 = new C.SubListIterable(t6, 0, 2, t7._eval$1("SubListIterable<ListBase.E>"));
          t8.SubListIterable$3(t6, 0, 2, t7._eval$1("ListBase.E"));
          D.JSArray_methods.addAll$1(t5, t8);
        }
        encoded = D.C_Utf8Encoder.convert$1(textConfig.text);
        t5 = encoded.length;
        t3.setUint16(0, t5, true);
        t6 = buffer._vector_graphics_codec$_buffer;
        t7 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
        t8 = C.instanceType(t7);
        t9 = new C.SubListIterable(t7, 0, 2, t8._eval$1("SubListIterable<ListBase.E>"));
        t9.SubListIterable$3(t7, 0, 2, t8._eval$1("ListBase.E"));
        D.JSArray_methods.addAll$1(t6, t9);
        D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeUint8List_methods.get$buffer(encoded), encoded.byteOffset, t5));
      }
      for (t2 = instructions.commands, t4 = t2.length, t5 = instructions.drawImages, t6 = instructions.patternData, t7 = instructions.vertices, _i = 0; _i < t2.length; t2.length === t4 || (0, C.throwConcurrentModificationError)(t2), ++_i) {
        command = t2[_i];
        switch (command.type.index) {
          case 0:
            t8 = command.paintId;
            if (fillIds.containsKey$1(0, t8)) {
              t9 = pathIds.$index(0, command.objectId);
              t9.toString;
              t10 = fillIds.$index(0, t8);
              t10.toString;
              A.C_VectorGraphicsCodec.writeDrawPath$4(buffer, t9, t10, command.patternId);
            }
            if (strokeIds.containsKey$1(0, t8)) {
              t9 = pathIds.$index(0, command.objectId);
              t9.toString;
              t8 = strokeIds.$index(0, t8);
              t8.toString;
              A.C_VectorGraphicsCodec.writeDrawPath$4(buffer, t9, t8, command.patternId);
            }
            break;
          case 1:
            t8 = command.objectId;
            t8.toString;
            if (!(t8 >= 0 && t8 < t7.length))
              return C.ioore(t7, t8);
            vertices = t7[t8];
            t8 = fillIds.$index(0, command.paintId);
            t8.toString;
            t9 = vertices.get$vertices();
            t10 = vertices.get$indices();
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 31);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t11 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t12 = C.instanceType(t11);
            t13 = new C.SubListIterable(t11, 0, 2, t12._eval$1("SubListIterable<ListBase.E>"));
            t13.SubListIterable$3(t11, 0, 2, t12._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t13);
            t3.setUint16(0, t9.get$length(t9), true);
            t13 = buffer._vector_graphics_codec$_buffer;
            t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t11 = C.instanceType(t8);
            t12 = new C.SubListIterable(t8, 0, 2, t11._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t8, 0, 2, t11._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t13, t12);
            t12 = buffer._vector_graphics_codec$_buffer;
            mod = D.JSInt_methods.$mod(t12.length, 4);
            if (mod !== 0) {
              t8 = $.$get$VectorGraphicsBuffer__zeroBuffer();
              t11 = 4 - mod;
              t13 = C.instanceType(t8);
              t14 = new C.SubListIterable(t8, 0, t11, t13._eval$1("SubListIterable<ListBase.E>"));
              t14.SubListIterable$3(t8, 0, t11, t13._eval$1("ListBase.E"));
              D.JSArray_methods.addAll$1(t12, t14);
            }
            D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, t9.get$buffer(t9).asUint8List$2(0, t9.byteOffset, 4 * t9.get$length(t9)));
            t3.setUint16(0, t10.get$length(t10), true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t11 = C.instanceType(t9);
            t12 = new C.SubListIterable(t9, 0, 2, t11._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t9, 0, 2, t11._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t12);
            t12 = buffer._vector_graphics_codec$_buffer;
            mod = D.JSInt_methods.$mod(t12.length, 2);
            if (mod !== 0) {
              t8 = $.$get$VectorGraphicsBuffer__zeroBuffer();
              t9 = 2 - mod;
              t11 = C.instanceType(t8);
              t13 = new C.SubListIterable(t8, 0, t9, t11._eval$1("SubListIterable<ListBase.E>"));
              t13.SubListIterable$3(t8, 0, t9, t11._eval$1("ListBase.E"));
              D.JSArray_methods.addAll$1(t12, t13);
            }
            D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, t10.get$buffer(t10).asUint8List$2(0, t10.byteOffset, 2 * t10.get$length(t10)));
            break;
          case 2:
            t8 = fillIds.$index(0, command.paintId);
            t8.toString;
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 37);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 3:
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 38);
            break;
          case 4:
            t8 = pathIds.$index(0, command.objectId);
            t8.toString;
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 42);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 5:
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 43);
            break;
          case 8:
            t8 = command.patternDataId;
            t8.toString;
            if (!(t8 >= 0 && t8 < t6.length))
              return C.ioore(t6, t8);
            patternData = t6[t8];
            t8 = patternData.transform.toMatrix4$0();
            buffer._checkPhase$1(A._CurrentSection_7);
            t9 = buffer._nextPatternId++;
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 49);
            t3.setUint16(0, t9, true);
            t9 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t11 = C.instanceType(t10);
            t12 = new C.SubListIterable(t10, 0, 2, t11._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t10, 0, 2, t11._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t9, t12);
            t3.setFloat32(0, patternData.x, true);
            t12 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 4, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 4, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t12, t11);
            t3.setFloat32(0, patternData.y, true);
            t11 = buffer._vector_graphics_codec$_buffer;
            t12 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t12);
            t10 = new C.SubListIterable(t12, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t10.SubListIterable$3(t12, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t11, t10);
            t3.setFloat32(0, patternData.width, true);
            t10 = buffer._vector_graphics_codec$_buffer;
            t11 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t11);
            t12 = new C.SubListIterable(t11, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t11, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t10, t12);
            t3.setFloat32(0, patternData.height, true);
            t12 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t10);
            t11 = new C.SubListIterable(t10, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t10, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t12, t11);
            t9 = t8.length;
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, t9);
            t10 = buffer._vector_graphics_codec$_buffer;
            mod = D.JSInt_methods.$mod(t10.length, 8);
            if (mod !== 0) {
              t11 = $.$get$VectorGraphicsBuffer__zeroBuffer();
              t12 = 8 - mod;
              t13 = C.instanceType(t11);
              t14 = new C.SubListIterable(t11, 0, t12, t13._eval$1("SubListIterable<ListBase.E>"));
              t14.SubListIterable$3(t11, 0, t12, t13._eval$1("ListBase.E"));
              D.JSArray_methods.addAll$1(t10, t14);
            }
            D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(t8), t8.byteOffset, 8 * t9));
            break;
          case 9:
            t8 = command.objectId;
            t8.toString;
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 51);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 6:
            t8 = command.objectId;
            t8.toString;
            t9 = command.paintId;
            t10 = fillIds.$index(0, t9);
            t9 = strokeIds.$index(0, t9);
            t11 = command.patternId;
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 44);
            t3.setUint16(0, t8, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t12 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t13 = C.instanceType(t12);
            t14 = new C.SubListIterable(t12, 0, 2, t13._eval$1("SubListIterable<ListBase.E>"));
            t14.SubListIterable$3(t12, 0, 2, t13._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t14);
            t3.setUint16(0, t10 == null ? _65535 : t10, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t10 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t12 = C.instanceType(t10);
            t13 = new C.SubListIterable(t10, 0, 2, t12._eval$1("SubListIterable<ListBase.E>"));
            t13.SubListIterable$3(t10, 0, 2, t12._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t13);
            t3.setUint16(0, t9 == null ? _65535 : t9, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t12 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t12);
            t3.setUint16(0, t11 == null ? _65535 : t11, true);
            t8 = buffer._vector_graphics_codec$_buffer;
            t9 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t10 = C.instanceType(t9);
            t11 = new C.SubListIterable(t9, 0, 2, t10._eval$1("SubListIterable<ListBase.E>"));
            t11.SubListIterable$3(t9, 0, 2, t10._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t8, t11);
            break;
          case 7:
            t8 = command.objectId;
            t8.toString;
            if (!(t8 >= 0 && t8 < t5.length))
              return C.ioore(t5, t8);
            drawImageData = t5[t8];
            t8 = drawImageData.rect;
            t9 = t8.left;
            t10 = t8.top;
            t11 = drawImageData.transform;
            t11 = t11 == null ? _null : t11.toMatrix4$0();
            buffer._checkPhase$1(A._CurrentSection_7);
            buffer._addCommandsTag$0();
            D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 47);
            t3.setUint16(0, drawImageData.id, true);
            t12 = buffer._vector_graphics_codec$_buffer;
            t13 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t14 = C.instanceType(t13);
            t15 = new C.SubListIterable(t13, 0, 2, t14._eval$1("SubListIterable<ListBase.E>"));
            t15.SubListIterable$3(t13, 0, 2, t14._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t12, t15);
            t3.setFloat32(0, t9, true);
            t15 = buffer._vector_graphics_codec$_buffer;
            t12 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t13 = C.instanceType(t12);
            t14 = new C.SubListIterable(t12, 0, 4, t13._eval$1("SubListIterable<ListBase.E>"));
            t14.SubListIterable$3(t12, 0, 4, t13._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t15, t14);
            t3.setFloat32(0, t10, true);
            t14 = buffer._vector_graphics_codec$_buffer;
            t15 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t12 = C.instanceType(t15);
            t13 = new C.SubListIterable(t15, 0, 4, t12._eval$1("SubListIterable<ListBase.E>"));
            t13.SubListIterable$3(t15, 0, 4, t12._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t14, t13);
            t3.setFloat32(0, t8.right - t9, true);
            t9 = buffer._vector_graphics_codec$_buffer;
            t13 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t12 = C.instanceType(t13);
            t14 = new C.SubListIterable(t13, 0, 4, t12._eval$1("SubListIterable<ListBase.E>"));
            t14.SubListIterable$3(t13, 0, 4, t12._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t9, t14);
            t3.setFloat32(0, t8.bottom - t10, true);
            t10 = buffer._vector_graphics_codec$_buffer;
            t8 = buffer.__VectorGraphicsBuffer__eightBytesAsList_A;
            t9 = C.instanceType(t8);
            t12 = new C.SubListIterable(t8, 0, 4, t9._eval$1("SubListIterable<ListBase.E>"));
            t12.SubListIterable$3(t8, 0, 4, t9._eval$1("ListBase.E"));
            D.JSArray_methods.addAll$1(t10, t12);
            t8 = buffer._vector_graphics_codec$_buffer;
            if (t11 != null) {
              t9 = t11.length;
              D.JSArray_methods.add$1(t8, t9);
              t8 = buffer._vector_graphics_codec$_buffer;
              mod = D.JSInt_methods.$mod(t8.length, 8);
              if (mod !== 0) {
                t10 = $.$get$VectorGraphicsBuffer__zeroBuffer();
                t12 = 8 - mod;
                t13 = C.instanceType(t10);
                t14 = new C.SubListIterable(t10, 0, t12, t13._eval$1("SubListIterable<ListBase.E>"));
                t14.SubListIterable$3(t10, 0, t12, t13._eval$1("ListBase.E"));
                D.JSArray_methods.addAll$1(t8, t14);
              }
              D.JSArray_methods.addAll$1(buffer._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(t11), t11.byteOffset, 8 * t9));
            } else
              D.JSArray_methods.add$1(t8, 0);
            break;
        }
      }
      if (buffer._vector_graphics_codec$_isDone)
        C.throwExpression(C.StateError$("done() must not be called more than once on the same VectorGraphicsBuffer."));
      result = J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(new Uint8Array(C._ensureNativeList(buffer._vector_graphics_codec$_buffer))));
      buffer.set$_vector_graphics_codec$_buffer(C._setArrayType([], t1));
      buffer._vector_graphics_codec$_isDone = true;
      return J.asUint8List$0$x(D.NativeByteData_methods.get$buffer(result));
    }
  },
  A, Ar, A8, As, R, I, At, A_, Au, S, Av, M, Aw, Ax, A9, P, X, H, A2, Ay, G, T, A0, Aa, Y, E, Ab, Q, F, Ac, Ad, A3, Ae, L, K, V;
  J = holdersList[1];
  C = holdersList[0];
  D = holdersList[2];
  Z = holdersList[124];
  W = holdersList[76];
  Af = holdersList[85];
  A4 = holdersList[82];
  Ag = holdersList[171];
  Ah = holdersList[206];
  Ai = holdersList[72];
  A5 = holdersList[105];
  Aj = holdersList[222];
  U = holdersList[132];
  Ak = holdersList[157];
  A1 = holdersList[60];
  A6 = holdersList[221];
  Al = holdersList[78];
  N = holdersList[210];
  Am = holdersList[189];
  O = holdersList[131];
  An = holdersList[49];
  A7 = holdersList[41];
  Ao = holdersList[37];
  Ap = holdersList[203];
  Aq = holdersList[42];
  B = hunkHelpers.updateHolder(holdersList[29], B);
  A = holdersList[207];
  Ar = holdersList[215];
  A8 = holdersList[156];
  As = holdersList[178];
  R = holdersList[120];
  I = holdersList[149];
  At = holdersList[184];
  A_ = holdersList[130];
  Au = holdersList[122];
  S = holdersList[141];
  Av = holdersList[220];
  M = holdersList[123];
  Aw = holdersList[199];
  Ax = holdersList[38];
  A9 = holdersList[48];
  P = holdersList[138];
  X = holdersList[144];
  H = holdersList[135];
  A2 = holdersList[84];
  Ay = holdersList[119];
  G = holdersList[145];
  T = holdersList[111];
  A0 = holdersList[146];
  Aa = holdersList[114];
  Y = holdersList[172];
  E = holdersList[136];
  Ab = holdersList[126];
  Q = holdersList[117];
  F = holdersList[137];
  Ac = holdersList[121];
  Ad = holdersList[219];
  A3 = holdersList[100];
  Ae = holdersList[218];
  L = holdersList[106];
  K = holdersList[193];
  V = holdersList[115];
  B.ImageDescriptor.prototype = {
    instantiateCodec$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$self = this, t1;
      var $async$instantiateCodec$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._ui$_data;
              if (t1 == null)
                throw C.wrapException(C.StateError$("Object is disposed"));
              t1 = $.$get$_renderer().instantiateImageCodec$4$allowUpscaling$targetHeight$targetWidth(t1, false, null, null);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$instantiateCodec$0, $async$completer);
    }
  };
  B._CheckboxType.prototype = {
    _enumToString$0() {
      return "_CheckboxType." + this._name;
    }
  };
  B.Checkbox.prototype = {
    createState$0() {
      return new B._CheckboxState(new B._CheckboxPainter($.$get$ChangeNotifier__emptyListeners()), $, $, $, $, $, $, $, $, D.Duration_100000, $, null, false, false, null, null);
    }
  };
  B._CheckboxState.prototype = {
    initState$0() {
      this.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$initState();
      this._previousValue = this._widget.value;
    },
    didUpdateWidget$1(oldWidget) {
      var t1, _this = this;
      type$.Checkbox._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = oldWidget.value;
      if (t1 !== _this._widget.value) {
        _this._previousValue = t1;
        _this.animateToValue$0();
      }
    },
    dispose$0() {
      this._checkbox$_painter.dispose$0();
      this.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose();
    },
    get$onChanged() {
      return this._widget.onChanged;
    },
    get$tristate() {
      this._widget.toString;
      return false;
    },
    get$value(_) {
      return this._widget.value;
    },
    get$_widgetFillColor() {
      return new Q._WidgetStatePropertyWith(new B._CheckboxState__widgetFillColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    _resolveSide$2(side, states) {
      type$.Set_WidgetState._as(states);
      if (side instanceof T._WidgetStateBorderSide)
        return M.WidgetStateProperty_resolveAs(side, states, type$.nullable_BorderSide);
      if (!states.contains$1(0, F.WidgetState_4))
        return side;
      return null;
    },
    build$1(context) {
      var checkboxTheme, defaults, effectiveMaterialTapTargetSize, effectiveVisualDensity, t1, size, activeStates, inactiveStates, t2, activeColor, t3, effectiveActiveColor, inactiveColor, t4, effectiveInactiveColor, activeSide, inactiveSide, focusedStates, t5, effectiveFocusOverlayColor, hoveredStates, effectiveHoverOverlayColor, effectiveActivePressedOverlayColor, effectiveInactivePressedOverlayColor, checkStates, effectiveCheckColor, effectiveSplashRadius, _this = this, _null = null;
      _this._widget.toString;
      switch (0) {
        case 0:
          break;
      }
      context.dependOnInheritedWidgetOfExactType$1$0(type$.CheckboxTheme);
      checkboxTheme = H.Theme_of(context).checkboxTheme;
      H.Theme_of(context);
      defaults = new B._CheckboxDefaultsM3(H.Theme_of(context), H.Theme_of(context).colorScheme, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      _this._widget.toString;
      effectiveMaterialTapTargetSize = defaults.get$materialTapTargetSize();
      _this._widget.toString;
      effectiveVisualDensity = defaults.get$visualDensity();
      switch (effectiveMaterialTapTargetSize.index) {
        case 0:
          t1 = K.Size_48_48;
          break;
        case 1:
          t1 = A0.Size_40_40;
          break;
        default:
          t1 = _null;
      }
      size = t1.$add(0, new C.Offset(effectiveVisualDensity.horizontal, effectiveVisualDensity.vertical).$mul(0, 4));
      activeStates = _this.get$states();
      activeStates.add$1(0, F.WidgetState_4);
      inactiveStates = _this.get$states();
      inactiveStates.remove$1(0, F.WidgetState_4);
      _this._widget.toString;
      t1 = _this.get$_widgetFillColor();
      t2 = type$.Set_WidgetState;
      t2._as(activeStates);
      activeColor = t1._resolve.call$1(activeStates);
      if (activeColor == null) {
        t1 = checkboxTheme.fillColor;
        activeColor = t1 == null ? _null : t1.resolve$1(activeStates);
      }
      t1 = activeColor == null;
      if (t1) {
        t3 = defaults.get$fillColor()._resolve.call$1(activeStates);
        t3.toString;
        effectiveActiveColor = t3;
      } else
        effectiveActiveColor = activeColor;
      _this._widget.toString;
      t3 = _this.get$_widgetFillColor();
      t2._as(inactiveStates);
      inactiveColor = t3._resolve.call$1(inactiveStates);
      if (inactiveColor == null) {
        t3 = checkboxTheme.fillColor;
        inactiveColor = t3 == null ? _null : t3.resolve$1(inactiveStates);
      }
      t3 = inactiveColor == null;
      if (t3) {
        t4 = defaults.get$fillColor()._resolve.call$1(inactiveStates);
        t4.toString;
        effectiveInactiveColor = t4;
      } else
        effectiveInactiveColor = inactiveColor;
      _this._widget.toString;
      t4 = _this._resolveSide$2(_null, activeStates);
      activeSide = t4 == null ? _this._resolveSide$2(checkboxTheme.side, activeStates) : t4;
      if (activeSide == null) {
        t4 = _this._resolveSide$2(defaults.get$side(), activeStates);
        t4.toString;
        activeSide = t4;
      }
      _this._widget.toString;
      t4 = _this._resolveSide$2(_null, inactiveStates);
      inactiveSide = t4 == null ? _this._resolveSide$2(checkboxTheme.side, inactiveStates) : t4;
      if (inactiveSide == null) {
        t4 = _this._resolveSide$2(defaults.get$side(), inactiveStates);
        t4.toString;
        inactiveSide = t4;
      }
      focusedStates = _this.get$states();
      focusedStates.add$1(0, I.WidgetState_1);
      _this._widget.toString;
      t4 = checkboxTheme.overlayColor;
      t5 = t4 == null ? _null : t4.resolve$1(focusedStates);
      effectiveFocusOverlayColor = t5;
      if (effectiveFocusOverlayColor == null) {
        t5 = defaults.get$overlayColor()._resolve.call$1(t2._as(focusedStates));
        t5.toString;
        effectiveFocusOverlayColor = t5;
      }
      hoveredStates = _this.get$states();
      hoveredStates.add$1(0, I.WidgetState_0);
      _this._widget.toString;
      t5 = t4 == null ? _null : t4.resolve$1(hoveredStates);
      effectiveHoverOverlayColor = t5;
      if (effectiveHoverOverlayColor == null) {
        t2 = defaults.get$overlayColor()._resolve.call$1(t2._as(hoveredStates));
        t2.toString;
        effectiveHoverOverlayColor = t2;
      }
      activeStates.add$1(0, I.WidgetState_2);
      _this._widget.toString;
      t2 = t4 == null ? _null : t4.resolve$1(activeStates);
      if (t2 == null) {
        t1 = t1 ? _null : activeColor.withAlpha$1(31);
        effectiveActivePressedOverlayColor = t1;
      } else
        effectiveActivePressedOverlayColor = t2;
      if (effectiveActivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(activeStates);
        t1.toString;
        effectiveActivePressedOverlayColor = t1;
      }
      inactiveStates.add$1(0, I.WidgetState_2);
      _this._widget.toString;
      t1 = t4 == null ? _null : t4.resolve$1(inactiveStates);
      if (t1 == null) {
        t1 = t3 ? _null : inactiveColor.withAlpha$1(31);
        effectiveInactivePressedOverlayColor = t1;
      } else
        effectiveInactivePressedOverlayColor = t1;
      if (effectiveInactivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(inactiveStates);
        t1.toString;
        effectiveInactivePressedOverlayColor = t1;
      }
      if (_this.ToggleableStateMixin__downPosition != null) {
        effectiveHoverOverlayColor = _this.get$states().contains$1(0, F.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
        effectiveFocusOverlayColor = _this.get$states().contains$1(0, F.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
      }
      _this._widget.toString;
      checkStates = _this.get$states();
      _this._widget.toString;
      t1 = checkboxTheme.checkColor;
      t1 = t1 == null ? _null : t1.resolve$1(checkStates);
      effectiveCheckColor = t1;
      if (effectiveCheckColor == null) {
        t1 = defaults.get$checkColor().resolve$1(checkStates);
        t1.toString;
        effectiveCheckColor = t1;
      }
      _this._widget.toString;
      effectiveSplashRadius = checkboxTheme.splashRadius;
      if (effectiveSplashRadius == null)
        effectiveSplashRadius = defaults.get$splashRadius();
      t1 = _this._widget.value;
      t2 = _this._checkbox$_painter;
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t3 === $ && C.throwLateFieldNI("_position");
      t2.set$position(0, t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t3 === $ && C.throwLateFieldNI("_reaction");
      t2.set$reaction(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t2.set$reactionFocusFade(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t2.set$reactionHoverFade(t3);
      t2.set$inactiveReactionColor(effectiveInactivePressedOverlayColor);
      t2.set$reactionColor(effectiveActivePressedOverlayColor);
      t2.set$hoverColor(effectiveHoverOverlayColor);
      t2.set$focusColor(effectiveFocusOverlayColor);
      t2.set$splashRadius(effectiveSplashRadius);
      t2.set$downPosition(_this.ToggleableStateMixin__downPosition);
      t2.set$isFocused(_this.get$states().contains$1(0, I.WidgetState_1));
      t2.set$isHovered(_this.get$states().contains$1(0, I.WidgetState_0));
      t2.set$activeColor(effectiveActiveColor);
      t2.set$inactiveColor(effectiveInactiveColor);
      t2.set$checkColor(effectiveCheckColor);
      t2.set$value(0, _this._widget.value);
      t2.set$previousValue(_this._previousValue);
      _this._widget.toString;
      t3 = checkboxTheme.shape;
      t2.set$shape(0, t3 == null ? defaults.get$shape(0) : t3);
      t2.set$activeSide(activeSide);
      t2.set$inactiveSide(inactiveSide);
      t2 = _this.buildToggleable$5$autofocus$focusNode$mouseCursor$painter$size(false, _null, new Q._WidgetStatePropertyWith(new B._CheckboxState_build_closure(_this, checkboxTheme), type$._WidgetStatePropertyWith_MouseCursor), t2, size);
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t2, _null);
    },
    $isTickerProvider: 1
  };
  B._CheckboxPainter.prototype = {
    set$checkColor(value) {
      if (J.$eq$(this._checkColor, value))
        return;
      this._checkColor = value;
      this.notifyListeners$0();
    },
    set$value(_, value) {
      if (this._checkbox$_value === value)
        return;
      this._checkbox$_value = value;
      this.notifyListeners$0();
    },
    set$previousValue(value) {
      if (this._previousValue == value)
        return;
      this._previousValue = value;
      this.notifyListeners$0();
    },
    set$shape(_, value) {
      if (J.$eq$(this._checkbox$_shape, value))
        return;
      this._checkbox$_shape = value;
      this.notifyListeners$0();
    },
    set$activeSide(value) {
      if (J.$eq$(this._activeSide, value))
        return;
      this._activeSide = value;
      this.notifyListeners$0();
    },
    set$inactiveSide(value) {
      if (J.$eq$(this._inactiveSide, value))
        return;
      this._inactiveSide = value;
      this.notifyListeners$0();
    },
    _outerRectAt$2(origin, t) {
      var inset = 1 - Math.abs(t - 0.5) * 2,
        size = 18 - inset * 2,
        t1 = origin._dx + inset,
        t2 = origin._dy + inset;
      return new C.Rect(t1, t2, t1 + size, t2 + size);
    },
    _colorAt$1(t) {
      var t2,
        t1 = this._activeColor;
      if (t >= 0.25)
        t1.toString;
      else {
        t2 = this._inactiveColor;
        t2.toString;
        t1.toString;
        t1 = E.Color_lerp(t2, t1, t * 4);
        t1.toString;
      }
      return t1;
    },
    _drawBox$4(canvas, outer, paint, side) {
      canvas.drawPath$2(this._checkbox$_shape.getOuterPath$1(outer), paint);
      this._checkbox$_shape.copyWith$1$side(side).paint$2(canvas, outer);
    },
    _drawCheck$4(canvas, origin, t, paint) {
      var t5,
        path = $.$get$_renderer().createPath$0(),
        t1 = origin._dx,
        t2 = origin._dy,
        t3 = t1 + 2.6999999999999997,
        t4 = t2 + 8.1;
      if (t < 0.5) {
        t5 = E.Offset_lerp(A.Offset_5ck, A.Offset_FK3, t * 2);
        t5.toString;
        path.moveTo$2(0, t3, t4);
        path.lineTo$2(0, t1 + t5._dx, t2 + t5._dy);
      } else {
        t5 = E.Offset_lerp(A.Offset_FK3, A.Offset_R50, (t - 0.5) * 2);
        t5.toString;
        path.moveTo$2(0, t3, t4);
        path.lineTo$2(0, t1 + 7.2, t2 + 12.6);
        path.lineTo$2(0, t1 + t5._dx, t2 + t5._dy);
      }
      canvas.drawPath$2(path, paint);
    },
    _drawDash$4(canvas, origin, t, paint) {
      var t2,
        t1 = E.Offset_lerp(A.Offset_5tR, A.Offset_9_9, 1 - t);
      t1.toString;
      t2 = E.Offset_lerp(A.Offset_9_9, A.Offset_ATs, t);
      t2.toString;
      canvas.drawLine$3(origin.$add(0, t1), origin.$add(0, t2), paint);
    },
    paint$2(canvas, size) {
      var t1, strokePaint, t2, origin, _0_0, t, outer, paint, tShrink, tExpand, _this = this;
      _this.paintRadialReaction$2$canvas$origin(canvas, size.center$1(D.Offset_0_0));
      t1 = $.$get$_renderer();
      strokePaint = t1.createPaint$0();
      t2 = _this._checkColor;
      t2.toString;
      strokePaint.set$color(0, t2);
      strokePaint.set$style(0, D.PaintingStyle_1);
      strokePaint.set$strokeWidth(2);
      origin = type$.Offset._as(size.$div(0, 2).$sub(0, A.Size_18_18.$div(0, 2)));
      t2 = _this._toggleable$_position.parent;
      _0_0 = t2.get$status(t2);
      $label0$0: {
        if (F.AnimationStatus_1 === _0_0 || F.AnimationStatus_3 === _0_0) {
          t2 = _this._toggleable$_position.get$value(0);
          break $label0$0;
        }
        if (F.AnimationStatus_2 === _0_0 || F.AnimationStatus_0 === _0_0) {
          t2 = 1 - _this._toggleable$_position.get$value(0);
          break $label0$0;
        }
        t2 = null;
      }
      if (_this._previousValue === false || _this._checkbox$_value === false) {
        t = _this._checkbox$_value === false ? 1 - t2 : t2;
        outer = _this._outerRectAt$2(origin, t);
        paint = t1.createPaint$0();
        paint.set$color(0, _this._colorAt$1(t));
        t1 = _this._activeSide;
        if (t <= 0.5) {
          t2 = _this._inactiveSide;
          t2.toString;
          t1.toString;
          _this._drawBox$4(canvas, outer, paint, E.BorderSide_lerp(t2, t1, t));
        } else {
          t1.toString;
          _this._drawBox$4(canvas, outer, paint, t1);
          tShrink = (t - 0.5) * 2;
          if (_this._previousValue == null || _this._checkbox$_value == null)
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
        }
      } else {
        outer = _this._outerRectAt$2(origin, 1);
        paint = t1.createPaint$0();
        paint.set$color(0, _this._colorAt$1(1));
        t1 = _this._activeSide;
        t1.toString;
        _this._drawBox$4(canvas, outer, paint, t1);
        if (t2 <= 0.5) {
          tShrink = 1 - t2 * 2;
          t1 = _this._previousValue;
          if (t1 === true)
            _this._drawCheck$4(canvas, origin, tShrink, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tShrink, strokePaint);
        } else {
          tExpand = (t2 - 0.5) * 2;
          t1 = _this._checkbox$_value;
          if (t1 === true)
            _this._drawCheck$4(canvas, origin, tExpand, strokePaint);
          else
            _this._drawDash$4(canvas, origin, tExpand, strokePaint);
        }
      }
    }
  };
  B._CheckboxDefaultsM3.prototype = {
    get$side() {
      return T._WidgetStateBorderSide$(new B._CheckboxDefaultsM3_side_closure(this));
    },
    get$fillColor() {
      return new Q._WidgetStatePropertyWith(new B._CheckboxDefaultsM3_fillColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$checkColor() {
      return new Q._WidgetStatePropertyWith(new B._CheckboxDefaultsM3_checkColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$overlayColor() {
      return new Q._WidgetStatePropertyWith(new B._CheckboxDefaultsM3_overlayColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$splashRadius() {
      return 20;
    },
    get$materialTapTargetSize() {
      return this._checkbox$_theme.materialTapTargetSize;
    },
    get$visualDensity() {
      return this._checkbox$_theme.visualDensity;
    },
    get$shape(_) {
      return G.RoundedRectangleBorder_oPN;
    }
  };
  B.__CheckboxState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  B.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = E.AnimationController$(_null, D.Duration_200000, _null, !_this._widget.value ? 0 : 1, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__position_A = E.CurvedAnimation$(Ae.Cubic_Pa6, t1, Ad.Cubic_ts0);
      t1 = E.AnimationController$(_null, _this.ToggleableStateMixin__reactionAnimationDuration, _null, _null, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A = E.CurvedAnimation$(G.Cubic_Dkk, t1, _null);
      t1 = E.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = E.CurvedAnimation$(G.Cubic_Dkk, t1, _null);
      t1 = E.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = E.CurvedAnimation$(G.Cubic_Dkk, t1, _null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      t1 === $ && C.throwLateFieldNI("_positionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t1 === $ && C.throwLateFieldNI("_position");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && C.throwLateFieldNI("_reactionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t1 === $ && C.throwLateFieldNI("_reaction");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t1.dispose$0();
      _this.super$__CheckboxState_State_TickerProviderStateMixin$dispose();
    }
  };
  B.Divider.prototype = {
    build$1(context) {
      var dividerTheme, defaults, height, thickness, t1, indent, endIndent, _null = null;
      H.Theme_of(context);
      dividerTheme = A3.DividerTheme_of(context);
      defaults = A3._DividerDefaultsM3$(context);
      height = 1;
      thickness = dividerTheme.thickness;
      if (thickness == null) {
        t1 = defaults.thickness;
        t1.toString;
        thickness = t1;
      }
      indent = dividerTheme.indent;
      if (indent == null) {
        t1 = defaults.indent;
        t1.toString;
        indent = t1;
      }
      endIndent = dividerTheme.endIndent;
      if (endIndent == null) {
        t1 = defaults.endIndent;
        t1.toString;
        endIndent = t1;
      }
      return new E.SizedBox(_null, height, E.Center$(E.Container$(_null, _null, D.Clip_0, _null, _null, new E.BoxDecoration(_null, _null, new E.Border(F.BorderSide_Ah5, F.BorderSide_Ah5, A3.Divider_createBorderSide(context, _null, thickness), F.BorderSide_Ah5), _null, _null, _null, _null, F.BoxShape_0), _null, thickness, _null, new E.EdgeInsetsDirectional(indent, 0, endIndent, 0), _null, _null, _null, _null), _null, _null, _null), _null);
    }
  };
  B._RadioType.prototype = {
    _enumToString$0() {
      return "_RadioType." + this._name;
    }
  };
  B.Radio.prototype = {
    createState$0() {
      return new B._RadioState(new B._RadioPainter($.$get$ChangeNotifier__emptyListeners()), $, $, $, $, $, $, $, $, D.Duration_100000, $, null, false, false, null, null, this.$ti._eval$1("_RadioState<1>"));
    }
  };
  B._RadioState.prototype = {
    _radio$_handleChanged$1(selected) {
      var t1, _this = this;
      if (selected == null) {
        _this.$ti._eval$1("~(1?)?")._as(_this._widget.onChanged).call$1(null);
        return;
      }
      if (selected) {
        t1 = _this._widget;
        _this.$ti._eval$1("~(1?)?")._as(t1.onChanged).call$1(t1.value);
      }
    },
    didUpdateWidget$1(oldWidget) {
      var _this = this;
      _this.$ti._eval$1("Radio<1>")._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      if (_this._widget.value !== oldWidget.value)
        _this.animateToValue$0();
    },
    dispose$0() {
      this._radio$_painter.dispose$0();
      this.super$__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose();
    },
    get$onChanged() {
      this.$ti._eval$1("~(1?)?")._as(this._widget.onChanged);
      return this.get$_radio$_handleChanged();
    },
    get$tristate() {
      this._widget.toString;
      return false;
    },
    get$value(_) {
      return this._widget.value;
    },
    get$_radio$_widgetFillColor() {
      return new Q._WidgetStatePropertyWith(new B._RadioState__widgetFillColor_closure(this), type$._WidgetStatePropertyWith_nullable_Color);
    },
    build$1(context) {
      var radioTheme, defaults, effectiveMaterialTapTargetSize, effectiveVisualDensity, t1, size, activeStates, inactiveStates, t2, activeColor, t3, effectiveActiveColor, inactiveColor, t4, effectiveInactiveColor, focusedStates, t5, effectiveFocusOverlayColor, hoveredStates, effectiveHoverOverlayColor, effectiveActivePressedOverlayColor, effectiveInactivePressedOverlayColor, accessibilitySelected, _this = this, _null = null;
      _this._widget.toString;
      switch (0) {
        case 0:
          break;
      }
      context.dependOnInheritedWidgetOfExactType$1$0(type$.RadioTheme);
      radioTheme = H.Theme_of(context).radioTheme;
      H.Theme_of(context);
      defaults = new B._RadioDefaultsM3(context, _null, _null, _null, _null, _null, _null);
      effectiveMaterialTapTargetSize = _this._widget.materialTapTargetSize;
      effectiveVisualDensity = defaults.get$visualDensity();
      switch (effectiveMaterialTapTargetSize.index) {
        case 0:
          t1 = K.Size_48_48;
          break;
        case 1:
          t1 = A0.Size_40_40;
          break;
        default:
          t1 = _null;
      }
      size = t1.$add(0, new C.Offset(effectiveVisualDensity.horizontal, effectiveVisualDensity.vertical).$mul(0, 4));
      activeStates = _this.get$states();
      activeStates.add$1(0, F.WidgetState_4);
      inactiveStates = _this.get$states();
      inactiveStates.remove$1(0, F.WidgetState_4);
      _this._widget.toString;
      t1 = _this.get$_radio$_widgetFillColor();
      t2 = type$.Set_WidgetState;
      t2._as(activeStates);
      activeColor = t1._resolve.call$1(activeStates);
      if (activeColor == null) {
        t1 = radioTheme.fillColor;
        activeColor = t1 == null ? _null : t1.resolve$1(activeStates);
      }
      t1 = activeColor == null;
      if (t1) {
        t3 = defaults.get$fillColor()._resolve.call$1(activeStates);
        t3.toString;
        effectiveActiveColor = t3;
      } else
        effectiveActiveColor = activeColor;
      _this._widget.toString;
      t3 = _this.get$_radio$_widgetFillColor();
      t2._as(inactiveStates);
      inactiveColor = t3._resolve.call$1(inactiveStates);
      if (inactiveColor == null) {
        t3 = radioTheme.fillColor;
        inactiveColor = t3 == null ? _null : t3.resolve$1(inactiveStates);
      }
      t3 = inactiveColor == null;
      if (t3) {
        t4 = defaults.get$fillColor()._resolve.call$1(inactiveStates);
        t4.toString;
        effectiveInactiveColor = t4;
      } else
        effectiveInactiveColor = inactiveColor;
      focusedStates = _this.get$states();
      focusedStates.add$1(0, I.WidgetState_1);
      _this._widget.toString;
      t4 = radioTheme.overlayColor;
      t5 = t4 == null ? _null : t4.resolve$1(focusedStates);
      effectiveFocusOverlayColor = t5;
      if (effectiveFocusOverlayColor == null) {
        t5 = defaults.get$overlayColor()._resolve.call$1(t2._as(focusedStates));
        t5.toString;
        effectiveFocusOverlayColor = t5;
      }
      hoveredStates = _this.get$states();
      hoveredStates.add$1(0, I.WidgetState_0);
      _this._widget.toString;
      t5 = t4 == null ? _null : t4.resolve$1(hoveredStates);
      effectiveHoverOverlayColor = t5;
      if (effectiveHoverOverlayColor == null) {
        t2 = defaults.get$overlayColor()._resolve.call$1(t2._as(hoveredStates));
        t2.toString;
        effectiveHoverOverlayColor = t2;
      }
      activeStates.add$1(0, I.WidgetState_2);
      _this._widget.toString;
      t2 = t4 == null ? _null : t4.resolve$1(activeStates);
      if (t2 == null) {
        t1 = t1 ? _null : activeColor.withAlpha$1(31);
        effectiveActivePressedOverlayColor = t1;
      } else
        effectiveActivePressedOverlayColor = t2;
      if (effectiveActivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(activeStates);
        t1.toString;
        effectiveActivePressedOverlayColor = t1;
      }
      inactiveStates.add$1(0, I.WidgetState_2);
      _this._widget.toString;
      t1 = t4 == null ? _null : t4.resolve$1(inactiveStates);
      if (t1 == null) {
        t1 = t3 ? _null : inactiveColor.withAlpha$1(31);
        effectiveInactivePressedOverlayColor = t1;
      } else
        effectiveInactivePressedOverlayColor = t1;
      if (effectiveInactivePressedOverlayColor == null) {
        t1 = defaults.get$overlayColor()._resolve.call$1(inactiveStates);
        t1.toString;
        effectiveInactivePressedOverlayColor = t1;
      }
      if (_this.ToggleableStateMixin__downPosition != null) {
        effectiveHoverOverlayColor = _this.get$states().contains$1(0, F.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
        effectiveFocusOverlayColor = _this.get$states().contains$1(0, F.WidgetState_4) ? effectiveActivePressedOverlayColor : effectiveInactivePressedOverlayColor;
      }
      accessibilitySelected = _null;
      switch (C.defaultTargetPlatform().index) {
        case 0:
        case 1:
        case 3:
        case 5:
          break;
        case 2:
        case 4:
          accessibilitySelected = _this._widget.value;
          break;
      }
      t1 = _this._widget.value;
      t2 = _this._radio$_painter;
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t3 === $ && C.throwLateFieldNI("_position");
      t2.set$position(0, t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t3 === $ && C.throwLateFieldNI("_reaction");
      t2.set$reaction(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t2.set$reactionFocusFade(t3);
      t3 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t3 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t2.set$reactionHoverFade(t3);
      t2.set$inactiveReactionColor(effectiveInactivePressedOverlayColor);
      t2.set$reactionColor(effectiveActivePressedOverlayColor);
      t2.set$hoverColor(effectiveHoverOverlayColor);
      t2.set$focusColor(effectiveFocusOverlayColor);
      _this._widget.toString;
      t3 = radioTheme.splashRadius;
      t2.set$splashRadius(t3 == null ? 20 : t3);
      t2.set$downPosition(_this.ToggleableStateMixin__downPosition);
      t2.set$isFocused(_this.get$states().contains$1(0, I.WidgetState_1));
      t2.set$isHovered(_this.get$states().contains$1(0, I.WidgetState_0));
      t2.set$activeColor(effectiveActiveColor);
      t2.set$inactiveColor(effectiveInactiveColor);
      t2 = _this.buildToggleable$5$autofocus$focusNode$mouseCursor$painter$size(false, _null, new Q._WidgetStatePropertyWith(new B._RadioState_build_closure(_this, radioTheme), type$._WidgetStatePropertyWith_MouseCursor), t2, size);
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, accessibilitySelected, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t2, _null);
    },
    $isTickerProvider: 1
  };
  B._RadioPainter.prototype = {
    paint$2(canvas, size) {
      var center, paint, t1, t2, _this = this;
      _this.paintRadialReaction$2$canvas$origin(canvas, size.center$1(D.Offset_0_0));
      center = new C.Rect(0, 0, 0 + size._dx, 0 + size._dy).get$center();
      paint = $.$get$_renderer().createPaint$0();
      t1 = _this._inactiveColor;
      t1.toString;
      t2 = _this._activeColor;
      t2.toString;
      t2 = E.Color_lerp(t1, t2, _this._toggleable$_position.get$value(0));
      t2.toString;
      paint.set$color(0, t2);
      paint.set$style(0, D.PaintingStyle_1);
      paint.set$strokeWidth(2);
      canvas.drawCircle$3(center, 8, paint);
      if (_this._toggleable$_position.get$status(0) !== F.AnimationStatus_0) {
        paint.set$style(0, D.PaintingStyle_0);
        canvas.drawCircle$3(center, 4.5 * _this._toggleable$_position.get$value(0), paint);
      }
    }
  };
  B._RadioDefaultsM3.prototype = {
    get$_radio$_theme() {
      var result, _this = this,
        value = _this.___RadioDefaultsM3__theme_FI;
      if (value === $) {
        result = H.Theme_of(_this.context);
        _this.___RadioDefaultsM3__theme_FI !== $ && C.throwLateFieldADI("_theme");
        _this.___RadioDefaultsM3__theme_FI = result;
        value = result;
      }
      return value;
    },
    get$_radio$_colors() {
      var t1, _this = this,
        value = _this.___RadioDefaultsM3__colors_FI;
      if (value === $) {
        t1 = _this.get$_radio$_theme();
        _this.___RadioDefaultsM3__colors_FI !== $ && C.throwLateFieldADI("_colors");
        value = _this.___RadioDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$fillColor() {
      return new Q._WidgetStatePropertyWith(new B._RadioDefaultsM3_fillColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$overlayColor() {
      return new Q._WidgetStatePropertyWith(new B._RadioDefaultsM3_overlayColor_closure(this), type$._WidgetStatePropertyWith_Color);
    },
    get$materialTapTargetSize() {
      return this.get$_radio$_theme().materialTapTargetSize;
    },
    get$visualDensity() {
      return this.get$_radio$_theme().visualDensity;
    }
  };
  B.__RadioState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  B.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype = {
    initState$0() {
      var t1, _this = this, _null = null;
      _this.super$State$initState();
      t1 = E.AnimationController$(_null, D.Duration_200000, _null, !_this._widget.value ? 0 : 1, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__position_A = E.CurvedAnimation$(Ae.Cubic_Pa6, t1, Ad.Cubic_ts0);
      t1 = E.AnimationController$(_null, _this.ToggleableStateMixin__reactionAnimationDuration, _null, _null, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A = E.CurvedAnimation$(G.Cubic_Dkk, t1, _null);
      t1 = E.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A = E.CurvedAnimation$(G.Cubic_Dkk, t1, _null);
      t1 = E.AnimationController$(_null, D.Duration_50000, _null, _this.ToggleableStateMixin__hovering || _this.ToggleableStateMixin__focused ? 1 : 0, _this);
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A = t1;
      _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A = E.CurvedAnimation$(G.Cubic_Dkk, t1, _null);
    },
    dispose$0() {
      var _this = this,
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      t1 === $ && C.throwLateFieldNI("_positionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__position_A;
      t1 === $ && C.throwLateFieldNI("_position");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && C.throwLateFieldNI("_reactionController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reaction_A;
      t1 === $ && C.throwLateFieldNI("_reaction");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionHoverFade");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFadeController");
      t1.dispose$0();
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFade_A;
      t1 === $ && C.throwLateFieldNI("_reactionFocusFade");
      t1.dispose$0();
      _this.super$__RadioState_State_TickerProviderStateMixin$dispose();
    }
  };
  B._TextSpanEditingController.prototype = {
    buildTextSpan$3$context$style$withComposing(context, style, withComposing) {
      return E.TextSpan$(C._setArrayType([this._textSpan], type$.JSArray_TextSpan), style, null);
    },
    set$text(_, newText) {
      throw C.wrapException(C.UnimplementedError$(null));
    }
  };
  B._SelectableTextSelectionGestureDetectorBuilder.prototype = {
    onSingleTapUp$1(details) {
      type$.TapDragUpDetails._as(details);
      if (!this.delegate.get$selectionEnabled())
        return;
      this.super$TextSelectionGestureDetectorBuilder$onSingleTapUp(details);
      this._selectable_text$_state._widget.toString;
    }
  };
  B.SelectableText.prototype = {
    createState$0() {
      return new B._SelectableTextState(new H.LabeledGlobalKey(null, type$.LabeledGlobalKey_EditableTextState));
    }
  };
  B._SelectableTextState.prototype = {
    get$_selectable_text$_effectiveFocusNode() {
      var t1, _null = null;
      this._widget.toString;
      t1 = this._selectable_text$_focusNode;
      if (t1 == null) {
        t1 = C.FocusNode$(true, _null, true, true, _null, _null, true);
        this._selectable_text$_focusNode = t1;
      }
      return t1;
    },
    get$forcePressEnabled() {
      var t1 = this.___SelectableTextState_forcePressEnabled_A;
      t1 === $ && C.throwLateFieldNI("forcePressEnabled");
      return t1;
    },
    get$selectionEnabled() {
      this._widget.toString;
      return true;
    },
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this.___SelectableTextState__selectionGestureDetectorBuilder_A = new B._SelectableTextSelectionGestureDetectorBuilder(_this, _this);
      t1 = E.TextSpan$(null, null, _this._widget.data);
      t1 = B._TextSpanEditingController$(t1);
      _this.___SelectableTextState__controller_A = t1;
      t1.addListener$1(0, _this.get$_onControllerChanged());
      _this.get$_selectable_text$_effectiveFocusNode().addListener$1(0, _this.get$_selectable_text$_handleFocusChanged());
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, _this = this;
      _this.super$State$didUpdateWidget(type$.SelectableText._as(oldWidget));
      _this._widget.toString;
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t2 = _this.get$_onControllerChanged();
      t1.removeListener$1(0, t2);
      t1 = _this.___SelectableTextState__controller_A;
      t1.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      t1.ChangeNotifier__count = 0;
      t1 = _this._widget;
      t1 = E.TextSpan$(null, null, t1.data);
      t1 = B._TextSpanEditingController$(t1);
      _this.___SelectableTextState__controller_A = t1;
      t1.addListener$1(0, t2);
      _this._widget.toString;
      if (_this.get$_selectable_text$_effectiveFocusNode().get$hasFocus()) {
        t1 = _this.___SelectableTextState__controller_A._change_notifier$_value.selection;
        t1 = t1.start === t1.end;
      } else
        t1 = false;
      if (t1)
        _this._selectable_text$_showSelectionHandles = false;
      else
        _this._selectable_text$_showSelectionHandles = true;
    },
    dispose$0() {
      var t1, _this = this;
      _this.get$_selectable_text$_effectiveFocusNode().removeListener$1(0, _this.get$_selectable_text$_handleFocusChanged());
      t1 = _this._selectable_text$_focusNode;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      t1.ChangeNotifier__count = 0;
      _this.super$State$dispose();
    },
    _onControllerChanged$0() {
      var t1, showSelectionHandles, _this = this;
      if (_this.get$_selectable_text$_effectiveFocusNode().get$hasFocus()) {
        t1 = _this.___SelectableTextState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t1 = t1._change_notifier$_value.selection;
        showSelectionHandles = t1.start !== t1.end;
      } else
        showSelectionHandles = true;
      if (showSelectionHandles === _this._selectable_text$_showSelectionHandles)
        return;
      _this.setState$1(new B._SelectableTextState__onControllerChanged_closure(_this, showSelectionHandles));
    },
    _selectable_text$_handleFocusChanged$0() {
      if (!this.get$_selectable_text$_effectiveFocusNode().get$hasFocus() && $.SchedulerBinding__instance.SchedulerBinding__lifecycleState === D.AppLifecycleState_1) {
        var t1 = this.___SelectableTextState__controller_A;
        t1 === $ && C.throwLateFieldNI("_controller");
        t1.super$ValueNotifier$value(0, new C.TextEditingValue(t1._change_notifier$_value.text, D.TextSelection_kab, D.TextRange_m1_m1));
      }
    },
    _selectable_text$_handleSelectionChanged$2(selection, cause) {
      var t1, _this = this,
        willShowSelectionHandles = _this._selectable_text$_shouldShowSelectionHandles$1(cause);
      if (willShowSelectionHandles !== _this._selectable_text$_showSelectionHandles)
        _this.setState$1(new B._SelectableTextState__handleSelectionChanged_closure(_this, willShowSelectionHandles));
      _this._widget.toString;
      t1 = _this._framework$_element;
      t1.toString;
      switch (H.Theme_of(t1).platform.index) {
        case 2:
        case 4:
          if (cause === K.SelectionChangedCause_2) {
            t1 = _this.editableTextKey.get$currentState();
            if (t1 != null)
              t1.bringIntoView$1(selection.get$base());
          }
          return;
        case 0:
        case 1:
        case 3:
        case 5:
          break;
      }
    },
    _selectable_text$_handleSelectionHandleTapped$0() {
      var t1 = this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1 = t1._change_notifier$_value.selection;
      if (t1.start === t1.end)
        this.editableTextKey.get$currentState().toggleToolbar$0();
    },
    _selectable_text$_shouldShowSelectionHandles$1(cause) {
      var t2,
        t1 = this.___SelectableTextState__selectionGestureDetectorBuilder_A;
      t1 === $ && C.throwLateFieldNI("_selectionGestureDetectorBuilder");
      if (!t1._shouldShowSelectionToolbar)
        return false;
      t1 = this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI("_controller");
      t1 = t1._change_notifier$_value;
      t2 = t1.selection;
      if (t2.start === t2.end)
        return false;
      if (cause === A0.SelectionChangedCause_4)
        return false;
      if (cause === K.SelectionChangedCause_2)
        return true;
      if (t1.text.length !== 0)
        return true;
      return false;
    },
    build$1(context) {
      var focusNode, paintCursorAboveText, cursorOpacityAnimates, cursorOffset, cursorRadius, cupertinoTheme, textSelectionControls, cursorColor, selectionColor, defaultTextStyle, t1, effectiveTextStyle, t2, t3, t4, _this = this, _null = null,
        _s11_ = "_controller",
        theme = H.Theme_of(context),
        selectionStyle = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      if (selectionStyle == null)
        selectionStyle = G.DefaultSelectionStyle_gwC;
      focusNode = _this.get$_selectable_text$_effectiveFocusNode();
      _this._widget.toString;
      paintCursorAboveText = true;
      cursorOpacityAnimates = true;
      cursorOffset = _null;
      cursorRadius = _null;
      switch (theme.platform.index) {
        case 2:
          cupertinoTheme = L.CupertinoTheme_of(context);
          _this.___SelectableTextState_forcePressEnabled_A = true;
          textSelectionControls = $.$get$cupertinoTextSelectionHandleControls();
          _this._widget.toString;
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = cupertinoTheme.get$primaryColor();
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = cupertinoTheme.get$primaryColor().withOpacity$1(0.4);
          cursorOffset = new C.Offset(-2 / C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_2, type$.MediaQuery).data.devicePixelRatio, 0);
          cursorRadius = G.Radius_2_2;
          break;
        case 4:
          cupertinoTheme = L.CupertinoTheme_of(context);
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$cupertinoDesktopTextSelectionHandleControls();
          _this._widget.toString;
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = cupertinoTheme.get$primaryColor();
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = cupertinoTheme.get$primaryColor().withOpacity$1(0.4);
          cursorOffset = new C.Offset(-2 / C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_2, type$.MediaQuery).data.devicePixelRatio, 0);
          cursorRadius = G.Radius_2_2;
          break;
        case 0:
        case 1:
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$materialTextSelectionHandleControls();
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = theme.colorScheme.primary;
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = theme.colorScheme.primary.withOpacity$1(0.4);
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          break;
        case 3:
        case 5:
          _this.___SelectableTextState_forcePressEnabled_A = false;
          textSelectionControls = $.$get$desktopTextSelectionHandleControls();
          cursorColor = selectionStyle.cursorColor;
          if (cursorColor == null)
            cursorColor = theme.colorScheme.primary;
          selectionColor = selectionStyle.selectionColor;
          if (selectionColor == null)
            selectionColor = theme.colorScheme.primary.withOpacity$1(0.4);
          paintCursorAboveText = false;
          cursorOpacityAnimates = false;
          break;
        default:
          selectionColor = _null;
          cursorColor = selectionColor;
          cursorOpacityAnimates = cursorColor;
          paintCursorAboveText = cursorOpacityAnimates;
          textSelectionControls = paintCursorAboveText;
      }
      defaultTextStyle = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
      if (defaultTextStyle == null)
        defaultTextStyle = G.DefaultTextStyle_4Wa;
      _this._widget.toString;
      t1 = _this.___SelectableTextState__controller_A;
      t1 === $ && C.throwLateFieldNI(_s11_);
      effectiveTextStyle = defaultTextStyle.style.merge$1(t1._textSpan.style);
      _this._widget.toString;
      $label0$1: {
        break $label0$1;
      }
      t1 = _this._selectable_text$_showSelectionHandles;
      t2 = _this.___SelectableTextState__controller_A;
      t2 === $ && C.throwLateFieldNI(_s11_);
      t3 = defaultTextStyle.textAlign;
      if (t3 == null)
        t3 = D.TextAlign_4;
      t4 = $.$get$TextMagnifier_adaptiveMagnifierConfiguration();
      t1 = L.EditableText$(true, _null, _null, _null, false, A0.CupertinoDynamicColor_yWg, D.Clip_1, _null, B.selectable_text_SelectableText__defaultContextMenuBuilder$closure(), t2, cursorColor, _null, cursorOffset, cursorOpacityAnimates, cursorRadius, 2, G.DragStartBehavior_1, true, true, true, false, focusNode, false, K.Type_EditableText_O5i, _null, _this.editableTextKey, D.Brightness_1, _null, t4, defaultTextStyle.maxLines, _null, _null, false, "\u2022", _null, _null, _null, _this.get$_selectable_text$_handleSelectionChanged(), _this.get$_selectable_text$_handleSelectionHandleTapped(), _null, _null, _null, paintCursorAboveText, true, true, _null, true, _null, _null, S.EdgeInsets_20_20_20_20, _null, selectionColor, textSelectionControls, D.BoxHeightStyle_0, D.BoxWidthStyle_0, false, t1, _null, _null, _null, A.StrutStyle_ilT, effectiveTextStyle, true, t3, K.TextCapitalization_30, _null, defaultTextStyle.textHeightBehavior, _null, _null, defaultTextStyle.textWidthBasis, _null, _null);
      _this._widget.toString;
      t2 = _this.___SelectableTextState__selectionGestureDetectorBuilder_A;
      t2 === $ && C.throwLateFieldNI("_selectionGestureDetectorBuilder");
      t1 = t2.buildGestureDetector$2$behavior$child(F.HitTestBehavior_2, new A_.RepaintBoundary(t1, _null));
      return new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new B._SelectableTextState_build_closure(_this), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t1, _null);
    },
    $isTextSelectionGestureDetectorBuilderDelegate: 1,
    get$editableTextKey() {
      return this.editableTextKey;
    }
  };
  B._TextButtonWithIcon.prototype = {
    defaultStyleOf$1(context) {
      var buttonStyle, t1, defaultFontSize;
      H.Theme_of(context);
      buttonStyle = this.super$TextButton$defaultStyleOf(context);
      t1 = buttonStyle.get$textStyle();
      if (t1 == null)
        defaultFontSize = null;
      else {
        t1 = t1.resolve$1(G.Set_empty);
        t1 = t1 == null ? null : t1.fontSize;
        defaultFontSize = t1;
      }
      if (defaultFontSize == null)
        defaultFontSize = 14;
      t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      t1 = t1 == null ? null : t1.get$textScaler();
      if (t1 == null)
        t1 = D._LinearTextScaler_1;
      return buttonStyle.copyWith$1$padding(new Q.WidgetStatePropertyAll(L.ButtonStyleButton_scaledPadding(A.EdgeInsetsDirectional_12_8_16_8, K.EdgeInsets_4_0_4_0, K.EdgeInsets_4_0_4_0, defaultFontSize * t1.textScaleFactor / 14), type$.WidgetStatePropertyAll_EdgeInsetsGeometry));
    }
  };
  B._TextButtonWithIconChild.prototype = {
    build$1(context) {
      var defaultFontSize, _null = null,
        t1 = this.buttonStyle.textStyle,
        t2 = _null;
      if (t1 == null)
        t1 = t2;
      else {
        t1 = t1.resolve$1(G.Set_empty);
        t1 = t1 == null ? _null : t1.fontSize;
      }
      defaultFontSize = t1;
      if (defaultFontSize == null)
        defaultFontSize = 14;
      t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_4);
      t1 = t1 == null ? _null : t1.get$textScaler();
      t1 = E.lerpDouble(8, 4, C.clampDouble(defaultFontSize * (t1 == null ? D._LinearTextScaler_1 : t1).textScaleFactor / 14, 1, 2) - 1);
      t1.toString;
      L.TextButtonTheme_of(context);
      t1 = C._setArrayType([this.icon, new E.SizedBox(t1, _null, _null, _null), new R.Flexible(1, G.FlexFit_1, this.label, _null)], type$.JSArray_Widget);
      return O.Row$(t1, G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1);
    }
  };
  B.NetworkImage.prototype = {
    obtainKey$1(configuration) {
      return new C.SynchronousFuture(this, type$.SynchronousFuture_NetworkImage);
    },
    loadBuffer$2(key, decode) {
      var chunkEvents, _null = null;
      type$.NetworkImage._as(key);
      type$.Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int._as(decode);
      chunkEvents = C.StreamController_StreamController(_null, _null, _null, false, type$.ImageChunkEvent);
      type$.NetworkImage_2._as(key);
      return B._ForwardingImageStreamCompleter$(this.__network_image_web$_loadAsync$3(key, decode, chunkEvents), key.url, _null);
    },
    loadImage$2(key, decode) {
      var chunkEvents, _null = null;
      type$.NetworkImage._as(key);
      type$.Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int._as(decode);
      chunkEvents = C.StreamController_StreamController(_null, _null, _null, false, type$.ImageChunkEvent);
      type$.NetworkImage_2._as(key);
      return B._ForwardingImageStreamCompleter$(this.__network_image_web$_loadAsync$3(key, decode, chunkEvents), key.url, _null);
    },
    __network_image_web$_loadAsync$3(key, decode, chunkEvents) {
      return this._loadAsync$body$NetworkImage(key, type$.Future_Codec_Function_ImmutableBuffer._as(decode), type$.StreamController_ImageChunkEvent._as(chunkEvents));
    },
    _loadAsync$body$NetworkImage(key, decode, chunkEvents) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageStreamCompleter),
        $async$returnValue, $async$self = this, resolved, loadViaDecode, loadViaImgElement, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$__network_image_web$_loadAsync$3 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                loadViaDecode = new B.NetworkImage__loadAsync_loadViaDecode($async$self, decode, chunkEvents, key);
                loadViaImgElement = new B.NetworkImage__loadAsync_loadViaImgElement($async$self, key);
                t1 = self;
                $async$goto = !(t1.window.flutterCanvasKit != null || t1.window._flutter_skwasmInstance != null) ? 3 : 4;
                break;
              case 3:
                // then
                t1 = key.url;
                resolved = A4.Uri_base().resolve$1(t1);
                $async$temp1 = W;
                $async$temp2 = new C._ControllerStream(chunkEvents, C._instanceType(chunkEvents)._eval$1("_ControllerStream<1>"));
                $async$temp3 = C;
                $async$goto = 5;
                return C._asyncAwait($.$get$_renderer().instantiateImageCodecFromUrl$2$chunkCallback(resolved, new B.NetworkImage__loadAsync_closure(chunkEvents)), $async$__network_image_web$_loadAsync$3);
              case 5:
                // returning from await.
                $async$returnValue = $async$temp1.MultiFrameImageStreamCompleter$($async$temp2, $async$temp3.Future_Future$value($async$result, type$.Codec), t1, null, 1);
                // goto return
                $async$goto = 1;
                break;
              case 4:
                // join
                switch (0) {
                  case 0:
                    $async$returnValue = loadViaDecode.call$0();
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
              case 1:
                // return
                return C._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return C._asyncStartSync($async$__network_image_web$_loadAsync$3, $async$completer);
    },
    _fetchImageBytes$1(decode) {
      return this._fetchImageBytes$body$NetworkImage(type$.Future_Codec_Function_ImmutableBuffer._as(decode));
    },
    _fetchImageBytes$body$NetworkImage(decode) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.Codec),
        $async$returnValue, $async$self = this, bytes, t1, resolved, t2, completer, request, $async$temp1;
      var $async$_fetchImageBytes$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.url;
              resolved = A4.Uri_base().resolve$1(t1);
              t2 = new C._Future($.Zone__current, type$._Future_JSObject);
              completer = new C._AsyncCompleter(t2, type$._AsyncCompleter_JSObject);
              request = B._httpClient();
              request.open("GET", t1, true);
              request.responseType = "arraybuffer";
              request.addEventListener("load", C._functionToJS1(new B.NetworkImage__fetchImageBytes_closure(request, completer, resolved)));
              request.addEventListener("error", C._functionToJS1(new B.NetworkImage__fetchImageBytes_closure0(completer, request, resolved)));
              request.send();
              $async$goto = 3;
              return C._asyncAwait(t2, $async$_fetchImageBytes$1);
            case 3:
              // returning from await.
              t1 = request.response;
              t1.toString;
              bytes = C.NativeUint8List_NativeUint8List$view(type$.NativeByteBuffer._as(t1), 0, null);
              if (bytes.byteLength === 0)
                throw C.wrapException(B.NetworkImageLoadException$(C.getProperty(request, "status", type$.int), resolved));
              $async$temp1 = decode;
              $async$goto = 4;
              return C._asyncAwait(W.ImmutableBuffer_fromUint8List(bytes), $async$_fetchImageBytes$1);
            case 4:
              // returning from await.
              $async$returnValue = $async$temp1.call$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$_fetchImageBytes$1, $async$completer);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof B.NetworkImage)
        t1 = other.url === this.url;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(this.url, 1, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return 'NetworkImage("' + this.url + '", scale: ' + D.JSInt_methods.toStringAsFixed$1(1, 1) + ")";
    },
    $isNetworkImage0: 1,
    get$url(receiver) {
      return this.url;
    },
    get$scale() {
      return 1;
    }
  };
  B._ForwardingImageStreamCompleter.prototype = {
    _ForwardingImageStreamCompleter$3$debugLabel$informationCollector(task, debugLabel, informationCollector) {
      var _this = this;
      _this.debugLabel = debugLabel;
      _this.task.then$1$2$onError(0, new B._ForwardingImageStreamCompleter_closure(_this), new B._ForwardingImageStreamCompleter_closure0(_this, informationCollector), type$.Null);
    },
    onDisposed$0() {
      var t1, _this = this;
      if (_this.resolved) {
        t1 = _this.___ForwardingImageStreamCompleter_handle_F;
        t1 === $ && C.throwLateFieldNI("handle");
        t1.dispose$0();
      }
      _this.__network_image_web$_disposed = true;
      _this.super$ImageStreamCompleter$onDisposed();
    }
  };
  B.WebImageInfo.prototype = {
    clone$0(_) {
      return new B.WebImageInfo(this.htmlImage, this.debugLabel);
    },
    dispose$0() {
    },
    get$image(_) {
      return C.throwExpression(C.UnsupportedError$("Could not create image data for this image because access to it is restricted by the Same-Origin Policy.\nSee https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"));
    },
    get$scale(_) {
      return 1;
    },
    get$sizeBytes() {
      var t1 = this.htmlImage;
      return D.JSNumber_methods.toInt$0(4 * C._asNum(t1.naturalWidth) * C._asNum(t1.naturalHeight));
    },
    $isImageInfo: 1,
    get$debugLabel() {
      return this.debugLabel;
    }
  };
  B.NetworkImageLoadException.prototype = {
    toString$0(_) {
      return this._image_provider$_message;
    },
    $isException: 1
  };
  B.OneFrameImageStreamCompleter.prototype = {
    OneFrameImageStreamCompleter$2$informationCollector(image, informationCollector) {
      image.then$1$2$onError(0, this.get$setImage(), new B.OneFrameImageStreamCompleter_closure(this, informationCollector), type$.void);
    }
  };
  B.OvalBorder.prototype = {
    scale$1(_, t) {
      return new B.OvalBorder(this.eccentricity, this.side.scale$1(0, t));
    },
    copyWith$1$side(side) {
      var t1 = side == null ? this.side : side;
      return new B.OvalBorder(this.eccentricity, t1);
    },
    lerpFrom$2(a, t) {
      var t1, t2;
      if (a instanceof B.OvalBorder) {
        t1 = E.BorderSide_lerp(a.side, this.side, t);
        t2 = E.lerpDouble(a.eccentricity, this.eccentricity, t);
        t2.toString;
        return new B.OvalBorder(C.clampDouble(t2, 0, 1), t1);
      }
      return this.super$CircleBorder$lerpFrom(a, t);
    },
    lerpTo$2(b, t) {
      var t1, t2;
      if (b instanceof B.OvalBorder) {
        t1 = E.BorderSide_lerp(this.side, b.side, t);
        t2 = E.lerpDouble(this.eccentricity, b.eccentricity, t);
        t2.toString;
        return new B.OvalBorder(C.clampDouble(t2, 0, 1), t1);
      }
      return this.super$CircleBorder$lerpTo(b, t);
    },
    toString$0(_) {
      var t1 = this.eccentricity;
      if (t1 !== 1)
        return "OvalBorder(" + this.side.toString$0(0) + ", eccentricity: " + C.S(t1) + ")";
      return "OvalBorder(" + this.side.toString$0(0) + ")";
    }
  };
  B.RenderFittedBox.prototype = {
    _fitAffectsLayout$1(fit) {
      switch (fit.index) {
        case 6:
          return true;
        case 1:
        case 2:
        case 0:
        case 4:
        case 3:
        case 5:
          return false;
      }
    },
    set$fit(value) {
      var _this = this,
        t1 = _this._proxy_box$_fit;
      if (t1 === value)
        return;
      _this._proxy_box$_fit = value;
      if (_this._fitAffectsLayout$1(t1) || _this._fitAffectsLayout$1(value))
        _this.markNeedsLayout$0();
      else {
        _this._proxy_box$_transform = _this._proxy_box$_hasVisualOverflow = null;
        _this.markNeedsPaint$0();
      }
    },
    set$alignment(value) {
      var _this = this;
      if (_this._proxy_box$_alignment.$eq(0, value))
        return;
      _this._proxy_box$_alignment = value;
      _this._proxy_box$_resolvedAlignment = _this._proxy_box$_transform = _this._proxy_box$_hasVisualOverflow = null;
      _this.markNeedsPaint$0();
    },
    set$textDirection(value) {
      var _this = this;
      if (_this._proxy_box$_textDirection == value)
        return;
      _this._proxy_box$_textDirection = value;
      _this._proxy_box$_resolvedAlignment = _this._proxy_box$_transform = _this._proxy_box$_hasVisualOverflow = null;
      _this.markNeedsPaint$0();
    },
    computeDryLayout$1(constraints) {
      var childSize,
        t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childSize = t1._computeIntrinsics$2$3(D.C__DryLayout, N.BoxConstraints_0Yu, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
        switch (this._proxy_box$_fit.index) {
          case 6:
            return constraints.constrain$1(new C.BoxConstraints(0, constraints.maxWidth, 0, constraints.maxHeight).constrainSizeAndAttemptToPreserveAspectRatio$1(childSize));
          case 1:
          case 2:
          case 0:
          case 4:
          case 3:
          case 5:
            return constraints.constrainSizeAndAttemptToPreserveAspectRatio$1(childSize);
        }
      } else
        return new C.Size(C.clampDouble(0, constraints.minWidth, constraints.maxWidth), C.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    },
    performLayout$0() {
      var t2, unconstrainedSize, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(N.BoxConstraints_0Yu, true);
        switch (_this._proxy_box$_fit.index) {
          case 6:
            t1 = type$.BoxConstraints;
            t2 = t1._as(C.RenderObject.prototype.get$constraints.call(_this));
            unconstrainedSize = new C.BoxConstraints(0, t2.maxWidth, 0, t2.maxHeight).constrainSizeAndAttemptToPreserveAspectRatio$1(_this.RenderObjectWithChildMixin__child.get$size(0));
            _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(unconstrainedSize);
            break;
          case 1:
          case 2:
          case 0:
          case 4:
          case 3:
          case 5:
            _this._box$_size = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)).constrainSizeAndAttemptToPreserveAspectRatio$1(_this.RenderObjectWithChildMixin__child.get$size(0));
            break;
        }
        _this._proxy_box$_transform = _this._proxy_box$_hasVisualOverflow = null;
      } else {
        t1 = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this));
        _this._box$_size = new C.Size(C.clampDouble(0, t1.minWidth, t1.maxWidth), C.clampDouble(0, t1.minHeight, t1.maxHeight));
      }
    },
    _updatePaintData$0() {
      var t1, resolvedAlignment, childSize, sizes, t2, t3, t4, sourceRect, t5, destinationRect, _this = this;
      if (_this._proxy_box$_transform != null)
        return;
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 == null) {
        _this._proxy_box$_hasVisualOverflow = false;
        t1 = new C.Matrix40(new Float64Array(16));
        t1.setIdentity$0();
        _this._proxy_box$_transform = t1;
      } else {
        resolvedAlignment = _this._proxy_box$_resolvedAlignment;
        if (resolvedAlignment == null)
          resolvedAlignment = _this._proxy_box$_resolvedAlignment = _this._proxy_box$_alignment;
        childSize = t1.get$size(0);
        sizes = A9.applyBoxFit(_this._proxy_box$_fit, childSize, _this.get$size(0));
        t1 = sizes.destination;
        t2 = sizes.source;
        t3 = childSize._dx;
        t4 = childSize._dy;
        sourceRect = resolvedAlignment.inscribe$2(t2, new C.Rect(0, 0, 0 + t3, 0 + t4));
        t5 = _this.get$size(0);
        destinationRect = resolvedAlignment.inscribe$2(t1, new C.Rect(0, 0, 0 + t5._dx, 0 + t5._dy));
        t5 = sourceRect.left;
        _this._proxy_box$_hasVisualOverflow = sourceRect.right - t5 < t3 || sourceRect.bottom - sourceRect.top < t4;
        t4 = C.Matrix4_Matrix4$translationValues(destinationRect.left, destinationRect.top, 0);
        t4.scale$3(0, t1._dx / t2._dx, t1._dy / t2._dy, 1);
        t4.translate$2(0, -t5, -sourceRect.top);
        _this._proxy_box$_transform = t4;
      }
    },
    _paintChildWithTransform$2(context, offset) {
      var childOffset, t2, t3, t4, _this = this,
        t1 = _this._proxy_box$_transform;
      t1.toString;
      childOffset = C.MatrixUtils_getAsTranslation(t1);
      if (childOffset == null) {
        t1 = _this.__RenderObject__needsCompositing_A;
        t1 === $ && C.throwLateFieldNI("_needsCompositing");
        t2 = _this._proxy_box$_transform;
        t2.toString;
        t3 = C.RenderProxyBoxMixin.prototype.get$paint.call(_this);
        t4 = _this._layerHandle._layer;
        return context.pushTransform$5$oldLayer(t1, offset, t2, t3, t4 instanceof C.TransformLayer ? t4 : null);
      } else
        _this.super$RenderProxyBoxMixin$paint(context, offset.$add(0, childOffset));
      return null;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, _this = this;
      if (_this.RenderObjectWithChildMixin__child == null || _this.get$size(0).get$isEmpty(0) || _this.RenderObjectWithChildMixin__child.get$size(0).get$isEmpty(0))
        return;
      _this._updatePaintData$0();
      t1 = _this._proxy_box$_hasVisualOverflow;
      t1.toString;
      if (t1 && _this._proxy_box$_clipBehavior !== D.Clip_0) {
        t1 = _this.__RenderObject__needsCompositing_A;
        t1 === $ && C.throwLateFieldNI("_needsCompositing");
        t2 = _this.get$size(0);
        t3 = _this._layerHandle;
        t4 = t3._layer;
        t4 = t4 instanceof C.ClipRectLayer ? t4 : null;
        t3.set$layer(0, context.pushClipRect$6$clipBehavior$oldLayer(t1, offset, new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$_paintChildWithTransform(), _this._proxy_box$_clipBehavior, t4));
      } else
        _this._layerHandle.set$layer(0, _this._paintChildWithTransform$2(context, offset));
    },
    hitTestChildren$2$position(result, position) {
      var t1, _this = this;
      if (!_this.get$size(0).get$isEmpty(0)) {
        t1 = _this.RenderObjectWithChildMixin__child;
        t1 = t1 == null ? null : t1.get$size(0).get$isEmpty(0);
        t1 = t1 === true;
      } else
        t1 = true;
      if (t1)
        return false;
      _this._updatePaintData$0();
      return result.addWithPaintTransform$3$hitTest$position$transform(new B.RenderFittedBox_hitTestChildren_closure(_this), position, _this._proxy_box$_transform);
    },
    paintsChild$1(child) {
      type$.RenderBox._as(child);
      return !this.get$size(0).get$isEmpty(0) && !child.get$size(0).get$isEmpty(0);
    },
    applyPaintTransform$2(child, transform) {
      var t1;
      type$.RenderBox._as(child);
      if (!(!this.get$size(0).get$isEmpty(0) && !child.get$size(0).get$isEmpty(0)))
        transform.setZero$0();
      else {
        this._updatePaintData$0();
        t1 = this._proxy_box$_transform;
        t1.toString;
        transform.multiply$1(0, t1);
      }
    }
  };
  B.TableBorder.prototype = {
    get$isUniform() {
      var topWidth, topStyle, _this = this,
        t1 = _this.top,
        topColor = t1.color,
        t2 = _this.right;
      if (!t2.color.$eq(0, topColor) || !_this.bottom.color.$eq(0, topColor) || !_this.left.color.$eq(0, topColor) || !_this.horizontalInside.color.$eq(0, topColor) || !_this.verticalInside.color.$eq(0, topColor))
        return false;
      topWidth = t1.width;
      if (t2.width !== topWidth || _this.bottom.width !== topWidth || _this.left.width !== topWidth || _this.horizontalInside.width !== topWidth || _this.verticalInside.width !== topWidth)
        return false;
      topStyle = t1.style;
      if (t2.style !== topStyle || _this.bottom.style !== topStyle || _this.left.style !== topStyle || _this.horizontalInside.style !== topStyle || _this.verticalInside.style !== topStyle)
        return false;
      return true;
    },
    paint$4$columns$rows(canvas, rect, columns, rows) {
      var t2, paint, path, t3, t4, t5, outer, inner, _this = this,
        t1 = type$.Iterable_double;
      t1._as(rows);
      t1._as(columns);
      t1 = J.getInterceptor$asx(columns);
      if (t1.get$isNotEmpty(columns) || J.get$isNotEmpty$asx(rows)) {
        t2 = $.$get$_renderer();
        paint = t2.createPaint$0();
        path = t2.createPath$0();
        if (t1.get$isNotEmpty(columns)) {
          t2 = _this.verticalInside;
          switch (t2.style.index) {
            case 1:
              paint.set$color(0, t2.color);
              paint.set$strokeWidth(t2.width);
              paint.set$style(0, D.PaintingStyle_1);
              path.reset$0(0);
              for (t1 = t1.get$iterator(columns), t2 = rect.left, t3 = rect.top, t4 = rect.bottom; t1.moveNext$0();) {
                t5 = t2 + t1.get$current(t1);
                path.moveTo$2(0, t5, t3);
                path.lineTo$2(0, t5, t4);
              }
              canvas.drawPath$2(path, paint);
              break;
            case 0:
              break;
          }
        }
        t1 = J.getInterceptor$asx(rows);
        if (t1.get$isNotEmpty(rows)) {
          t2 = _this.horizontalInside;
          switch (t2.style.index) {
            case 1:
              paint.set$color(0, t2.color);
              paint.set$strokeWidth(t2.width);
              paint.set$style(0, D.PaintingStyle_1);
              path.reset$0(0);
              for (t1 = t1.get$iterator(rows), t2 = rect.left, t3 = rect.top, t4 = rect.right; t1.moveNext$0();) {
                t5 = t3 + t1.get$current(t1);
                path.moveTo$2(0, t2, t5);
                path.lineTo$2(0, t4, t5);
              }
              canvas.drawPath$2(path, paint);
              break;
            case 0:
              break;
          }
        }
      }
      t1 = !_this.get$isUniform() || _this.borderRadius.$eq(0, F.BorderRadius_tUf);
      t2 = _this.top;
      if (t1)
        E.paintBorder(canvas, rect, _this.bottom, _this.left, _this.right, t2);
      else {
        outer = _this.borderRadius.toRRect$1(rect);
        inner = outer.inflate$1(-t2.width);
        paint = $.$get$_renderer().createPaint$0();
        paint.set$color(0, t2.color);
        canvas.drawDRRect$3(outer, inner, paint);
      }
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof B.TableBorder && other.top.$eq(0, _this.top) && other.right.$eq(0, _this.right) && other.bottom.$eq(0, _this.bottom) && other.left.$eq(0, _this.left) && other.horizontalInside.$eq(0, _this.horizontalInside) && other.verticalInside.$eq(0, _this.verticalInside) && other.borderRadius.$eq(0, _this.borderRadius);
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.top, _this.right, _this.bottom, _this.left, _this.horizontalInside, _this.verticalInside, _this.borderRadius, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TableBorder(" + _this.top.toString$0(0) + ", " + _this.right.toString$0(0) + ", " + _this.bottom.toString$0(0) + ", " + _this.left.toString$0(0) + ", " + _this.horizontalInside.toString$0(0) + ", " + _this.verticalInside.toString$0(0) + ", " + _this.borderRadius.toString$0(0) + ")";
    }
  };
  B.FittedBox.prototype = {
    createRenderObject$1(context) {
      var t1 = new B.RenderFittedBox(this.fit, this.alignment, C.Directionality_maybeOf(context), this.clipBehavior, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderFittedBox._as(renderObject);
      renderObject.set$fit(this.fit);
      renderObject.set$alignment(this.alignment);
      renderObject.set$textDirection(C.Directionality_maybeOf(context));
      t1 = this.clipBehavior;
      if (t1 !== renderObject._proxy_box$_clipBehavior) {
        renderObject._proxy_box$_clipBehavior = t1;
        renderObject.markNeedsPaint$0();
        renderObject.markNeedsSemanticsUpdate$0();
      }
    }
  };
  B.Spacer.prototype = {
    build$1(context) {
      return R.Expanded$(X.SizedBox_0_0_null_null, 1, null);
    }
  };
  B.ToggleableStateMixin.prototype = {
    animateToValue$0() {
      var t1, t2, _this = this,
        _s19_ = "_positionController";
      _this.get$tristate();
      t1 = _this.get$value(_this);
      t2 = _this.ToggleableStateMixin___ToggleableStateMixin__positionController_A;
      if (t1) {
        t2 === $ && C.throwLateFieldNI(_s19_);
        t2.forward$0(0);
      } else {
        t2 === $ && C.throwLateFieldNI(_s19_);
        t2.reverse$0(0);
      }
    },
    _toggleable$_handleTapDown$1(details) {
      var t1, _this = this;
      if (_this.get$onChanged() != null) {
        _this.setState$1(new B.ToggleableStateMixin__handleTapDown_closure(_this, details));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
        t1 === $ && C.throwLateFieldNI("_reactionController");
        t1.forward$0(0);
      }
    },
    _toggleable$_handleTap$1(__wc0_formal) {
      var t1, _this = this;
      type$.nullable_Intent._as(__wc0_formal);
      if (_this.get$onChanged() == null)
        return;
      switch (_this.get$value(_this)) {
        case false:
          _this.get$onChanged().call$1(true);
          break;
        case true:
          t1 = _this.get$onChanged();
          t1.toString;
          _this.get$tristate();
          t1.call$1(false);
          break;
        case null:
        case void 0:
          _this.get$onChanged().call$1(false);
          break;
      }
      _this._framework$_element.get$renderObject().sendSemanticsEvent$1(X.TapSemanticEvent_tap);
    },
    _toggleable$_handleTap$0() {
      return this._toggleable$_handleTap$1(null);
    },
    _handleTapEnd$1(__wc1_formal) {
      var t1, _this = this;
      if (_this.ToggleableStateMixin__downPosition != null)
        _this.setState$1(new B.ToggleableStateMixin__handleTapEnd_closure(_this));
      t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionController_A;
      t1 === $ && C.throwLateFieldNI("_reactionController");
      t1.reverse$0(0);
    },
    _handleTapEnd$0() {
      return this._handleTapEnd$1(null);
    },
    _toggleable$_handleFocusHighlightChanged$1(focused) {
      var t1, _this = this,
        _s28_ = "_reactionFocusFadeController";
      if (focused !== _this.ToggleableStateMixin__focused) {
        _this.setState$1(new B.ToggleableStateMixin__handleFocusHighlightChanged_closure(_this, focused));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionFocusFadeController_A;
        if (focused) {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.forward$0(0);
        } else {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.reverse$0(0);
        }
      }
    },
    _toggleable$_handleHoverChanged$1(hovering) {
      var t1, _this = this,
        _s28_ = "_reactionHoverFadeController";
      if (hovering !== _this.ToggleableStateMixin__hovering) {
        _this.setState$1(new B.ToggleableStateMixin__handleHoverChanged_closure(_this, hovering));
        t1 = _this.ToggleableStateMixin___ToggleableStateMixin__reactionHoverFadeController_A;
        if (hovering) {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.forward$0(0);
        } else {
          t1 === $ && C.throwLateFieldNI(_s28_);
          t1.reverse$0(0);
        }
      }
    },
    get$states() {
      var t2, _this = this,
        t1 = C.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (_this.get$onChanged() == null)
        t1.add$1(0, I.WidgetState_6);
      if (_this.ToggleableStateMixin__hovering)
        t1.add$1(0, I.WidgetState_0);
      if (_this.ToggleableStateMixin__focused)
        t1.add$1(0, I.WidgetState_1);
      t2 = _this.get$value(_this);
      if (t2)
        t1.add$1(0, F.WidgetState_4);
      return t1;
    },
    buildToggleable$6$autofocus$focusNode$mouseCursor$onFocusChange$painter$size(autofocus, focusNode, mouseCursor, onFocusChange, painter, size) {
      var value, result, t1, t2, t3, t4, t5, t6, t7, t8, t9, _this = this, _null = null;
      type$.nullable_void_Function_bool._as(onFocusChange);
      type$.nullable_WidgetStateProperty_MouseCursor._as(mouseCursor);
      value = _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI;
      if (value === $) {
        result = C.LinkedHashMap_LinkedHashMap$_literal([X.Type_ActivateIntent_2HG, new M.CallbackAction(_this.get$_toggleable$_handleTap(), new E.ObserverList(C._setArrayType([], type$.JSArray_of_void_Function_Action_Intent), type$.ObserverList_of_void_Function_Action_Intent), type$.CallbackAction_ActivateIntent)], type$.Type, type$.Action_Intent);
        _this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI !== $ && C.throwLateFieldADI("_actionMap");
        _this.set$__ToggleableStateMixin__actionMap_FI(result);
        value = result;
      }
      t1 = _this.get$onChanged();
      t2 = mouseCursor._resolve.call$1(type$.Set_WidgetState._as(_this.get$states()));
      if (t2 == null)
        t2 = D.SystemMouseCursor_basic;
      t3 = _this.get$onChanged();
      t4 = _this.get$onChanged() != null ? _this.get$_toggleable$_handleTapDown() : _null;
      t5 = _this.get$onChanged() != null ? _this.get$_toggleable$_handleTap() : _null;
      t6 = _this.get$onChanged() != null ? _this.get$_handleTapEnd() : _null;
      t7 = _this.get$onChanged() != null ? _this.get$_handleTapEnd() : _null;
      t8 = _this.get$onChanged();
      t9 = H.CustomPaint$(_null, _null, _null, painter, size);
      return Aa.FocusableActionDetector$(value, false, A_.GestureDetector$(_null, new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t8 != null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, t9, _null), G.DragStartBehavior_1, t3 == null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t5, t7, t4, t6, _null, _null, _null, _null, _null), t1 != null, focusNode, true, t2, onFocusChange, _this.get$_toggleable$_handleFocusHighlightChanged(), _this.get$_toggleable$_handleHoverChanged(), _null);
    },
    buildToggleable$5$autofocus$focusNode$mouseCursor$painter$size(autofocus, focusNode, mouseCursor, painter, size) {
      return this.buildToggleable$6$autofocus$focusNode$mouseCursor$onFocusChange$painter$size(autofocus, focusNode, mouseCursor, null, painter, size);
    },
    set$__ToggleableStateMixin__actionMap_FI(__ToggleableStateMixin__actionMap_FI) {
      this.ToggleableStateMixin___ToggleableStateMixin__actionMap_FI = type$.Map_of_Type_and_Action_Intent._as(__ToggleableStateMixin__actionMap_FI);
    }
  };
  B.ToggleablePainter.prototype = {
    set$position(_, value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._toggleable$_position;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_toggleable$_position(0, value);
      _this.notifyListeners$0();
    },
    set$reaction(value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._reaction;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_reaction(value);
      _this.notifyListeners$0();
    },
    set$reactionFocusFade(value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._reactionFocusFade;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_reactionFocusFade(value);
      _this.notifyListeners$0();
    },
    set$reactionHoverFade(value) {
      var t1, t2, _this = this;
      type$.Animation_double._as(value);
      t1 = _this._reactionHoverFade;
      if (value === t1)
        return;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      value.parent.addListener$1(0, type$.void_Function._as(_this.get$notifyListeners()));
      _this.set$_reactionHoverFade(value);
      _this.notifyListeners$0();
    },
    set$activeColor(value) {
      if (J.$eq$(this._activeColor, value))
        return;
      this._activeColor = value;
      this.notifyListeners$0();
    },
    set$inactiveColor(value) {
      if (J.$eq$(this._inactiveColor, value))
        return;
      this._inactiveColor = value;
      this.notifyListeners$0();
    },
    set$inactiveReactionColor(value) {
      if (value.$eq(0, this._inactiveReactionColor))
        return;
      this._inactiveReactionColor = value;
      this.notifyListeners$0();
    },
    set$reactionColor(value) {
      if (value.$eq(0, this._reactionColor))
        return;
      this._reactionColor = value;
      this.notifyListeners$0();
    },
    set$hoverColor(value) {
      if (value.$eq(0, this._toggleable$_hoverColor))
        return;
      this._toggleable$_hoverColor = value;
      this.notifyListeners$0();
    },
    set$focusColor(value) {
      if (value.$eq(0, this._toggleable$_focusColor))
        return;
      this._toggleable$_focusColor = value;
      this.notifyListeners$0();
    },
    set$splashRadius(value) {
      if (value === this._splashRadius)
        return;
      this._splashRadius = value;
      this.notifyListeners$0();
    },
    set$downPosition(value) {
      if (J.$eq$(value, this._downPosition))
        return;
      this._downPosition = value;
      this.notifyListeners$0();
    },
    set$isFocused(value) {
      if (value === this._toggleable$_isFocused)
        return;
      this._toggleable$_isFocused = value;
      this.notifyListeners$0();
    },
    set$isHovered(value) {
      if (value === this._toggleable$_isHovered)
        return;
      this._toggleable$_isHovered = value;
      this.notifyListeners$0();
    },
    paintRadialReaction$2$canvas$origin(canvas, origin) {
      var reactionPaint, t1, t2, reactionRadius, _this = this;
      if (_this._reaction.get$status(0) !== F.AnimationStatus_0 || _this._reactionFocusFade.get$status(0) !== F.AnimationStatus_0 || _this._reactionHoverFade.get$status(0) !== F.AnimationStatus_0) {
        reactionPaint = $.$get$_renderer().createPaint$0();
        t1 = _this._inactiveReactionColor;
        t1.toString;
        t2 = _this._reactionColor;
        t2.toString;
        t2 = E.Color_lerp(t1, t2, _this._toggleable$_position.get$value(0));
        t1 = _this._toggleable$_hoverColor;
        t1.toString;
        t1 = E.Color_lerp(t2, t1, _this._reactionHoverFade.get$value(0));
        t2 = _this._toggleable$_focusColor;
        t2.toString;
        t2 = E.Color_lerp(t1, t2, _this._reactionFocusFade.get$value(0));
        t2.toString;
        reactionPaint.set$color(0, t2);
        t2 = _this._splashRadius;
        t2.toString;
        t1 = _this._toggleable$_isFocused;
        t1.toString;
        if (!t1) {
          t1 = _this._toggleable$_isHovered;
          t1.toString;
        } else
          t1 = true;
        if (t1)
          reactionRadius = t2;
        else {
          t1 = _this._reaction;
          t1.toString;
          reactionRadius = new E.Tween(0, t2, type$.Tween_double).transform$1(0, type$.Animation_double._as(t1).get$value(0));
        }
        if (reactionRadius > 0)
          canvas.drawCircle$3(origin.$add(0, D.Offset_0_0), reactionRadius, reactionPaint);
      }
    },
    dispose$0() {
      var t2, _this = this,
        t1 = _this._toggleable$_position;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      t1 = _this._reaction;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      t1 = _this._reactionFocusFade;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      t1 = _this._reactionHoverFade;
      if (t1 != null) {
        t2 = type$.void_Function._as(_this.get$notifyListeners());
        t1.parent.removeListener$1(0, t2);
      }
      _this.super$ChangeNotifier$dispose();
    },
    shouldRepaint$1(oldDelegate) {
      return true;
    },
    hitTest$1(position) {
      return null;
    },
    get$semanticsBuilder() {
      return null;
    },
    shouldRebuildSemantics$1(oldDelegate) {
      return false;
    },
    toString$0(_) {
      return "<optimized out>#" + C.shortHash(this);
    },
    set$_toggleable$_position(_, _position) {
      this._toggleable$_position = type$.nullable_Animation_double._as(_position);
    },
    set$_reaction(_reaction) {
      this._reaction = type$.nullable_Animation_double._as(_reaction);
    },
    set$_reactionFocusFade(_reactionFocusFade) {
      this._reactionFocusFade = type$.nullable_Animation_double._as(_reactionFocusFade);
    },
    set$_reactionHoverFade(_reactionHoverFade) {
      this._reactionHoverFade = type$.nullable_Animation_double._as(_reactionHoverFade);
    },
    $isCustomPainter: 1
  };
  B.AccentRenderConfig.prototype = {};
  B.FontMetrics.prototype = {};
  B.AccentNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, skew, t2, t3, accentRenderConfig, accentWidget, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t1 = childBuildResults[0];
      t1.toString;
      skew = _this.isShifty ? t1.skew : 0;
      if (!_this.isStretchy) {
        t2 = {};
        t2.accentSymbolWidget = null;
        t3 = _this.label;
        if (t3 === "\u2192")
          t2.accentSymbolWidget = B.staticSvg("vec", options, true);
        else {
          accentRenderConfig = A.Map_8zs6u.$index(0, t3);
          if (accentRenderConfig == null || accentRenderConfig.overChar == null)
            t2.accentSymbolWidget = E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          else {
            t3 = accentRenderConfig.overChar;
            t3.toString;
            t2.accentSymbolWidget = B.makeBaseSymbol(A.AtomType_0, A.Mode_1, options, _null, t3, false).widget;
          }
        }
        accentWidget = new V.LayoutBuilder(new B.AccentNode_buildWidget_closure(t2, options), _null);
      } else
        accentWidget = new V.LayoutBuilder(new B.AccentNode_buildWidget_closure0(_this, options), _null);
      return new B.BuildResult(B.VList$(1, C._setArrayType([B.VListElement$(accentWidget, new B.AccentNode_buildWidget_closure1(skew), skew, 0), B.MinDimension$(0, t1.widget, 0, new B.Measurement(options.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(options), 0)], type$.JSArray_Widget)), options, t1.italic, t1.skew, _null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options.havingCrampedStyle$0()], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["base", _this.base.toJson$0(), "label", B.unicodeLiteral(_this.label), "isStretchy", _this.isStretchy, "isShifty", _this.isShifty], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  B.AccentUnderNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var baseResult, t1, t2, t3;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      baseResult = childBuildResults[0];
      t1 = baseResult.italic;
      t2 = baseResult.skew;
      t3 = this.label === "~" ? new B.Measurement(0.12, A.Unit_16).toLpUnder$1(options) : 0;
      return new B.BuildResult(B.VList$(0, C._setArrayType([B.VListElement$(baseResult.widget, null, 0, t3), B.VListElement$(new V.LayoutBuilder(new B.AccentUnderNode_buildWidget_closure(this, options), null), new B.AccentUnderNode_buildWidget_closure0(), 0, 0)], type$.JSArray_Widget)), options, t1, t2, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options.havingCrampedStyle$0()], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["base", this.base.toJson$0(), "label", B.unicodeLiteral(this.label)], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  B.CursorNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var baselinePart, height, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      baselinePart = 1 - options.get$fontMetrics().axisHeight / 2;
      height = options.fontSize * baselinePart * options.get$sizeMultiplier();
      return new B.BuildResult(new B._BaselineDistance(height * baselinePart, E.Container$(_null, _null, D.Clip_0, options.color, _null, _null, _null, height, _null, _null, _null, _null, _null, 1.5), _null), options, 0, 0, _null);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    }
  };
  B._BaselineDistance.prototype = {
    createRenderObject$1(context) {
      var t1 = new B._BaselineDistanceBox(this.baselineDistance, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    }
  };
  B._BaselineDistanceBox.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this.baselineDistance;
    }
  };
  B.EnclosureNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var horizontalPadding, verticalPadding, t1, t2, t3, widget, t4, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      horizontalPadding = _this.horizontalPadding.toLpUnder$1(options);
      verticalPadding = _this.verticalPadding.toLpUnder$1(options);
      if (_this.hasBorder) {
        t1 = new B.Measurement(options.get$fontMetrics().fboxrule, A.Unit_16).toLpUnder$1(options);
        t2 = _this.bordercolor;
        t1 = new E.BoxDecoration(_this.backgroundcolor, _null, Au.Border_Border$all(t2 == null ? options.color : t2, t1), _null, _null, _null, _null, F.BoxShape_0);
      } else
        t1 = _null;
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t2 = type$.JSArray_Widget;
      t1 = C._setArrayType([E.Container$(_null, new E.Padding(new C.EdgeInsets(horizontalPadding, verticalPadding, horizontalPadding, verticalPadding), childBuildResults[0].widget, _null), D.Clip_0, _null, _null, t1, _null, _null, _null, _null, _null, _null, _null, _null)], t2);
      t3 = _this.notation;
      if (D.JSArray_methods.contains$1(t3, "updiagonalstrike"))
        t1.push(H.Positioned$(0, new V.LayoutBuilder(new B.EnclosureNode_buildWidget_closure(_this, options), _null), _null, _null, 0, 0, 0, _null));
      if (D.JSArray_methods.contains$1(t3, "downdiagnoalstrike"))
        t1.push(H.Positioned$(0, new V.LayoutBuilder(new B.EnclosureNode_buildWidget_closure0(_this, options), _null), _null, _null, 0, 0, 0, _null));
      widget = new E.Stack(F.AlignmentDirectional_m1_m1, _null, F.StackFit_0, D.Clip_1, t1, _null);
      if (D.JSArray_methods.contains$1(t3, "horizontalstrike")) {
        t1 = new B.Measurement(options.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(options);
        t3 = new B.Measurement(options.get$fontMetrics().defaultRuleThickness, A.Unit_16).toLpUnder$1(options);
        t4 = _this.bordercolor;
        if (t4 == null)
          t4 = options.color;
        widget = new B.CustomLayout(new B.HorizontalStrikeDelegate(t3, t1 / 2, t4), C._setArrayType([B.CustomLayoutId$(widget, 0, type$.int)], t2), _null, type$.CustomLayout_int);
      }
      return new B.BuildResult(widget, options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t3, t4, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "base", _this.base.toJson$0());
      t2.$indexSet(0, "hasBorder", _this.hasBorder);
      t3 = _this.bordercolor;
      if (t3 != null)
        t2.$indexSet(0, "bordercolor", t3);
      t3 = _this.backgroundcolor;
      if (t3 != null)
        t2.$indexSet(0, "backgroundcolor", t3);
      t3 = _this.notation;
      if (t3.length !== 0)
        t2.$indexSet(0, "notation", t3);
      t3 = _this.horizontalPadding;
      if (t3 !== A.Measurement_0_Unit_0) {
        t4 = A.Map_Dgfp9.$index(0, t3.unit);
        t4.toString;
        t2.$indexSet(0, "horizontalPadding", C.S(t3.value) + t4);
      }
      t3 = _this.verticalPadding;
      if (t3 !== A.Measurement_0_Unit_0) {
        t4 = A.Map_Dgfp9.$index(0, t3.unit);
        t4.toString;
        t2.$indexSet(0, "verticalPadding", C.S(t3.value) + t4);
      }
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.LinePainter.prototype = {
    paint$2(canvas, size) {
      var _this = this,
        t1 = size._dx,
        t2 = size._dy,
        t3 = $.$get$_renderer().createPaint$0();
      t3.set$strokeWidth(_this.lineWidth);
      t3.set$color(0, _this.color);
      canvas.drawLine$3(new C.Offset(_this.startRelativeX * t1, _this.startRelativeY * t2), new C.Offset(_this.endRelativeX * t1, _this.endRelativeY * t2), t3);
    },
    shouldRepaint$1(oldDelegate) {
      return this !== oldDelegate;
    }
  };
  B.HorizontalStrikeDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map_int_RenderBox._as(childrenTable);
      return this.height;
    },
    getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(childSize, childrenTable, extent, max, sizingDirection) {
      var t1;
      type$.double_Function_RenderBox_double._as(childSize);
      t1 = type$.Map_int_RenderBox._as(childrenTable).$index(0, 0);
      t1.toString;
      return childSize.call$2(t1, 1 / 0);
    },
    computeLayout$3$dry(constraints, childrenTable, dry) {
      var t2,
        t1 = type$.Map_int_RenderBox._as(childrenTable).$index(0, 0);
      t1.toString;
      if (dry)
        return t1._computeIntrinsics$2$3(D.C__DryLayout, constraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      t1.layout$2$parentUsesSize(constraints, true);
      t2 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
      t2.toString;
      this.height = t2;
      this.width = t1.get$size(0)._dx;
      return t1.get$size(0);
    },
    additionalPaint$2(context, offset) {
      var _this = this,
        t1 = context.get$canvas(0),
        t2 = offset._dx,
        t3 = offset._dy + _this.height - _this.vShift,
        t4 = _this.width,
        t5 = $.$get$_renderer().createPaint$0();
      t5.set$strokeWidth(_this.ruleThickness);
      t5.set$color(0, _this.color);
      t1.drawLine$3(new C.Offset(t2, t3), new C.Offset(t2 + t4, t3), t5);
    }
  };
  B.EquationArrayNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3, t4, t5, t6, t7, _this = this;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options);
      t2 = new B.Measurement(options.get$fontMetrics().defaultRuleThickness, A.Unit_16).toLpUnder$1(options);
      t3 = _this.addJot ? new B.Measurement(3, A.Unit_0).toLpUnder$1(options) : 0;
      t4 = new B.Measurement(12, A.Unit_0).toLpUnder$1(options);
      t5 = J.map$1$1$ax(_this.rowSpacings, new B.EquationArrayNode_buildWidget_closure(options), type$.double);
      t6 = C._arrayInstanceType(childBuildResults);
      t7 = t6._eval$1("MappedListIterable<1,Widget>");
      return new B.BuildResult(B.ShiftBaseline$(new B.EqnArray(t2, t3, t4 * _this.arrayStretch, _this.hlines, C.List_List$of(t5, false, t5.$ti._eval$1("ListIterable.E")), C.List_List$of(new C.MappedListIterable(childBuildResults, t6._eval$1("Widget(1)")._as(new B.EquationArrayNode_buildWidget_closure0()), t7), false, t7._eval$1("ListIterable.E")), null), t1, 0.5), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(this.body.length, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      return this.body;
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t4, t5, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = type$.String,
        t3 = C.LinkedHashMap_LinkedHashMap$_empty(t2, type$.nullable_Object);
      if (_this.addJot)
        t3.$indexSet(0, "addJot", true);
      t4 = _this.body;
      t5 = C._arrayInstanceType(t4);
      t3.$indexSet(0, "body", new C.MappedListIterable(t4, t5._eval$1("Map<String,Object?>(1)")._as(new B.EquationArrayNode_toJson_closure()), t5._eval$1("MappedListIterable<1,Map<String,Object?>>")));
      t4 = _this.arrayStretch;
      if (t4 !== 1)
        t3.$indexSet(0, "arrayStretch", t4);
      t3.$indexSet(0, "hlines", J.map$1$1$ax(_this.hlines, new B.EquationArrayNode_toJson_closure0(), t2));
      t3.$indexSet(0, "rowSpacings", J.map$1$1$ax(_this.rowSpacings, new B.EquationArrayNode_toJson_closure1(), t2));
      t1.addAll$1(0, t3);
      return t1;
    }
  };
  B.FracNode.prototype = {
    computeChildren$0() {
      return C._setArrayType([this.numerator, this.denominator], type$.JSArray_EquationRowNode);
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = childBuildResults.length;
      if (0 >= t1)
        return C.ioore(childBuildResults, 0);
      t2 = type$._FracPos;
      t3 = B.CustomLayoutId$(childBuildResults[0].widget, A._FracPos_0, t2);
      if (1 >= t1)
        return C.ioore(childBuildResults, 1);
      return new B.BuildResult(new B.CustomLayout(new B.FracLayoutDelegate(this.barSize, options), C._setArrayType([t3, B.CustomLayoutId$(childBuildResults[1].widget, A._FracPos_1, t2)], type$.JSArray_Widget), null, type$.CustomLayout__FracPos), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style;
      return C._setArrayType([options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_2)), options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_3))], type$.JSArray_MathOptions);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "numerator", _this.numerator.toJson$0());
      t2.$indexSet(0, "denominator", _this.denominator.toJson$0());
      t3 = _this.barSize;
      if (t3 != null)
        t2.$indexSet(0, "barSize", t3.toString$0(0));
      if (_this.continued)
        t2.$indexSet(0, "continued", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B._FracPos.prototype = {
    _enumToString$0() {
      return "_FracPos." + this._name;
    }
  };
  B.FracLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map__FracPos_RenderBox._as(childrenTable);
      return this.height;
    },
    performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, isComputingIntrinsics) {
      var t1, t2, barLength, width;
      type$.Map__FracPos_double._as(childrenWidths);
      t1 = childrenWidths.$index(0, A._FracPos_0);
      t1.toString;
      t2 = childrenWidths.$index(0, A._FracPos_1);
      t2.toString;
      barLength = Math.max(t1, t2);
      width = barLength + 2 * new B.Measurement(0.12, A.Unit_16).toLpUnder$1(this.options);
      if (!isComputingIntrinsics) {
        this.barLength = barLength;
        this.width = width;
      }
      return new B.AxisConfiguration(width, C.LinkedHashMap_LinkedHashMap$_literal([A._FracPos_0, 0.5 * (width - t1), A._FracPos_1, 0.5 * (width - t2)], type$._FracPos, type$.double), type$.AxisConfiguration__FracPos);
    },
    performHorizontalIntrinsicLayout$1$childrenWidths(childrenWidths) {
      return this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, false);
    },
    performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, isComputingIntrinsics) {
      var t2, t3, t4, t5, metrics, xi8, t6, theta, t7, u, v, a, dx, phi, psi, height, _this = this,
        t1 = type$.Map__FracPos_double;
      t1._as(childrenHeights);
      t1._as(childrenBaselines);
      t1 = childrenHeights.$index(0, A._FracPos_0);
      t1.toString;
      t2 = childrenHeights.$index(0, A._FracPos_1);
      t2.toString;
      t3 = childrenBaselines.$index(0, A._FracPos_0);
      t3.toString;
      t4 = childrenBaselines.$index(0, A._FracPos_1);
      t4.toString;
      t5 = _this.options;
      metrics = t5.get$fontMetrics();
      xi8 = new B.Measurement(metrics.defaultRuleThickness, A.Unit_16).toLpUnder$1(t5);
      t6 = _this.barSize;
      theta = t6 == null ? null : t6.toLpUnder$1(t5);
      if (theta == null)
        theta = xi8;
      t6 = t5.style.index < 2;
      if (t6)
        t7 = metrics.num1;
      else
        t7 = theta !== 0 ? metrics.num2 : metrics.num3;
      u = new B.Measurement(t7, A.Unit_16).toLpUnder$1(t5);
      v = new B.Measurement(t6 ? metrics.denom1 : metrics.denom2, A.Unit_16).toLpUnder$1(t5);
      a = new B.Measurement(metrics.axisHeight, A.Unit_16).toLpUnder$1(t5);
      dx = t1 - t3;
      if (theta === 0) {
        phi = t6 ? 7 * xi8 : 3 * xi8;
        psi = u - dx - (t4 - v);
        if (psi < phi) {
          t1 = 0.5 * (phi - psi);
          u += t1;
          v += t1;
        }
      } else {
        phi = t6 ? 3 * theta : theta;
        t1 = 0.5 * theta;
        if (u - dx - a - t1 < phi)
          u = phi + dx + a + t1;
        if (a - t1 - t4 + v < phi)
          v = phi + t4 - a + t1;
      }
      height = t3 + u;
      if (!isComputingIntrinsics) {
        _this.height = height;
        _this.theta = theta;
        _this.a = a;
      }
      return new B.AxisConfiguration(height + (t2 - t4 + v), C.LinkedHashMap_LinkedHashMap$_literal([A._FracPos_0, height - u - t3, A._FracPos_1, height + v - t4], type$._FracPos, type$.double), type$.AxisConfiguration__FracPos);
    },
    performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenBaselines, childrenHeights) {
      return this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, false);
    },
    additionalPaint$2(context, offset) {
      var paint, _this = this;
      if (_this.theta !== 0) {
        paint = $.$get$_renderer().createPaint$0();
        paint.set$color(0, _this.options.color);
        paint.set$strokeWidth(_this.theta);
        context.get$canvas(0).drawLine$3(new C.Offset(0.5 * (_this.width - _this.barLength), _this.height - _this.a).$add(0, offset), new C.Offset(0.5 * (_this.width + _this.barLength), _this.height - _this.a).$add(0, offset), paint);
      }
    }
  };
  B.FunctionNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = this.argument.overrideType;
      if (t1 == null)
        t1 = A.AtomType_0;
      t1 = B.getSpacingSize(A.AtomType_1, t1, options.style).toLpUnder$1(options);
      t2 = childBuildResults.length;
      if (0 >= t2)
        return C.ioore(childBuildResults, 0);
      t1 = B.LineElement$(false, false, childBuildResults[0].widget, _null, t1);
      if (1 >= t2)
        return C.ioore(childBuildResults, 1);
      return new B.BuildResult(B.Line$(C._setArrayType([t1, B.LineElement$(false, false, childBuildResults[1].widget, _null, 0)], type$.JSArray_Widget), _null), options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(2, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.functionName, this.argument], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_1;
    },
    get$rightType() {
      var t1 = this.argument.overrideType;
      return t1 == null ? A.AtomType_0 : t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["functionName", this.functionName.toJson$0(), "argument", this.argument.toJson$0()], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  B.LeftRightNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var numElements;
      type$.List_nullable_BuildResult._as(childBuildResults);
      numElements = 2 + this.body.length + this.middle.length;
      return new B.BuildResult(B.Line$(C.List_List$generate(numElements, new B.LeftRightNode_buildWidget_closure(this, new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options), options, numElements, childBuildResults), false, type$.LineElement), null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(this.body.length, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      return this.body;
    },
    get$leftType() {
      return A.AtomType_4;
    },
    get$rightType() {
      return A.AtomType_5;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object),
        t3 = _this.body,
        t4 = C._arrayInstanceType(t3);
      t2.$indexSet(0, "body", new C.MappedListIterable(t3, t4._eval$1("Map<String,Object?>(1)")._as(new B.LeftRightNode_toJson_closure()), t4._eval$1("MappedListIterable<1,Map<String,Object?>>")));
      t2.$indexSet(0, "leftDelim", _this.leftDelim);
      t2.$indexSet(0, "rightDelim", _this.rightDelim);
      t3 = _this.middle;
      if (t3.length !== 0)
        t2.$indexSet(0, "middle", t3);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.StackDelimiterConf.prototype = {};
  B.MatrixSeparatorStyle.prototype = {
    _enumToString$0() {
      return "MatrixSeparatorStyle." + this._name;
    }
  };
  B.MatrixColumnAlign.prototype = {
    _enumToString$0() {
      return "MatrixColumnAlign." + this._name;
    }
  };
  B.MatrixNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, _this = this;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = new B.Measurement(options.get$fontMetrics().axisHeight, A.Unit_16).toLpUnder$1(options);
      t2 = _this.rows;
      t3 = _this.cols;
      t4 = new B.Measurement(options.get$fontMetrics().defaultRuleThickness, A.Unit_16).toLpUnder$1(options);
      t5 = new B.Measurement(12, A.Unit_0).toLpUnder$1(options);
      t6 = type$.double;
      t7 = J.map$1$1$ax(_this.rowSpacings, new B.MatrixNode_buildWidget_closure(options), t6);
      t7 = C.List_List$of(t7, false, t7.$ti._eval$1("ListIterable.E"));
      t8 = _this.isSmall ? new B.Measurement(0.2777777777777778, A.Unit_16).toLpUnder$1(options.havingStyle$1(A.MathStyle_4)) : new B.Measurement(5, A.Unit_0).toLpUnder$1(options);
      t9 = C.List_List$filled(t3 + 1, 0, false, t6);
      t6 = C.List_List$filled(t2 + 1, 0, false, t6);
      t10 = B.IterableNullableExtension_whereNotNull(B.ListExtensions_mapIndexed(childBuildResults, new B.MatrixNode_buildWidget_closure0(), type$.nullable_BuildResult, type$.nullable_CustomLayoutId_int), type$.CustomLayoutId_int);
      return new B.BuildResult(B.ShiftBaseline$(new B.CustomLayout(new B.MatrixLayoutDelegate(t2, t3, t4, _this.arrayStretch * t5, t7, _this.hLines, _this.hskipBeforeAndAfter, t8, _this.vLines, _this.columnAligns, t6, t9), C.List_List$of(t10, false, t10.$ti._eval$1("Iterable.E")), null, type$.CustomLayout_int), t1, 0.5), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(this.rows * this.cols, options, false, type$.MathOptions);
    },
    computeChildren$0() {
      var t1 = J.expand$1$1$ax(this.body, new B.MatrixNode_computeChildren_closure(), type$.nullable_EquationRowNode);
      return C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t4, t5, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = type$.String,
        t3 = C.LinkedHashMap_LinkedHashMap$_empty(t2, type$.nullable_Object);
      t3.$indexSet(0, "cols", _this.cols);
      t4 = _this.arrayStretch;
      if (t4 !== 1)
        t3.$indexSet(0, "arrayStretch", t4);
      if (_this.hskipBeforeAndAfter)
        t3.$indexSet(0, "hskipBeforeAndAfter", true);
      if (_this.isSmall)
        t3.$indexSet(0, "isSmall", true);
      t3.$indexSet(0, "columnAligns", J.map$1$1$ax(_this.columnAligns, new B.MatrixNode_toJson_closure(), t2));
      t3.$indexSet(0, "vLines", J.map$1$1$ax(_this.vLines, new B.MatrixNode_toJson_closure0(), t2));
      t4 = _this.rowSpacings;
      t5 = J.getInterceptor$ax(t4);
      if (!t5.every$1(t4, new B.MatrixNode_toJson_closure1()))
        t3.$indexSet(0, "rowSpacings", t5.map$1$1(t4, new B.MatrixNode_toJson_closure2(), t2));
      t4 = _this.hLines;
      t5 = J.getInterceptor$ax(t4);
      if (!t5.every$1(t4, new B.MatrixNode_toJson_closure3()))
        t3.$indexSet(0, "hLines", t5.map$1$1(t4, new B.MatrixNode_toJson_closure4(), t2));
      t3.$indexSet(0, "body", J.map$1$1$ax(_this.body, new B.MatrixNode_toJson_closure5(), type$.Iterable_nullable_Map_of_String_and_nullable_Object));
      t1.addAll$1(0, t3);
      return t1;
    }
  };
  B.MatrixLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map_int_RenderBox._as(childrenTable);
      return null;
    },
    performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, isComputingIntrinsics) {
      var t1, t2, _length, t3, childWidths, index, t4, colWidths, i, j, t5, colPos, vLinePos, t6, t7, t8, pos, t9, childPos, _this = this;
      type$.Map_int_double._as(childrenWidths);
      t1 = _this.cols;
      t2 = _this.rows;
      _length = t1 * t2;
      t3 = type$.double;
      childWidths = J.JSArray_JSArray$allocateFixed(_length, t3);
      for (index = 0; index < _length; ++index) {
        t4 = childrenWidths.$index(0, index);
        childWidths[index] = t4 == null ? 0 : t4;
      }
      colWidths = C.List_List$filled(t1, 0, false, t3);
      for (i = 0; i < t1; ++i)
        for (j = 0; j < t2; ++j) {
          t4 = colWidths[i];
          t5 = j * t1 + i;
          if (!(t5 >= 0 && t5 < _length))
            return C.ioore(childWidths, t5);
          D.JSArray_methods.$indexSet(colWidths, i, Math.max(t4, childWidths[t5]));
        }
      colPos = C.List_List$filled(t1, 0, false, t3);
      vLinePos = C.List_List$filled(t1 + 1, 0, false, t3);
      D.JSArray_methods.$indexSet(vLinePos, 0, 0);
      t4 = _this.vLines;
      t5 = J.getInterceptor$asx(t4);
      t6 = t5.$index(t4, 0) !== A.MatrixSeparatorStyle_2 ? _this.ruleThickness : 0;
      t7 = _this.hskipBeforeAndAfter;
      t8 = t7 ? _this.arraycolsep : 0;
      pos = 0 + t6 + t8;
      for (t6 = t1 - 1, t8 = _this.arraycolsep, t9 = _this.ruleThickness, i = 0; i < t6;) {
        D.JSArray_methods.$indexSet(colPos, i, pos);
        pos += colWidths[i] + t8;
        ++i;
        D.JSArray_methods.$indexSet(vLinePos, i, pos);
        pos = pos + (t5.$index(t4, i) !== A.MatrixSeparatorStyle_2 ? t9 : 0) + t8;
      }
      D.JSArray_methods.$indexSet(colPos, t6, pos);
      if (!(t6 >= 0))
        return C.ioore(colWidths, t6);
      t6 = colWidths[t6];
      t7 = t7 ? t8 : 0;
      pos = pos + t6 + t7;
      D.JSArray_methods.$indexSet(vLinePos, t1, pos);
      _this.width = pos + (t5.$index(t4, t1) !== A.MatrixSeparatorStyle_2 ? t9 : 0);
      childPos = C.List_List$generate(t2 * t1, new B.MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure(_this, colPos, colWidths, childWidths), false, t3);
      if (!isComputingIntrinsics)
        _this.set$vLinePos(vLinePos);
      return new B.AxisConfiguration(_this.width, new C.ListMapView(childPos, C._arrayInstanceType(childPos)._eval$1("ListMapView<1>")), type$.AxisConfiguration_int);
    },
    performHorizontalIntrinsicLayout$1$childrenWidths(childrenWidths) {
      return this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, false);
    },
    performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, isComputingIntrinsics) {
      var t2, _length, t3, childHeights, index, t4, childDepth, rowHeights, rowDepth, i, j, t5, t6, rowBaselinePos, hLinePos, t7, t8, pos, t9, t10, childPos, _this = this,
        t1 = type$.Map_int_double;
      t1._as(childrenHeights);
      t1._as(childrenBaselines);
      t1 = _this.cols;
      t2 = _this.rows;
      _length = t1 * t2;
      t3 = type$.double;
      childHeights = J.JSArray_JSArray$allocateFixed(_length, t3);
      for (index = 0; index < _length; ++index) {
        t4 = childrenBaselines.$index(0, index);
        childHeights[index] = t4 == null ? 0 : t4;
      }
      childDepth = C.List_List$generate(_length, new B.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure(childrenBaselines, childrenHeights), false, t3);
      t4 = _this.arrayskip;
      rowHeights = C.List_List$filled(t2, 0.7 * t4, false, t3);
      rowDepth = C.List_List$filled(t2, 0.3 * t4, false, t3);
      for (i = 0; i < t2; ++i)
        for (t4 = i * t1, j = 0; j < t1; ++j) {
          t5 = rowHeights[i];
          t6 = t4 + j;
          if (!(t6 >= 0 && t6 < _length))
            return C.ioore(childHeights, t6);
          D.JSArray_methods.$indexSet(rowHeights, i, Math.max(t5, childHeights[t6]));
          D.JSArray_methods.$indexSet(rowDepth, i, Math.max(rowDepth[i], childDepth[t6]));
        }
      rowBaselinePos = C.List_List$filled(t2, 0, false, t3);
      hLinePos = C.List_List$filled(t2 + 1, 0, false, t3);
      for (t4 = t2 - 1, t5 = _this.hLines, t6 = J.getInterceptor$asx(t5), t7 = _this.ruleThickness, t8 = _this.rowSpacings, pos = 0, i = 0; i < t2; ++i) {
        D.JSArray_methods.$indexSet(hLinePos, i, pos);
        t9 = t6.$index(t5, i) !== A.MatrixSeparatorStyle_2 ? t7 : 0;
        pos = pos + t9 + rowHeights[i];
        D.JSArray_methods.$indexSet(rowBaselinePos, i, pos);
        t9 = rowDepth[i];
        if (i < t4) {
          if (!(i < t8.length))
            return C.ioore(t8, i);
          t10 = t8[i];
        } else
          t10 = 0;
        pos = pos + t9 + t10;
      }
      D.JSArray_methods.$indexSet(hLinePos, t2, pos);
      _this.totalHeight = pos + (t6.$index(t5, t2) !== A.MatrixSeparatorStyle_2 ? t7 : 0);
      childPos = C.List_List$generate(t2 * t1, new B.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0(_this, rowBaselinePos, childHeights), false, t3);
      if (!isComputingIntrinsics)
        _this.set$hLinePos(hLinePos);
      return new B.AxisConfiguration(_this.totalHeight, new C.ListMapView(childPos, C._arrayInstanceType(childPos)._eval$1("ListMapView<1>")), type$.AxisConfiguration_int);
    },
    performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenBaselines, childrenHeights) {
      return this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, false);
    },
    additionalPaint$2(context, offset) {
      var t2, t3, t4, t5, i, t6, t7, dx, dy, _this = this,
        paint = $.$get$_renderer().createPaint$0(),
        t1 = _this.ruleThickness;
      paint.set$strokeWidth(t1);
      for (t2 = _this.hLines, t3 = J.getInterceptor$asx(t2), t4 = offset._dx, t5 = offset._dy, t1 /= 2, i = 0; i < t3.get$length(t2); ++i)
        switch (t3.$index(t2, i).index) {
          case 0:
            if (context._object$_canvas == null)
              context._startRecording$0();
            t6 = context._object$_canvas;
            t6.toString;
            t7 = _this.hLinePos;
            if (!(i < t7.length))
              return C.ioore(t7, i);
            t7 = t5 + t7[i] + t1;
            t6.drawLine$3(new C.Offset(t4, t7), new C.Offset(t4 + _this.width, t7), paint);
            break;
          case 1:
            for (dx = 0; dx < _this.width; dx += 4) {
              if (context._object$_canvas == null)
                context._startRecording$0();
              t6 = context._object$_canvas;
              t6.toString;
              t7 = _this.hLinePos;
              if (!(i < t7.length))
                return C.ioore(t7, i);
              t7 = t5 + t7[i] + t1;
              t6.drawLine$3(new C.Offset(t4 + dx, t7), new C.Offset(t4 + Math.min(dx + 2, _this.width), t7), paint);
            }
            break;
        }
      for (t2 = _this.vLines, t3 = J.getInterceptor$asx(t2), i = 0; i < t3.get$length(t2); ++i)
        switch (t3.$index(t2, i).index) {
          case 0:
            if (context._object$_canvas == null)
              context._startRecording$0();
            t6 = context._object$_canvas;
            t6.toString;
            t7 = _this.vLinePos;
            if (!(i < t7.length))
              return C.ioore(t7, i);
            t7 = t4 + t7[i] + t1;
            t6.drawLine$3(new C.Offset(t7, t5), new C.Offset(t7, t5 + _this.totalHeight), paint);
            break;
          case 1:
            for (dy = 0; dy < _this.totalHeight; dy += 4) {
              if (context._object$_canvas == null)
                context._startRecording$0();
              t6 = context._object$_canvas;
              t6.toString;
              t7 = _this.vLinePos;
              if (!(i < t7.length))
                return C.ioore(t7, i);
              t7 = t4 + t7[i] + t1;
              t6.drawLine$3(new C.Offset(t7, t5 + dy), new C.Offset(t7, t5 + Math.min(dy + 2, _this.totalHeight)), paint);
            }
            break;
        }
    },
    set$hLinePos(hLinePos) {
      this.hLinePos = type$.List_double._as(hLinePos);
    },
    set$vLinePos(vLinePos) {
      this.vLinePos = type$.List_double._as(vLinePos);
    }
  };
  B.MultiscriptsNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1, t2, t3, t4, t5, t6;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = this.base;
      if (t1.get$flattenedChildList().length === 1) {
        t1 = t1.get$flattenedChildList();
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0] instanceof B.SymbolNode;
      } else
        t1 = false;
      t2 = childBuildResults.length;
      if (0 >= t2)
        return C.ioore(childBuildResults, 0);
      t3 = childBuildResults[0];
      t3.toString;
      if (1 >= t2)
        return C.ioore(childBuildResults, 1);
      t4 = childBuildResults[1];
      if (2 >= t2)
        return C.ioore(childBuildResults, 2);
      t5 = childBuildResults[2];
      if (3 >= t2)
        return C.ioore(childBuildResults, 3);
      t6 = childBuildResults[3];
      if (4 >= t2)
        return C.ioore(childBuildResults, 4);
      return new B.BuildResult(B.Multiscripts$(false, t3, t1, t6, childBuildResults[4], t4, t5), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style,
        subOptions = options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_0)),
        supOptions = options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_1));
      return C._setArrayType([options, subOptions, supOptions, subOptions, supOptions], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base, this.sub, this.sup, null, null], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      var t1 = this.base.overrideType;
      if (t1 == null)
        t1 = A.AtomType_0;
      return t1;
    },
    get$rightType() {
      if (this.sub == null && this.sup == null) {
        var t1 = this.base.overrideType;
        if (t1 == null)
          t1 = A.AtomType_0;
      } else
        t1 = A.AtomType_0;
      return t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "base", _this.base.toJson$0());
      t3 = _this.sub;
      if (t3 != null)
        t2.$indexSet(0, "sub", t3.toJson$0());
      t3 = _this.sup;
      if (t3 != null)
        t2.$indexSet(0, "sup", t3.toJson$0());
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.NaryOperatorNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var large, font, t1, lookupResult, operatorWidget, symbolMetrics, symbolWidget, t2, t3, baseSymbolWidget, t4, oval, shouldLimits, italic, spacing, t5, t6, t7, widget, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      large = _this.allowLargeOp && (options.style.index / 2 | 0) === 0;
      font = large ? new B.FontOptions("Size2", F.FontWeight_3, D.FontStyle_0, A.List_empty22) : new B.FontOptions("Size1", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
      t1 = _this.operator;
      if (!A.Map_nMHK2.containsKey$1(0, t1)) {
        lookupResult = B.getCharacterMetrics(t1, font.get$fontName(), A.Mode_0);
        if (lookupResult == null) {
          operatorWidget = E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
          symbolMetrics = A.CharacterMetrics_0_0_0_0;
        } else {
          symbolWidget = B.makeChar(t1, font, lookupResult, options, true);
          symbolMetrics = lookupResult;
          operatorWidget = symbolWidget;
        }
      } else {
        t2 = A.Map_nMHK2.$index(0, t1);
        t2.toString;
        t3 = B.getCharacterMetrics(t2, font.get$fontName(), A.Mode_0);
        t3.toString;
        baseSymbolWidget = B.makeChar(t2, font, t3, options, true);
        t2 = t1 === "\u222f" ? "oiint" : "oiiint";
        t4 = large ? "2" : "1";
        oval = B.staticSvg(t2 + "Size" + t4, options, false);
        operatorWidget = O.Row$(C._setArrayType([B.ResetDimension$(B.ShiftBaseline$(oval, large ? new B.Measurement(0.08, A.Unit_16).toLpUnder$1(options) : 0, _null), _null, _null, G.CrossAxisAlignment_0, 0), baseSymbolWidget], type$.JSArray_Widget), G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, D.TextBaseline_0, _null, G.VerticalDirection_1);
        symbolMetrics = t3;
      }
      t2 = _this.lowerLimit == null;
      if (!t2 || _this.upperLimit != null) {
        shouldLimits = _this.limits;
        if (shouldLimits == null)
          shouldLimits = A.Set_1ZnLs.contains$1(0, t1) && (options.style.index / 2 | 0) === 0;
        italic = new B.Measurement(symbolMetrics.italic, A.Unit_16).toLpUnder$1(options);
        if (!shouldLimits) {
          t1 = childBuildResults.length;
          if (0 >= t1)
            return C.ioore(childBuildResults, 0);
          t2 = childBuildResults[0];
          if (1 >= t1)
            return C.ioore(childBuildResults, 1);
          operatorWidget = B.Multiscripts$(false, new B.BuildResult(operatorWidget, options, italic, 0, _null), false, _null, _null, t2, childBuildResults[1]);
        } else {
          spacing = new B.Measurement(options.get$fontMetrics().bigOpSpacing5, A.Unit_16).toLpUnder$1(options);
          t1 = _this.upperLimit != null;
          t3 = t1 ? spacing : 0;
          t2 = !t2;
          t4 = t2 ? spacing : 0;
          t5 = t1 ? 1 : 0;
          t6 = C._setArrayType([], type$.JSArray_Widget);
          if (t1) {
            t1 = new B.Measurement(options.get$fontMetrics().bigOpSpacing3, A.Unit_16).toLpUnder$1(options);
            t7 = new B.Measurement(options.get$fontMetrics().bigOpSpacing1, A.Unit_16).toLpUnder$1(options);
            if (1 >= childBuildResults.length)
              return C.ioore(childBuildResults, 1);
            t6.push(B.VListElement$(B.MinDimension$(t7, childBuildResults[1].widget, t1, 0, 0), _null, 0.5 * italic, 0));
          }
          t6.push(operatorWidget);
          if (t2) {
            t1 = new B.Measurement(options.get$fontMetrics().bigOpSpacing4, A.Unit_16).toLpUnder$1(options);
            t2 = new B.Measurement(options.get$fontMetrics().bigOpSpacing2, A.Unit_16).toLpUnder$1(options);
            if (0 >= childBuildResults.length)
              return C.ioore(childBuildResults, 0);
            t6.push(B.VListElement$(B.MinDimension$(0, childBuildResults[0].widget, 0, t1, t2), _null, -0.5 * italic, 0));
          }
          operatorWidget = new E.Padding(new C.EdgeInsets(0, t3, 0, t4), B.VList$(t5, t6), _null);
        }
      }
      t1 = _this.naryand.overrideType;
      if (t1 == null)
        t1 = A.AtomType_0;
      t1 = B.LineElement$(false, false, operatorWidget, _null, B.getSpacingSize(A.AtomType_1, t1, options.style).toLpUnder$1(options));
      if (2 >= childBuildResults.length)
        return C.ioore(childBuildResults, 2);
      widget = B.Line$(C._setArrayType([t1, B.LineElement$(false, false, childBuildResults[2].widget, _null, 0)], type$.JSArray_Widget), _null);
      if (2 >= childBuildResults.length)
        return C.ioore(childBuildResults, 2);
      return new B.BuildResult(widget, options, childBuildResults[2].italic, 0, _null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style;
      return C._setArrayType([options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_0)), options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_1)), options], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.lowerLimit, this.upperLimit, this.naryand], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_1;
    },
    get$rightType() {
      var t1 = this.naryand.overrideType;
      return t1 == null ? A.AtomType_0 : t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "operator", B.unicodeLiteral(_this.operator));
      t3 = _this.upperLimit;
      if (t3 != null)
        t2.$indexSet(0, "upperLimit", t3.toJson$0());
      t3 = _this.lowerLimit;
      if (t3 != null)
        t2.$indexSet(0, "lowerLimit", t3.toJson$0());
      t2.$indexSet(0, "naryand", _this.naryand.toJson$0());
      t3 = _this.limits;
      if (t3 != null)
        t2.$indexSet(0, "limits", t3);
      if (!_this.allowLargeOp)
        t2.$indexSet(0, "allowLargeOp", false);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.OverNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var spacing, t1, t2;
      type$.List_nullable_BuildResult._as(childBuildResults);
      spacing = new B.Measurement(options.get$fontMetrics().bigOpSpacing5, A.Unit_16).toLpUnder$1(options);
      t1 = new B.Measurement(options.get$fontMetrics().bigOpSpacing3, A.Unit_16).toLpUnder$1(options);
      t2 = new B.Measurement(options.get$fontMetrics().bigOpSpacing1, A.Unit_16).toLpUnder$1(options);
      if (1 >= childBuildResults.length)
        return C.ioore(childBuildResults, 1);
      return new B.BuildResult(new E.Padding(new C.EdgeInsets(0, spacing, 0, 0), B.VList$(1, C._setArrayType([B.MinDimension$(t2, childBuildResults[1].widget, t1, 0, 0), childBuildResults[0].widget], type$.JSArray_Widget)), null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options, options.havingStyle$1(B.MathStyleExt_reduce(options.style, A.MathStyleDiff_1))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base, this.above], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return this.stackRel ? A.AtomType_3 : A.AtomType_0;
    },
    get$rightType() {
      return this.stackRel ? A.AtomType_3 : A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "base", _this.base.toJson$0());
      t2.$indexSet(0, "above", _this.above.toJson$0());
      if (_this.stackRel)
        t2.$indexSet(0, "stackRel", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.PhantomNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var phantomResult, widget, t1, t2, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      phantomResult = B.SyntaxNode$(_null, 0, _this.phantomChild).buildWidget$1(options);
      widget = Aa.Opacity$(phantomResult.widget, 0);
      t1 = _this.zeroWidth ? 0 : _null;
      t2 = _this.zeroHeight ? 0 : _null;
      return new B.BuildResult(B.ResetDimension$(widget, _this.zeroDepth ? 0 : _null, t2, G.CrossAxisAlignment_2, t1), options, phantomResult.italic, 0, _null);
    },
    get$leftType() {
      var t1 = this.phantomChild.overrideType;
      return t1 == null ? A.AtomType_0 : t1;
    },
    get$rightType() {
      var t1 = this.phantomChild.overrideType;
      return t1 == null ? A.AtomType_0 : t1;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "phantomChild", _this.phantomChild.toJson$0());
      if (_this.zeroWidth)
        t2.$indexSet(0, "zeroWidth", true);
      if (_this.zeroHeight)
        t2.$indexSet(0, "zeroHeight", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.RaiseBoxNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var t1;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = this.dy.toLpUnder$1(options);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      return new B.BuildResult(B.ShiftBaseline$(childBuildResults[0].widget, t1, null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.body], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = this.body.toJson$0(),
        t3 = this.dy,
        t4 = A.Map_Dgfp9.$index(0, t3.unit);
      t4.toString;
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["body", t2, "dy", C.S(t3.value) + t4], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  B.SpaceNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var height, depth, width, shift, t1, topMost, t2, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (_this.alignerOrSpacer)
        return new B.BuildResult(E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, 0, _null, _null, _null, _null, _null, _null), options, 0, 0, _null);
      height = _this.height.toLpUnder$1(options);
      depth = A.Measurement_0_Unit_0.toLpUnder$1(options);
      width = _this.width.toLpUnder$1(options);
      shift = _this.shift.toLpUnder$1(options);
      t1 = -depth;
      topMost = Math.max(height, t1) + shift;
      t1 = Math.min(height, t1);
      t2 = _this.fill ? options.color : _null;
      return new B.BuildResult(new B.ResetBaseline(topMost, E.Container$(_null, _null, D.Clip_0, t2, _null, _null, _null, topMost - (t1 + shift), _null, _null, _null, _null, _null, Math.max(0, width)), _null), options, 0, 0, _null);
    },
    get$leftType() {
      return A.AtomType_8;
    },
    get$rightType() {
      return A.AtomType_8;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    toJson$0() {
      var t3, t4, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "mode", _this.mode._enumToString$0());
      t3 = _this.height;
      t4 = A.Map_Dgfp9.$index(0, t3.unit);
      t4.toString;
      t2.$indexSet(0, "height", C.S(t3.value) + t4);
      t4 = _this.width;
      t3 = A.Map_Dgfp9.$index(0, t4.unit);
      t3.toString;
      t2.$indexSet(0, "width", C.S(t4.value) + t3);
      t3 = _this.shift;
      if (t3 !== A.Measurement_0_Unit_0) {
        t4 = A.Map_Dgfp9.$index(0, t3.unit);
        t4.toString;
        t2.$indexSet(0, "shift", C.S(t3.value) + t4);
      }
      t3 = _this.breakPenalty;
      if (t3 != null)
        t2.$indexSet(0, "breakPenalty", t3);
      if (_this.fill)
        t2.$indexSet(0, "fill", true);
      if (_this.alignerOrSpacer)
        t2.$indexSet(0, "alignerOrSpacer", true);
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.SqrtNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var baseResult, indexResult, t1, t2, t3, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      if (1 >= childBuildResults.length)
        return C.ioore(childBuildResults, 1);
      baseResult = childBuildResults[1];
      indexResult = childBuildResults[0];
      t1 = baseResult.options;
      t2 = new B.Measurement(options.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(options);
      t3 = type$._SqrtPos;
      t2 = C._setArrayType([B.CustomLayoutId$(B.MinDimension$(0, baseResult.widget, 0, t2, 0), A._SqrtPos_0, t3), B.CustomLayoutId$(Ab.IgnorePointer$(new B.LayoutBuilderPreserveBaseline(new B.SqrtNode_buildWidget_closure(options), _null), true, _null), A._SqrtPos_2, t3)], type$.JSArray_Widget);
      if (this.index != null)
        t2.push(B.CustomLayoutId$(indexResult.widget, A._SqrtPos_1, t3));
      return new B.BuildResult(new B.CustomLayout(new B.SqrtLayoutDelegate(options, t1), t2, _null, type$.CustomLayout__SqrtPos), options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options.havingStyle$1(A.MathStyle_6), options.havingStyle$1(B.MathStyleExt_reduce(options.style, A.MathStyleDiff_4))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.index, this.base], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = this.index;
      t2 = t2 == null ? null : t2.toJson$0();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["index", t2, "base", this.base.toJson$0()], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  B._SqrtPos.prototype = {
    _enumToString$0() {
      return "_SqrtPos." + this._name;
    }
  };
  B.SqrtLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map__SqrtPos_RenderBox._as(childrenTable);
      return this.heightAboveBaseline;
    },
    getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(childSize, childrenTable, extent, max, sizingDirection) {
      type$.double_Function_RenderBox_double._as(childSize);
      type$.Map__SqrtPos_RenderBox._as(childrenTable);
      return 0;
    },
    computeLayout$3$dry(constraints, childrenTable, dry) {
      var t1, index, t2, baseSize, t3, indexSize, baseHeight, t4, baseWidth, indexHeight, indexWidth, theta, psi, t5, minSqrtHeight, surdSize, t6, advanceWidth, indexRightPadding, sqrtHorizontalPos, ruleWidth, t7, t8, delimDepth, bodyHeight, indexShift, sqrtVerticalPos;
      type$.Map__SqrtPos_RenderBox._as(childrenTable);
      t1 = childrenTable.$index(0, A._SqrtPos_0);
      t1.toString;
      index = childrenTable.$index(0, A._SqrtPos_1);
      t2 = childrenTable.$index(0, A._SqrtPos_2);
      t2.toString;
      baseSize = B.RenderBoxLayout_getLayoutSize(t1, N.BoxConstraints_0Yu, dry);
      t3 = index == null;
      indexSize = t3 ? null : B.RenderBoxLayout_getLayoutSize(index, N.BoxConstraints_0Yu, dry);
      if (indexSize == null)
        indexSize = D.Size_0_0;
      if (dry)
        baseHeight = 0;
      else {
        t4 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
        t4.toString;
        baseHeight = t4;
      }
      baseWidth = baseSize._dx;
      if (dry)
        indexHeight = 0;
      else {
        if (t3)
          t4 = null;
        else {
          t4 = index.getDistanceToBaseline$1(D.TextBaseline_0);
          t4.toString;
        }
        indexHeight = t4 == null ? 0 : t4;
      }
      indexWidth = indexSize._dx;
      t4 = this.baseOptions;
      theta = new B.Measurement(t4.get$fontMetrics().defaultRuleThickness, A.Unit_16).toLpUnder$1(t4);
      psi = theta + 0.25 * Math.abs(t4.style.index < 2 ? new B.Measurement(t4.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(t4) : theta);
      t4 = baseSize._dy;
      t5 = t4 + psi;
      minSqrtHeight = t5 + theta;
      surdSize = B.RenderBoxLayout_getLayoutSize(t2, new C.BoxConstraints(baseWidth, 1 / 0, minSqrtHeight, 1 / 0), dry);
      t6 = this.options;
      advanceWidth = B.getSqrtAdvanceWidth(minSqrtHeight, baseWidth, t6);
      indexRightPadding = -new B.Measurement(10, A.Unit_14).toLpUnder$1(t6);
      sqrtHorizontalPos = Math.max(0, new B.Measurement(0.5, A.Unit_0).toLpUnder$1(t6) + indexWidth + indexRightPadding);
      if (dry)
        ruleWidth = 0;
      else {
        t6 = t2.getDistanceToBaseline$1(D.TextBaseline_0);
        t6.toString;
        ruleWidth = t6;
      }
      t6 = !dry;
      if (t6) {
        t7 = t2.get$size(0);
        t8 = t2.getDistanceToBaseline$1(D.TextBaseline_0);
        t8.toString;
        delimDepth = t7._dy - t8;
        if (delimDepth > t5)
          psi += 0.5 * (delimDepth - t4 - psi);
      }
      bodyHeight = baseHeight + psi + ruleWidth;
      t4 = surdSize._dy;
      indexShift = 0.6 * (bodyHeight - (t4 - bodyHeight));
      sqrtVerticalPos = Math.max(0, indexHeight + indexShift - baseHeight - psi - ruleWidth);
      if (t6) {
        t5 = this.heightAboveBaseline = bodyHeight + sqrtVerticalPos;
        t6 = type$.BoxParentData;
        t6._as(t1.parentData).offset = new C.Offset(sqrtHorizontalPos + advanceWidth, t5 - baseHeight);
        if (!t3)
          t6._as(index.parentData).offset = new C.Offset(sqrtHorizontalPos - indexRightPadding - indexWidth, t5 - indexShift - indexHeight);
        t6._as(t2.parentData).offset = new C.Offset(sqrtHorizontalPos, sqrtVerticalPos);
      }
      return new C.Size(sqrtHorizontalPos + surdSize._dx, sqrtVerticalPos + t4);
    }
  };
  B.StretchyOpNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var verticalPadding, t1, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      verticalPadding = new B.Measurement(2, A.Unit_14).toLpUnder$1(options);
      t1 = C._setArrayType([], type$.JSArray_Widget);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t1.push(new E.Padding(new C.EdgeInsets(0, 0, 0, verticalPadding), childBuildResults[0].widget, _null));
      t1.push(B.VListElement$(new B.LayoutBuilderPreserveBaseline(new B.StretchyOpNode_buildWidget_closure(this, options), _null), new B.StretchyOpNode_buildWidget_closure0(options), 0, 0));
      if (this.below != null) {
        if (1 >= childBuildResults.length)
          return C.ioore(childBuildResults, 1);
        t1.push(new E.Padding(new C.EdgeInsets(0, verticalPadding, 0, 0), childBuildResults[1].widget, _null));
      }
      return new B.BuildResult(B.VList$(1, t1), options, 0, 0, _null);
    },
    computeChildOptions$1(options) {
      var t1 = options.style;
      return C._setArrayType([options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_1)), options.havingStyle$1(B.MathStyleExt_reduce(t1, A.MathStyleDiff_0))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.above, this.below], type$.JSArray_nullable_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_3;
    },
    get$rightType() {
      return A.AtomType_3;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "symbol", B.unicodeLiteral(_this.symbol));
      t2.$indexSet(0, "above", _this.above.toJson$0());
      t3 = _this.below;
      if (t3 != null)
        t2.$indexSet(0, "below", t3.toJson$0());
      t1.addAll$1(0, t2);
      return t1;
    }
  };
  B.StyleNode.prototype = {
    computeChildOptions$1(options) {
      var t4,
        t1 = J.get$length$asx(this.children),
        t2 = this.optionsDiff,
        t3 = t2.size,
        res = t3 != null ? options.havingSize$1(t3) : options;
      t3 = t2.style;
      if (t3 != null)
        res = res.havingStyle$1(t3);
      t3 = t2.color;
      if (t3 != null)
        res = res.withColor$1(t3);
      t3 = t2.textFontOptions;
      if (t3 != null) {
        t4 = res.textFontOptions;
        res = res.copyWith$2$mathFontOptions$textFontOptions(null, (t4 == null ? new B.FontOptions("Main", F.FontWeight_3, D.FontStyle_0, A.List_empty22) : t4).mergeWith$1(t3));
      }
      t2 = t2.mathFontOptions;
      if (t2 != null)
        res = res.withMathFont$1(t2);
      return C.List_List$filled(t1, res, false, type$.MathOptions);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = J.map$1$1$ax(this.children, new B.StyleNode_toJson_closure(), type$.Map_of_String_and_nullable_Object);
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["children", C.List_List$of(t2, false, t2.$ti._eval$1("ListIterable.E")), "optionsDiff", "Instance of '" + C.Primitives_objectTypeName(this.optionsDiff) + "'"], type$.String, type$.nullable_Object));
      return t1;
    },
    get$children(receiver) {
      return this.children;
    }
  };
  B.SymbolNode.prototype = {
    get$atomType() {
      var result, _this = this,
        value = _this.__SymbolNode_atomType_FI;
      if (value === $) {
        result = _this.overrideAtomType;
        if (result == null)
          result = B.getDefaultAtomTypeForSymbol(_this.symbol, _this.mode, _this.variantForm);
        _this.__SymbolNode_atomType_FI !== $ && C.throwLateFieldADI("atomType");
        value = _this.__SymbolNode_atomType_FI = result;
      }
      return value;
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2, expanded, code, res, t3, accent, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = type$.Runes;
      t2 = t1._eval$1("ExpandIterable<Iterable.E,String>");
      expanded = C.List_List$of(new C.ExpandIterable(new C.Runes(_this.symbol), t1._eval$1("Iterable<String>(Iterable.E)")._as(new B.SymbolNode_buildWidget_closure()), t2), false, t2._eval$1("Iterable.E"));
      t1 = expanded.length;
      if (t1 === 1) {
        if (0 >= t1)
          return C.ioore(expanded, 0);
        t1 = expanded[0];
        return B.makeBaseSymbol(_this.get$atomType(), _this.mode, options, _this.overrideFont, t1, _this.variantForm);
      } else if (t1 > 1) {
        t1 = expanded[1];
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        code = t1.charCodeAt(0);
        if (code >= 768 && code <= 879) {
          t1 = expanded[0];
          if (t1 === "i")
            D.JSArray_methods.$indexSet(expanded, 0, "\u0131");
          else if (t1 === "j")
            D.JSArray_methods.$indexSet(expanded, 0, "\u0237");
        }
        if (0 >= expanded.length)
          return C.ioore(expanded, 0);
        res = _this.withSymbol$1(expanded[0]);
        for (t1 = C.SubListIterable$(expanded, 1, _null, C._arrayInstanceType(expanded)._precomputed1), t2 = t1.$ti, t1 = new C.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          accent = A.Map_1zxva.$index(0, t3 == null ? t2._as(t3) : t3);
          if (accent == null)
            break;
          else
            res = new B.AccentNode(B.GreenNodeWrappingExt_wrapWithEquationRow(res), accent, false, true);
        }
        return B.SyntaxNode$(_null, 0, res).buildWidget$1(options);
      } else
        return new B.BuildResult(E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, 0, _null, _null, _null, _null, _null, 0), options, 0, 0, _null);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return !oldOptions.color.$eq(0, newOptions.color) || !J.$eq$(oldOptions.mathFontOptions, newOptions.mathFontOptions) || !J.$eq$(oldOptions.textFontOptions, newOptions.textFontOptions) || oldOptions.get$sizeMultiplier() !== newOptions.get$sizeMultiplier();
    },
    get$leftType() {
      return this.get$atomType();
    },
    get$rightType() {
      return this.get$atomType();
    },
    toJson$0() {
      var t3, _this = this,
        t1 = _this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object);
      t2.$indexSet(0, "mode", _this.mode._enumToString$0());
      t2.$indexSet(0, "symbol", B.unicodeLiteral(_this.symbol));
      if (_this.variantForm)
        t2.$indexSet(0, "variantForm", true);
      t3 = _this.overrideAtomType;
      if (t3 != null)
        t2.$indexSet(0, "atomType", t3.toString$0(0));
      t1.addAll$1(0, t2);
      return t1;
    },
    withSymbol$1(symbol) {
      var _this = this;
      if (symbol === _this.symbol)
        return _this;
      return new B.SymbolNode(symbol, _this.variantForm, _this.overrideAtomType, _this.overrideFont, _this.mode);
    }
  };
  B.UnderNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      var spacing, t1, t2, t3;
      type$.List_nullable_BuildResult._as(childBuildResults);
      spacing = new B.Measurement(options.get$fontMetrics().bigOpSpacing5, A.Unit_16).toLpUnder$1(options);
      if (0 >= childBuildResults.length)
        return C.ioore(childBuildResults, 0);
      t1 = childBuildResults[0].widget;
      t2 = new B.Measurement(options.get$fontMetrics().bigOpSpacing4, A.Unit_16).toLpUnder$1(options);
      t3 = new B.Measurement(options.get$fontMetrics().bigOpSpacing2, A.Unit_16).toLpUnder$1(options);
      if (1 >= childBuildResults.length)
        return C.ioore(childBuildResults, 1);
      return new B.BuildResult(new E.Padding(new C.EdgeInsets(0, 0, 0, spacing), B.VList$(0, C._setArrayType([t1, B.MinDimension$(0, childBuildResults[1].widget, 0, t2, t3)], type$.JSArray_Widget)), null), options, 0, 0, null);
    },
    computeChildOptions$1(options) {
      return C._setArrayType([options, options.havingStyle$1(B.MathStyleExt_reduce(options.style, A.MathStyleDiff_0))], type$.JSArray_MathOptions);
    },
    computeChildren$0() {
      return C._setArrayType([this.base, this.below], type$.JSArray_EquationRowNode);
    },
    get$leftType() {
      return A.AtomType_0;
    },
    get$rightType() {
      return A.AtomType_0;
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson();
      t1.addAll$1(0, C.LinkedHashMap_LinkedHashMap$_literal(["base", this.base.toJson$0(), "below", this.below.toJson$0()], type$.String, type$.nullable_Object));
      return t1;
    }
  };
  B.MathOptions.prototype = {
    get$size(_) {
      var result, _this = this,
        value = _this.__MathOptions_size_FI;
      if (value === $) {
        result = B.MathStyleExtOnSize_underStyle(_this.sizeUnderTextStyle, _this.style);
        _this.__MathOptions_size_FI !== $ && C.throwLateFieldADI("size");
        _this.__MathOptions_size_FI = result;
        value = result;
      }
      return value;
    },
    get$sizeMultiplier() {
      var t1, result, _this = this,
        value = _this.__MathOptions_sizeMultiplier_FI;
      if (value === $) {
        t1 = _this.get$size(0).index;
        if (!(t1 < 11))
          return C.ioore(A.List_HoQ, t1);
        result = A.List_HoQ[t1];
        _this.__MathOptions_sizeMultiplier_FI !== $ && C.throwLateFieldADI("sizeMultiplier");
        _this.__MathOptions_sizeMultiplier_FI = result;
        value = result;
      }
      return value;
    },
    get$fontMetrics() {
      var result, _this = this,
        value = _this.__MathOptions_fontMetrics_FI;
      if (value === $) {
        result = B.getGlobalMetrics(_this.get$size(0));
        _this.__MathOptions_fontMetrics_FI !== $ && C.throwLateFieldADI("fontMetrics");
        _this.__MathOptions_fontMetrics_FI = result;
        value = result;
      }
      return value;
    },
    havingStyle$1(style) {
      if (this.style === style)
        return this;
      return this.copyWith$1$style(style);
    },
    havingCrampedStyle$0() {
      var t1 = this.style;
      if ((t1.index & 1) === 0)
        return this;
      return this.copyWith$1$style(B.MathStyleExt_reduce(t1, A.MathStyleDiff_4));
    },
    havingSize$1(size) {
      var _this = this;
      if (_this.get$size(0) === size && _this.sizeUnderTextStyle === size)
        return _this;
      return _this.copyWith$2$sizeUnderTextStyle$style(size, B.MathStyleExt_reduce(_this.style, A.MathStyleDiff_5));
    },
    withColor$1(color) {
      if (this.color.$eq(0, color))
        return this;
      return this.copyWith$1$color(color);
    },
    withMathFont$1(font) {
      if (font.$eq(0, this.mathFontOptions))
        return this;
      return this.copyWith$1$mathFontOptions(font);
    },
    copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(color, mathFontOptions, sizeUnderTextStyle, style, textFontOptions) {
      var _this = this,
        t1 = style == null ? _this.style : style,
        t2 = color == null ? _this.color : color,
        t3 = sizeUnderTextStyle == null ? _this.sizeUnderTextStyle : sizeUnderTextStyle,
        t4 = textFontOptions == null ? _this.textFontOptions : textFontOptions,
        t5 = mathFontOptions == null ? _this.mathFontOptions : mathFontOptions;
      return B.MathOptions$_(t2, _this.fontSize, _this.logicalPpi, t5, t3, t1, t4);
    },
    copyWith$1$color(color) {
      var _null = null;
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(color, _null, _null, _null, _null);
    },
    copyWith$1$style(style) {
      var _null = null;
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(_null, _null, _null, style, _null);
    },
    copyWith$2$mathFontOptions$textFontOptions(mathFontOptions, textFontOptions) {
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(null, mathFontOptions, null, null, textFontOptions);
    },
    copyWith$1$mathFontOptions(mathFontOptions) {
      var _null = null;
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(_null, mathFontOptions, _null, _null, _null);
    },
    copyWith$2$sizeUnderTextStyle$style(sizeUnderTextStyle, style) {
      return this.copyWith$5$color$mathFontOptions$sizeUnderTextStyle$style$textFontOptions(null, null, sizeUnderTextStyle, style, null);
    }
  };
  B.OptionsDiff.prototype = {
    get$isEmpty(_) {
      var _this = this;
      return _this.style == null && _this.color == null && _this.size == null && _this.textFontOptions == null && _this.mathFontOptions == null;
    }
  };
  B.FontOptions.prototype = {
    get$fontName() {
      var t1 = this.fontWeight === F.FontWeight_6 ? "Bold" : "",
        postfix = t1 + (this.fontShape === A.FontStyle_1 ? "Italic" : "");
      t1 = postfix.length === 0 ? "Regular" : postfix;
      return this.fontFamily + "-" + t1;
    },
    mergeWith$1(value) {
      var _this = this,
        t1 = value.fontFamily,
        t2 = value.fontWeight,
        t3 = value.fontShape;
      if (t1 == null)
        t1 = _this.fontFamily;
      if (t2 == null)
        t2 = _this.fontWeight;
      if (t3 == null)
        t3 = _this.fontShape;
      return new B.FontOptions(t1, t2, t3, _this.fallback);
    },
    $eq(_, o) {
      var _this = this;
      if (o == null)
        return false;
      if (_this === o)
        return true;
      return o instanceof B.FontOptions && o.fontFamily === _this.fontFamily && o.fontWeight === _this.fontWeight && o.fontShape === _this.fontShape && C.listEquals0(o.fallback, _this.fallback, type$.FontOptions);
    },
    get$hashCode(_) {
      return C.Object_hash(D.JSString_methods.get$hashCode(this.fontFamily), C.Primitives_objectHashCode(this.fontWeight), C.Primitives_objectHashCode(this.fontShape), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  B.PartialFontOptions.prototype = {
    $eq(_, o) {
      var _this = this;
      if (o == null)
        return false;
      if (_this === o)
        return true;
      return o instanceof B.PartialFontOptions && o.fontFamily == _this.fontFamily && o.fontWeight == _this.fontWeight && o.fontShape == _this.fontShape;
    },
    get$hashCode(_) {
      return C.Object_hash(J.get$hashCode$(this.fontFamily), J.get$hashCode$(this.fontWeight), J.get$hashCode$(this.fontShape), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  B.Unit.prototype = {
    _enumToString$0() {
      return "Unit." + this._name;
    }
  };
  B.Measurement.prototype = {
    toLpUnder$1(options) {
      var _this = this,
        t1 = _this.unit;
      if (t1 === A.Unit_15)
        return _this.value;
      if (A.Map_Dg3fw.$index(0, t1) != null) {
        t1 = A.Map_Dg3fw.$index(0, t1);
        t1.toString;
        return _this.value * t1 / 72.27 * options.logicalPpi;
      }
      switch (t1.index) {
        case 16:
          return _this.value * options.fontSize * options.get$sizeMultiplier();
        case 14:
          return _this.value * options.fontSize * (options.get$fontMetrics().quad / 18) * options.get$sizeMultiplier();
        case 12:
          return _this.value * options.fontSize * options.get$fontMetrics().xHeight * options.havingStyle$1(B.MathStyleExt_reduce(options.style, A.MathStyleDiff_5)).get$sizeMultiplier();
        case 13:
          return _this.value * options.fontSize * options.get$fontMetrics().quad * options.havingStyle$1(B.MathStyleExt_reduce(options.style, A.MathStyleDiff_5)).get$sizeMultiplier();
        default:
          throw C.wrapException(C.ArgumentError$("Invalid unit: '" + t1._enumToString$0() + "'", null));
      }
    },
    toString$0(_) {
      var t1 = A.Map_Dgfp9.$index(0, this.unit);
      t1.toString;
      return C.S(this.value) + t1;
    }
  };
  B.MathSize.prototype = {
    _enumToString$0() {
      return "MathSize." + this._name;
    }
  };
  B.MathStyle.prototype = {
    _enumToString$0() {
      return "MathStyle." + this._name;
    }
  };
  B.MathStyleDiff.prototype = {
    _enumToString$0() {
      return "MathStyleDiff." + this._name;
    }
  };
  B.SymbolRenderConfig.prototype = {};
  B.RenderConfig.prototype = {};
  B.SyntaxTree.prototype = {};
  B.SyntaxNode.prototype = {
    get$children(_) {
      var t1, _length, _list, t2, index, t3, t4, _this = this,
        value = _this.__SyntaxNode_children_FI;
      if (value === $) {
        t1 = _this.value;
        _length = J.get$length$asx(t1.get$children(t1));
        _list = J.JSArray_JSArray$allocateFixed(_length, type$.nullable_SyntaxNode);
        for (t2 = _this.pos, index = 0; index < _length; ++index) {
          if (J.$index$asx(t1.get$children(t1), index) != null) {
            t3 = J.$index$asx(t1.get$children(t1), index);
            t3.toString;
            t4 = t1.get$childPositions();
            if (!(index < t4.length))
              return C.ioore(t4, index);
            t4 = new B.SyntaxNode(t3, t2 + t4[index]);
            t3 = t4;
          } else
            t3 = null;
          _list[index] = t3;
        }
        _this.__SyntaxNode_children_FI !== $ && C.throwLateFieldADI("children");
        _this.set$__SyntaxNode_children_FI(_list);
        value = _list;
      }
      return value;
    },
    buildWidget$1(options) {
      var t2, newChildBuildResults, bypassRebuild,
        t1 = this.value;
      if (t1 instanceof B.EquationRowNode) {
        type$.PositionDependentMixin_GreenNode._as(t1);
        t2 = this.pos;
        t1.PositionDependentMixin_range = new C.TextRange(t2 + 1, t2 + (t1.get$editingWidth() - 1));
      }
      t2 = t1._oldOptions;
      if (t2 != null && options === t2) {
        t1 = t1._oldBuildResult;
        t1.toString;
        return t1;
      }
      newChildBuildResults = this._buildChildWidgets$1(t1.computeChildOptions$1(options));
      t2 = t1._oldOptions;
      bypassRebuild = t2 != null && !t1.shouldRebuildWidget$2(t2, options) && C.listEquals0(newChildBuildResults, t1._oldChildBuildResults, type$.nullable_BuildResult);
      t1._oldOptions = options;
      t1.set$_oldChildBuildResults(newChildBuildResults);
      if (bypassRebuild) {
        t1 = t1._oldBuildResult;
        t1.toString;
      } else
        t1 = t1._oldBuildResult = t1.buildWidget$2(options, newChildBuildResults);
      return t1;
    },
    _buildChildWidgets$1(childOptions) {
      var _length, _list, index, t1;
      type$.List_MathOptions._as(childOptions);
      if (this.get$children(0).length === 0)
        return A.List_empty23;
      _length = this.get$children(0).length;
      _list = J.JSArray_JSArray$allocateFixed(_length, type$.nullable_BuildResult);
      for (index = 0; index < _length; ++index) {
        t1 = this.get$children(0);
        if (!(index < t1.length))
          return C.ioore(t1, index);
        t1 = t1[index];
        if (t1 == null)
          t1 = null;
        else {
          if (!(index < childOptions.length))
            return C.ioore(childOptions, index);
          t1 = t1.buildWidget$1(childOptions[index]);
        }
        _list[index] = t1;
      }
      return _list;
    },
    set$__SyntaxNode_children_FI(__SyntaxNode_children_FI) {
      this.__SyntaxNode_children_FI = type$.List_nullable_SyntaxNode._as(__SyntaxNode_children_FI);
    }
  };
  B.GreenNode.prototype = {
    toJson$0() {
      return C.LinkedHashMap_LinkedHashMap$_literal(["type", C._rtiToString(C.getRuntimeTypeOfDartObject(this)._rti, null)], type$.String, type$.nullable_Object);
    },
    set$_oldChildBuildResults(_oldChildBuildResults) {
      this._oldChildBuildResults = type$.nullable_List_nullable_BuildResult._as(_oldChildBuildResults);
    }
  };
  B.ParentableNode.prototype = {
    get$editingWidth() {
      var result, _this = this,
        value = _this.__ParentableNode_editingWidth_FI;
      if (value === $) {
        result = _this.computeWidth$0();
        _this.__ParentableNode_editingWidth_FI !== $ && C.throwLateFieldADI("editingWidth");
        _this.__ParentableNode_editingWidth_FI = result;
        value = result;
      }
      return value;
    },
    get$childPositions() {
      var result, _this = this,
        value = _this.__ParentableNode_childPositions_FI;
      if (value === $) {
        result = _this.computeChildPositions$0();
        _this.__ParentableNode_childPositions_FI !== $ && C.throwLateFieldADI("childPositions");
        _this.set$__ParentableNode_childPositions_FI(result);
        value = result;
      }
      return value;
    },
    set$__ParentableNode_childPositions_FI(__ParentableNode_childPositions_FI) {
      this.__ParentableNode_childPositions_FI = type$.List_int._as(__ParentableNode_childPositions_FI);
    }
  };
  B.PositionDependentMixin.prototype = {};
  B.SlotableNode.prototype = {
    get$children(_) {
      var result, _this = this,
        value = _this.__SlotableNode_children_FI;
      if (value === $) {
        result = _this.computeChildren$0();
        _this.__SlotableNode_children_FI !== $ && C.throwLateFieldADI("children");
        _this.set$__SlotableNode_children_FI(result);
        value = result;
      }
      return value;
    },
    computeWidth$0() {
      var t1 = this.get$children(0),
        t2 = C._arrayInstanceType(t1);
      return B.IterableIntegerExtension_get_sum(new C.MappedListIterable(t1, t2._eval$1("int(1)")._as(new B.SlotableNode_computeWidth_closure(this)), t2._eval$1("MappedListIterable<1,int>"))) + 1;
    },
    computeChildPositions$0() {
      var t1, t2, curPos, _i, child, t3,
        result = C._setArrayType([], type$.JSArray_int);
      for (t1 = this.get$children(0), t2 = t1.length, curPos = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        D.JSArray_methods.add$1(result, curPos);
        t3 = child == null ? null : child.get$editingWidth() - 1;
        curPos += t3 == null ? 0 : t3;
      }
      return result;
    },
    set$__SlotableNode_children_FI(__SlotableNode_children_FI) {
      this.__SlotableNode_children_FI = C._instanceType(this)._eval$1("List<SlotableNode.T>")._as(__SlotableNode_children_FI);
    }
  };
  B.TransparentNode.prototype = {
    computeWidth$0() {
      return B.IterableIntegerExtension_get_sum(J.map$1$1$ax(this.children, new B.TransparentNode_computeWidth_closure(), type$.int));
    },
    computeChildPositions$0() {
      var t1 = {};
      t1.curPos = 0;
      return C.List_List$generate(J.get$length$asx(this.children) + 1, new B.TransparentNode_computeChildPositions_closure(t1, this), false, type$.int);
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = C._arrayInstanceType(childBuildResults);
      t2 = t1._eval$1("ExpandIterable<1,BuildResult>");
      return new B.BuildResult(A.Text_mo4, options, 0, 0, C.List_List$of(new C.ExpandIterable(childBuildResults, t1._eval$1("Iterable<BuildResult>(1)")._as(new B.TransparentNode_buildWidget_closure()), t2), false, t2._eval$1("Iterable.E")));
    },
    get$flattenedChildList() {
      var t1, result, _this = this,
        value = _this.__TransparentNode_flattenedChildList_FI;
      if (value === $) {
        t1 = J.expand$1$1$ax(_this.children, new B.TransparentNode_flattenedChildList_closure(), type$.GreenNode);
        result = C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
        _this.__TransparentNode_flattenedChildList_FI !== $ && C.throwLateFieldADI("flattenedChildList");
        _this.set$__TransparentNode_flattenedChildList_FI(result);
        value = result;
      }
      return value;
    },
    get$leftType() {
      var result, _this = this,
        value = _this.__TransparentNode_leftType_FI;
      if (value === $) {
        result = J.$index$asx(_this.children, 0).get$leftType();
        _this.__TransparentNode_leftType_FI !== $ && C.throwLateFieldADI("leftType");
        _this.__TransparentNode_leftType_FI = result;
        value = result;
      }
      return value;
    },
    get$rightType() {
      var result, _this = this,
        value = _this.__TransparentNode_rightType_FI;
      if (value === $) {
        result = J.get$last$ax(_this.children).get$rightType();
        _this.__TransparentNode_rightType_FI !== $ && C.throwLateFieldADI("rightType");
        _this.__TransparentNode_rightType_FI = result;
        value = result;
      }
      return value;
    },
    set$__TransparentNode_flattenedChildList_FI(__TransparentNode_flattenedChildList_FI) {
      this.__TransparentNode_flattenedChildList_FI = type$.List_GreenNode._as(__TransparentNode_flattenedChildList_FI);
    }
  };
  B.EquationRowNode.prototype = {
    computeWidth$0() {
      return B.IterableIntegerExtension_get_sum(J.map$1$1$ax(this.children, new B.EquationRowNode_computeWidth_closure(), type$.int)) + 2;
    },
    computeChildPositions$0() {
      var t1 = {};
      t1.curPos = 1;
      return C.List_List$generate(J.get$length$asx(this.children) + 1, new B.EquationRowNode_computeChildPositions_closure(t1, this), false, type$.int);
    },
    get$flattenedChildList() {
      var t1, result, _this = this,
        value = _this.__EquationRowNode_flattenedChildList_FI;
      if (value === $) {
        t1 = J.expand$1$1$ax(_this.children, new B.EquationRowNode_flattenedChildList_closure(), type$.GreenNode);
        result = C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
        _this.__EquationRowNode_flattenedChildList_FI !== $ && C.throwLateFieldADI("flattenedChildList");
        _this.set$__EquationRowNode_flattenedChildList_FI(result);
        value = result;
      }
      return value;
    },
    get$caretPositions() {
      var result, _this = this,
        value = _this.__EquationRowNode_caretPositions_FI;
      if (value === $) {
        result = _this.computeCaretPositions$0();
        _this.__EquationRowNode_caretPositions_FI !== $ && C.throwLateFieldADI("caretPositions");
        _this.set$__EquationRowNode_caretPositions_FI(result);
        value = result;
      }
      return value;
    },
    computeCaretPositions$0() {
      var t1 = {};
      t1.curPos = 1;
      return C.List_List$generate(this.get$flattenedChildList().length + 1, new B.EquationRowNode_computeCaretPositions_closure(t1, this), false, type$.int);
    },
    buildWidget$2(options, childBuildResults) {
      var t1, t2, flattenedBuildResults, flattenedChildOptions, childSpacingConfs, _length, lineChildren, index, t3, t4, _this = this, _null = null;
      type$.List_nullable_BuildResult._as(childBuildResults);
      t1 = C._arrayInstanceType(childBuildResults);
      t2 = t1._eval$1("ExpandIterable<1,BuildResult>");
      flattenedBuildResults = C.List_List$of(new C.ExpandIterable(childBuildResults, t1._eval$1("Iterable<BuildResult>(1)")._as(new B.EquationRowNode_buildWidget_closure()), t2), false, t2._eval$1("Iterable.E"));
      t2 = C._arrayInstanceType(flattenedBuildResults);
      t1 = t2._eval$1("MappedListIterable<1,MathOptions>");
      flattenedChildOptions = C.List_List$of(new C.MappedListIterable(flattenedBuildResults, t2._eval$1("MathOptions(1)")._as(new B.EquationRowNode_buildWidget_closure0()), t1), false, t1._eval$1("ListIterable.E"));
      t1 = _this.get$flattenedChildList().length;
      childSpacingConfs = C.List_List$generate(t1, new B.EquationRowNode_buildWidget_closure1(_this, flattenedChildOptions), false, type$._NodeSpacingConf);
      B._traverseNonSpaceNodes(childSpacingConfs, new B.EquationRowNode_buildWidget_closure2());
      B._traverseNonSpaceNodes(childSpacingConfs, new B.EquationRowNode_buildWidget_closure3());
      _this.set$_syntax_tree$_key(0, new H.LabeledGlobalKey(_null, type$.LabeledGlobalKey_State_StatefulWidget));
      _length = flattenedBuildResults.length;
      lineChildren = J.JSArray_JSArray$allocateFixed(_length, type$.LineElement);
      for (t2 = type$.SpaceNode, index = 0; index < _length; ++index) {
        if (!(index < flattenedBuildResults.length))
          return C.ioore(flattenedBuildResults, index);
        t3 = flattenedBuildResults[index];
        t4 = _this.get$flattenedChildList();
        if (!(index < t4.length))
          return C.ioore(t4, index);
        if (t4[index] instanceof B.SpaceNode) {
          t4 = _this.get$flattenedChildList();
          if (!(index < t4.length))
            return C.ioore(t4, index);
          t4 = t2._as(t4[index]).alignerOrSpacer;
        } else
          t4 = false;
        if (!(index < t1))
          return C.ioore(childSpacingConfs, index);
        lineChildren[index] = new B.LineElement(false, _null, childSpacingConfs[index].spacingAfter, t4, t3.widget, _null);
      }
      t1 = B.IterableExtension_get_lastOrNull(flattenedBuildResults, type$.BuildResult);
      t1 = t1 == null ? _null : t1.italic;
      if (t1 == null)
        t1 = 0;
      t2 = flattenedBuildResults.length === 1 ? D.JSArray_methods.get$first(flattenedBuildResults).italic : 0;
      return new B.BuildResult(new Aq.Consumer(new B.EquationRowNode_buildWidget_closure4(_this, lineChildren, options), _null, _null, type$.Consumer_FlutterMathMode), options, t1, t2, _null);
    },
    computeChildOptions$1(options) {
      return C.List_List$filled(J.get$length$asx(this.children), options, false, type$.MathOptions);
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return false;
    },
    get$leftType() {
      var t1 = this.overrideType;
      return t1 == null ? A.AtomType_0 : t1;
    },
    get$rightType() {
      var t1 = this.overrideType;
      return t1 == null ? A.AtomType_0 : t1;
    },
    toJson$0() {
      var t1 = this.super$GreenNode$toJson(),
        t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.nullable_Object),
        t3 = J.map$1$1$ax(this.children, new B.EquationRowNode_toJson_closure(), type$.Map_of_String_and_nullable_Object);
      t2.$indexSet(0, "children", C.List_List$of(t3, true, t3.$ti._eval$1("ListIterable.E")));
      t3 = this.overrideType;
      if (t3 != null)
        t2.$indexSet(0, "overrideType", t3);
      t1.addAll$1(0, t2);
      return t1;
    },
    set$_syntax_tree$_key(_, _key) {
      this._syntax_tree$_key = type$.nullable_GlobalKey_State_StatefulWidget._as(_key);
    },
    set$__EquationRowNode_flattenedChildList_FI(__EquationRowNode_flattenedChildList_FI) {
      this.__EquationRowNode_flattenedChildList_FI = type$.List_GreenNode._as(__EquationRowNode_flattenedChildList_FI);
    },
    set$__EquationRowNode_caretPositions_FI(__EquationRowNode_caretPositions_FI) {
      this.__EquationRowNode_caretPositions_FI = type$.List_int._as(__EquationRowNode_caretPositions_FI);
    },
    get$children(receiver) {
      return this.children;
    }
  };
  B._ClipChildrenMixin.prototype = {};
  B.LeafNode.prototype = {
    get$children(_) {
      return A.List_empty25;
    },
    computeChildOptions$1(options) {
      return A.List_empty24;
    },
    get$childPositions() {
      return D.List_empty0;
    },
    get$editingWidth() {
      return 1;
    }
  };
  B.AtomType.prototype = {
    _enumToString$0() {
      return "AtomType." + this._name;
    }
  };
  B.TemporaryNode.prototype = {
    buildWidget$2(options, childBuildResults) {
      type$.List_nullable_BuildResult._as(childBuildResults);
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    get$leftType() {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    get$rightType() {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    shouldRebuildWidget$2(oldOptions, newOptions) {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    },
    get$editingWidth() {
      return C.throwExpression(C.UnsupportedError$("Temporary node " + C.getRuntimeTypeOfDartObject(this).toString$0(0) + " encountered."));
    }
  };
  B.BuildResult.prototype = {};
  B._NodeSpacingConf.prototype = {};
  B._EquationRowNode_ParentableNode_PositionDependentMixin.prototype = {};
  B._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin.prototype = {};
  B._TransparentNode_ParentableNode__ClipChildrenMixin.prototype = {};
  B.Mode.prototype = {
    _enumToString$0() {
      return "Mode." + this._name;
    }
  };
  B.CharacterMetrics.prototype = {};
  B.EnvContext.prototype = {};
  B.EnvSpec.prototype = {};
  B.FunctionContext.prototype = {};
  B.FunctionSpec.prototype = {
    handler$2(arg0, arg1) {
      return this.handler.call$2(arg0, arg1);
    }
  };
  B.CrNode.prototype = {};
  B._LeftRightRightNode.prototype = {};
  B._MiddleNode.prototype = {};
  B._EndEnvironmentNode.prototype = {};
  B.Lexer.prototype = {
    lex$0() {
      var match, t4, t5, t6, text, nlIndex, controlMatch, _this = this,
        _s23_ = "Unexpected character: '",
        t1 = _this.pos,
        t2 = _this.input,
        t3 = t2.length;
      if (t1 === t3)
        return new B.Token("EOF", new B.SourceLocation0(_this, t1, t1));
      t1 = _this.it;
      if (!t1.moveNext$0()) {
        t1 = _this.pos;
        if (!(t1 >= 0 && t1 < t3))
          return C.ioore(t2, t1);
        t2 = t2[t1];
        throw C.wrapException(B.ParseException$(_s23_ + t2 + "'", B.Token$(t2, B.SourceLocation$0(_this, t1, t1 + 1))));
      }
      match = t1.__js_helper$_current;
      if (match == null)
        match = type$.RegExpMatch._as(match);
      t4 = match._match;
      t5 = t4.index;
      t6 = _this.pos;
      if (t5 !== t6) {
        if (!(t6 >= 0 && t6 < t3))
          return C.ioore(t2, t6);
        t1 = t2[t6];
        throw C.wrapException(B.ParseException$(_s23_ + t1 + "'", B.Token$(t1, B.SourceLocation$0(_this, t6, t6 + 1))));
      }
      _this.pos = match.get$end(0);
      if (2 >= t4.length)
        return C.ioore(t4, 2);
      text = t4[2];
      if (text == null)
        text = " ";
      if (text === "%") {
        t4 = t1.__js_helper$_current;
        nlIndex = D.JSString_methods.indexOf$2(t2, "\n", (t4 == null ? type$.RegExpMatch._as(t4) : t4).get$end(0));
        if (nlIndex === -1) {
          _this.pos = t3;
          for (t2 = type$.RegExpMatch; t1.moveNext$0();) {
            t3 = t1.__js_helper$_current;
            t3 = (t3 == null ? t2._as(t3) : t3)._match;
            _this.pos = t3.index + t3[0].length;
          }
          _this.settings.reportNonstrict$2("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)");
        } else {
          t2 = nlIndex + 1;
          t3 = type$.RegExpMatch;
          while (true) {
            t4 = t1.__js_helper$_current;
            t4 = (t4 == null ? t3._as(t4) : t4)._match;
            if (!(t4.index + t4[0].length < t2))
              break;
            if (t1.moveNext$0()) {
              t4 = t1.__js_helper$_current;
              t4 = (t4 == null ? t3._as(t4) : t4)._match;
              _this.pos = t4.index + t4[0].length;
            } else
              break;
          }
        }
        return _this.lex$0();
      }
      controlMatch = $.$get$controlWordWhitespaceRegex().firstMatch$1(text);
      if (controlMatch != null) {
        t1 = controlMatch._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        t1.toString;
        text = t1;
      }
      return new B.Token(text, new B.SourceLocation0(_this, t5, match.get$end(0)));
    },
    $isLexerInterface: 1
  };
  B.MacroExpander.prototype = {
    expandNextToken$0() {
      var t1, expanded, t2, t3;
      for (t1 = this.stack; true;) {
        expanded = this.expandOnce$0();
        if (expanded != null) {
          t2 = expanded.text;
          t3 = t1.length;
          if (t2 === "\\relax") {
            if (0 >= t3)
              return C.ioore(t1, -1);
            t1.pop();
          } else {
            if (0 >= t3)
              return C.ioore(t1, -1);
            return t1.pop();
          }
        }
      }
    },
    expandOnce$1(expandableOnly) {
      var tokens, args, i, tok, t1, t2, $name, expansion, t3, t4, exception, _this = this, _null = null;
      _this.future$0();
      t1 = _this.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t2 = t1.pop();
      $name = t2.text;
      expansion = !t2.noexpand ? _this._getExpansion$1($name) : _null;
      if (expansion == null) {
        t3 = false;
        if (expandableOnly) {
          if (0 >= $name.length)
            return C.ioore($name, 0);
          t3 = $name[0] === "\\" && _this.isDefined$1($name);
        }
        if (t3)
          throw C.wrapException(B.ParseException$("Undefined control sequence: " + $name, _null));
        D.JSArray_methods.add$1(t1, t2);
        return t2;
      }
      if (++_this.expansionCount > 1000)
        throw C.wrapException(B.ParseException$("Too many expansions: infinite loop or need to increase maxExpand setting", _null));
      tokens = expansion.tokens;
      t2 = expansion.numArgs;
      if (t2 !== 0) {
        args = _this.consumeArgs$1(t2);
        t2 = tokens;
        t3 = t2.slice(0);
        tokens = C._setArrayType(t3, C._arrayInstanceType(t2));
        i = J.get$length$asx(tokens) - 1;
        while (true) {
          t2 = i;
          if (typeof t2 !== "number")
            return t2.$ge();
          if (!(t2 >= 0))
            break;
          tok = J.$index$asx(tokens, i);
          if (tok.text === "#") {
            if (J.$eq$(i, 0))
              throw C.wrapException(B.ParseException$("Incomplete placeholder at end of macro body", tok));
            t2 = i;
            if (typeof t2 !== "number")
              return t2.$sub();
            i = t2 - 1;
            tok = J.$index$asx(tokens, i);
            if (tok.text === "#") {
              t2 = tokens;
              t3 = i;
              if (typeof t3 !== "number")
                return t3.$add();
              J.removeAt$1$ax(t2, t3 + 1);
            } else
              try {
                t2 = tokens;
                t3 = i;
                t4 = i;
                if (typeof t4 !== "number")
                  return t4.$add();
                J.replaceRange$3$asx(t2, t3, t4 + 2, J.$index$asx(args, C.int_parse(tok.text, _null) - 1));
              } catch (exception) {
                if (type$.FormatException._is(C.unwrapException(exception)))
                  throw C.wrapException(B.ParseException$("Not a valid argument number", tok));
                else
                  throw exception;
              }
          }
          t2 = i;
          if (typeof t2 !== "number")
            return t2.$sub();
          i = t2 - 1;
        }
      }
      D.JSArray_methods.addAll$1(t1, type$.List_Token._as(tokens));
      return _null;
    },
    expandOnce$0() {
      return this.expandOnce$1(false);
    },
    future$0() {
      var t1 = this.stack;
      if (t1.length === 0)
        D.JSArray_methods.add$1(t1, this.lexer.lex$0());
      return D.JSArray_methods.get$last(t1);
    },
    _getExpansion$1($name) {
      var definition = this.macros.$get$1(0, $name);
      if (definition == null)
        return null;
      return definition.expand.call$1(this);
    },
    consumeArgs$1(numArgs) {
      return C.List_List$generate(numArgs, new B.MacroExpander_consumeArgs_closure(this), true, type$.List_Token);
    },
    consumeSpaces$0() {
      var t1, t2;
      for (t1 = this.stack, t2 = this.lexer; true;) {
        if (t1.length === 0)
          D.JSArray_methods.add$1(t1, t2.lex$0());
        if (D.JSArray_methods.get$last(t1).text === " ") {
          if (0 >= t1.length)
            return C.ioore(t1, -1);
          t1.pop();
        } else
          break;
      }
    },
    isDefined$1($name) {
      var t1 = this.macros;
      return t1.current.containsKey$1(0, $name) || t1.builtins.containsKey$1(0, $name) || A.Map_MYH09.containsKey$1(0, $name) || A.Map_SXdse.containsKey$1(0, $name) || $.$get$functions().containsKey$1(0, $name) || A.Set_oV20z.contains$1(0, $name);
    },
    expandMacroAsText$1($name) {
      var t1,
        tokens = this.expandMacro$1($name);
      if (tokens != null) {
        t1 = C._arrayInstanceType(tokens);
        return new C.MappedListIterable(tokens, t1._eval$1("String(1)")._as(new B.MacroExpander_expandMacroAsText_closure()), t1._eval$1("MappedListIterable<1,String>")).join$1(0, "");
      }
      return null;
    },
    expandMacro$1($name) {
      var output, t1, oldStackLength;
      if (this.macros.$get$1(0, $name) == null)
        return null;
      output = C._setArrayType([], type$.JSArray_Token);
      t1 = this.stack;
      oldStackLength = t1.length;
      D.JSArray_methods.add$1(t1, new B.Token($name, null));
      for (; t1.length > oldStackLength;)
        if (this.expandOnce$0() != null) {
          if (0 >= t1.length)
            return C.ioore(t1, -1);
          D.JSArray_methods.add$1(output, t1.pop());
        }
      return output;
    },
    $isMacroContext: 1
  };
  B.MacroDefinition.prototype = {};
  B.MacroExpansion.prototype = {};
  B.Namespace.prototype = {
    $get$1(_, $name) {
      var currentRes = this.current.$index(0, $name);
      if (currentRes != null)
        return currentRes;
      return this.builtins.$index(0, $name);
    },
    $set$2(_, $name, value) {
      var t1, _this = this;
      _this.$ti._precomputed1._as(value);
      t1 = _this.undefStack;
      if (t1.length !== 0)
        D.JSArray_methods.get$last(t1).$indexSet(0, $name, _this.current.$index(0, $name));
      _this.current.$indexSet(0, $name, value);
    },
    endGroup$0() {
      var t1 = this.undefStack,
        t2 = t1.length;
      if (t2 === 0)
        throw C.wrapException(B.ParseException$("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug", null));
      if (0 >= t2)
        return C.ioore(t1, -1);
      t1.pop().forEach$1(0, new B.Namespace_endGroup_closure(this));
    }
  };
  B.ParseException.prototype = {
    ParseException$2(message, token) {
      var input, start, end,
        t1 = this.token,
        loc = t1 == null ? null : t1.loc;
      if (loc != null && loc.start <= loc.end) {
        input = loc.lexer.input;
        start = loc.start;
        end = loc.end;
        C.stringReplaceAllFuncUnchecked(D.JSString_methods.substring$2(input, start, end), C.RegExp_RegExp("[^]", true, false, false, false), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(new B.ParseException_closure())), null);
        if (start > 15)
          D.JSString_methods.substring$2(input, start - 15, start);
        else
          D.JSString_methods.substring$2(input, 0, start);
        t1 = end + 15;
        if (t1 < input.length)
          D.JSString_methods.substring$2(input, end, t1);
        else
          D.JSString_methods.substring$1(input, end);
      }
    },
    $isException: 1,
    $isFlutterMathException: 1
  };
  B.TexParser.prototype = {
    parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(breakOnInfix, breakOnTokenText, infixArgumentMode) {
      var lex, funcData, atom, t1, t2, t3, t4, t5, atom0, _this = this,
        body = C._setArrayType([], type$.JSArray_GreenNode);
      for (t1 = breakOnTokenText != null, t2 = _this.argParsingContexts, t3 = type$.GreenNode, t4 = type$.FunctionSpec_GreenNode, t5 = t2.$ti._precomputed1; true;) {
        if (_this.mode === A.Mode_0)
          _this.consumeSpaces$0();
        lex = _this.fetch$0(0);
        if (A.Set_u2wkf.contains$1(0, lex.text))
          break;
        if (t1 && lex.text === breakOnTokenText)
          break;
        funcData = $.$get$functions().$index(0, lex.text);
        if (funcData != null && funcData.infix) {
          if (infixArgumentMode)
            throw C.wrapException(B.ParseException$("only one infix operator per group", lex));
          if (breakOnInfix)
            break;
          _this.nextToken = null;
          t2._collection$_add$1(0, t5._as(new B.ArgumentParsingContext(lex.text, t4._as(funcData))));
          try {
            atom = funcData.handler$2(_this, new B.FunctionContext(lex.text, breakOnTokenText, C.List_List$of(body, false, t3)));
            J.clear$0$ax(body);
            J.add$1$ax(body, atom);
          } finally {
            lex.toString;
            t2.removeLast$0(0);
          }
        } else {
          atom0 = _this.parseAtom$1(breakOnTokenText);
          if (atom0 == null)
            break;
          J.add$1$ax(body, atom0);
        }
      }
      return body;
    },
    parseExpression$1$breakOnInfix(breakOnInfix) {
      return this.parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(breakOnInfix, null, false);
    },
    parseExpression$2$breakOnInfix$breakOnTokenText(breakOnInfix, breakOnTokenText) {
      return this.parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(breakOnInfix, breakOnTokenText, false);
    },
    parseExpression$2$breakOnTokenText$infixArgumentMode(breakOnTokenText, infixArgumentMode) {
      return this.parseExpression$3$breakOnInfix$breakOnTokenText$infixArgumentMode(false, breakOnTokenText, infixArgumentMode);
    },
    expect$2$consume(text, consume) {
      var _this = this;
      if (_this.fetch$0(0).text !== text)
        throw C.wrapException(B.ParseException$("Expected '" + text + "', got '" + _this.fetch$0(0).text + "'", _this.fetch$0(0)));
      if (consume)
        _this.nextToken = null;
    },
    expect$1(text) {
      return this.expect$2$consume(text, true);
    },
    consumeSpaces$0() {
      for (; this.fetch$0(0).text === " ";)
        this.nextToken = null;
    },
    parseAtom$1(breakOnTokenText) {
      var scriptsResult, t1, t2, t3, t4, res, _null = null,
        base = this.parseGroup$4$breakOnTokenText$greediness$optional("atom", breakOnTokenText, _null, false);
      if (this.mode === A.Mode_1)
        return base;
      scriptsResult = this.parseScripts$1$allowLimits(base instanceof B.EquationRowNode && base.overrideType === A.AtomType_1);
      t1 = scriptsResult.subscript;
      t2 = t1 == null;
      if (!(t2 && scriptsResult.superscript == null))
        if (scriptsResult.limits !== true) {
          t2 = base == null ? _null : B.GreenNodeWrappingExt_wrapWithEquationRow(base);
          if (t2 == null)
            t2 = B.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null);
          return B.MultiscriptsNode$(t2, t1, scriptsResult.superscript);
        } else {
          t3 = scriptsResult.superscript;
          if (t3 != null) {
            t4 = base == null ? _null : B.GreenNodeWrappingExt_wrapWithEquationRow(base);
            res = B.OverNode$(t3, t4 == null ? B.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null) : t4, false);
          } else
            res = base;
          if (!t2) {
            t2 = res == null ? _null : B.GreenNodeWrappingExt_wrapWithEquationRow(res);
            res = B.UnderNode$(t2 == null ? B.EquationRowNode$(C._setArrayType([], type$.JSArray_GreenNode), _null) : t2, t1);
          }
          return res;
        }
      else
        return base;
    },
    parseScripts$1$allowLimits(allowLimits) {
      var t1, t2, limits, superscript, subscript, lex, t3, superscriptList, _this = this, _null = null,
        _s18_ = "Double superscript";
      $label0$1:
        for (t1 = type$.JSArray_GreenNode, t2 = !allowLimits, limits = _null, superscript = limits, subscript = superscript; true;) {
          _this.consumeSpaces$0();
          lex = _this.fetch$0(0);
          t3 = lex.text;
          switch (t3) {
            case "\\limits":
            case "\\nolimits":
              if (t2)
                throw C.wrapException(B.ParseException$("Limit controls must follow a math operator", lex));
              limits = t3 === "\\limits";
              _this.nextToken = null;
              break;
            case "^":
              if (superscript != null)
                throw C.wrapException(B.ParseException$(_s18_, lex));
              superscript = B.GreenNodeWrappingExt_wrapWithEquationRow(_this._handleScript$0());
              break;
            case "_":
              if (subscript != null)
                throw C.wrapException(B.ParseException$("Double subscript", lex));
              subscript = B.GreenNodeWrappingExt_wrapWithEquationRow(_this._handleScript$0());
              break;
            case "'":
              if (superscript != null)
                throw C.wrapException(B.ParseException$(_s18_, lex));
              superscriptList = C._setArrayType([new B.SymbolNode("\u2032", false, _null, _null, _this.mode)], t1);
              _this.nextToken = null;
              for (; _this.fetch$0(0).text === "'";) {
                D.JSArray_methods.add$1(superscriptList, new B.SymbolNode("\u2032", false, _null, _null, _this.mode));
                _this.nextToken = null;
              }
              if (_this.fetch$0(0).text === "^")
                D.JSArray_methods.addAll$1(superscriptList, B.GreenNodeWrappingExt_expandEquationRow(_this._handleScript$0()));
              superscript = B.GreenNodeListWrappingExt_wrapWithEquationRow(superscriptList);
              break;
            default:
              break $label0$1;
          }
        }
      return new B.ScriptsParsingResults(subscript, superscript, limits);
    },
    parseScripts$0() {
      return this.parseScripts$1$allowLimits(false);
    },
    _handleScript$0() {
      var group,
        symbolToken = this.fetch$0(0),
        symbol = symbolToken.text;
      this.nextToken = null;
      group = this.parseGroup$4$consumeSpaces$greediness$optional(symbol === "_" ? "subscript" : "superscript", true, 1, false);
      if (group == null)
        throw C.wrapException(B.ParseException$("Expected group after '" + symbol + "'", symbolToken));
      return group;
    },
    fetch$0(_) {
      var nextToken = this.nextToken;
      if (nextToken == null)
        return this.nextToken = this.macroExpander.expandNextToken$0();
      return nextToken;
    },
    parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, breakOnTokenText, consumeSpaces, greediness, mode, optional) {
      var firstToken, text, t2, t3, expression, result, _this = this,
        outerMode = _this.mode,
        t1 = mode != null;
      if (t1) {
        _this.mode = mode;
        _this.macroExpander.mode = mode;
      }
      if (consumeSpaces)
        _this.consumeSpaces$0();
      firstToken = _this.fetch$0(0);
      text = firstToken.text;
      if (optional)
        t2 = text === "[";
      else
        t2 = text === "{" || text === "\\begingroup";
      if (t2) {
        _this.nextToken = null;
        t2 = A.Map_rjIXC.$index(0, text);
        t2.toString;
        t3 = _this.macroExpander.macros;
        D.JSArray_methods.add$1(t3.undefStack, C.LinkedHashMap_LinkedHashMap$_empty(type$.String, t3.$ti._eval$1("1?")));
        expression = _this.parseExpression$2$breakOnInfix$breakOnTokenText(false, t2);
        _this.expect$1(t2);
        t3.endGroup$0();
        result = B.GreenNodeListWrappingExt_wrapWithEquationRow(expression);
      } else if (optional)
        result = null;
      else {
        result = _this.parseFunction$3(breakOnTokenText, $name, greediness);
        if (result == null)
          result = _this._parseSymbol$0();
        if (result == null) {
          if (0 >= text.length)
            return C.ioore(text, 0);
          t2 = text[0] === "\\" && !A.Set_oV20z.contains$1(0, text);
        } else
          t2 = false;
        if (t2) {
          t2 = B.ParseException$("Undefined control sequence: " + text, firstToken);
          throw C.wrapException(t2);
        }
      }
      if (t1) {
        _this.mode = outerMode;
        _this.macroExpander.mode = outerMode;
      }
      return result;
    },
    parseGroup$5$consumeSpaces$greediness$mode$optional($name, consumeSpaces, greediness, mode, optional) {
      return this.parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, null, consumeSpaces, greediness, mode, optional);
    },
    parseGroup$4$consumeSpaces$greediness$optional($name, consumeSpaces, greediness, optional) {
      return this.parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, null, consumeSpaces, greediness, null, optional);
    },
    parseGroup$4$breakOnTokenText$greediness$optional($name, breakOnTokenText, greediness, optional) {
      return this.parseGroup$6$breakOnTokenText$consumeSpaces$greediness$mode$optional($name, breakOnTokenText, false, greediness, null, optional);
    },
    parseFunction$3(breakOnTokenText, $name, greediness) {
      var context, t1, t2, _this = this,
        _s20_ = "Can't use function '",
        token = _this.fetch$0(0),
        func = token.text,
        funcData = $.$get$functions().$index(0, func);
      if (funcData == null)
        return null;
      _this.nextToken = null;
      if (greediness != null && funcData.greediness <= greediness) {
        t1 = C.S(func);
        t2 = $name != null ? " as " + $name : "";
        throw C.wrapException(B.ParseException$("Got function '" + t1 + "' with no arguments " + t2, token));
      } else {
        t1 = _this.mode;
        if (t1 === A.Mode_1 && !funcData.allowedInText)
          throw C.wrapException(B.ParseException$(_s20_ + C.S(func) + "' in text mode", token));
        else if (t1 === A.Mode_0 && !funcData.allowedInMath)
          throw C.wrapException(B.ParseException$(_s20_ + C.S(func) + "' in math mode", token));
      }
      context = new B.FunctionContext(func, breakOnTokenText, A.List_empty25);
      t1 = _this.argParsingContexts;
      t1._collection$_add$1(0, t1.$ti._precomputed1._as(new B.ArgumentParsingContext(C._asString(func), type$.FunctionSpec_GreenNode._as(funcData))));
      try {
        t2 = funcData.handler$2(_this, context);
        return t2;
      } finally {
        C._asString(func);
        t1.removeLast$0(0);
      }
    },
    get$currArgParsingContext() {
      return this.argParsingContexts.get$last(0);
    },
    _assertOptionalBeforeReturn$2$optional(value, optional) {
      if (!optional && value == null)
        throw C.wrapException(B.ParseException$("Expected group after " + this.get$currArgParsingContext().funcName, this.fetch$0(0)));
    },
    parseArgColor$1$optional(optional) {
      var i, consumeSpaces, res, t2, match3, color, match2, t3, match1, _this = this,
        t1 = _this.argParsingContexts;
      t1.get$last(0).newArgument$1$optional(false);
      i = t1.get$last(0).currArgNum;
      if (i <= 0)
        if (i === 0) {
          t1 = _this.mode === A.Mode_0;
          consumeSpaces = t1;
        } else
          consumeSpaces = false;
      else
        consumeSpaces = true;
      if (consumeSpaces)
        _this.consumeSpaces$0();
      res = _this._parseStringGroup$2$optional("color", false);
      if (res == null) {
        _this._assertOptionalBeforeReturn$2$optional(null, false);
        return null;
      }
      t1 = $.$get$TexParser__parseColorRegex3();
      t2 = res.text;
      match3 = t1.firstMatch$1(t2);
      if (match3 != null) {
        t1 = match3._match;
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        color = A.Map_mi3Hd.$index(0, t1[0].toLowerCase());
        if (color != null)
          return color;
      }
      match2 = $.$get$TexParser__parseColorRegex2().firstMatch$1(t2);
      if (match2 != null) {
        t1 = match2._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t2 = t1[1];
        t2.toString;
        t2 = C.int_parse(t2, 16);
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t3 = t1[2];
        t3.toString;
        t3 = C.int_parse(t3, 16);
        if (3 >= t1.length)
          return C.ioore(t1, 3);
        t1 = t1[3];
        t1.toString;
        return C.Color$fromARGB(255, t2, t3, C.int_parse(t1, 16));
      }
      match1 = $.$get$TexParser__parseColorRegex1().firstMatch$1(t2);
      if (match1 != null) {
        t1 = match1._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t2 = t1[1];
        t2.toString;
        t2 = C.int_parse(D.JSString_methods.$mul(t2, 2), 16);
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t3 = t1[2];
        t3.toString;
        t3 = C.int_parse(D.JSString_methods.$mul(t3, 2), 16);
        if (3 >= t1.length)
          return C.ioore(t1, 3);
        t1 = t1[3];
        t1.toString;
        return C.Color$fromARGB(255, t2, t3, C.int_parse(D.JSString_methods.$mul(t1, 2), 16));
      }
      throw C.wrapException(B.ParseException$("Invalid color: '" + t2 + "'", null));
    },
    parseArgSize$1$optional(optional) {
      var i, consumeSpaces, res, t2, match, unit, t3, _this = this,
        t1 = _this.argParsingContexts;
      t1.get$last(0).newArgument$1$optional(optional);
      i = t1.get$last(0).currArgNum;
      if (!(i > 0 && !optional))
        consumeSpaces = i === 0 && !optional && _this.mode === A.Mode_0;
      else
        consumeSpaces = true;
      if (consumeSpaces)
        _this.consumeSpaces$0();
      t1 = !optional;
      res = t1 && _this.fetch$0(0).text !== "{" ? _this._parseRegexGroup$2($.$get$TexParser__parseSizeRegex(), "size") : _this._parseStringGroup$2$optional("size", optional);
      if (res == null) {
        _this._assertOptionalBeforeReturn$2$optional(null, optional);
        return null;
      }
      if (t1 && res.text.length === 0)
        return null;
      t1 = $.$get$TexParser__parseMeasurementRegex();
      t2 = res.text;
      match = t1.firstMatch$1(t2);
      if (match == null)
        throw C.wrapException(B.ParseException$("Invalid size: '" + t2 + "'", res));
      t1 = match._match;
      if (3 >= t1.length)
        return C.ioore(t1, 3);
      t2 = t1[3];
      t2.toString;
      unit = A.Map_VFR9N.$index(0, t2);
      if (unit == null)
        throw C.wrapException(B.ParseException$("Invalid unit: '" + C.S(match.group$1(3)) + "'", res));
      t2 = t1.length;
      if (1 >= t2)
        return C.ioore(t1, 1);
      t3 = t1[1];
      t3.toString;
      if (2 >= t2)
        return C.ioore(t1, 2);
      t1 = t1[2];
      t1.toString;
      return new B.Measurement(C.double_parse(t3 + t1), unit);
    },
    parseArgNode$2$mode$optional(mode, optional) {
      var i, consumeSpaces, res, _this = this,
        t1 = _this.argParsingContexts;
      t1.get$last(0).newArgument$1$optional(optional);
      i = t1.get$last(0).currArgNum;
      if (!(i > 0 && !optional))
        consumeSpaces = i === 0 && !optional && _this.mode === A.Mode_0;
      else
        consumeSpaces = true;
      res = _this.parseGroup$5$consumeSpaces$greediness$mode$optional("argument to " + t1.get$last(0).funcName, consumeSpaces, t1.get$last(0).funcData.greediness, mode, optional);
      _this._assertOptionalBeforeReturn$2$optional(res, optional);
      return res;
    },
    parseArgHbox$1$optional(optional) {
      var t1, _null = null,
        res = this.parseArgNode$2$mode$optional(A.Mode_1, false);
      if (res instanceof B.EquationRowNode)
        return B.EquationRowNode$(C._setArrayType([B.StyleNode$(res.children, new B.OptionsDiff(A.MathStyle_2, _null, _null, _null, _null))], type$.JSArray_GreenNode), _null);
      else {
        if (res == null)
          t1 = _null;
        else {
          t1 = B.IterableNullableExtension_whereNotNull(res.get$children(res), type$.GreenNode);
          t1 = C.List_List$of(t1, false, t1.$ti._eval$1("Iterable.E"));
        }
        if (t1 == null)
          t1 = C._setArrayType([], type$.JSArray_GreenNode);
        return B.StyleNode$(t1, new B.OptionsDiff(A.MathStyle_2, _null, _null, _null, _null));
      }
    },
    _parseStringGroup$2$optional(modeName, optional) {
      var outerMode, firstToken, lastToken, str, nested, nextToken, t1, t2, _this = this,
        groupBegin = optional ? "[" : "{",
        groupEnd = optional ? "]" : "}",
        beginToken = _this.fetch$0(0);
      if (beginToken.text !== groupBegin)
        if (optional)
          return null;
      outerMode = _this.mode;
      _this.mode = A.Mode_1;
      _this.expect$1(groupBegin);
      firstToken = _this.fetch$0(0);
      lastToken = firstToken;
      str = "";
      nested = 0;
      while (true) {
        nextToken = _this.fetch$0(0);
        t1 = nextToken.text;
        t2 = t1 === groupEnd;
        if (!!t2)
          break;
        if (t1 === "EOF")
          throw C.wrapException(B.ParseException$("Unexpected end of input in " + modeName, B.Token_range(firstToken, lastToken, str)));
        else if (t1 === groupBegin)
          ++nested;
        else if (t2)
          --nested;
        str += t1;
        _this.nextToken = null;
        lastToken = nextToken;
      }
      _this.expect$1(groupEnd);
      _this.mode = outerMode;
      return new B.Token(str, B.SourceLocation_range(firstToken, lastToken));
    },
    _parseRegexGroup$2(regex, modeName) {
      var firstToken, t1, lastToken, str, nextToken, t2, t3, _this = this,
        outerMode = _this.mode;
      _this.mode = A.Mode_1;
      firstToken = _this.fetch$0(0);
      t1 = regex._nativeRegExp;
      lastToken = firstToken;
      str = "";
      while (true) {
        nextToken = _this.fetch$0(0);
        t2 = nextToken.text;
        if (t2 !== "EOF")
          t3 = t1.test(str + t2);
        else
          t3 = false;
        if (!t3)
          break;
        str += t2;
        _this.nextToken = null;
        lastToken = nextToken;
      }
      if (str.length === 0)
        throw C.wrapException(B.ParseException$("Invalid " + modeName + ": '" + firstToken.text + "'", firstToken));
      _this.mode = outerMode;
      return new B.Token(str, B.SourceLocation_range(firstToken, lastToken));
    },
    _parseSymbol$0() {
      var arg, t2, t3, match, i, accent, combiningMarks, symbolCommandConfig, symbol, _this = this, _null = null,
        _s21_ = "unicodeTextInMathMode",
        _s19_ = '" used in math mode',
        nucleus = _this.fetch$0(0),
        text = nucleus.text,
        t1 = $.$get$TexParser__parseVerbRegex();
      if (t1._nativeRegExp.test(text)) {
        _this.nextToken = null;
        arg = D.JSString_methods.substring$1(text, 5);
        if (0 >= arg.length)
          return C.ioore(arg, 0);
        if (arg[0] === "*")
          arg = D.JSString_methods.substring$1(arg, 1);
        t1 = arg.length;
        if (t1 >= 2) {
          if (0 >= t1)
            return C.ioore(arg, 0);
          t2 = arg[0];
          t3 = t1 - 1;
          if (!(t3 >= 0))
            return C.ioore(arg, t3);
          t3 = t2 !== arg[t3];
          t2 = t3;
        } else
          t2 = true;
        if (t2)
          throw C.wrapException(B.ParseException$("\\verb assertion failed --\n                    please report what input caused this bug", _null));
        t2 = type$.MappedListIterable_String_SymbolNode;
        return B.EquationRowNode$(C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(arg, 1, t1 - 1).split(""), type$.JSArray_String), type$.SymbolNode_Function_String._as(new B.TexParser__parseSymbol_closure()), t2), false, t2._eval$1("ListIterable.E")), _null);
      }
      if (0 >= text.length)
        return C.ioore(text, 0);
      if (A.Map_3Abhf.containsKey$1(0, text[0]) && !A.Map_Dgm7a.$index(0, _this.mode).containsKey$1(0, text[0]))
        if (_this.mode === A.Mode_0)
          _this.settings.reportNonstrict$3(_s21_, 'Accented Unicode text character "' + text[0] + _s19_, nucleus);
      match = $.$get$combiningDiacriticalMarksEndRegex().firstMatch$1(text);
      if (match != null) {
        t1 = match._match;
        text = D.JSString_methods.substring$2(text, 0, t1.index);
        i = 0;
        while (true) {
          if (0 >= t1.length)
            return C.ioore(t1, 0);
          t2 = t1[0];
          if (!(i < t2.length))
            break;
          t2 = t2;
          if (!(i < t2.length))
            return C.ioore(t2, i);
          accent = t2[i];
          if (!A.Map_1zAbk.containsKey$1(0, accent))
            throw C.wrapException(B.ParseException$("Unknown accent ' " + accent + "'", nucleus));
          if (A.Map_1zAbk.$index(0, accent).$index(0, _this.mode) == null)
            throw C.wrapException(B.ParseException$("Accent " + accent + " unsupported in " + _this.mode.toString$0(0) + " mode", nucleus));
          ++i;
        }
        t1 = t2;
        t1.toString;
        combiningMarks = t1;
      } else
        combiningMarks = "";
      symbolCommandConfig = A.Map_Dgm7a.$index(0, _this.mode).$index(0, text);
      if (symbolCommandConfig != null) {
        if (_this.mode === A.Mode_0 && A.Set_jXWE3.contains$1(0, text)) {
          if (0 >= text.length)
            return C.ioore(text, 0);
          _this.settings.reportNonstrict$3(_s21_, 'Latin-1/Unicode text character "' + text[0] + _s19_, nucleus);
        }
        t1 = _this.mode;
        symbol = new B.SymbolNode(symbolCommandConfig.symbol + combiningMarks, symbolCommandConfig.variantForm, symbolCommandConfig.type, _null, t1);
      } else {
        t1 = text.length;
        if (t1 !== 0) {
          if (0 >= t1)
            return C.ioore(text, 0);
          t2 = text.charCodeAt(0) >= 128;
        } else
          t2 = false;
        if (t2) {
          if (0 >= t1)
            return C.ioore(text, 0);
          if (!B.supportedCodepoint(text.charCodeAt(0)))
            _this.settings.reportNonstrict$3("unknownSymbol", 'Unrecognized Unicode character "' + text[0] + '" (' + text.charCodeAt(0) + ")", nucleus);
          else if (_this.mode === A.Mode_0)
            _this.settings.reportNonstrict$3(_s21_, 'Unicode text character "' + text[0] + ' used in math mode"', nucleus);
          symbol = new B.SymbolNode(text + combiningMarks, false, A.AtomType_0, _null, _this.mode);
        } else
          return _null;
      }
      _this.nextToken = null;
      return symbol;
    }
  };
  B.ArgumentParsingContext.prototype = {
    newArgument$1$optional(optional) {
      ++this.currArgNum;
    }
  };
  B.ScriptsParsingResults.prototype = {};
  B.Strict.prototype = {
    _enumToString$0() {
      return "Strict." + this._name;
    }
  };
  B.TexParserSettings.prototype = {
    reportNonstrict$3(errorCode, errorMsg, token) {
      var strict = this.strict;
      if (!(strict !== A.Strict_3))
        strict = A.Strict_1;
      switch (strict.index) {
        case 0:
          return;
        case 2:
          throw C.wrapException(B.ParseException$("LaTeX-incompatible input and strict mode is set to 'error': " + errorMsg + " [" + errorCode + "]", token));
        case 1:
          break;
        default:
          strict.toString$0(0);
      }
    },
    reportNonstrict$2(errorCode, errorMsg) {
      return this.reportNonstrict$3(errorCode, errorMsg, null);
    }
  };
  B.SourceLocation0.prototype = {};
  B.TexSymbolConfig.prototype = {};
  B.Token.prototype = {};
  B.CustomLayoutDelegate.prototype = {
    additionalPaint$2(context, offset) {
    }
  };
  B.CustomLayoutParentData.prototype = {
    toString$0(_) {
      return this.super$BoxParentData$toString(0) + "; id=" + C.S(this.id);
    },
    set$id(_, id) {
      this.id = this.$ti._eval$1("1?")._as(id);
    }
  };
  B.CustomLayoutId.prototype = {
    applyParentData$1(renderObject) {
      var targetParent,
        parentData = type$.CustomLayoutParentData_dynamic._as(renderObject.parentData),
        t1 = this.id;
      if (parentData.id !== t1) {
        parentData.set$id(0, t1);
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  B.CustomLayout.prototype = {
    createRenderObject$1(context) {
      var t1 = new B.RenderCustomLayout(this.delegate, 0, null, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer), this.$ti._eval$1("RenderCustomLayout<1>"));
      t1.RenderObject$0();
      t1.addAll$1(0, null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderCustomLayout_dynamic._as(renderObject);
      t1 = renderObject.$ti._eval$1("CustomLayoutDelegate<1>")._as(this.delegate);
      if (renderObject._custom_layout0$_delegate !== t1)
        renderObject.markNeedsLayout$0();
      renderObject.set$_custom_layout0$_delegate(t1);
    }
  };
  B.RenderCustomLayout.prototype = {
    setupParentData$1(child) {
      var t1;
      type$.RenderBox._as(child);
      t1 = this.$ti._eval$1("CustomLayoutParentData<1>");
      if (!t1._is(child.parentData))
        child.parentData = new B.CustomLayoutParentData(null, null, D.Offset_0_0, t1);
    },
    get$childrenTable() {
      var childParentData, t2,
        t1 = this.$ti,
        res = C.LinkedHashMap_LinkedHashMap$_empty(t1._precomputed1, type$.RenderBox),
        child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = t1._eval$1("CustomLayoutParentData<1>"); child != null;) {
        childParentData = t1._as(child.parentData);
        t2 = childParentData.id;
        t2.toString;
        res.$indexSet(0, t2, child);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      return res;
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new B.RenderCustomLayout_computeMinIntrinsicWidth_closure(), this.get$childrenTable(), height, false, D.Axis_0);
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new B.RenderCustomLayout_computeMaxIntrinsicWidth_closure(), this.get$childrenTable(), height, true, D.Axis_0);
    },
    computeMinIntrinsicHeight$1(width) {
      C._asDouble(width);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new B.RenderCustomLayout_computeMinIntrinsicHeight_closure(), this.get$childrenTable(), width, false, D.Axis_1);
    },
    computeMaxIntrinsicHeight$1(width) {
      C._asDouble(width);
      return this._custom_layout0$_delegate.getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(new B.RenderCustomLayout_computeMaxIntrinsicHeight_closure(), this.get$childrenTable(), width, true, D.Axis_1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this._custom_layout0$_delegate.computeDistanceToActualBaseline$2(baseline, this.get$childrenTable());
    },
    performLayout$0() {
      this._box$_size = this._custom_layout0$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false);
    },
    computeDryLayout$1(constraints) {
      return this._custom_layout0$_computeLayout$1(constraints);
    },
    _custom_layout0$_computeLayout$2$dry(constraints, dry) {
      return constraints.constrain$1(this._custom_layout0$_delegate.computeLayout$3$dry(constraints, this.get$childrenTable(), dry));
    },
    _custom_layout0$_computeLayout$1(constraints) {
      return this._custom_layout0$_computeLayout$2$dry(constraints, true);
    },
    paint$2(context, offset) {
      this.defaultPaint$2(context, offset);
      this._custom_layout0$_delegate.additionalPaint$2(context, offset);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    set$_custom_layout0$_delegate(_delegate) {
      this._custom_layout0$_delegate = this.$ti._eval$1("CustomLayoutDelegate<1>")._as(_delegate);
    }
  };
  B.AxisConfiguration.prototype = {};
  B.IntrinsicLayoutDelegate.prototype = {
    getIntrinsicSize$5$childSize$childrenTable$extent$max$sizingDirection(childSize, childrenTable, extent, max, sizingDirection) {
      var t1, t2, childrenHeights, _this = this;
      type$.double_Function_RenderBox_double._as(childSize);
      t1 = C._instanceType(_this);
      t1._eval$1("Map<IntrinsicLayoutDelegate.T,RenderBox>")._as(childrenTable);
      t1 = t1._eval$1("IntrinsicLayoutDelegate.T");
      t2 = type$.double;
      if (sizingDirection === D.Axis_0)
        return _this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenTable.map$2$1(childrenTable, new B.IntrinsicLayoutDelegate_getIntrinsicSize_closure(_this, childSize), t1, t2), true).size;
      else {
        childrenHeights = childrenTable.map$2$1(childrenTable, new B.IntrinsicLayoutDelegate_getIntrinsicSize_closure0(_this, childSize), t1, t2);
        return _this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenHeights, childrenHeights, true).size;
      }
    },
    computeLayout$3$dry(constraints, childrenTable, dry) {
      var sizeMap, t2, t3, t4, t5, t6, childEntry, t7, t8, t9, result, boxSize, hconf, vconf, _this = this,
        t1 = C._instanceType(_this);
      t1._eval$1("Map<IntrinsicLayoutDelegate.T,RenderBox>")._as(childrenTable);
      t1 = t1._eval$1("IntrinsicLayoutDelegate.T");
      sizeMap = C.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Size);
      for (t2 = new C.LinkedHashMapEntriesIterable(childrenTable, C._instanceType(childrenTable)._eval$1("LinkedHashMapEntriesIterable<1,2>")).get$iterator(0), t3 = type$.Object, t4 = type$._CachedLayoutCalculation_BoxConstraints_Size, t5 = type$.Size_Function_BoxConstraints, t6 = type$.BoxConstraints; t2.moveNext$0();) {
        childEntry = t2.__js_helper$_current;
        t7 = childEntry.key;
        t8 = childEntry.value;
        if (dry) {
          t9 = t8.get$_computeDryLayout();
          C.checkTypeBound(t6, t3, "Input", "_computeIntrinsics");
          t4._as(D.C__DryLayout);
          t5._as(t9);
          C.checkTypeBound(t6, t3, "Input", "_computeWithTimeline");
          result = D.C__DryLayout.memoize$3(t8._layoutCacheStorage, N.BoxConstraints_0Yu, t9);
          boxSize = result;
        } else {
          t8.layout$2$parentUsesSize(N.BoxConstraints_0Yu, true);
          boxSize = t8._box$_size;
          if (boxSize == null)
            boxSize = C.throwExpression(C.StateError$("RenderBox was not laid out: " + C.getRuntimeTypeOfDartObject(t8).toString$0(0) + "#" + C.shortHash(t8)));
        }
        sizeMap.$indexSet(0, t7, boxSize);
      }
      t2 = type$.double;
      hconf = _this.performHorizontalIntrinsicLayout$1$childrenWidths(sizeMap.map$2$1(sizeMap, new B.IntrinsicLayoutDelegate_computeLayout_closure(_this), t1, t2));
      t3 = sizeMap.map$2$1(sizeMap, new B.IntrinsicLayoutDelegate_computeLayout_closure0(_this), t1, t2);
      vconf = _this.performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenTable.map$2$1(childrenTable, new B.IntrinsicLayoutDelegate_computeLayout_closure1(_this, dry), t1, t2), t3);
      if (!dry)
        childrenTable.forEach$1(0, new B.IntrinsicLayoutDelegate_computeLayout_closure2(_this, hconf, vconf));
      return new C.Size(hconf.size, vconf.size);
    }
  };
  B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.CustomLayoutParentData_dynamic; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.CustomLayoutParentData_dynamic; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  B.EqnArrayParentData.prototype = {};
  B.EqnArray.prototype = {
    createRenderObject$1(context) {
      var _this = this;
      return B.RenderEqnArray$(_this.arrayskip, _this.hlines, _this.jotSize, _this.rowSpacings, _this.ruleThickness);
    }
  };
  B.RenderEqnArray.prototype = {
    setupParentData$1(child) {
      if (!(child.parentData instanceof B.EqnArrayParentData))
        child.parentData = new B.EqnArrayParentData(null, null, D.Offset_0_0);
    },
    computeDryLayout$1(constraints) {
      return this._computeLayout$1(constraints);
    },
    performLayout$0() {
      this._box$_size = this._computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false);
    },
    _computeLayout$2$dry(constraints, dry) {
      var t1, t2, t3, t4, t5, t6, result, boxSize, childColWidth, i, t7, childSize, nonAligningChildrenWidth, aligningChildrenWidth, width, t8, t9, t10, t11, index, vPos, childParentData, t12, t13, hPos, layoutHeight, layoutDepth, _this = this, _s5_ = "Input",
        _s18_ = "_computeIntrinsics",
        _s20_ = "_computeWithTimeline",
        _s28_ = "RenderBox was not laid out: ",
        nonAligningSizes = C._setArrayType([], type$.JSArray_Size),
        child = _this.ContainerRenderObjectMixin__firstChild,
        colWidths = C._setArrayType([], type$.JSArray_double),
        sizeMap = C.LinkedHashMap_LinkedHashMap$_empty(type$.RenderBox, type$.Size);
      for (t1 = type$.EqnArrayParentData, t2 = type$.Object, t3 = type$._CachedLayoutCalculation_BoxConstraints_Size, t4 = type$.Size_Function_BoxConstraints, t5 = type$.BoxConstraints; child != null;) {
        if (child instanceof B.RenderLine) {
          child.set$alignColWidth(null);
          if (dry) {
            t6 = child.get$_computeDryLayout();
            C.checkTypeBound(t5, t2, _s5_, _s18_);
            t3._as(D.C__DryLayout);
            t4._as(t6);
            C.checkTypeBound(t5, t2, _s5_, _s20_);
            result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, N.BoxConstraints_0Yu, t6);
            boxSize = result;
          } else {
            child.layout$2$parentUsesSize(N.BoxConstraints_0Yu, true);
            boxSize = child._box$_size;
            if (boxSize == null)
              boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
          }
          childColWidth = child.alignColWidth;
          if (childColWidth != null)
            for (i = 0; t6 = childColWidth.length, i < t6; ++i)
              if (i >= colWidths.length)
                D.JSArray_methods.add$1(colWidths, childColWidth[i]);
              else {
                t7 = colWidths[i];
                if (!(i < t6))
                  return C.ioore(childColWidth, i);
                D.JSArray_methods.$indexSet(colWidths, i, Math.max(t7, childColWidth[i]));
              }
          else
            D.JSArray_methods.add$1(nonAligningSizes, boxSize);
          childSize = boxSize;
        } else {
          if (dry) {
            t6 = child.get$_computeDryLayout();
            C.checkTypeBound(t5, t2, _s5_, _s18_);
            t3._as(D.C__DryLayout);
            t4._as(t6);
            C.checkTypeBound(t5, t2, _s5_, _s20_);
            result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, N.BoxConstraints_0Yu, t6);
            boxSize = result;
          } else {
            child.layout$2$parentUsesSize(N.BoxConstraints_0Yu, true);
            boxSize = child._box$_size;
            if (boxSize == null)
              boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
          }
          if (0 >= colWidths.length)
            return C.ioore(colWidths, 0);
          D.JSArray_methods.$indexSet(colWidths, 0, Math.max(colWidths[0], boxSize._dx));
          childSize = boxSize;
        }
        sizeMap.$indexSet(0, child, childSize);
        child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
      }
      nonAligningChildrenWidth = B.IterableDoubleExtension_get_maxOrNull(new C.MappedListIterable(nonAligningSizes, type$.double_Function_Size._as(new B.RenderEqnArray__computeLayout_closure()), type$.MappedListIterable_Size_double));
      if (nonAligningChildrenWidth == null)
        nonAligningChildrenWidth = 0;
      aligningChildrenWidth = B.IterableDoubleExtension_get_sum(colWidths);
      width = Math.max(nonAligningChildrenWidth, aligningChildrenWidth);
      t2 = !dry;
      if (t2)
        D.JSArray_methods.add$1(_this.hlinePos, 0);
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (t3 = _this._hlines, t4 = J.getInterceptor$asx(t3), t5 = _this._arrayskip, t6 = 0.3 * t5, t7 = _this._jotSize, t8 = _this._rowSpacings, t5 = 0.7 * t5, t9 = (width - aligningChildrenWidth) / 2, t10 = _this.hlinePos, t11 = _this._ruleThickness, index = 1, vPos = 0; child != null;) {
        childParentData = t1._as(child.parentData);
        childSize = sizeMap.$index(0, child);
        if (childSize == null)
          childSize = D.Size_0_0;
        if (child instanceof B.RenderLine && child.alignColWidth != null) {
          child.set$alignColWidth(colWidths);
          child.layout$2$parentUsesSize(new C.BoxConstraints(0, aligningChildrenWidth, 0, 1 / 0), true);
          if (0 >= colWidths.length)
            return C.ioore(colWidths, 0);
          t12 = colWidths[0];
          t13 = child.alignColWidth;
          if (0 >= t13.length)
            return C.ioore(t13, 0);
          hPos = t9 + t12 - t13[0];
        } else
          hPos = (width - childSize._dx) / 2;
        if (dry)
          layoutHeight = 0;
        else {
          t12 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t12.toString;
          layoutHeight = t12;
        }
        if (dry)
          layoutDepth = childSize._dy;
        else {
          t12 = child._box$_size;
          if (t12 == null)
            t12 = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
          t13 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t13.toString;
          layoutDepth = t12._dy - t13;
        }
        vPos += Math.max(layoutHeight, t5);
        if (t2) {
          t12 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t12.toString;
          childParentData.offset = new C.Offset(hPos, vPos - t12);
        }
        t12 = Math.max(layoutDepth, t6);
        t13 = index - 1;
        if (!(t13 < t8.length))
          return C.ioore(t8, t13);
        vPos += t12 + t7 + t8[t13];
        if (t2)
          D.JSArray_methods.add$1(t10, vPos);
        vPos += t4.$index(t3, index) !== A.MatrixSeparatorStyle_2 ? t11 : 0;
        ++index;
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      if (t2)
        _this.width = width;
      return new C.Size(width, vPos);
    },
    _computeLayout$1(constraints) {
      return this._computeLayout$2$dry(constraints, true);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, i, t6, t7, t8, t9, _this = this;
      _this.defaultPaint$2(context, offset);
      for (t1 = _this._hlines, t2 = J.getInterceptor$asx(t1), t3 = _this.hlinePos, t4 = _this._ruleThickness, t5 = t4 / 2, i = 0; i < t2.get$length(t1); ++i)
        if (t2.$index(t1, i) !== A.MatrixSeparatorStyle_2) {
          if (context._object$_canvas == null)
            context._startRecording$0();
          t6 = context._object$_canvas;
          t6.toString;
          if (!(i < t3.length))
            return C.ioore(t3, i);
          t7 = t3[i] + t5;
          t8 = _this.width;
          t9 = $.$get$_renderer().createPaint$0();
          t9.set$strokeWidth(t4);
          t6.drawLine$3(new C.Offset(0, t7), new C.Offset(t8, t7), t9);
        }
    }
  };
  B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.EqnArrayParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.EqnArrayParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    }
  };
  B.LayoutBuilderPreserveBaseline.prototype = {
    get$builder() {
      return this.builder;
    },
    createRenderObject$1(context) {
      var t1 = new B._RenderLayoutBuilderPreserveBaseline(null, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    }
  };
  B._RenderLayoutBuilderPreserveBaseline.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      var t1;
      type$.TextBaseline._as(baseline);
      t1 = this.RenderObjectWithChildMixin__child;
      return t1 == null ? null : t1.getDistanceToActualBaseline$1(baseline);
    },
    computeMinIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      C._asDouble(height);
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      C._asDouble(width);
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      C._asDouble(width);
      return 0;
    },
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$2$3(D.C__DryLayout, constraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      return t1 == null ? D.Size_0_0 : t1;
    },
    performLayout$0() {
      var _this = this,
        constraints = type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(_this)),
        t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        t1.layout$2$parentUsesSize(constraints, true);
        _this._box$_size = constraints.constrain$1(_this.RenderObjectWithChildMixin__child.get$size(0));
      } else
        _this._box$_size = new C.Size(C.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), C.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    hitTestChildren$2$position(result, position) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1.hitTest$2$position(result, position);
      return t1 === true;
    },
    paint$2(context, offset) {
      var t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        context.paintChild$2(t1, offset);
    }
  };
  B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin.prototype = {
    attach$1(owner) {
      var t1;
      this.super$RenderObject$attach(owner);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.attach$1(owner);
    },
    detach$0(_) {
      var t1;
      this.super$RenderObject$detach(0);
      t1 = this.RenderObjectWithChildMixin__child;
      if (t1 != null)
        t1.detach$0(0);
    }
  };
  B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder.prototype = {};
  B.LineParentData.prototype = {
    toString$0(_) {
      var _this = this;
      return _this.super$BoxParentData$toString(0) + "; canBreakBefore = false; customSize = " + (_this.customCrossSize != null) + "; trailingMargin = " + C.S(_this.trailingMargin) + "; alignerOrSpacer = " + _this.alignerOrSpacer;
    },
    set$customCrossSize(customCrossSize) {
      this.customCrossSize = type$.nullable_BoxConstraints_Function_double_double._as(customCrossSize);
    }
  };
  B.LineElement.prototype = {
    applyParentData$1(renderObject) {
      var targetParent,
        parentData = type$.LineParentData._as(renderObject.parentData),
        t1 = this.customCrossSize,
        needsLayout = !J.$eq$(parentData.customCrossSize, t1);
      if (needsLayout)
        parentData.set$customCrossSize(t1);
      t1 = this.trailingMargin;
      if (parentData.trailingMargin !== t1) {
        parentData.trailingMargin = t1;
        needsLayout = true;
      }
      t1 = this.alignerOrSpacer;
      if (parentData.alignerOrSpacer !== t1) {
        parentData.alignerOrSpacer = t1;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  B.Line.prototype = {
    getEffectiveTextDirection$1(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      return t1;
    },
    createRenderObject$1(context) {
      return B.RenderLine$(null, G.CrossAxisAlignment_4, 0, 0, D.TextBaseline_0, this.getEffectiveTextDirection$1(context));
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderLine._as(renderObject);
      renderObject.set$crossAxisAlignment(G.CrossAxisAlignment_4);
      renderObject.set$minDepth(0);
      renderObject.set$minHeight(0, 0);
      renderObject.set$textBaseline(0, D.TextBaseline_0);
      renderObject.set$textDirection(this.getEffectiveTextDirection$1(context));
      return renderObject;
    }
  };
  B.RenderLine.prototype = {
    set$crossAxisAlignment(value) {
      if (this._line$_crossAxisAlignment !== value) {
        this._line$_crossAxisAlignment = value;
        this.markNeedsLayout$0();
      }
    },
    set$minDepth(value) {
      if (this._line$_minDepth !== value) {
        this._line$_minDepth = value;
        this.markNeedsLayout$0();
      }
    },
    set$minHeight(_, value) {
      if (this._line$_minHeight !== value) {
        this._line$_minHeight = value;
        this.markNeedsLayout$0();
      }
    },
    set$textBaseline(_, value) {
      if (this._line$_textBaseline !== value) {
        this._line$_textBaseline = value;
        this.markNeedsLayout$0();
      }
    },
    set$textDirection(value) {
      if (this._line$_textDirection != value) {
        this._line$_textDirection = value;
        this.markNeedsLayout$0();
      }
    },
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof B.LineParentData))
        child.parentData = new B.LineParentData(null, null, D.Offset_0_0);
    },
    _getIntrinsicSize$3$childSize$extent$sizingDirection(childSize, extent, sizingDirection) {
      var child, t1, inflexibleSpace, t2, t3, t4, t5, maxCrossSize, t6, result;
      type$.double_Function_RenderBox_double._as(childSize);
      child = this.ContainerRenderObjectMixin__firstChild;
      if (sizingDirection === D.Axis_0) {
        for (t1 = type$.LineParentData, inflexibleSpace = 0; child != null;) {
          t2 = childSize.call$2(child, extent);
          if (typeof t2 !== "number")
            return C.iae(t2);
          inflexibleSpace += t2;
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return inflexibleSpace;
      } else {
        for (t1 = type$.LineParentData, t2 = type$.Object, t3 = type$._CachedLayoutCalculation_double_double, t4 = type$.double_Function_double, t5 = type$.double, maxCrossSize = 0; child != null;) {
          t6 = child.get$computeMaxIntrinsicWidth();
          C.checkTypeBound(t5, t2, "Input", "_computeIntrinsics");
          t3._as(D._IntrinsicDimension_1);
          t4._as(t6);
          C.checkTypeBound(t5, t2, "Input", "_computeWithTimeline");
          result = D._IntrinsicDimension_1.memoize$3(child._layoutCacheStorage, 1 / 0, t6);
          maxCrossSize = Math.max(maxCrossSize, childSize.call$2(child, result));
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return maxCrossSize;
      }
    },
    computeMinIntrinsicWidth$1(height) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderLine_computeMinIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMaxIntrinsicWidth$1(height) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderLine_computeMaxIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMinIntrinsicHeight$1(width) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderLine_computeMinIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeMaxIntrinsicHeight$1(width) {
      return this._getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderLine_computeMaxIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this.maxHeightAboveBaseline;
    },
    computeDryLayout$1(constraints) {
      return this._line$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this._box$_size = this._line$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false);
    },
    _line$_computeLayout$2$dry(constraints, dry) {
      var t2, t3, t4, t5, maxHeightAboveBaseline, maxDepthBelowBaseline, childParentData, t6, result, boxSize, distance, _i, childConstraints, t7, colWidths, caretOffsets, mainPos, lastColPosition, childSize, size, alignColWidth, aligner, index, alignerOrSpacer, t8, t9, t10, _this = this, _s5_ = "Input",
        _s18_ = "_computeIntrinsics",
        _s20_ = "_computeWithTimeline",
        _s28_ = "RenderBox was not laid out: ",
        child = _this.ContainerRenderObjectMixin__firstChild,
        t1 = type$.JSArray_RenderBox,
        relativeChildren = C._setArrayType([], t1),
        alignerAndSpacers = C._setArrayType([], t1),
        sizeMap = C.LinkedHashMap_LinkedHashMap$_empty(type$.RenderBox, type$.Size);
      for (t1 = type$.LineParentData, t2 = type$.Object, t3 = type$._CachedLayoutCalculation_BoxConstraints_Size, t4 = type$.Size_Function_BoxConstraints, t5 = type$.BoxConstraints, maxHeightAboveBaseline = 0, maxDepthBelowBaseline = 0; child != null;) {
        childParentData = t1._as(child.parentData);
        if (childParentData.customCrossSize != null)
          D.JSArray_methods.add$1(relativeChildren, child);
        else if (childParentData.alignerOrSpacer)
          D.JSArray_methods.add$1(alignerAndSpacers, child);
        else {
          if (dry) {
            t6 = child.get$_computeDryLayout();
            C.checkTypeBound(t5, t2, _s5_, _s18_);
            t3._as(D.C__DryLayout);
            t4._as(t6);
            C.checkTypeBound(t5, t2, _s5_, _s20_);
            result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, N.BoxConstraints_0Yu, t6);
            boxSize = result;
          } else {
            child.layout$2$parentUsesSize(N.BoxConstraints_0Yu, true);
            boxSize = child._box$_size;
            if (boxSize == null)
              boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
          }
          sizeMap.$indexSet(0, child, boxSize);
          if (dry)
            distance = 0;
          else {
            t6 = child.getDistanceToBaseline$1(_this._line$_textBaseline);
            t6.toString;
            distance = t6;
          }
          maxHeightAboveBaseline = Math.max(maxHeightAboveBaseline, distance);
          maxDepthBelowBaseline = Math.max(maxDepthBelowBaseline, boxSize._dy - distance);
        }
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      for (t6 = relativeChildren.length, _i = 0; _i < relativeChildren.length; relativeChildren.length === t6 || (0, C.throwConcurrentModificationError)(relativeChildren), ++_i) {
        child = relativeChildren[_i];
        childConstraints = t1._as(child.parentData).customCrossSize.call$2(maxHeightAboveBaseline, maxDepthBelowBaseline);
        if (dry) {
          C.checkTypeBound(t5, t2, _s5_, _s18_);
          t3._as(D.C__DryLayout);
          t7 = t4._as(child.get$_computeDryLayout());
          C.checkTypeBound(t5, t2, _s5_, _s20_);
          result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, childConstraints, t7);
          boxSize = result;
        } else {
          child.layout$2$parentUsesSize(childConstraints, true);
          boxSize = child._box$_size;
          if (boxSize == null)
            boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
        }
        sizeMap.$indexSet(0, child, boxSize);
        if (dry)
          distance = 0;
        else {
          t7 = child.getDistanceToBaseline$1(_this._line$_textBaseline);
          t7.toString;
          distance = t7;
        }
        maxHeightAboveBaseline = Math.max(maxHeightAboveBaseline, distance);
        maxDepthBelowBaseline = Math.max(maxDepthBelowBaseline, boxSize._dy - distance);
      }
      maxHeightAboveBaseline = Math.max(maxHeightAboveBaseline, _this._line$_minHeight);
      maxDepthBelowBaseline = Math.max(maxDepthBelowBaseline, _this._line$_minDepth);
      child = _this.ContainerRenderObjectMixin__firstChild;
      t6 = type$.JSArray_double;
      colWidths = C._setArrayType([], t6);
      caretOffsets = C._setArrayType([0], t6);
      for (t6 = !dry, mainPos = 0, lastColPosition = 0; child != null;) {
        childParentData = t1._as(child.parentData);
        childSize = sizeMap.$index(0, child);
        if (childSize == null)
          childSize = D.Size_0_0;
        if (childParentData.alignerOrSpacer) {
          childConstraints = E.BoxConstraints$tightFor(null, 0);
          if (dry) {
            t7 = child.get$_computeDryLayout();
            C.checkTypeBound(t5, t2, _s5_, _s18_);
            t3._as(D.C__DryLayout);
            t4._as(t7);
            C.checkTypeBound(t5, t2, _s5_, _s20_);
            result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, childConstraints, t7);
            boxSize = result;
          } else {
            child.layout$2$parentUsesSize(childConstraints, true);
            boxSize = child._box$_size;
            if (boxSize == null)
              boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
          }
          D.JSArray_methods.add$1(colWidths, mainPos - lastColPosition);
          childSize = boxSize;
          lastColPosition = mainPos;
        }
        if (t6) {
          t7 = child.getDistanceToBaseline$1(D.TextBaseline_0);
          t7.toString;
          childParentData.offset = new C.Offset(mainPos, maxHeightAboveBaseline - t7);
        }
        mainPos += childSize._dx + childParentData.trailingMargin;
        D.JSArray_methods.add$1(caretOffsets, mainPos);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      D.JSArray_methods.add$1(colWidths, mainPos - lastColPosition);
      t2 = maxHeightAboveBaseline + maxDepthBelowBaseline;
      size = constraints.constrain$1(new C.Size(mainPos, t2));
      if (t6) {
        _this.set$__RenderLine_caretOffsets_A(type$.List_double._as(caretOffsets));
        _this._line$_overflow = mainPos - size._dx;
        _this.maxHeightAboveBaseline = maxHeightAboveBaseline;
      } else
        return size;
      if (alignerAndSpacers.length === 0)
        return size;
      t3 = _this.alignColWidth;
      if (t3 == null) {
        _this.set$alignColWidth(colWidths);
        return size;
      }
      alignColWidth = C.List_List$of(t3, false, type$.double);
      D.JSArray_methods.$indexSet(alignColWidth, 0, D.JSArray_methods.get$first(colWidths));
      _this.set$alignColWidth(alignColWidth);
      for (t3 = alignerAndSpacers.length, t4 = alignColWidth.length, t5 = t4 - 1, aligner = true, index = 0, _i = 0; _i < alignerAndSpacers.length; alignerAndSpacers.length === t3 || (0, C.throwConcurrentModificationError)(alignerAndSpacers), ++_i) {
        alignerOrSpacer = alignerAndSpacers[_i];
        if (aligner)
          alignerOrSpacer.layout$2$parentUsesSize(E.BoxConstraints$tightFor(null, 0), true);
        else {
          if (!(index < t4))
            return C.ioore(alignColWidth, index);
          t6 = alignColWidth[index];
          t7 = index + 1;
          t8 = t7 < t5 ? alignColWidth[t7] : 0;
          t9 = colWidths.length;
          if (!(index < t9))
            return C.ioore(colWidths, index);
          t10 = colWidths[index];
          t7 = t7 < t9 - 1 ? colWidths[t7] : 0;
          alignerOrSpacer.layout$2$parentUsesSize(E.BoxConstraints$tightFor(null, t6 + t8 - t10 - t7), true);
        }
        aligner = !aligner;
        ++index;
      }
      child = _this.ContainerRenderObjectMixin__firstChild;
      t3 = _this.__RenderLine_caretOffsets_A;
      t3 === $ && C.throwLateFieldNI("caretOffsets");
      D.JSArray_methods.clear$0(t3);
      D.JSArray_methods.add$1(t3, 0);
      for (mainPos = 0; child != null;) {
        childParentData = t1._as(child.parentData);
        t3 = child.getDistanceToBaseline$1(D.TextBaseline_0);
        t3.toString;
        childParentData.offset = new C.Offset(mainPos, maxHeightAboveBaseline - t3);
        t3 = child._box$_size;
        if (t3 == null)
          t3 = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
        mainPos += t3._dx + childParentData.trailingMargin;
        D.JSArray_methods.add$1(_this.__RenderLine_caretOffsets_A, mainPos);
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      size = constraints.constrain$1(new C.Size(mainPos, t2));
      _this._line$_overflow = mainPos - size._dx;
      return size;
    },
    _line$_computeLayout$1(constraints) {
      return this._line$_computeLayout$2$dry(constraints, true);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t2, _this = this,
        t1 = _this._line$_overflow;
      t1.toString;
      if (!(t1 > 1e-10)) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      if (_this.get$size(0).get$isEmpty(0))
        return;
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && C.throwLateFieldNI("_needsCompositing");
      t2 = _this.get$size(0);
      context.pushClipRect$4(t1, offset, new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$defaultPaint());
    },
    describeApproximatePaintClip$1(child) {
      var t1 = this._line$_overflow;
      t1.toString;
      if (t1 > 1e-10) {
        t1 = this.get$size(0);
        t1 = new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    toStringShort$0() {
      var header = this.super$RenderObject$toStringShort(),
        t1 = this._line$_overflow;
      return t1 != null && t1 > 1e-10 ? header + " OVERFLOWING" : header;
    },
    set$__RenderLine_caretOffsets_A(__RenderLine_caretOffsets_A) {
      this.__RenderLine_caretOffsets_A = type$.List_double._as(__RenderLine_caretOffsets_A);
    },
    set$alignColWidth(alignColWidth) {
      this.alignColWidth = type$.nullable_List_double._as(alignColWidth);
    }
  };
  B._RenderLine_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.LineParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.LineParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    }
  };
  B.EditableLine.prototype = {
    getEffectiveTextDirection$1(context) {
      var t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      return t1;
    },
    createRenderObject$1(context) {
      var _this = this;
      return B.RenderEditableLine$(G.CrossAxisAlignment_4, _this.cursorBlinkOpacityController, _this.cursorColor, _this.cursorHeight, _this.cursorOffset, _this.cursorRadius, _this.cursorWidth, _this.devicePixelRatio, _this.endHandleLayerLink, _this.hintingColor, 0, 0, _this.node, _this.paintCursorAboveText, _this.preferredLineHeight, _this.selection, _this.selectionColor, _this.showCursor, _this.startHandleLayerLink, D.TextBaseline_0, _this.getEffectiveTextDirection$1(context));
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2, t3, _this = this;
      type$.RenderEditableLine._as(renderObject);
      renderObject.set$crossAxisAlignment(G.CrossAxisAlignment_4);
      t1 = _this.cursorBlinkOpacityController;
      t2 = renderObject._line_editable$_cursorBlinkOpacityController;
      t3 = renderObject.get$onCursorOpacityChanged();
      t2.removeListener$1(0, t3);
      renderObject._line_editable$_cursorBlinkOpacityController = t1;
      t1.addListener$1(0, t3);
      renderObject.markNeedsPaint$0();
      renderObject._cursorColor = _this.cursorColor;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorOffset = _this.cursorOffset;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorRadius = _this.cursorRadius;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorWidth = _this.cursorWidth;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_cursorHeight = _this.cursorHeight;
      renderObject.markNeedsPaint$0();
      t1 = _this.devicePixelRatio;
      if (renderObject._line_editable$_devicePixelRatio !== t1) {
        renderObject._line_editable$_devicePixelRatio = t1;
        renderObject.markNeedsPaint$0();
      }
      renderObject._hintingColor = _this.hintingColor;
      renderObject.markNeedsPaint$0();
      renderObject.set$minDepth(0);
      renderObject.set$minHeight(0, 0);
      renderObject._paintCursorAboveText = _this.paintCursorAboveText;
      renderObject.markNeedsPaint$0();
      renderObject.preferredLineHeight = _this.preferredLineHeight;
      t1 = _this.selection;
      if (!renderObject._line_editable$_selection.$eq(0, t1)) {
        renderObject._line_editable$_selection = t1;
        renderObject.markNeedsPaint$0();
      }
      renderObject._line_editable$_selectionColor = _this.selectionColor;
      renderObject.markNeedsPaint$0();
      renderObject._line_editable$_showCursor = _this.showCursor;
      renderObject.markNeedsPaint$0();
      renderObject.set$textBaseline(0, D.TextBaseline_0);
      renderObject.set$textDirection(_this.getEffectiveTextDirection$1(context));
      return renderObject;
    }
  };
  B.RenderEditableLine.prototype = {
    onCursorOpacityChanged$0() {
      var t1, _this = this;
      if (_this.get$showCursor()) {
        t1 = _this._line_editable$_selection;
        t1 = t1.start === t1.end && _this.get$isSelectionInRange();
      } else
        t1 = false;
      if (t1)
        _this.markNeedsPaint$0();
    },
    get$showCursor() {
      return this._line_editable$_showCursor;
    },
    get$isSelectionInRange() {
      var t1 = this._line_editable$_selection;
      return t1.end >= 0 && t1.start <= this.ContainerRenderObjectMixin__childCount;
    },
    hitTestSelf$1(position) {
      return true;
    },
    paint$2(context, offset) {
      var t1, startOffset, endOffset, t2, t3, t4, t5, cursorOffset, _this = this,
        _s12_ = "caretOffsets";
      if (_this.get$isSelectionInRange()) {
        t1 = _this.__RenderLine_caretOffsets_A;
        t1 === $ && C.throwLateFieldNI(_s12_);
        startOffset = D.JSArray_methods.$index(t1, Math.max(0, _this._line_editable$_selection.start));
        endOffset = D.JSArray_methods.$index(_this.__RenderLine_caretOffsets_A, Math.min(_this.ContainerRenderObjectMixin__childCount, _this._line_editable$_selection.end));
        t1 = _this._line_editable$_selection;
        if (t1.start === t1.end) {
          t1 = context.get$canvas(0);
          t2 = _this.get$size(0);
          t3 = offset._dx;
          t4 = offset._dy;
          t5 = $.$get$_renderer().createPaint$0();
          t5.set$style(0, D.PaintingStyle_0);
          t5.set$color(0, _this._hintingColor);
          t1.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t5);
        } else {
          t1 = context.get$canvas(0);
          t2 = new C.Rect(startOffset, 0, endOffset, _this.get$size(0)._dy).shift$1(offset);
          t3 = $.$get$_renderer().createPaint$0();
          t3.set$style(0, D.PaintingStyle_0);
          t3.set$color(0, _this._line_editable$_selectionColor);
          t1.drawRect$2(t2, t3);
        }
      }
      if (_this._paintCursorAboveText)
        _this.super$RenderLine$paint(context, offset);
      if (_this.get$showCursor()) {
        t1 = _this._line_editable$_selection;
        t1 = t1.start === t1.end && _this.get$isSelectionInRange();
      } else
        t1 = false;
      if (t1) {
        t1 = _this.__RenderLine_caretOffsets_A;
        t1 === $ && C.throwLateFieldNI(_s12_);
        t2 = _this._line_editable$_selection.baseOffset;
        if (!(t2 >= 0 && t2 < t1.length))
          return C.ioore(t1, t2);
        cursorOffset = t1[t2];
        _this._paintCaret$2(context.get$canvas(0), new C.Offset(cursorOffset, _this.get$size(0)._dy).$add(0, offset));
      }
      if (!_this._paintCursorAboveText)
        _this.super$RenderLine$paint(context, offset);
      return;
    },
    _paintCaret$2(canvas, baselineOffset) {
      var _caretPrototype, caretRect, caretPosition, pixelMultiple, pixelPerfectOffsetX, _this = this,
        paint = $.$get$_renderer().createPaint$0(),
        t1 = _this._cursorColor,
        t2 = _this._line_editable$_cursorBlinkOpacityController;
      t2.get$value(t2);
      paint.set$color(0, t1.withOpacity$1(0));
      switch (C.defaultTargetPlatform().index) {
        case 2:
        case 4:
          t1 = _this._line_editable$_cursorWidth;
          t2 = _this._line_editable$_cursorHeight;
          _caretPrototype = new C.Rect(0, 0, D.JSInt_methods.$add(0, t1), 0 + (t2 + 2));
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          t1 = _this._line_editable$_cursorWidth;
          t2 = _this._line_editable$_cursorHeight;
          _caretPrototype = new C.Rect(0, 0, D.JSInt_methods.$add(0, t1), 0 + t2);
          break;
        default:
          _caretPrototype = null;
      }
      t1 = _caretPrototype.shift$1(baselineOffset);
      t2 = _this._line_editable$_cursorHeight;
      caretRect = t1.shift$1(new C.Offset(0, -0.9 * t2)).shift$1(_this._line_editable$_cursorOffset);
      caretPosition = C.MatrixUtils_transformPoint(_this.getTransformTo$1(0, null), new C.Offset(caretRect.left, caretRect.top));
      pixelMultiple = 1 / _this._line_editable$_devicePixelRatio;
      t1 = caretPosition._dx;
      pixelPerfectOffsetX = isFinite(t1) ? D.JSNumber_methods.round$0(t1 / pixelMultiple) * pixelMultiple - t1 : 0;
      t1 = caretPosition._dy;
      canvas.drawRRect$2(E.RRect$fromRectAndRadius(caretRect.shift$1(new C.Offset(pixelPerfectOffsetX, isFinite(t1) ? D.JSNumber_methods.round$0(t1 / pixelMultiple) * pixelMultiple - t1 : 0)), _this._line_editable$_cursorRadius), paint);
    }
  };
  B.MinDimension.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new B.RenderMinDimension(_this.minHeight, _this.minDepth, _this.topPadding, _this.bottomPadding, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderMinDimension._as(renderObject);
      t1 = _this.minHeight;
      if (renderObject._minHeight !== t1) {
        renderObject._minHeight = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.minDepth;
      if (renderObject._minDepth !== t1) {
        renderObject._minDepth = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.topPadding;
      if (renderObject._topPadding !== t1) {
        renderObject._topPadding = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.bottomPadding;
      if (renderObject._bottomPadding !== t1) {
        renderObject._bottomPadding = t1;
        renderObject.markNeedsLayout$0();
      }
      return renderObject;
    }
  };
  B.RenderMinDimension.prototype = {
    computeMinIntrinsicHeight$1(width) {
      var _this = this;
      C._asDouble(width);
      return Math.max(_this._minHeight + _this._minDepth, _this.super$RenderShiftedBox$computeMinIntrinsicHeight(width) + _this._topPadding + _this._bottomPadding);
    },
    computeMaxIntrinsicHeight$1(width) {
      var _this = this;
      C._asDouble(width);
      return Math.max(_this._minHeight + _this._minDepth, _this.super$RenderShiftedBox$computeMaxIntrinsicHeight(width) + _this._topPadding + _this._bottomPadding);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this.distanceToBaseline;
    },
    computeDryLayout$1(constraints) {
      return this._min_dimension$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this._box$_size = this._min_dimension$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false);
    },
    _min_dimension$_computeLayout$2$dry(constraints, dry) {
      var childSize, childHeight, t2, height, depth, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      t1.toString;
      childSize = B.RenderBoxLayout_getLayoutSize(t1, constraints, dry);
      if (dry)
        childHeight = 0;
      else {
        t2 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
        t2.toString;
        childHeight = t2;
      }
      height = Math.max(_this._minHeight, childHeight + _this._topPadding);
      depth = Math.max(_this._minDepth, childSize._dy - childHeight + _this._bottomPadding);
      if (!dry) {
        type$.BoxParentData._as(t1.parentData).offset = new C.Offset(0, height - childHeight);
        _this.distanceToBaseline = height;
      }
      return constraints.constrain$1(new C.Size(childSize._dx, height + depth));
    },
    _min_dimension$_computeLayout$1(constraints) {
      return this._min_dimension$_computeLayout$2$dry(constraints, true);
    }
  };
  B._ScriptPos.prototype = {
    _enumToString$0() {
      return "_ScriptPos." + this._name;
    }
  };
  B.Multiscripts.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        t1 = _this.baseResult,
        t2 = _this.subResult,
        t3 = t2 == null,
        t4 = t3 ? _null : t2.options,
        t5 = _this.supResult,
        t6 = t5 == null,
        t7 = t6 ? _null : t5.options,
        t8 = _this.presubResult,
        t9 = t8 == null,
        t10 = t9 ? _null : t8.options,
        t11 = _this.presupResult,
        t12 = t11 == null,
        t13 = t12 ? _null : t11.options,
        t14 = type$._ScriptPos,
        t15 = C._setArrayType([B.CustomLayoutId$(t1.widget, A._ScriptPos_0, t14)], type$.JSArray_Widget);
      if (!t3)
        t15.push(B.CustomLayoutId$(t2.widget, A._ScriptPos_1, t14));
      if (!t6)
        t15.push(B.CustomLayoutId$(t5.widget, A._ScriptPos_2, t14));
      if (!t9)
        t15.push(B.CustomLayoutId$(t8.widget, A._ScriptPos_3, t14));
      if (!t12)
        t15.push(B.CustomLayoutId$(t11.widget, A._ScriptPos_4, t14));
      return new B.CustomLayout(new B.MultiscriptsLayoutDelegate(false, t1.italic, _this.isBaseCharacterBox, t1.options, t4, t7, t10, t13), t15, _null, type$.CustomLayout__ScriptPos);
    }
  };
  B.MultiscriptsLayoutDelegate.prototype = {
    computeDistanceToActualBaseline$2(baseline, childrenTable) {
      type$.Map__ScriptPos_RenderBox._as(childrenTable);
      return this.baselineDistance;
    },
    performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, isComputingIntrinsics) {
      var t1, subSize, supSize, presubSize, presupSize, scriptSpace, extendedSubSize, extendedSupSize, t2, extendedPresubSize, t3, extendedPresupSize, t4, postscriptWidth, prescriptWidth, t5, t6;
      type$.Map__ScriptPos_double._as(childrenWidths);
      t1 = childrenWidths.$index(0, A._ScriptPos_0);
      t1.toString;
      subSize = childrenWidths.$index(0, A._ScriptPos_1);
      supSize = childrenWidths.$index(0, A._ScriptPos_2);
      presubSize = childrenWidths.$index(0, A._ScriptPos_3);
      presupSize = childrenWidths.$index(0, A._ScriptPos_4);
      scriptSpace = new B.Measurement(0.5, A.Unit_0).toLpUnder$1(this.baseOptions);
      extendedSubSize = subSize != null ? subSize + scriptSpace : 0;
      extendedSupSize = supSize != null ? supSize + scriptSpace : 0;
      t2 = presubSize != null;
      extendedPresubSize = t2 ? presubSize + scriptSpace : 0;
      t3 = presupSize != null;
      extendedPresupSize = t3 ? presupSize + scriptSpace : 0;
      t4 = this.italic;
      postscriptWidth = Math.max(extendedSupSize, -t4 + extendedSubSize);
      prescriptWidth = Math.max(extendedPresubSize, extendedPresupSize);
      t5 = C.LinkedHashMap_LinkedHashMap$_empty(type$._ScriptPos, type$.double);
      t5.$indexSet(0, A._ScriptPos_0, prescriptWidth);
      t6 = prescriptWidth + t1;
      t5.$indexSet(0, A._ScriptPos_1, t6 - t4);
      t5.$indexSet(0, A._ScriptPos_2, t6);
      if (t2)
        t5.$indexSet(0, A._ScriptPos_3, prescriptWidth - presubSize);
      if (t3)
        t5.$indexSet(0, A._ScriptPos_4, prescriptWidth - presupSize);
      return new B.AxisConfiguration(postscriptWidth + prescriptWidth + t1, t5, type$.AxisConfiguration__ScriptPos);
    },
    performHorizontalIntrinsicLayout$1$childrenWidths(childrenWidths) {
      return this.performHorizontalIntrinsicLayout$2$childrenWidths$isComputingIntrinsics(childrenWidths, false);
    },
    performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, isComputingIntrinsics) {
      var subSize, supSize, presubSize, presupSize, t2, subHeight, supHeight, presubHeight, presupHeight, t3, t4, t5, t6, postscriptRes, prescriptRes, subShift, supShift, presubShift, presupShift, t7, t8, t9, height, depth, _this = this, _null = null,
        t1 = type$.Map__ScriptPos_double;
      t1._as(childrenHeights);
      t1._as(childrenBaselines);
      t1 = childrenHeights.$index(0, A._ScriptPos_0);
      t1.toString;
      subSize = childrenHeights.$index(0, A._ScriptPos_1);
      supSize = childrenHeights.$index(0, A._ScriptPos_2);
      presubSize = childrenHeights.$index(0, A._ScriptPos_3);
      presupSize = childrenHeights.$index(0, A._ScriptPos_4);
      t2 = childrenBaselines.$index(0, A._ScriptPos_0);
      t2.toString;
      subHeight = childrenBaselines.$index(0, A._ScriptPos_1);
      supHeight = childrenBaselines.$index(0, A._ScriptPos_2);
      presubHeight = childrenBaselines.$index(0, A._ScriptPos_3);
      presupHeight = childrenBaselines.$index(0, A._ScriptPos_4);
      t3 = _this.baseOptions;
      if (subSize != null) {
        subHeight.toString;
        t4 = _this.subOptions;
        t4.toString;
        t4 = new B._ScriptUvConf(subSize, subHeight, t4);
      } else
        t4 = _null;
      if (supSize != null) {
        supHeight.toString;
        t5 = _this.supOptions;
        t5.toString;
        t5 = new B._ScriptUvConf(supSize, supHeight, t5);
      } else
        t5 = _null;
      t6 = _this.isBaseCharacterBox;
      postscriptRes = B.calculateUV(new B._ScriptUvConf(t1, t2, t3), t6, t4, t5);
      if (presubSize != null) {
        presubHeight.toString;
        t4 = _this.presubOptions;
        t4.toString;
        t4 = new B._ScriptUvConf(presubSize, presubHeight, t4);
      } else
        t4 = _null;
      if (presupSize != null) {
        presupHeight.toString;
        t5 = _this.presupOptions;
        t5.toString;
        t5 = new B._ScriptUvConf(presupSize, presupHeight, t5);
      } else
        t5 = _null;
      prescriptRes = B.calculateUV(new B._ScriptUvConf(t1, t2, t3), t6, t4, t5);
      subShift = postscriptRes.item2;
      supShift = postscriptRes.item1;
      presubShift = prescriptRes.item2;
      presupShift = prescriptRes.item1;
      t5 = type$.JSArray_double;
      t4 = C._setArrayType([t2], t5);
      t3 = subHeight != null;
      if (t3)
        t4.push(subHeight - subShift);
      t6 = supHeight != null;
      if (t6)
        t4.push(supHeight + supShift);
      t7 = presubHeight != null;
      if (t7)
        t4.push(presubHeight - presubShift);
      t8 = presupHeight != null;
      if (t8)
        t4.push(presupHeight + presupShift);
      t9 = type$.double;
      height = B.NumIterableExtension_get_max(t4, t9);
      t5 = C._setArrayType([t1 - t2], t5);
      if (t3) {
        subSize.toString;
        t5.push(subSize - subHeight + subShift);
      }
      if (t6) {
        supSize.toString;
        t5.push(supSize - supHeight - supShift);
      }
      if (t7) {
        presubSize.toString;
        t5.push(presubSize - presubHeight + presubShift);
      }
      if (t8) {
        presupSize.toString;
        t5.push(presupSize - presupHeight - presupShift);
      }
      depth = B.NumIterableExtension_get_max(t5, t9);
      if (!isComputingIntrinsics)
        _this.baselineDistance = height;
      t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$._ScriptPos, t9);
      t1.$indexSet(0, A._ScriptPos_0, height - t2);
      if (t3)
        t1.$indexSet(0, A._ScriptPos_1, height + subShift - subHeight);
      if (t6)
        t1.$indexSet(0, A._ScriptPos_2, height - supShift - supHeight);
      if (t7)
        t1.$indexSet(0, A._ScriptPos_3, height + presubShift - presubHeight);
      if (t8)
        t1.$indexSet(0, A._ScriptPos_4, height - presupShift - presupHeight);
      return new B.AxisConfiguration(height + depth, t1, type$.AxisConfiguration__ScriptPos);
    },
    performVerticalIntrinsicLayout$2$childrenBaselines$childrenHeights(childrenBaselines, childrenHeights) {
      return this.performVerticalIntrinsicLayout$3$childrenBaselines$childrenHeights$isComputingIntrinsics(childrenBaselines, childrenHeights, false);
    }
  };
  B._ScriptUvConf.prototype = {};
  B.ResetBaseline.prototype = {
    createRenderObject$1(context) {
      var t1 = new B.RenderResetBaseline(this.height, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderResetBaseline._as(renderObject);
      t1 = this.height;
      if (renderObject._reset_baseline$_height !== t1) {
        renderObject._reset_baseline$_height = t1;
        renderObject.markNeedsLayout$0();
      }
      return renderObject;
    }
  };
  B.RenderResetBaseline.prototype = {
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this._reset_baseline$_height;
    }
  };
  B.ResetDimension.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = new B.RenderResetDimension(_this.height, _this.depth, _this.width, _this.horizontalAlignment, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderResetDimension._as(renderObject);
      t1 = _this.height;
      if (renderObject._layoutHeight != t1) {
        renderObject._layoutHeight = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.depth;
      if (renderObject._layoutDepth != t1) {
        renderObject._layoutDepth = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.width;
      if (renderObject._layoutWidth != t1) {
        renderObject._layoutWidth = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = _this.horizontalAlignment;
      if (renderObject._horizontalAlignment !== t1) {
        renderObject._horizontalAlignment = t1;
        renderObject.markNeedsLayout$0();
      }
      return renderObject;
    }
  };
  B.RenderResetDimension.prototype = {
    computeMinIntrinsicWidth$1(height) {
      var t1;
      C._asDouble(height);
      t1 = this._layoutWidth;
      return t1 == null ? this.super$RenderShiftedBox$computeMinIntrinsicWidth(height) : t1;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1;
      C._asDouble(height);
      t1 = this._layoutWidth;
      return t1 == null ? this.super$RenderShiftedBox$computeMaxIntrinsicWidth(height) : t1;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1, t2, _this = this;
      C._asDouble(width);
      t1 = _this._layoutHeight;
      t2 = t1 == null;
      if (t2 && _this._layoutDepth == null)
        return _this.super$RenderShiftedBox$computeMinIntrinsicHeight(width);
      if (!t2 && _this._layoutDepth != null) {
        t1.toString;
        t2 = _this._layoutDepth;
        t2.toString;
        return t1 + t2;
      }
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1, t2, _this = this;
      C._asDouble(width);
      t1 = _this._layoutHeight;
      t2 = t1 == null;
      if (t2 && _this._layoutDepth == null)
        return _this.super$RenderShiftedBox$computeMaxIntrinsicHeight(width);
      if (!t2 && _this._layoutDepth != null) {
        t1.toString;
        t2 = _this._layoutDepth;
        t2.toString;
        return t1 + t2;
      }
      return 0;
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1;
      type$.TextBaseline._as(baseline);
      t1 = this._layoutHeight;
      return t1 == null ? this.super$RenderShiftedBox$computeDistanceToActualBaseline(baseline) : t1;
    },
    computeDryLayout$1(constraints) {
      return this._reset_dimension$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this._box$_size = this._reset_dimension$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false);
    },
    _reset_dimension$_computeLayout$2$dry(constraints, dry) {
      var childSize, childHeight, t2, childDepth, childWidth, height, depth, width, dx, _this = this,
        t1 = _this.RenderObjectWithChildMixin__child;
      t1.toString;
      childSize = B.RenderBoxLayout_getLayoutSize(t1, constraints, dry);
      if (dry)
        childHeight = 0;
      else {
        t2 = t1.getDistanceToBaseline$1(D.TextBaseline_0);
        t2.toString;
        childHeight = t2;
      }
      childDepth = childSize._dy - childHeight;
      childWidth = childSize._dx;
      height = _this._layoutHeight;
      if (height == null)
        height = childHeight;
      depth = _this._layoutDepth;
      if (depth == null)
        depth = childDepth;
      width = _this._layoutWidth;
      if (width == null)
        width = childWidth;
      switch (_this._horizontalAlignment.index) {
        case 0:
        case 3:
        case 4:
          dx = 0;
          break;
        case 1:
          dx = width - childWidth;
          break;
        case 2:
        default:
          dx = (width - childWidth) / 2;
          break;
      }
      if (!dry)
        type$.BoxParentData._as(t1.parentData).offset = new C.Offset(dx, height - childHeight);
      return new C.Size(width, height + depth);
    },
    _reset_dimension$_computeLayout$1(constraints) {
      return this._reset_dimension$_computeLayout$2$dry(constraints, true);
    }
  };
  B.ShiftBaseline.prototype = {
    createRenderObject$1(context) {
      var t1 = new B.RenderShiftBaseline(this.relativePos, this.offset, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderShiftBaseline._as(renderObject);
      t1 = this.relativePos;
      if (renderObject._relativePos != t1) {
        renderObject._relativePos = t1;
        renderObject.markNeedsLayout$0();
      }
      t1 = this.offset;
      if (renderObject._shift_baseline$_offset !== t1) {
        renderObject._shift_baseline$_offset = t1;
        renderObject.markNeedsLayout$0();
      }
    }
  };
  B.RenderShiftBaseline.prototype = {
    computeDryLayout$1(constraints) {
      var t1 = this.RenderObjectWithChildMixin__child;
      t1 = t1 == null ? null : t1._computeIntrinsics$2$3(D.C__DryLayout, constraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size);
      return t1 == null ? D.Size_0_0 : t1;
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1, childBaselineDistance, _this = this;
      type$.TextBaseline._as(baseline);
      t1 = _this._relativePos;
      if (t1 != null)
        return t1 * _this._shift_baseline$_height + _this._shift_baseline$_offset;
      t1 = _this.RenderObjectWithChildMixin__child;
      if (t1 != null) {
        childBaselineDistance = t1.getDistanceToActualBaseline$1(baseline);
        if (childBaselineDistance == null)
          childBaselineDistance = _this._shift_baseline$_height;
        return childBaselineDistance + _this._shift_baseline$_offset;
      } else
        return _this.super$_RenderProxyBox_RenderBox_RenderObjectWithChildMixin_RenderProxyBoxMixin$computeDistanceToActualBaseline(baseline);
    },
    performLayout$0() {
      this.super$RenderProxyBoxMixin$performLayout();
      this._shift_baseline$_height = this.get$size(0)._dy;
    }
  };
  B.VListParentData.prototype = {
    toString$0(_) {
      var _this = this;
      return _this.super$BoxParentData$toString(0) + "; customCrossSize=" + (_this.customCrossSize != null) + "; trailingMargin=" + C.S(_this.trailingMargin) + "; horizontalShift=" + C.S(_this.hShift);
    },
    set$customCrossSize(customCrossSize) {
      this.customCrossSize = type$.nullable_BoxConstraints_Function_double._as(customCrossSize);
    }
  };
  B.VListElement.prototype = {
    applyParentData$1(renderObject) {
      var targetParent,
        parentData = type$.VListParentData._as(renderObject.parentData),
        t1 = this.customCrossSize,
        needsLayout = !J.$eq$(parentData.customCrossSize, t1);
      if (needsLayout)
        parentData.set$customCrossSize(t1);
      t1 = this.trailingMargin;
      if (parentData.trailingMargin !== t1) {
        parentData.trailingMargin = t1;
        needsLayout = true;
      }
      t1 = this.hShift;
      if (parentData.hShift !== t1) {
        parentData.hShift = t1;
        needsLayout = true;
      }
      if (needsLayout) {
        targetParent = renderObject.get$parent(renderObject);
        if (targetParent instanceof C.RenderObject)
          targetParent.markNeedsLayout$0();
      }
    }
  };
  B.VList.prototype = {
    getEffectiveTextDirection$1(context) {
      return null;
    },
    createRenderObject$1(context) {
      return B.RenderRelativeWidthColumn$(this.baselineReferenceWidgetIndex, G.CrossAxisAlignment_2, D.TextBaseline_0, this.getEffectiveTextDirection$1(context));
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$.RenderRelativeWidthColumn._as(renderObject);
      if (renderObject._vlist$_textBaseline !== D.TextBaseline_0) {
        renderObject._vlist$_textBaseline = D.TextBaseline_0;
        renderObject.markNeedsLayout$0();
      }
      t1 = this.baselineReferenceWidgetIndex;
      if (renderObject._baselineReferenceWidgetIndex !== t1) {
        renderObject._baselineReferenceWidgetIndex = t1;
        renderObject.markNeedsLayout$0();
      }
      if (renderObject._vlist$_crossAxisAlignment !== G.CrossAxisAlignment_2) {
        renderObject._vlist$_crossAxisAlignment = G.CrossAxisAlignment_2;
        renderObject.markNeedsLayout$0();
      }
      t1 = this.getEffectiveTextDirection$1(context);
      if (renderObject._vlist$_textDirection != t1) {
        renderObject._vlist$_textDirection = t1;
        renderObject.markNeedsLayout$0();
      }
    }
  };
  B.RenderRelativeWidthColumn.prototype = {
    setupParentData$1(child) {
      type$.RenderBox._as(child);
      if (!(child.parentData instanceof B.VListParentData))
        child.parentData = new B.VListParentData(null, null, D.Offset_0_0);
    },
    _vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(childSize, extent, sizingDirection) {
      var child, t1, inflexibleSpace, t2, t3, t4, t5, maxCrossSize, t6, result;
      type$.double_Function_RenderBox_double._as(childSize);
      child = this.ContainerRenderObjectMixin__firstChild;
      if (sizingDirection === D.Axis_1) {
        for (t1 = type$.VListParentData, inflexibleSpace = 0; child != null;) {
          t2 = childSize.call$2(child, extent);
          if (typeof t2 !== "number")
            return C.iae(t2);
          inflexibleSpace += t2;
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return inflexibleSpace;
      } else {
        for (t1 = type$.VListParentData, t2 = type$.Object, t3 = type$._CachedLayoutCalculation_double_double, t4 = type$.double_Function_double, t5 = type$.double, maxCrossSize = 0; child != null;) {
          t6 = child.get$computeMaxIntrinsicHeight();
          C.checkTypeBound(t5, t2, "Input", "_computeIntrinsics");
          t3._as(D._IntrinsicDimension_3);
          t4._as(t6);
          C.checkTypeBound(t5, t2, "Input", "_computeWithTimeline");
          result = D._IntrinsicDimension_3.memoize$3(child._layoutCacheStorage, 1 / 0, t6);
          maxCrossSize = Math.max(maxCrossSize, childSize.call$2(child, result));
          child = t1._as(child.parentData).ContainerParentDataMixin_nextSibling;
        }
        return maxCrossSize;
      }
    },
    computeMinIntrinsicWidth$1(height) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMaxIntrinsicWidth$1(height) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure(), C._asDouble(height), D.Axis_0);
    },
    computeMinIntrinsicHeight$1(width) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeMaxIntrinsicHeight$1(width) {
      return this._vlist$_getIntrinsicSize$3$childSize$extent$sizingDirection(new B.RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure(), C._asDouble(width), D.Axis_1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      type$.TextBaseline._as(baseline);
      return this.distanceToBaseline;
    },
    getRightMost$2(crossAxisAlignment, width) {
      switch (crossAxisAlignment.index) {
        case 2:
          return width / 2;
        case 1:
          return 0;
        case 0:
        case 4:
        case 3:
        default:
          return width;
      }
    },
    computeDryLayout$1(constraints) {
      return this._vlist$_computeLayout$1(constraints);
    },
    performLayout$0() {
      this._box$_size = this._vlist$_computeLayout$2$dry(type$.BoxConstraints._as(C.RenderObject.prototype.get$constraints.call(this)), false);
    },
    _vlist$_computeLayout$2$dry(constraints, dry) {
      var child, relativeChildren, t1, t2, t3, t4, t5, t6, rightMost, allocatedSize, leftMost, childParentData, innerConstraints, t7, result, boxSize, width, right, fixedChildrenCrossSize, _i, childConstraints, size, crossSize, index, childMainPosition, childCrossPosition, _this = this, _s5_ = "Input",
        _s18_ = "_computeIntrinsics",
        _s20_ = "_computeWithTimeline",
        _s28_ = "RenderBox was not laid out: ";
      if (!dry)
        _this.distanceToBaseline = null;
      child = _this.ContainerRenderObjectMixin__firstChild;
      relativeChildren = C._setArrayType([], type$.JSArray_RenderBox);
      for (t1 = constraints.maxWidth, t2 = type$.VListParentData, t3 = type$.Object, t4 = type$._CachedLayoutCalculation_BoxConstraints_Size, t5 = type$.Size_Function_BoxConstraints, t6 = type$.BoxConstraints, rightMost = 0, allocatedSize = 0, leftMost = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        if (childParentData.customCrossSize != null)
          D.JSArray_methods.add$1(relativeChildren, child);
        else {
          innerConstraints = new C.BoxConstraints(0, t1, 0, 1 / 0);
          if (dry) {
            t7 = child.get$_computeDryLayout();
            C.checkTypeBound(t6, t3, _s5_, _s18_);
            t4._as(D.C__DryLayout);
            t5._as(t7);
            C.checkTypeBound(t6, t3, _s5_, _s20_);
            result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, innerConstraints, t7);
            boxSize = result;
          } else {
            child.layout$2$parentUsesSize(innerConstraints, true);
            boxSize = child._box$_size;
            if (boxSize == null)
              boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
          }
          width = boxSize._dx;
          right = _this.getRightMost$2(_this._vlist$_crossAxisAlignment, width);
          leftMost = Math.min(leftMost, right - width);
          rightMost = Math.max(rightMost, right);
          allocatedSize += boxSize._dy + childParentData.trailingMargin;
        }
        child = childParentData.ContainerParentDataMixin_nextSibling;
      }
      fixedChildrenCrossSize = rightMost - leftMost;
      for (t1 = relativeChildren.length, _i = 0; _i < relativeChildren.length; relativeChildren.length === t1 || (0, C.throwConcurrentModificationError)(relativeChildren), ++_i) {
        child = relativeChildren[_i];
        childParentData = t2._as(child.parentData);
        childConstraints = childParentData.customCrossSize.call$1(fixedChildrenCrossSize);
        if (dry) {
          C.checkTypeBound(t6, t3, _s5_, _s18_);
          t4._as(D.C__DryLayout);
          t7 = t5._as(child.get$_computeDryLayout());
          C.checkTypeBound(t6, t3, _s5_, _s20_);
          result = D.C__DryLayout.memoize$3(child._layoutCacheStorage, childConstraints, t7);
          boxSize = result;
        } else {
          child.layout$2$parentUsesSize(childConstraints, true);
          boxSize = child._box$_size;
          if (boxSize == null)
            boxSize = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
        }
        width = boxSize._dx;
        right = _this.getRightMost$2(_this._vlist$_crossAxisAlignment, width);
        leftMost = Math.min(leftMost, right - width);
        rightMost = Math.max(rightMost, right);
        allocatedSize += boxSize._dy + childParentData.trailingMargin;
      }
      size = constraints.constrain$1(new C.Size(rightMost - leftMost, allocatedSize));
      if (dry)
        return size;
      crossSize = size._dx;
      _this._vlist$_overflow = Math.max(0, -(size._dy - allocatedSize));
      child = _this.ContainerRenderObjectMixin__firstChild;
      for (index = 0, childMainPosition = 0; child != null;) {
        childParentData = t2._as(child.parentData);
        childCrossPosition = 0;
        switch (_this._vlist$_crossAxisAlignment.index) {
          case 0:
            if (_this._vlist$_textDirection === D.TextDirection_1)
              childCrossPosition = childParentData.hShift - leftMost;
            else {
              t1 = child._box$_size;
              childCrossPosition = rightMost - (t1 == null ? C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child))) : t1)._dx + crossSize;
            }
            break;
          case 1:
            if (_this._vlist$_textDirection === D.TextDirection_0)
              childCrossPosition = childParentData.hShift - leftMost;
            else {
              t1 = child._box$_size;
              childCrossPosition = rightMost - (t1 == null ? C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child))) : t1)._dx + crossSize;
            }
            break;
          case 2:
            t1 = child._box$_size;
            childCrossPosition = -(t1 == null ? C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child))) : t1)._dx / 2 - leftMost;
            break;
          case 3:
          case 4:
            break;
        }
        childParentData.offset = new C.Offset(childCrossPosition + childParentData.hShift, childMainPosition);
        if (index === _this._baselineReferenceWidgetIndex) {
          t1 = child.getDistanceToBaseline$1(_this._vlist$_textBaseline);
          t1.toString;
          _this.distanceToBaseline = childMainPosition + t1;
        }
        t1 = child._box$_size;
        if (t1 == null)
          t1 = C.throwExpression(C.StateError$(_s28_ + C.getRuntimeTypeOfDartObject(child).toString$0(0) + "#" + C.shortHash(child)));
        childMainPosition += t1._dy + childParentData.trailingMargin;
        child = childParentData.ContainerParentDataMixin_nextSibling;
        ++index;
      }
      return size;
    },
    _vlist$_computeLayout$1(constraints) {
      return this._vlist$_computeLayout$2$dry(constraints, true);
    },
    hitTestChildren$2$position(result, position) {
      return this.defaultHitTestChildren$2$position(result, position);
    },
    paint$2(context, offset) {
      var t2, _this = this,
        t1 = _this._vlist$_overflow;
      t1.toString;
      if (!(t1 > 1e-10)) {
        _this.defaultPaint$2(context, offset);
        return;
      }
      if (_this.get$size(0).get$isEmpty(0))
        return;
      t1 = _this.__RenderObject__needsCompositing_A;
      t1 === $ && C.throwLateFieldNI("_needsCompositing");
      t2 = _this.get$size(0);
      context.pushClipRect$4(t1, offset, new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy), _this.get$defaultPaint());
    },
    describeApproximatePaintClip$1(child) {
      var t1 = this._vlist$_overflow;
      t1.toString;
      if (t1 > 1e-10) {
        t1 = this.get$size(0);
        t1 = new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy);
      } else
        t1 = null;
      return t1;
    },
    toStringShort$0() {
      var header = this.super$RenderObject$toStringShort(),
        t1 = this._vlist$_overflow;
      return typeof t1 == "number" && t1 > 1e-10 ? header + " OVERFLOWING" : header;
    }
  };
  B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var child, t1, t2;
      this.super$RenderObject$attach(owner);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.VListParentData; child != null;) {
        child.attach$1(owner);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    },
    detach$0(_) {
      var child, t1, t2;
      this.super$RenderObject$detach(0);
      child = this.ContainerRenderObjectMixin__firstChild;
      for (t1 = type$.VListParentData; child != null;) {
        child.detach$0(0);
        t2 = child.parentData;
        t2.toString;
        child = t1._as(t2).ContainerParentDataMixin_nextSibling;
      }
    }
  };
  B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin.prototype = {};
  B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin.prototype = {
    dispose$0() {
      var t1, t2, _i;
      for (t1 = this.DebugOverflowIndicatorMixin__indicatorLabel, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].dispose$0();
      this.super$RenderObject$dispose();
    }
  };
  B.DelimiterConf.prototype = {};
  B._KatexImagesData.prototype = {};
  B.BuildException.prototype = {$isException: 1, $isFlutterMathException: 1};
  B.Math.prototype = {
    build$1(context) {
      var options, child, e, e0, effectiveTextStyle, t2, t3, value, result, exception, _this = this, _null = null,
        t1 = _this.parseError;
      if (t1 != null)
        return _this.onErrorFallback.call$1(t1);
      options = _this.options;
      if (options == null) {
        effectiveTextStyle = _this.textStyle;
        if (effectiveTextStyle.inherit) {
          t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
          effectiveTextStyle = (t1 == null ? G.DefaultTextStyle_4Wa : t1).style.merge$1(effectiveTextStyle);
        }
        t1 = C.MediaQuery__maybeOf(context, D._MediaQueryAspect_16);
        t1 = t1 == null ? _null : t1.boldText;
        if (t1 === true)
          effectiveTextStyle = effectiveTextStyle.merge$1(G.TextStyle_KXJ);
        t1 = effectiveTextStyle.fontSize;
        t1.toString;
        t2 = effectiveTextStyle.fontWeight;
        t2 = t2 !== F.FontWeight_3 && t2 != null ? new B.FontOptions("Main", t2, D.FontStyle_0, A.List_empty22) : _null;
        t3 = effectiveTextStyle.color;
        t3.toString;
        options = B.MathOptions_MathOptions(t3, t1 * _this.textScaleFactor, _null, t2, A.MathSize_5, _this.mathStyle, _null);
      }
      child = null;
      try {
        t1 = _this.ast;
        t1.toString;
        t2 = type$.MathOptions._as(options);
        value = t1.__SyntaxTree_root_FI;
        if (value === $) {
          result = B.SyntaxNode$(_null, -1, t1.greenRoot);
          value !== $ && C.throwLateFieldADI("root");
          t1.__SyntaxTree_root_FI = result;
          value = result;
        }
        child = value.buildWidget$1(t2).widget;
      } catch (exception) {
        t1 = C.unwrapException(exception);
        if (t1 instanceof B.BuildException) {
          e = t1;
          return _this.onErrorFallback.call$1(e);
        } else {
          e0 = t1;
          t1 = _this.onErrorFallback.call$1(new B.BuildException("Unsanitized build exception detected: " + C.S(e0) + string$.x2ePleas));
          return t1;
        }
      }
      return Ao.Provider$value(child, A.FlutterMathMode_2, type$.FlutterMathMode);
    }
  };
  B.FlutterMathMode.prototype = {
    _enumToString$0() {
      return "FlutterMathMode." + this._name;
    }
  };
  B.Cache0.prototype = {
    clear$0(_) {
      this._cache$_cache.clear$0(0);
    },
    putIfAbsent$2(_, key, loader) {
      var t2, pendingResult, t3, result, _this = this, t1 = {};
      type$.Future_ByteData_Function._as(loader);
      t2 = _this._cache$_pending;
      pendingResult = t2.$index(0, key);
      if (pendingResult != null)
        return pendingResult;
      t3 = _this._cache$_cache;
      result = t3.$index(0, key);
      t1.result = result;
      if (result != null)
        t3.remove$1(0, key);
      else {
        pendingResult = loader.call$0();
        t2.$indexSet(0, key, pendingResult);
        pendingResult.then$1$1(0, new B.Cache_putIfAbsent_closure(t1, _this, key), type$.Null);
      }
      t2 = t1.result;
      if (t2 != null) {
        _this._cache$_add$2(0, key, t2);
        t1 = t1.result;
        t1.toString;
        return new C.SynchronousFuture(t1, type$.SynchronousFuture_ByteData);
      }
      pendingResult.toString;
      return pendingResult;
    },
    _cache$_add$2(_, key, result) {
      var t2,
        t1 = this._cache$_cache;
      if (t1.containsKey$1(0, key))
        t1.remove$1(0, key);
      else {
        t2 = t1.__js_helper$_length;
        if (t2 === 100)
          t1.remove$1(0, new C.LinkedHashMapKeysIterable(t1, C._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>")).get$first(0));
      }
      t1.$indexSet(0, key, result);
    }
  };
  B.SvgTheme.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof B.SvgTheme)
        t1 = F.Color_vnR.$eq(0, F.Color_vnR);
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(F.Color_vnR, 14, 7, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "SvgTheme(currentColor: " + F.Color_vnR.toString$0(0) + ", fontSize: 14, xHeight: 7)";
    }
  };
  B.SvgLoader.prototype = {
    getTheme$1(context) {
      context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSvgTheme);
      return A.C_SvgTheme;
    },
    _load$1(context) {
      return new C.SynchronousFuture(null, C._instanceType(this)._eval$1("SynchronousFuture<SvgLoader.T?>")).then$1$1(0, new B.SvgLoader__load_closure(this, this.getTheme$1(context)), type$.ByteData);
    },
    loadBytes$1(context) {
      return $.$get$svg().cache.putIfAbsent$2(0, this.cacheKey$1(context), new B.SvgLoader_loadBytes_closure(this, context));
    },
    cacheKey$1(context) {
      return new B.SvgCacheKey(this.getTheme$1(context), this, this.colorMapper);
    }
  };
  B.SvgCacheKey.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.theme, this.keyData, this.colorMapper, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof B.SvgCacheKey)
        if (other.theme.$eq(0, this.theme))
          t1 = other.keyData.$eq(0, this.keyData);
      return t1;
    }
  };
  B.SvgStringLoader.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this._svg, this.theme, this.colorMapper, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof B.SvgStringLoader)
        t1 = other._svg === this._svg;
      else
        t1 = false;
      return t1;
    }
  };
  B.Svg.prototype = {};
  B.SvgPicture.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      return new B.VectorGraphic(_this.bytesLoader, _this.width, _this.height, _this.fit, _this.alignment, false, _null, false, D.Clip_1, _null, _null, _null, _this.colorFilter, _null, A.RenderingStrategy_1, true, _null);
    }
  };
  B.CodeField.prototype = {
    createState$0() {
      return new B._CodeFieldState();
    }
  };
  B._CodeFieldState.prototype = {
    build$1(context) {
      var t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = H.Theme_of(context).colorScheme,
        t2 = t1._onInverseSurface;
      t1 = t2 == null ? t1.surface : t2;
      t2 = E.BorderRadius$circular(8);
      t3 = U.Text$(_this._widget.name, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      t4 = L.TextButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, H.Theme_of(context).colorScheme.onSurface, _null, _null, _null, _null, _null, _null, _null, K.TextStyle_IHC, _null);
      t5 = _this._copied;
      t6 = E.Icon$(t5 ? A.IconData_57846_MaterialIcons_null_false : A.IconData_57746_MaterialIcons_null_false, _null, _null, 15);
      t7 = type$.JSArray_Widget;
      return M.Material$(D.Duration_200000, true, _null, Ac.Column$(C._setArrayType([O.Row$(C._setArrayType([new E.Padding(Ar.EdgeInsets_16_8_16_8, t3, _null), A.Spacer_null, B.TextButton_TextButton$icon(t6, U.Text$(t5 ? "Copied!" : "Copy code", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new B._CodeFieldState_build_closure(_this), t4)], t7), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1), A.Divider_null, A5.SingleChildScrollView$(U.Text$(_this._widget.codes, _null, _null, _null, _null, _null, _null, _null, E.TextStyle$(_null, _null, _null, _null, _null, _null, _null, _null, "JetBrainsMono", _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, "gpt_markdown", _null, _null, _null), _null, _null, _null, _null, _null), _null, G.DragStartBehavior_1, At.EdgeInsets_16_16_16_16, _null, D.Axis_0)], t7), G.CrossAxisAlignment_3, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1), D.Clip_0, t1, 0, _null, _null, new H.RoundedRectangleBorder(t2, F.BorderSide_Ah5), _null, _null, X.MaterialType_0);
    }
  };
  B.CustomDivider.prototype = {
    createRenderObject$1(context) {
      var t1 = C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_0, type$.MediaQuery).data;
      t1 = new B.RenderDivider(this.color, this.height, t1.size._dx, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderDivider._as(renderObject);
      renderObject.set$color(0, this.color);
      renderObject.set$height(0, this.height);
      renderObject.set$width(0, C.InheritedModel_inheritFrom(context, D._MediaQueryAspect_0, type$.MediaQuery).data.size._dx);
    }
  };
  B.RenderDivider.prototype = {
    set$color(_, value) {
      if (value.$eq(0, this._custom_divider$_color))
        return;
      this._custom_divider$_color = value;
      this.markNeedsPaint$0();
    },
    set$height(_, value) {
      if (value === this._custom_divider$_height)
        return;
      this._custom_divider$_height = value;
      this.markNeedsLayout$0();
    },
    set$width(_, value) {
      if (value === this._custom_divider$_width)
        return;
      this._custom_divider$_width = value;
      this.markNeedsLayout$0();
    },
    computeDryLayout$1(constraints) {
      var t1 = E.BoxConstraints$tightFor(this._custom_divider$_height, null).enforce$1(constraints);
      return new C.Size(C.clampDouble(0, t1.minWidth, t1.maxWidth), C.clampDouble(0, t1.minHeight, t1.maxHeight));
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      _this._box$_size = _this._computeIntrinsics$2$3(D.C__DryLayout, t1._as(C.RenderObject.prototype.get$constraints.call(_this)), _this.get$_computeDryLayout(), t1, type$.Size);
    },
    paint$2(context, offset) {
      var t1 = context.get$canvas(0),
        t2 = this._custom_divider$_height,
        t3 = offset._dx,
        t4 = offset._dy,
        t5 = $.$get$_renderer().createPaint$0();
      t5.set$color(0, this._custom_divider$_color);
      t1.drawRect$2(new C.Rect(t3, t4, t3 + 2000000000, t4 + t2), t5);
    }
  };
  B.CustomImageError.prototype = {
    createRenderObject$1(context) {
      var t3, t4, _null = null,
        t1 = H.Theme_of(context).colorScheme,
        t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      t2 = H.Theme_of(context).colorScheme;
      t3 = t2._surfaceContainerHighest;
      t2 = t3 == null ? t2.surface : t3;
      t3 = H.Theme_of(context).colorScheme;
      t4 = t3._outline;
      if (t4 == null) {
        t4 = t3._onBackground;
        t3 = t4 == null ? t3.onSurface : t4;
      } else
        t3 = t4;
      t2 = new B.RenderCustomImageError(t1, t3, t2, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t2.RenderObject$0();
      t2.set$child(_null);
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2;
      type$.RenderCustomImageError._as(renderObject);
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._surfaceContainerHighest;
      t1 = t2 == null ? t1.surface : t2;
      renderObject.set$_custom_error_image$_backgroundColor(0, t1);
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      renderObject.set$_iconColor(t1);
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._outline;
      if (t2 == null) {
        t2 = t1._onBackground;
        t1 = t2 == null ? t1.onSurface : t2;
      } else
        t1 = t2;
      renderObject.set$_outlineColor(0, t1);
    }
  };
  B.RenderCustomImageError.prototype = {
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 && t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth)));
        return;
      }
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 || t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth)));
        return;
      }
      _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(A.Size_80_80);
    },
    paint$2(context, offset) {
      var textPainter, _this = this, _null = null,
        t1 = context.get$canvas(0),
        t2 = _this.get$size(0),
        t3 = offset._dx,
        t4 = offset._dy,
        t5 = $.$get$_renderer(),
        t6 = t5.createPaint$0();
      t6.set$color(0, _this._custom_error_image$_backgroundColor);
      t1.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t6);
      t6 = context.get$canvas(0);
      t2 = _this.get$size(0);
      t5 = t5.createPaint$0();
      t5.set$style(0, D.PaintingStyle_1);
      t5.set$color(0, _this._outlineColor);
      t6.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t5);
      textPainter = E.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_0, _null, D._LinearTextScaler_1, F.TextWidthBasis_0);
      t5 = C.Primitives_stringFromCharCode(58164);
      t2 = Math.min(Math.min(_this.get$size(0)._dx, _this.get$size(0)._dy), 35);
      textPainter.set$text(0, E.TextSpan$(_null, E.TextStyle$(_null, _null, _this._iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, t2, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), t5));
      textPainter.layout$0();
      t5 = context.get$canvas(0);
      t2 = _this.get$size(0);
      t4 = textPainter._layoutCache;
      t3 = t4.contentWidth;
      t4 = t4.layout._paragraph;
      t4.get$height(t4);
      t4 = _this.get$size(0);
      t6 = textPainter._layoutCache.layout._paragraph;
      textPainter.paint$2(t5, offset.$add(0, new C.Offset(t2._dx / 2 - t3 / 2, t4._dy / 2 - t6.get$height(t6) / 2)));
    },
    set$_iconColor(_iconColor) {
      this._iconColor = type$.Color._as(_iconColor);
    },
    set$_outlineColor(_, _outlineColor) {
      this._outlineColor = type$.Color._as(_outlineColor);
    },
    set$_custom_error_image$_backgroundColor(_, _backgroundColor) {
      this._custom_error_image$_backgroundColor = type$.Color._as(_backgroundColor);
    }
  };
  B.CustomImageLoading.prototype = {
    createRenderObject$1(context) {
      var t3, t4, _null = null,
        t1 = H.Theme_of(context).colorScheme,
        t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      t2 = H.Theme_of(context).colorScheme;
      t3 = t2._surfaceContainerHighest;
      t2 = t3 == null ? t2.surface : t3;
      t3 = H.Theme_of(context).colorScheme;
      t4 = t3._outline;
      if (t4 == null) {
        t4 = t3._onBackground;
        t3 = t4 == null ? t3.onSurface : t4;
      } else
        t3 = t4;
      t2 = new B.RenderCustomImageLoading(t1, t3, t2, this.progress, _null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t2.RenderObject$0();
      t2.set$child(_null);
      return t2;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, t2;
      type$.RenderCustomImageLoading._as(renderObject);
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._surfaceContainerHighest;
      t1 = t2 == null ? t1.surface : t2;
      renderObject.set$_custom_error_image$_backgroundColor(0, t1);
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._onSurfaceVariant;
      t1 = t2 == null ? t1.onSurface : t2;
      renderObject.set$_iconColor(t1);
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._outline;
      if (t2 == null) {
        t2 = t1._onBackground;
        t1 = t2 == null ? t1.onSurface : t2;
      } else
        t1 = t2;
      renderObject.set$_outlineColor(0, t1);
      renderObject.set$progress(this.progress);
    }
  };
  B.RenderCustomImageLoading.prototype = {
    set$progress(value) {
      if (value === this._progress)
        return;
      this._progress = value;
      this.markNeedsPaint$0();
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints;
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 && t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth)));
        return;
      }
      if (t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight < 1 / 0 || t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth < 1 / 0) {
        _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(new C.Size(Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth), Math.min(t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxHeight, t1._as(C.RenderObject.prototype.get$constraints.call(_this)).maxWidth)));
        return;
      }
      _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(A.Size_80_80);
    },
    paint$2(context, offset) {
      var textPainter, _this = this, _null = null,
        t1 = context.get$canvas(0),
        t2 = _this.get$size(0),
        t3 = offset._dx,
        t4 = offset._dy,
        t5 = $.$get$_renderer(),
        t6 = t5.createPaint$0();
      t6.set$color(0, _this._custom_error_image$_backgroundColor);
      t1.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t6);
      t6 = context.get$canvas(0);
      t2 = _this.get$size(0);
      t1 = t5.createPaint$0();
      t1.set$style(0, D.PaintingStyle_1);
      t1.set$color(0, _this._outlineColor);
      t6.drawRect$2(new C.Rect(t3, t4, t3 + t2._dx, t4 + t2._dy), t1);
      textPainter = E.TextPainter$(_null, _null, _null, _null, _null, D.TextAlign_4, D.TextDirection_0, _null, D._LinearTextScaler_1, F.TextWidthBasis_0);
      t1 = C.Primitives_stringFromCharCode(58162);
      t2 = Math.min(Math.min(_this.get$size(0)._dx, _this.get$size(0)._dy), 35);
      textPainter.set$text(0, E.TextSpan$(_null, E.TextStyle$(_null, _null, _this._iconColor, _null, _null, _null, _null, _null, "MaterialIcons", _null, _null, t2, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), t1));
      textPainter.layout$0();
      t1 = context.get$canvas(0);
      t2 = offset.$add(0, new C.Offset(0, _this.get$size(0)._dy - 5));
      t4 = _this.get$size(0);
      t3 = _this._progress;
      t6 = t2._dx;
      t2 = t2._dy;
      t5 = t5.createPaint$0();
      t5.set$color(0, _this._iconColor);
      t1.drawRect$2(new C.Rect(t6, t2, t6 + t4._dx * t3, t2 + 5), t5);
      t5 = context.get$canvas(0);
      t2 = _this.get$size(0);
      t3 = textPainter._layoutCache;
      t4 = t3.contentWidth;
      t3 = t3.layout._paragraph;
      t3.get$height(t3);
      t3 = _this.get$size(0);
      t6 = textPainter._layoutCache.layout._paragraph;
      textPainter.paint$2(t5, offset.$add(0, new C.Offset(t2._dx / 2 - t4 / 2, t3._dy / 2 - t6.get$height(t6) / 2)));
    },
    set$_iconColor(_iconColor) {
      this._iconColor = type$.Color._as(_iconColor);
    },
    set$_outlineColor(_, _outlineColor) {
      this._outlineColor = type$.Color._as(_outlineColor);
    },
    set$_custom_error_image$_backgroundColor(_, _backgroundColor) {
      this._custom_error_image$_backgroundColor = type$.Color._as(_backgroundColor);
    }
  };
  B.CustomRb.prototype = {
    build$1(context) {
      var _null = null;
      return T.Directionality$(O.Row$(C._setArrayType([M.Text$rich(new L.WidgetSpan(new E.Padding(new E.EdgeInsetsDirectional(5, 0, 5, 0), new B.Radio(this.value, true, new B.CustomRb_build_closure(), G.MaterialTapTargetSize_1, _null, type$.Radio_bool), _null), D.PlaceholderAlignment_5, _null, _null), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new R.Flexible(1, G.FlexFit_1, this.child, _null)], type$.JSArray_Widget), G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, D.TextBaseline_0, _null, G.VerticalDirection_1), this.textDirection);
    }
  };
  B.CustomCb.prototype = {
    build$1(context) {
      var _null = null;
      return T.Directionality$(O.Row$(C._setArrayType([M.Text$rich(new L.WidgetSpan(new E.Padding(new E.EdgeInsetsDirectional(5, 0, 5, 0), new B.Checkbox(this.value, new B.CustomCb_build_closure(), _null), _null), D.PlaceholderAlignment_5, _null, _null), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), new R.Flexible(1, G.FlexFit_1, this.child, _null)], type$.JSArray_Widget), G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, D.TextBaseline_0, _null, G.VerticalDirection_1), this.textDirection);
    }
  };
  B.BlockQuoteWidget.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      return O.Row$(C._setArrayType([new R.Flexible(1, G.FlexFit_1, H.CustomPaint$(_this.child, new B.BlockQuotePainter(_this.color, _this.direction, _this.width, _null), _null, _null, D.Size_0_0), _null)], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1);
    }
  };
  B.BlockQuotePainter.prototype = {
    paint$2(canvas, size) {
      var _this = this,
        start = _this.direction === D.TextDirection_1 ? 0 : size._dx - _this.width,
        paint = $.$get$_renderer().createPaint$0();
      paint.set$color(0, _this.color);
      canvas.drawRect$2(new C.Rect(start, 0, start + _this.width, 0 + size._dy), paint);
    },
    shouldRepaint$1(oldDelegate) {
      return true;
    }
  };
  B.LinkButton.prototype = {
    createState$0() {
      return new B._LinkButtonState();
    }
  };
  B._LinkButtonState.prototype = {
    build$1(context) {
      var t3, t4, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.config.style;
      if (t2 == null)
        t2 = F.TextStyle_ZyH;
      t3 = _this._link_button$_isHovering;
      t4 = t3 ? t1.hoverColor : t1.color;
      t2.copyWith$3$color$decoration$decorationColor(t4, D.TextDecoration_1, t3 ? t1.hoverColor : t1.color);
      t1 = _this._widget;
      t2 = t1.onPressed;
      t1 = t1.child;
      return H.MouseRegion$(A_.GestureDetector$(_null, t1, G.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t2, new B._LinkButtonState_build_closure(_this), new B._LinkButtonState_build_closure0(_this), new B._LinkButtonState_build_closure1(_this), _null, _null, _null, _null, _null), F.SystemMouseCursor_click, _null, new B._LinkButtonState_build_closure2(_this), new B._LinkButtonState_build_closure3(_this), _null);
    },
    _link_button$_handleHover$1(hover) {
      this.setState$1(new B._LinkButtonState__handleHover_closure(this, hover));
    },
    _handlePress$1(pressed) {
      this.setState$1(new B._LinkButtonState__handlePress_closure());
    }
  };
  B.GptMarkdownConfig.prototype = {
    copyWith$1$style(style) {
      var _this = this,
        t1 = style == null ? _this.style : style;
      return B.GptMarkdownConfig$(_this.codeBuilder, _this.components, false, _this.highlightBuilder, _this.imageBuilder, _this.inlineComponents, _this.latexBuilder, _this.latexWorkaround, _this.linkBuilder, _this.maxLines, _this.onLinkTap, _this.orderedListBuilder, _this.overflow, _this.sourceTagBuilder, t1, _this.tableBuilder, _this.textAlign, _this.textDirection, _this.textScaler, _this.unOrderedListBuilder);
    },
    copyWith$0() {
      return this.copyWith$1$style(null);
    },
    getRich$1(span) {
      var _this = this, _null = null;
      return M.Text$rich(span, _null, _this.maxLines, _this.overflow, _null, _null, _null, _null, _this.textAlign, _this.textDirection, _null, _null, _this.textScaler, _null);
    }
  };
  B.SelectableAdapter.prototype = {
    build$1(context) {
      var _null = null,
        registrar = H.SelectionContainer_maybeOf(context);
      if (registrar == null)
        return this.child;
      return H.MouseRegion$(new B._SelectableAdapter(registrar, this.selectedText, this.child, _null), G.SystemMouseCursor_text, _null, _null, _null, _null);
    }
  };
  B._SelectableAdapter.prototype = {
    createRenderObject$1(context) {
      var t2,
        t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      t1 = (t1 == null ? G.DefaultSelectionStyle_gwC : t1).selectionColor;
      t1.toString;
      t2 = new C.ValueNotifier(F.SelectionGeometry_6U2, $.$get$ChangeNotifier__emptyListeners(), type$.ValueNotifier_SelectionGeometry);
      t1 = new B._RenderSelectableAdapter(t2, t1, null, false, null, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      t1.set$registrar(this.registrar);
      t2.addListener$1(0, t1.get$markNeedsPaint());
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1;
      type$._RenderSelectableAdapter._as(renderObject);
      t1 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultSelectionStyle);
      t1 = (t1 == null ? G.DefaultSelectionStyle_gwC : t1).selectionColor;
      t1.toString;
      renderObject.set$selectionColor(t1);
      renderObject.set$registrar(this.registrar);
    }
  };
  B._RenderSelectableAdapter.prototype = {
    set$selectionColor(value) {
      if (this._selectable_adapter$_selectionColor.$eq(0, value))
        return;
      this._selectable_adapter$_selectionColor = value;
      this.markNeedsPaint$0();
    },
    addListener$1(_, listener) {
      return this._selectable_adapter$_geometry.addListener$1(0, type$.void_Function._as(listener));
    },
    removeListener$1(_, listener) {
      return this._selectable_adapter$_geometry.removeListener$1(0, type$.void_Function._as(listener));
    },
    get$value(_) {
      return this._selectable_adapter$_geometry._change_notifier$_value;
    },
    get$boundingBoxes() {
      var t1 = this.get$size(0);
      return C._setArrayType([new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy)], type$.JSArray_Rect);
    },
    _getSelectionHighlightRect$0() {
      var _this = this;
      return new C.Rect(0, 0, 0 + (_this.get$size(_this)._dx + 0), 0 + (_this.get$size(_this)._dy + 0));
    },
    _updateGeometry$0() {
      var t1, t2, t3, t4, selectionRect, firstSelectionPoint, secondSelectionPoint, isReversed, _this = this;
      if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null) {
        _this._selectable_adapter$_geometry.set$value(0, F.SelectionGeometry_6U2);
        return;
      }
      t1 = _this.get$size(_this);
      t2 = _this.get$size(_this);
      t3 = _this._selectable_adapter$_start;
      t3.toString;
      t4 = _this._selectable_adapter$_end;
      t4.toString;
      if (new C.Rect(0, 0, 0 + t1._dx, 0 + t2._dy).intersect$1(C.Rect$fromPoints(t3, t4)).get$isEmpty(0))
        _this._selectable_adapter$_geometry.set$value(0, F.SelectionGeometry_6U2);
      else {
        selectionRect = _this._getSelectionHighlightRect$0();
        t1 = selectionRect.bottom;
        t2 = t1 - selectionRect.top;
        firstSelectionPoint = new E.SelectionPoint(new C.Offset(selectionRect.left, t1), t2, F.TextSelectionHandleType_0);
        secondSelectionPoint = new E.SelectionPoint(new C.Offset(selectionRect.right, t1), t2, F.TextSelectionHandleType_1);
        t1 = _this._selectable_adapter$_start;
        t2 = t1._dy;
        t3 = _this._selectable_adapter$_end;
        t4 = t3._dy;
        if (t2 > t4)
          isReversed = true;
        else
          isReversed = t2 < t4 ? false : t1._dx > t3._dx;
        t1 = isReversed ? secondSelectionPoint : firstSelectionPoint;
        t2 = isReversed ? firstSelectionPoint : secondSelectionPoint;
        _this._selectable_adapter$_geometry.set$value(0, new E.SelectionGeometry(t1, t2, F.SelectionStatus_0, C._setArrayType([selectionRect], type$.JSArray_Rect), true));
      }
    },
    dispatchSelectionEvent$1($event) {
      var renderObjectRect, point, adjustedPoint, result, newOffset, horizontalBaseLine, $forward, _this = this,
        t1 = $event.type;
      switch (t1.index) {
        case 0:
        case 1:
          renderObjectRect = new C.Rect(0, 0, 0 + _this.get$size(_this)._dx, 0 + _this.get$size(_this)._dy);
          point = _this.globalToLocal$1(type$.SelectionEdgeUpdateEvent._as($event).globalPosition);
          adjustedPoint = E.SelectionUtils_adjustDragOffset(renderObjectRect, point, D.TextDirection_1);
          if (t1 === F.SelectionEventType_0)
            _this._selectable_adapter$_start = adjustedPoint;
          else
            _this._selectable_adapter$_end = adjustedPoint;
          result = E.SelectionUtils_getResultBasedOnRect(renderObjectRect, point);
          break;
        case 2:
          _this._selectable_adapter$_start = _this._selectable_adapter$_end = null;
          result = F.SelectionResult_4;
          break;
        case 3:
        case 4:
        case 5:
          _this._selectable_adapter$_start = D.Offset_0_0;
          _this._selectable_adapter$_end = Y.Offset_xfs;
          result = F.SelectionResult_4;
          break;
        case 6:
          type$.GranularlyExtendSelectionEvent._as($event);
          if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null)
            if ($event.get$forward($event))
              _this._selectable_adapter$_start = _this._selectable_adapter$_end = D.Offset_0_0;
            else
              _this._selectable_adapter$_start = _this._selectable_adapter$_end = Y.Offset_xfs;
          newOffset = $event.get$forward($event) ? Y.Offset_xfs : D.Offset_0_0;
          if ($event.get$isEnd()) {
            if (newOffset.$eq(0, _this._selectable_adapter$_end))
              result = $event.get$forward($event) ? F.SelectionResult_0 : F.SelectionResult_1;
            else
              result = F.SelectionResult_2;
            _this._selectable_adapter$_end = newOffset;
          } else {
            if (newOffset.$eq(0, _this._selectable_adapter$_start))
              result = $event.get$forward($event) ? F.SelectionResult_0 : F.SelectionResult_1;
            else
              result = F.SelectionResult_2;
            _this._selectable_adapter$_start = newOffset;
          }
          break;
        case 7:
          type$.DirectionallyExtendSelectionEvent._as($event);
          horizontalBaseLine = _this.globalToLocal$1(new C.Offset($event.get$dx($event), 0))._dx;
          switch ($event.get$direction($event)) {
            case F.SelectionExtendDirection_3:
            case F.SelectionExtendDirection_0:
              if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null)
                _this._selectable_adapter$_start = _this._selectable_adapter$_end = Y.Offset_xfs;
              $event.get$direction($event);
              newOffset = horizontalBaseLine < 0 ? D.Offset_0_0 : Y.Offset_xfs;
              $forward = false;
              break;
            case F.SelectionExtendDirection_1:
            case F.SelectionExtendDirection_2:
              if (_this._selectable_adapter$_start == null || _this._selectable_adapter$_end == null)
                _this._selectable_adapter$_start = _this._selectable_adapter$_end = D.Offset_0_0;
              $event.get$direction($event);
              t1 = _this.get$size(_this);
              newOffset = horizontalBaseLine > t1._dx ? Y.Offset_xfs : D.Offset_0_0;
              $forward = true;
              break;
            default:
              newOffset = null;
              $forward = null;
          }
          if ($event.get$isEnd()) {
            if (J.$eq$(newOffset, _this._selectable_adapter$_end))
              result = C.boolConversionCheck($forward) ? F.SelectionResult_0 : F.SelectionResult_1;
            else
              result = F.SelectionResult_2;
            _this._selectable_adapter$_end = newOffset;
          } else {
            if (J.$eq$(newOffset, _this._selectable_adapter$_start))
              result = C.boolConversionCheck($forward) ? F.SelectionResult_0 : F.SelectionResult_1;
            else
              result = F.SelectionResult_2;
            _this._selectable_adapter$_start = newOffset;
          }
          break;
        default:
          result = F.SelectionResult_4;
      }
      _this._updateGeometry$0();
      return result;
    },
    pushHandleLayers$2(startHandle, endHandle) {
      return;
    },
    paint$2(context, offset) {
      var selectionPaint, _this = this;
      _this.super$RenderProxyBoxMixin$paint(context, offset);
      if (_this._selectable_adapter$_geometry._change_notifier$_value.status === F.SelectionStatus_2)
        return;
      selectionPaint = $.$get$_renderer().createPaint$0();
      selectionPaint.set$style(0, D.PaintingStyle_0);
      selectionPaint.set$color(0, _this._selectable_adapter$_selectionColor);
      context.get$canvas(0).drawRect$2(_this._getSelectionHighlightRect$0().shift$1(offset), selectionPaint);
    },
    dispose$0() {
      var _this = this,
        t1 = _this._selectable_adapter$_geometry;
      t1.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      t1.ChangeNotifier__count = 0;
      _this._endHandle = _this._startHandle = null;
      _this.super$__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant$dispose();
    },
    $isListenable: 1,
    $isValueListenable: 1
  };
  B.__RenderSelectableAdapter_RenderProxyBox_Selectable.prototype = {};
  B.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant.prototype = {
    dispose$0() {
      this._selection$_removeSelectionRegistrarSubscription$0();
      this.super$RenderObject$dispose();
    }
  };
  B.UnorderedListView.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        t1 = C._setArrayType([], type$.JSArray_Widget),
        t2 = _this.bulletSize,
        t3 = _this.spacing,
        t4 = _this.padding;
      if (t2 === 0)
        t1.push(new E.SizedBox(t3 + t4, _null, _null, _null));
      else
        t1.push(M.Text$rich(new L.WidgetSpan(new E.Padding(new E.EdgeInsetsDirectional(t4, 0, t3, 0), E.Container$(_null, _null, D.Clip_0, _null, _null, new E.BoxDecoration(_this.bulletColor, _null, _null, _null, _null, _null, _null, F.BoxShape_1), _null, t2, _null, _null, _null, _null, _null, t2), _null), D.PlaceholderAlignment_5, _null, _null), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
      t1.push(new R.Flexible(1, G.FlexFit_1, _this.child, _null));
      return T.Directionality$(O.Row$(t1, G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, D.TextBaseline_0, _null, G.VerticalDirection_1), _this.textDirection);
    }
  };
  B.OrderedListView.prototype = {
    build$1(context) {
      var _this = this, _null = null;
      return T.Directionality$(O.Row$(C._setArrayType([new E.Padding(new E.EdgeInsetsDirectional(6, 0, 6, 0), M.Text$rich(E.TextSpan$(_null, _null, _this.no), _null, _null, _null, _null, _null, _null, _this._unordered_ordered_list$_style, _null, _null, _null, _null, _null, _null), _null), new R.Flexible(1, G.FlexFit_1, _this.child, _null)], type$.JSArray_Widget), G.CrossAxisAlignment_4, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, D.TextBaseline_0, _null, G.VerticalDirection_1), _this.textDirection);
    }
  };
  B.GptMarkdown.prototype = {
    build$1(context) {
      var _null = null,
        tex = D.JSString_methods.trim$0(this.data);
      return Al.ClipRRect$(F.BorderRadius_tUf, new B.MdWidget(tex, context, true, B.GptMarkdownConfig$(_null, _null, false, _null, _null, _null, _null, _null, _null, _null, this.onLinkTap, _null, _null, _null, this.style, _null, _null, D.TextDirection_1, _null, _null), _null));
    }
  };
  B.MarkdownComponent.prototype = {};
  B.InlineMd.prototype = {};
  B.BlockMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("^\\ *?" + this.get$expString() + "$", true, true, true, false);
    },
    span$3(_, context, text, config) {
      var child, _null = null,
        matches = C.RegExp_RegExp("^(?<spaces>\\ \\ +).*", true, false, false, false).firstMatch$1(text),
        spaces = matches == null ? _null : matches.namedGroup$1("spaces"),
        $length = spaces == null ? _null : spaces.length;
      if ($length == null)
        $length = 0;
      child = this.build$3(context, text, config);
      $length = Math.min($length, 4);
      return new L.WidgetSpan(O.Row$(C._setArrayType([new R.Flexible(1, G.FlexFit_1, $length > 0 ? B.UnorderedListView$(_null, 4, child, 12, $length, config.textDirection) : child, _null)], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1), D.PlaceholderAlignment_0, D.TextBaseline_0, _null);
    }
  };
  B.IndentMd.prototype = {
    get$expString() {
      return "^(\\ \\ +)([^\\n]+)$";
    },
    build$3(context, text, config) {
      var t1, _null = null,
        match = this.get$exp().firstMatch$1(text),
        conf = config.copyWith$0();
      if (match == null)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
        t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
      }
      return T.Directionality$(O.Row$(C._setArrayType([new R.Flexible(1, G.FlexFit_1, config.getRich$1(E.TextSpan$(B.MarkdownComponent_generate(context, t1 == null ? "" : t1, conf, false), _null, _null)), _null)], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1), config.textDirection);
    }
  };
  B.HTag.prototype = {
    get$expString() {
      return "(?<hash>#{1,6})\\ (?<data>[^\\n]+?)$";
    },
    build$3(context, text, config) {
      var conf, t3, _null = null,
        theme = B.GptMarkdownTheme_of(context),
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = [theme.h1, theme.h2, theme.h3, theme.h4, theme.h5, theme.h6],
        t2 = match._match;
      if (1 >= t2.length)
        return C.ioore(t2, 1);
      t2 = t2[1].length - 1;
      if (!(t2 >= 0 && t2 < 6))
        return C.ioore(t1, t2);
      t2 = t1[t2];
      if (t2 == null)
        t1 = _null;
      else {
        t1 = config.style;
        t1 = t2.copyWith$1$color(t1 == null ? _null : t1.color);
      }
      conf = config.copyWith$1$style(t1);
      t1 = C.List_List$of(B.MarkdownComponent_generate(context, C.S(match.namedGroup$1("data")), conf, false), true, type$.InlineSpan);
      if (match.namedGroup$1("hash").length === 1) {
        t2 = config.style;
        t2 = t2 == null ? _null : t2.color;
        if (t2 == null) {
          t2 = H.Theme_of(context).colorScheme;
          t3 = t2._outline;
          if (t3 == null) {
            t3 = t2._onBackground;
            t2 = t3 == null ? t2.onSurface : t3;
          } else
            t2 = t3;
        }
        D.JSArray_methods.addAll$1(t1, C._setArrayType([A.TextSpan_0ck, new L.WidgetSpan(new B.CustomDivider(t2, theme.hrLineThickness, _null), D.PlaceholderAlignment_4, _null, _null)], type$.JSArray_InlineSpan));
      }
      return config.getRich$1(E.TextSpan$(t1, _null, _null));
    }
  };
  B.NewLines.prototype = {
    get$exp() {
      return C.RegExp_RegExp("\\n\\n+", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var _null = null,
        t1 = config.style,
        t2 = t1 == null,
        t3 = t2 ? _null : t1.fontSize;
      if (t3 == null)
        t3 = 14;
      return E.TextSpan$(_null, E.TextStyle$(_null, _null, t2 ? _null : t1.color, _null, _null, _null, _null, _null, _null, _null, _null, t3, _null, _null, _null, _null, 1.15, true, _null, _null, _null, _null, _null, _null, _null, _null), "\n\n");
    }
  };
  B.HrLine.prototype = {
    get$expString() {
      return "\u2e3b|((--)[-]+)$";
    },
    build$3(context, text, config) {
      var t1 = B.GptMarkdownTheme_of(context),
        color = B.GptMarkdownTheme_of(context).hrLineColor,
        t2 = config.style;
      t2 = t2 == null ? null : t2.color;
      if (t2 == null)
        t2 = color;
      return new B.CustomDivider(t2, t1.hrLineThickness, null);
    }
  };
  B.CheckBoxMd.prototype = {
    get$expString() {
      return "\\[((?:\\x|\\ ))\\]\\ (\\S[^\\n]*?)$";
    },
    build$3(context, text, config) {
      var t2, _null = null,
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        t2 = _null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t1)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
      }
      return new B.CustomCb(new B.MdWidget(C.S(t1), context, false, config, _null), C.S(t2) === "x", config.textDirection, _null);
    }
  };
  B.RadioButtonMd.prototype = {
    get$expString() {
      return "\\(((?:\\x|\\ ))\\)\\ (\\S[^\\n]*)$";
    },
    build$3(context, text, config) {
      var t2, _null = null,
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        t2 = _null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t1)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
      }
      return new B.CustomRb(new B.MdWidget(C.S(t1), context, false, config, _null), C.S(t2) === "x", config.textDirection, _null);
    }
  };
  B.BlockQuote.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?:(?:^)\\ *>[^\\n]+)(?:(?:\\n)\\ *>[^\\n]+)*", true, true, true, false);
    },
    span$3(_, context, text, config) {
      var m, t1, t2, _i, t3, each, subString, child, _null = null,
        match = C.RegExp_RegExp("(?:(?:^)\\ *>[^\\n]+)(?:(?:\\n)\\ *>[^\\n]+)*", true, true, true, false).firstMatch$1(text);
      if (match == null)
        m = _null;
      else {
        t1 = match._match;
        if (0 >= t1.length)
          return C.ioore(t1, 0);
        t1 = t1[0];
        m = t1;
      }
      for (t1 = (m == null ? "" : m).split("\n"), t2 = t1.length, _i = 0, t3 = ""; _i < t2; ++_i) {
        each = t1[_i];
        if (D.JSString_methods.startsWith$1(each, C.RegExp_RegExp("\\ *>", true, false, false, false))) {
          subString = D.JSString_methods.substring$1(D.JSString_methods.trimLeft$0(each), 1);
          t3 += (D.JSString_methods.startsWith$1(subString, " ") ? D.JSString_methods.substring$1(subString, 1) : subString) + "\n";
        } else
          t3 += each + "\n";
      }
      child = E.TextSpan$(B.MarkdownComponent_generate(context, D.JSString_methods.trim$0(t3.charCodeAt(0) == 0 ? t3 : t3), config, true), _null, _null);
      t1 = config.textDirection;
      t2 = H.Theme_of(context).colorScheme;
      t3 = t2._onSurfaceVariant;
      t2 = t3 == null ? t2.onSurface : t3;
      return E.TextSpan$(C._setArrayType([new L.WidgetSpan(T.Directionality$(new E.Padding(Av.EdgeInsets_0_2_0_2, new B.BlockQuoteWidget(new E.Padding(A.EdgeInsetsDirectional_8_0_0_0, config.getRich$1(child), _null), t1, t2, 3, _null), _null), t1), D.PlaceholderAlignment_4, _null, _null)], type$.JSArray_InlineSpan), _null, _null);
    }
  };
  B.UnOrderedList.prototype = {
    get$expString() {
      return "(?:\\-|\\*)\\ ([^\\n]+)$";
    },
    build$3(context, text, config) {
      var t1, t2, t3, t4, _null = null,
        match = this.get$exp().firstMatch$1(text);
      if (match == null)
        t1 = _null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
      }
      t2 = config.style;
      t3 = t2 == null;
      t4 = t3 ? _null : t2.color;
      if (t4 == null) {
        t4 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
        t4 = (t4 == null ? G.DefaultTextStyle_4Wa : t4).style.color;
      }
      t2 = t3 ? _null : t2.fontSize;
      if (t2 == null) {
        t2 = context.dependOnInheritedWidgetOfExactType$1$0(type$.DefaultTextStyle);
        t2 = (t2 == null ? G.DefaultTextStyle_4Wa : t2).style.fontSize;
      }
      t1 = B.UnorderedListView$(t4, 0.3 * (t2 == null ? 14 : t2), new B.MdWidget(C.S(t1), context, true, config, _null), 7, 10, config.textDirection);
      return t1;
    }
  };
  B.OrderedList.prototype = {
    get$expString() {
      return "([0-9]+)\\.\\ ([^\\n]+)$";
    },
    build$3(context, text, config) {
      var t2, t3, _null = null,
        match = this.get$exp().firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        t2 = _null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t1)
        t1 = _null;
      else {
        t1 = match._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
        t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
      }
      t3 = config.style;
      t1 = new B.OrderedListView(C.S(t2) + ".", (t3 == null ? F.TextStyle_ZyH : t3).copyWith$1$fontWeight(F.FontWeight_0), config.textDirection, new B.MdWidget(C.S(t1), context, true, config, _null), _null);
      return t1;
    }
  };
  B.HighlightedText.prototype = {
    get$exp() {
      return C.RegExp_RegExp("`(?!`)(.+?)(?<!`)`(?!`)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var highlightedText, t1, style, t2, _null = null,
        match = C.RegExp_RegExp("`(?!`)(.+?)(?<!`)`(?!`)", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text));
      if (match == null)
        highlightedText = _null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        highlightedText = t1;
      }
      if (highlightedText == null)
        highlightedText = "";
      t1 = config.style;
      if (t1 == null)
        style = _null;
      else {
        t2 = $.$get$_renderer().createPaint$0();
        t2.set$color(0, B.GptMarkdownTheme_of(context).highlightColor);
        t2.set$strokeCap(D.StrokeCap_1);
        t2.set$strokeJoin(D.StrokeJoin_1);
        t2 = t1.copyWith$2$background$fontWeight(t2, F.FontWeight_6);
        style = t2;
      }
      if (style == null) {
        t1 = $.$get$_renderer().createPaint$0();
        t1.set$color(0, B.GptMarkdownTheme_of(context).highlightColor);
        t1.set$strokeCap(D.StrokeCap_1);
        t1.set$strokeJoin(D.StrokeJoin_1);
        style = E.TextStyle$(t1, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, F.FontWeight_6, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null);
      }
      return E.TextSpan$(_null, style, highlightedText);
    }
  };
  B.BoldMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?<!\\*)\\*\\*(?<!\\s)(.+?)(?<!\\s)\\*\\*(?!\\*)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var conf,
        match = C.RegExp_RegExp("(?<!\\*)\\*\\*(?<!\\s)(.+?)(?<!\\s)\\*\\*(?!\\*)", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = config.style;
      t1 = t1 == null ? null : t1.copyWith$1$fontWeight(F.FontWeight_6);
      conf = config.copyWith$1$style(t1 == null ? G.TextStyle_KXJ : t1);
      if (match == null)
        t1 = null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
      }
      return E.TextSpan$(B.MarkdownComponent_generate(context, C.S(t1), conf, false), conf.style, null);
    }
  };
  B.StrikeMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?<!\\*)\\~\\~(?<!\\s)(.+?)(?<!\\s)\\~\\~(?!\\*)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var t2, conf,
        match = C.RegExp_RegExp("(?<!\\*)\\~\\~(?<!\\s)(.+?)(?<!\\s)\\~\\~(?!\\*)", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = config.style;
      if (t1 == null)
        t1 = null;
      else {
        t2 = t1.color;
        t1 = t1.copyWith$2$decoration$decorationColor(D.TextDecoration_4, t2);
      }
      conf = config.copyWith$1$style(t1 == null ? A.TextStyle_HPw : t1);
      if (match == null)
        t1 = null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
      }
      return E.TextSpan$(B.MarkdownComponent_generate(context, C.S(t1), conf, false), conf.style, null);
    }
  };
  B.ItalicMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?:(?<!\\*)\\*(?<!\\s)(.+?)(?<!\\s)\\*(?!\\*))", true, true, false, false);
    },
    span$3(_, context, text, config) {
      var data, t2, conf,
        match = C.RegExp_RegExp("(?:(?<!\\*)\\*(?<!\\s)(.+?)(?<!\\s)\\*(?!\\*))", true, true, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = match == null;
      if (t1)
        data = null;
      else {
        t2 = match._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
        data = t2;
      }
      if (data == null)
        if (t1)
          data = null;
        else {
          t1 = match._match;
          if (2 >= t1.length)
            return C.ioore(t1, 2);
          t1 = t1[2];
          data = t1;
        }
      t1 = config.style;
      conf = config.copyWith$1$style((t1 == null ? F.TextStyle_ZyH : t1).copyWith$1$fontStyle(A.FontStyle_1));
      return E.TextSpan$(B.MarkdownComponent_generate(context, C.S(data), conf, false), conf.style, null);
    }
  };
  B.LatexMathMultiLine.prototype = {
    get$expString() {
      return string$.x5c_____;
    },
    get$exp() {
      return C.RegExp_RegExp(string$.x5c_____, true, true, true, false);
    },
    build$3(context, text, config) {
      var t2, mathText, workaround,
        p0 = C.RegExp_RegExp(string$.x5c_____, true, true, true, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = p0 == null;
      if (t1)
        t2 = null;
      else {
        t2 = p0._match;
        if (1 >= t2.length)
          return C.ioore(t2, 1);
        t2 = t2[1];
      }
      if (t2 == null) {
        if (t1)
          t1 = null;
        else {
          t1 = p0._match;
          if (2 >= t1.length)
            return C.ioore(t1, 2);
          t1 = t1[2];
        }
        mathText = t1;
      } else
        mathText = t2;
      if (mathText == null)
        mathText = "";
      workaround = new B.LatexMathMultiLine_build_closure();
      t1 = workaround.call$1(mathText);
      t2 = config.style;
      if (t2 == null)
        t2 = F.TextStyle_ZyH;
      return new B.LatexMathMultiLine_build_closure0(config, workaround, mathText).call$4(context, t1, t2, false);
    }
  };
  B.LatexMath.prototype = {
    get$exp() {
      return C.RegExp_RegExp(D.JSArray_methods.join$1(C._setArrayType(["\\\\\\((.*?)\\\\\\)"], type$.JSArray_String), "|"), true, true, false, false);
    },
    span$3(_, context, text, config) {
      var t2, mathText, workaround,
        p0 = C.RegExp_RegExp(D.JSArray_methods.join$1(C._setArrayType(["\\\\\\((.*?)\\\\\\)"], type$.JSArray_String), "|"), true, true, false, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = p0 == null;
      if (!t1) {
        t2 = p0._match;
        if (0 >= t2.length)
          return C.ioore(t2, 0);
      }
      if (t1)
        mathText = null;
      else {
        t1 = p0._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        if (t1 == null)
          t1 = null;
        mathText = t1;
      }
      if (mathText == null)
        mathText = "";
      workaround = new B.LatexMath_span_closure();
      t1 = workaround.call$1(mathText);
      t2 = config.style;
      if (t2 == null)
        t2 = F.TextStyle_ZyH;
      return new L.WidgetSpan(new B.LatexMath_span_closure0(config, workaround, mathText).call$4(context, t1, t2, true), D.PlaceholderAlignment_0, D.TextBaseline_0, null);
    }
  };
  B.SourceTag.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?:\u3010.*?)?\\[(\\d+?)\\]", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var $content, t1, t2, _null = null,
        match = C.RegExp_RegExp("(?:\u3010.*?)?\\[(\\d+?)\\]", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text));
      if (match == null)
        $content = _null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        $content = t1[1];
      }
      if ($content == null)
        return A.TextSpan_DuQ;
      t1 = H.Theme_of(context).colorScheme;
      t2 = t1._onInverseSurface;
      t1 = t2 == null ? t1.surface : t2;
      t1 = new E.SizedBox(20, 20, M.Material$(D.Duration_200000, true, _null, B.FittedBox$(F.Alignment_0_0, U.Text$($content, _null, _null, _null, _null, _null, _null, _null, _null, _null, config.textDirection, _null, _null, _null), D.Clip_0, P.BoxFit_6), D.Clip_0, t1, 0, _null, _null, A.OvalBorder_0SS, _null, _null, X.MaterialType_0), _null);
      return new L.WidgetSpan(new E.Padding(As.EdgeInsets_2_2_2_2, t1, _null), D.PlaceholderAlignment_5, _null, _null);
    }
  };
  B.ATagMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("(?<!\\!)\\[.*\\]\\([^\\s]*\\)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var end, t2, linkText, urlStart, urlEnd, parenCount, char, url, endingSpans, theme, t3, linkTextSpan, _null = null,
        t1 = text.length,
        bracketCount = 0, i = 0;
      while (true) {
        if (!(i < t1)) {
          end = 0;
          break;
        }
        t2 = text[i];
        if (t2 === "[")
          ++bracketCount;
        else if (t2 === "]") {
          --bracketCount;
          if (bracketCount === 0) {
            end = i;
            break;
          }
        }
        ++i;
      }
      t2 = end + 1;
      if (!(t2 < t1))
        return C.ioore(text, t2);
      if (text[t2] !== "(")
        return A.TextSpan_DuQ;
      linkText = D.JSString_methods.substring$2(text, 1, end);
      urlStart = end + 2;
      i = urlStart;
      parenCount = 0;
      while (true) {
        if (!(i < t1)) {
          urlEnd = urlStart;
          break;
        }
        char = text[i];
        if (char === "(")
          ++parenCount;
        else if (char === ")")
          if (parenCount === 0) {
            urlEnd = i;
            break;
          } else
            --parenCount;
        ++i;
      }
      if (urlEnd === urlStart)
        return A.TextSpan_DuQ;
      url = D.JSString_methods.trim$0(D.JSString_methods.substring$2(text, urlStart, urlEnd));
      endingSpans = B.MarkdownComponent_generate(context, D.JSString_methods.substring$1(text, urlEnd + 1), config, false);
      theme = B.GptMarkdownTheme_of(context);
      t1 = B.MarkdownComponent_generate(context, linkText, config, false);
      t2 = config.style;
      if (t2 == null)
        t2 = _null;
      else {
        t3 = theme.linkColor;
        t3 = t2.copyWith$2$color$decorationColor(t3, t3);
        t2 = t3;
      }
      linkTextSpan = E.TextSpan$(t1, t2, _null);
      t1 = config.getRich$1(linkTextSpan);
      t1 = C._setArrayType([new L.WidgetSpan(new B.LinkButton(linkText, t1, new B.ATagMd_span_closure(config, url, linkText), config, theme.linkColor, theme.linkHoverColor, _null), D.PlaceholderAlignment_0, D.TextBaseline_0, _null)], type$.JSArray_InlineSpan);
      D.JSArray_methods.addAll$1(t1, endingSpans);
      return E.TextSpan$(t1, _null, _null);
    }
  };
  B.ImageMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("\\!\\[[^\\[\\]]*\\]\\([^\\s]*\\)", true, false, false, false);
    },
    span$3(_, context, text, config) {
      var t1, altText, urlStart, urlEnd, i, parenCount, char, url, size, t2, width, height, _null = null,
        basicMatch = C.RegExp_RegExp("\\!\\[([^\\[\\]]*)\\]\\(", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(text));
      if (basicMatch == null)
        return A.TextSpan_DuQ;
      t1 = basicMatch._match;
      if (1 >= t1.length)
        return C.ioore(t1, 1);
      altText = t1[1];
      if (altText == null)
        altText = "";
      urlStart = basicMatch.get$end(0);
      t1 = text.length;
      i = urlStart;
      parenCount = 0;
      while (true) {
        if (!(i < t1)) {
          urlEnd = urlStart;
          break;
        }
        if (!(i >= 0))
          return C.ioore(text, i);
        char = text[i];
        if (char === "(")
          ++parenCount;
        else if (char === ")")
          if (parenCount === 0) {
            urlEnd = i;
            break;
          } else
            --parenCount;
        ++i;
      }
      if (urlEnd === urlStart)
        return A.TextSpan_DuQ;
      url = D.JSString_methods.trim$0(D.JSString_methods.substring$2(text, urlStart, urlEnd));
      if (altText.length !== 0) {
        size = C.RegExp_RegExp("^([0-9]+)?x?([0-9]+)?", true, false, false, false).firstMatch$1(D.JSString_methods.trim$0(altText));
        t1 = size == null;
        if (t1)
          t2 = _null;
        else {
          t2 = size._match;
          if (1 >= t2.length)
            return C.ioore(t2, 1);
          t2 = t2[1];
          t2 = t2 == null ? _null : D.JSString_methods.trim$0(t2);
        }
        width = C.Primitives_parseDouble(t2 == null ? "a" : t2);
        if (t1)
          t1 = _null;
        else {
          t1 = size._match;
          if (2 >= t1.length)
            return C.ioore(t1, 2);
          t1 = t1[2];
          t1 = t1 == null ? _null : D.JSString_methods.trim$0(t1);
        }
        height = C.Primitives_parseDouble(t1 == null ? "a" : t1);
      } else {
        width = _null;
        height = width;
      }
      t1 = Ax.Image$(new B.ImageMd_span_closure(), P.BoxFit_0, _null, _null, new B.NetworkImage(url), new B.ImageMd_span_closure0(), _null, _null);
      return new L.WidgetSpan(new E.SizedBox(width, height, t1, _null), D.PlaceholderAlignment_4, _null, _null);
    }
  };
  B.TableMd.prototype = {
    get$expString() {
      return "(((\\|[^\\n\\|]+\\|)((([^\\n\\|]+\\|)+)?)\\ *)(\\n\\ *(((\\|[^\\n\\|]+\\|)(([^\\n\\|]+\\|)+)?))\\ *)+)$";
    },
    build$3(context, text, config) {
      var hasHeader, separatorRow, _i, each, t2, controller, side, _null = null, _box_0 = {},
        t1 = type$.MappedListIterable_of_String_and_Map_int_String,
        value = C.List_List$of(new C.MappedListIterable(C._setArrayType(text.split("\n"), type$.JSArray_String), type$.Map_int_String_Function_String._as(new B.TableMd_build_closure()), t1), true, t1._eval$1("ListIterable.E"));
      t1 = value.length;
      hasHeader = t1 >= 2;
      _box_0.columnAlignments = C._setArrayType([], type$.JSArray_TextAlign);
      if (hasHeader) {
        separatorRow = value[1];
        _box_0.columnAlignments = C.List_List$generate(J.get$length$asx(separatorRow), new B.TableMd_build_closure0(separatorRow), true, type$.TextAlign);
      }
      _box_0.maxCol = 0;
      for (_i = 0; _i < value.length; value.length === t1 || (0, C.throwConcurrentModificationError)(value), ++_i) {
        each = value[_i];
        t2 = J.getInterceptor$x(each);
        if (_box_0.maxCol < J.get$length$asx(t2.get$keys(each)))
          _box_0.maxCol = J.get$length$asx(t2.get$keys(each));
      }
      if (_box_0.maxCol === 0)
        return U.Text$("", _null, _null, _null, _null, _null, _null, _null, config.style, _null, _null, _null, _null, _null);
      for (; t1 = _box_0.columnAlignments, t1.length < _box_0.maxCol;)
        D.JSArray_methods.add$1(t1, D.TextAlign_0);
      controller = Ab.ScrollController$(_null, _null);
      side = new E.BorderSide(H.Theme_of(context).colorScheme.onSurface, 1, F.BorderStyle_1, -1);
      t1 = new C.ListMapView(value, C._arrayInstanceType(value)._eval$1("ListMapView<1>"));
      return Ai.Scrollbar$(A5.SingleChildScrollView$(A1.Table$(new B.TableBorder(side, side, side, side, side, side, F.BorderRadius_tUf), t1.get$entries(t1).where$1(0, new B.TableMd_build_closure1(hasHeader)).map$1$1(0, new B.TableMd_build_closure2(_box_0, hasHeader, context, config), type$.TableRow).toList$0(0), _null, new B.CustomTableColumnWidth(), A6.TableCellVerticalAlignment_1, config.textDirection), controller, G.DragStartBehavior_1, _null, _null, D.Axis_0), controller);
    }
  };
  B.CodeBlockMd.prototype = {
    get$expString() {
      return "```(.*?)\\n((.*?)(:?\\n\\s*?```)|(.*)(:?\\n```)?)$";
    },
    build$3(context, text, config) {
      var codes, $name,
        t1 = this.get$exp().firstMatch$1(text);
      if (t1 == null)
        codes = null;
      else {
        t1 = t1._match;
        if (2 >= t1.length)
          return C.ioore(t1, 2);
        t1 = t1[2];
        codes = t1;
      }
      if (codes == null)
        codes = "";
      t1 = this.get$exp().firstMatch$1(text);
      if (t1 == null)
        $name = null;
      else {
        t1 = t1._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
        $name = t1;
      }
      if ($name == null)
        $name = "";
      codes = D.JSString_methods.trim$0(C.stringReplaceAllUnchecked(codes, "```", ""));
      D.JSString_methods.endsWith$1(text, "```");
      return new B.CodeField($name, codes, null);
    }
  };
  B.UnderLineMd.prototype = {
    get$exp() {
      return C.RegExp_RegExp("<u>(.*?)(?:</u>|$)", true, true, true, false);
    },
    span$3(_, context, text, config) {
      var match = C.RegExp_RegExp("<u>(.*?)(?:</u>|$)", true, true, true, false).firstMatch$1(D.JSString_methods.trim$0(text)),
        t1 = config.style,
        t2 = t1 == null,
        t3 = t2 ? F.TextStyle_ZyH : t1,
        conf = config.copyWith$1$style(t3.copyWith$2$decoration$decorationColor(D.TextDecoration_1, t2 ? null : t1.color));
      if (match == null)
        t1 = null;
      else {
        t1 = match._match;
        if (1 >= t1.length)
          return C.ioore(t1, 1);
        t1 = t1[1];
      }
      return E.TextSpan$(B.MarkdownComponent_generate(context, C.S(t1), conf, false), conf.style, null);
    }
  };
  B.MdWidget.prototype = {
    createState$0() {
      return new B._MdWidgetState(C._setArrayType([], type$.JSArray_InlineSpan));
    }
  };
  B._MdWidgetState.prototype = {
    initState$0() {
      this.super$State$initState();
      var t1 = this._widget;
      this.set$list(0, B.MarkdownComponent_generate(t1.context, t1.exp, t1.config, t1.includeGlobalComponents));
    },
    didUpdateWidget$1(oldWidget) {
      var t1, t2, t3, _this = this;
      type$.MdWidget._as(oldWidget);
      _this.super$State$didUpdateWidget(oldWidget);
      t1 = _this._widget;
      if (oldWidget.exp === t1.exp) {
        t2 = oldWidget.config;
        t1 = t1.config;
        t3 = false;
        if (J.$eq$(t2.style, t1.style))
          t1 = t2.textDirection === t1.textDirection;
        else
          t1 = t3;
        t1 = !t1;
      } else
        t1 = true;
      if (t1) {
        t1 = _this._framework$_element;
        t1.toString;
        t2 = _this._widget;
        _this.set$list(0, B.MarkdownComponent_generate(t1, t2.exp, t2.config, t2.includeGlobalComponents));
      }
    },
    build$1(context) {
      var t1 = this._widget.config,
        t2 = this.list,
        t3 = t1.style;
      return t1.getRich$1(E.TextSpan$(t2, t3 == null ? null : t3.copyWith$0(), null));
    },
    set$list(_, list) {
      this.list = type$.List_InlineSpan._as(list);
    }
  };
  B.CustomTableColumnWidth.prototype = {
    maxIntrinsicWidth$2(cells, containerWidth) {
      var t1, t2, width, t3, t4;
      type$.Iterable_RenderBox._as(cells);
      for (t1 = cells.$ti, t2 = new C._SyncStarIterator(cells._outerHelper(), t1._eval$1("_SyncStarIterator<1>")), t1 = t1._precomputed1, width = 50; t2.moveNext$0();) {
        t3 = t2._async$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        t3.layout$2$parentUsesSize(N.BoxConstraints_0Yu, true);
        t4 = t3._box$_size;
        width = Math.max(width, (t4 == null ? C.throwExpression(C.StateError$("RenderBox was not laid out: " + C.getRuntimeTypeOfDartObject(t3).toString$0(0) + "#" + C.shortHash(t3))) : t4)._dx);
      }
      return Math.min(containerWidth, width);
    },
    minIntrinsicWidth$2(cells, containerWidth) {
      type$.Iterable_RenderBox._as(cells);
      return 50;
    }
  };
  B.GptMarkdownThemeData.prototype = {
    lerp$2(other, t) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, _this = this;
      type$.nullable_GptMarkdownThemeData._as(other);
      if (other == null)
        return _this;
      t1 = _this.highlightColor;
      t2 = E.Color_lerp(t1, other.highlightColor, t);
      t1 = t2 == null ? t1 : t2;
      t2 = _this.h1;
      t3 = M.TextStyle_lerp(t2, other.h1, t);
      t2 = t3 == null ? t2 : t3;
      t3 = _this.h2;
      t4 = M.TextStyle_lerp(t3, other.h2, t);
      t3 = t4 == null ? t3 : t4;
      t4 = _this.h3;
      t5 = M.TextStyle_lerp(t4, other.h3, t);
      t4 = t5 == null ? t4 : t5;
      t5 = _this.h4;
      t6 = M.TextStyle_lerp(t5, other.h4, t);
      t5 = t6 == null ? t5 : t6;
      t6 = _this.h5;
      t7 = M.TextStyle_lerp(t6, other.h5, t);
      t6 = t7 == null ? t6 : t7;
      t7 = _this.h6;
      t8 = M.TextStyle_lerp(t7, other.h6, t);
      t7 = t8 == null ? t7 : t8;
      t8 = new E.Tween(_this.hrLineThickness, other.hrLineThickness, type$.Tween_double).transform$1(0, t);
      t9 = _this.hrLineColor;
      t10 = E.Color_lerp(t9, other.hrLineColor, t);
      t9 = t10 == null ? t9 : t10;
      t10 = _this.linkColor;
      t11 = E.Color_lerp(t10, other.linkColor, t);
      t10 = t11 == null ? t10 : t11;
      t11 = _this.linkHoverColor;
      t12 = E.Color_lerp(t11, other.linkHoverColor, t);
      return new B.GptMarkdownThemeData(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t12 == null ? t11 : t12);
    }
  };
  B.SingleChildStatefulWidget.prototype = {
    createElement$0(_) {
      var t1 = new B.SingleChildStatefulElement(null, this.createState$0(), this, D._ElementLifecycle_0);
      t1.get$state(0)._framework$_element = t1;
      t1.get$state(0).set$_widget(this);
      return t1;
    },
    $isSingleChildWidget: 1
  };
  B.SingleChildState.prototype = {
    build$1(context) {
      return this.buildWithChild$2(context, this._widget._nested$_child);
    }
  };
  B.SingleChildStatefulElement.prototype = {
    get$widget() {
      return type$.SingleChildStatefulWidget._as(C.Element.prototype.get$widget.call(this));
    },
    get$state(_) {
      return type$.SingleChildState_SingleChildStatefulWidget._as(C.StatefulElement.prototype.get$state.call(this, 0));
    },
    build$0() {
      var t1, t2, _this = this;
      if (_this.SingleChildWidgetElementMixin__parent != null) {
        t1 = type$.SingleChildState_SingleChildStatefulWidget._as(C.StatefulElement.prototype.get$state.call(_this, 0));
        t2 = _this.SingleChildWidgetElementMixin__parent.get$injectedChild();
        t2.toString;
        return t1.buildWithChild$2(_this, t2);
      }
      return _this.super$StatefulElement$build();
    }
  };
  B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin.prototype = {
    mount$2($parent, newSlot) {
      if (type$.nullable__NestedHookElement._is($parent))
        this.SingleChildWidgetElementMixin__parent = $parent;
      this.super$ComponentElement$mount($parent, newSlot);
    },
    activate$0() {
      this.super$StatefulElement$activate();
      this.visitAncestorElements$1(new B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure(this));
    }
  };
  B._PathOffset.prototype = {
    $add(_, other) {
      type$._PathOffset._as(other);
      return new B._PathOffset(this.dx + other.dx, this.dy + other.dy);
    },
    $sub(_, other) {
      type$._PathOffset._as(other);
      return new B._PathOffset(this.dx - other.dx, this.dy - other.dy);
    },
    $mul(_, operand) {
      return new B._PathOffset(this.dx * operand, this.dy * operand);
    },
    toString$0(_) {
      return "PathOffset{" + C.S(this.dx) + "," + C.S(this.dy) + "}";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B._PathOffset && other.dx === this.dx && other.dy === this.dy;
    },
    get$hashCode(_) {
      return ((391 ^ D.JSNumber_methods.get$hashCode(this.dx)) * 23 ^ D.JSNumber_methods.get$hashCode(this.dy)) >>> 0;
    }
  };
  B.SvgPathStringSource.prototype = {
    _skipOptionalSvgSpaces$0() {
      var t1, t2, t3, t4, c, t5, _this = this;
      for (t1 = _this._path_parsing$_string, t2 = t1.length, t3 = _this._path_parsing$_length; true;) {
        t4 = _this._idx;
        if (t4 >= t3)
          return -1;
        if (!(t4 >= 0 && t4 < t2))
          return C.ioore(t1, t4);
        c = t1.charCodeAt(t4);
        if (c <= 32)
          t5 = c === 32 || c === 10 || c === 9 || c === 13 || c === 12;
        else
          t5 = false;
        if (!t5)
          return c;
        _this._idx = t4 + 1;
      }
    },
    _skipOptionalSvgSpacesOrDelimiter$0() {
      if (this._skipOptionalSvgSpaces$0() === 44) {
        ++this._idx;
        this._skipOptionalSvgSpaces$0();
      }
    },
    _maybeImplicitCommand$2(lookahead, nextCommand) {
      var t1;
      if (!(lookahead >= 48 && lookahead <= 57 || lookahead === 43 || lookahead === 45 || lookahead === 46) || this._previousCommand === A.SvgPathSegType_1)
        return nextCommand;
      t1 = this._previousCommand;
      if (t1 === A.SvgPathSegType_2)
        return A.SvgPathSegType_4;
      if (t1 === A.SvgPathSegType_3)
        return A.SvgPathSegType_5;
      return t1;
    },
    _readCodeUnit$0() {
      var t2, _this = this,
        t1 = _this._idx;
      if (t1 >= _this._path_parsing$_length)
        return -1;
      t2 = _this._path_parsing$_string;
      _this._idx = t1 + 1;
      if (!(t1 >= 0 && t1 < t2.length))
        return C.ioore(t2, t1);
      return t2.charCodeAt(t1);
    },
    _parseNumber$0() {
      var c, sign, integer, decimal, frac, number, t1, t2, exponentIsNegative, exponent, _this = this,
        _s16_ = "Numeric overflow";
      _this._skipOptionalSvgSpaces$0();
      c = _this._readCodeUnit$0();
      sign = 1;
      if (c === 43)
        c = _this._readCodeUnit$0();
      else if (c === 45) {
        c = _this._readCodeUnit$0();
        sign = -1;
      }
      if ((c < 48 || c > 57) && c !== 46)
        throw C.wrapException(C.StateError$("First character of a number must be one of [0-9+-.]."));
      integer = 0;
      while (true) {
        if (!(48 <= c && c <= 57))
          break;
        integer = integer * 10 + (c - 48);
        c = _this._readCodeUnit$0();
      }
      if (!(-17976931348623157e292 <= integer && integer <= 17976931348623157e292))
        throw C.wrapException(C.StateError$(_s16_));
      decimal = 0;
      if (c === 46) {
        c = _this._readCodeUnit$0();
        if (c < 48 || c > 57)
          throw C.wrapException(C.StateError$("There must be at least one digit following the ."));
        frac = 1;
        while (true) {
          if (!(48 <= c && c <= 57))
            break;
          frac *= 0.1;
          decimal += (c - 48) * frac;
          c = _this._readCodeUnit$0();
        }
      }
      number = (integer + decimal) * sign;
      t1 = _this._idx;
      t2 = false;
      if (t1 < _this._path_parsing$_length)
        if (c === 101 || c === 69) {
          t2 = _this._path_parsing$_string;
          if (!(t1 >= 0 && t1 < t2.length))
            return C.ioore(t2, t1);
          t1 = t2.charCodeAt(t1) !== 120 && t2.charCodeAt(t1) !== 109;
        } else
          t1 = t2;
      else
        t1 = t2;
      if (t1) {
        c = _this._readCodeUnit$0();
        if (c === 43) {
          c = _this._readCodeUnit$0();
          exponentIsNegative = false;
        } else {
          exponentIsNegative = c === 45;
          if (exponentIsNegative)
            c = _this._readCodeUnit$0();
        }
        if (c < 48 || c > 57)
          throw C.wrapException(C.StateError$("Missing exponent"));
        exponent = 0;
        while (true) {
          if (!(c >= 48 && c <= 57))
            break;
          exponent = exponent * 10 + (c - 48);
          c = _this._readCodeUnit$0();
        }
        if (exponentIsNegative)
          exponent = -exponent;
        if (!(-37 <= exponent && exponent <= 38))
          throw C.wrapException(C.StateError$("Invalid exponent " + exponent));
        if (exponent !== 0)
          number *= Math.pow(10, exponent);
      }
      if (!(-17976931348623157e292 <= number && number <= 17976931348623157e292))
        throw C.wrapException(C.StateError$(_s16_));
      if (c !== -1) {
        --_this._idx;
        _this._skipOptionalSvgSpacesOrDelimiter$0();
      }
      return number;
    },
    _parseArcFlag$0() {
      var t2, flagChar, _this = this,
        t1 = _this._idx;
      if (t1 >= _this._path_parsing$_length)
        throw C.wrapException(C.StateError$("Expected more data"));
      t2 = _this._path_parsing$_string;
      _this._idx = t1 + 1;
      if (!(t1 >= 0 && t1 < t2.length))
        return C.ioore(t2, t1);
      flagChar = t2.charCodeAt(t1);
      _this._skipOptionalSvgSpacesOrDelimiter$0();
      if (flagChar === 48)
        return false;
      else if (flagChar === 49)
        return true;
      else
        throw C.wrapException(C.StateError$("Invalid flag value"));
    },
    parseSegments$0() {
      return new C._SyncStarIterable(this.parseSegments$body$SvgPathStringSource(), type$._SyncStarIterable_PathSegmentData);
    },
    parseSegments$body$SvgPathStringSource() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$errorStack = [], t1;
        return function $async$parseSegments$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._path_parsing$_length;
              case 2:
                // for condition
                if (!($async$self._idx < t1)) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                $async$goto = 4;
                return $async$iterator._async$_current = $async$self.parseSegment$0(), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    parseSegment$0() {
      var lookahead, command, target, _this = this,
        segment = B.PathSegmentData$(),
        t1 = _this._path_parsing$_string,
        t2 = _this._idx;
      if (!(t2 >= 0 && t2 < t1.length))
        return C.ioore(t1, t2);
      lookahead = t1.charCodeAt(t2);
      command = A.Map_42CKi.$index(0, lookahead);
      if (command == null)
        command = A.SvgPathSegType_0;
      if (_this._previousCommand === A.SvgPathSegType_0) {
        if (command !== A.SvgPathSegType_3 && command !== A.SvgPathSegType_2)
          throw C.wrapException(C.StateError$("Expected to find moveTo command"));
        ++_this._idx;
      } else if (command === A.SvgPathSegType_0) {
        command = _this._maybeImplicitCommand$2(lookahead, command);
        if (command === A.SvgPathSegType_0)
          throw C.wrapException(C.StateError$("Expected a path command"));
      } else
        ++_this._idx;
      segment.command = _this._previousCommand = command;
      switch (command.index) {
        case 7:
        case 6:
          target = 1;
          break;
        case 17:
        case 16:
          target = 2;
          break;
        case 3:
        case 2:
        case 5:
        case 4:
        case 19:
        case 18:
          target = 3;
          break;
        case 13:
        case 12:
          target = 4;
          break;
        case 15:
        case 14:
          target = 5;
          break;
        case 1:
          target = 6;
          break;
        case 9:
        case 8:
          target = 7;
          break;
        case 11:
        case 10:
          target = 8;
          break;
        case 0:
          target = 9;
          break;
        default:
          target = null;
          break;
      }
      if (target)
        c$0:
          for (; true;)
            switch (target) {
              case 1:
                segment.point1 = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                target = 2;
                continue c$0;
              case 2:
                segment.point2 = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                target = 3;
                continue c$0;
              case 3:
                segment.targetPoint = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                break c$0;
              case 4:
                segment.targetPoint = new B._PathOffset(_this._parseNumber$0(), segment.targetPoint.dy);
                break c$0;
              case 5:
                segment.targetPoint = new B._PathOffset(segment.targetPoint.dx, _this._parseNumber$0());
                break c$0;
              case 6:
                _this._skipOptionalSvgSpaces$0();
                break c$0;
              case 7:
                segment.point1 = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                segment.targetPoint = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                break c$0;
              case 8:
                segment.point1 = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                segment.point2 = new B._PathOffset(_this._parseNumber$0(), segment.point2.dy);
                segment.arcLarge = _this._parseArcFlag$0();
                segment.arcSweep = _this._parseArcFlag$0();
                segment.targetPoint = new B._PathOffset(_this._parseNumber$0(), _this._parseNumber$0());
                break c$0;
              case 9:
                throw C.wrapException(C.StateError$("Unknown segment command"));
            }
      return segment;
    }
  };
  B.PathSegmentData.prototype = {
    toString$0(_) {
      var _this = this;
      return "PathSegmentData{" + _this.command.toString$0(0) + " " + _this.targetPoint.toString$0(0) + " " + _this.point1.toString$0(0) + " " + _this.point2.toString$0(0) + " " + _this.arcSweep + " " + _this.arcLarge + "}";
    }
  };
  B.SvgPathNormalizer.prototype = {
    emitSegment$2(segment, path) {
      var target, t1, t2, t3, t4, t5, t6, _this = this;
      switch (segment.command.index) {
        case 9:
          target = 1;
          break;
        case 7:
          target = 2;
          break;
        case 17:
          target = 3;
          break;
        case 3:
        case 5:
        case 13:
        case 15:
        case 19:
        case 11:
          target = 4;
          break;
        case 12:
          target = 5;
          break;
        case 14:
          target = 6;
          break;
        case 1:
          target = 7;
          break;
        default:
          target = 8;
          break;
      }
      c$0:
        for (; true;)
          switch (target) {
            case 1:
              t1 = segment.point1;
              t2 = _this._currentPoint;
              t3 = t2.dx;
              t2 = t2.dy;
              segment.point1 = new B._PathOffset(t1.dx + t3, t1.dy + t2);
              t1 = segment.targetPoint;
              segment.targetPoint = new B._PathOffset(t1.dx + t3, t1.dy + t2);
              break c$0;
            case 2:
              t1 = segment.point1;
              t2 = _this._currentPoint;
              segment.point1 = new B._PathOffset(t1.dx + t2.dx, t1.dy + t2.dy);
              target = 3;
              continue c$0;
            case 3:
              t1 = segment.point2;
              t2 = _this._currentPoint;
              segment.point2 = new B._PathOffset(t1.dx + t2.dx, t1.dy + t2.dy);
              target = 4;
              continue c$0;
            case 4:
              t1 = segment.targetPoint;
              t2 = _this._currentPoint;
              segment.targetPoint = new B._PathOffset(t1.dx + t2.dx, t1.dy + t2.dy);
              break c$0;
            case 5:
              segment.targetPoint = new B._PathOffset(segment.targetPoint.dx, _this._currentPoint.dy);
              break c$0;
            case 6:
              segment.targetPoint = new B._PathOffset(_this._currentPoint.dx, segment.targetPoint.dy);
              break c$0;
            case 7:
              segment.targetPoint = _this._subPathPoint;
              break c$0;
            case 8:
              break c$0;
          }
      switch (segment.command.index) {
        case 3:
        case 2:
          target = 1;
          break;
        case 5:
        case 4:
        case 13:
        case 12:
        case 15:
        case 14:
          target = 2;
          break;
        case 1:
          target = 3;
          break;
        case 17:
        case 16:
          target = 4;
          break;
        case 7:
        case 6:
          target = 5;
          break;
        case 19:
        case 18:
          target = 6;
          break;
        case 9:
        case 8:
          target = 7;
          break;
        case 11:
        case 10:
          target = 8;
          break;
        default:
          target = 9;
          break;
      }
      c$3:
        for (; true;)
          switch (target) {
            case 1:
              t1 = _this._subPathPoint = segment.targetPoint;
              D.JSArray_methods.add$1(path._path$_commands, new B.MoveToCommand(t1.dx, t1.dy, A.PathCommandType_0));
              break c$3;
            case 2:
              t1 = segment.targetPoint;
              D.JSArray_methods.add$1(path._path$_commands, new B.LineToCommand(t1.dx, t1.dy, A.PathCommandType_1));
              break c$3;
            case 3:
              D.JSArray_methods.add$1(path._path$_commands, A.CloseCommand_PathCommandType_3);
              break c$3;
            case 4:
              t1 = _this._lastCommand;
              t1 = t1 === A.SvgPathSegType_6 || t1 === A.SvgPathSegType_7 || t1 === A.SvgPathSegType_16 || t1 === A.SvgPathSegType_17;
              t2 = _this._currentPoint;
              if (!t1)
                segment.point1 = t2;
              else {
                t1 = _this._controlPoint;
                segment.point1 = new B._PathOffset(2 * t2.dx - t1.dx, 2 * t2.dy - t1.dy);
              }
              target = 5;
              continue c$3;
            case 5:
              t1 = _this._controlPoint = segment.point2;
              t2 = segment.point1;
              t3 = segment.targetPoint;
              D.JSArray_methods.add$1(path._path$_commands, new B.CubicToCommand(t2.dx, t2.dy, t1.dx, t1.dy, t3.dx, t3.dy, A.PathCommandType_2));
              break c$3;
            case 6:
              t1 = _this._lastCommand;
              t1 = t1 === A.SvgPathSegType_8 || t1 === A.SvgPathSegType_9 || t1 === A.SvgPathSegType_18 || t1 === A.SvgPathSegType_19;
              t2 = _this._currentPoint;
              if (!t1)
                segment.point1 = t2;
              else {
                t1 = _this._controlPoint;
                segment.point1 = new B._PathOffset(2 * t2.dx - t1.dx, 2 * t2.dy - t1.dy);
              }
              target = 7;
              continue c$3;
            case 7:
              t1 = _this._controlPoint = segment.point1;
              t2 = _this._currentPoint;
              t3 = 2 * t1.dx;
              t4 = (t2.dx + t3) * 0.3333333333333333;
              t1 = 2 * t1.dy;
              t2 = (t2.dy + t1) * 0.3333333333333333;
              segment.point1 = new B._PathOffset(t4, t2);
              t5 = segment.targetPoint;
              t6 = t5.dx;
              t3 = (t6 + t3) * 0.3333333333333333;
              t5 = t5.dy;
              t1 = (t5 + t1) * 0.3333333333333333;
              segment.point2 = new B._PathOffset(t3, t1);
              D.JSArray_methods.add$1(path._path$_commands, new B.CubicToCommand(t4, t2, t3, t1, t6, t5, A.PathCommandType_2));
              break c$3;
            case 8:
              if (!_this._decomposeArcToCubic$3(_this._currentPoint, segment, path)) {
                t1 = segment.targetPoint;
                D.JSArray_methods.add$1(path._path$_commands, new B.LineToCommand(t1.dx, t1.dy, A.PathCommandType_1));
              }
              break c$3;
            case 9:
              throw C.wrapException(C.StateError$("Invalid command type in path"));
          }
      t1 = segment.targetPoint;
      _this._currentPoint = t1;
      t2 = segment.command;
      if (!B.isCubicCommand(t2) && !B.isQuadraticCommand(t2))
        _this._controlPoint = t1;
      _this._lastCommand = t2;
    },
    _decomposeArcToCubic$3(currentPoint, arcSegment, path) {
      var angle, midPointDistance, pointTransform, transformedMidPoint, t2, t3, radiiScale, point1, point2, delta, scaleFactor, centerPoint, theta1, thetaArc, segments, i, startTheta, endTheta, t, sinStartTheta, cosStartTheta, sinEndTheta, cosEndTheta, t4, t5, t6, t7, _this = this,
        t1 = arcSegment.point1,
        rx = Math.abs(t1.dx),
        ry = Math.abs(t1.dy);
      if (rx === 0 || ry === 0)
        return false;
      if (arcSegment.targetPoint.$eq(0, currentPoint))
        return false;
      angle = arcSegment.point2.dx * 0.017453292519943295;
      midPointDistance = currentPoint.$sub(0, arcSegment.targetPoint).$mul(0, 0.5);
      pointTransform = new B.Matrix41(new Float32Array(16));
      pointTransform.setIdentity$0();
      t1 = -angle;
      pointTransform.rotateZ$1(t1);
      transformedMidPoint = _this._mapPoint$2(pointTransform, new B._PathOffset(midPointDistance.dx, midPointDistance.dy));
      t2 = transformedMidPoint.dx;
      t3 = transformedMidPoint.dy;
      radiiScale = t2 * t2 / (rx * rx) + t3 * t3 / (ry * ry);
      if (radiiScale > 1) {
        rx *= Math.sqrt(radiiScale);
        ry *= Math.sqrt(radiiScale);
      }
      pointTransform.setIdentity$0();
      pointTransform.scale$2(0, 1 / rx, 1 / ry);
      pointTransform.rotateZ$1(t1);
      point1 = _this._mapPoint$2(pointTransform, currentPoint);
      point2 = _this._mapPoint$2(pointTransform, arcSegment.targetPoint);
      delta = point2.$sub(0, point1);
      t1 = delta.dx;
      t2 = delta.dy;
      scaleFactor = Math.sqrt(Math.max(1 / (t1 * t1 + t2 * t2) - 0.25, 0));
      if (!isFinite(scaleFactor))
        scaleFactor = 0;
      delta = delta.$mul(0, arcSegment.arcSweep === arcSegment.arcLarge ? -scaleFactor : scaleFactor);
      t1 = point1.$add(0, point2).$mul(0, 0.5);
      t2 = t1.dx + -delta.dy;
      t1 = t1.dy + delta.dx;
      centerPoint = new B._PathOffset(t2, t1);
      point1 = point1.$sub(0, centerPoint);
      theta1 = Math.atan2(point1.dy, point1.dx);
      point2 = point2.$sub(0, centerPoint);
      thetaArc = Math.atan2(point2.dy, point2.dx) - theta1;
      if (thetaArc < 0 && arcSegment.arcSweep)
        thetaArc += 6.283185307179586;
      else if (thetaArc > 0 && !arcSegment.arcSweep)
        thetaArc -= 6.283185307179586;
      pointTransform.setIdentity$0();
      pointTransform.rotateZ$1(angle);
      pointTransform.scale$2(0, rx, ry);
      segments = D.JSNumber_methods.ceil$0(Math.abs(thetaArc / 1.5717963267948964));
      for (t3 = path._path$_commands, i = 0; i < segments;) {
        startTheta = theta1 + i * thetaArc / segments;
        ++i;
        endTheta = theta1 + i * thetaArc / segments;
        t = 1.3333333333333333 * Math.tan(0.25 * (endTheta - startTheta));
        if (!isFinite(t))
          return false;
        sinStartTheta = Math.sin(startTheta);
        cosStartTheta = Math.cos(startTheta);
        sinEndTheta = Math.sin(endTheta);
        cosEndTheta = Math.cos(endTheta);
        t4 = cosEndTheta + t2;
        t5 = sinEndTheta + t1;
        t6 = _this._mapPoint$2(pointTransform, new B._PathOffset(cosStartTheta - t * sinStartTheta + t2, sinStartTheta + t * cosStartTheta + t1));
        t7 = _this._mapPoint$2(pointTransform, new B._PathOffset(t4 + t * sinEndTheta, t5 + -t * cosEndTheta));
        t5 = _this._mapPoint$2(pointTransform, new B._PathOffset(t4, t5));
        D.JSArray_methods.add$1(t3, new B.CubicToCommand(t6.dx, t6.dy, t7.dx, t7.dy, t5.dx, t5.dy, A.PathCommandType_2));
      }
      return true;
    },
    _mapPoint$2(transform, point) {
      var t1 = transform._vector_math$_m4storage,
        t2 = point.dx,
        t3 = point.dy;
      return new B._PathOffset(t1[0] * t2 + t1[4] * t3 + t1[12], t1[1] * t2 + t1[5] * t3 + t1[13]);
    }
  };
  B.SvgPathSegType.prototype = {
    _enumToString$0() {
      return "SvgPathSegType." + this._name;
    }
  };
  B.Context1.prototype = {
    toString$0(_) {
      return "Context[" + B.Token_positionString(this.buffer, this.position) + "]";
    }
  };
  B.ParserException.prototype = {
    get$message(_) {
      return this.failure.message;
    },
    get$offset(_) {
      return this.failure.position;
    },
    get$source(_) {
      return this.failure.buffer;
    },
    toString$0(_) {
      var t1 = this.failure;
      return this.super$Object$toString(0) + ": " + t1.message + " (at " + B.Token_positionString(t1.buffer, t1.position) + ")";
    },
    $isException: 1,
    $isFormatException: 1
  };
  B.Parser.prototype = {
    fastParseOn$2(buffer, position) {
      var result = this.parseOn$1(new B.Context1(buffer, position));
      return result instanceof B.Failure ? -1 : result.position;
    },
    get$children(_) {
      return A.List_empty28;
    },
    replace$2(_, source, target) {
    },
    toString$0(_) {
      var result = this.super$Object$toString(0);
      return D.JSString_methods.startsWith$1(result, "Instance of '") ? D.JSString_methods.replaceFirst$2(D.JSString_methods.substring$1(result, 13), "'", "") : result;
    }
  };
  B.Result.prototype = {};
  B.Success.prototype = {
    get$message(_) {
      return C.throwExpression(C.UnsupportedError$("Successful parse results do not have a message."));
    },
    toString$0(_) {
      return "Success[" + B.Token_positionString(this.buffer, this.position) + "]: " + C.S(this.value);
    },
    get$value(receiver) {
      return this.value;
    }
  };
  B.Failure.prototype = {
    get$value(_) {
      return C.throwExpression(new B.ParserException(this));
    },
    toString$0(_) {
      return "Failure[" + B.Token_positionString(this.buffer, this.position) + "]: " + this.message;
    },
    get$message(receiver) {
      return this.message;
    }
  };
  B.Token0.prototype = {
    get$length(_) {
      return this.stop - this.start;
    },
    toString$0(_) {
      return "Token[" + B.Token_positionString(this.buffer, this.start) + "]: " + C.S(this.value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.Token0 && J.$eq$(this.value, other.value) && this.start === other.start && this.stop === other.stop;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.value) + D.JSInt_methods.get$hashCode(this.start) + D.JSInt_methods.get$hashCode(this.stop);
    }
  };
  B.ReferenceParser.prototype = {
    parseOn$1(context) {
      return B._throwUnsupported();
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof B.ReferenceParser) {
        t1 = J.$eq$(this.$function, other.$function);
        if (!t1)
          return false;
        for (t1 = this.$arguments; false;) {
          if (0 >= 0)
            return C.ioore(t1, 0);
          return false;
        }
        return true;
      }
      return false;
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.$function);
    },
    $isResolvableParser: 1
  };
  B.MatchesIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new B.MatchesIterator(_this.parser, _this.input, false, _this.start, _this.$ti._eval$1("MatchesIterator<1>"));
    }
  };
  B.MatchesIterator.prototype = {
    get$current(_) {
      var t1 = this.__MatchesIterator_current_A;
      t1 === $ && C.throwLateFieldNI("current");
      return t1;
    },
    moveNext$0() {
      var t1, t2, t3, t4, end, _this = this;
      for (t1 = _this.input, t2 = t1.length, t3 = _this.parser; t4 = _this.start, t4 <= t2;) {
        end = t3.delegate.fastParseOn$2(t1, t4);
        t4 = _this.start;
        if (end < 0)
          _this.start = t4 + 1;
        else {
          t1 = t3.parseOn$1(new B.Context1(t1, t4));
          _this.set$__MatchesIterator_current_A(_this.$ti._precomputed1._as(t1.get$value(t1)));
          t1 = _this.start;
          if (t1 === end)
            _this.start = t1 + 1;
          else
            _this.start = end;
          return true;
        }
      }
      return false;
    },
    set$__MatchesIterator_current_A(__MatchesIterator_current_A) {
      this.__MatchesIterator_current_A = this.$ti._precomputed1._as(__MatchesIterator_current_A);
    },
    $isIterator: 1
  };
  B.FlattenParser.prototype = {
    parseOn$1(context) {
      var output,
        t1 = context.buffer,
        t2 = context.position,
        position = this.delegate.fastParseOn$2(t1, t2);
      if (position < 0)
        return new B.Failure(this.message, t1, t2);
      output = D.JSString_methods.substring$2(t1, t2, position);
      return new B.Success(output, t1, position, type$.Success_String);
    },
    fastParseOn$2(buffer, position) {
      return this.delegate.fastParseOn$2(buffer, position);
    },
    toString$0(_) {
      var t1 = this.super$Parser$toString(0);
      return t1 + "[" + this.message + "]";
    }
  };
  B.MapParser.prototype = {
    parseOn$1(context) {
      var t1, t2,
        result = this.delegate.parseOn$1(context);
      if (result instanceof B.Failure)
        return result;
      t1 = this.$ti;
      t2 = t1._rest[1]._as(this.callback.call$1(result.get$value(result)));
      return new B.Success(t2, result.buffer, result.position, t1._eval$1("Success<2>"));
    },
    fastParseOn$2(buffer, position) {
      var t1 = this.delegate.fastParseOn$2(buffer, position);
      return t1;
    }
  };
  B.TokenParser.prototype = {
    parseOn$1(context) {
      var t1, t2, t3,
        result = this.delegate.parseOn$1(context);
      if (result instanceof B.Failure)
        return result;
      t1 = result.position;
      t2 = this.$ti;
      t3 = t2._eval$1("Token0<1>");
      t3 = t3._as(new B.Token0(result.get$value(result), context.buffer, context.position, t1, t3));
      return new B.Success(t3, result.buffer, t1, t2._eval$1("Success<Token0<1>>"));
    },
    fastParseOn$2(buffer, position) {
      return this.delegate.fastParseOn$2(buffer, position);
    }
  };
  B.SingleCharPredicate.prototype = {
    test$1(value) {
      return this.value === value;
    }
  };
  B.ConstantCharPredicate.prototype = {
    test$1(value) {
      return this.constant;
    }
  };
  B.LookupCharPredicate.prototype = {
    LookupCharPredicate$1(ranges) {
      var t1, t2, t3, t4, t5, _i, range, index, t6, t7, t8, t9;
      for (t1 = ranges.length, t2 = this.start, t3 = this.bits, t4 = t3.length, t5 = t3.$flags | 0, _i = 0; _i < t1; ++_i) {
        range = ranges[_i];
        for (index = range.start - t2, t6 = range.stop - t2; index <= t6; ++index) {
          t7 = D.JSInt_methods._shrOtherPositive$1(index, 5);
          if (!(t7 < t4))
            return C.ioore(t3, t7);
          t8 = t3[t7];
          t9 = A.List_w8c[index & 31];
          t5 & 2 && C.throwUnsupportedOperation(t3);
          t3[t7] = (t8 | t9) >>> 0;
        }
      }
    },
    test$1(value) {
      var t3,
        t1 = this.start,
        t2 = false;
      if (t1 <= value)
        if (value <= this.stop) {
          t1 = value - t1;
          t2 = this.bits;
          t3 = D.JSInt_methods._shrOtherPositive$1(t1, 5);
          if (!(t3 < t2.length))
            return C.ioore(t2, t3);
          t1 = (t2[t3] & A.List_w8c[t1 & 31]) >>> 0 !== 0;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    $isCharacterPredicate: 1
  };
  B.NotCharacterPredicate.prototype = {
    test$1(value) {
      return !this.predicate.test$1(value);
    }
  };
  B.CharacterPredicate.prototype = {};
  B.RangeCharPredicate.prototype = {
    test$1(value) {
      return this.start <= value && value <= this.stop;
    },
    $isCharacterPredicate: 1
  };
  B.WhitespaceCharPredicate.prototype = {
    test$1(value) {
      if (value < 256)
        switch (value) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (value) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    $isCharacterPredicate: 1
  };
  B.ChoiceParser.prototype = {
    parseOn$1(context) {
      var result, t3, failure, i,
        t1 = this.children,
        t2 = t1.length;
      if (0 >= t2)
        return C.ioore(t1, 0);
      result = t1[0].parseOn$1(context);
      if (!(result instanceof B.Failure))
        return result;
      for (t3 = this.failureJoiner, failure = result, i = 1; i < t2; ++i) {
        result = t1[i].parseOn$1(context);
        if (!(result instanceof B.Failure))
          return result;
        failure = t3.call$2(failure, result);
      }
      return failure;
    },
    fastParseOn$2(buffer, position) {
      var t1, t2, result, i;
      for (t1 = this.children, t2 = t1.length, result = -1, i = 0; i < t2; ++i) {
        result = t1[i].fastParseOn$2(buffer, position);
        if (result >= 0)
          return result;
      }
      return result;
    }
  };
  B.DelegateParser.prototype = {
    get$children(_) {
      return C._setArrayType([this.delegate], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.delegate.$eq(0, source))
        _this.set$delegate(C._instanceType(_this)._eval$1("Parser<DelegateParser.T>")._as(target));
    },
    set$delegate(delegate) {
      this.delegate = C._instanceType(this)._eval$1("Parser<DelegateParser.T>")._as(delegate);
    }
  };
  B.SequenceParser2.prototype = {
    parseOn$1(context) {
      var result2, t1,
        result1 = this.parser1.parseOn$1(context);
      if (result1 instanceof B.Failure)
        return result1;
      result2 = this.parser2.parseOn$1(result1);
      if (result2 instanceof B.Failure)
        return result2;
      t1 = this.$ti;
      result1 = t1._eval$1("+(1,2)")._as(new C._Record_2(result1.get$value(result1), result2.get$value(result2)));
      return new B.Success(result1, result2.buffer, result2.position, t1._eval$1("Success<+(1,2)>"));
    },
    fastParseOn$2(buffer, position) {
      position = this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      return C._setArrayType([this.parser1, this.parser2], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    }
  };
  B.SequenceParser3.prototype = {
    parseOn$1(context) {
      var result2, result3, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof B.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof B.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof B.Failure)
        return result3;
      t1 = _this.$ti;
      result2 = t1._eval$1("+(1,2,3)")._as(new C._Record_3(result1.get$value(result1), result2.get$value(result2), result3.get$value(result3)));
      return new B.Success(result2, result3.buffer, result3.position, t1._eval$1("Success<+(1,2,3)>"));
    },
    fastParseOn$2(buffer, position) {
      position = this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      return C._setArrayType([this.parser1, this.parser2, this.parser3], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    }
  };
  B.SequenceParser4.prototype = {
    parseOn$1(context) {
      var result2, result3, result4, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof B.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof B.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof B.Failure)
        return result3;
      result4 = _this.parser4.parseOn$1(result3);
      if (result4 instanceof B.Failure)
        return result4;
      t1 = _this.$ti;
      result3 = t1._eval$1("+(1,2,3,4)")._as(new C._Record_4([result1.get$value(result1), result2.get$value(result2), result3.get$value(result3), result4.get$value(result4)]));
      return new B.Success(result3, result4.buffer, result4.position, t1._eval$1("Success<+(1,2,3,4)>"));
    },
    fastParseOn$2(buffer, position) {
      var _this = this;
      position = _this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser4.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      var _this = this;
      return C._setArrayType([_this.parser1, _this.parser2, _this.parser3, _this.parser4], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
      if (_this.parser4.$eq(0, source))
        _this.set$parser4(_this.$ti._eval$1("Parser<4>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    },
    set$parser4(parser4) {
      this.parser4 = this.$ti._eval$1("Parser<4>")._as(parser4);
    }
  };
  B.SequenceParser5.prototype = {
    parseOn$1(context) {
      var result2, result3, result4, result5, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof B.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof B.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof B.Failure)
        return result3;
      result4 = _this.parser4.parseOn$1(result3);
      if (result4 instanceof B.Failure)
        return result4;
      result5 = _this.parser5.parseOn$1(result4);
      if (result5 instanceof B.Failure)
        return result5;
      t1 = _this.$ti;
      result4 = t1._eval$1("+(1,2,3,4,5)")._as(new C._Record_5([result1.get$value(result1), result2.get$value(result2), result3.get$value(result3), result4.get$value(result4), result5.get$value(result5)]));
      return new B.Success(result4, result5.buffer, result5.position, t1._eval$1("Success<+(1,2,3,4,5)>"));
    },
    fastParseOn$2(buffer, position) {
      var _this = this;
      position = _this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser4.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser5.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      var _this = this;
      return C._setArrayType([_this.parser1, _this.parser2, _this.parser3, _this.parser4, _this.parser5], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
      if (_this.parser4.$eq(0, source))
        _this.set$parser4(_this.$ti._eval$1("Parser<4>")._as(target));
      if (_this.parser5.$eq(0, source))
        _this.set$parser5(_this.$ti._eval$1("Parser<5>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    },
    set$parser4(parser4) {
      this.parser4 = this.$ti._eval$1("Parser<4>")._as(parser4);
    },
    set$parser5(parser5) {
      this.parser5 = this.$ti._eval$1("Parser<5>")._as(parser5);
    }
  };
  B.SequenceParser8.prototype = {
    parseOn$1(context) {
      var result2, result3, result4, result5, result6, result7, result8, t1, _this = this,
        result1 = _this.parser1.parseOn$1(context);
      if (result1 instanceof B.Failure)
        return result1;
      result2 = _this.parser2.parseOn$1(result1);
      if (result2 instanceof B.Failure)
        return result2;
      result3 = _this.parser3.parseOn$1(result2);
      if (result3 instanceof B.Failure)
        return result3;
      result4 = _this.parser4.parseOn$1(result3);
      if (result4 instanceof B.Failure)
        return result4;
      result5 = _this.parser5.parseOn$1(result4);
      if (result5 instanceof B.Failure)
        return result5;
      result6 = _this.parser6.parseOn$1(result5);
      if (result6 instanceof B.Failure)
        return result6;
      result7 = _this.parser7.parseOn$1(result6);
      if (result7 instanceof B.Failure)
        return result7;
      result8 = _this.parser8.parseOn$1(result7);
      if (result8 instanceof B.Failure)
        return result8;
      t1 = _this.$ti;
      result7 = t1._eval$1("+(1,2,3,4,5,6,7,8)")._as(new C._Record_8([result1.get$value(result1), result2.get$value(result2), result3.get$value(result3), result4.get$value(result4), result5.get$value(result5), result6.get$value(result6), result7.get$value(result7), result8.get$value(result8)]));
      return new B.Success(result7, result8.buffer, result8.position, t1._eval$1("Success<+(1,2,3,4,5,6,7,8)>"));
    },
    fastParseOn$2(buffer, position) {
      var _this = this;
      position = _this.parser1.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser2.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser3.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser4.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser5.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser6.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser7.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = _this.parser8.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return position;
    },
    get$children(_) {
      var _this = this;
      return C._setArrayType([_this.parser1, _this.parser2, _this.parser3, _this.parser4, _this.parser5, _this.parser6, _this.parser7, _this.parser8], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$Parser$replace(0, source, target);
      if (_this.parser1.$eq(0, source))
        _this.set$parser1(_this.$ti._eval$1("Parser<1>")._as(target));
      if (_this.parser2.$eq(0, source))
        _this.set$parser2(_this.$ti._eval$1("Parser<2>")._as(target));
      if (_this.parser3.$eq(0, source))
        _this.set$parser3(_this.$ti._eval$1("Parser<3>")._as(target));
      if (_this.parser4.$eq(0, source))
        _this.set$parser4(_this.$ti._eval$1("Parser<4>")._as(target));
      if (_this.parser5.$eq(0, source))
        _this.set$parser5(_this.$ti._eval$1("Parser<5>")._as(target));
      if (_this.parser6.$eq(0, source))
        _this.set$parser6(_this.$ti._eval$1("Parser<6>")._as(target));
      if (_this.parser7.$eq(0, source))
        _this.set$parser7(_this.$ti._eval$1("Parser<7>")._as(target));
      if (_this.parser8.$eq(0, source))
        _this.set$parser8(_this.$ti._eval$1("Parser<8>")._as(target));
    },
    set$parser1(parser1) {
      this.parser1 = this.$ti._eval$1("Parser<1>")._as(parser1);
    },
    set$parser2(parser2) {
      this.parser2 = this.$ti._eval$1("Parser<2>")._as(parser2);
    },
    set$parser3(parser3) {
      this.parser3 = this.$ti._eval$1("Parser<3>")._as(parser3);
    },
    set$parser4(parser4) {
      this.parser4 = this.$ti._eval$1("Parser<4>")._as(parser4);
    },
    set$parser5(parser5) {
      this.parser5 = this.$ti._eval$1("Parser<5>")._as(parser5);
    },
    set$parser6(parser6) {
      this.parser6 = this.$ti._eval$1("Parser<6>")._as(parser6);
    },
    set$parser7(parser7) {
      this.parser7 = this.$ti._eval$1("Parser<7>")._as(parser7);
    },
    set$parser8(parser8) {
      this.parser8 = this.$ti._eval$1("Parser<8>")._as(parser8);
    }
  };
  B.ListParser.prototype = {
    replace$2(_, source, target) {
      var t1, t2, t3, i;
      this.super$Parser$replace(0, source, target);
      for (t1 = this.children, t2 = t1.length, t3 = this.$ti._eval$1("Parser<ListParser.R>"), i = 0; i < t2; ++i)
        if (t1[i].$eq(0, source))
          D.JSArray_methods.$indexSet(t1, i, t3._as(target));
    },
    get$children(receiver) {
      return this.children;
    }
  };
  B.OptionalParser.prototype = {
    parseOn$1(context) {
      var t1, t2,
        result = this.delegate.parseOn$1(context);
      if (!(result instanceof B.Failure))
        return result;
      t1 = this.$ti;
      t2 = t1._precomputed1._as(this.otherwise);
      return new B.Success(t2, context.buffer, context.position, t1._eval$1("Success<1>"));
    },
    fastParseOn$2(buffer, position) {
      var result = this.delegate.fastParseOn$2(buffer, position);
      return result < 0 ? position : result;
    }
  };
  B.SkipParser.prototype = {
    parseOn$1(context) {
      var resultContext, afterContext, t1, t2, _this = this,
        beforeContext = _this.before.parseOn$1(context);
      if (beforeContext instanceof B.Failure)
        return beforeContext;
      resultContext = _this.delegate.parseOn$1(beforeContext);
      if (resultContext instanceof B.Failure)
        return resultContext;
      afterContext = _this.after.parseOn$1(resultContext);
      if (afterContext instanceof B.Failure)
        return afterContext;
      t1 = _this.$ti;
      t2 = t1._precomputed1._as(resultContext.get$value(resultContext));
      return new B.Success(t2, afterContext.buffer, afterContext.position, t1._eval$1("Success<1>"));
    },
    fastParseOn$2(buffer, position) {
      position = this.before.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      position = this.delegate.fastParseOn$2(buffer, position);
      if (position < 0)
        return -1;
      return this.after.fastParseOn$2(buffer, position);
    },
    get$children(_) {
      return C._setArrayType([this.before, this.delegate, this.after], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      var _this = this;
      _this.super$DelegateParser$replace(0, source, target);
      if (_this.before.$eq(0, source))
        _this.before = target;
      if (_this.after.$eq(0, source))
        _this.after = target;
    }
  };
  B.EpsilonParser.prototype = {
    parseOn$1(context) {
      var t1 = this.$ti,
        t2 = t1._precomputed1._as(this.result);
      return new B.Success(t2, context.buffer, context.position, t1._eval$1("Success<1>"));
    },
    fastParseOn$2(buffer, position) {
      return position;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + C.S(this.result) + "]";
    }
  };
  B.NewlineParser.prototype = {
    parseOn$1(context) {
      var t2,
        buffer = context.buffer,
        position = context.position,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        switch (buffer.charCodeAt(position)) {
          case 10:
            return new B.Success("\n", buffer, position + 1, type$.Success_String);
          case 13:
            t2 = position + 1;
            if (t2 < t1 && buffer.charCodeAt(t2) === 10)
              return new B.Success("\r\n", buffer, position + 2, type$.Success_String);
            else
              return new B.Success("\r", buffer, t2, type$.Success_String);
        }
      }
      return new B.Failure(this.message, buffer, position);
    },
    fastParseOn$2(buffer, position) {
      var t2,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        switch (buffer.charCodeAt(position)) {
          case 10:
            return position + 1;
          case 13:
            t2 = position + 1;
            return t2 < t1 && buffer.charCodeAt(t2) === 10 ? position + 2 : t2;
        }
      }
      return -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    }
  };
  B.AnyCharacterParser.prototype = {
    parseOn$1(context) {
      var buffer = context.buffer,
        position = context.position,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        t1 = buffer[position];
        return new B.Success(t1, buffer, position + 1, type$.Success_String);
      }
      return new B.Failure(this.message, buffer, position);
    },
    fastParseOn$2(buffer, position) {
      return position < buffer.length ? position + 1 : -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    }
  };
  B.SingleCharacterParser.prototype = {
    parseOn$1(context) {
      var t2,
        buffer = context.buffer,
        position = context.position,
        t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        t2 = this.predicate.test$1(buffer.charCodeAt(position));
      } else
        t2 = false;
      if (t2) {
        if (!(position >= 0 && position < t1))
          return C.ioore(buffer, position);
        t1 = buffer[position];
        return new B.Success(t1, buffer, position + 1, type$.Success_String);
      }
      return new B.Failure(this.message, buffer, position);
    },
    fastParseOn$2(buffer, position) {
      var t1 = buffer.length;
      if (position < t1) {
        if (!(position >= 0))
          return C.ioore(buffer, position);
        t1 = this.predicate.test$1(buffer.charCodeAt(position));
      } else
        t1 = false;
      return t1 ? position + 1 : -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    }
  };
  B.PredicateParser.prototype = {
    parseOn$1(context) {
      var result,
        start = context.position,
        $stop = start + this.length,
        t1 = context.buffer;
      if ($stop <= t1.length) {
        result = D.JSString_methods.substring$2(t1, start, $stop);
        if (C.boolConversionCheck(this.predicate.call$1(result)))
          return new B.Success(result, t1, $stop, type$.Success_String);
      }
      return new B.Failure(this.message, t1, start);
    },
    fastParseOn$2(buffer, position) {
      var $stop = position + this.length;
      return $stop <= buffer.length && C.boolConversionCheck(this.predicate.call$1(D.JSString_methods.substring$2(buffer, position, $stop))) ? $stop : -1;
    },
    toString$0(_) {
      return this.super$Parser$toString(0) + "[" + this.message + "]";
    },
    get$length(receiver) {
      return this.length;
    }
  };
  B.RepeatingCharacterParser.prototype = {
    parseOn$1(context) {
      var t1, t2, position, count, t3, _this = this,
        buffer = context.buffer,
        start = context.position,
        end = buffer.length;
      for (t1 = _this.min, t2 = _this.predicate, position = start, count = 0; count < t1;) {
        if (position < end) {
          if (!(position >= 0 && position < end))
            return C.ioore(buffer, position);
          t3 = !t2.test$1(buffer.charCodeAt(position));
        } else
          t3 = true;
        if (t3)
          return new B.Failure(_this.message, buffer, position);
        ++position;
        ++count;
      }
      t1 = _this.max;
      while (true) {
        if (!(position < end && count < t1))
          break;
        if (!(position >= 0 && position < end))
          return C.ioore(buffer, position);
        if (!t2.test$1(buffer.charCodeAt(position)))
          break;
        ++position;
        ++count;
      }
      t1 = D.JSString_methods.substring$2(buffer, start, position);
      return new B.Success(t1, buffer, position, type$.Success_String);
    },
    fastParseOn$2(buffer, position) {
      var t1, t2, count, t3,
        end = buffer.length;
      for (t1 = this.min, t2 = this.predicate, count = 0; count < t1;) {
        if (position < end) {
          if (!(position >= 0 && position < end))
            return C.ioore(buffer, position);
          t3 = !t2.test$1(buffer.charCodeAt(position));
        } else
          t3 = true;
        if (t3)
          return -1;
        ++position;
        ++count;
      }
      t1 = this.max;
      while (true) {
        if (!(position < end && count < t1))
          break;
        if (!(position >= 0 && position < end))
          return C.ioore(buffer, position);
        if (!t2.test$1(buffer.charCodeAt(position)))
          break;
        ++position;
        ++count;
      }
      return position;
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.super$Parser$toString(0),
        t2 = _this.max;
      return t1 + "[" + _this.message + ", " + _this.min + ".." + C.S(t2 === 9007199254740991 ? "*" : t2) + "]";
    }
  };
  B.LazyRepeatingParser.prototype = {
    parseOn$1(context) {
      var t2, current, result, limiter, _this = this,
        t1 = _this.$ti,
        elements = C._setArrayType([], t1._eval$1("JSArray<1>"));
      for (t2 = _this.min, current = context; elements.length < t2; current = result) {
        result = _this.delegate.parseOn$1(current);
        if (result instanceof B.Failure)
          return result;
        D.JSArray_methods.add$1(elements, result.get$value(result));
      }
      for (t2 = _this.max; true; current = result) {
        limiter = _this.limit.parseOn$1(current);
        if (limiter instanceof B.Failure) {
          if (elements.length >= t2)
            return limiter;
          result = _this.delegate.parseOn$1(current);
          if (result instanceof B.Failure)
            return limiter;
          D.JSArray_methods.add$1(elements, result.get$value(result));
        } else {
          t1._eval$1("List<1>")._as(elements);
          return new B.Success(elements, current.buffer, current.position, t1._eval$1("Success<List<1>>"));
        }
      }
    },
    fastParseOn$2(buffer, position) {
      var t1, current, count, result, _this = this;
      for (t1 = _this.min, current = position, count = 0; count < t1; current = result) {
        result = _this.delegate.fastParseOn$2(buffer, current);
        if (result < 0)
          return -1;
        ++count;
      }
      for (t1 = _this.max; true; current = result)
        if (_this.limit.fastParseOn$2(buffer, current) < 0) {
          if (count >= t1)
            return -1;
          result = _this.delegate.fastParseOn$2(buffer, current);
          if (result < 0)
            return -1;
          ++count;
        } else
          return current;
    }
  };
  B.LimitedRepeatingParser.prototype = {
    get$children(_) {
      return C._setArrayType([this.delegate, this.limit], type$.JSArray_Parser_dynamic);
    },
    replace$2(_, source, target) {
      this.super$DelegateParser$replace(0, source, target);
      if (this.limit.$eq(0, source))
        this.limit = target;
    }
  };
  B.PossessiveRepeatingParser.prototype = {
    parseOn$1(context) {
      var t2, current, result, _this = this,
        t1 = _this.$ti,
        elements = C._setArrayType([], t1._eval$1("JSArray<1>"));
      for (t2 = _this.min, current = context; elements.length < t2; current = result) {
        result = _this.delegate.parseOn$1(current);
        if (result instanceof B.Failure)
          return result;
        D.JSArray_methods.add$1(elements, result.get$value(result));
      }
      for (t2 = _this.max; elements.length < t2; current = result) {
        result = _this.delegate.parseOn$1(current);
        if (result instanceof B.Failure)
          break;
        D.JSArray_methods.add$1(elements, result.get$value(result));
      }
      t1._eval$1("List<1>")._as(elements);
      return new B.Success(elements, current.buffer, current.position, t1._eval$1("Success<List<1>>"));
    },
    fastParseOn$2(buffer, position) {
      var t1, current, count, result, _this = this;
      for (t1 = _this.min, current = position, count = 0; count < t1; current = result) {
        result = _this.delegate.fastParseOn$2(buffer, current);
        if (result < 0)
          return -1;
        ++count;
      }
      for (t1 = _this.max; count < t1; current = result) {
        result = _this.delegate.fastParseOn$2(buffer, current);
        if (result < 0)
          break;
        ++count;
      }
      return current;
    }
  };
  B.RepeatingParser.prototype = {
    toString$0(_) {
      var t1 = this.super$Parser$toString(0),
        t2 = this.max;
      return t1 + "[" + this.min + ".." + C.S(t2 === 9007199254740991 ? "*" : t2) + "]";
    }
  };
  B.ProxyProvider0.prototype = {};
  B.ProxyProvider.prototype = {};
  B.Selector0.prototype = {
    createState$0() {
      return new B._Selector0State(this.$ti._eval$1("_Selector0State<Selector0.T>"));
    },
    selector$1(arg0) {
      return this.selector.call$1(arg0);
    }
  };
  B._Selector0State.prototype = {
    buildWithChild$2(context, child) {
      var shouldInvalidateCache, _this = this,
        selected = _this._widget.selector$1(context),
        t1 = _this.oldWidget,
        t2 = _this._widget;
      t2.toString;
      shouldInvalidateCache = true;
      if (J.$eq$(t1, t2)) {
        _this._widget.toString;
        t1 = !Ag.DeepCollectionEquality_false.equals$2(_this.value, selected);
        shouldInvalidateCache = t1;
      }
      if (shouldInvalidateCache) {
        _this.set$value(0, selected);
        t1 = _this._widget;
        t1.toString;
        _this.oldWidget = t1;
        _this.cache = new A_.Builder(new B._Selector0State_buildWithChild_closure(_this, selected, child), null);
      }
      t1 = _this.cache;
      t1.toString;
      return t1;
    },
    set$value(_, value) {
      this.value = this.$ti._eval$1("1?")._as(value);
    }
  };
  B.Selector2.prototype = {};
  B.Tuple2.prototype = {
    toList$0(_) {
      return C.List_List$from([this.item1, this.item2], false, type$.dynamic);
    },
    toString$0(_) {
      return "[" + C.S(this.item1) + ", " + C.S(this.item2) + "]";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.Tuple2 && other.item1 === this.item1 && other.item2 === this.item2;
    },
    get$hashCode(_) {
      return C.Object_hash(D.JSNumber_methods.get$hashCode(this.item1), D.JSNumber_methods.get$hashCode(this.item2), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  B.Tuple3.prototype = {
    toList$0(_) {
      return C.List_List$from([this.item1, this.item2, this.item3], false, type$.dynamic);
    },
    toString$0(_) {
      return "[" + this.item1.toString$0(0) + ", " + C.S(this.item2) + ", " + C.S(this.item3) + "]";
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof B.Tuple3)
        t1 = other.item1.$eq(0, this.item1);
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(this.item1.get$hashCode(0), D.JSNull_methods.get$hashCode(this.item2), D.JSNull_methods.get$hashCode(this.item3), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  B.RenderWebVectorGraphic.prototype = {
    set$assetKey(value) {
      if (value.$eq(0, this._html_render_vector_graphics$_assetKey))
        return;
      this._html_render_vector_graphics$_assetKey = value;
    },
    set$pictureInfo(value) {
      if (value === this._html_render_vector_graphics$_pictureInfo)
        return;
      this._html_render_vector_graphics$_pictureInfo = value;
      this.markNeedsPaint$0();
    },
    set$colorFilter(value) {
      if (this._html_render_vector_graphics$_colorFilter == value)
        return;
      this._html_render_vector_graphics$_colorFilter = value;
      this.markNeedsPaint$0();
    },
    set$opacity(_, value) {
      return;
    },
    _html_render_vector_graphics$_updateOpacity$0() {
      return;
    },
    hitTestSelf$1(position) {
      return true;
    },
    get$sizedByParent() {
      return true;
    },
    get$alwaysNeedsCompositing() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(C.clampDouble(0, constraints.minWidth, constraints.maxWidth), C.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    },
    attach$1(owner) {
      this._html_render_vector_graphics$_updateOpacity$0();
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$RenderObject$detach(0);
    },
    dispose$0() {
      var _this = this;
      _this._transformLayer.set$layer(0, null);
      _this._html_render_vector_graphics$_opacityHandle.set$layer(0, null);
      _this._filterLayer.set$layer(0, null);
      _this.super$RenderObject$dispose();
    },
    paint$2(context, offset) {
      var t1, _this = this;
      if (_this._html_render_vector_graphics$_opacityValue <= 0)
        return;
      t1 = _this._transformLayer;
      t1.set$layer(0, context.pushTransform$5$oldLayer(true, offset, _this._html_render_vector_graphics$_transform, new B.RenderWebVectorGraphic_paint_closure(_this), t1._layer));
    }
  };
  B.PictureInfo.prototype = {};
  B._PatternConfig.prototype = {};
  B._PatternState.prototype = {};
  B._DefaultPictureFactory.prototype = {$isPictureFactory: 1};
  B.FlutterVectorGraphicsListener.prototype = {
    toPicture$0() {
      var image, pattern, t1, t2, t3, _this = this;
      try {
        t1 = _this._recorder.endRecording$0();
        t2 = _this._listener0$_size;
        return new B.PictureInfo(t1, t2);
      } finally {
        for (t1 = _this._images, t2 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();) {
          image = t2.__js_helper$_current;
          image.dispose$0();
        }
        t1.clear$0(0);
        for (t1 = _this._patterns, t2 = new C.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, C._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();) {
          pattern = t2.__js_helper$_current;
          t3 = pattern.shader;
          if (t3 != null)
            t3.dispose$0();
        }
        t1.clear$0(0);
      }
    },
    onDrawPath$3(pathId, paintId, patternId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, path, paint, t1;
      var $async$onDrawPath$3 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._paths;
              if (!(pathId < t1.length)) {
                $async$returnValue = C.ioore(t1, pathId);
                // goto return
                $async$goto = 1;
                break;
              }
              path = t1[pathId];
              t1 = $async$self._paints;
              if (!(paintId < t1.length)) {
                $async$returnValue = C.ioore(t1, paintId);
                // goto return
                $async$goto = 1;
                break;
              }
              paint = t1[paintId];
              if (patternId != null)
                paint.set$shader($async$self._patterns.$index(0, patternId).shader);
              t1 = $async$self._currentPattern;
              if (t1 != null) {
                t1 = $async$self._patterns.$index(0, t1._patternId).canvas;
                t1.drawPath$2(path, paint);
              } else {
                t1 = paint;
                $async$self._listener0$_canvas.drawPath$2(path, t1);
              }
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$onDrawPath$3, $async$completer);
    },
    onPaintObject$9$blendMode$color$id$paintStyle$shaderId$strokeCap$strokeJoin$strokeMiterLimit$strokeWidth(blendMode, color, id, paintStyle, shaderId, strokeCap, strokeJoin, strokeMiterLimit, strokeWidth) {
      var t1,
        paint = $.$get$_renderer().createPaint$0();
      paint.set$color(0, C.Color$(color));
      if (blendMode !== 0) {
        if (!(blendMode >= 0 && blendMode < 29))
          return C.ioore(A.List_AAT, blendMode);
        paint.set$blendMode(A.List_AAT[blendMode]);
      }
      if (shaderId != null) {
        t1 = this._shaders;
        if (shaderId >>> 0 !== shaderId || shaderId >= t1.length)
          return C.ioore(t1, shaderId);
        paint.set$shader(t1[shaderId]);
      }
      if (paintStyle === 1) {
        paint.set$style(0, D.PaintingStyle_1);
        if (strokeCap != null && strokeCap !== 0)
          paint.set$strokeCap(D.JSArray_methods.$index(A.List_s5R, strokeCap));
        if (strokeJoin != null && strokeJoin !== 0)
          paint.set$strokeJoin(D.JSArray_methods.$index(A.List_ykM, strokeJoin));
        if (strokeMiterLimit != null && strokeMiterLimit !== 4)
          paint.set$strokeMiterLimit(strokeMiterLimit);
        if (strokeWidth != null && strokeWidth !== 0)
          paint.set$strokeWidth(strokeWidth);
      }
      D.JSArray_methods.add$1(this._paints, paint);
    },
    onLinearGradient$8(fromX, fromY, toX, toY, colors, offsets, tileMode, id) {
      var t2, i,
        t1 = C._setArrayType([], type$.JSArray_Color);
      for (t2 = colors.length, i = 0; i < t2; ++i)
        t1.push(C.Color$(colors[i]));
      if (!(tileMode >= 0 && tileMode < 4))
        return C.ioore(A.List_Lm4, tileMode);
      D.JSArray_methods.add$1(this._shaders, E.Gradient_Gradient$linear(new C.Offset(fromX, fromY), new C.Offset(toX, toY), t1, offsets, A.List_Lm4[tileMode], null));
    },
    onRadialGradient$10(centerX, centerY, radius, focalX, focalY, colors, offsets, transform, tileMode, id) {
      var focal, t1, t2, i, hasFocal,
        center = new C.Offset(centerX, centerY);
      if (focalX == null)
        focal = null;
      else {
        focalY.toString;
        focal = new C.Offset(focalX, focalY);
      }
      t1 = C._setArrayType([], type$.JSArray_Color);
      for (t2 = colors.length, i = 0; i < t2; ++i)
        t1.push(C.Color$(colors[i]));
      hasFocal = !J.$eq$(focal, center) && focal != null;
      if (!(tileMode >= 0 && tileMode < 4))
        return C.ioore(A.List_Lm4, tileMode);
      t2 = A.List_Lm4[tileMode];
      D.JSArray_methods.add$1(this._shaders, B.Gradient_Gradient$radial(center, radius, t1, offsets, t2, transform, hasFocal ? focal : null));
    },
    onDrawText$4(textId, fillId, strokeId, patternId) {
      return this.onDrawText$body$FlutterVectorGraphicsListener(textId, fillId, strokeId, patternId);
    },
    onDrawText$body$FlutterVectorGraphicsListener(textId, fillId, strokeId, patternId) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, textConfig, dx, dy, t1, t2;
      var $async$onDrawText$4 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = $async$self._textConfig;
              if (!(textId < t2.length)) {
                $async$returnValue = C.ioore(t2, textId);
                // goto return
                $async$goto = 1;
                break;
              }
              textConfig = t2[textId];
              dx = $async$self._accumulatedTextPositionX;
              if (dx == null)
                dx = 0;
              dy = $async$self._textPositionY;
              t1.paragraphWidth = 0;
              t2 = new B.FlutterVectorGraphicsListener_onDrawText_draw(t1, $async$self, patternId, textConfig, dx, dy);
              if (fillId != null)
                t2.call$1(fillId);
              if (strokeId != null)
                t2.call$1(strokeId);
              $async$self._accumulatedTextPositionX = dx + t1.paragraphWidth;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$onDrawText$4, $async$completer);
    },
    onImage$3(imageId, format, data) {
      var cacheCompleter, listener,
        t1 = new C._Future($.Zone__current, type$._Future_void),
        completer = new C._AsyncCompleter(t1, type$._AsyncCompleter_void);
      D.JSArray_methods.add$1(this._listener0$_pendingImages, t1);
      t1 = $.PaintingBinding__instance.PaintingBinding___PaintingBinding__imageCache_A;
      t1 === $ && C.throwLateFieldNI("_imageCache");
      cacheCompleter = t1.putIfAbsent$2(0, C.Object_hash(this._listener0$_id, imageId, format, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue), new B.FlutterVectorGraphicsListener_onImage_closure(data));
      if (cacheCompleter == null) {
        completer.completeError$1("Failed to load image");
        return;
      }
      listener = C._Cell$named("listener");
      listener._value = new C.ImageStreamListener(new B.FlutterVectorGraphicsListener_onImage_closure0(this, cacheCompleter, listener, imageId, completer), null, new B.FlutterVectorGraphicsListener_onImage_closure1(completer, cacheCompleter, listener, null));
      cacheCompleter.addListener$1(0, listener._readLocal$0());
    },
    onDrawImage$6(imageId, x, y, width, height, transform) {
      var t1, t2,
        image = this._images.$index(0, imageId);
      if (image == null)
        return;
      t1 = transform != null;
      if (t1) {
        t2 = this._listener0$_canvas;
        t2.save$0(0);
        t2.transform$1(0, transform);
      }
      t2 = this._listener0$_canvas;
      t2.drawImageRect$4(image, new C.Rect(0, 0, image.get$width(image), image.get$height(image)), new C.Rect(x, y, x + width, y + height), $.$get$_renderer().createPaint$0());
      if (t1)
        t2.restore$0(0);
    }
  };
  B._TextPosition.prototype = {};
  B._TextConfig.prototype = {};
  B.VectorGraphicsDecodeException.prototype = {
    toString$0(_) {
      return "VectorGraphicsDecodeException: Failed to decode vector graphic from " + this.source.toString$0(0) + ".\n\nAdditional error: " + C.S(this.originalException);
    },
    $isException: 1
  };
  B.BytesLoader.prototype = {};
  B.RasterKey.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.RasterKey && other.assetKey.$eq(0, this.assetKey) && other.width === this.width && other.height === this.height;
    },
    get$hashCode(_) {
      return C.Object_hash(this.assetKey, this.width, this.height, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    }
  };
  B.RasterData.prototype = {};
  B.RenderVectorGraphic.prototype = {
    set$assetKey(value) {
      if (value.$eq(0, this._assetKey))
        return;
      this._assetKey = value;
    },
    set$pictureInfo(value) {
      if (value === this._render_vector_graphic$_pictureInfo)
        return;
      this._render_vector_graphic$_pictureInfo = value;
      this.markNeedsPaint$0();
    },
    set$colorFilter(value) {
      if (this._render_vector_graphic$_colorFilter == value)
        return;
      this._render_vector_graphic$_colorFilter = value;
      this.markNeedsPaint$0();
    },
    set$devicePixelRatio(_, value) {
      if (value === this._render_vector_graphic$_devicePixelRatio)
        return;
      this._render_vector_graphic$_devicePixelRatio = value;
      this.markNeedsPaint$0();
    },
    set$opacity(_, value) {
      return;
    },
    _render_vector_graphic$_updateOpacity$0() {
      return;
    },
    set$scale(_, value) {
      if (value === this._render_vector_graphic$_scale)
        return;
      this._render_vector_graphic$_scale = value;
      this.markNeedsPaint$0();
    },
    hitTestSelf$1(position) {
      return true;
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(C.clampDouble(0, constraints.minWidth, constraints.maxWidth), C.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    },
    _maybeReleaseRaster$1(data) {
      var t1;
      if (data == null)
        return;
      if (--data.count === 0 && $.RenderVectorGraphic__liveRasterCache.containsKey$1(0, data.key)) {
        $.RenderVectorGraphic__liveRasterCache.remove$1(0, data.key);
        t1 = data._render_vector_graphic$_image;
        if (t1 != null)
          t1.dispose$0();
        data._render_vector_graphic$_image = null;
      }
    },
    _maybeUpdateRaster$0() {
      var t4, recorder, canvas, data, _this = this,
        t1 = _this._render_vector_graphic$_pictureInfo.size,
        t2 = _this._render_vector_graphic$_devicePixelRatio,
        t3 = _this._render_vector_graphic$_scale,
        scaledWidth = D.JSNumber_methods.round$0(t1._dx * t2 / t3),
        scaledHeight = D.JSNumber_methods.round$0(t1._dy * t2 / t3),
        key = new B.RasterKey(_this._assetKey, scaledWidth, scaledHeight);
      if ($.RenderVectorGraphic__liveRasterCache.containsKey$1(0, key)) {
        t1 = $.RenderVectorGraphic__liveRasterCache.$index(0, key);
        t1.toString;
        t2 = _this._rasterData;
        if (t1 !== t2) {
          _this._maybeReleaseRaster$1(t2);
          ++t1.count;
        }
        _this._rasterData = t1;
        return;
      }
      t1 = _this._render_vector_graphic$_devicePixelRatio;
      t2 = _this._render_vector_graphic$_scale;
      t3 = _this._render_vector_graphic$_pictureInfo;
      t4 = $.$get$_renderer();
      recorder = t4.createPictureRecorder$0();
      canvas = t4.createCanvas$2(recorder, null);
      canvas.scale$1(0, t1 / t2);
      canvas.drawPicture$1(t3.picture);
      data = new B.RasterData(recorder.endRecording$0().toImageSync$2(scaledWidth, scaledHeight), key, 0);
      data.count = 1;
      $.RenderVectorGraphic__liveRasterCache.$indexSet(0, key, data);
      _this._maybeReleaseRaster$1(_this._rasterData);
      _this._rasterData = data;
    },
    attach$1(owner) {
      this._render_vector_graphic$_updateOpacity$0();
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$RenderObject$detach(0);
    },
    dispose$0() {
      this._maybeReleaseRaster$1(this._rasterData);
      this.super$RenderObject$dispose();
    },
    paint$2(context, offset) {
      var t1, t2, colorPaint, t3, t4, t5, _this = this;
      if (_this._opacityValue <= 0)
        return;
      _this._maybeUpdateRaster$0();
      t1 = _this._rasterData;
      t2 = t1._render_vector_graphic$_image;
      t2.toString;
      t1 = t1.key;
      colorPaint = $.$get$_renderer().createPaint$0();
      colorPaint.set$filterQuality(D.FilterQuality_1);
      t3 = _this._render_vector_graphic$_colorFilter;
      if (t3 != null)
        colorPaint.set$colorFilter(t3);
      colorPaint.set$color(0, E.Color$fromRGBO(0, 0, 0, _this._opacityValue));
      t3 = offset._dx;
      t4 = offset._dy;
      t5 = _this._render_vector_graphic$_pictureInfo.size;
      context.get$canvas(0).drawImageRect$4(t2, new C.Rect(0, 0, t1.width, t1.height), new C.Rect(t3, t4, t3 + t5._dx, t4 + t5._dy), colorPaint);
    }
  };
  B.RenderPictureVectorGraphic.prototype = {
    set$pictureInfo(value) {
      if (value === this._render_vector_graphic$_pictureInfo)
        return;
      this._render_vector_graphic$_pictureInfo = value;
      this.markNeedsPaint$0();
    },
    set$colorFilter(value) {
      if (this._render_vector_graphic$_colorFilter == value)
        return;
      this._render_vector_graphic$_colorFilter = value;
      this.markNeedsPaint$0();
    },
    set$opacity(_, value) {
      return;
    },
    _render_vector_graphic$_updateOpacity$0() {
      return;
    },
    hitTestSelf$1(position) {
      return true;
    },
    get$sizedByParent() {
      return true;
    },
    computeDryLayout$1(constraints) {
      return new C.Size(C.clampDouble(0, constraints.minWidth, constraints.maxWidth), C.clampDouble(0, constraints.minHeight, constraints.maxHeight));
    },
    attach$1(owner) {
      this._render_vector_graphic$_updateOpacity$0();
      this.super$RenderObject$attach(owner);
    },
    detach$0(_) {
      this.super$RenderObject$detach(0);
    },
    dispose$0() {
      this.super$RenderObject$dispose();
    },
    paint$2(context, offset) {
      var colorPaint, t1, saveCount, t2, _this = this;
      if (_this._opacityValue <= 0)
        return;
      colorPaint = $.$get$_renderer().createPaint$0();
      t1 = _this._render_vector_graphic$_colorFilter;
      if (t1 != null)
        colorPaint.set$colorFilter(t1);
      colorPaint.set$color(0, E.Color$fromRGBO(0, 0, 0, _this._opacityValue));
      saveCount = context.get$canvas(0).getSaveCount$0();
      if (!offset.$eq(0, D.Offset_0_0)) {
        context.get$canvas(0).save$0(0);
        context.get$canvas(0).translate$2(0, offset._dx, offset._dy);
      }
      if (_this._opacityValue !== 1 || _this._render_vector_graphic$_colorFilter != null) {
        context.get$canvas(0).save$0(0);
        t1 = context.get$canvas(0);
        t2 = _this.get$size(0);
        t1.clipRect$1(new C.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
        t2 = context.get$canvas(0);
        t1 = _this.get$size(0);
        t2.saveLayer$2(new C.Rect(0, 0, 0 + t1._dx, 0 + t1._dy), colorPaint);
      }
      context.get$canvas(0).drawPicture$1(_this._render_vector_graphic$_pictureInfo.picture);
      context.get$canvas(0).restoreToCount$1(saveCount);
    }
  };
  B.RenderingStrategy.prototype = {
    _enumToString$0() {
      return "RenderingStrategy." + this._name;
    }
  };
  B.VectorGraphic.prototype = {
    createState$0() {
      return new B._VectorGraphicWidgetState();
    }
  };
  B._PictureData.prototype = {};
  B._PictureKey.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.cacheKey, _this.locale, _this.textDirection, _this.clipViewbox, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B._PictureKey && other.cacheKey.$eq(0, _this.cacheKey) && J.$eq$(other.locale, _this.locale) && other.textDirection == _this.textDirection && other.clipViewbox === _this.clipViewbox;
    }
  };
  B._VectorGraphicWidgetState.prototype = {
    didChangeDependencies$0() {
      var _this = this,
        t1 = _this._framework$_element;
      t1.toString;
      _this.locale = E.Localizations_maybeLocaleOf(t1);
      t1 = _this._framework$_element;
      t1.toString;
      _this.textDirection = C.Directionality_maybeOf(t1);
      _this._loadAssetBytes$0();
      _this.super$State$didChangeDependencies();
    },
    didUpdateWidget$1(oldWidget) {
      type$.VectorGraphic._as(oldWidget);
      if (!oldWidget.loader.$eq(0, this._widget.loader))
        this._loadAssetBytes$0();
      this.super$State$didUpdateWidget(oldWidget);
    },
    dispose$0() {
      var _this = this;
      _this._maybeReleasePicture$1(_this._pictureInfo);
      _this._pictureInfo = null;
      _this.super$State$dispose();
    },
    _maybeReleasePicture$1(data) {
      if (data == null)
        return;
      if (--data.count === 0 && $._VectorGraphicWidgetState__livePictureCache.containsKey$1(0, data.key)) {
        $._VectorGraphicWidgetState__livePictureCache.remove$1(0, data.key);
        data.pictureInfo.picture.dispose$0();
      }
    },
    _loadPicture$3(context, key, loader) {
      var t1, result;
      if ($._VectorGraphicWidgetState__pendingPictures.containsKey$1(0, key)) {
        t1 = $._VectorGraphicWidgetState__pendingPictures.$index(0, key);
        t1.toString;
        return t1;
      }
      result = loader.loadBytes$1(context).then$1$1(0, new B._VectorGraphicWidgetState__loadPicture_closure(key, loader), type$.PictureInfo).then$1$1(0, new B._VectorGraphicWidgetState__loadPicture_closure0(key), type$._PictureData);
      $._VectorGraphicWidgetState__pendingPictures.$indexSet(0, key, result);
      result.whenComplete$1(new B._VectorGraphicWidgetState__loadPicture_closure1(key));
      return result;
    },
    _vector_graphics$_handleError$2(error, stackTrace) {
      type$.nullable_StackTrace._as(stackTrace);
      if (this._framework$_element == null)
        return;
      this.setState$1(new B._VectorGraphicWidgetState__handleError_closure(this, error, stackTrace));
    },
    _loadAssetBytes$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, key, loader, data, error, stackTrace, data0, exception, t1, t2, $async$exception;
      var $async$_loadAssetBytes$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._widget.loader;
              t2 = $async$self._framework$_element;
              t2.toString;
              key = new B._PictureKey(t1.cacheKey$1(t2), $async$self.locale, $async$self.textDirection, $async$self._widget.clipViewbox);
              data0 = $._VectorGraphicWidgetState__livePictureCache.$index(0, key);
              if (data0 != null) {
                ++data0.count;
                $async$self.setState$1(new B._VectorGraphicWidgetState__loadAssetBytes_closure($async$self, data0));
                // goto return
                $async$goto = 1;
                break;
              }
              loader = $async$self._widget.loader;
              $async$handler = 4;
              t1 = $async$self._framework$_element;
              t1.toString;
              $async$goto = 7;
              return C._asyncAwait($async$self._loadPicture$3(t1, key, loader), $async$_loadAssetBytes$0);
            case 7:
              // returning from await.
              data = $async$result;
              data.count = data.count + 1;
              if ($async$self._framework$_element == null || !J.$eq$(loader, $async$self._widget.loader)) {
                $async$self._maybeReleasePicture$1(data);
                // goto return
                $async$goto = 1;
                break;
              }
              if (data.count === 1)
                $._VectorGraphicWidgetState__livePictureCache.$indexSet(0, key, data);
              $async$self.setState$1(new B._VectorGraphicWidgetState__loadAssetBytes_closure0($async$self, data));
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$errorStack.pop();
              error = C.unwrapException($async$exception);
              stackTrace = C.getTraceFromException($async$exception);
              $async$self._vector_graphics$_handleError$2(error, stackTrace);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$_loadAssetBytes$0, $async$completer);
    },
    build$1(context) {
      var width, height, t2, scale, t3, child, t4, t5, t6, _this = this, _null = null,
        t1 = _this._pictureInfo,
        pictureInfo = t1 == null ? _null : t1.pictureInfo;
      if (pictureInfo != null) {
        t1 = _this._widget;
        width = t1.width;
        height = t1.height;
        t1 = pictureInfo.size;
        t2 = t1.get$isEmpty(0);
        if (!t2)
          width = height / t1._dy * t1._dx;
        else {
          t2 = t1.get$isEmpty(0);
          if (!t2)
            height = width / t1._dx * t1._dy;
        }
        t1 = pictureInfo.size;
        scale = Math.min(t1._dx / width, t1._dy / height);
        if ($.$get$_VectorGraphicWidgetState__webRenderObject()) {
          t2 = _this._pictureInfo.key;
          t3 = _this._widget;
          child = new B._RawWebVectorGraphicWidget(pictureInfo, t3.colorFilter, t3.opacity, t2, _null, _null);
          t2 = t3;
        } else {
          t2 = _this._widget;
          t3 = t2.strategy;
          t4 = _this._pictureInfo;
          t5 = t2.colorFilter;
          t6 = t2.opacity;
          if (t3 === A.RenderingStrategy_0)
            child = new B._RawVectorGraphicWidget(pictureInfo, t5, scale, t6, t4.key, _null, _null);
          else {
            t4.toString;
            child = new B._RawPictureVectorGraphicWidget(pictureInfo, t5, t6, _null, _null);
          }
        }
        child = new E.SizedBox(width, height, B.FittedBox$(t2.alignment, L.SizedBox$fromSize(child, t1), t2.clipBehavior, t2.fit), _null);
      } else {
        if (_this._vector_graphics$_error != null)
          _this._widget.toString;
        t1 = _this._widget;
        child = new E.SizedBox(t1.width, t1.height, _null, _null);
      }
      child = new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, "", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, child, _null);
      return child;
    }
  };
  B._RawVectorGraphicWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.MediaQuery__maybeOf(context, null);
      t1 = t1 == null ? null : t1.devicePixelRatio;
      if (t1 == null)
        t1 = 1;
      t1 = new B.RenderVectorGraphic(_this.assetKey, _this.pictureInfo, _this.colorFilter, t1, _this.opacity, _this.scale, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._render_vector_graphic$_updateOpacity$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var t1, _this = this;
      type$.RenderVectorGraphic._as(renderObject);
      renderObject.set$pictureInfo(_this.pictureInfo);
      renderObject.set$assetKey(_this.assetKey);
      renderObject.set$colorFilter(_this.colorFilter);
      t1 = C.MediaQuery__maybeOf(context, null);
      t1 = t1 == null ? null : t1.devicePixelRatio;
      renderObject.set$devicePixelRatio(0, t1 == null ? 1 : t1);
      renderObject.set$opacity(0, _this.opacity);
      renderObject.set$scale(0, _this.scale);
    }
  };
  B._RawWebVectorGraphicWidget.prototype = {
    createRenderObject$1(context) {
      var _this = this,
        t1 = C.LayerHandle$(type$.TransformLayer),
        t2 = C.LayerHandle$(type$.OpacityLayer),
        t3 = C.LayerHandle$(type$.ColorFilterLayer),
        t4 = new C.Matrix40(new Float64Array(16));
      t4.setIdentity$0();
      t4 = new B.RenderWebVectorGraphic(_this.assetKey, _this.pictureInfo, _this.colorFilter, _this.opacity, t1, t2, t3, t4, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t4.RenderObject$0();
      t4._html_render_vector_graphics$_updateOpacity$0();
      return t4;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$.RenderWebVectorGraphic._as(renderObject);
      renderObject.set$pictureInfo(_this.pictureInfo);
      renderObject.set$assetKey(_this.assetKey);
      renderObject.set$colorFilter(_this.colorFilter);
      renderObject.set$opacity(0, _this.opacity);
    }
  };
  B._RawPictureVectorGraphicWidget.prototype = {
    createRenderObject$1(context) {
      var t1 = new B.RenderPictureVectorGraphic(this.pictureInfo, this.colorFilter, this.opacity, new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1._render_vector_graphic$_updateOpacity$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderPictureVectorGraphic._as(renderObject);
      renderObject.set$pictureInfo(this.pictureInfo);
      renderObject.set$colorFilter(this.colorFilter);
      renderObject.set$opacity(0, this.opacity);
    }
  };
  B.DecodeResponse.prototype = {};
  B.VectorGraphicsCodec.prototype = {
    decode$3$response(_, data, listener, response) {
      var buffer, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, readImage, t11, type, value, value0, value1, value2, value3, value4, colors, focalY, focalX, blendMode, strokeCap, strokeJoin, vertices, indices, vertexData, paint, patternId, t12, t13, patternListener, pictureInfo, image, pattern, fontWeight, decoration, decorationStyle, list, fontFamily, text, decorations, fillId, strokeId, format, transform, recorder, newCanvas, t14, t15, position, _null = null,
        _s57_ = "The provided data was not a vector_graphics binary asset.";
      if (response == null) {
        buffer = new B._ReadBuffer(data);
        if (data.byteLength < 5)
          throw C.wrapException(C.StateError$(_s57_));
        if (buffer.getUint32$0(0) !== 8924514)
          throw C.wrapException(C.StateError$(_s57_));
        if (buffer.getUint8$0(0) !== 1)
          throw C.wrapException(C.StateError$("The provided data does not match the currently supported version."));
      } else {
        t1 = response._vector_graphics_codec$_buffer;
        t1.toString;
        buffer = t1;
      }
      $label0$1:
        for (t1 = buffer.data, t2 = listener._textPositions, t3 = listener._patterns, t4 = listener._textConfig, t5 = type$.JSArray_TextDecoration, t6 = type$.List_int, t7 = listener._listener0$_canvas, t8 = listener._paths, t9 = listener._clipViewbox, t10 = listener._paints, readImage = false; t11 = buffer._vector_graphics_codec$_position, t11 < t1.byteLength;) {
          buffer._vector_graphics_codec$_position = t11 + 1;
          type = t1.getUint8(t11);
          switch (type) {
            case 48:
              if (readImage)
                return new B.DecodeResponse(false, buffer);
              continue $label0$1;
            case 39:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value3 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value4 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              colors = buffer.getInt32List$1(value4);
              value4 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onLinearGradient$8(value0, value1, value2, value3, colors, buffer.getFloat32List$1(value4), t1.getUint8(buffer._vector_graphics_codec$_position++), value);
              continue $label0$1;
            case 40:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              if (t1.getUint8(t11) === 1) {
                value3 = t1.getFloat32(buffer._vector_graphics_codec$_position, true);
                t11 = buffer._vector_graphics_codec$_position += 4;
                value4 = t1.getFloat32(t11, true);
                buffer._vector_graphics_codec$_position += 4;
                focalY = value4;
                focalX = value3;
              } else {
                focalY = _null;
                focalX = focalY;
              }
              value3 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              colors = buffer.getInt32List$1(value3);
              value3 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onRadialGradient$10(value0, value1, value2, focalX, focalY, colors, buffer.getFloat32List$1(value3), buffer.getTransform$0(), t1.getUint8(buffer._vector_graphics_codec$_position++), value);
              continue $label0$1;
            case 28:
              value = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              blendMode = t1.getUint8(t11);
              value0 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value1 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onPaintObject$9$blendMode$color$id$paintStyle$shaderId$strokeCap$strokeJoin$strokeMiterLimit$strokeWidth(blendMode, value, value0, 0, value1 === 65535 ? _null : value1, _null, _null, _null, _null);
              continue $label0$1;
            case 29:
              value = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              strokeCap = t1.getUint8(t11);
              strokeJoin = t1.getUint8(buffer._vector_graphics_codec$_position++);
              blendMode = t1.getUint8(buffer._vector_graphics_codec$_position++);
              value0 = t1.getFloat32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value3 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onPaintObject$9$blendMode$color$id$paintStyle$shaderId$strokeCap$strokeJoin$strokeMiterLimit$strokeWidth(blendMode, value, value2, 1, value3 === 65535 ? _null : value3, strokeCap, strokeJoin, value0, value1);
              continue $label0$1;
            case 27:
              this._readPath$3$half(buffer, listener, false);
              continue $label0$1;
            case 52:
              this._readPath$3$half(buffer, listener, true);
              continue $label0$1;
            case 30:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value1 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onDrawPath$3(value, value0, value1 === 65535 ? _null : value1);
              continue $label0$1;
            case 31:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              vertices = buffer.getFloat32List$1(value0);
              value0 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              indices = value0 !== 0 ? buffer.getUint16List$1(value0) : _null;
              t11 = value !== 65535 ? value : _null;
              vertexData = $.$get$_renderer().createVerticesRaw$5$colors$indices$textureCoordinates(D.VertexMode_0, vertices, _null, indices, _null);
              if (t11 != null) {
                if (t11 >>> 0 !== t11 || t11 >= t10.length)
                  return C.ioore(t10, t11);
                paint = t10[t11];
              } else
                paint = _null;
              t7.drawVertices$3(vertexData, D.BlendMode_3, paint == null ? $.$get$FlutterVectorGraphicsListener__emptyPaint() : paint);
              vertexData.dispose$0();
              continue $label0$1;
            case 38:
              t11 = listener._currentPattern;
              if (t11 != null) {
                patternId = t11._patternId;
                t12 = t3.$index(0, patternId).recorder;
                t13 = t3.$index(0, patternId).canvas;
                t13.toString;
                t12.toString;
                patternListener = B.FlutterVectorGraphicsListener$_(0, listener._pictureFactory, t12, t13, listener._listener0$_locale, listener._listener0$_textDirection, t9, _null);
                t13 = t11._listener0$_width;
                t12 = t11._listener0$_height;
                patternListener._listener0$_size = new C.Size(t13, t12);
                pictureInfo = patternListener.toPicture$0();
                listener._currentPattern = null;
                image = pictureInfo.picture.toImageSync$2(D.JSNumber_methods.round$0(t13), D.JSNumber_methods.round$0(t12));
                t11 = t11._listener0$_transform;
                pattern = $.$get$_renderer().createImageShader$5(image, D.TileMode_1, D.TileMode_1, t11, _null);
                t3.$index(0, patternId).shader = pattern;
                image.dispose$0();
              } else
                t7.restore$0(0);
              continue $label0$1;
            case 37:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              if (!(value < t10.length))
                return C.ioore(t10, value);
              t7.saveLayer$2(_null, t10[value]);
              continue $label0$1;
            case 41:
              value = t1.getFloat32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value0 = t1.getFloat32(t11, true);
              buffer._vector_graphics_codec$_position += 4;
              if (t9)
                t7.clipRect$1(new C.Rect(0, 0, 0 + value, 0 + value0));
              listener._listener0$_size = new C.Size(value, value0);
              continue $label0$1;
            case 42:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              t7.save$0(0);
              if (!(value < t8.length))
                return C.ioore(t8, value);
              t7.clipPath$1(0, t8[value]);
              continue $label0$1;
            case 43:
              t7.saveLayer$2(_null, $.$get$FlutterVectorGraphicsListener__grayscaleDstInPaint());
              continue $label0$1;
            case 45:
              t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              fontWeight = t1.getUint8(t11);
              decoration = t1.getUint8(buffer._vector_graphics_codec$_position++);
              decorationStyle = t1.getUint8(buffer._vector_graphics_codec$_position++);
              value1 = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              if (value2 > 0) {
                list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._vector_graphics_codec$_position, value2);
                buffer._vector_graphics_codec$_position += value2;
                t6._as(list);
                fontFamily = new C._Utf8Decoder(false)._convertGeneral$4(list, 0, _null, true);
              } else
                fontFamily = _null;
              value2 = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._vector_graphics_codec$_position, value2);
              buffer._vector_graphics_codec$_position += value2;
              t6._as(list);
              text = new C._Utf8Decoder(false)._convertGeneral$4(list, 0, _null, true);
              decorations = C._setArrayType([], t5);
              if ((decoration & 1) !== 0)
                D.JSArray_methods.add$1(decorations, D.TextDecoration_1);
              if ((decoration & 2) !== 0)
                D.JSArray_methods.add$1(decorations, D.TextDecoration_2);
              if ((decoration & 4) !== 0)
                D.JSArray_methods.add$1(decorations, D.TextDecoration_4);
              if (!(fontWeight >= 0 && fontWeight < 9))
                return C.ioore(F.List_gVO, fontWeight);
              t11 = F.List_gVO[fontWeight];
              t12 = B.TextDecoration_TextDecoration$combine(decorations);
              if (!(decorationStyle >= 0 && decorationStyle < 5))
                return C.ioore(A.List_U9x, decorationStyle);
              D.JSArray_methods.add$1(t4, new B._TextConfig(text, fontFamily, value0, value, t11, t12, A.List_U9x[decorationStyle], C.Color$(value1)));
              continue $label0$1;
            case 44:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              fillId = value0 === 65535 ? _null : value0;
              value0 = t1.getUint16(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              strokeId = value0 === 65535 ? _null : value0;
              value0 = t1.getUint16(t11, true);
              buffer._vector_graphics_codec$_position += 2;
              listener.onDrawText$4(value, fillId, strokeId, value0 === 65535 ? _null : value0);
              continue $label0$1;
            case 46:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              buffer._vector_graphics_codec$_position = t11 + 1;
              format = t1.getUint8(t11);
              value0 = t1.getUint32(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 4;
              list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + buffer._vector_graphics_codec$_position, value0);
              buffer._vector_graphics_codec$_position += value0;
              listener.onImage$3(value, format, list);
              readImage = true;
              continue $label0$1;
            case 47:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value3 = t1.getFloat32(t11, true);
              buffer._vector_graphics_codec$_position += 4;
              listener.onDrawImage$6(value, value0, value1, value2, value3, buffer.getTransform$0());
              continue $label0$1;
            case 49:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value3 = t1.getFloat32(t11, true);
              buffer._vector_graphics_codec$_position += 4;
              transform = buffer.getTransform$0();
              transform.toString;
              listener._currentPattern = new B._PatternConfig(value, value2, value3, transform);
              t11 = $.$get$_renderer();
              recorder = t11.createPictureRecorder$0();
              newCanvas = t11.createCanvas$2(recorder, _null);
              newCanvas.clipRect$1(new C.Rect(value0, value1, value0 + value2, value1 + value3));
              t11 = new B._PatternState();
              t11.recorder = recorder;
              t11.canvas = newCanvas;
              t3.$indexSet(0, value, t11);
              continue $label0$1;
            case 50:
              t1.getUint16(buffer._vector_graphics_codec$_position, true);
              t11 = buffer._vector_graphics_codec$_position += 2;
              value = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value0 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value1 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              value2 = t1.getFloat32(t11, true);
              t11 = buffer._vector_graphics_codec$_position += 4;
              buffer._vector_graphics_codec$_position = t11 + 1;
              t11 = t1.getUint8(t11);
              transform = buffer.getTransform$0();
              t12 = isNaN(value) ? _null : value;
              t13 = isNaN(value0) ? _null : value0;
              t14 = isNaN(value1) ? _null : value1;
              t15 = isNaN(value2) ? _null : value2;
              D.JSArray_methods.add$1(t2, new B._TextPosition(t12, t13, t14, t15, t11 !== 0, transform));
              continue $label0$1;
            case 51:
              value = t1.getUint16(buffer._vector_graphics_codec$_position, true);
              buffer._vector_graphics_codec$_position += 2;
              if (!(value < t2.length))
                return C.ioore(t2, value);
              position = t2[value];
              if (position.reset)
                listener._textPositionY = listener._accumulatedTextPositionX = 0;
              t11 = position.x;
              if (t11 != null)
                listener._accumulatedTextPositionX = t11;
              t11 = position.y;
              if (t11 != null)
                listener._textPositionY = t11;
              t11 = position.dx;
              if (t11 != null) {
                t12 = listener._accumulatedTextPositionX;
                listener._accumulatedTextPositionX = (t12 == null ? 0 : t12) + t11;
              }
              t11 = position.dy;
              if (t11 != null)
                listener._textPositionY += t11;
              listener._textTransform = position.transform;
              continue $label0$1;
            default:
              throw C.wrapException(C.StateError$("Unknown type tag " + type));
          }
        }
      return A.DecodeResponse_true_null;
    },
    decode$2(_, data, listener) {
      return this.decode$3$response(0, data, listener, null);
    },
    writeDrawPath$4(buffer, pathId, paintId, patternId) {
      buffer._checkPhase$1(A._CurrentSection_7);
      buffer._addCommandsTag$0();
      D.JSArray_methods.add$1(buffer._vector_graphics_codec$_buffer, 30);
      buffer._putUint16$1(pathId);
      buffer._putUint16$1(paintId);
      buffer._putUint16$1(patternId == null ? 65535 : patternId);
    },
    _decodeFromHalfPrecision$1(list) {
      var i, t2,
        t1 = list.length,
        output = new Float32Array(t1),
        buffer = new DataView(new ArrayBuffer(8));
      for (i = 0; i < t1; ++i) {
        buffer.setUint16(0, list[i], false);
        t2 = B.toDouble(buffer);
        if (!(i < t1))
          return C.ioore(output, i);
        output[i] = t2;
      }
      return output;
    },
    _readPath$3$half(buffer, listener, half) {
      var tagLength, tags, pointLength, points, path, t1, t2, i, j, t3, t4, t5, t6, t7, t8,
        fillType = buffer.getUint8$0(0);
      buffer.getUint16$0(0);
      tagLength = buffer.getUint32$0(0);
      tags = buffer.getUint8List$1(tagLength);
      pointLength = buffer.getUint32$0(0);
      points = half ? this._decodeFromHalfPrecision$1(buffer.getUint16List$1(pointLength)) : buffer.getFloat32List$1(pointLength);
      path = $.$get$_renderer().createPath$0();
      if (!(fillType >= 0 && fillType < 2))
        return C.ioore(A.List_PathFillType_0_PathFillType_1, fillType);
      path.set$fillType(A.List_PathFillType_0_PathFillType_1[fillType]);
      D.JSArray_methods.add$1(listener._paths, path);
      listener._currentPath = path;
      $label0$1:
        for (t1 = tags.length, t2 = points.length, i = 0, j = 0; i < tagLength; ++i) {
          if (!(i < t1))
            return C.ioore(tags, i);
          switch (tags[i]) {
            case 0:
              if (!(j < t2))
                return C.ioore(points, j);
              t3 = points[j];
              t4 = j + 1;
              if (!(t4 < t2))
                return C.ioore(points, t4);
              t4 = points[t4];
              listener._currentPath.moveTo$2(0, t3, t4);
              j += 2;
              continue $label0$1;
            case 1:
              if (!(j < t2))
                return C.ioore(points, j);
              t3 = points[j];
              t4 = j + 1;
              if (!(t4 < t2))
                return C.ioore(points, t4);
              t4 = points[t4];
              listener._currentPath.lineTo$2(0, t3, t4);
              j += 2;
              continue $label0$1;
            case 2:
              if (!(j < t2))
                return C.ioore(points, j);
              t3 = points[j];
              t4 = j + 1;
              if (!(t4 < t2))
                return C.ioore(points, t4);
              t4 = points[t4];
              t5 = j + 2;
              if (!(t5 < t2))
                return C.ioore(points, t5);
              t5 = points[t5];
              t6 = j + 3;
              if (!(t6 < t2))
                return C.ioore(points, t6);
              t6 = points[t6];
              t7 = j + 4;
              if (!(t7 < t2))
                return C.ioore(points, t7);
              t7 = points[t7];
              t8 = j + 5;
              if (!(t8 < t2))
                return C.ioore(points, t8);
              t8 = points[t8];
              listener._currentPath.cubicTo$6(t3, t4, t5, t6, t7, t8);
              j += 6;
              continue $label0$1;
            case 3:
              listener._currentPath.close$0(0);
              continue $label0$1;
          }
        }
      listener._currentPath = null;
    }
  };
  B.VectorGraphicsCodecListener.prototype = {};
  B._CurrentSection.prototype = {
    _enumToString$0() {
      return "_CurrentSection." + this._name;
    }
  };
  B.VectorGraphicsBuffer.prototype = {
    _addCommandsTag$0() {
      if (this._addedCommandTag)
        return;
      D.JSArray_methods.add$1(this._vector_graphics_codec$_buffer, 48);
      this._addedCommandTag = true;
    },
    _checkPhase$1(expected) {
      var $name;
      if (this._decodePhase.index > expected.index) {
        $name = expected._name;
        if (0 >= $name.length)
          return C.ioore($name, 0);
        throw C.wrapException(C.StateError$(D.JSString_methods.toUpperCase$0($name[0]) + D.JSString_methods.substring$1($name, 1) + " must be encoded together (current phase is " + this._decodePhase._name + ")."));
      }
      this._decodePhase = expected;
    },
    _writeTransform$1(transform) {
      var t2,
        t1 = this._vector_graphics_codec$_buffer;
      if (transform != null) {
        t2 = transform.length;
        D.JSArray_methods.add$1(t1, t2);
        this._vector_graphics_codec$_alignTo$1(8);
        D.JSArray_methods.addAll$1(this._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat64List_methods.get$buffer(transform), transform.byteOffset, 8 * t2));
      } else
        D.JSArray_methods.add$1(t1, 0);
    },
    _putUint16$1(value) {
      var t2,
        t1 = this._vector_graphics_codec$_eightBytes;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 10);
      t1.setUint16(0, value, true);
      t1 = this._vector_graphics_codec$_buffer;
      t2 = this.__VectorGraphicsBuffer__eightBytesAsList_A;
      t2 === $ && C.throwLateFieldNI("_eightBytesAsList");
      D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(2, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
    },
    _putUint32$1(value) {
      var t2,
        t1 = this._vector_graphics_codec$_eightBytes;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 11);
      t1.setUint32(0, value, true);
      t1 = this._vector_graphics_codec$_buffer;
      t2 = this.__VectorGraphicsBuffer__eightBytesAsList_A;
      t2 === $ && C.throwLateFieldNI("_eightBytesAsList");
      D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(4, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
    },
    _putInt32List$1(list) {
      this._vector_graphics_codec$_alignTo$1(4);
      D.JSArray_methods.addAll$1(this._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeInt32List_methods.get$buffer(list), list.byteOffset, 4 * list.length));
    },
    _putFloat32$1(value) {
      var t2,
        t1 = this._vector_graphics_codec$_eightBytes;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1, 12);
      t1.setFloat32(0, value, true);
      t1 = this._vector_graphics_codec$_buffer;
      t2 = this.__VectorGraphicsBuffer__eightBytesAsList_A;
      t2 === $ && C.throwLateFieldNI("_eightBytesAsList");
      D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(4, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
    },
    _putFloat32List$1(list) {
      this._vector_graphics_codec$_alignTo$1(4);
      D.JSArray_methods.addAll$1(this._vector_graphics_codec$_buffer, J.asUint8List$2$x(D.NativeFloat32List_methods.get$buffer(list), list.byteOffset, 4 * list.length));
    },
    _vector_graphics_codec$_alignTo$1(alignment) {
      var t2,
        t1 = this._vector_graphics_codec$_buffer,
        mod = D.JSInt_methods.$mod(t1.length, alignment);
      if (mod !== 0) {
        t2 = $.$get$VectorGraphicsBuffer__zeroBuffer();
        D.JSArray_methods.addAll$1(t1, C.SubListIterable$(t2, 0, C.checkNotNullable(alignment - mod, "count", type$.int), C.instanceType(t2)._eval$1("ListBase.E")));
      }
    },
    set$_vector_graphics_codec$_buffer(_buffer) {
      this._vector_graphics_codec$_buffer = type$.List_int._as(_buffer);
    }
  };
  B._ReadBuffer.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this._vector_graphics_codec$_position++);
    },
    getUint16$0(_) {
      var value = this.data.getUint16(this._vector_graphics_codec$_position, true);
      this._vector_graphics_codec$_position += 2;
      return value;
    },
    getUint32$0(_) {
      var value = this.data.getUint32(this._vector_graphics_codec$_position, true);
      this._vector_graphics_codec$_position += 4;
      return value;
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = J.asUint8List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + this._vector_graphics_codec$_position, $length);
      this._vector_graphics_codec$_position += $length;
      return list;
    },
    getUint16List$1($length) {
      var t1, list, _this = this;
      _this._vector_graphics_codec$_alignTo$1(2);
      t1 = _this.data;
      list = J.asUint16List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, $length);
      _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 2 * $length;
      return list;
    },
    getInt32List$1($length) {
      var t1, list, _this = this;
      _this._vector_graphics_codec$_alignTo$1(4);
      t1 = _this.data;
      list = J.asInt32List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, $length);
      _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 4 * $length;
      return list;
    },
    getFloat32List$1($length) {
      var t1, list, _this = this;
      _this._vector_graphics_codec$_alignTo$1(4);
      t1 = _this.data;
      list = J.asFloat32List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, $length);
      _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 4 * $length;
      return list;
    },
    _vector_graphics_codec$_alignTo$1(alignment) {
      var t1 = this._vector_graphics_codec$_position,
        mod = D.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._vector_graphics_codec$_position = t1 + (alignment - mod);
    },
    getTransform$0() {
      var t1, list, _this = this,
        transformLength = _this.getUint8$0(0);
      if (transformLength > 0) {
        _this._vector_graphics_codec$_alignTo$1(8);
        t1 = _this.data;
        list = J.asFloat64List$2$x(D.NativeByteData_methods.get$buffer(t1), t1.byteOffset + _this._vector_graphics_codec$_position, transformLength);
        _this._vector_graphics_codec$_position = _this._vector_graphics_codec$_position + 8 * transformLength;
        return list;
      }
      return null;
    }
  };
  B.DrawCommandBuilder.prototype = {
    _getOrGenerateId$1$2(object, map, $T) {
      $T._as(object);
      $T._eval$1("Map<0,int>")._as(map);
      return map.putIfAbsent$2(0, object, new B.DrawCommandBuilder__getOrGenerateId_closure(map));
    },
    addSaveLayer$1(paint) {
      var _null = null;
      D.JSArray_methods.add$1(this._commands, new B.DrawCommand(_null, A.DrawCommandType_2, _null, this._getOrGenerateId$1$2(paint, this._draw_command_builder$_paints, type$.Paint), _null, _null));
    },
    addPath$4(_, path, paint, debugString, patternId) {
      var pathId, paintId, t1, _this = this;
      if (path._path$_commands.length === 0)
        return;
      pathId = _this._getOrGenerateId$1$2(path, _this._draw_command_builder$_paths, type$.Path);
      paintId = _this._getOrGenerateId$1$2(paint, _this._draw_command_builder$_paints, type$.Paint);
      t1 = patternId != null ? _this._draw_command_builder$_patterns.$index(0, patternId) : null;
      D.JSArray_methods.add$1(_this._commands, new B.DrawCommand(debugString, A.DrawCommandType_0, pathId, paintId, t1, null));
    }
  };
  B.Point.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.Point && other.x === this.x && other.y === this.y;
    },
    $mul(_, multiplicand) {
      return new B.Point(this.x * multiplicand, this.y * multiplicand);
    },
    $add(_, other) {
      type$.Point._as(other);
      return new B.Point(this.x + other.x, this.y + other.y);
    },
    toString$0(_) {
      return "Point(" + C.S(this.x) + ", " + C.S(this.y) + ")";
    }
  };
  B.Rect0.prototype = {
    get$isEmpty(_) {
      var _this = this;
      return _this.right - _this.left === 0 || _this.bottom - _this.top === 0;
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.left, _this.top, _this.right, _this.bottom, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.Rect0 && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    toString$0(_) {
      var _this = this;
      return "Rect.fromLTRB(" + C.S(_this.left) + ", " + C.S(_this.top) + ", " + C.S(_this.right) + ", " + C.S(_this.bottom) + ")";
    }
  };
  B.ImageData.prototype = {};
  B.DrawImageData.prototype = {};
  B.AffineMatrix.prototype = {
    scaleStrokeWidth$1(width) {
      var t1, t2, xScale, yScale, _this = this;
      if (width != null)
        t1 = _this.a === 1 && _this.d === 1;
      else
        t1 = true;
      if (t1)
        return width;
      t1 = _this.a;
      t2 = _this.c;
      xScale = Math.sqrt(t1 * t1 + t2 * t2);
      t2 = _this.b;
      t1 = _this.d;
      yScale = Math.sqrt(t2 * t2 + t1 * t1);
      if (typeof width !== "number")
        return C.iae(width);
      return (xScale + yScale) / 2 * width;
    },
    rotated$1(radians) {
      var cosAngle, sinAngle, t1, t2, t3, t4, t5, _this = this;
      if (radians === 0)
        return _this;
      cosAngle = Math.cos(radians);
      sinAngle = Math.sin(radians);
      t1 = _this.a;
      t2 = _this.c;
      t3 = _this.b;
      t4 = _this.d;
      t5 = -sinAngle;
      return B.AffineMatrix$(t1 * cosAngle + t2 * sinAngle, t3 * cosAngle + t4 * sinAngle, t1 * t5 + t2 * cosAngle, t3 * t5 + t4 * cosAngle, _this.e, _this.f, _this._m4_10);
    },
    get$encodableInRect() {
      var _this = this,
        t1 = _this.a;
      return t1 > 0 && _this.b === 0 && _this.c === 0 && _this.d > 0 && _this._m4_10 === t1;
    },
    scaled$2(x, y) {
      var _this = this;
      if (x === 1 && y === 1)
        return _this;
      return B.AffineMatrix$(_this.a * x, _this.b * x, _this.c * y, _this.d * y, _this.e, _this.f, _this._m4_10 * x);
    },
    translated$2(x, y) {
      var _this = this,
        t1 = _this.a,
        t2 = _this.b,
        t3 = _this.c,
        t4 = _this.d;
      return B.AffineMatrix$(t1, t2, t3, t4, t1 * x + t3 * y + _this.e, t2 * x + t4 * y + _this.f, _this._m4_10);
    },
    multiplied$1(other) {
      var _this = this,
        t1 = _this.a,
        t2 = other.a,
        t3 = _this.c,
        t4 = other.b,
        t5 = _this.b,
        t6 = _this.d,
        t7 = other.c,
        t8 = other.d,
        t9 = other.e,
        t10 = other.f;
      return B.AffineMatrix$(t1 * t2 + t3 * t4, t5 * t2 + t6 * t4, t1 * t7 + t3 * t8, t5 * t7 + t6 * t8, t1 * t9 + t3 * t10 + _this.e, t5 * t9 + t6 * t10 + _this.f, _this._m4_10 * other._m4_10);
    },
    transformPoint$1(_, point) {
      var _this = this,
        t1 = point.x,
        t2 = point.y;
      return new B.Point(_this.a * t1 + _this.c * t2 + _this.e, _this.b * t1 + _this.d * t2 + _this.f);
    },
    toMatrix4$0() {
      var _this = this;
      return new Float64Array(C._ensureNativeList(C._setArrayType([_this.a, _this.b, 0, 0, _this.c, _this.d, 0, 0, 0, 0, _this._m4_10, 0, _this.e, _this.f, 0, 1], type$.JSArray_double)));
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.a, _this.b, _this.c, _this.d, _this.e, _this.f, _this._m4_10, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.AffineMatrix && other.a === _this.a && other.b === _this.b && other.c === _this.c && other.d === _this.d && other.e === _this.e && other.f === _this.f && other._m4_10 === _this._m4_10;
    },
    toString$0(_) {
      var _this = this;
      return "[ " + C.S(_this.a) + ", " + C.S(_this.c) + ", " + C.S(_this.e) + " ]\n[ " + C.S(_this.b) + ", " + C.S(_this.d) + ", " + C.S(_this.f) + " ]\n[ 0.0, 0.0, 1.0 ] // _m4_10 = " + C.S(_this._m4_10) + "\n";
    }
  };
  B.PathFillType0.prototype = {
    _enumToString$0() {
      return "PathFillType." + this._name;
    }
  };
  B.PathCommandType.prototype = {
    _enumToString$0() {
      return "PathCommandType." + this._name;
    }
  };
  B.PathCommand.prototype = {};
  B.LineToCommand.prototype = {
    transformed$1(matrix) {
      var xy = matrix.transformPoint$1(0, new B.Point(this.x, this.y));
      return new B.LineToCommand(xy.x, xy.y, A.PathCommandType_1);
    },
    get$hashCode(_) {
      return C.Object_hash(this.type, this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.LineToCommand && other.x === this.x && other.y === this.y;
    },
    toString$0(_) {
      return "LineToCommand(" + C.S(this.x) + ", " + C.S(this.y) + ")";
    }
  };
  B.MoveToCommand.prototype = {
    transformed$1(matrix) {
      var xy = matrix.transformPoint$1(0, new B.Point(this.x, this.y));
      return new B.MoveToCommand(xy.x, xy.y, A.PathCommandType_0);
    },
    get$hashCode(_) {
      return C.Object_hash(this.type, this.x, this.y, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.MoveToCommand && other.x === this.x && other.y === this.y;
    },
    toString$0(_) {
      return "MoveToCommand(" + C.S(this.x) + ", " + C.S(this.y) + ")";
    }
  };
  B.CubicToCommand.prototype = {
    computeLength$1(start) {
      var _this = this;
      return new B.CubicToCommand_computeLength_compute().call$5(start, new B.Point(_this.x1, _this.y1), new B.Point(_this.x2, _this.y2), new B.Point(_this.x3, _this.y3), 0);
    },
    transformed$1(matrix) {
      var _this = this,
        xy1 = matrix.transformPoint$1(0, new B.Point(_this.x1, _this.y1)),
        xy2 = matrix.transformPoint$1(0, new B.Point(_this.x2, _this.y2)),
        xy3 = matrix.transformPoint$1(0, new B.Point(_this.x3, _this.y3));
      return new B.CubicToCommand(xy1.x, xy1.y, xy2.x, xy2.y, xy3.x, xy3.y, A.PathCommandType_2);
    },
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.type, _this.x1, _this.y1, _this.x2, _this.y2, _this.x3, _this.y3, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.CubicToCommand && other.x1 === _this.x1 && other.y1 === _this.y1 && other.x2 === _this.x2 && other.y2 === _this.y2 && other.x3 === _this.x3 && other.y3 === _this.y3;
    },
    toString$0(_) {
      var _this = this;
      return "CubicToCommand(" + C.S(_this.x1) + ", " + C.S(_this.y1) + ", " + C.S(_this.x2) + ", " + C.S(_this.y2) + ", " + C.S(_this.x3) + ", " + C.S(_this.y3) + ")";
    }
  };
  B.CloseCommand.prototype = {
    transformed$1(matrix) {
      return this;
    },
    get$hashCode(_) {
      return C.Primitives_objectHashCode(this.type);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.CloseCommand;
    },
    toString$0(_) {
      return "CloseCommand()";
    }
  };
  B.PathBuilder.prototype = {
    addOval$1(oval) {
      var t5, t6, t7, t8, t9, t10, t11,
        t1 = oval.left,
        t2 = (oval.right - t1) * 0.5,
        t3 = oval.top,
        t4 = (oval.bottom - t3) * 0.5;
      t1 += t2;
      t3 += t4;
      t5 = 0.551915024494 * t2;
      t6 = 0.551915024494 * t4;
      t7 = t3 - t4;
      t8 = this._path$_commands;
      D.JSArray_methods.add$1(t8, new B.MoveToCommand(t1, t7, A.PathCommandType_0));
      t9 = t1 + t5;
      t10 = t1 + t2;
      t11 = t3 - t6;
      D.JSArray_methods.add$1(t8, new B.CubicToCommand(t9, t7, t10, t11, t10, t3, A.PathCommandType_2));
      t6 = t3 + t6;
      t4 = t3 + t4;
      D.JSArray_methods.add$1(t8, new B.CubicToCommand(t10, t6, t9, t4, t1, t4, A.PathCommandType_2));
      t5 = t1 - t5;
      t2 = t1 - t2;
      D.JSArray_methods.add$1(t8, new B.CubicToCommand(t5, t4, t2, t6, t2, t3, A.PathCommandType_2));
      D.JSArray_methods.add$1(t8, new B.CubicToCommand(t2, t11, t5, t7, t1, t7, A.PathCommandType_2));
      D.JSArray_methods.add$1(t8, A.CloseCommand_PathCommandType_3);
      return this;
    },
    addRect$1(rect) {
      var t4,
        t1 = rect.left,
        t2 = rect.top,
        t3 = this._path$_commands;
      D.JSArray_methods.add$1(t3, new B.MoveToCommand(t1, t2, A.PathCommandType_0));
      t4 = rect.right;
      D.JSArray_methods.add$1(t3, new B.LineToCommand(t4, t2, A.PathCommandType_1));
      t2 = rect.bottom;
      D.JSArray_methods.add$1(t3, new B.LineToCommand(t4, t2, A.PathCommandType_1));
      D.JSArray_methods.add$1(t3, new B.LineToCommand(t1, t2, A.PathCommandType_1));
      D.JSArray_methods.add$1(t3, A.CloseCommand_PathCommandType_3);
      return this;
    },
    addRRect$3(rect, rx, ry) {
      var magicRadius, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13;
      if (rx === 0 && ry === 0)
        return this.addRect$1(rect);
      magicRadius = new B.Point(rx, ry).$mul(0, 0.551915024494);
      t1 = rect.left;
      t2 = t1 + rx;
      t3 = rect.top;
      t4 = this._path$_commands;
      D.JSArray_methods.add$1(t4, new B.MoveToCommand(t2, t3, A.PathCommandType_0));
      t5 = t1 + (rect.right - t1);
      t6 = t5 - rx;
      D.JSArray_methods.add$1(t4, new B.LineToCommand(t6, t3, A.PathCommandType_1));
      t7 = magicRadius.x;
      t8 = t6 + t7;
      t9 = t3 + ry;
      t10 = magicRadius.y;
      t11 = t9 - t10;
      D.JSArray_methods.add$1(t4, new B.CubicToCommand(t8, t3, t5, t11, t5, t9, A.PathCommandType_2));
      t12 = t3 + (rect.bottom - t3);
      t13 = t12 - ry;
      D.JSArray_methods.add$1(t4, new B.LineToCommand(t5, t13, A.PathCommandType_1));
      t10 = t13 + t10;
      D.JSArray_methods.add$1(t4, new B.CubicToCommand(t5, t10, t8, t12, t6, t12, A.PathCommandType_2));
      D.JSArray_methods.add$1(t4, new B.LineToCommand(t2, t12, A.PathCommandType_1));
      t7 = t2 - t7;
      D.JSArray_methods.add$1(t4, new B.CubicToCommand(t7, t12, t1, t10, t1, t13, A.PathCommandType_2));
      D.JSArray_methods.add$1(t4, new B.LineToCommand(t1, t9, A.PathCommandType_1));
      D.JSArray_methods.add$1(t4, new B.CubicToCommand(t1, t11, t7, t3, t2, t3, A.PathCommandType_2));
      D.JSArray_methods.add$1(t4, A.CloseCommand_PathCommandType_3);
      return this;
    },
    toPath$1$reset(reset) {
      var path,
        t1 = this._path$_commands,
        t2 = this.__PathBuilder_fillType_A;
      t2 === $ && C.throwLateFieldNI("fillType");
      path = B.Path$(t1, t2);
      if (reset)
        D.JSArray_methods.clear$0(t1);
      return path;
    },
    toPath$0() {
      return this.toPath$1$reset(true);
    },
    $isPathProxy: 1
  };
  B.Path.prototype = {
    withFillType$1(type) {
      if (type === this.fillType)
        return this;
      return B.Path$(this._path$_commands, type);
    },
    get$isEmpty(_) {
      return this._path$_commands.length === 0;
    },
    transformed$1(matrix) {
      var t1, t2, _i,
        commands = C._setArrayType([], type$.JSArray_PathCommand);
      for (t1 = this._path$_commands, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        D.JSArray_methods.add$1(commands, t1[_i].transformed$1(matrix));
      return B.Path$(commands, this.fillType);
    },
    get$hashCode(_) {
      return C.Object_hash(C.Object_hashAll(this._path$_commands), this.fillType, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.Path && B.listEquals1(this._path$_commands, other._path$_commands, type$.PathCommand) && other.fillType === this.fillType;
    },
    dashed$1(intervals) {
      type$.List_double._as(intervals);
      if (intervals.length === 0)
        return this;
      return new B._PathDasher(new B._CircularIntervalList(intervals), A.Point_0_0, A.Point_0_0, C._setArrayType([], type$.JSArray_PathCommand)).dash$1(this);
    },
    bounds$0(_) {
      var t3, t4, t5, t6, largestY, largestX, smallestY, smallestX, _i, command, t7, t8, _i0, pair, t9, _179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 = 17976931348623157e292, __179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368 = -17976931348623157e292,
        t1 = this._path$_commands,
        t2 = t1.length;
      if (t2 === 0)
        return A.Rect_0_0_0_00;
      for (t3 = type$.JSArray_double, t4 = type$.CubicToCommand, t5 = type$.LineToCommand, t6 = type$.MoveToCommand, largestY = __179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368, largestX = largestY, smallestY = _179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368, smallestX = smallestY, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        command = t1[_i];
        switch (command.type.index) {
          case 0:
            t6._as(command);
            t7 = command.x;
            smallestX = Math.min(t7, smallestX);
            t8 = command.y;
            smallestY = Math.min(t8, smallestY);
            largestX = Math.max(t7, largestX);
            largestY = Math.max(t8, largestY);
            break;
          case 1:
            t5._as(command);
            t7 = command.x;
            smallestX = Math.min(t7, smallestX);
            t8 = command.y;
            smallestY = Math.min(t8, smallestY);
            largestX = Math.max(t7, largestX);
            largestY = Math.max(t8, largestY);
            break;
          case 2:
            t4._as(command);
            for (t7 = [C._setArrayType([command.x1, command.y1], t3), C._setArrayType([command.x2, command.y2], t3), C._setArrayType([command.x3, command.y3], t3)], _i0 = 0; _i0 < 3; ++_i0) {
              pair = t7[_i0];
              t8 = pair.length;
              if (0 >= t8)
                return C.ioore(pair, 0);
              t9 = pair[0];
              smallestX = Math.min(t9, smallestX);
              if (1 >= t8)
                return C.ioore(pair, 1);
              t8 = pair[1];
              smallestY = Math.min(t8, smallestY);
              largestX = Math.max(t9, largestX);
              largestY = Math.max(t8, largestY);
            }
            break;
          case 3:
            break;
        }
      }
      return new B.Rect0(smallestX, smallestY, largestX, largestY);
    },
    toString$0(_) {
      var t2,
        t1 = this._path$_commands;
      t1 = t1.length !== 0 ? "Path(" + ("\n  commands: <PathCommand>" + C.S(t1) + ",") : "Path(";
      t2 = this.fillType;
      t1 = (t2 !== A.PathFillType_00 ? t1 + ("\n  fillType: " + t2.toString$0(0) + ",") : t1) + "\n)";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B._CircularIntervalList.prototype = {
    get$next(_) {
      var _this = this,
        t1 = _this._path$_idx,
        t2 = _this._vals,
        t3 = t2.length;
      if (t1 >= t3)
        t1 = _this._path$_idx = 0;
      _this._path$_idx = t1 + 1;
      if (!(t1 < t3))
        return C.ioore(t2, t1);
      return t2[t1];
    }
  };
  B._PathDasher.prototype = {
    get$length(_) {
      var t1 = this.___PathDasher_length_A;
      t1 === $ && C.throwLateFieldNI("length");
      return t1;
    },
    _dashLineTo$1(target) {
      var t1, t2, t3, t4, t5, t, t6, t7, _this = this,
        distance = B.Point_distance(_this.currentPoint, target);
      if (!(distance <= 0)) {
        t1 = _this.___PathDasher_length_A;
        t1 === $ && C.throwLateFieldNI("length");
        t1 = t1 <= 0;
      } else
        t1 = true;
      if (t1)
        return;
      t1 = _this._dashedCommands;
      t2 = target.x;
      t3 = target.y;
      t4 = _this._path$_intervals;
      while (true) {
        t5 = _this.___PathDasher_length_A;
        t5 === $ && C.throwLateFieldNI("length");
        if (!(distance >= t5))
          break;
        t = t5 / distance;
        t5 = _this.currentPoint;
        t6 = 1 - t;
        _this.currentPoint = new B.Point(t6 * t5.x + t * t2, t6 * t5.y + t * t3);
        _this.___PathDasher_length_A = t4.get$next(0);
        t5 = _this.___PathDasher_draw_A;
        t5 === $ && C.throwLateFieldNI("draw");
        t6 = _this.currentPoint;
        t7 = t6.x;
        t6 = t6.y;
        if (t5)
          D.JSArray_methods.add$1(t1, new B.LineToCommand(t7, t6, A.PathCommandType_1));
        else
          D.JSArray_methods.add$1(t1, new B.MoveToCommand(t7, t6, A.PathCommandType_0));
        distance = B.Point_distance(_this.currentPoint, target);
        _this.___PathDasher_draw_A = !_this.___PathDasher_draw_A;
      }
      if (distance > 0) {
        _this.___PathDasher_length_A = t5 - distance;
        t4 = _this.___PathDasher_draw_A;
        t4 === $ && C.throwLateFieldNI("draw");
        if (t4)
          D.JSArray_methods.add$1(t1, new B.LineToCommand(t2, t3, A.PathCommandType_1));
      }
      _this.currentPoint = target;
    },
    _dashCubicTo$1(cubic) {
      var t3, dividedPoints, t4, list, t5, _this = this, _null = null,
        distance = cubic.computeLength$1(_this.currentPoint),
        t1 = _this._path$_intervals,
        t2 = _this._dashedCommands;
      while (true) {
        t3 = _this.___PathDasher_length_A;
        t3 === $ && C.throwLateFieldNI("length");
        if (!(distance >= t3))
          break;
        dividedPoints = B.CubicToCommand_subdivide(_this.currentPoint, new B.Point(cubic.x1, cubic.y1), new B.Point(cubic.x2, cubic.y2), new B.Point(cubic.x3, cubic.y3), t3 / distance);
        t3 = _this.currentPoint = dividedPoints[3];
        t4 = _this.___PathDasher_draw_A;
        t4 === $ && C.throwLateFieldNI("draw");
        if (t4) {
          t3 = C._arrayInstanceType(dividedPoints);
          t4 = new C.SubListIterable(dividedPoints, 1, _null, t3._eval$1("SubListIterable<1>"));
          t4.SubListIterable$3(dividedPoints, 1, _null, t3._precomputed1);
          list = t4.take$1(0, 3).toList$0(0);
          t4 = list.length;
          if (0 >= t4)
            return C.ioore(list, 0);
          t3 = list[0];
          if (1 >= t4)
            return C.ioore(list, 1);
          t5 = list[1];
          if (2 >= t4)
            return C.ioore(list, 2);
          t4 = list[2];
          D.JSArray_methods.add$1(t2, new B.CubicToCommand(t3.x, t3.y, t5.x, t5.y, t4.x, t4.y, A.PathCommandType_2));
        } else
          D.JSArray_methods.add$1(t2, new B.MoveToCommand(t3.x, t3.y, A.PathCommandType_0));
        t3 = C._arrayInstanceType(dividedPoints);
        t4 = new C.SubListIterable(dividedPoints, 4, _null, t3._eval$1("SubListIterable<1>"));
        t4.SubListIterable$3(dividedPoints, 4, _null, t3._precomputed1);
        list = t4.take$1(0, 3).toList$0(0);
        t4 = list.length;
        if (0 >= t4)
          return C.ioore(list, 0);
        t3 = list[0];
        if (1 >= t4)
          return C.ioore(list, 1);
        t5 = list[1];
        if (2 >= t4)
          return C.ioore(list, 2);
        t4 = list[2];
        cubic = new B.CubicToCommand(t3.x, t3.y, t5.x, t5.y, t4.x, t4.y, A.PathCommandType_2);
        _this.___PathDasher_length_A = t1.get$next(0);
        distance = cubic.computeLength$1(_this.currentPoint);
        _this.___PathDasher_draw_A = !_this.___PathDasher_draw_A;
      }
      _this.___PathDasher_length_A = t3 - distance;
      _this.currentPoint = new B.Point(cubic.x3, cubic.y3);
      t1 = _this.___PathDasher_draw_A;
      t1 === $ && C.throwLateFieldNI("draw");
      if (t1)
        D.JSArray_methods.add$1(t2, cubic);
    },
    dash$1(path) {
      var t1, t2, t3, t4, t5, t6, _i, command, _this = this;
      _this.___PathDasher_length_A = _this._path$_intervals.get$next(0);
      _this.___PathDasher_draw_A = true;
      for (t1 = path._path$_commands, t2 = t1.length, t3 = type$.CubicToCommand, t4 = type$.LineToCommand, t5 = type$.MoveToCommand, t6 = _this._dashedCommands, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        command = t1[_i];
        switch (command.type.index) {
          case 0:
            t5._as(command);
            _this.currentSubpathPoint = _this.currentPoint = new B.Point(command.x, command.y);
            D.JSArray_methods.add$1(t6, command);
            break;
          case 1:
            t4._as(command);
            _this._dashLineTo$1(new B.Point(command.x, command.y));
            break;
          case 2:
            _this._dashCubicTo$1(t3._as(command));
            break;
          case 3:
            _this._dashLineTo$1(_this.currentSubpathPoint);
            _this.currentPoint = _this.currentSubpathPoint;
            break;
        }
      }
      return B.Path$(t6, path.fillType);
    }
  };
  B.PatternData.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.x, _this.y, _this.width, _this.height, _this.transform, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.PatternData && other.x === _this.x && other.y === _this.y && other.width === _this.width && other.height === _this.height && other.transform.$eq(0, _this.transform);
    }
  };
  B.ImageFormat.prototype = {
    _enumToString$0() {
      return "ImageFormat." + this._name;
    }
  };
  B.ImageSizeData.prototype = {};
  B.PngImageSizeData.prototype = {};
  B.GifImageSizeData.prototype = {};
  B.JpegImageSizeData.prototype = {};
  B.WebPImageSizeData.prototype = {};
  B.BmpImageSizeData.prototype = {};
  B.Color0.prototype = {
    toString$0(_) {
      return "Color(0x" + D.JSString_methods.padLeft$2(D.JSInt_methods.toRadixString$1(this.value, 16), 8, "0") + ")";
    },
    get$hashCode(_) {
      return this.value;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.Color0 && other.value === this.value;
    }
  };
  B.Gradient.prototype = {};
  B.LinearGradient0.prototype = {
    applyBounds$2(bounds, transform) {
      var t1, t2, t3, _this = this,
        accumulatedTransform = _this.transform;
      if (accumulatedTransform == null)
        accumulatedTransform = A.AffineMatrix_qrl;
      t1 = _this.unitMode;
      switch ((t1 == null ? A.GradientUnitMode_0 : t1).index) {
        case 0:
          t1 = bounds.left;
          t2 = bounds.top;
          accumulatedTransform = transform.translated$2(t1, t2).scaled$2(bounds.right - t1, bounds.bottom - t2).multiplied$1(accumulatedTransform);
          break;
        case 1:
          accumulatedTransform = transform.multiplied$1(accumulatedTransform);
          break;
        case 2:
          break;
      }
      t1 = accumulatedTransform.transformPoint$1(0, _this.from);
      t2 = accumulatedTransform.transformPoint$1(0, _this.to);
      t3 = _this.tileMode;
      if (t3 == null)
        t3 = A.TileMode_00;
      return new B.LinearGradient0(t1, t2, _this.id, _this.colors, _this.offsets, t3, A.GradientUnitMode_2, null);
    },
    applyProperties$1(ref) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.colors;
      if (t1 == null)
        t1 = ref.colors;
      t2 = _this.offsets;
      if (t2 == null)
        t2 = ref.offsets;
      t3 = _this.tileMode;
      if (t3 == null)
        t3 = ref.tileMode;
      t4 = _this.unitMode;
      if (t4 == null)
        t4 = ref.unitMode;
      t5 = _this.transform;
      if (t5 == null)
        t5 = ref.transform;
      return new B.LinearGradient0(_this.from, _this.to, _this.id, t1, t2, t3, t4, t5);
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.colors;
      t1 = C.Object_hashAll(t1 == null ? C._setArrayType([], type$.JSArray_Color_2) : t1);
      t2 = _this.offsets;
      return C.Object_hash(_this.id, _this.from, _this.to, t1, C.Object_hashAll(t2 == null ? C._setArrayType([], type$.JSArray_double) : t2), _this.tileMode, _this.unitMode, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.LinearGradient0 && other.id === _this.id && other.from.$eq(0, _this.from) && other.to.$eq(0, _this.to) && B.listEquals1(other.colors, _this.colors, type$.Color_2) && B.listEquals1(other.offsets, _this.offsets, type$.double) && other.tileMode == _this.tileMode && other.unitMode == _this.unitMode;
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.from.toString$0(0),
        t2 = _this.to.toString$0(0),
        t3 = C.S(_this.colors),
        t4 = C.S(_this.offsets),
        t5 = C.S(_this.tileMode),
        t6 = _this.transform;
      t6 = t6 == null ? "" : "Float64List.fromList(" + C.S(t6.toMatrix4$0()) + "), ";
      return "LinearGradient(id: '" + _this.id + "', from: " + t1 + ", to: " + t2 + ", colors: <Color>" + t3 + ", offsets: <double>" + t4 + ", tileMode: " + t5 + ", " + t6 + "unitMode: " + C.S(_this.unitMode) + ")";
    }
  };
  B.GradientUnitMode.prototype = {
    _enumToString$0() {
      return "GradientUnitMode." + this._name;
    }
  };
  B.RadialGradient.prototype = {
    applyBounds$2(bounds, transform) {
      var t1, t2, _this = this,
        accumulatedTransform = _this.transform;
      if (accumulatedTransform == null)
        accumulatedTransform = A.AffineMatrix_qrl;
      t1 = _this.unitMode;
      switch ((t1 == null ? A.GradientUnitMode_0 : t1).index) {
        case 0:
          t1 = bounds.left;
          t2 = bounds.top;
          accumulatedTransform = transform.translated$2(t1, t2).scaled$2(bounds.right - t1, bounds.bottom - t2).multiplied$1(accumulatedTransform);
          break;
        case 1:
          accumulatedTransform = transform.multiplied$1(accumulatedTransform);
          break;
        case 2:
          break;
      }
      t1 = _this.tileMode;
      if (t1 == null)
        t1 = A.TileMode_00;
      return new B.RadialGradient(_this.center, _this.radius, _this.focalPoint, _this.id, _this.colors, _this.offsets, t1, A.GradientUnitMode_2, accumulatedTransform);
    },
    applyProperties$1(ref) {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.colors;
      if (t1 == null)
        t1 = ref.colors;
      t2 = _this.offsets;
      if (t2 == null)
        t2 = ref.offsets;
      t3 = _this.transform;
      if (t3 == null)
        t3 = ref.transform;
      t4 = _this.unitMode;
      if (t4 == null)
        t4 = ref.unitMode;
      t5 = _this.tileMode;
      if (t5 == null)
        t5 = ref.tileMode;
      return new B.RadialGradient(_this.center, _this.radius, _this.focalPoint, _this.id, t1, t2, t5, t4, t3);
    },
    get$hashCode(_) {
      var t2, _this = this,
        t1 = _this.colors;
      t1 = C.Object_hashAll(t1 == null ? C._setArrayType([], type$.JSArray_Color_2) : t1);
      t2 = _this.offsets;
      return C.Object_hash(_this.id, _this.center, _this.radius, t1, C.Object_hashAll(t2 == null ? C._setArrayType([], type$.JSArray_double) : t2), _this.tileMode, _this.transform, _this.focalPoint, _this.unitMode, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.RadialGradient && other.id === _this.id && other.center.$eq(0, _this.center) && other.radius === _this.radius && J.$eq$(other.focalPoint, _this.focalPoint) && B.listEquals1(other.colors, _this.colors, type$.Color_2) && B.listEquals1(other.offsets, _this.offsets, type$.double) && J.$eq$(other.transform, _this.transform) && other.tileMode == _this.tileMode && other.unitMode == _this.unitMode;
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.center.toString$0(0),
        t2 = C.S(_this.colors),
        t3 = C.S(_this.offsets),
        t4 = C.S(_this.tileMode),
        t5 = _this.transform;
      t5 = t5 == null ? "" : "transform: Float64List.fromList(<double>" + C.S(t5.toMatrix4$0()) + ") ,";
      return "RadialGradient(id: '" + _this.id + "', center: " + t1 + ", radius: " + C.S(_this.radius) + ", colors: <Color>" + t2 + ", offsets: <double>" + t3 + ", tileMode: " + t4 + ", " + t5 + "focalPoint: " + C.S(_this.focalPoint) + ", unitMode: " + C.S(_this.unitMode) + ")";
    }
  };
  B.Paint.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.blendMode, this.stroke, this.fill, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.Paint && other.blendMode === this.blendMode && J.$eq$(other.stroke, this.stroke) && J.$eq$(other.fill, this.fill);
    },
    toString$0(_) {
      var t1 = "Paint(blendMode: " + this.blendMode.toString$0(0),
        t2 = this.stroke;
      if (t2 != null)
        t1 += ", stroke: " + t2.toString$0(0);
      t2 = this.fill;
      t1 = (t2 != null ? t1 + (", fill: " + t2.toString$0(0)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B.Stroke.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(A.PaintingStyle_10, _this.color, _this.shader, _this.cap, _this.join, _this.miterLimit, _this.width, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (other instanceof B.Stroke) {
        t1 = other.color;
        t1 = _this.color.value === t1.value && J.$eq$(other.shader, _this.shader) && other.cap == _this.cap && other.join == _this.join && other.miterLimit == _this.miterLimit && other.width == _this.width;
      } else
        t1 = false;
      return t1;
    },
    toString$0(_) {
      var _this = this,
        t1 = "Stroke(color: " + _this.color.toString$0(0),
        t2 = _this.shader;
      if (t2 != null)
        t1 += ", shader: " + t2.toString$0(0);
      t2 = _this.cap;
      if (t2 != null)
        t1 += ", cap: " + t2.toString$0(0);
      t2 = _this.join;
      if (t2 != null)
        t1 += ", join: " + t2.toString$0(0);
      t2 = _this.miterLimit;
      if (t2 != null)
        t1 += ", miterLimit: " + C.S(t2);
      t2 = _this.width;
      t1 = (t2 != null ? t1 + (", width: " + C.S(t2)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B.Fill.prototype = {
    get$hashCode(_) {
      return C.Object_hash(A.PaintingStyle_00, this.color, this.shader, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof B.Fill) {
        t1 = other.color;
        t1 = this.color.value === t1.value && J.$eq$(other.shader, this.shader);
      } else
        t1 = false;
      return t1;
    },
    toString$0(_) {
      var t1 = "Fill(color: " + this.color.toString$0(0),
        t2 = this.shader;
      t1 = (t2 != null ? t1 + (", shader: " + t2.toString$0(0)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B.BlendMode0.prototype = {
    _enumToString$0() {
      return "BlendMode." + this._name;
    }
  };
  B.PaintingStyle0.prototype = {
    _enumToString$0() {
      return "PaintingStyle." + this._name;
    }
  };
  B.StrokeCap0.prototype = {
    _enumToString$0() {
      return "StrokeCap." + this._name;
    }
  };
  B.StrokeJoin0.prototype = {
    _enumToString$0() {
      return "StrokeJoin." + this._name;
    }
  };
  B.TileMode0.prototype = {
    _enumToString$0() {
      return "TileMode." + this._name;
    }
  };
  B.TextPosition0.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.x, _this.y, _this.dx, _this.dy, _this.reset, _this.transform, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.TextPosition0 && other.x == _this.x && other.y == _this.y && other.dx == _this.dx && other.dy == _this.dy && other.reset === _this.reset && J.$eq$(other.transform, _this.transform);
    },
    toString$0(_) {
      var _this = this,
        t1 = "" + ("TextPosition(reset: " + _this.reset),
        t2 = _this.x;
      if (t2 != null)
        t1 += ", x: " + C.S(t2);
      t2 = _this.y;
      if (t2 != null)
        t1 += ", y: " + C.S(t2);
      t2 = _this.dx;
      if (t2 != null)
        t1 += ", dx: " + C.S(t2);
      t2 = _this.dy;
      if (t2 != null)
        t1 += ", dy: " + C.S(t2);
      t2 = _this.transform;
      t1 = (t2 != null ? t1 + (", transform: " + t2.toString$0(0)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B.TextConfig.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.text, _this.xAnchorMultiplier, _this.fontSize, _this.fontFamily, _this.fontWeight, _this.decoration, _this.decorationStyle, _this.decorationColor, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      t1 = false;
      if (other instanceof B.TextConfig)
        if (other.text === _this.text)
          if (other.xAnchorMultiplier === _this.xAnchorMultiplier)
            if (other.fontSize === _this.fontSize)
              if (other.fontFamily == _this.fontFamily)
                if (other.fontWeight === _this.fontWeight) {
                  t2 = other.decoration;
                  if (_this.decoration.mask === t2.mask)
                    if (other.decorationStyle === _this.decorationStyle)
                      t1 = _this.decorationColor.value === other.decorationColor.value;
                }
      return t1;
    },
    toString$0(_) {
      var _this = this;
      return "TextConfig('" + _this.text + "', " + C.S(_this.xAnchorMultiplier) + ", '" + C.S(_this.fontFamily) + "', " + _this.fontWeight.toString$0(0) + ", " + C.S(_this.fontSize) + ", " + _this.decoration.toString$0(0) + ", " + _this.decorationStyle.toString$0(0) + ", " + _this.decorationColor.toString$0(0) + ",)";
    }
  };
  B.FontWeight0.prototype = {
    _enumToString$0() {
      return "FontWeight." + this._name;
    }
  };
  B.TextDecorationStyle0.prototype = {
    _enumToString$0() {
      return "TextDecorationStyle." + this._name;
    }
  };
  B.TextDecoration0.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.TextDecoration0 && other.mask === this.mask;
    },
    get$hashCode(_) {
      return D.JSInt_methods.get$hashCode(this.mask);
    },
    toString$0(_) {
      var values,
        t1 = this.mask;
      if (t1 === 0)
        return "TextDecoration.none";
      values = C._setArrayType([], type$.JSArray_String);
      if ((t1 & 1) !== 0)
        D.JSArray_methods.add$1(values, "underline");
      if ((t1 & 2) !== 0)
        D.JSArray_methods.add$1(values, "overline");
      if ((t1 & 4) !== 0)
        D.JSArray_methods.add$1(values, "lineThrough");
      t1 = values.length;
      if (t1 === 1) {
        if (0 >= t1)
          return C.ioore(values, 0);
        return "TextDecoration." + values[0];
      }
      return "TextDecoration.combine([" + D.JSArray_methods.join$1(values, ", ") + "])";
    }
  };
  B.Node0.prototype = {
    applyAttributes$2$replace(newAttributes, replace) {
      return this;
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  B._EmptyNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitEmptyNode$2(this, $V._as(data));
    }
  };
  B.TransformableNode.prototype = {
    concatTransform$1(currentTransform) {
      var t1 = this.transform;
      if (t1.$eq(0, A.AffineMatrix_qrl))
        return currentTransform;
      return currentTransform.multiplied$1(t1);
    }
  };
  B.AttributedNode.prototype = {};
  B.ViewportNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitViewportNode$2(this, $V._as(data));
    }
  };
  B.ParentNode.prototype = {
    addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(child, clipId, clipResolver, maskId, maskResolver, patternId, patternResolver) {
      var t1, wrappedChild;
      type$.List_Path_Function_String._as(clipResolver);
      t1 = type$.nullable_AttributedNode_Function_String;
      t1._as(maskResolver);
      t1._as(patternResolver);
      wrappedChild = clipId != null ? new B.ClipNode(clipResolver, clipId, child, child.attributes.transform) : child;
      if (maskId != null) {
        t1 = child.attributes;
        wrappedChild = new B.MaskNode(maskId, wrappedChild, t1.blendMode, maskResolver, t1.transform);
      }
      if (patternId != null)
        wrappedChild = new B.PatternNode(patternId, wrappedChild, patternResolver, child.attributes.transform);
      D.JSArray_methods.add$1(this._node$_children, wrappedChild);
    },
    addChild$4$clipResolver$maskResolver$patternResolver(child, clipResolver, maskResolver, patternResolver) {
      return this.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(child, null, clipResolver, null, maskResolver, null, patternResolver);
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = B.ParentNode$(this.attributes.applyParent$1(newAttributes), null, this.transform);
      D.JSArray_methods.addAll$1(t1._node$_children, this._node$_children);
      return t1;
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    createLayerPaint$0() {
      var t4, needsLayer, _null = null,
        t1 = this.attributes,
        t2 = t1.fill,
        t3 = t2 == null,
        fillOpacity = t3 ? _null : t2.opacity;
      t1 = t1.blendMode;
      t4 = t1 == null;
      if (t4)
        needsLayer = fillOpacity != null && fillOpacity !== 1 && fillOpacity !== 0;
      else
        needsLayer = true;
      if (needsLayer) {
        t2 = t3 ? _null : t2.toFill$2(A.Rect_NUV0, this.transform);
        if (t2 == null) {
          t2 = B.Color$fromRGBO0(0, 0, 0, fillOpacity == null ? 1 : fillOpacity);
          t2 = new B.Fill(t2, _null);
        }
        return new B.Paint(t4 ? A.BlendMode_30 : t1, _null, t2);
      }
      return _null;
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitParentNode$2(this, $V._as(data));
    }
  };
  B.TextPositionNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitTextPositionNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = B.TextPositionNode$(this.attributes.applyParent$1(newAttributes), this.reset);
      D.JSArray_methods.addAll$1(t1._node$_children, this._node$_children);
      return t1;
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  B.SaveLayerNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitSaveLayerNode$2(this, $V._as(data));
    }
  };
  B.ClipNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitClipNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this;
      return new B.ClipNode(_this.resolver, _this.clipId, _this.child.applyAttributes$2$replace(newAttributes, replace), _this.transform);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  B.MaskNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitMaskNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this;
      return new B.MaskNode(_this.maskId, _this.child.applyAttributes$2$replace(newAttributes, replace), _this.blendMode, _this.resolver, _this.transform);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  B.PathNode.prototype = {
    computePaint$2(bounds, transform) {
      var fill,
        t1 = this.attributes,
        t2 = t1.stroke,
        stroke = t2 == null ? null : t2.toStroke$2(bounds, transform);
      t2 = t1.fill;
      fill = t2 == null ? null : t2.toFill$3$defaultColor(bounds, transform, A.Color_4278190080);
      if (fill == null && stroke == null)
        return null;
      t1 = t1.blendMode;
      return new B.Paint(t1 == null ? A.BlendMode_30 : t1, stroke, fill);
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = this.attributes;
      t1 = replace ? newAttributes.applyParent$2$transformOverride(t1, this.transform) : t1.applyParent$1(newAttributes);
      return B.PathNode$(this.path, t1);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitPathNode$2(this, $V._as(data));
    }
  };
  B.DeferredNode.prototype = {
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this,
        t1 = _this.attributes;
      t1 = replace ? newAttributes.applyParent$2$transformOverride(t1, _this.transform) : t1.applyParent$1(newAttributes);
      return B.DeferredNode$(t1, _this.refId, _this.resolver);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitDeferredNode$2(this, $V._as(data));
    }
  };
  B.TextNode.prototype = {
    computePaint$2(bounds, transform) {
      var stroke,
        t1 = this.attributes,
        t2 = t1.fill,
        fill = t2 == null ? null : t2.toFill$3$defaultColor(bounds, transform, A.Color_4278190080);
      t2 = t1.stroke;
      stroke = t2 == null ? null : t2.toStroke$2(bounds, transform);
      if (fill == null && stroke == null)
        return null;
      t1 = t1.blendMode;
      return new B.Paint(t1 == null ? A.BlendMode_30 : t1, stroke, fill);
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var t1 = this.attributes,
        resolvedAttributes = replace ? newAttributes.applyParent$2$transformOverride(t1, this.transform) : t1.applyParent$1(newAttributes);
      return B.TextNode$(this.text, resolvedAttributes);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitTextNode$2(this, $V._as(data));
    }
  };
  B.ImageNode.prototype = {
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this,
        t1 = _this.attributes;
      t1 = replace ? newAttributes.applyParent$2$transformOverride(t1, _this.transform) : t1.applyParent$1(newAttributes);
      return B.ImageNode$(_this.data, _this.format, t1);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    },
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitImageNode$2(this, $V._as(data));
    }
  };
  B.PatternNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitPatternNode$2(this, $V._as(data));
    },
    applyAttributes$2$replace(newAttributes, replace) {
      var _this = this;
      return new B.PatternNode(_this.patternId, _this.child.applyAttributes$2$replace(newAttributes, replace), _this.resolver, _this.transform);
    },
    applyAttributes$1(newAttributes) {
      return this.applyAttributes$2$replace(newAttributes, false);
    }
  };
  B._SvgGroupTuple.prototype = {};
  B.SvgParser.prototype = {
    _discardSubtree$0() {
      var t1, t2, _this = this,
        subtreeStartDepth = _this.depth;
      for (t1 = _this._eventIterator; t1.moveNext$0();) {
        t2 = t1._iterator$_current;
        t2.toString;
        if (t2 instanceof B.XmlStartElementEvent && !t2.isSelfClosing)
          ++_this.depth;
        else if (t2 instanceof B.XmlEndElementEvent)
          --_this.depth;
        _this._currentAttributes = A.SvgAttributes_781;
        _this._currentStartElement = null;
        if (_this.depth < subtreeStartDepth)
          return;
      }
    },
    _readSubtree$0() {
      return new C._SyncStarIterable(this._readSubtree$body$SvgParser(), type$._SyncStarIterable_XmlEvent);
    },
    _readSubtree$body$SvgParser() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 2, $async$errorStack = [], t1, t2, t3, t4, t5, color, id, t6, opacity, color0, rawX, rawY, rawDx, rawDy, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, isSelfClosing, subtreeStartDepth;
        return function $async$_readSubtree$0($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                subtreeStartDepth = $async$self.depth;
                t1 = $async$self._eventIterator, t2 = type$.Map_String_String, t3 = $async$self.theme.currentColor;
              case 3:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                t4 = t1._iterator$_current;
                t4.toString;
                if (t4 instanceof B.XmlStartElementEvent) {
                  t5 = t2._as($async$self._createAttributeMap$1(t4.attributes));
                  if (!(t5.$index(0, "display") !== "none" && t5.$index(0, "visibility") !== "hidden")) {
                    if (!t4.isSelfClosing) {
                      ++$async$self.depth;
                      $async$self._discardSubtree$0();
                    }
                    // goto for condition
                    $async$goto = 3;
                    break;
                  }
                  $async$self._currentStartElement = t4;
                  color = $async$self.depth === 0 ? t3 : null;
                  id = t5.$index(0, "id");
                  t6 = B.parseDouble(t5.$index(0, "opacity"), false);
                  opacity = t6 == null ? null : D.JSNumber_methods.clamp$2(t6, 0, 1);
                  color0 = $async$self.parseColor$3$attributeName$id(t5.$index(0, "color"), "color", id);
                  color = color0 == null ? color : color0;
                  rawX = t5.$index(0, "x");
                  rawY = t5.$index(0, "y");
                  rawDx = t5.$index(0, "dx");
                  rawDy = t5.$index(0, "dy");
                  t6 = B.DoubleOrPercentage_fromString(rawX);
                  t7 = B.DoubleOrPercentage_fromString(rawY);
                  t8 = B.DoubleOrPercentage_fromString(rawDx);
                  t9 = B.DoubleOrPercentage_fromString(rawDy);
                  t10 = t5.$index(0, "href");
                  t11 = t5.$index(0, "color");
                  t11 = (t11 == null ? null : t11.toLowerCase()) === "none" ? A.ColorOrNone_true_null : new B.ColorOrNone(false, color);
                  t12 = $async$self._parseStrokeAttributes$4(t5, opacity, color, id);
                  t13 = $async$self._parseFillAttributes$4(t5, opacity, color, id);
                  t14 = B.parseRawFillRule(t5.$index(0, "fill-rule"));
                  t15 = B.parseRawFillRule(t5.$index(0, "clip-rule"));
                  t16 = t5.$index(0, "clip-path");
                  t17 = A.Map_imLTu.$index(0, t5.$index(0, "mix-blend-mode"));
                  t18 = B.parseTransform(t5.$index(0, "transform"));
                  if (t18 == null)
                    t18 = A.AffineMatrix_qrl;
                  $async$self._currentAttributes = new B.SvgAttributes(t5, id, t10, t11, t12, t13, t18, t14, t15, t16, t17, t5.$index(0, "font-family"), $async$self.parseFontWeight$1(t5.$index(0, "font-weight")), $async$self.parseFontSize$1(t5.$index(0, "font-size")), $async$self.parseTextDecoration$1(t5.$index(0, "text-decoration")), $async$self.parseTextDecorationStyle$1(t5.$index(0, "text-decoration-style")), $async$self.parseColor$3$attributeName$id(t5.$index(0, "text-decoration-color"), "text-decoration-color", id), null, null, t6, $async$self.parseTextAnchor$1(t5.$index(0, "text-anchor")), t7, t8, t9);
                  ++$async$self.depth;
                  isSelfClosing = t4.isSelfClosing;
                } else
                  isSelfClosing = false;
                $async$goto = 5;
                return $async$iterator._async$_current = t4, 1;
              case 5:
                // after yield
                if (isSelfClosing || t4 instanceof B.XmlEndElementEvent) {
                  --$async$self.depth;
                  $async$self._currentAttributes = A.SvgAttributes_781;
                  $async$self._currentStartElement = null;
                }
                if ($async$self.depth < subtreeStartDepth) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                // goto for condition
                $async$goto = 3;
                break;
              case 4:
                // after for
              case 1:
                // return
                return 0;
              case 2:
                // rethrow
                return $async$iterator._datum = $async$errorStack.at(-1), 3;
            }
        };
      };
    },
    _appendText$1(text) {
      var t1, prependSpace, t2, t3, t4, _this = this,
        textHasNonWhitespace = D.JSString_methods.trim$0(text) !== "";
      if (_this._currentAttributes.x == null) {
        t1 = _this._lastEndElementEvent;
        t1 = (t1 == null ? null : t1.get$localName(0)) === "tspan" && textHasNonWhitespace;
      } else
        t1 = false;
      prependSpace = t1 || _this._lastTextEndedWithSpace;
      _this._lastTextEndedWithSpace = textHasNonWhitespace && D.JSString_methods.startsWith$2(text, $.$get$_whitespacePattern(), text.length - 1);
      t1 = C.stringReplaceAllUnchecked(text, "\n", "");
      t1 = D.JSString_methods.trim$0(C.stringReplaceAllUnchecked(t1, "\t", " "));
      t2 = $.$get$SvgParser__contiguousSpaceMatcher();
      text = C.stringReplaceAllUnchecked(t1, t2, " ");
      if (text.length === 0)
        return;
      t1 = _this._parentDrawables.get$last(0).drawable;
      t2 = prependSpace ? " " + text : text;
      t3 = _this._definitions;
      t4 = t3.get$getDrawable();
      t1.addChild$4$clipResolver$maskResolver$patternResolver(B.TextNode$(t2, _this._currentAttributes), t3.get$getClipPath(), t4, t4);
    },
    _parseTree$0() {
      var t1, t2, t3, t4, parseFunc, t5, _this = this;
      for (t1 = _this._readSubtree$0(), t2 = t1.$ti, t1 = new C._SyncStarIterator(t1._outerHelper(), t2._eval$1("_SyncStarIterator<1>")), t3 = _this._parentDrawables, t2 = t2._precomputed1; t1.moveNext$0();) {
        t4 = t1._async$_current;
        if (t4 == null)
          t4 = t2._as(t4);
        if (t4 instanceof B.XmlStartElementEvent) {
          if (_this.startElement$1(t4))
            continue;
          parseFunc = A.Map_VVevv.$index(0, t4.name);
          if (parseFunc == null) {
            if (!t4.isSelfClosing)
              _this._discardSubtree$0();
          } else
            parseFunc.call$2(_this, false);
        } else if (t4 instanceof B.XmlEndElementEvent)
          _this.endElement$1(0, t4);
        else {
          if (!t3.get$isEmpty(0))
            t5 = t3.get$last(0).name === "text" || t3.get$last(0).name === "tspan";
          else
            t5 = false;
          if (t5)
            if (t4 instanceof B.XmlCDATAEvent)
              _this._appendText$1(t4.value);
            else if (t4 instanceof B.XmlRawTextEvent)
              _this._appendText$1(t4.get$value(0));
        }
      }
      if (_this._parser$_root == null)
        throw C.wrapException(C.StateError$("Invalid SVG data"));
    },
    attribute$2$def($name, def) {
      var t1 = this._currentAttributes.raw.$index(0, $name);
      return t1 == null ? def : t1;
    },
    attribute$1($name) {
      return this.attribute$2$def($name, null);
    },
    checkForIri$1(drawable) {
      var iri = "url(#" + C.S(this._currentAttributes.id) + ")";
      if (iri !== "url(#)") {
        this._definitions.addDrawable$2(iri, drawable);
        return true;
      }
      return false;
    },
    addGroup$2($event, drawable) {
      var t1 = this._parentDrawables;
      t1._collection$_add$1(0, t1.$ti._precomputed1._as(new B._SvgGroupTuple($event.name, drawable)));
      this.checkForIri$1(drawable);
    },
    addShape$1($event) {
      var $parent, path, drawable, t1, t2, _this = this,
        pathFunc = A.Map_BvFKH.$index(0, $event.name);
      if (pathFunc == null)
        return false;
      $parent = _this._parentDrawables.get$last(0).drawable;
      path = pathFunc.call$1(_this);
      if (path == null)
        return false;
      drawable = B.PathNode$(path, _this._currentAttributes);
      _this.checkForIri$1(drawable);
      t1 = _this._definitions;
      t2 = t1.get$getDrawable();
      $parent.addChild$7$clipId$clipResolver$maskId$maskResolver$patternId$patternResolver(drawable, _this._currentAttributes.clipPathId, t1.get$getClipPath(), _this.attribute$1("mask"), t2, t1.getPattern$1(_this), t2);
      return true;
    },
    startElement$1($event) {
      if ($event.name === "defs")
        if (!$event.isSelfClosing) {
          this.addGroup$2($event, B.ParentNode$(this._currentAttributes, null, null));
          return true;
        }
      return this.addShape$1($event);
    },
    endElement$1(_, $event) {
      var t1 = this._parentDrawables,
        t2 = $event.name;
      while (true) {
        if (t2 === t1.get$last(0).name)
          t1.get$last(0).toString;
        if (!false)
          break;
        t1.removeLast$0(0);
      }
      if (t2 === t1.get$last(0).name)
        t1.removeLast$0(0);
      this._lastEndElementEvent = $event;
      if (t2 === "text")
        this._lastTextEndedWithSpace = false;
    },
    parseFontSize$1(raw) {
      var ret;
      if (raw == null || raw === "")
        return null;
      ret = B.parseDoubleWithUnits(raw, this.theme, true);
      if (ret != null)
        return ret;
      raw = D.JSString_methods.trim$0(raw.toLowerCase());
      ret = $.SvgParser__kTextSizeMap.$index(0, raw);
      if (ret != null)
        return ret;
      throw C.wrapException(C.StateError$("Could not parse font-size: " + raw));
    },
    parseTextDecoration$1(textDecoration) {
      if (textDecoration == null)
        return null;
      switch (textDecoration) {
        case "none":
          return A.TextDecoration_00;
        case "underline":
          return A.TextDecoration_10;
        case "overline":
          return A.TextDecoration_20;
        case "line-through":
          return A.TextDecoration_40;
      }
      throw C.wrapException(C.UnsupportedError$('Attribute value for text-decoration="' + textDecoration + '" is not supported'));
    },
    parseTextDecorationStyle$1(textDecorationStyle) {
      if (textDecorationStyle == null)
        return null;
      switch (textDecorationStyle) {
        case "solid":
          return A.TextDecorationStyle_0;
        case "dashed":
          return A.TextDecorationStyle_3;
        case "dotted":
          return A.TextDecorationStyle_2;
        case "double":
          return A.TextDecorationStyle_1;
        case "wavy":
          return A.TextDecorationStyle_4;
      }
      throw C.wrapException(C.UnsupportedError$('Attribute value for text-decoration-style="' + textDecorationStyle + '" is not supported'));
    },
    parseTextAnchor$1(raw) {
      switch (raw) {
        case "end":
          return 1;
        case "middle":
          return 0.5;
        case "start":
          return 0;
        case "inherit":
        default:
          return null;
      }
    },
    _parseRawWidthHeight$1(raw) {
      var t1;
      if (raw === "100%" || raw === "")
        return 1 / 0;
      t1 = B.parseDoubleWithUnits(raw, this.theme, true);
      return t1 == null ? 1 / 0 : t1;
    },
    _parseViewBox$0() {
      var rawWidth, rawHeight, t1, parts, t2, t3, t4, _this = this,
        viewBox = _this.attribute$1("viewBox");
      if (viewBox == null)
        viewBox = "";
      rawWidth = _this.attribute$1("width");
      if (rawWidth == null)
        rawWidth = "";
      rawHeight = _this.attribute$1("height");
      if (rawHeight == null)
        rawHeight = "";
      t1 = viewBox === "";
      if (t1 && rawWidth === "" && rawHeight === "")
        throw C.wrapException(C.StateError$("SVG did not specify dimensions\n\nThe SVG library looks for a `viewBox` or `width` and `height` attribute to determine the viewport boundary of the SVG.  Note that these attributes, as with all SVG attributes, are case sensitive.\nDuring processing, the following attributes were found:\n  " + _this._currentAttributes.raw.toString$0(0)));
      if (t1)
        return new B._Viewport(_this._parseRawWidthHeight$1(rawWidth), _this._parseRawWidthHeight$1(rawHeight), A.AffineMatrix_qrl);
      parts = D.JSString_methods.split$1(viewBox, C.RegExp_RegExp("[ ,]+", true, false, false, false));
      if (parts.length < 4)
        throw C.wrapException(C.StateError$("viewBox element must be 4 elements long"));
      t1 = B.parseDouble(parts[2], false);
      t1.toString;
      if (3 >= parts.length)
        return C.ioore(parts, 3);
      t2 = B.parseDouble(parts[3], false);
      t2.toString;
      if (0 >= parts.length)
        return C.ioore(parts, 0);
      t3 = B.parseDouble(parts[0], false);
      t3.toString;
      if (1 >= parts.length)
        return C.ioore(parts, 1);
      t4 = B.parseDouble(parts[1], false);
      t4.toString;
      return new B._Viewport(t1, t2, A.AffineMatrix_qrl.translated$2(-t3, -t4));
    },
    parseTileMode$0() {
      switch (this.attribute$1("spreadMethod")) {
        case "pad":
          return A.TileMode_00;
        case "repeat":
          return A.TileMode_10;
        case "reflect":
          return A.TileMode_20;
      }
      return null;
    },
    parseGradientUnitMode$0() {
      switch (this.attribute$1("gradientUnits")) {
        case "userSpaceOnUse":
          return A.GradientUnitMode_1;
        case "objectBoundingBox":
          return A.GradientUnitMode_0;
      }
      return null;
    },
    _parseCap$2(raw, definitionPaint) {
      switch (raw) {
        case "butt":
          return A.StrokeCap_00;
        case "round":
          return A.StrokeCap_10;
        case "square":
          return A.StrokeCap_2;
        default:
          return null;
      }
    },
    _parseJoin$2(raw, definitionPaint) {
      switch (raw) {
        case "miter":
          return A.StrokeJoin_00;
        case "bevel":
          return A.StrokeJoin_2;
        case "round":
          return A.StrokeJoin_10;
        default:
          return null;
      }
    },
    _parseDashArray$1(rawDashArray) {
      var parts, doubles, t1, t2, atLeastOneNonZeroDash, _i, t3;
      if (rawDashArray == null || rawDashArray === "")
        return null;
      else if (rawDashArray === "none")
        return A6.List_empty27;
      parts = J.split$1$s(rawDashArray, C.RegExp_RegExp("[ ,]+", true, false, false, false));
      doubles = C._setArrayType([], type$.JSArray_double);
      for (t1 = parts.length, t2 = this.theme, atLeastOneNonZeroDash = false, _i = 0; _i < parts.length; parts.length === t1 || (0, C.throwConcurrentModificationError)(parts), ++_i) {
        t3 = B.parseDoubleWithUnits(parts[_i], t2, false);
        t3.toString;
        if (t3 !== 0)
          atLeastOneNonZeroDash = true;
        D.JSArray_methods.add$1(doubles, t3);
      }
      if (doubles.length === 0 || !atLeastOneNonZeroDash)
        return null;
      return doubles;
    },
    applyTransformIfNeeded$2(path, parentTransform) {
      var transform = B.parseTransform(this.attribute$1("transform"));
      if (transform != null)
        return path.transformed$1(transform);
      else
        return path;
    },
    parseFontWeight$1(fontWeight) {
      if (fontWeight == null)
        return null;
      switch (fontWeight) {
        case "normal":
          return A.FontWeight_30;
        case "bold":
          return A.FontWeight_60;
        case "100":
          return A.FontWeight_00;
        case "200":
          return A.FontWeight_1;
        case "300":
          return A.FontWeight_2;
        case "400":
          return A.FontWeight_30;
        case "500":
          return A.FontWeight_4;
        case "600":
          return A.FontWeight_50;
        case "700":
          return A.FontWeight_60;
        case "800":
          return A.FontWeight_7;
        case "900":
          return A.FontWeight_8;
      }
      throw C.wrapException(C.StateError$('Invalid "font-weight": ' + fontWeight));
    },
    parseColor$3$attributeName$id(colorString, attributeName, id) {
      var t1, substituteColor, _this = this,
        parsed = _this._parseColor$2$currentColor(colorString, null);
      if (parsed == null || _this._colorMapper == null)
        return parsed;
      t1 = _this._colorMapper;
      if (t1 == null)
        t1 = type$.ColorMapper._as(t1);
      substituteColor = t1.colorMapper.substitute$4(id, _this._currentStartElement.get$localName(0), attributeName, C.Color$(type$.Color_2._as(parsed).value));
      return new B.Color0(substituteColor.get$value(substituteColor));
    },
    _parseColor$2$currentColor(colorString, currentColor) {
      var t1, r, g, b, color, rawColorElements, t2, t3, rgb, t4, values, hue, luminance, alpha, a, namedColor;
      if (colorString == null || colorString.length === 0)
        return null;
      if (colorString === "none")
        return null;
      if (colorString.toLowerCase() === "currentcolor")
        return this.theme.currentColor;
      t1 = colorString.length;
      if (0 >= t1)
        return C.ioore(colorString, 0);
      if (colorString[0] === "#") {
        if (t1 === 4) {
          if (1 >= t1)
            return C.ioore(colorString, 1);
          r = colorString[1];
          if (2 >= t1)
            return C.ioore(colorString, 2);
          g = colorString[2];
          if (3 >= t1)
            return C.ioore(colorString, 3);
          b = colorString[3];
          colorString = "#" + r + r + g + g + b + b;
        }
        t1 = colorString.length;
        if (t1 === 7 || t1 === 9) {
          color = C.int_parse(D.JSString_methods.substring$2(colorString, 1, 7), 16);
          return new B.Color0((color | (t1 === 9 ? C.int_parse(D.JSString_methods.substring$2(colorString, 7, 9), 16) : 255) << 24) >>> 0);
        }
      }
      if (D.JSString_methods.startsWith$1(colorString.toLowerCase(), "rgba")) {
        t1 = type$.MappedListIterable_String_String;
        rawColorElements = C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(colorString, D.JSString_methods.indexOf$1(colorString, "(") + 1, D.JSString_methods.indexOf$1(colorString, ")")).split(","), type$.JSArray_String), type$.String_Function_String._as(new B.SvgParser__parseColor_closure()), t1), true, t1._eval$1("ListIterable.E"));
        t1 = B.parseDouble(D.JSArray_methods.removeLast$0(rawColorElements), false);
        t1.toString;
        t2 = C._arrayInstanceType(rawColorElements);
        t3 = t2._eval$1("MappedListIterable<1,int>");
        rgb = C.List_List$of(new C.MappedListIterable(rawColorElements, t2._eval$1("int(1)")._as(new B.SvgParser__parseColor_closure0()), t3), true, t3._eval$1("ListIterable.E"));
        t3 = rgb.length;
        if (0 >= t3)
          return C.ioore(rgb, 0);
        t2 = rgb[0];
        if (1 >= t3)
          return C.ioore(rgb, 1);
        t4 = rgb[1];
        if (2 >= t3)
          return C.ioore(rgb, 2);
        return B.Color$fromRGBO0(t2, t4, rgb[2], t1);
      }
      if (D.JSString_methods.startsWith$1(colorString.toLowerCase(), "hsl")) {
        t1 = type$.MappedListIterable_String_int;
        values = C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(colorString, D.JSString_methods.indexOf$1(colorString, "(") + 1, D.JSString_methods.indexOf$1(colorString, ")")).split(","), type$.JSArray_String), type$.int_Function_String._as(new B.SvgParser__parseColor_closure1()), t1), true, t1._eval$1("ListIterable.E"));
        t1 = values.length;
        if (0 >= t1)
          return C.ioore(values, 0);
        hue = D.JSNumber_methods.$mod(values[0] / 360, 1);
        if (1 >= t1)
          return C.ioore(values, 1);
        t2 = values[1];
        if (2 >= t1)
          return C.ioore(values, 2);
        luminance = values[2] / 100;
        alpha = t1 > 3 ? values[3] : 255;
        rgb = C._setArrayType([0, 0, 0], type$.JSArray_double);
        if (hue < 0.16666666666666666) {
          D.JSArray_methods.$indexSet(rgb, 0, 1);
          D.JSArray_methods.$indexSet(rgb, 1, hue * 6);
        } else if (hue < 0.3333333333333333) {
          D.JSArray_methods.$indexSet(rgb, 0, 2 - hue * 6);
          D.JSArray_methods.$indexSet(rgb, 1, 1);
        } else if (hue < 0.5) {
          D.JSArray_methods.$indexSet(rgb, 1, 1);
          D.JSArray_methods.$indexSet(rgb, 2, hue * 6 - 2);
        } else if (hue < 0.6666666666666666) {
          D.JSArray_methods.$indexSet(rgb, 1, 4 - hue * 6);
          D.JSArray_methods.$indexSet(rgb, 2, 1);
        } else {
          t1 = hue * 6;
          if (hue < 0.8333333333333334) {
            D.JSArray_methods.$indexSet(rgb, 0, t1 - 4);
            D.JSArray_methods.$indexSet(rgb, 2, 1);
          } else {
            D.JSArray_methods.$indexSet(rgb, 0, 1);
            D.JSArray_methods.$indexSet(rgb, 2, 6 - t1);
          }
        }
        t1 = type$.MappedListIterable_double_double;
        rgb = C.List_List$of(new C.MappedListIterable(rgb, type$.double_Function_double._as(new B.SvgParser__parseColor_closure2(t2 / 100)), t1), true, t1._eval$1("ListIterable.E"));
        t1 = C._arrayInstanceType(rgb);
        t2 = t1._eval$1("double(1)");
        t1 = t1._eval$1("MappedListIterable<1,double>");
        rgb = luminance < 0.5 ? C.List_List$of(new C.MappedListIterable(rgb, t2._as(new B.SvgParser__parseColor_closure3(luminance)), t1), true, t1._eval$1("ListIterable.E")) : C.List_List$of(new C.MappedListIterable(rgb, t2._as(new B.SvgParser__parseColor_closure4(luminance)), t1), true, t1._eval$1("ListIterable.E"));
        t1 = C._arrayInstanceType(rgb);
        t2 = t1._eval$1("MappedListIterable<1,double>");
        rgb = C.List_List$of(new C.MappedListIterable(rgb, t1._eval$1("double(1)")._as(new B.SvgParser__parseColor_closure5()), t2), true, t2._eval$1("ListIterable.E"));
        t2 = rgb.length;
        if (0 >= t2)
          return C.ioore(rgb, 0);
        t1 = D.JSNumber_methods.round$0(rgb[0]);
        if (1 >= t2)
          return C.ioore(rgb, 1);
        t3 = D.JSNumber_methods.round$0(rgb[1]);
        if (2 >= t2)
          return C.ioore(rgb, 2);
        return B.Color$fromARGB0(alpha, t1, t3, D.JSNumber_methods.round$0(rgb[2]));
      }
      if (D.JSString_methods.startsWith$1(colorString.toLowerCase(), "rgb")) {
        t1 = type$.MappedListIterable_String_int;
        rgb = C.List_List$of(new C.MappedListIterable(C._setArrayType(D.JSString_methods.substring$2(colorString, D.JSString_methods.indexOf$1(colorString, "(") + 1, D.JSString_methods.indexOf$1(colorString, ")")).split(","), type$.JSArray_String), type$.int_Function_String._as(new B.SvgParser__parseColor_closure6()), t1), true, t1._eval$1("ListIterable.E"));
        t1 = rgb.length;
        a = t1 > 3 ? rgb[3] : 255;
        if (0 >= t1)
          return C.ioore(rgb, 0);
        t2 = rgb[0];
        if (1 >= t1)
          return C.ioore(rgb, 1);
        t3 = rgb[1];
        if (2 >= t1)
          return C.ioore(rgb, 2);
        return B.Color$fromARGB0(a, t2, t3, rgb[2]);
      }
      namedColor = A.Map_Ymznx.$index(0, colorString);
      if (namedColor != null)
        return namedColor;
      return null;
    },
    _createAttributeMap$1(attributes) {
      var t2, value, index, t3, _i, style, styleParts, attributeValue,
        t1 = type$.String,
        attributeMap = C.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t1 = J.get$iterator$ax(type$.List_XmlEventAttribute._as(attributes)); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        value = D.JSString_methods.trim$0(t2.value);
        t2 = t2.name;
        index = D.JSString_methods.indexOf$1(t2, ":");
        t3 = index > 0;
        if ((t3 ? D.JSString_methods.substring$1(t2, index + 1) : t2) === "style")
          for (t2 = value.split(";"), t3 = t2.length, _i = 0; _i < t3; ++_i) {
            style = t2[_i];
            if (style.length === 0)
              continue;
            styleParts = style.split(":");
            if (1 >= styleParts.length)
              return C.ioore(styleParts, 1);
            attributeValue = D.JSString_methods.trim$0(styleParts[1]);
            if (attributeValue === "inherit")
              continue;
            attributeMap.$indexSet(0, D.JSString_methods.trim$0(styleParts[0]), attributeValue);
          }
        else if (value !== "inherit")
          attributeMap.$indexSet(0, t3 ? D.JSString_methods.substring$1(t2, index + 1) : t2, value);
      }
      return attributeMap;
    },
    _parseStrokeAttributes$4(attributeMap, uniformOpacity, currentColor, id) {
      var rawStroke, rawStrokeOpacity, t1, opacity, rawStrokeCap, rawLineJoin, rawMiterLimit, rawStrokeWidth, rawStrokeDashArray, rawStrokeDashOffset, t2, anyStrokeAttribute, hasPattern, shaderId, strokeColor, t3, _this = this, _null = null;
      type$.Map_String_String._as(attributeMap);
      rawStroke = attributeMap.$index(0, "stroke");
      rawStrokeOpacity = attributeMap.$index(0, "stroke-opacity");
      if (rawStrokeOpacity != null) {
        t1 = B.parseDouble(rawStrokeOpacity, false);
        t1.toString;
        opacity = D.JSNumber_methods.clamp$2(t1, 0, 1);
      } else
        opacity = _null;
      if (uniformOpacity != null)
        opacity = opacity == null ? uniformOpacity : opacity * uniformOpacity;
      rawStrokeCap = attributeMap.$index(0, "stroke-linecap");
      rawLineJoin = attributeMap.$index(0, "stroke-linejoin");
      rawMiterLimit = attributeMap.$index(0, "stroke-miterlimit");
      rawStrokeWidth = attributeMap.$index(0, "stroke-width");
      rawStrokeDashArray = attributeMap.$index(0, "stroke-dasharray");
      rawStrokeDashOffset = attributeMap.$index(0, "stroke-dashoffset");
      t1 = rawStroke == null;
      t2 = t1 ? rawStrokeCap : rawStroke;
      if (t2 == null)
        t2 = rawLineJoin;
      if (t2 == null)
        t2 = rawMiterLimit;
      if (t2 == null)
        t2 = rawStrokeWidth;
      anyStrokeAttribute = t2 == null ? rawStrokeDashArray : t2;
      if ((anyStrokeAttribute == null ? rawStrokeDashOffset : anyStrokeAttribute) == null)
        return _null;
      t1 = t1 ? _null : D.JSString_methods.startsWith$1(rawStroke, "url");
      if (t1 === true) {
        hasPattern = _this.patternIds.contains$1(0, rawStroke) ? true : _null;
        shaderId = rawStroke;
        strokeColor = A.Color_4294967295;
      } else {
        strokeColor = _this.parseColor$3$attributeName$id(rawStroke, "stroke", id);
        hasPattern = _null;
        shaderId = hasPattern;
      }
      t1 = rawStroke === "none" ? A.ColorOrNone_true_null : new B.ColorOrNone(false, strokeColor);
      t2 = _this._parseCap$2(rawStrokeCap, _null);
      t3 = _this.theme;
      return new B.SvgStrokeAttributes(_this._definitions, t1, shaderId, _this._parseJoin$2(rawLineJoin, _null), t2, B.parseDouble(rawMiterLimit, false), B.parseDoubleWithUnits(rawStrokeWidth, t3, true), _this._parseDashArray$1(rawStrokeDashArray), B.parseDoubleWithUnits(rawStrokeDashOffset, t3, false), hasPattern, opacity);
    },
    _parseFillAttributes$4(attributeMap, uniformOpacity, currentColor, id) {
      var rawFill, rawFillOpacity, t1, opacity, hasPattern, fillColor, _this = this, _null = null;
      type$.Map_String_String._as(attributeMap);
      rawFill = attributeMap.$index(0, "fill");
      if (rawFill == null)
        rawFill = "";
      rawFillOpacity = attributeMap.$index(0, "fill-opacity");
      if (rawFillOpacity != null) {
        t1 = B.parseDouble(rawFillOpacity, false);
        t1.toString;
        opacity = D.JSNumber_methods.clamp$2(t1, 0, 1);
      } else
        opacity = _null;
      if (uniformOpacity != null)
        opacity = opacity == null ? uniformOpacity : opacity * uniformOpacity;
      if (D.JSString_methods.startsWith$1(rawFill, "url")) {
        hasPattern = _this.patternIds.contains$1(0, rawFill) ? true : _null;
        return new B.SvgFillAttributes(_this._definitions, A.ColorOrNone_false_Color_4294967295, opacity, rawFill, hasPattern);
      }
      fillColor = _this.parseColor$3$attributeName$id(rawFill, "fill", id);
      t1 = fillColor == null ? _null : fillColor.value >>> 24;
      if ((t1 == null ? 255 : t1) !== 255) {
        t1 = fillColor.value;
        opacity = (t1 >>> 24) / 255;
        fillColor = B.Color$fromRGBO0(t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255, 1);
      }
      t1 = rawFill === "none" ? A.ColorOrNone_true_null : new B.ColorOrNone(false, fillColor);
      return new B.SvgFillAttributes(_this._definitions, t1, opacity, _null, _null);
    }
  };
  B._Resolver.prototype = {
    getDrawable$1(ref) {
      return this._drawables.$index(0, ref);
    },
    getClipPath$1(ref) {
      var pathBuilders, t1 = {},
        nodes = this._clips.$index(0, ref);
      if (nodes == null)
        return C._setArrayType([], type$.JSArray_Path);
      pathBuilders = C._setArrayType([], type$.JSArray_PathBuilder);
      t1.currentPath = null;
      J.forEach$1$ax(nodes, new B._Resolver_getClipPath_extractPathsFromNode(t1, pathBuilders));
      t1 = type$.MappedListIterable_PathBuilder_Path;
      return C.List_List$of(new C.MappedListIterable(pathBuilders, type$.Path_Function_PathBuilder._as(new B._Resolver_getClipPath_closure()), t1), false, t1._eval$1("ListIterable.E"));
    },
    getPattern$1(parserState) {
      var fill, stroke;
      if (parserState.attribute$1("fill") != null) {
        fill = parserState.attribute$1("fill");
        fill.toString;
        if (D.JSString_methods.startsWith$1(fill, "url") && parserState.patternIds.contains$1(0, fill))
          return fill;
      }
      if (parserState.attribute$1("stroke") != null) {
        stroke = parserState.attribute$1("stroke");
        stroke.toString;
        if (D.JSString_methods.startsWith$1(stroke, "url") && parserState.patternIds.contains$1(0, stroke))
          return stroke;
      }
      return null;
    },
    addDeferredGradient$2(ref, gradient) {
      J.add$1$ax(this._deferredShaders.putIfAbsent$2(0, ref, new B._Resolver_addDeferredGradient_closure()), gradient);
    },
    addGradient$2(gradient, href) {
      var gradientRef, t3,
        t1 = this._parser$_shaders,
        t2 = gradient.id;
      if (t1.containsKey$1(0, t2))
        return;
      t1.$indexSet(0, t2, gradient);
      if (href != null) {
        href = "url(" + href + ")";
        gradientRef = t1.$index(0, href);
        if (gradientRef != null)
          t1.$indexSet(0, t2, gradient.applyProperties$1(gradientRef));
        else
          this.addDeferredGradient$2(href, gradient);
      } else {
        t2 = this._deferredShaders.remove$1(0, t2);
        t2 = J.get$iterator$ax(t2 == null ? C._setArrayType([], type$.JSArray_Gradient) : t2);
        for (; t2.moveNext$0();) {
          t3 = t2.get$current(t2);
          t1.$indexSet(0, t3.id, t3.applyProperties$1(gradient));
        }
      }
    },
    addClipPath$2(ref, pathNodes) {
      this._clips.putIfAbsent$2(0, ref, new B._Resolver_addClipPath_closure(type$.List_Node._as(pathNodes)));
    },
    addDrawable$2(ref, drawable) {
      this._drawables.putIfAbsent$2(0, ref, new B._Resolver_addDrawable_closure(drawable));
    }
  };
  B._Viewport.prototype = {};
  B.SvgAttributes.prototype = {
    get$heritable() {
      var t1 = this.raw;
      t1 = t1.get$entries(t1);
      return t1.where$1(t1, new B.SvgAttributes_heritable_closure());
    },
    applyParent$2$transformOverride($parent, transformOverride) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, _this = this, _null = null,
        t1 = type$.String;
      t1 = C.LinkedHashMap_LinkedHashMap$of(C.Map_Map$fromEntries($parent.get$heritable(), t1, t1), t1, t1);
      t1.addAll$1(0, _this.raw);
      t2 = t1.$index(0, "id");
      t3 = t1.$index(0, "href");
      t4 = transformOverride == null ? _this.transform : transformOverride;
      t5 = _this.color._applyParent$1($parent.color);
      t6 = _this.stroke;
      if (t6 == null)
        t6 = _null;
      else {
        t7 = $parent.stroke;
        t8 = t6._definitions;
        t9 = t6.color;
        t10 = t7 == null;
        t9 = t9._applyParent$1(t10 ? _null : t7.color);
        t11 = t6.shaderId;
        if (t11 == null)
          t11 = t10 ? _null : t7.shaderId;
        t12 = t6.join;
        if (t12 == null)
          t12 = t10 ? _null : t7.join;
        t13 = t6.cap;
        if (t13 == null)
          t13 = t10 ? _null : t7.cap;
        t14 = t6.miterLimit;
        if (t14 == null)
          t14 = t10 ? _null : t7.miterLimit;
        t15 = t6.width;
        if (t15 == null)
          t15 = t10 ? _null : t7.width;
        t16 = t6.dashArray;
        if (t16 == null)
          t16 = t10 ? _null : t7.dashArray;
        t17 = t6.dashOffset;
        if (t17 == null)
          t17 = t10 ? _null : t7.dashOffset;
        t18 = t6.hasPattern;
        if (t18 == null)
          t18 = t10 ? _null : t7.hasPattern;
        t6 = t6.opacity;
        if (t6 == null)
          t6 = t10 ? _null : t7.opacity;
        t6 = new B.SvgStrokeAttributes(t8, t9, t11, t12, t13, t14, t15, t16, t17, t18, t6);
      }
      if (t6 == null)
        t6 = $parent.stroke;
      t7 = _this.fill;
      if (t7 == null)
        t7 = _null;
      else {
        t8 = $parent.fill;
        t9 = t7._definitions;
        t10 = t7.color;
        t11 = t8 == null;
        t10 = t10._applyParent$1(t11 ? _null : t8.color);
        t12 = t7.shaderId;
        if (t12 == null)
          t12 = t11 ? _null : t8.shaderId;
        t13 = t7.hasPattern;
        if (t13 == null)
          t13 = t11 ? _null : t8.hasPattern;
        t7 = t7.opacity;
        if (t7 == null)
          t7 = t11 ? _null : t8.opacity;
        t13 = new B.SvgFillAttributes(t9, t10, t7, t12, t13);
        t7 = t13;
      }
      if (t7 == null)
        t7 = $parent.fill;
      t8 = _this.fillRule;
      if (t8 == null)
        t8 = $parent.fillRule;
      t9 = _this.clipRule;
      if (t9 == null)
        t9 = $parent.clipRule;
      t10 = _this.clipPathId;
      if (t10 == null)
        t10 = $parent.clipPathId;
      t11 = _this.blendMode;
      if (t11 == null)
        t11 = $parent.blendMode;
      t12 = _this.fontFamily;
      if (t12 == null)
        t12 = $parent.fontFamily;
      t13 = _this.fontWeight;
      if (t13 == null)
        t13 = $parent.fontWeight;
      t14 = _this.fontSize;
      if (t14 == null)
        t14 = $parent.fontSize;
      t15 = _this.textDecoration;
      if (t15 == null)
        t15 = $parent.textDecoration;
      t16 = _this.textDecorationStyle;
      if (t16 == null)
        t16 = $parent.textDecorationStyle;
      t17 = _this.textDecorationColor;
      if (t17 == null)
        t17 = $parent.textDecorationColor;
      t18 = _this.textAnchorMultiplier;
      if (t18 == null)
        t18 = $parent.textAnchorMultiplier;
      t19 = _this.height;
      if (t19 == null)
        t19 = $parent.height;
      t20 = _this.width;
      if (t20 == null)
        t20 = $parent.width;
      return B.SvgAttributes$_(t11, t10, t9, t5, _this.dx, _this.dy, t7, t8, t12, t14, t13, t19, t3, t2, t1, t6, t18, t15, t17, t16, t4, t20, _this.x, _this.y);
    },
    applyParent$1($parent) {
      return this.applyParent$2$transformOverride($parent, null);
    }
  };
  B.DoubleOrPercentage.prototype = {
    calculate$1(bound) {
      if (this._isPercentage)
        return this._parser$_value * bound;
      return this._parser$_value;
    },
    get$hashCode(_) {
      return C.Object_hash(this._parser$_value, this._isPercentage, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.DoubleOrPercentage && other._isPercentage === this._isPercentage && other._parser$_value === this._parser$_value;
    }
  };
  B.SvgStrokeAttributes.prototype = {
    toStroke$2(shaderBounds, transform) {
      var t2, t3, shader, _this = this, _null = null,
        t1 = _this.color;
      if (!t1.isNone)
        t2 = t1.color == null && _this.hasPattern == null && _this.shaderId == null || _this.width === 0;
      else
        t2 = true;
      if (t2)
        return _null;
      if (_this.hasPattern === true)
        return new B.Stroke(A.Color_4278190080, _null, _this.cap, _this.join, _this.miterLimit, _this.width);
      t2 = _this.shaderId;
      if (t2 != null) {
        t3 = type$.Gradient;
        C.checkTypeBound(t3, t3, "T", "getGradient");
        t2 = type$.nullable_Gradient._as(_this._definitions._parser$_shaders.$index(0, t2));
        shader = t2 == null ? _null : t2.applyBounds$2(shaderBounds, transform);
        if (shader == null)
          return _null;
      } else
        shader = _null;
      t2 = _this.opacity;
      t1 = t1.color;
      if (!(t2 == null)) {
        t1 = t1.value;
        t2 = B.Color$fromRGBO0(t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255, t2);
        t1 = t2;
      }
      t2 = transform.scaleStrokeWidth$1(_this.width);
      if (t1 == null)
        t1 = A.Color_4278190080;
      return new B.Stroke(t1, shader, _this.cap, _this.join, _this.miterLimit, t2);
    }
  };
  B.SvgFillAttributes.prototype = {
    toFill$3$defaultColor(shaderBounds, transform, defaultColor) {
      var resolvedColor, t2, shader, _this = this, _null = null,
        t1 = _this.color;
      if (t1.isNone)
        return _null;
      t1 = t1.color;
      if (t1 == null)
        resolvedColor = _null;
      else {
        t2 = _this.opacity;
        if (t2 == null)
          t2 = 1;
        t1 = t1.value;
        t2 = B.Color$fromRGBO0(t1 >>> 16 & 255, t1 >>> 8 & 255, t1 & 255, t2);
        resolvedColor = t2;
      }
      if (resolvedColor == null)
        if (defaultColor == null)
          resolvedColor = _null;
        else {
          t1 = _this.opacity;
          if (t1 == null)
            t1 = 1;
          t2 = defaultColor.value;
          t1 = B.Color$fromRGBO0(t2 >>> 16 & 255, t2 >>> 8 & 255, t2 & 255, t1);
          resolvedColor = t1;
        }
      if (resolvedColor == null)
        return _null;
      if (_this.hasPattern === true)
        return new B.Fill(resolvedColor, _null);
      t1 = _this.shaderId;
      if (t1 != null) {
        t2 = type$.Gradient;
        C.checkTypeBound(t2, t2, "T", "getGradient");
        t1 = type$.nullable_Gradient._as(_this._definitions._parser$_shaders.$index(0, t1));
        shader = t1 == null ? _null : t1.applyBounds$2(shaderBounds, transform);
        if (shader == null)
          return _null;
      } else
        shader = _null;
      return new B.Fill(resolvedColor, shader);
    },
    toFill$2(shaderBounds, transform) {
      return this.toFill$3$defaultColor(shaderBounds, transform, null);
    },
    toString$0(_) {
      var _this = this;
      return "SvgFillAttributes(definitions: " + _this._definitions.toString$0(0) + ", color: " + _this.color.toString$0(0) + ", shaderId: " + C.S(_this.shaderId) + ", hasPattern: " + C.S(_this.hasPattern) + ", oapctiy: " + C.S(_this.opacity) + ")";
    }
  };
  B.ColorOrNone.prototype = {
    _applyParent$1($parent) {
      var t1, _this = this;
      if ($parent == null || _this.isNone)
        return _this;
      if ($parent.isNone && _this.color == null)
        return A.ColorOrNone_true_null;
      t1 = _this.color;
      return new B.ColorOrNone(false, t1 == null ? $parent.color : t1);
    },
    toString$0(_) {
      var t1;
      if (this.isNone)
        t1 = '"none"';
      else {
        t1 = this.color;
        t1 = t1 == null ? null : t1.toString$0(0);
        if (t1 == null)
          t1 = "null";
      }
      return t1;
    }
  };
  B.ResolvingVisitor.prototype = {
    visitClipNode$2(clipNode, data) {
      var childTransform, t2, t3,
        t1 = type$.AffineMatrix;
      t1._as(data);
      childTransform = clipNode.concatTransform$1(data);
      t2 = C._setArrayType([], type$.JSArray_Path);
      for (t3 = J.get$iterator$ax(clipNode.resolver.call$1(clipNode.clipId)); t3.moveNext$0();)
        t2.push(t3.get$current(t3).transformed$1(childTransform));
      if (t2.length === 0)
        return clipNode.child.accept$2$2(0, this, data, type$.Node, t1);
      return new B.ResolvedClipNode(t2, clipNode.child.accept$2$2(0, this, data, type$.Node, t1));
    },
    visitMaskNode$2(maskNode, data) {
      var resolvedMask, t2, child,
        t1 = type$.AffineMatrix;
      t1._as(data);
      resolvedMask = maskNode.resolver.call$1(maskNode.maskId);
      if (resolvedMask == null)
        return maskNode.child.accept$2$2(0, this, data, type$.Node, t1);
      t2 = type$.Node;
      child = maskNode.child.accept$2$2(0, this, data, t2, t1);
      return new B.ResolvedMaskNode(resolvedMask.accept$2$2(0, this, maskNode.concatTransform$1(data), t2, t1), child, maskNode.blendMode);
    },
    visitParentNode$2(parentNode, data) {
      var t3, t4, t5, t6, _i, result, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, child, t29, _null = null,
        t1 = type$.AffineMatrix,
        nextTransform = parentNode.concatTransform$1(t1._as(data)),
        saveLayerPaint = parentNode.createLayerPaint$0(),
        t2 = type$.JSArray_Node;
      if (saveLayerPaint == null) {
        t2 = C._setArrayType([], t2);
        for (t3 = parentNode._node$_children, t4 = t3.length, t5 = parentNode.attributes, t6 = type$.Node, _i = 0; _i < t3.length; t3.length === t4 || (0, C.throwConcurrentModificationError)(t3), ++_i)
          t2.push(t3[_i].applyAttributes$1(t5).accept$2$2(0, this, nextTransform, t6, t1));
        result = B.ParentNode$(A.SvgAttributes_781, t2, A.AffineMatrix_qrl);
      } else {
        t2 = C._setArrayType([], t2);
        for (t3 = parentNode._node$_children, t4 = t3.length, t5 = type$.Node, t6 = parentNode.attributes, t7 = t6.raw, t8 = t6.id, t9 = t6.href, t10 = t6.transform, t11 = t6.color, t12 = t6.stroke, t13 = t6.fillRule, t14 = t6.clipRule, t15 = t6.clipPathId, t16 = t6.blendMode, t17 = t6.fontFamily, t18 = t6.fontWeight, t19 = t6.fontSize, t20 = t6.textDecoration, t21 = t6.textDecorationStyle, t22 = t6.textDecorationColor, t23 = t6.x, t24 = t6.textAnchorMultiplier, t25 = t6.y, t26 = t6.width, t27 = t6.height, t6 = t6.fill, t28 = t12 == null, _i = 0; _i < t3.length; t3.length === t4 || (0, C.throwConcurrentModificationError)(t3), ++_i) {
          child = t3[_i];
          t29 = t28 ? _null : new B.SvgStrokeAttributes(t12._definitions, t12.color, t12.shaderId, t12.join, t12.cap, t12.miterLimit, t12.width, t12.dashArray, t12.dashOffset, t12.hasPattern, _null);
          t2.push(child.applyAttributes$1(new B.SvgAttributes(t7, t8, t9, t11, t29, t6 == null ? _null : new B.SvgFillAttributes(t6._definitions, t6.color, _null, t6.shaderId, t6.hasPattern), t10, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t26, t27, t23, t24, t25, _null, _null)).accept$2$2(0, this, nextTransform, t5, t1));
        }
        result = B.SaveLayerNode$(A.SvgAttributes_781, t2, saveLayerPaint);
      }
      return result;
    },
    visitPathNode$2(pathNode, data) {
      var children, $parent, _null = null,
        t1 = pathNode.attributes,
        transform = type$.AffineMatrix._as(data).multiplied$1(t1.transform),
        t2 = pathNode.path,
        t3 = t2.transformed$1(transform),
        t4 = t1.fillRule,
        transformedPath = t3.withFillType$1(t4 == null ? t2.fillType : t4),
        originalBounds = t2.bounds$0(0),
        newBounds = transformedPath.bounds$0(0),
        paint = pathNode.computePaint$2(originalBounds, transform);
      if (paint != null) {
        t2 = t1.stroke;
        if ((t2 == null ? _null : t2.dashArray) != null) {
          children = C._setArrayType([], type$.JSArray_Node);
          $parent = B.ParentNode$(t1, children, _null);
          t1 = paint.fill;
          if (t1 != null) {
            t3 = paint.blendMode;
            D.JSArray_methods.add$1(children, new B.ResolvedPathNode(new B.Paint(t3, _null, t1), newBounds, transformedPath));
          }
          t1 = paint.stroke;
          if (t1 != null) {
            t3 = paint.blendMode;
            t2 = t2.dashArray;
            t2.toString;
            D.JSArray_methods.add$1(children, new B.ResolvedPathNode(new B.Paint(t3, t1, _null), newBounds, transformedPath.dashed$1(t2)));
          }
          return $parent;
        }
        return new B.ResolvedPathNode(paint, newBounds, transformedPath);
      }
      return A.C__EmptyNode;
    },
    visitTextPositionNode$2(textPositionNode, data) {
      var nextTransform, t2, computedTransform, t3, t4, x, y, dx, dy, hasXY, hasDxDy, consumeTransform, baseline, t5, t6, t7, _i, _null = null,
        t1 = type$.AffineMatrix;
      t1._as(data);
      nextTransform = textPositionNode.concatTransform$1(data);
      t2 = this.__ResolvingVisitor__bounds_A;
      t2 === $ && C.throwLateFieldNI("_bounds");
      computedTransform = textPositionNode.concatTransform$1(data);
      t3 = textPositionNode.attributes;
      t4 = t3.x;
      x = t4 == null ? _null : t4.calculate$1(t2.right - t2.left);
      t4 = t3.y;
      y = t4 == null ? _null : t4.calculate$1(t2.bottom - t2.top);
      t4 = t3.dx;
      dx = t4 == null ? _null : t4.calculate$1(t2.right - t2.left);
      t4 = t3.dy;
      dy = t4 == null ? _null : t4.calculate$1(t2.bottom - t2.top);
      hasXY = x != null && y != null;
      hasDxDy = dx != null && dy != null;
      if (!computedTransform.$eq(0, A.AffineMatrix_qrl))
        if (computedTransform.get$encodableInRect()) {
          t2 = hasXY || hasDxDy;
          consumeTransform = t2;
        } else
          consumeTransform = false;
      else
        consumeTransform = true;
      if (hasXY) {
        baseline = consumeTransform ? computedTransform.transformPoint$1(0, new B.Point(x, y)) : new B.Point(x, y);
        x = baseline.x;
        y = baseline.y;
      }
      if (hasDxDy) {
        baseline = consumeTransform ? computedTransform.transformPoint$1(0, new B.Point(dx, dy)) : new B.Point(dx, dy);
        dx = baseline.x;
        dy = baseline.y;
      }
      t2 = consumeTransform ? _null : computedTransform;
      t4 = C._setArrayType([], type$.JSArray_Node);
      for (t5 = textPositionNode._node$_children, t6 = t5.length, t7 = type$.Node, _i = 0; _i < t5.length; t5.length === t6 || (0, C.throwConcurrentModificationError)(t5), ++_i)
        t4.push(t5[_i].applyAttributes$1(t3).accept$2$2(0, this, nextTransform, t7, t1));
      return new B.ResolvedTextPositionNode(new B.TextPosition0(x, dx, y, dy, textPositionNode.reset, t2), t4);
    },
    visitTextNode$2(textNode, data) {
      var t1, paint, t2, t3, t4, t5, t6, t7, t8;
      type$.AffineMatrix._as(data);
      t1 = this.__ResolvingVisitor__bounds_A;
      t1 === $ && C.throwLateFieldNI("_bounds");
      paint = textNode.computePaint$2(t1, data);
      t1 = textNode.text;
      t2 = textNode.attributes;
      t3 = t2.textAnchorMultiplier;
      if (t3 == null)
        t3 = 0;
      t4 = t2.fontWeight;
      if (t4 == null)
        t4 = A.FontWeight_30;
      t5 = t2.fontSize;
      if (t5 == null)
        t5 = 16;
      t6 = t2.textDecoration;
      if (t6 == null)
        t6 = A.TextDecoration_00;
      t7 = t2.textDecorationStyle;
      if (t7 == null)
        t7 = A.TextDecorationStyle_0;
      t8 = t2.textDecorationColor;
      if (t8 == null)
        t8 = A.Color_4278190080;
      if (paint != null && D.JSString_methods.trim$0(t1).length !== 0)
        return new B.ResolvedTextNode(new B.TextConfig(t1, t3, t5, t2.fontFamily, t4, t6, t7, t8), paint);
      return A.C__EmptyNode;
    },
    visitViewportNode$2(viewportNode, data) {
      var t2, t3, transform, t4, t5, t6, t7, t8, _i,
        t1 = type$.AffineMatrix;
      t1._as(data);
      t2 = viewportNode.width;
      t3 = viewportNode.height;
      this.__ResolvingVisitor__bounds_A = new B.Rect0(0, 0, 0 + t2, 0 + t3);
      transform = viewportNode.concatTransform$1(data);
      t4 = C._setArrayType([], type$.JSArray_Node);
      for (t5 = viewportNode._node$_children, t6 = t5.length, t7 = viewportNode.attributes, t8 = type$.Node, _i = 0; _i < t5.length; t5.length === t6 || (0, C.throwConcurrentModificationError)(t5), ++_i)
        t4.push(t5[_i].applyAttributes$1(t7).accept$2$2(0, this, transform, t8, t1));
      return B.ViewportNode$(A.SvgAttributes_781, t4, t3, A.AffineMatrix_qrl, t2);
    },
    visitDeferredNode$2(deferredNode, data) {
      var resolvedNode,
        t1 = type$.AffineMatrix;
      t1._as(data);
      resolvedNode = deferredNode.resolver.call$1(deferredNode.refId);
      if (resolvedNode == null)
        return A.C__EmptyNode;
      return resolvedNode.applyAttributes$2$replace(deferredNode.attributes, true).accept$2$2(0, this, data, type$.Node, t1);
    },
    visitEmptyNode$2(node, data) {
      type$.AffineMatrix._as(data);
      return node;
    },
    visitResolvedText$2(textNode, data) {
      type$.AffineMatrix._as(data);
      return textNode;
    },
    visitResolvedTextPositionNode$2(textPositionNode, data) {
      type$.AffineMatrix._as(data);
      return textPositionNode;
    },
    visitResolvedPath$2(pathNode, data) {
      type$.AffineMatrix._as(data);
      return pathNode;
    },
    visitResolvedClipNode$2(clipNode, data) {
      type$.AffineMatrix._as(data);
      return clipNode;
    },
    visitResolvedMaskNode$2(maskNode, data) {
      type$.AffineMatrix._as(data);
      return maskNode;
    },
    visitSaveLayerNode$2(layerNode, data) {
      type$.AffineMatrix._as(data);
      return layerNode;
    },
    visitImageNode$2(imageNode, data) {
      var $top, width, height, rect,
        childTransform = imageNode.concatTransform$1(type$.AffineMatrix._as(data)),
        t1 = imageNode.attributes.raw,
        t2 = t1.$index(0, "x"),
        left = C.double_parse(t2 == null ? "0" : t2);
      t2 = t1.$index(0, "y");
      $top = C.double_parse(t2 == null ? "0" : t2);
      t2 = t1.$index(0, "width");
      width = C.Primitives_parseDouble(t2 == null ? "" : t2);
      t1 = t1.$index(0, "height");
      height = C.Primitives_parseDouble(t1 == null ? "" : t1);
      t1 = width == null;
      if (t1 || height == null) {
        data = B.ImageSizeData_ImageSizeData$fromBytes(imageNode.data);
        if (t1)
          width = data.width;
        if (height == null)
          height = data.height;
      }
      rect = new B.Rect0(left, $top, left + width, $top + height);
      if (childTransform.get$encodableInRect())
        return new B.ResolvedImageNode(imageNode.data, imageNode.format, B._transformRect(childTransform.toMatrix4$0(), rect), null);
      return new B.ResolvedImageNode(imageNode.data, imageNode.format, rect, childTransform);
    },
    visitResolvedImageNode$2(resolvedImageNode, data) {
      type$.AffineMatrix._as(data);
      return resolvedImageNode;
    },
    visitPatternNode$2(patternNode, data) {
      var t2, resolvedPattern, t3, child, pattern, t4, t5,
        t1 = type$.AffineMatrix;
      t1._as(data);
      t2 = patternNode.patternId;
      resolvedPattern = patternNode.resolver.call$1(t2);
      if (resolvedPattern == null)
        return patternNode.child.accept$2$2(0, this, data, type$.Node, t1);
      t3 = type$.Node;
      child = patternNode.child.accept$2$2(0, this, data, t3, t1);
      pattern = resolvedPattern.accept$2$2(0, this, patternNode.concatTransform$1(data), t3, t1);
      t1 = resolvedPattern.attributes;
      t3 = t1.x;
      t3 = t3 == null ? null : t3.calculate$1(0);
      if (t3 == null)
        t3 = 0;
      t4 = t1.y;
      t4 = t4 == null ? null : t4.calculate$1(0);
      if (t4 == null)
        t4 = 0;
      t5 = t1.width;
      t5.toString;
      t1 = t1.height;
      t1.toString;
      return new B.ResolvedPatternNode(child, pattern, t3, t4, t5, t1, t2, data);
    },
    visitResolvedPatternNode$2(patternNode, data) {
      type$.AffineMatrix._as(data);
      return patternNode;
    }
  };
  B.ResolvedTextPositionNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedTextPositionNode$2(this, $V._as(data));
    }
  };
  B.ResolvedTextNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedText$2(this, $V._as(data));
    }
  };
  B.ResolvedPathNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedPath$2(this, $V._as(data));
    }
  };
  B.ResolvedClipNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedClipNode$2(this, $V._as(data));
    }
  };
  B.ResolvedMaskNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedMaskNode$2(this, $V._as(data));
    }
  };
  B.ResolvedImageNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedImageNode$2(this, $V._as(data));
    }
  };
  B.ResolvedPatternNode.prototype = {
    accept$2$2(_, visitor, data, $S, $V) {
      return $S._eval$1("@<0>")._bind$1($V)._eval$1("Visitor<1,2>")._as(visitor).visitResolvedPatternNode$2(this, $V._as(data));
    }
  };
  B.SvgTheme0.prototype = {
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== C.getRuntimeTypeOfDartObject(_this))
        return false;
      if (other instanceof B.SvgTheme0) {
        t1 = other.currentColor;
        t1 = t1.value === _this.currentColor.value && _this.fontSize === other.fontSize && _this.xHeight === other.xHeight;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hash(this.currentColor, this.fontSize, this.xHeight, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    toString$0(_) {
      return "SvgTheme(currentColor: " + this.currentColor.toString$0(0) + ", fontSize: " + this.fontSize + ", xHeight: " + C.S(this.xHeight) + ")";
    }
  };
  B.Visitor.prototype = {};
  B.ErrorOnUnResolvedNode.prototype = {
    get$_visitor$_message() {
      return "Cannot visit unresolved nodes with " + this.toString$0(0);
    },
    visitDeferredNode$2(deferredNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitMaskNode$2(maskNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitClipNode$2(clipNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitTextPositionNode$2(textPositionNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitTextNode$2(textNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitImageNode$2(imageNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    },
    visitPatternNode$2(patternNode, data) {
      C._instanceType(this)._eval$1("ErrorOnUnResolvedNode.V")._as(data);
      throw C.wrapException(C.UnsupportedError$(this.get$_visitor$_message()));
    }
  };
  B.CommandBuilderVisitor.prototype = {
    visitEmptyNode$2(node, data) {
    },
    visitParentNode$2(parentNode, data) {
      var t1, t2, t3, _i;
      for (t1 = parentNode._node$_children, t2 = t1.length, t3 = type$.void, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].accept$2$2(0, this, data, t3, t3);
    },
    visitPathNode$2(pathNode, data) {
    },
    visitResolvedClipNode$2(clipNode, data) {
      var t1, t2, t3, t4, t5, t6, t7, t8, _i, _null = null;
      for (t1 = clipNode.clips, t2 = t1.length, t3 = this._builder, t4 = t3._draw_command_builder$_paths, t5 = type$.Path, t6 = t3._commands, t7 = clipNode.child, t8 = type$.void, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        D.JSArray_methods.add$1(t6, new B.DrawCommand(_null, A.DrawCommandType_4, t3._getOrGenerateId$1$2(t1[_i], t4, t5), _null, _null, _null));
        t7.accept$2$2(0, this, data, t8, t8);
        D.JSArray_methods.add$1(t6, A.DrawCommand_AWW);
      }
    },
    visitResolvedMaskNode$2(maskNode, data) {
      var t1 = this._builder,
        t2 = maskNode.blendMode;
      t1.addSaveLayer$1(new B.Paint(t2 == null ? A.BlendMode_30 : t2, null, A.Fill_Color_4278190080_null));
      t2 = type$.void;
      maskNode.child.accept$2$2(0, this, data, t2, t2);
      t1 = t1._commands;
      D.JSArray_methods.add$1(t1, A.DrawCommand_2Th);
      maskNode.mask.accept$2$2(0, this, data, t2, t2);
      D.JSArray_methods.add$1(t1, A.DrawCommand_AWW);
      D.JSArray_methods.add$1(t1, A.DrawCommand_AWW);
    },
    visitResolvedPath$2(pathNode, data) {
      this._builder.addPath$4(0, pathNode.path, pathNode.paint, null, this.currentPatternId);
    },
    visitResolvedTextPositionNode$2(textPositionNode, data) {
      var _null = null,
        t1 = this._builder;
      D.JSArray_methods.add$1(t1._commands, new B.DrawCommand(_null, A.DrawCommandType_9, t1._getOrGenerateId$1$2(textPositionNode.textPosition, t1._draw_command_builder$_textPositions, type$.TextPosition), _null, _null, _null));
      D.JSArray_methods.forEach$1(textPositionNode.children, type$.void_Function_Node._as(new B.CommandBuilderVisitor_visitResolvedTextPositionNode_closure(this, data)));
    },
    visitResolvedText$2(textNode, data) {
      var t1 = this._builder,
        t2 = this.currentPatternId,
        paintId = t1._getOrGenerateId$1$2(textNode.paint, t1._draw_command_builder$_paints, type$.Paint),
        styleId = t1._getOrGenerateId$1$2(textNode.textConfig, t1._draw_command_builder$_text, type$.TextConfig),
        t3 = t2 != null,
        t4 = t3 ? t1._draw_command_builder$_patterns.$index(0, t2) : null;
      t2 = t3 ? t1._patternData.$index(0, t2) : null;
      D.JSArray_methods.add$1(t1._commands, new B.DrawCommand(null, A.DrawCommandType_6, styleId, paintId, t4, t2));
    },
    visitViewportNode$2(viewportNode, data) {
      var t1, t2, t3, _i;
      this.__CommandBuilderVisitor__width_A = viewportNode.width;
      this.__CommandBuilderVisitor__height_A = viewportNode.height;
      for (t1 = viewportNode._node$_children, t2 = t1.length, t3 = type$.void, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].accept$2$2(0, this, data, t3, t3);
    },
    visitSaveLayerNode$2(layerNode, data) {
      var t2, t3, t4, _i,
        t1 = this._builder;
      t1.addSaveLayer$1(layerNode.paint);
      for (t2 = layerNode._node$_children, t3 = t2.length, t4 = type$.void, _i = 0; _i < t2.length; t2.length === t3 || (0, C.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].accept$2$2(0, this, data, t4, t4);
      D.JSArray_methods.add$1(t1._commands, A.DrawCommand_AWW);
    },
    visitResolvedImageNode$2(resolvedImageNode, data) {
      var _null = null,
        t1 = this._builder;
      D.JSArray_methods.add$1(t1._commands, new B.DrawCommand(_null, A.DrawCommandType_7, t1._getOrGenerateId$1$2(new B.DrawImageData(t1._getOrGenerateId$1$2(new B.ImageData(resolvedImageNode.data, resolvedImageNode.format.index), t1._draw_command_builder$_images, type$.ImageData), resolvedImageNode.rect, resolvedImageNode.transform), t1._drawImages, type$.DrawImageData), _null, _null, _null));
    },
    visitResolvedPatternNode$2(patternNode, data) {
      var _this = this,
        t1 = _this._builder,
        t2 = patternNode.id,
        t3 = t1._commands;
      D.JSArray_methods.add$1(t3, new B.DrawCommand(null, A.DrawCommandType_8, t1._getOrGenerateId$1$2(t2, t1._draw_command_builder$_patterns, type$.Object), null, null, t1._getOrGenerateId$1$2(new B.PatternData(patternNode.x, patternNode.y, patternNode.width, patternNode.height, patternNode.transform), t1._patternData, type$.PatternData)));
      t1 = type$.void;
      patternNode.pattern.accept$2$2(0, _this, data, t1, t1);
      D.JSArray_methods.add$1(t3, A.DrawCommand_AWW);
      _this.currentPatternId = t2;
      patternNode.child.accept$2$2(0, _this, data, t1, t1);
      _this.currentPatternId = null;
    }
  };
  B._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode.prototype = {};
  B.VectorInstructions.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.width, _this.height, C.Object_hashAll(_this.patternData), C.Object_hashAll(_this.paints), C.Object_hashAll(_this.paths), C.Object_hashAll(_this.vertices), C.Object_hashAll(_this.text), C.Object_hashAll(_this.commands), C.Object_hashAll(_this.images), C.Object_hashAll(_this.drawImages), C.Object_hashAll(_this.textPositions), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof B.VectorInstructions && other.width === _this.width && other.height === _this.height && B.listEquals1(other.patternData, _this.patternData, type$.PatternData) && B.listEquals1(other.paints, _this.paints, type$.Paint) && B.listEquals1(other.paths, _this.paths, type$.Path) && B.listEquals1(other.vertices, _this.vertices, type$.IndexedVertices) && B.listEquals1(other.text, _this.text, type$.TextConfig) && B.listEquals1(other.commands, _this.commands, type$.DrawCommand) && B.listEquals1(other.images, _this.images, type$.ImageData) && B.listEquals1(other.drawImages, _this.drawImages, type$.DrawImageData) && B.listEquals1(other.textPositions, _this.textPositions, type$.TextPosition);
    },
    toString$0(_) {
      return "VectorInstructions(" + C.S(this.width) + ", " + C.S(this.height) + ")";
    }
  };
  B.DrawCommandType.prototype = {
    _enumToString$0() {
      return "DrawCommandType." + this._name;
    }
  };
  B.DrawCommand.prototype = {
    get$hashCode(_) {
      var _this = this;
      return C.Object_hash(_this.type, _this.objectId, _this.paintId, _this.debugString, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.DrawCommand && other.type === this.type && other.objectId == this.objectId && other.paintId == this.paintId;
    },
    toString$0(_) {
      var _this = this,
        t1 = "DrawCommand(" + _this.type.toString$0(0),
        t2 = _this.objectId;
      if (t2 != null)
        t1 += ", objectId: " + C.S(t2);
      t2 = _this.paintId;
      if (t2 != null)
        t1 += ", paintId: " + C.S(t2);
      t2 = _this.patternId;
      if (t2 != null)
        t1 += ", patternId: " + C.S(t2);
      t2 = _this.patternDataId;
      t1 = (t2 != null ? t1 + (", patternDataId: " + C.S(t2)) : t1) + ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B.Matrix41.prototype = {
    setFrom$1(arg) {
      var argStorage = arg._vector_math$_m4storage,
        t1 = this._vector_math$_m4storage,
        t2 = argStorage[15];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[15] = t2;
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    toString$0(_) {
      var _this = this;
      return "[0] " + _this.getRow$1(0).toString$0(0) + "\n[1] " + _this.getRow$1(1).toString$0(0) + "\n[2] " + _this.getRow$1(2).toString$0(0) + "\n[3] " + _this.getRow$1(3).toString$0(0) + "\n";
    },
    $index(_, i) {
      var t1;
      C._asInt(i);
      t1 = this._vector_math$_m4storage;
      if (!(i < 16))
        return C.ioore(t1, i);
      return t1[i];
    },
    $indexSet(_, i, v) {
      D.NativeFloat32List_methods.$indexSet(this._vector_math$_m4storage, C._asInt(i), C._asDouble(v));
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof B.Matrix41) {
        t1 = this._vector_math$_m4storage;
        t2 = t1[0];
        t3 = other._vector_math$_m4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hashAll(this._vector_math$_m4storage);
    },
    getRow$1(row) {
      var t3,
        t1 = new Float32Array(4),
        t2 = this._vector_math$_m4storage;
      if (!(row < 16))
        return C.ioore(t2, row);
      t1[0] = t2[row];
      t3 = 4 + row;
      if (!(t3 < 16))
        return C.ioore(t2, t3);
      t1[1] = t2[t3];
      t3 = 8 + row;
      if (!(t3 < 16))
        return C.ioore(t2, t3);
      t1[2] = t2[t3];
      t3 = 12 + row;
      if (!(t3 < 16))
        return C.ioore(t2, t3);
      t1[3] = t2[t3];
      return new B.Vector40(t1);
    },
    $mul(_, arg) {
      var t1 = new B.Matrix41(new Float32Array(16));
      t1.setFrom$1(this);
      t1.scale$3(0, arg, null, null);
      return t1;
    },
    $add(_, arg) {
      var t1, t2, oStorage;
      type$.Matrix4._as(arg);
      t1 = new Float32Array(16);
      t2 = new B.Matrix41(t1);
      t2.setFrom$1(this);
      oStorage = arg._vector_math$_m4storage;
      t1[0] = t1[0] + oStorage[0];
      t1[1] = t1[1] + oStorage[1];
      t1[2] = t1[2] + oStorage[2];
      t1[3] = t1[3] + oStorage[3];
      t1[4] = t1[4] + oStorage[4];
      t1[5] = t1[5] + oStorage[5];
      t1[6] = t1[6] + oStorage[6];
      t1[7] = t1[7] + oStorage[7];
      t1[8] = t1[8] + oStorage[8];
      t1[9] = t1[9] + oStorage[9];
      t1[10] = t1[10] + oStorage[10];
      t1[11] = t1[11] + oStorage[11];
      t1[12] = t1[12] + oStorage[12];
      t1[13] = t1[13] + oStorage[13];
      t1[14] = t1[14] + oStorage[14];
      t1[15] = t1[15] + oStorage[15];
      return t2;
    },
    $sub(_, arg) {
      var t1, t2, oStorage;
      type$.Matrix4._as(arg);
      t1 = new Float32Array(16);
      t2 = new B.Matrix41(t1);
      t2.setFrom$1(this);
      oStorage = arg._vector_math$_m4storage;
      t1[0] = t1[0] - oStorage[0];
      t1[1] = t1[1] - oStorage[1];
      t1[2] = t1[2] - oStorage[2];
      t1[3] = t1[3] - oStorage[3];
      t1[4] = t1[4] - oStorage[4];
      t1[5] = t1[5] - oStorage[5];
      t1[6] = t1[6] - oStorage[6];
      t1[7] = t1[7] - oStorage[7];
      t1[8] = t1[8] - oStorage[8];
      t1[9] = t1[9] - oStorage[9];
      t1[10] = t1[10] - oStorage[10];
      t1[11] = t1[11] - oStorage[11];
      t1[12] = t1[12] - oStorage[12];
      t1[13] = t1[13] - oStorage[13];
      t1[14] = t1[14] - oStorage[14];
      t1[15] = t1[15] - oStorage[15];
      return t2;
    },
    rotateZ$1(angle) {
      var cosAngle = Math.cos(angle),
        sinAngle = Math.sin(angle),
        t1 = this._vector_math$_m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[1],
        t5 = t1[5],
        t6 = t1[2],
        t7 = t1[6],
        t8 = t1[3],
        t9 = t1[7],
        t10 = -sinAngle;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * cosAngle + t3 * sinAngle;
      t1[1] = t4 * cosAngle + t5 * sinAngle;
      t1[2] = t6 * cosAngle + t7 * sinAngle;
      t1[3] = t8 * cosAngle + t9 * sinAngle;
      t1[4] = t2 * t10 + t3 * cosAngle;
      t1[5] = t4 * t10 + t5 * cosAngle;
      t1[6] = t6 * t10 + t7 * cosAngle;
      t1[7] = t8 * t10 + t9 * cosAngle;
    },
    scale$3(_, x, y, z) {
      var sy = y == null ? x : y,
        sz = x,
        t1 = this._vector_math$_m4storage,
        t2 = t1[0];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * x;
      t1[1] = t1[1] * x;
      t1[2] = t1[2] * x;
      t1[3] = t1[3] * x;
      t1[4] = t1[4] * sy;
      t1[5] = t1[5] * sy;
      t1[6] = t1[6] * sy;
      t1[7] = t1[7] * sy;
      t1[8] = t1[8] * sz;
      t1[9] = t1[9] * sz;
      t1[10] = t1[10] * sz;
      t1[11] = t1[11] * sz;
      t1[12] = t1[12];
      t1[13] = t1[13];
      t1[14] = t1[14];
      t1[15] = t1[15];
    },
    scale$2(_, x, y) {
      return this.scale$3(0, x, y, null);
    },
    setIdentity$0() {
      var t1 = this._vector_math$_m4storage;
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    }
  };
  B.Vector40.prototype = {
    setFrom$1(other) {
      var otherStorage = other._vector_math$_v4storage,
        t1 = this._vector_math$_v4storage,
        t2 = otherStorage[3];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[3] = t2;
      t1[2] = otherStorage[2];
      t1[1] = otherStorage[1];
      t1[0] = otherStorage[0];
    },
    toString$0(_) {
      var t1 = this._vector_math$_v4storage;
      return C.S(t1[0]) + "," + C.S(t1[1]) + "," + C.S(t1[2]) + "," + C.S(t1[3]);
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof B.Vector40) {
        t1 = this._vector_math$_v4storage;
        t2 = t1[0];
        t3 = other._vector_math$_v4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return C.Object_hashAll(this._vector_math$_v4storage);
    },
    $sub(_, other) {
      var t1, t2, argStorage;
      type$.Vector4._as(other);
      t1 = new Float32Array(4);
      t2 = new B.Vector40(t1);
      t2.setFrom$1(this);
      argStorage = other._vector_math$_v4storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $add(_, other) {
      var t1, t2, argStorage;
      type$.Vector4._as(other);
      t1 = new Float32Array(4);
      t2 = new B.Vector40(t1);
      t2.setFrom$1(this);
      argStorage = other._vector_math$_v4storage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
      return t2;
    },
    $mul(_, scale) {
      var t1 = new B.Vector40(new Float32Array(4));
      t1.setFrom$1(this);
      t1.scale$1(0, scale);
      return t1;
    },
    $index(_, i) {
      var t1;
      C._asInt(i);
      t1 = this._vector_math$_v4storage;
      if (!(i < 4))
        return C.ioore(t1, i);
      return t1[i];
    },
    $indexSet(_, i, v) {
      D.NativeFloat32List_methods.$indexSet(this._vector_math$_v4storage, C._asInt(i), C._asDouble(v));
    },
    get$length(_) {
      var t1 = this._vector_math$_v4storage,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    },
    scale$1(_, arg) {
      var t1 = this._vector_math$_v4storage,
        t2 = t1[0];
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2 * arg;
      t1[1] = t1[1] * arg;
      t1[2] = t1[2] * arg;
      t1[3] = t1[3] * arg;
    },
    round$0(_) {
      var t1 = this._vector_math$_v4storage,
        t2 = D.JSNumber_methods.roundToDouble$0(t1[0]);
      t1.$flags & 2 && C.throwUnsupportedOperation(t1);
      t1[0] = t2;
      t1[1] = D.JSNumber_methods.roundToDouble$0(t1[1]);
      t1[2] = D.JSNumber_methods.roundToDouble$0(t1[2]);
      t1[3] = D.JSNumber_methods.roundToDouble$0(t1[3]);
    }
  };
  B.DtdExternalId.prototype = {
    toString$0(_) {
      var t2, _this = this,
        t1 = _this.publicId;
      if (t1 != null) {
        t2 = _this.publicIdType.token;
        t2 = "" + "PUBLIC " + t2 + t1 + t2;
        t1 = t2;
      } else
        t1 = "" + "SYSTEM";
      t2 = _this.systemIdType.token;
      t2 = t1 + " " + t2 + _this.systemId + t2;
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    get$hashCode(_) {
      return C.Object_hash(this.systemId, this.publicId, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.DtdExternalId;
    }
  };
  B.XmlDefaultEntityMapping.prototype = {
    decodeEntity$1(input) {
      var t1 = input.length;
      if (t1 > 1 && input[0] === "#") {
        if (t1 > 2) {
          t1 = input[1];
          t1 = t1 === "x" || t1 === "X";
        } else
          t1 = false;
        if (t1)
          return this._decodeNumericEntity$2(D.JSString_methods.substring$1(input, 2), 16);
        else
          return this._decodeNumericEntity$2(D.JSString_methods.substring$1(input, 1), 10);
      } else
        return A.Map_D0Awe.$index(0, input);
    },
    _decodeNumericEntity$2(input, radix) {
      var value = C.Primitives_parseInt(input, radix);
      if (value == null || value < 0 || 1114111 < value)
        return null;
      return C.Primitives_stringFromCharCode(value);
    },
    encodeAttributeValue$2(input, type) {
      switch (type.index) {
        case 0:
          return C.stringReplaceAllFuncUnchecked(input, $.$get$_singeQuoteAttributePattern(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(B.default_mapping___singeQuoteAttributeReplace$closure())), null);
        case 1:
          return C.stringReplaceAllFuncUnchecked(input, $.$get$_doubleQuoteAttributePattern(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(B.default_mapping___doubleQuoteAttributeReplace$closure())), null);
      }
    }
  };
  B.XmlEntityMapping.prototype = {
    decode$1(_, input) {
      var t1, index, value, next,
        start = D.JSString_methods.indexOf$2(input, "&", 0);
      if (start < 0)
        return input;
      t1 = D.JSString_methods.substring$2(input, 0, start);
      for (; true; start = next) {
        ++start;
        index = D.JSString_methods.indexOf$2(input, ";", start);
        if (start < index) {
          value = this.decodeEntity$1(D.JSString_methods.substring$2(input, start, index));
          if (value != null) {
            t1 += value;
            start = index + 1;
          } else
            t1 += "&";
        } else
          t1 += "&";
        next = D.JSString_methods.indexOf$2(input, "&", start);
        if (next === -1) {
          t1 += D.JSString_methods.substring$1(input, start);
          break;
        }
        t1 += D.JSString_methods.substring$2(input, start, next);
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  B.XmlAttributeType.prototype = {
    _enumToString$0() {
      return "XmlAttributeType." + this._name;
    }
  };
  B.XmlNodeType.prototype = {
    _enumToString$0() {
      return "XmlNodeType." + this._name;
    }
  };
  B.XmlException.prototype = {$isException: 1,
    get$message(receiver) {
      return this.message;
    }
  };
  B.XmlFormatException.prototype = {
    get$_lineAndColumn() {
      var result, _this = this,
        value = _this.XmlFormatException___XmlFormatException__lineAndColumn_FI;
      if (value === $) {
        _this.get$buffer(_this);
        _this.get$position(_this);
        result = B.Token_lineAndColumnOf(_this.get$buffer(_this), _this.get$position(_this));
        _this.XmlFormatException___XmlFormatException__lineAndColumn_FI !== $ && C.throwLateFieldADI("_lineAndColumn");
        _this.set$__XmlFormatException__lineAndColumn_FI(result);
        value = result;
      }
      return value;
    },
    get$locationString() {
      var value, result, value0, t1, _this = this;
      _this.get$buffer(_this);
      _this.get$position(_this);
      value = _this.XmlFormatException___XmlFormatException_line_FI;
      if (value === $) {
        result = _this.get$_lineAndColumn()[0];
        _this.XmlFormatException___XmlFormatException_line_FI !== $ && C.throwLateFieldADI("line");
        _this.XmlFormatException___XmlFormatException_line_FI = result;
        value = result;
      }
      value0 = _this.XmlFormatException___XmlFormatException_column_FI;
      if (value0 === $) {
        result = _this.get$_lineAndColumn()[1];
        _this.XmlFormatException___XmlFormatException_column_FI !== $ && C.throwLateFieldADI("column");
        _this.XmlFormatException___XmlFormatException_column_FI = result;
        value0 = result;
      }
      t1 = " at " + C.S(value) + ":" + C.S(value0);
      return t1;
    },
    get$source(_) {
      return this.get$buffer(this);
    },
    get$offset(_) {
      return this.get$position(this);
    },
    set$__XmlFormatException__lineAndColumn_FI(__XmlFormatException__lineAndColumn_FI) {
      this.XmlFormatException___XmlFormatException__lineAndColumn_FI = type$.List_int._as(__XmlFormatException__lineAndColumn_FI);
    }
  };
  B.XmlParserException.prototype = {
    toString$0(_) {
      return "XmlParserException: " + this.message + this.get$locationString();
    },
    $isFormatException: 1,
    get$buffer(receiver) {
      return this.buffer;
    },
    get$position(receiver) {
      return this.position;
    }
  };
  B._XmlParserException_XmlException_XmlFormatException.prototype = {};
  B.XmlCache.prototype = {
    $index(_, key) {
      var t1, t2, t3, it, _this = this;
      _this.$ti._precomputed1._as(key);
      t1 = _this._cache0$_values;
      if (!t1.containsKey$1(0, key)) {
        t1.$indexSet(0, key, _this._loader.call$1(key));
        for (t2 = _this._maxSize, t3 = C._instanceType(t1)._eval$1("LinkedHashMapKeysIterable<1>"); t1.__js_helper$_length > t2;) {
          it = new C.LinkedHashMapKeysIterable(t1, t3).get$iterator(0);
          if (!it.moveNext$0())
            C.throwExpression(C.IterableElementError_noElement());
          t1.remove$1(0, it.get$current(0));
        }
      }
      t1 = t1.$index(0, key);
      t1.toString;
      return t1;
    }
  };
  B.XmlCharacterDataParser.prototype = {
    parseOn$1(context) {
      var t1,
        buffer = context.buffer,
        position = context.position,
        end = buffer.length,
        index = position < end ? D.JSString_methods.indexOf$2(buffer, this._stopper, position) : end;
      end = index === -1 ? end : index;
      if (end - position < this._character_data_parser$_minLength)
        return new B.Failure("Unable to parse character data.", buffer, position);
      else {
        t1 = D.JSString_methods.substring$2(buffer, position, end);
        return new B.Success(t1, buffer, end, type$.Success_String);
      }
    },
    fastParseOn$2(buffer, position) {
      var end = buffer.length,
        index = position < end ? D.JSString_methods.indexOf$2(buffer, this._stopper, position) : end;
      end = index === -1 ? end : index;
      return end - position < this._character_data_parser$_minLength ? -1 : end;
    }
  };
  B.XmlAnnotator.prototype = {
    annotate$4$buffer$start$stop($event, buffer, start, $stop) {
    }
  };
  B.XmlHasBuffer.prototype = {};
  B.XmlHasLocation.prototype = {};
  B.XmlHasParent.prototype = {};
  B.XmlEventEncoder.prototype = {
    convert$1(input) {
      var buffer, t1;
      type$.List_XmlEvent._as(input);
      buffer = new C.StringBuffer("");
      t1 = type$.Sink_String._as(new B.ConversionSink(buffer.get$write(buffer), type$.ConversionSink_String));
      J.forEach$1$ax(input, new B._XmlEventEncoderSink(t1, this.entityMapping).get$visit());
      t1.close$0(0);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    startChunkedConversion$1(sink) {
      return new B._XmlEventEncoderSink(type$.Sink_String._as(sink), this.entityMapping);
    }
  };
  B._XmlEventEncoderSink.prototype = {
    add$1(_, chunk) {
      return J.forEach$1$ax(type$.List_XmlEvent._as(chunk), this.get$visit());
    },
    close$0(_) {
      return this.sink.close$0(0);
    },
    addAttributes$1(attributes) {
      var t1, t2, t3, t4, t5, t6;
      for (t1 = J.get$iterator$ax(type$.List_XmlEventAttribute._as(attributes)), t2 = this.sink, t3 = this.entityMapping; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        t2.add$1(0, " ");
        t2.add$1(0, t4.name);
        t2.add$1(0, "=");
        t5 = t4.value;
        t4 = t4.attributeType;
        t6 = t4.token;
        t2.add$1(0, t6 + t3.encodeAttributeValue$2(t5, t4) + t6);
      }
    },
    $isSink: 1
  };
  B.__XmlEventEncoderSink_Object_XmlEventVisitor.prototype = {};
  B.XmlEvent.prototype = {
    toString$0(_) {
      return new B.XmlEventEncoder(A.C_XmlDefaultEntityMapping).convert$1(C._setArrayType([this], type$.JSArray_XmlEvent));
    }
  };
  B._XmlEvent_Object_XmlHasParent.prototype = {};
  B._XmlEvent_Object_XmlHasParent_XmlHasLocation.prototype = {};
  B._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer.prototype = {};
  B.XmlCDATAEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<![CDATA[");
      t1.add$1(0, this.value);
      t1.add$1(0, "]]>");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_1, this.value, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlCDATAEvent && other.value === this.value;
    }
  };
  B.XmlCommentEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<!--");
      t1.add$1(0, this.value);
      t1.add$1(0, "-->");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_2, this.value, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlCommentEvent && other.value === this.value;
    }
  };
  B.XmlDeclarationEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<?xml");
      visitor.addAttributes$1(this.attributes);
      t1.add$1(0, "?>");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_3, A.ListEquality_DefaultEquality.hash$1(0, this.attributes), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlDeclarationEvent && A.ListEquality_DefaultEquality.equals$2(other.attributes, this.attributes);
    }
  };
  B.XmlDoctypeEvent.prototype = {
    accept$1(_, visitor) {
      var externalId, intSubset,
        t1 = visitor.sink;
      t1.add$1(0, "<!DOCTYPE");
      t1.add$1(0, " ");
      t1.add$1(0, this.name);
      externalId = this.externalId;
      if (externalId != null) {
        t1.add$1(0, " ");
        t1.add$1(0, externalId.toString$0(0));
      }
      intSubset = this.internalSubset;
      if (intSubset != null) {
        t1.add$1(0, " ");
        t1.add$1(0, "[");
        t1.add$1(0, intSubset);
        t1.add$1(0, "]");
      }
      t1.add$1(0, ">");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_4, this.name, this.externalId, this.internalSubset, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlDoctypeEvent && this.name === other.name && J.$eq$(this.externalId, other.externalId) && this.internalSubset == other.internalSubset;
    }
  };
  B.XmlEndElementEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "</");
      t1.add$1(0, this.name);
      t1.add$1(0, ">");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_7, this.name, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlEndElementEvent && other.name === this.name;
    },
    get$name(receiver) {
      return this.name;
    }
  };
  B._XmlEndElementEvent_XmlEvent_XmlNamed.prototype = {};
  B.XmlProcessingEvent.prototype = {
    accept$1(_, visitor) {
      var t2,
        t1 = visitor.sink;
      t1.add$1(0, "<?");
      t1.add$1(0, this.target);
      t2 = this.value;
      if (t2.length !== 0) {
        t1.add$1(0, " ");
        t1.add$1(0, t2);
      }
      t1.add$1(0, "?>");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_10, this.value, this.target, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlProcessingEvent && other.target === this.target && other.value === this.value;
    }
  };
  B.XmlStartElementEvent.prototype = {
    accept$1(_, visitor) {
      var t1 = visitor.sink;
      t1.add$1(0, "<");
      t1.add$1(0, this.name);
      visitor.addAttributes$1(this.attributes);
      if (this.isSelfClosing)
        t1.add$1(0, "/>");
      else
        t1.add$1(0, ">");
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_7, this.name, this.isSelfClosing, A.ListEquality_DefaultEquality.hash$1(0, this.attributes), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlStartElementEvent && other.name === this.name && other.isSelfClosing === this.isSelfClosing && A.ListEquality_DefaultEquality.equals$2(other.attributes, this.attributes);
    },
    get$name(receiver) {
      return this.name;
    }
  };
  B._XmlStartElementEvent_XmlEvent_XmlNamed.prototype = {};
  B.XmlRawTextEvent.prototype = {
    get$value(_) {
      var result, _this = this,
        value = _this.__XmlRawTextEvent_value_FI;
      if (value === $) {
        result = _this.entityMapping.decode$1(0, _this.raw);
        _this.__XmlRawTextEvent_value_FI !== $ && C.throwLateFieldADI("value");
        _this.__XmlRawTextEvent_value_FI = result;
        value = result;
      }
      return value;
    },
    accept$1(_, visitor) {
      visitor.sink.add$1(0, C.stringReplaceAllFuncUnchecked(this.get$value(0), $.$get$_textPattern(), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(B.default_mapping___textReplace$closure())), null));
      return null;
    },
    get$hashCode(_) {
      return C.Object_hash(A.XmlNodeType_11, this.get$value(0), D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlRawTextEvent && other.get$value(0) === this.get$value(0);
    },
    $isXmlTextEvent: 1
  };
  B.XmlEventIterable.prototype = {
    get$iterator(_) {
      var t1 = C._setArrayType([], type$.JSArray_XmlEvent),
        t2 = C._setArrayType([], type$.JSArray_XmlStartElementEvent);
      return new B.XmlEventIterator($.$get$eventParserCache().$index(0, this.entityMapping), new B.XmlAnnotator(false, false, false, false, false, t1, t2), new B.Failure("", this.input, 0));
    }
  };
  B.XmlEventIterator.prototype = {
    get$current(_) {
      var t1 = this._iterator$_current;
      t1.toString;
      return t1;
    },
    moveNext$0() {
      var result, t1, t2, t3, _this = this,
        context = _this._iterator$_context;
      if (context != null) {
        result = _this._eventParser.parseOn$1(context);
        if (result instanceof B.Success) {
          _this.set$_iterator$_context(result);
          t1 = result.value;
          _this.set$_iterator$_current(t1);
          _this._annotator.annotate$4$buffer$start$stop(t1, context.buffer, context.position, result.position);
          return true;
        } else {
          t1 = context.position;
          t2 = context.buffer;
          if (t1 < t2.length) {
            t3 = result.get$message(result);
            _this.set$_iterator$_context(new B.Failure(t3, t2, t1 + 1));
            _this._iterator$_current = null;
            throw C.wrapException(B.XmlParserException$(result.get$message(result), result.buffer, result.position));
          } else {
            _this.set$_iterator$_context(null);
            _this._iterator$_current = null;
            return false;
          }
        }
      }
      return false;
    },
    set$_iterator$_context(_context) {
      this._iterator$_context = type$.nullable_Result_XmlEvent._as(_context);
    },
    set$_iterator$_current(_current) {
      this._iterator$_current = type$.nullable_XmlEvent._as(_current);
    },
    $isIterator: 1
  };
  B.XmlEventParser.prototype = {
    event$0() {
      var _this = this;
      return B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(_this.get$characterData(), D.List_empty1, type$.ReferenceParser_XmlTextEvent), new B.ReferenceParser(_this.get$startElement(), D.List_empty1, type$.ReferenceParser_XmlStartElementEvent), new B.ReferenceParser(_this.get$endElement(_this), D.List_empty1, type$.ReferenceParser_XmlEndElementEvent), new B.ReferenceParser(_this.get$comment(), D.List_empty1, type$.ReferenceParser_XmlCommentEvent), new B.ReferenceParser(_this.get$cdata(), D.List_empty1, type$.ReferenceParser_XmlCDATAEvent), new B.ReferenceParser(_this.get$declaration(), D.List_empty1, type$.ReferenceParser_XmlDeclarationEvent), new B.ReferenceParser(_this.get$processing(), D.List_empty1, type$.ReferenceParser_XmlProcessingEvent), new B.ReferenceParser(_this.get$doctype(), D.List_empty1, type$.ReferenceParser_XmlDoctypeEvent)], type$.JSArray_Parser_XmlEvent), B.failure_joiner__selectFarthest$closure(), type$.XmlEvent);
    },
    characterData$0() {
      return B.MapParserExtension_map(new B.XmlCharacterDataParser("<", 1), new B.XmlEventParser_characterData_closure(this), false, type$.String, type$.XmlTextEvent);
    },
    startElement$0() {
      var _this = this,
        t1 = type$.ReferenceParser_String,
        t2 = type$.String,
        t3 = type$.List_XmlEventAttribute;
      return B.RecordParserExtension5_map5(B.seq5(B.PredicateStringExtension_toParser("<"), new B.ReferenceParser(_this.get$nameToken(), D.List_empty1, t1), new B.ReferenceParser(_this.get$attributes(_this), D.List_empty1, type$.ReferenceParser_List_XmlEventAttribute), new B.ReferenceParser(_this.get$spaceOptional(), D.List_empty1, t1), B.ChoiceParser$(C._setArrayType([B.PredicateStringExtension_toParser(">"), B.PredicateStringExtension_toParser("/>")], type$.JSArray_Parser_String), B.failure_joiner__selectFirst$closure(), t2), t2, t2, t3, t2, t2), new B.XmlEventParser_startElement_closure(), t2, t2, t3, t2, t2, type$.XmlStartElementEvent);
    },
    attributes$0(_) {
      return B.PossessiveRepeatingParserExtension_repeat(new B.ReferenceParser(this.get$attribute(), D.List_empty1, type$.ReferenceParser_XmlEventAttribute), 0, 9007199254740991, type$.XmlEventAttribute);
    },
    attribute$0() {
      var _this = this,
        t1 = type$.ReferenceParser_String,
        t2 = type$.String,
        t3 = type$.Record_2_String_and_XmlAttributeType;
      return B.RecordParserExtension3_map3(B.seq3(new B.ReferenceParser(_this.get$space(), D.List_empty1, t1), new B.ReferenceParser(_this.get$nameToken(), D.List_empty1, t1), new B.ReferenceParser(_this.get$attributeAssignment(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), t2, t2, t3), new B.XmlEventParser_attribute_closure(_this), t2, t2, t3, type$.XmlEventAttribute);
    },
    attributeAssignment$0() {
      var t1 = this.get$spaceOptional(),
        t2 = type$.ReferenceParser_String,
        t3 = type$.String,
        t4 = type$.Record_2_String_and_XmlAttributeType;
      return new B.OptionalParser(A.Record2_wb7, B.RecordParserExtension4_map4(B.seq4(new B.ReferenceParser(t1, D.List_empty1, t2), B.PredicateStringExtension_toParser("="), new B.ReferenceParser(t1, D.List_empty1, t2), new B.ReferenceParser(this.get$attributeValue(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), t3, t3, t3, t4), new B.XmlEventParser_attributeAssignment_closure(), t3, t3, t3, t4, t4), type$.OptionalParser_Record_2_String_and_XmlAttributeType);
    },
    attributeValue$0() {
      var t1 = type$.ReferenceParser_Record_2_String_and_XmlAttributeType;
      return B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(this.get$attributeValueDoubleQuote(), D.List_empty1, t1), new B.ReferenceParser(this.get$attributeValueSingleQuote(), D.List_empty1, t1), new B.ReferenceParser(this.get$attributeValueNoQuote(), D.List_empty1, t1)], type$.JSArray_Parser_Record_2_String_and_XmlAttributeType), null, type$.Record_2_String_and_XmlAttributeType);
    },
    attributeValueDoubleQuote$0() {
      var t1 = type$.String;
      return B.RecordParserExtension3_map3(B.seq3(B.PredicateStringExtension_toParser('"'), new B.XmlCharacterDataParser('"', 0), B.PredicateStringExtension_toParser('"'), t1, t1, t1), new B.XmlEventParser_attributeValueDoubleQuote_closure(), t1, t1, t1, type$.Record_2_String_and_XmlAttributeType);
    },
    attributeValueSingleQuote$0() {
      var t1 = type$.String;
      return B.RecordParserExtension3_map3(B.seq3(B.PredicateStringExtension_toParser("'"), new B.XmlCharacterDataParser("'", 0), B.PredicateStringExtension_toParser("'"), t1, t1, t1), new B.XmlEventParser_attributeValueSingleQuote_closure(), t1, t1, t1, type$.Record_2_String_and_XmlAttributeType);
    },
    attributeValueNoQuote$0() {
      return B.MapParserExtension_map(new B.ReferenceParser(this.get$nameToken(), D.List_empty1, type$.ReferenceParser_String), new B.XmlEventParser_attributeValueNoQuote_closure(), false, type$.String, type$.Record_2_String_and_XmlAttributeType);
    },
    endElement$0(_) {
      var t1 = type$.ReferenceParser_String,
        t2 = type$.String;
      return B.RecordParserExtension4_map4(B.seq4(B.PredicateStringExtension_toParser("</"), new B.ReferenceParser(this.get$nameToken(), D.List_empty1, t1), new B.ReferenceParser(this.get$spaceOptional(), D.List_empty1, t1), B.PredicateStringExtension_toParser(">"), t2, t2, t2, t2), new B.XmlEventParser_endElement_closure(), t2, t2, t2, t2, type$.XmlEndElementEvent);
    },
    comment$0() {
      var t1 = type$.String;
      return B.RecordParserExtension3_map3(B.seq3(B.PredicateStringExtension_toParser("<!--"), new B.FlattenParser('"-->" expected', new B.LazyRepeatingParser(B.PredicateStringExtension_toParser("-->"), 0, 9007199254740991, new B.AnyCharacterParser("input expected"), type$.LazyRepeatingParser_String)), B.PredicateStringExtension_toParser("-->"), t1, t1, t1), new B.XmlEventParser_comment_closure(), t1, t1, t1, type$.XmlCommentEvent);
    },
    cdata$0() {
      var t1 = type$.String;
      return B.RecordParserExtension3_map3(B.seq3(B.PredicateStringExtension_toParser("<![CDATA["), new B.FlattenParser('"]]>" expected', new B.LazyRepeatingParser(B.PredicateStringExtension_toParser("]]>"), 0, 9007199254740991, new B.AnyCharacterParser("input expected"), type$.LazyRepeatingParser_String)), B.PredicateStringExtension_toParser("]]>"), t1, t1, t1), new B.XmlEventParser_cdata_closure(), t1, t1, t1, type$.XmlCDATAEvent);
    },
    declaration$0() {
      var t1 = type$.String,
        t2 = type$.List_XmlEventAttribute;
      return B.RecordParserExtension4_map4(B.seq4(B.PredicateStringExtension_toParser("<?xml"), new B.ReferenceParser(this.get$attributes(this), D.List_empty1, type$.ReferenceParser_List_XmlEventAttribute), new B.ReferenceParser(this.get$spaceOptional(), D.List_empty1, type$.ReferenceParser_String), B.PredicateStringExtension_toParser("?>"), t1, t2, t1, t1), new B.XmlEventParser_declaration_closure(), t1, t2, t1, t1, type$.XmlDeclarationEvent);
    },
    processing$0() {
      var t1 = type$.ReferenceParser_String,
        t2 = type$.String;
      return B.RecordParserExtension4_map4(B.seq4(B.PredicateStringExtension_toParser("<?"), new B.ReferenceParser(this.get$nameToken(), D.List_empty1, t1), new B.OptionalParser("", B.RecordParserExtension2_map2(B.seq2(new B.ReferenceParser(this.get$space(), D.List_empty1, t1), new B.FlattenParser('"?>" expected', new B.LazyRepeatingParser(B.PredicateStringExtension_toParser("?>"), 0, 9007199254740991, new B.AnyCharacterParser("input expected"), type$.LazyRepeatingParser_String)), t2, t2), new B.XmlEventParser_processing_closure(), t2, t2, t2), type$.OptionalParser_String), B.PredicateStringExtension_toParser("?>"), t2, t2, t2, t2), new B.XmlEventParser_processing_closure0(), t2, t2, t2, t2, type$.XmlProcessingEvent);
    },
    doctype$0() {
      var _this = this,
        t1 = B.PredicateStringExtension_toParser("<!DOCTYPE"),
        t2 = _this.get$space(),
        t3 = type$.ReferenceParser_String,
        t4 = _this.get$spaceOptional(),
        t5 = type$.String;
      return B.RecordParserExtension8_map8(new B.SequenceParser8(t1, new B.ReferenceParser(t2, D.List_empty1, t3), new B.ReferenceParser(_this.get$nameToken(), D.List_empty1, t3), new B.OptionalParser(null, new B.SkipParser(new B.ReferenceParser(t2, D.List_empty1, type$.ReferenceParser_void), new B.EpsilonParser(null, type$.EpsilonParser_void), new B.ReferenceParser(_this.get$doctypeExternalId(), D.List_empty1, type$.ReferenceParser_DtdExternalId), type$.SkipParser_DtdExternalId), type$.OptionalParser_nullable_DtdExternalId), new B.ReferenceParser(t4, D.List_empty1, t3), new B.OptionalParser(null, new B.ReferenceParser(_this.get$doctypeIntSubset(), D.List_empty1, t3), type$.OptionalParser_nullable_String), new B.ReferenceParser(t4, D.List_empty1, t3), B.PredicateStringExtension_toParser(">"), type$.SequenceParser8_of_String_and_String_and_String_and_nullable_DtdExternalId_and_String_and_nullable_String_and_String_and_String), new B.XmlEventParser_doctype_closure(), t5, t5, t5, type$.nullable_DtdExternalId, t5, type$.nullable_String, t5, t5, type$.XmlDoctypeEvent);
    },
    doctypeExternalId$0() {
      var t1 = type$.ReferenceParser_DtdExternalId;
      return B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(this.get$doctypeExternalIdSystem(), D.List_empty1, t1), new B.ReferenceParser(this.get$doctypeExternalIdPublic(), D.List_empty1, t1)], type$.JSArray_Parser_DtdExternalId), null, type$.DtdExternalId);
    },
    doctypeExternalIdSystem$0() {
      var t1 = type$.String,
        t2 = type$.Record_2_String_and_XmlAttributeType;
      return B.RecordParserExtension3_map3(B.seq3(B.PredicateStringExtension_toParser("SYSTEM"), new B.ReferenceParser(this.get$space(), D.List_empty1, type$.ReferenceParser_String), new B.ReferenceParser(this.get$attributeValue(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), t1, t1, t2), new B.XmlEventParser_doctypeExternalIdSystem_closure(), t1, t1, t2, type$.DtdExternalId);
    },
    doctypeExternalIdPublic$0() {
      var t1 = this.get$space(),
        t2 = type$.ReferenceParser_String,
        t3 = this.get$attributeValue(),
        t4 = type$.ReferenceParser_Record_2_String_and_XmlAttributeType,
        t5 = type$.String,
        t6 = type$.Record_2_String_and_XmlAttributeType;
      return B.RecordParserExtension5_map5(B.seq5(B.PredicateStringExtension_toParser("PUBLIC"), new B.ReferenceParser(t1, D.List_empty1, t2), new B.ReferenceParser(t3, D.List_empty1, t4), new B.ReferenceParser(t1, D.List_empty1, t2), new B.ReferenceParser(t3, D.List_empty1, t4), t5, t5, t6, t5, t6), new B.XmlEventParser_doctypeExternalIdPublic_closure(), t5, t5, t6, t5, t6, type$.DtdExternalId);
    },
    doctypeIntSubset$0() {
      var t3, _this = this,
        t1 = B.PredicateStringExtension_toParser("["),
        t2 = type$.ReferenceParser_dynamic;
      t2 = B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(_this.get$doctypeElementDecl(), D.List_empty1, t2), new B.ReferenceParser(_this.get$doctypeAttlistDecl(), D.List_empty1, t2), new B.ReferenceParser(_this.get$doctypeEntityDecl(), D.List_empty1, t2), new B.ReferenceParser(_this.get$doctypeNotationDecl(), D.List_empty1, t2), new B.ReferenceParser(_this.get$processing(), D.List_empty1, type$.ReferenceParser_XmlProcessingEvent), new B.ReferenceParser(_this.get$comment(), D.List_empty1, type$.ReferenceParser_XmlCommentEvent), new B.ReferenceParser(_this.get$doctypeReference(), D.List_empty1, t2), new B.AnyCharacterParser("input expected")], type$.JSArray_Parser_dynamic), null, type$.dynamic);
      t3 = type$.String;
      return B.RecordParserExtension3_map3(B.seq3(t1, new B.FlattenParser('"]" expected', new B.LazyRepeatingParser(B.PredicateStringExtension_toParser("]"), 0, 9007199254740991, t2, type$.LazyRepeatingParser_dynamic)), B.PredicateStringExtension_toParser("]"), t3, t3, t3), new B.XmlEventParser_doctypeIntSubset_closure(), t3, t3, t3, t3);
    },
    doctypeElementDecl$0() {
      var t1 = B.PredicateStringExtension_toParser("<!ELEMENT"),
        t2 = B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(this.get$nameToken(), D.List_empty1, type$.ReferenceParser_String), new B.ReferenceParser(this.get$attributeValue(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new B.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, type$.Object),
        t3 = type$.String;
      return B.seq3(t1, new B.LazyRepeatingParser(B.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t2, type$.LazyRepeatingParser_Object), B.PredicateStringExtension_toParser(">"), t3, type$.List_Object, t3);
    },
    doctypeAttlistDecl$0() {
      var t1 = B.PredicateStringExtension_toParser("<!ATTLIST"),
        t2 = B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(this.get$nameToken(), D.List_empty1, type$.ReferenceParser_String), new B.ReferenceParser(this.get$attributeValue(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new B.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, type$.Object),
        t3 = type$.String;
      return B.seq3(t1, new B.LazyRepeatingParser(B.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t2, type$.LazyRepeatingParser_Object), B.PredicateStringExtension_toParser(">"), t3, type$.List_Object, t3);
    },
    doctypeEntityDecl$0() {
      var t1 = B.PredicateStringExtension_toParser("<!ENTITY"),
        t2 = B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(this.get$nameToken(), D.List_empty1, type$.ReferenceParser_String), new B.ReferenceParser(this.get$attributeValue(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new B.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, type$.Object),
        t3 = type$.String;
      return B.seq3(t1, new B.LazyRepeatingParser(B.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t2, type$.LazyRepeatingParser_Object), B.PredicateStringExtension_toParser(">"), t3, type$.List_Object, t3);
    },
    doctypeNotationDecl$0() {
      var t1 = B.PredicateStringExtension_toParser("<!NOTATION"),
        t2 = B.ChoiceParser$(C._setArrayType([new B.ReferenceParser(this.get$nameToken(), D.List_empty1, type$.ReferenceParser_String), new B.ReferenceParser(this.get$attributeValue(), D.List_empty1, type$.ReferenceParser_Record_2_String_and_XmlAttributeType), new B.AnyCharacterParser("input expected")], type$.JSArray_Parser_Object), null, type$.Object),
        t3 = type$.String;
      return B.seq3(t1, new B.LazyRepeatingParser(B.PredicateStringExtension_toParser(">"), 0, 9007199254740991, t2, type$.LazyRepeatingParser_Object), B.PredicateStringExtension_toParser(">"), t3, type$.List_Object, t3);
    },
    doctypeReference$0() {
      var t1 = type$.String;
      return B.seq3(B.PredicateStringExtension_toParser("%"), new B.ReferenceParser(this.get$nameToken(), D.List_empty1, type$.ReferenceParser_String), B.PredicateStringExtension_toParser(";"), t1, t1, t1);
    },
    space$0() {
      var _s19_ = "whitespace expected";
      return B.RepeatingCharacterParserExtension_repeatString(new B.SingleCharacterParser(A.C_WhitespaceCharPredicate, _s19_), 1, 9007199254740991, _s19_);
    },
    spaceOptional$0() {
      var _s19_ = "whitespace expected";
      return B.RepeatingCharacterParserExtension_repeatString(new B.SingleCharacterParser(A.C_WhitespaceCharPredicate, _s19_), 0, 9007199254740991, _s19_);
    },
    nameToken$0() {
      var t1 = type$.ReferenceParser_String,
        t2 = type$.String;
      return new B.FlattenParser("name expected", B.seq2(new B.ReferenceParser(this.get$nameStartChar(), D.List_empty1, t1), B.PossessiveRepeatingParserExtension_repeat(new B.ReferenceParser(this.get$nameChar(), D.List_empty1, t1), 0, 9007199254740991, t2), t2, type$.List_String));
    },
    nameStartChar$0() {
      return B.pattern(":A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd", null);
    },
    nameChar$0() {
      return B.pattern(":A-Z_a-z\xc0-\xd6\xd8-\xf6\xf8-\u02ff\u0370-\u037d\u037f-\u1fff\u200c-\u200d\u2070-\u218f\u2c00-\u2fef\u3001-\ud7ff\uf900-\ufdcf\ufdf0-\ufffd-.0-9\xb7\u0300-\u036f\u203f-\u2040", null);
    }
  };
  B.ConversionSink.prototype = {
    add$1(_, data) {
      this.$ti._precomputed1._as(data);
      return this.callback.call$1(data);
    },
    close$0(_) {
    },
    $isSink: 1
  };
  B.XmlEventAttribute.prototype = {
    get$hashCode(_) {
      return C.Object_hash(this.name, this.value, this.attributeType, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof B.XmlEventAttribute && other.name === this.name && other.value === this.value && other.attributeType === this.attributeType;
    },
    get$name(receiver) {
      return this.name;
    }
  };
  B._XmlEventAttribute_Object_XmlNamed.prototype = {};
  B._XmlEventAttribute_Object_XmlNamed_XmlHasParent.prototype = {};
  B.XmlNamed.prototype = {
    get$localName(_) {
      var _this = this,
        index = D.JSString_methods.indexOf$1(_this.get$name(_this), ":");
      return index > 0 ? D.JSString_methods.substring$1(_this.get$name(_this), index + 1) : _this.get$name(_this);
    }
  };
  B.XmlEventVisitor.prototype = {
    visit$1($event) {
      return type$.XmlEvent._as($event).accept$1(0, this);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["GreenNode(TexParser,FunctionContext)", "double(double)", "~(SvgParser,bool)", "MacroExpansion(MacroContext)", "String(MacroContext)", "GreenNode(TexParser,EnvContext)", "AffineMatrix(List<double>,AffineMatrix)", "Parser<String>()", "Path(SvgParser)", "Color(Set<WidgetState>)", "~()", "Parser<+(String,XmlAttributeType)>()", "Parser<@>()", "EquationRowNode(List<EquationRowNode>)", "Failure(Failure,Failure)", "SymbolNode(String)", "String(Token)", "String(Match)", "Parser<DtdExternalId>()", "String(MatrixSeparatorStyle)", "bool(DelimiterConf)", "int(GreenNode)", "List<BuildResult>(BuildResult?)", "List<GreenNode>(GreenNode)", "~(_NodeSpacingConf?,_NodeSpacingConf?)", "Color?(Set<WidgetState>)", "List<GreenNode>(EquationRowNode)", "String(GreenNode)", "~(TapDownDetails)", "~(bool)", "SelectableAdapter(BuildContext,String,TextStyle,bool)", "Text(FlutterMathException)", "MouseCursor(Set<WidgetState>)", "double(Measurement)", "Map<String,Object?>(EquationRowNode)", "+(String,XmlAttributeType)(String,String,String)", "String(Measurement)", "List<EquationRowNode?>(List<EquationRowNode?>)", "Map<String,Object?>(GreenNode)", "Path?(SvgParser)", "CustomPaint(BuildContext,BoxConstraints)", "Tuple3<TextSelection,LayerLink?,LayerLink?>(BuildContext,TextSelection,Tuple2<LayerLink,LayerLink>)", "EditableLine(BuildContext,Tuple3<TextSelection,LayerLink?,LayerLink?>,Widget?)", "~(List<String>,EnvSpec)", "LineElement(int)", "~([TapUpDetails?])", "int(List<EquationRowNode?>)", "~(List<String>,FunctionSpec<GreenNode>)", "TexSymbolConfig(String)", "bool(TexSymbolConfig)", "EquationRowNode(List<GreenNode>)", "bool(GreenNode?)", "String(GreenNode?)", "List<Token>(int)", "~(TapDragUpDetails)", "CustomLayoutId<int>?(int,BuildResult?)", "String(MatrixColumnAlign)", "bool(Measurement)", "~(TapUpDetails)", "String(MarkdownComponent)", "bool(MatrixSeparatorStyle)", "Iterable<Map<String,Object?>?>(List<EquationRowNode?>)", "CustomImageError(BuildContext,Object,StackTrace?)", "TableRow(MapEntry<int,Map<int,String>>)", "int(RangeCharPredicate,RangeCharPredicate)", "int(int,RangeCharPredicate)", "RangeCharPredicate(String)", "RangeCharPredicate(String,String,String)", "CharacterPredicate(String?,CharacterPredicate)", "Future<PictureInfo>()", "PictureInfo(~)", "OneFrameImageStreamCompleter()", "Future<PictureInfo>(ByteData)", "_PictureData(PictureInfo)", "double(Point,Point,Point,Point,double)", "AttributedNode?(String)", "List<Path>(String)", "~(Node0?)", "Path(PathBuilder)", "List<Gradient>()", "List<Node0>()", "AttributedNode()", "~(Node0)", "Map<String,Object?>?(EquationRowNode?)", "Parser<XmlTextEvent>()", "Parser<XmlStartElementEvent>()", "Parser<List<XmlEventAttribute>>()", "Parser<XmlEventAttribute>()", "ShiftBaseline(BuildContext,BoxConstraints)", "Parser<XmlEndElementEvent>()", "Parser<XmlCommentEvent>()", "Parser<XmlCDATAEvent>()", "Parser<XmlDeclarationEvent>()", "Parser<XmlProcessingEvent>()", "Parser<XmlDoctypeEvent>()", "ResetDimension(BuildContext,BoxConstraints)", "BorderSide(Set<WidgetState>)", "~(TextSelection,SelectionChangedCause?)", "XmlRawTextEvent(String)", "XmlStartElementEvent(String,String,List<XmlEventAttribute>,String,String)", "XmlEventAttribute(String,String,+(String,XmlAttributeType))", "+(String,XmlAttributeType)(String,String,String,+(String,XmlAttributeType))", "Widget(BuildResult?)", "+(String,XmlAttributeType)(String)", "XmlEndElementEvent(String,String,String,String)", "XmlCommentEvent(String,String,String)", "XmlCDATAEvent(String,String,String)", "XmlDeclarationEvent(String,List<XmlEventAttribute>,String,String)", "XmlProcessingEvent(String,String,String,String)", "XmlDoctypeEvent(String,String,String,DtdExternalId?,String,String?,String,String)", "DtdExternalId(String,String,+(String,XmlAttributeType))", "DtdExternalId(String,String,+(String,XmlAttributeType),String,+(String,XmlAttributeType))", "Parser<XmlEvent>(XmlEntityMapping)", "~(XmlEvent)", "Widget(BuildContext,EditableTextState)", "TransformLayer?(PaintingContext,Offset)", "MathOptions(BuildResult)", "Widget(FlutterMathException)", "CharacterPredicate(Iterable<RangeCharPredicate>)", "_NodeSpacingConf(int)", "~(bool?)", "Widget(BuildContext,FlutterMathMode,Widget?)", "TextSelection(BuildContext,MathController,TextSelection?)", "String(int)", "~([Intent?])", "Parser<XmlEvent>()"]);
  B._CheckboxState__widgetFillColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, I.WidgetState_6))
        return null;
      if (states.contains$1(0, F.WidgetState_4)) {
        this.$this._widget.toString;
        return null;
      }
      return null;
    },
    $signature: typesOffset + 25
  };
  B._CheckboxState_build_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      this.$this._widget.toString;
      t1 = M.WidgetStateProperty_resolveAs(null, states, type$.nullable_MouseCursor);
      if (t1 == null)
        t1 = null;
      return t1 == null ? M.WidgetStateMouseCursor__clickable(states) : t1;
    },
    $signature: typesOffset + 32
  };
  B._CheckboxDefaultsM3_side_closure.prototype = {
    call$1(states) {
      var t1, t2, _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, I.WidgetState_6)) {
        if (states.contains$1(0, F.WidgetState_4))
          return A.BorderSide_fqe;
        t1 = _this.$this._checkbox$_colors.onSurface;
        return new E.BorderSide(C.Color$fromARGB(97, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255), 2, F.BorderStyle_1, -1);
      }
      if (states.contains$1(0, F.WidgetState_4))
        return A.BorderSide_5XO;
      if (states.contains$1(0, S.WidgetState_7))
        return new E.BorderSide(_this.$this._checkbox$_colors.error, 2, F.BorderStyle_1, -1);
      if (states.contains$1(0, I.WidgetState_2))
        return new E.BorderSide(_this.$this._checkbox$_colors.onSurface, 2, F.BorderStyle_1, -1);
      if (states.contains$1(0, I.WidgetState_0))
        return new E.BorderSide(_this.$this._checkbox$_colors.onSurface, 2, F.BorderStyle_1, -1);
      if (states.contains$1(0, I.WidgetState_1))
        return new E.BorderSide(_this.$this._checkbox$_colors.onSurface, 2, F.BorderStyle_1, -1);
      t1 = _this.$this._checkbox$_colors;
      t2 = t1._onSurfaceVariant;
      return new E.BorderSide(t2 == null ? t1.onSurface : t2, 2, F.BorderStyle_1, -1);
    },
    $signature: typesOffset + 96
  };
  B._CheckboxDefaultsM3_fillColor_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, I.WidgetState_6)) {
        if (states.contains$1(0, F.WidgetState_4)) {
          t1 = this.$this._checkbox$_colors.onSurface;
          return C.Color$fromARGB(97, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
        return D.Color_Edl;
      }
      if (states.contains$1(0, F.WidgetState_4)) {
        if (states.contains$1(0, S.WidgetState_7))
          return this.$this._checkbox$_colors.error;
        return this.$this._checkbox$_colors.primary;
      }
      return D.Color_Edl;
    },
    $signature: typesOffset + 9
  };
  B._CheckboxDefaultsM3_checkColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, I.WidgetState_6)) {
        if (states.contains$1(0, F.WidgetState_4))
          return this.$this._checkbox$_colors.surface;
        return D.Color_Edl;
      }
      if (states.contains$1(0, F.WidgetState_4)) {
        if (states.contains$1(0, S.WidgetState_7))
          return this.$this._checkbox$_colors.onError;
        return this.$this._checkbox$_colors.onPrimary;
      }
      return D.Color_Edl;
    },
    $signature: typesOffset + 9
  };
  B._CheckboxDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var t1, _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, S.WidgetState_7)) {
        if (states.contains$1(0, I.WidgetState_2)) {
          t1 = _this.$this._checkbox$_colors.error;
          return C.Color$fromARGB(D.JSNumber_methods.round$0(25.5), t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
        if (states.contains$1(0, I.WidgetState_0)) {
          t1 = _this.$this._checkbox$_colors.error;
          return C.Color$fromARGB(20, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
        if (states.contains$1(0, I.WidgetState_1)) {
          t1 = _this.$this._checkbox$_colors.error;
          return C.Color$fromARGB(D.JSNumber_methods.round$0(25.5), t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
      }
      if (states.contains$1(0, F.WidgetState_4)) {
        if (states.contains$1(0, I.WidgetState_2)) {
          t1 = _this.$this._checkbox$_colors.onSurface;
          return C.Color$fromARGB(D.JSNumber_methods.round$0(25.5), t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
        if (states.contains$1(0, I.WidgetState_0))
          return _this.$this._checkbox$_colors.primary.withOpacity$1(0.08);
        if (states.contains$1(0, I.WidgetState_1))
          return _this.$this._checkbox$_colors.primary.withOpacity$1(0.1);
        return D.Color_Edl;
      }
      if (states.contains$1(0, I.WidgetState_2))
        return _this.$this._checkbox$_colors.primary.withOpacity$1(0.1);
      if (states.contains$1(0, I.WidgetState_0)) {
        t1 = _this.$this._checkbox$_colors.onSurface;
        return C.Color$fromARGB(20, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      if (states.contains$1(0, I.WidgetState_1)) {
        t1 = _this.$this._checkbox$_colors.onSurface;
        return C.Color$fromARGB(D.JSNumber_methods.round$0(25.5), t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      return D.Color_Edl;
    },
    $signature: typesOffset + 9
  };
  B._RadioState__widgetFillColor_closure.prototype = {
    call$1(states) {
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, I.WidgetState_6))
        return null;
      if (states.contains$1(0, F.WidgetState_4)) {
        this.$this._widget.toString;
        return null;
      }
      return null;
    },
    $signature: typesOffset + 25
  };
  B._RadioState_build_closure.prototype = {
    call$1(states) {
      var t1;
      type$.Set_WidgetState._as(states);
      this.$this._widget.toString;
      t1 = M.WidgetStateProperty_resolveAs(null, states, type$.nullable_MouseCursor);
      if (t1 == null)
        t1 = null;
      return t1 == null ? M.WidgetStateProperty_resolveAs(X._WidgetStateMouseCursor_nmO, states, type$.MouseCursor) : t1;
    },
    $signature: typesOffset + 32
  };
  B._RadioDefaultsM3_fillColor_closure.prototype = {
    call$1(states) {
      var t1, t2, _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, F.WidgetState_4)) {
        if (states.contains$1(0, I.WidgetState_6)) {
          t1 = _this.$this.get$_radio$_colors().onSurface;
          return C.Color$fromARGB(97, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
        if (states.contains$1(0, I.WidgetState_2))
          return _this.$this.get$_radio$_colors().primary;
        if (states.contains$1(0, I.WidgetState_0))
          return _this.$this.get$_radio$_colors().primary;
        if (states.contains$1(0, I.WidgetState_1))
          return _this.$this.get$_radio$_colors().primary;
        return _this.$this.get$_radio$_colors().primary;
      }
      if (states.contains$1(0, I.WidgetState_6)) {
        t1 = _this.$this.get$_radio$_colors().onSurface;
        return C.Color$fromARGB(97, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      if (states.contains$1(0, I.WidgetState_2))
        return _this.$this.get$_radio$_colors().onSurface;
      if (states.contains$1(0, I.WidgetState_0))
        return _this.$this.get$_radio$_colors().onSurface;
      if (states.contains$1(0, I.WidgetState_1))
        return _this.$this.get$_radio$_colors().onSurface;
      t1 = _this.$this.get$_radio$_colors();
      t2 = t1._onSurfaceVariant;
      return t2 == null ? t1.onSurface : t2;
    },
    $signature: typesOffset + 9
  };
  B._RadioDefaultsM3_overlayColor_closure.prototype = {
    call$1(states) {
      var t1, _this = this;
      type$.Set_WidgetState._as(states);
      if (states.contains$1(0, F.WidgetState_4)) {
        if (states.contains$1(0, I.WidgetState_2)) {
          t1 = _this.$this.get$_radio$_colors().onSurface;
          return C.Color$fromARGB(D.JSNumber_methods.round$0(25.5), t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
        }
        if (states.contains$1(0, I.WidgetState_0))
          return _this.$this.get$_radio$_colors().primary.withOpacity$1(0.08);
        if (states.contains$1(0, I.WidgetState_1))
          return _this.$this.get$_radio$_colors().primary.withOpacity$1(0.1);
        return D.Color_Edl;
      }
      if (states.contains$1(0, I.WidgetState_2))
        return _this.$this.get$_radio$_colors().primary.withOpacity$1(0.1);
      if (states.contains$1(0, I.WidgetState_0)) {
        t1 = _this.$this.get$_radio$_colors().onSurface;
        return C.Color$fromARGB(20, t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      if (states.contains$1(0, I.WidgetState_1)) {
        t1 = _this.$this.get$_radio$_colors().onSurface;
        return C.Color$fromARGB(D.JSNumber_methods.round$0(25.5), t1.toARGB32$0() >>> 16 & 255, t1.toARGB32$0() >>> 8 & 255, t1.toARGB32$0() & 255);
      }
      return D.Color_Edl;
    },
    $signature: typesOffset + 9
  };
  B._SelectableTextState__onControllerChanged_closure.prototype = {
    call$0() {
      this.$this._selectable_text$_showSelectionHandles = this.showSelectionHandles;
    },
    $signature: 0
  };
  B._SelectableTextState__handleSelectionChanged_closure.prototype = {
    call$0() {
      this.$this._selectable_text$_showSelectionHandles = this.willShowSelectionHandles;
    },
    $signature: 0
  };
  B._SelectableTextState_build_closure.prototype = {
    call$0() {
      this.$this.get$_selectable_text$_effectiveFocusNode().requestFocus$0();
    },
    $signature: 0
  };
  B.NetworkImage__loadAsync_loadViaDecode.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageStreamCompleter),
        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.chunkEvents;
              $async$temp1 = W;
              $async$temp2 = new C._ControllerStream(t1, C._instanceType(t1)._eval$1("_ControllerStream<1>"));
              $async$temp3 = C;
              $async$goto = 3;
              return C._asyncAwait($async$self.$this._fetchImageBytes$1($async$self.decode), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.MultiFrameImageStreamCompleter$($async$temp2, $async$temp3.Future_Future$value($async$result, type$.Codec), $async$self.key.url, null, 1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 141
  };
  B.NetworkImage__loadAsync_loadViaImgElement.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageStreamCompleter),
        $async$returnValue, $async$self = this, t2, imageElement, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              imageElement = B._imgElementFactory();
              t1 = $async$self.key.url;
              imageElement.src = t1;
              $async$goto = 3;
              return C._asyncAwait(C.promiseToFuture(type$.JSObject._as(imageElement.decode()), type$.nullable_Object), $async$call$0);
            case 3:
              // returning from await.
              t2 = B.OneFrameImageStreamCompleter$(C.Future_Future$value(new B.WebImageInfo(imageElement, t1), type$.ImageInfo), null);
              t2.debugLabel = t1;
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 141
  };
  B.NetworkImage__loadAsync_closure.prototype = {
    call$2(bytes, total) {
      this.chunkEvents.add$1(0, new W.ImageChunkEvent(bytes, total));
    },
    $signature: 142
  };
  B.NetworkImage__fetchImageBytes_closure.prototype = {
    call$1(e) {
      var t1, $status, accepted, unknownRedirect, success, t2;
      type$.JSObject._as(e);
      t1 = this.request;
      $status = C._asInt(t1.status);
      accepted = $status >= 200 && $status < 300;
      unknownRedirect = $status > 307 && $status < 400;
      success = accepted || $status === 0 || $status === 304 || unknownRedirect;
      t2 = this.completer;
      if (success)
        t2.complete$1(0, t1);
      else {
        t1 = this.resolved;
        t2.completeError$1(new B.NetworkImageLoadException("HTTP request failed, statusCode: " + $status + ", " + t1.toString$0(0), t1));
      }
    },
    $signature: 29
  };
  B.NetworkImage__fetchImageBytes_closure0.prototype = {
    call$1(e) {
      var t1;
      type$.JSObject._as(e);
      t1 = this.resolved;
      return this.completer.completeError$1(new B.NetworkImageLoadException("HTTP request failed, statusCode: " + C._asInt(this.request.status) + ", " + t1.toString$0(0), t1));
    },
    $signature: 39
  };
  B._ForwardingImageStreamCompleter_closure.prototype = {
    call$1(value) {
      var t1, t2;
      type$.ImageStreamCompleter._as(value);
      t1 = this.$this;
      t1.resolved = true;
      if (t1.__network_image_web$_disposed) {
        value.addListener$1(0, new C.ImageStreamListener(new B._ForwardingImageStreamCompleter__closure(), null, null));
        value._maybeDispose$0();
        return;
      }
      t1.___ForwardingImageStreamCompleter_completer_F !== $ && C.throwLateFieldAI("completer");
      t1.___ForwardingImageStreamCompleter_completer_F = value;
      if (value._image_stream$_disposed)
        C.throwExpression(C.StateError$("Stream has been disposed.\nAn ImageStream is considered disposed once at least one listener has been added and subsequently all listeners have been removed and no handles are outstanding from the keepAlive method.\nTo resolve this error, maintain at least one listener on the stream, or create an ImageStreamCompleterHandle from the keepAlive method, or create a new stream for the image."));
      t2 = new A2.ImageStreamCompleterHandle(value);
      t2.ImageStreamCompleterHandle$_$1(value);
      t1.___ForwardingImageStreamCompleter_handle_F !== $ && C.throwLateFieldAI("handle");
      t1.___ForwardingImageStreamCompleter_handle_F = t2;
      value.addListener$1(0, new C.ImageStreamListener(new B._ForwardingImageStreamCompleter__closure0(t1), new B._ForwardingImageStreamCompleter__closure1(t1), new B._ForwardingImageStreamCompleter__closure2(t1)));
    },
    $signature: 296
  };
  B._ForwardingImageStreamCompleter__closure.prototype = {
    call$2(__wc0_formal, __wc1_formal) {
      type$.ImageInfo._as(__wc0_formal);
      C._asBool(__wc1_formal);
    },
    $signature: 66
  };
  B._ForwardingImageStreamCompleter__closure0.prototype = {
    call$2(image, synchronousCall) {
      type$.ImageInfo._as(image);
      C._asBool(synchronousCall);
      this.$this.setImage$1(image);
    },
    $signature: 66
  };
  B._ForwardingImageStreamCompleter__closure1.prototype = {
    call$1($event) {
      this.$this.reportImageChunkEvent$1(type$.ImageChunkEvent._as($event));
    },
    $signature: 298
  };
  B._ForwardingImageStreamCompleter__closure2.prototype = {
    call$2(exception, stackTrace) {
      this.$this.reportError$2$exception$stack(type$.Object._as(exception), type$.nullable_StackTrace._as(stackTrace));
    },
    $signature: 53
  };
  B._ForwardingImageStreamCompleter_closure0.prototype = {
    call$2(error, stack) {
      type$.Object._as(error);
      type$.StackTrace._as(stack);
      this.$this.reportError$5$context$exception$informationCollector$silent$stack(C.ErrorDescription$("resolving an image stream completer"), error, this.informationCollector, true, stack);
    },
    $signature: 18
  };
  B.OneFrameImageStreamCompleter_closure.prototype = {
    call$2(error, stack) {
      type$.Object._as(error);
      type$.StackTrace._as(stack);
      this.$this.reportError$5$context$exception$informationCollector$silent$stack(C.ErrorDescription$("resolving a single-frame image stream"), error, this.informationCollector, true, stack);
    },
    $signature: 18
  };
  B.RenderFittedBox_hitTestChildren_closure.prototype = {
    call$2(result, position) {
      return this.$this.super$RenderProxyBoxMixin$hitTestChildren(result, position);
    },
    $signature: 8
  };
  B.ToggleableStateMixin__handleTapDown_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__downPosition = this.details.localPosition;
    },
    $signature: 0
  };
  B.ToggleableStateMixin__handleTapEnd_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__downPosition = null;
    },
    $signature: 0
  };
  B.ToggleableStateMixin__handleFocusHighlightChanged_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__focused = this.focused;
    },
    $signature: 0
  };
  B.ToggleableStateMixin__handleHoverChanged_closure.prototype = {
    call$0() {
      this.$this.ToggleableStateMixin__hovering = this.hovering;
    },
    $signature: 0
  };
  B.AccentNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1;
      type$.BoxConstraints._as(constraints);
      t1 = this.options;
      t1 = new B.Measurement(t1.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(t1);
      return B.ResetDimension$(B.ShiftBaseline$(this._box_0.accentSymbolWidget, -t1, 1), 0, null, G.CrossAxisAlignment_2, constraints.minWidth);
    },
    $signature: typesOffset + 95
  };
  B.AccentNode_buildWidget_closure0.prototype = {
    call$2(context, constraints) {
      var t1, defaultRuleThickness, accentRenderConfig, t2, t3, svgWidget, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this.label;
      if (t1 === "\xaf") {
        t1 = this.options;
        defaultRuleThickness = new B.Measurement(t1.get$fontMetrics().defaultRuleThickness, A.Unit_16).toLpUnder$1(t1);
        return new E.Padding(new C.EdgeInsets(0, 0, 0, 3 * defaultRuleThickness), E.Container$(_null, _null, D.Clip_0, t1.color, _null, _null, _null, defaultRuleThickness, _null, _null, _null, _null, _null, constraints.minWidth), _null);
      } else {
        accentRenderConfig = A.Map_8zs6u.$index(0, t1);
        if (accentRenderConfig == null || accentRenderConfig.overImageName == null)
          return E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
        t2 = accentRenderConfig.overImageName;
        t2.toString;
        t3 = this.options;
        svgWidget = B.strechySvgSpan(t2, constraints.minWidth, t3);
        if (t1 === "\u23de")
          return new E.Padding(new C.EdgeInsets(0, 0, 0, new B.Measurement(0.1, A.Unit_16).toLpUnder$1(t3)), svgWidget, _null);
        else
          return svgWidget;
      }
    },
    $signature: 60
  };
  B.AccentNode_buildWidget_closure1.prototype = {
    call$1(width) {
      return new C.BoxConstraints(C._asDouble(width) - 2 * this.skew, 1 / 0, 0, 1 / 0);
    },
    $signature: 76
  };
  B.AccentUnderNode_buildWidget_closure0.prototype = {
    call$1(width) {
      return new C.BoxConstraints(C._asDouble(width), 1 / 0, 0, 1 / 0);
    },
    $signature: 76
  };
  B.AccentUnderNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1, defaultRuleThickness, accentRenderConfig, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this.label;
      if (t1 === "\xaf") {
        t1 = this.options;
        defaultRuleThickness = new B.Measurement(t1.get$fontMetrics().defaultRuleThickness, A.Unit_16).toLpUnder$1(t1);
        return new E.Padding(new C.EdgeInsets(0, 3 * defaultRuleThickness, 0, 0), E.Container$(_null, _null, D.Clip_0, t1.color, _null, _null, _null, defaultRuleThickness, _null, _null, _null, _null, _null, constraints.minWidth), _null);
      } else {
        accentRenderConfig = A.Map_8zs6u.$index(0, t1);
        if (accentRenderConfig == null || accentRenderConfig.underImageName == null)
          return E.Container$(_null, _null, D.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
        t1 = accentRenderConfig.underImageName;
        t1.toString;
        return B.strechySvgSpan(t1, constraints.minWidth, this.options);
      }
    },
    $signature: 60
  };
  B.EnclosureNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4, t5, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = C.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth);
      t2 = C.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight);
      t3 = this.options;
      t4 = new B.Measurement(0.046, A.Unit_16).toLpUnder$1(t3);
      t5 = this.$this.bordercolor;
      return H.CustomPaint$(_null, _null, _null, new B.LinePainter(0, 1, 1, 0, t4, t5 == null ? t3.color : t5, _null), new C.Size(t1, t2));
    },
    $signature: typesOffset + 40
  };
  B.EnclosureNode_buildWidget_closure0.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4, t5, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = C.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth);
      t2 = C.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight);
      t3 = this.options;
      t4 = new B.Measurement(0.046, A.Unit_16).toLpUnder$1(t3);
      t5 = this.$this.bordercolor;
      return H.CustomPaint$(_null, _null, _null, new B.LinePainter(0, 0, 1, 1, t4, t5 == null ? t3.color : t5, _null), new C.Size(t1, t2));
    },
    $signature: typesOffset + 40
  };
  B.EquationArrayNode_buildWidget_closure.prototype = {
    call$1(e) {
      return type$.Measurement._as(e).toLpUnder$1(this.options);
    },
    $signature: typesOffset + 33
  };
  B.EquationArrayNode_buildWidget_closure0.prototype = {
    call$1(e) {
      return type$.nullable_BuildResult._as(e).widget;
    },
    $signature: typesOffset + 102
  };
  B.EquationArrayNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.EquationRowNode._as(e).toJson$0();
    },
    $signature: typesOffset + 34
  };
  B.EquationArrayNode_toJson_closure0.prototype = {
    call$1(e) {
      return type$.MatrixSeparatorStyle._as(e)._enumToString$0();
    },
    $signature: typesOffset + 19
  };
  B.EquationArrayNode_toJson_closure1.prototype = {
    call$1(e) {
      var t1;
      type$.Measurement._as(e);
      t1 = A.Map_Dgfp9.$index(0, e.unit);
      t1.toString;
      return C.S(e.value) + t1;
    },
    $signature: typesOffset + 36
  };
  B.LeftRightNode_buildWidget_closure.prototype = {
    call$1(index) {
      var t1, t2, t3, t4, t5, _this = this;
      if (D.JSInt_methods.$mod(index, 2) === 0) {
        t1 = _this.options;
        t2 = _this.numElements;
        if (index === t2 - 1)
          t3 = 0;
        else {
          t3 = index === 0 ? A.AtomType_4 : A.AtomType_3;
          t4 = _this.$this.body;
          t5 = D.JSInt_methods._tdivFast$1(index + 1, 2);
          if (!(t5 < t4.length))
            return C.ioore(t4, t5);
          t5 = t4[t5].overrideType;
          t4 = t5 == null ? A.AtomType_0 : t5;
          t4 = B.getSpacingSize(t3, t4, t1.style).toLpUnder$1(t1);
          t3 = t4;
        }
        return B.LineElement$(false, false, new B.LayoutBuilderPreserveBaseline(new B.LeftRightNode_buildWidget__closure(_this.$this, index, t2, t1), null), new B.LeftRightNode_buildWidget__closure0(_this.a, t1), t3);
      } else {
        t1 = _this.$this.body;
        t2 = D.JSInt_methods._tdivFast$1(index, 2);
        if (!(t2 < t1.length))
          return C.ioore(t1, t2);
        t1 = t1[t2].overrideType;
        if (t1 == null)
          t1 = A.AtomType_0;
        t3 = index === _this.numElements - 2 ? A.AtomType_5 : A.AtomType_3;
        t4 = _this.options;
        t4 = B.getSpacingSize(t1, t3, t4.style).toLpUnder$1(t4);
        t3 = _this.childBuildResults;
        if (!(t2 < t3.length))
          return C.ioore(t3, t2);
        return B.LineElement$(false, false, t3[t2].widget, null, t4);
      }
    },
    $signature: typesOffset + 44
  };
  B.LeftRightNode_buildWidget__closure0.prototype = {
    call$2(height, depth) {
      var t1 = this.a,
        delta = Math.max(C._asDouble(height) - t1, C._asDouble(depth) + t1);
      return new C.BoxConstraints(0, 1 / 0, Math.max(delta / 500 * 901, 2 * delta - A.Measurement_5_Unit_0.toLpUnder$1(this.options)), 1 / 0);
    },
    $signature: 301
  };
  B.LeftRightNode_buildWidget__closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, _this = this;
      type$.BoxConstraints._as(constraints);
      t1 = _this.index;
      if (t1 === 0)
        t1 = _this.$this.leftDelim;
      else {
        t2 = _this.$this;
        if (t1 === _this.numElements - 1)
          t1 = t2.rightDelim;
        else {
          t2 = t2.middle;
          t1 = D.JSInt_methods._tdivFast$1(t1, 2) - 1;
          if (!(t1 >= 0 && t1 < t2.length))
            return C.ioore(t2, t1);
          t1 = t2[t1];
        }
      }
      return B.buildCustomSizedDelimWidget(t1, constraints.minHeight, _this.options);
    },
    $signature: 60
  };
  B.LeftRightNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.EquationRowNode._as(e).toJson$0();
    },
    $signature: typesOffset + 34
  };
  B.buildCustomSizedDelimWidget_closure.prototype = {
    call$1(element) {
      type$.DelimiterConf._as(element);
      return B.getHeightForDelim(this.delim, element.font.get$fontName(), this.options, element.style) > this.minDelimiterHeight;
    },
    $signature: typesOffset + 20
  };
  B.MatrixNode_MatrixNode_closure.prototype = {
    call$1(row) {
      return J.get$length$asx(type$.List_nullable_EquationRowNode._as(row));
    },
    $signature: typesOffset + 46
  };
  B.MatrixNode_MatrixNode_closure0.prototype = {
    call$1(row) {
      return B.ListExtension_extendToByFill(type$.List_nullable_EquationRowNode._as(row), this.cols, null, type$.nullable_EquationRowNode);
    },
    $signature: typesOffset + 37
  };
  B.MatrixNode_buildWidget_closure.prototype = {
    call$1(e) {
      return type$.Measurement._as(e).toLpUnder$1(this.options);
    },
    $signature: typesOffset + 33
  };
  B.MatrixNode_buildWidget_closure0.prototype = {
    call$2(index, result) {
      return result == null ? null : B.CustomLayoutId$(result.widget, index, type$.int);
    },
    $signature: typesOffset + 55
  };
  B.MatrixNode_computeChildren_closure.prototype = {
    call$1(row) {
      return type$.List_nullable_EquationRowNode._as(row);
    },
    $signature: typesOffset + 37
  };
  B.MatrixNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.MatrixColumnAlign._as(e)._enumToString$0();
    },
    $signature: typesOffset + 56
  };
  B.MatrixNode_toJson_closure0.prototype = {
    call$1(e) {
      return type$.MatrixSeparatorStyle._as(e)._enumToString$0();
    },
    $signature: typesOffset + 19
  };
  B.MatrixNode_toJson_closure1.prototype = {
    call$1(element) {
      return type$.Measurement._as(element).value === 0;
    },
    $signature: typesOffset + 57
  };
  B.MatrixNode_toJson_closure2.prototype = {
    call$1(e) {
      var t1;
      type$.Measurement._as(e);
      t1 = A.Map_Dgfp9.$index(0, e.unit);
      t1.toString;
      return C.S(e.value) + t1;
    },
    $signature: typesOffset + 36
  };
  B.MatrixNode_toJson_closure3.prototype = {
    call$1(element) {
      return type$.MatrixSeparatorStyle._as(element) === A.MatrixSeparatorStyle_2;
    },
    $signature: typesOffset + 60
  };
  B.MatrixNode_toJson_closure4.prototype = {
    call$1(e) {
      return type$.MatrixSeparatorStyle._as(e)._enumToString$0();
    },
    $signature: typesOffset + 19
  };
  B.MatrixNode_toJson_closure5.prototype = {
    call$1(e) {
      return J.map$1$1$ax(type$.List_nullable_EquationRowNode._as(e), new B.MatrixNode_toJson__closure(), type$.nullable_Map_of_String_and_nullable_Object);
    },
    $signature: typesOffset + 61
  };
  B.MatrixNode_toJson__closure.prototype = {
    call$1(e) {
      type$.nullable_EquationRowNode._as(e);
      return e == null ? null : e.toJson$0();
    },
    $signature: typesOffset + 83
  };
  B.MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure.prototype = {
    call$1(index) {
      var t2, t3, _this = this,
        t1 = _this.$this,
        col = D.JSInt_methods.$mod(index, t1.cols);
      switch (J.$index$asx(t1.columnAligns, col).index) {
        case 0:
          t1 = _this.colPos;
          if (!(col >= 0 && col < t1.length))
            return C.ioore(t1, col);
          return t1[col];
        case 2:
          t1 = _this.colPos;
          if (!(col >= 0 && col < t1.length))
            return C.ioore(t1, col);
          t1 = t1[col];
          t2 = _this.colWidths;
          if (!(col < t2.length))
            return C.ioore(t2, col);
          t2 = t2[col];
          t3 = _this.childWidths;
          if (!(index < t3.length))
            return C.ioore(t3, index);
          return t1 + t2 - t3[index];
        case 1:
        default:
          t1 = _this.colPos;
          if (!(col >= 0 && col < t1.length))
            return C.ioore(t1, col);
          t1 = t1[col];
          t2 = _this.colWidths;
          if (!(col < t2.length))
            return C.ioore(t2, col);
          t2 = t2[col];
          t3 = _this.childWidths;
          if (!(index < t3.length))
            return C.ioore(t3, index);
          return t1 + (t2 - t3[index]) / 2;
      }
    },
    $signature: 77
  };
  B.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure.prototype = {
    call$1(index) {
      var t1,
        height = this.childrenBaselines.$index(0, index);
      if (height != null) {
        t1 = this.childrenHeights.$index(0, index);
        t1.toString;
        t1 -= height;
      } else
        t1 = 0;
      return t1;
    },
    $signature: 77
  };
  B.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0.prototype = {
    call$1(index) {
      var t2,
        row = D.JSInt_methods.$tdiv(index, this.$this.cols),
        t1 = this.rowBaselinePos;
      if (!(row >= 0 && row < t1.length))
        return C.ioore(t1, row);
      t1 = t1[row];
      t2 = this.childHeights;
      if (!(index < t2.length))
        return C.ioore(t2, index);
      return t1 - t2[index];
    },
    $signature: 77
  };
  B.SqrtNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      type$.BoxConstraints._as(constraints);
      return B.sqrtSvg(constraints.minWidth, constraints.minHeight, this.options);
    },
    $signature: 60
  };
  B.getSqrtAdvanceWidth_closure.prototype = {
    call$1(element) {
      type$.DelimiterConf._as(element);
      return B.getHeightForDelim("\u221a", element.font.get$fontName(), this.options, element.style) > this.minDelimiterHeight;
    },
    $signature: typesOffset + 20
  };
  B.sqrtSvg_closure.prototype = {
    call$1(element) {
      type$.DelimiterConf._as(element);
      return B.getHeightForDelim("\u221a", element.font.get$fontName(), this.options, element.style) > this.minDelimiterHeight;
    },
    $signature: typesOffset + 20
  };
  B.StretchyOpNode_buildWidget_closure0.prototype = {
    call$1(width) {
      return new C.BoxConstraints(C._asDouble(width) + new B.Measurement(1, A.Unit_16).toLpUnder$1(this.options), 1 / 0, 0, 1 / 0);
    },
    $signature: 76
  };
  B.StretchyOpNode_buildWidget_closure.prototype = {
    call$2(context, constraints) {
      var t1, t2, t3, t4;
      type$.BoxConstraints._as(constraints);
      t1 = this.options;
      t2 = new B.Measurement(t1.get$fontMetrics().xHeight, A.Unit_16).toLpUnder$1(t1);
      t3 = this.$this.symbol;
      t4 = A.Map_mkQGg.$index(0, t3);
      t3 = t4 == null ? t3 : t4;
      return B.ShiftBaseline$(B.strechySvgSpan(t3, constraints.minWidth, t1), t2, 0.5);
    },
    $signature: typesOffset + 88
  };
  B.StyleNode_toJson_closure.prototype = {
    call$1(e) {
      return type$.GreenNode._as(e).toJson$0();
    },
    $signature: typesOffset + 38
  };
  B.SymbolNode_buildWidget_closure.prototype = {
    call$1(code) {
      var ch = C.Primitives_stringFromCharCode(C._asInt(code)),
        t1 = A.Map_3Abhf.$index(0, ch);
      t1 = t1 == null ? null : C._setArrayType(t1.split(""), type$.JSArray_String);
      return t1 == null ? C._setArrayType([ch], type$.JSArray_String) : t1;
    },
    $signature: 303
  };
  B.stringToNode_closure.prototype = {
    call$1(ch) {
      return new B.SymbolNode(C._asString(ch), false, null, null, this.mode);
    },
    $signature: typesOffset + 15
  };
  B.SlotableNode_computeWidth_closure.prototype = {
    call$1(child) {
      var t1;
      C._instanceType(this.$this)._eval$1("SlotableNode.T")._as(child);
      t1 = child == null ? null : child.get$editingWidth() - 1;
      return t1 == null ? 0 : t1;
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("int(SlotableNode.T)");
    }
  };
  B.TransparentNode_computeWidth_closure.prototype = {
    call$1(child) {
      return type$.GreenNode._as(child).get$editingWidth();
    },
    $signature: typesOffset + 21
  };
  B.TransparentNode_computeChildPositions_closure.prototype = {
    call$1(index) {
      var t1;
      if (index === 0)
        return this._box_0.curPos;
      t1 = this._box_0;
      return t1.curPos = t1.curPos + J.$index$asx(this.$this.children, index - 1).get$editingWidth();
    },
    $signature: 34
  };
  B.TransparentNode_buildWidget_closure.prototype = {
    call$1(result) {
      var t1;
      type$.nullable_BuildResult._as(result);
      t1 = result.results;
      return t1 == null ? C._setArrayType([result], type$.JSArray_BuildResult) : t1;
    },
    $signature: typesOffset + 22
  };
  B.TransparentNode_flattenedChildList_closure.prototype = {
    call$1(child) {
      type$.GreenNode._as(child);
      return child instanceof B.StyleNode ? child.get$flattenedChildList() : C._setArrayType([child], type$.JSArray_GreenNode);
    },
    $signature: typesOffset + 23
  };
  B.EquationRowNode_computeWidth_closure.prototype = {
    call$1(child) {
      return type$.GreenNode._as(child).get$editingWidth();
    },
    $signature: typesOffset + 21
  };
  B.EquationRowNode_computeChildPositions_closure.prototype = {
    call$1(index) {
      var t1;
      if (index === 0)
        return this._box_0.curPos;
      t1 = this._box_0;
      return t1.curPos = t1.curPos + J.$index$asx(this.$this.children, index - 1).get$editingWidth();
    },
    $signature: 34
  };
  B.EquationRowNode_flattenedChildList_closure.prototype = {
    call$1(child) {
      type$.GreenNode._as(child);
      return child instanceof B.StyleNode ? child.get$flattenedChildList() : C._setArrayType([child], type$.JSArray_GreenNode);
    },
    $signature: typesOffset + 23
  };
  B.EquationRowNode_computeCaretPositions_closure.prototype = {
    call$1(index) {
      var t1, t2, t3, t4;
      if (index === 0)
        return this._box_0.curPos;
      t1 = this._box_0;
      t2 = t1.curPos;
      t3 = this.$this.get$flattenedChildList();
      t4 = index - 1;
      if (!(t4 >= 0 && t4 < t3.length))
        return C.ioore(t3, t4);
      return t1.curPos = t2 + t3[t4].get$editingWidth();
    },
    $signature: 34
  };
  B.EquationRowNode_buildWidget_closure.prototype = {
    call$1(result) {
      var t1;
      type$.nullable_BuildResult._as(result);
      t1 = result.results;
      return t1 == null ? C._setArrayType([result], type$.JSArray_BuildResult) : t1;
    },
    $signature: typesOffset + 22
  };
  B.EquationRowNode_buildWidget_closure0.prototype = {
    call$1(e) {
      return type$.BuildResult._as(e).options;
    },
    $signature: typesOffset + 116
  };
  B.EquationRowNode_buildWidget_closure1.prototype = {
    call$1(index) {
      var e, t2, t3,
        t1 = this.$this.get$flattenedChildList();
      if (!(index < t1.length))
        return C.ioore(t1, index);
      e = t1[index];
      t1 = e.get$leftType();
      t2 = e.get$rightType();
      t3 = this.flattenedChildOptions;
      if (!(index < t3.length))
        return C.ioore(t3, index);
      return new B._NodeSpacingConf(t1, t2, t3[index], 0);
    },
    $signature: typesOffset + 119
  };
  B.EquationRowNode_buildWidget_closure2.prototype = {
    call$2(prev, curr) {
      var t2, _null = null,
        t1 = prev == null;
      if ((t1 ? _null : prev.rightType) === A.AtomType_2)
        t2 = A.Set_APva8.contains$1(0, curr == null ? _null : curr.leftType);
      else
        t2 = false;
      if (t2) {
        prev.rightType = A.AtomType_0;
        if (prev.leftType === A.AtomType_2)
          prev.leftType = A.AtomType_0;
      } else {
        if ((curr == null ? _null : curr.leftType) === A.AtomType_2) {
          t2 = A.Set_ifAq1.contains$1(0, t1 ? _null : prev.rightType);
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          curr.leftType = A.AtomType_0;
          if (curr.rightType === A.AtomType_2)
            curr.rightType = A.AtomType_0;
        }
      }
    },
    $signature: typesOffset + 24
  };
  B.EquationRowNode_buildWidget_closure3.prototype = {
    call$2(prev, curr) {
      var t1, t2, t3;
      if (prev != null && curr != null) {
        t1 = prev.rightType;
        t2 = curr.leftType;
        t3 = curr.options;
        prev.spacingAfter = B.getSpacingSize(t1, t2, t3.style).toLpUnder$1(t3);
      }
    },
    $signature: typesOffset + 24
  };
  B.EquationRowNode_buildWidget_closure4.prototype = {
    call$3(context, mode, child) {
      var t1, t2, _this = this;
      type$.BuildContext._as(context);
      type$.FlutterMathMode._as(mode);
      type$.nullable_Widget._as(child);
      if (mode === A.FlutterMathMode_2) {
        t1 = _this.$this._syntax_tree$_key;
        t1.toString;
        return B.Line$(_this.lineChildren, t1);
      }
      t1 = _this.$this;
      t2 = type$.TextSelection;
      return B.ProxyProvider$(B.Selector2$(new B.EquationRowNode_buildWidget__closure(t1, _this.lineChildren, _this.options), new B.EquationRowNode_buildWidget__closure0(t1), t2, type$.Tuple2_LayerLink_LayerLink, type$.Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink), new B.EquationRowNode_buildWidget__closure1(), new B.EquationRowNode_buildWidget__closure2(t1), type$.MathController, t2);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 121
  };
  B.EquationRowNode_buildWidget__closure1.prototype = {
    call$1(_) {
      return D.TextSelection_kab;
    },
    $signature: 304
  };
  B.EquationRowNode_buildWidget__closure2.prototype = {
    call$3(context, controller, _) {
      var selection, t1, t2, t3;
      type$.MathController._as(controller);
      type$.nullable_TextSelection._as(_);
      selection = controller.get$selection();
      t1 = selection.get$baseOffset(selection);
      t2 = this.$this;
      t3 = t2.PositionDependentMixin_range;
      t3 = B.IntExt_clampInt(t1, t3.start - 1, t3.end + 1);
      t1 = selection.get$extentOffset(selection);
      t2 = t2.PositionDependentMixin_range;
      return selection.copyWith$2$baseOffset$extentOffset(t3, B.IntExt_clampInt(t1, t2.start - 1, t2.end + 1));
    },
    $signature: typesOffset + 122
  };
  B.EquationRowNode_buildWidget__closure0.prototype = {
    call$3(context, selection, handleLayerLinks) {
      var t1, t2, start, end, caretStart, caretEnd, caretSelection, startHandleLayerLink, endHandleLayerLink;
      type$.TextSelection._as(selection);
      type$.Tuple2_LayerLink_LayerLink._as(handleLayerLinks);
      t1 = this.$this;
      t2 = t1.PositionDependentMixin_range.start - 1;
      start = selection.start - t2;
      end = selection.end - t2;
      t2 = type$.int;
      caretStart = D.JSNumber_methods.ceil$0(B.NumListSearchExt_slotFor(t1.get$caretPositions(), start, t2));
      caretEnd = D.JSNumber_methods.floor$0(B.NumListSearchExt_slotFor(t1.get$caretPositions(), end, t2));
      if (caretStart <= caretEnd)
        caretSelection = selection.baseOffset <= selection.extentOffset ? C.TextSelection$(D.TextAffinity_1, caretStart, caretEnd, false) : C.TextSelection$(D.TextAffinity_1, caretEnd, caretStart, false);
      else
        caretSelection = D.TextSelection_kab;
      startHandleLayerLink = D.JSArray_methods.contains$1(t1.get$caretPositions(), start) ? handleLayerLinks.item1 : null;
      endHandleLayerLink = D.JSArray_methods.contains$1(t1.get$caretPositions(), end) ? handleLayerLinks.item2 : null;
      return new B.Tuple3(caretSelection, startHandleLayerLink, endHandleLayerLink, type$.Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink);
    },
    $signature: typesOffset + 41
  };
  B.EquationRowNode_buildWidget__closure.prototype = {
    call$3(context, conf, _) {
      var value, t1, t2, t3;
      type$.Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink._as(conf);
      value = Z.Provider_of(context, true, type$.SelectionStyle);
      t1 = this.$this;
      t2 = t1._syntax_tree$_key;
      t3 = C.InheritedModel_inheritFrom(context, null, type$.MediaQuery).data;
      return new B.EditableLine(J.get$value$z(Z.Provider_of(context, true, type$.Wrapper_AnimationController)), value.get$cursorColor(), value.get$cursorOffset(), value.get$cursorRadius(), value.get$cursorWidth(), value.get$cursorHeight(), t3.devicePixelRatio, value.get$hintingColor(), t1, value.get$paintCursorAboveText(), this.options.fontSize, conf.item1, value.get$selectionColor(), value.get$showCursor(), conf.item2, conf.item3, this.lineChildren, t2);
    },
    $signature: typesOffset + 42
  };
  B.EquationRowNode_toJson_closure.prototype = {
    call$1(child) {
      return type$.GreenNode._as(child).toJson$0();
    },
    $signature: typesOffset + 38
  };
  B.textFontMetrics_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asString(key), J.$index$asx(type$.List_double._as(value), 0), type$.MapEntry_String_double);
    },
    $signature: 78
  };
  B.scriptFontMetrics_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asString(key), J.$index$asx(type$.List_double._as(value), 1), type$.MapEntry_String_double);
    },
    $signature: 78
  };
  B.scriptscriptFontMetrics_closure.prototype = {
    call$2(key, value) {
      return new C.MapEntry(C._asString(key), J.$index$asx(type$.List_double._as(value), 2), type$.MapEntry_String_double);
    },
    $signature: 78
  };
  B.allBlocks_closure.prototype = {
    call$1(entry) {
      return type$.MapEntry_of_String_and_List_List_int._as(entry).value;
    },
    $signature: 306
  };
  B.supportedCodepoint_closure.prototype = {
    call$1(block) {
      var t1, t2;
      type$.List_int._as(block);
      t1 = this.codepoint;
      t2 = J.getInterceptor$asx(block);
      return t1 >= t2.$index(block, 0) && t1 <= t2.$index(block, 1);
    },
    $signature: 307
  };
  B.environments_closure.prototype = {
    call$2(key, value) {
      var t1;
      type$.List_String._as(key);
      type$.EnvSpec._as(value);
      for (t1 = J.get$iterator$ax(key); t1.moveNext$0();)
        $._environments.$indexSet(0, t1.get$current(t1), value);
    },
    $signature: typesOffset + 43
  };
  B._casesHandler_closure.prototype = {
    call$1(cells) {
      var t1, t2, t3, i, _null = null;
      type$.List_EquationRowNode._as(cells);
      t1 = type$.JSArray_GreenNode;
      t2 = C._setArrayType([B.SpaceNode$alignerOrSpacer()], t1);
      t3 = J.getInterceptor$asx(cells);
      if (t3.get$length(cells) >= 1)
        D.JSArray_methods.addAll$1(t2, t3.$index(cells, 0).children);
      if (t3.get$length(cells) > 1)
        t2.push(B.SpaceNode$alignerOrSpacer());
      if (t3.get$length(cells) > 1)
        t2.push(B.SpaceNode$(_null, false, A.Measurement_0_Unit_0, A.Mode_0, A.Measurement_0_Unit_0, new B.Measurement(1, A.Unit_13)));
      for (i = 1; i < t3.get$length(cells); ++i) {
        D.JSArray_methods.add$1(t2, new B.SpaceNode(A.Measurement_0_Unit_0, A.Measurement_0_Unit_0, A.Measurement_0_Unit_0, _null, true, A.Mode_0, true));
        D.JSArray_methods.addAll$1(t2, t3.$index(cells, i).children);
        D.JSArray_methods.add$1(t2, new B.SpaceNode(A.Measurement_0_Unit_0, A.Measurement_0_Unit_0, A.Measurement_0_Unit_0, _null, true, A.Mode_0, true));
      }
      t3 = this.context.envName;
      if (t3 === "dcases" || t3 === "drcases")
        return B.EquationRowNode$(C._setArrayType([B.StyleNode$(t2, new B.OptionsDiff(A.MathStyle_0, _null, _null, _null, _null))], t1), _null);
      else
        return B.EquationRowNode$(t2, _null);
    },
    $signature: typesOffset + 13
  };
  B._alignedHandler_closure.prototype = {
    call$1(cells) {
      var t1 = J.expand$1$1$ax(type$.List_EquationRowNode._as(cells), new B._alignedHandler__closure(), type$.GreenNode);
      return B.EquationRowNode$(C.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), null);
    },
    $signature: typesOffset + 13
  };
  B._alignedHandler__closure.prototype = {
    call$1(cell) {
      var t1 = C.List_List$of(type$.EquationRowNode._as(cell).children, true, type$.GreenNode);
      t1.push(B.SpaceNode$alignerOrSpacer());
      return t1;
    },
    $signature: typesOffset + 26
  };
  B._alignedAtHandler_closure.prototype = {
    call$1(e) {
      return B.assertNodeType(type$.GreenNode._as(e), type$.SymbolNode).symbol;
    },
    $signature: typesOffset + 27
  };
  B._alignedAtHandler_closure0.prototype = {
    call$1(cells) {
      var t1, t2;
      type$.List_EquationRowNode._as(cells);
      t1 = J.getInterceptor$asx(cells);
      t2 = 2 * this.cols;
      if (t1.get$length(cells) > t2)
        throw C.wrapException(B.ParseException$("Too many math in a row: expected " + t2 + ", but got " + t1.get$length(cells), null));
      t1 = t1.expand$1$1(cells, new B._alignedAtHandler__closure(), type$.GreenNode);
      return B.EquationRowNode$(C.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), null);
    },
    $signature: typesOffset + 13
  };
  B._alignedAtHandler__closure.prototype = {
    call$1(cell) {
      var t1 = C.List_List$of(type$.EquationRowNode._as(cell).children, true, type$.GreenNode);
      t1.push(B.SpaceNode$alignerOrSpacer());
      return t1;
    },
    $signature: typesOffset + 26
  };
  B.RegisterFunctionExt_registerFunctions_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      type$.List_String._as(key);
      type$.FunctionSpec_GreenNode._as(value);
      for (t1 = J.get$iterator$ax(key), t2 = this._this; t1.moveNext$0();)
        t2.$indexSet(0, t1.get$current(t1), value);
    },
    $signature: typesOffset + 47
  };
  B._charHandler_closure.prototype = {
    call$1(child) {
      return B.assertNodeType(type$.GreenNode._as(child), type$.SymbolNode).symbol;
    },
    $signature: typesOffset + 27
  };
  B._delimiterSymbols_closure.prototype = {
    call$1(command) {
      var t1 = A.Map_MYH09.$index(0, C._asString(command));
      t1.toString;
      return t1;
    },
    $signature: typesOffset + 48
  };
  B._checkDelimiter_closure.prototype = {
    call$1(symbol) {
      var t1;
      type$.TexSymbolConfig._as(symbol);
      t1 = this.delim;
      return symbol.symbol === t1.symbol && symbol.variantForm === t1.variantForm;
    },
    $signature: typesOffset + 49
  };
  B._leftHandler_closure.prototype = {
    call$1(part) {
      return B.GreenNodeListWrappingExt_wrapWithEquationRow(type$.List_GreenNode._as(part));
    },
    $signature: typesOffset + 50
  };
  B._enviromentHandler_closure.prototype = {
    call$1(element) {
      return !(type$.nullable_GreenNode._as(element) instanceof B.SymbolNode);
    },
    $signature: typesOffset + 51
  };
  B._enviromentHandler_closure0.prototype = {
    call$1(node) {
      return type$.SymbolNode._as(type$.nullable_GreenNode._as(node)).symbol;
    },
    $signature: typesOffset + 52
  };
  B.MacroExpander_consumeArgs_closure.prototype = {
    call$1(i) {
      var t2, t3, t4, arg, depth,
        t1 = this.$this;
      t1.consumeSpaces$0();
      t1.future$0();
      t2 = t1.stack;
      if (0 >= t2.length)
        return C.ioore(t2, -1);
      t3 = t2.pop();
      t4 = t3.text;
      if (t4 === "{") {
        arg = C._setArrayType([], type$.JSArray_Token);
        for (t1 = t1.lexer, depth = 1; depth !== 0;) {
          if (t2.length === 0)
            D.JSArray_methods.add$1(t2, t1.lex$0());
          D.JSArray_methods.get$last(t2);
          if (0 >= t2.length)
            return C.ioore(t2, -1);
          t4 = t2.pop();
          D.JSArray_methods.add$1(arg, t4);
          switch (t4.text) {
            case "{":
              ++depth;
              break;
            case "}":
              --depth;
              break;
            case "EOF":
              throw C.wrapException(B.ParseException$("End of input in macro argument", t3));
          }
        }
        if (0 >= arg.length)
          return C.ioore(arg, -1);
        arg.pop();
        t1 = type$.ReversedListIterable_Token;
        return C.List_List$of(new C.ReversedListIterable(arg, t1), true, t1._eval$1("ListIterable.E"));
      } else if (t4 === "EOF")
        throw C.wrapException(B.ParseException$("End of input expecting macro argument", null));
      else
        return C._setArrayType([t3], type$.JSArray_Token);
    },
    $signature: typesOffset + 53
  };
  B.MacroExpander_expandMacroAsText_closure.prototype = {
    call$1(token) {
      return type$.Token._as(token).text;
    },
    $signature: typesOffset + 16
  };
  B.MacroDefinition$fromString_closure.prototype = {
    call$1(context) {
      return B.MacroExpansion_fromString(this.output, type$.MacroContext._as(context));
    },
    $signature: typesOffset + 3
  };
  B.MacroDefinition$fromCtxString_closure.prototype = {
    call$1(context) {
      type$.MacroContext._as(context);
      return B.MacroExpansion_fromString(this.expand.call$1(context), context);
    },
    $signature: typesOffset + 3
  };
  B.MacroDefinition$fromMacroExpansion_closure.prototype = {
    call$1(_) {
      type$.MacroContext._as(_);
      return this.output;
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure.prototype = {
    call$1(context) {
      var t1, t2, t3;
      type$.MacroContext._as(context);
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t1 = t1.pop();
      t2 = t1.text;
      t3 = context.macros.$get$1(0, t2) != null || null;
      if (t3 == null ? $.$get$functions().containsKey$1(0, t2) : t3)
        t1.noexpand = true;
      return new B.MacroExpansion(C._setArrayType([t1], type$.JSArray_Token), 0);
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure0.prototype = {
    call$1(context) {
      var t1;
      type$.MacroContext._as(context);
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t1 = t1.pop();
      context.expandOnce$1(true);
      return new B.MacroExpansion(C._setArrayType([t1], type$.JSArray_Token), 0);
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure1.prototype = {
    call$1(context) {
      var args = type$.MacroContext._as(context).consumeArgs$1(2);
      if (0 >= args.length)
        return C.ioore(args, 0);
      return new B.MacroExpansion(args[0], 0);
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure2.prototype = {
    call$1(context) {
      var args = type$.MacroContext._as(context).consumeArgs$1(2);
      if (1 >= args.length)
        return C.ioore(args, 1);
      return new B.MacroExpansion(args[1], 0);
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure3.prototype = {
    call$1(context) {
      var args, nextToken, t1, t2, t3;
      type$.MacroContext._as(context);
      args = context.consumeArgs$1(3);
      context.consumeSpaces$0();
      nextToken = context.future$0();
      t1 = args.length;
      if (0 >= t1)
        return C.ioore(args, 0);
      t2 = args[0];
      t3 = t2.length;
      if (t3 === 1) {
        if (0 >= t3)
          return C.ioore(t2, 0);
        t2 = t2[0].text === nextToken.text;
      } else
        t2 = false;
      if (t2) {
        if (1 >= t1)
          return C.ioore(args, 1);
        return new B.MacroExpansion(args[1], 0);
      } else {
        if (2 >= t1)
          return C.ioore(args, 2);
        return new B.MacroExpansion(args[2], 0);
      }
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure4.prototype = {
    call$1(context) {
      var args, t1, t2;
      type$.MacroContext._as(context);
      args = context.consumeArgs$1(2);
      t1 = context.mode;
      t2 = args.length;
      if (t1 === A.Mode_1) {
        if (0 >= t2)
          return C.ioore(args, 0);
        return new B.MacroExpansion(args[0], 0);
      } else {
        if (1 >= t2)
          return C.ioore(args, 1);
        return new B.MacroExpansion(args[1], 0);
      }
    },
    $signature: typesOffset + 3
  };
  B.builtinMacros_closure5.prototype = {
    call$1(context) {
      var t1, token, t2, number, base, t3, digit, _null = null;
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      token = t1.pop();
      t2 = token.text;
      number = _null;
      if (t2 === "'") {
        context.future$0();
        if (0 >= t1.length)
          return C.ioore(t1, -1);
        token = t1.pop();
        base = 8;
      } else if (t2 === '"') {
        context.future$0();
        if (0 >= t1.length)
          return C.ioore(t1, -1);
        token = t1.pop();
        base = 16;
      } else if (t2 === "`") {
        context.future$0();
        if (0 >= t1.length)
          return C.ioore(t1, -1);
        token = t1.pop();
        t2 = token.text;
        t3 = t2.length;
        if (0 >= t3)
          return C.ioore(t2, 0);
        if (t2[0] === "\\") {
          if (1 >= t3)
            return C.ioore(t2, 1);
          number = t2.charCodeAt(1);
        } else if (t2 === "EOF")
          throw C.wrapException(B.ParseException$("\\char` missing argument", _null));
        else
          number = t2.charCodeAt(0);
        base = _null;
      } else
        base = 10;
      if (base != null) {
        t2 = token.text;
        number = A.Map_hxXwm.$index(0, t2);
        if (number == null || number >= base)
          throw C.wrapException(B.ParseException$("Invalid base-" + C.S(base) + " digit " + t2, _null));
        t2 = context.lexer;
        while (true) {
          if (t1.length === 0)
            D.JSArray_methods.add$1(t1, t2.lex$0());
          digit = A.Map_hxXwm.$index(0, D.JSArray_methods.get$last(t1).text);
          if (!(digit != null && digit < base))
            break;
          number.toString;
          if (typeof digit !== "number")
            return C.iae(digit);
          number = number * base + digit;
          if (t1.length === 0)
            D.JSArray_methods.add$1(t1, t2.lex$0());
          D.JSArray_methods.get$last(t1);
          if (0 >= t1.length)
            return C.ioore(t1, -1);
          t1.pop();
        }
      }
      return "\\@char{" + C.S(number) + "}";
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros_closure6.prototype = {
    call$1(context) {
      return B.newcommand(context, false, true);
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros_closure7.prototype = {
    call$1(context) {
      return B.newcommand(context, true, false);
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros_closure8.prototype = {
    call$1(context) {
      return B.newcommand(context, true, true);
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros_closure9.prototype = {
    call$1(context) {
      var arg,
        t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = C._arrayInstanceType(arg)._eval$1("ReversedListIterable<1>");
      new C.MappedListIterable(new C.ReversedListIterable(arg, t1), t1._eval$1("String(ListIterable.E)")._as(new B.builtinMacros__closure0()), t1._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, "");
      return "";
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros__closure0.prototype = {
    call$1(token) {
      return type$.Token._as(token).text;
    },
    $signature: typesOffset + 16
  };
  B.builtinMacros_closure10.prototype = {
    call$1(context) {
      var arg,
        t1 = context.consumeArgs$1(1);
      if (0 >= t1.length)
        return C.ioore(t1, 0);
      arg = t1[0];
      t1 = C._arrayInstanceType(arg)._eval$1("ReversedListIterable<1>");
      new C.MappedListIterable(new C.ReversedListIterable(arg, t1), t1._eval$1("String(ListIterable.E)")._as(new B.builtinMacros__closure()), t1._eval$1("MappedListIterable<ListIterable.E,String>")).join$1(0, "");
      return "";
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros__closure.prototype = {
    call$1(token) {
      return type$.Token._as(token).text;
    },
    $signature: typesOffset + 16
  };
  B.builtinMacros_closure11.prototype = {
    call$1(context) {
      var t1, $name;
      context.future$0();
      t1 = context.stack;
      if (0 >= t1.length)
        return C.ioore(t1, -1);
      t1 = t1.pop();
      $name = t1.text;
      t1.toString$0(0);
      C.S(context.macros.$get$1(0, $name));
      C.S($.$get$functions().$index(0, $name));
      C.S(A.Map_MYH09.$index(0, $name));
      C.S(A.Map_SXdse.$index(0, $name));
      return "";
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros_closure12.prototype = {
    call$1(context) {
      var next, t1, thedots;
      context.expandOnce$0();
      next = context.future$0().text;
      if (A.Map_chCvV.containsKey$1(0, next)) {
        t1 = A.Map_chCvV.$index(0, next);
        t1.toString;
        thedots = t1;
      } else if (next.length >= 4 && D.JSString_methods.substring$2(next, 0, 4) === "\\not")
        thedots = "\\dotsb";
      else if (A.Map_MYH09.containsKey$1(0, next)) {
        t1 = A.Map_MYH09.$index(0, next).type;
        thedots = t1 === A.AtomType_2 || t1 === A.AtomType_3 ? "\\dotsb" : "\\dotso";
      } else
        thedots = "\\dotso";
      return thedots;
    },
    $signature: typesOffset + 4
  };
  B.builtinMacros_closure13.prototype = {
    call$1(context) {
      if (context.macros.$get$1(0, "\\df@tag") != null)
        throw C.wrapException(B.ParseException$("Multiple \\tag", null));
      return "\\gdef\\df@tag{\\text{#1}}";
    },
    $signature: typesOffset + 4
  };
  B.Namespace_endGroup_closure.prototype = {
    call$2(key, value) {
      var t1;
      C._asString(key);
      t1 = this.$this;
      t1.$ti._eval$1("1?")._as(value);
      t1 = t1.current;
      if (value == null)
        t1.remove$1(0, key);
      else
        t1.$indexSet(0, key, value);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(String,1?)");
    }
  };
  B.ParseException_closure.prototype = {
    call$1(match) {
      return C.S(match.$index(0, 0)) + "\u0332";
    },
    $signature: 50
  };
  B.TexParser__parseSymbol_closure.prototype = {
    call$1(char) {
      return new B.SymbolNode(C._asString(char), false, null, A.FontOptions_VMn, A.Mode_1);
    },
    $signature: typesOffset + 15
  };
  B.RenderCustomLayout_computeMinIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_0, extent, child.get$computeMinIntrinsicWidth(), t1, t1);
    },
    $signature: 10
  };
  B.RenderCustomLayout_computeMaxIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_1, extent, child.get$computeMaxIntrinsicWidth(), t1, t1);
    },
    $signature: 10
  };
  B.RenderCustomLayout_computeMinIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_2, extent, child.get$computeMinIntrinsicHeight(), t1, t1);
    },
    $signature: 10
  };
  B.RenderCustomLayout_computeMaxIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_3, extent, child.get$computeMaxIntrinsicHeight(), t1, t1);
    },
    $signature: 10
  };
  B.IntrinsicLayoutDelegate_getIntrinsicSize_closure.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), this.childSize.call$2(type$.RenderBox._as(value), 1 / 0), t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  B.IntrinsicLayoutDelegate_getIntrinsicSize_closure0.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), this.childSize.call$2(type$.RenderBox._as(value), 1 / 0), t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  B.IntrinsicLayoutDelegate_computeLayout_closure.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), type$.Size._as(value)._dx, t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,Size)");
    }
  };
  B.IntrinsicLayoutDelegate_computeLayout_closure0.prototype = {
    call$2(key, value) {
      var t1 = C._instanceType(this.$this);
      return new C.MapEntry(t1._eval$1("IntrinsicLayoutDelegate.T")._as(key), type$.Size._as(value)._dy, t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,Size)");
    }
  };
  B.IntrinsicLayoutDelegate_computeLayout_closure1.prototype = {
    call$2(key, value) {
      var t2,
        t1 = C._instanceType(this.$this);
      t1._eval$1("IntrinsicLayoutDelegate.T")._as(key);
      type$.RenderBox._as(value);
      if (this.dry)
        t2 = 0;
      else {
        t2 = value.getDistanceToBaseline$2$onlyReal(D.TextBaseline_0, true);
        t2.toString;
      }
      return new C.MapEntry(key, t2, t1._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>"));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("MapEntry<IntrinsicLayoutDelegate.T,double>(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  B.IntrinsicLayoutDelegate_computeLayout_closure2.prototype = {
    call$2(id, child) {
      var t1, t2;
      C._instanceType(this.$this)._eval$1("IntrinsicLayoutDelegate.T")._as(id);
      type$.RenderBox._as(child);
      t1 = this.hconf.offsetTable.$index(0, id);
      t1.toString;
      t2 = this.vconf.offsetTable.$index(0, id);
      t2.toString;
      return type$.BoxParentData._as(child.parentData).offset = new C.Offset(t1, t2);
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("~(IntrinsicLayoutDelegate.T,RenderBox)");
    }
  };
  B.RenderEqnArray__computeLayout_closure.prototype = {
    call$1(size) {
      return type$.Size._as(size)._dx;
    },
    $signature: 46
  };
  B.RenderLine_computeMinIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_0, extent, child.get$computeMinIntrinsicWidth(), t1, t1);
    },
    $signature: 10
  };
  B.RenderLine_computeMaxIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_1, extent, child.get$computeMaxIntrinsicWidth(), t1, t1);
    },
    $signature: 10
  };
  B.RenderLine_computeMinIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_2, extent, child.get$computeMinIntrinsicHeight(), t1, t1);
    },
    $signature: 10
  };
  B.RenderLine_computeMaxIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_3, extent, child.get$computeMaxIntrinsicHeight(), t1, t1);
    },
    $signature: 10
  };
  B.RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_0, extent, child.get$computeMinIntrinsicWidth(), t1, t1);
    },
    $signature: 10
  };
  B.RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_1, extent, child.get$computeMaxIntrinsicWidth(), t1, t1);
    },
    $signature: 10
  };
  B.RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_2, extent, child.get$computeMinIntrinsicHeight(), t1, t1);
    },
    $signature: 10
  };
  B.RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure.prototype = {
    call$2(child, extent) {
      var t1 = type$.double;
      return child._computeIntrinsics$2$3(D._IntrinsicDimension_3, extent, child.get$computeMaxIntrinsicHeight(), t1, t1);
    },
    $signature: 10
  };
  B.makeDecoratedEqualSymbol_closure.prototype = {
    call$1(symbol) {
      return new B.SymbolNode(C._asString(symbol), false, null, null, this.mode);
    },
    $signature: typesOffset + 15
  };
  B.makeBaseSymbol_closure.prototype = {
    call$1(e) {
      var t1;
      C._asString(e);
      t1 = this._box_0.font;
      return B.makeChar(e, t1, B.getCharacterMetrics(e, t1.get$fontName(), this.mode), this.options, false);
    },
    $signature: 419
  };
  B.unicodeLiteral_closure.prototype = {
    call$1(e) {
      C._asString(e);
      if (0 >= e.length)
        return C.ioore(e, 0);
      if (e.charCodeAt(0) > 126 || e.charCodeAt(0) < 32)
        return "\\u" + D.JSString_methods.padLeft$2(D.JSInt_methods.toRadixString$1(e.charCodeAt(0), 16).toUpperCase(), 4, "0");
      else
        return e;
    },
    $signature: 21
  };
  B.Cache_putIfAbsent_closure.prototype = {
    call$1(data) {
      var t1, t2;
      type$.ByteData._as(data);
      t1 = this.$this;
      t2 = this.key;
      t1._cache$_pending.remove$1(0, t2);
      t1._cache$_add$2(0, t2, data);
      this._box_0.result = data;
    },
    $signature: 310
  };
  B.SvgLoader__load_closure.prototype = {
    call$1(message) {
      var t1 = this.$this,
        t2 = C._instanceType(t1)._eval$1("SvgLoader.T?");
      return B._testCompute(new B.SvgLoader__load__closure(t1, this.theme), t2._as(message), "Load Bytes", t2, type$.ByteData);
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("Future<ByteData>(SvgLoader.T?)");
    }
  };
  B.SvgLoader__load__closure.prototype = {
    call$1(message) {
      var t2, t3, t4, parser, newRoot, t5, t6, t7, t8, t9, t10, commandVisitor, t11, t12, t13, t14, t15, t16,
        _s36_ = "PathOps library was not initialized.",
        t1 = this.$this;
      C._instanceType(t1)._eval$1("SvgLoader.T?")._as(message);
      t2 = F.Color_vnR.toARGB32$0();
      t3 = type$.String;
      t4 = C.ListQueue$(10, type$._SvgGroupTuple);
      parser = new B.SvgParser(new B.SvgTheme0(new B.Color0(t2), 14, 7), null, new B.XmlEventIterable(t1._svg, A.C_XmlDefaultEntityMapping, false, false, false, false, false).get$iterator(0), false, new B._Resolver(C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.AttributedNode), C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Gradient), C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.List_Node), C.LinkedHashMap_LinkedHashMap$_empty(t3, type$.List_Gradient)), t4, C.LinkedHashSet_LinkedHashSet$_empty(t3), A.SvgAttributes_781);
      parser.enableOverdrawOptimizer = parser.enableClippingOptimizer = parser.enableMaskingOptimizer = false;
      parser._parseTree$0();
      t1 = parser._parser$_root;
      t1.toString;
      newRoot = type$.Visitor_Node_AffineMatrix._as(new B.ResolvingVisitor()).visitViewportNode$2(t1, A.AffineMatrix_qrl);
      if (parser.enableMaskingOptimizer)
        C.throwExpression(C.Exception_Exception(_s36_));
      if (parser.enableClippingOptimizer)
        C.throwExpression(C.Exception_Exception(_s36_));
      if (parser.enableOverdrawOptimizer)
        C.throwExpression(C.Exception_Exception(_s36_));
      t1 = type$.int;
      t2 = C.LinkedHashMap_LinkedHashMap$_empty(type$.Paint, t1);
      t3 = C.LinkedHashMap_LinkedHashMap$_empty(type$.Path, t1);
      t4 = C.LinkedHashMap_LinkedHashMap$_empty(type$.TextConfig, t1);
      t5 = C.LinkedHashMap_LinkedHashMap$_empty(type$.ImageData, t1);
      t6 = C.LinkedHashMap_LinkedHashMap$_empty(type$.DrawImageData, t1);
      t7 = C.LinkedHashMap_LinkedHashMap$_empty(type$.IndexedVertices, t1);
      t8 = C._setArrayType([], type$.JSArray_DrawCommand);
      t9 = C.LinkedHashMap_LinkedHashMap$_empty(type$.PatternData, t1);
      t10 = C.LinkedHashMap_LinkedHashMap$_empty(type$.TextPosition, t1);
      commandVisitor = new B.CommandBuilderVisitor(new B.DrawCommandBuilder(t2, t3, t4, t5, t6, t7, t8, C.LinkedHashMap_LinkedHashMap$_empty(type$.Object, t1), t9, t10));
      commandVisitor.visitViewportNode$2(newRoot, null);
      t1 = commandVisitor.__CommandBuilderVisitor__width_A;
      t1 === $ && C.throwLateFieldNI("_width");
      t11 = commandVisitor.__CommandBuilderVisitor__height_A;
      t11 === $ && C.throwLateFieldNI("_height");
      t12 = t2.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t12 = C.List_List$of(new C.LinkedHashMapKeysIterable(t2, t12), true, t12._eval$1("Iterable.E"));
      t2 = t3.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t2 = C.List_List$of(new C.LinkedHashMapKeysIterable(t3, t2), true, t2._eval$1("Iterable.E"));
      t3 = t4.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t3 = C.List_List$of(new C.LinkedHashMapKeysIterable(t4, t3), true, t3._eval$1("Iterable.E"));
      t4 = t7.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t13 = t5.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t14 = t6.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t15 = t9.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      t16 = t10.$ti._eval$1("LinkedHashMapKeysIterable<1>");
      return J.asByteData$0$x(D.NativeUint8List_methods.get$buffer(B._encodeInstructions(new B.VectorInstructions(t1, t11, t12, t2, C.List_List$of(new C.LinkedHashMapKeysIterable(t7, t4), true, t4._eval$1("Iterable.E")), t3, C.List_List$of(new C.LinkedHashMapKeysIterable(t5, t13), true, t13._eval$1("Iterable.E")), C.List_List$of(new C.LinkedHashMapKeysIterable(t6, t14), true, t14._eval$1("Iterable.E")), C.List_List$of(new C.LinkedHashMapKeysIterable(t9, t15), true, t15._eval$1("Iterable.E")), C.List_List$of(new C.LinkedHashMapKeysIterable(t10, t16), true, t16._eval$1("Iterable.E")), t8), false)));
    },
    $signature() {
      return C._instanceType(this.$this)._eval$1("ByteData(SvgLoader.T?)");
    }
  };
  B.SvgLoader_loadBytes_closure.prototype = {
    call$0() {
      return this.$this._load$1(this.context);
    },
    $signature: 311
  };
  B._CodeFieldState_build_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return C._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return C._asyncAwait(L.Clipboard_setData(new L.ClipboardData(t1._widget.codes)).then$1$1(0, new B._CodeFieldState_build__closure(t1), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              $async$goto = 3;
              return C._asyncAwait(C.Future_Future$delayed(D.Duration_2000000, null, type$.dynamic), $async$call$0);
            case 3:
              // returning from await.
              t1.setState$1(new B._CodeFieldState_build__closure0(t1));
              // implicit return
              return C._asyncReturn(null, $async$completer);
          }
      });
      return C._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 5
  };
  B._CodeFieldState_build__closure.prototype = {
    call$1(value) {
      var t1 = this.$this;
      t1.setState$1(new B._CodeFieldState_build___closure(t1));
    },
    $signature: 9
  };
  B._CodeFieldState_build___closure.prototype = {
    call$0() {
      this.$this._copied = true;
    },
    $signature: 0
  };
  B._CodeFieldState_build__closure0.prototype = {
    call$0() {
      this.$this._copied = false;
    },
    $signature: 0
  };
  B.CustomRb_build_closure.prototype = {
    call$1(value) {
    },
    $signature: 144
  };
  B.CustomCb_build_closure.prototype = {
    call$1(value) {
    },
    $signature: 144
  };
  B._LinkButtonState_build_closure2.prototype = {
    call$1(__wc0_formal) {
      type$.PointerEnterEvent._as(__wc0_formal);
      return this.$this._link_button$_handleHover$1(true);
    },
    $signature: 63
  };
  B._LinkButtonState_build_closure3.prototype = {
    call$1(__wc1_formal) {
      type$.PointerExitEvent._as(__wc1_formal);
      return this.$this._link_button$_handleHover$1(false);
    },
    $signature: 52
  };
  B._LinkButtonState_build_closure0.prototype = {
    call$1(__wc2_formal) {
      return this.$this._handlePress$1(true);
    },
    $signature: typesOffset + 28
  };
  B._LinkButtonState_build_closure1.prototype = {
    call$1(__wc3_formal) {
      return this.$this._handlePress$1(false);
    },
    $signature: typesOffset + 58
  };
  B._LinkButtonState_build_closure.prototype = {
    call$0() {
      return this.$this._handlePress$1(false);
    },
    $signature: 0
  };
  B._LinkButtonState__handleHover_closure.prototype = {
    call$0() {
      this.$this._link_button$_isHovering = this.hover;
    },
    $signature: 0
  };
  B._LinkButtonState__handlePress_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  B.MarkdownComponent_generate_closure.prototype = {
    call$1(e) {
      return type$.MarkdownComponent._as(e).get$exp().pattern;
    },
    $signature: typesOffset + 59
  };
  B.MarkdownComponent_generate_closure0.prototype = {
    call$1(p0) {
      var t1, t2, _i, each, t3, t4, exp, _this = this,
        element = p0.$index(0, 0);
      if (element == null)
        element = "";
      for (t1 = _this.components, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        each = t1[_i];
        t3 = each.get$exp();
        t4 = each.get$exp()._nativeRegExp.multiline;
        exp = C.RegExp_RegExp("^" + t3.pattern + "$", true, each.get$exp()._nativeRegExp.dotAll, t4, false);
        if (exp._nativeRegExp.test(element)) {
          D.JSArray_methods.add$1(_this.spans, each.span$3(0, _this.context, element, _this.config));
          return "";
        }
      }
      return "";
    },
    $signature: 50
  };
  B.MarkdownComponent_generate_closure1.prototype = {
    call$1(p0) {
      var _this = this;
      if (p0.length === 0)
        return "";
      if (_this.includeGlobalComponents) {
        D.JSArray_methods.addAll$1(_this.spans, B.MarkdownComponent_generate(_this.context, p0, _this.config.copyWith$0(), false));
        return "";
      }
      D.JSArray_methods.add$1(_this.spans, E.TextSpan$(null, _this.config.style, p0));
      return "";
    },
    $signature: 21
  };
  B.LatexMathMultiLine_build_closure.prototype = {
    call$1(tex) {
      return tex;
    },
    $signature: 21
  };
  B.LatexMathMultiLine_build_closure0.prototype = {
    call$4(context, tex, textStyle, inline) {
      var t5, t6, _null = null,
        t1 = this.config,
        t2 = t1.style,
        t3 = t2 == null,
        t4 = t3 ? _null : t2.color;
      if (t4 == null)
        t4 = H.Theme_of(context).colorScheme.onSurface;
      t5 = t3 ? _null : t2.fontSize;
      if (t5 == null) {
        t5 = H.Theme_of(context).textTheme.bodyMedium;
        t5 = t5 == null ? _null : t5.fontSize;
      }
      t6 = t3 ? _null : t2.fontWeight;
      if (t6 == null)
        t6 = F.FontWeight_3;
      t2 = t3 ? _null : t2.fontWeight;
      if (t2 == null)
        t2 = F.FontWeight_3;
      return new B.SelectableAdapter(B.Math_Math$tex(tex, A.MathStyle_0, new B.LatexMathMultiLine_build__closure(this.workaround, this.mathText, t1, textStyle), B.MathOptions_MathOptions(t4, t5, _null, new B.FontOptions("Main", t6, D.FontStyle_0, A.List_empty22), A.MathSize_6, A.MathStyle_0, new B.FontOptions("Main", t2, D.FontStyle_0, A.List_empty22)), A.TexParserSettings_Strict_0, 1, textStyle), tex, _null);
    },
    $signature: typesOffset + 30
  };
  B.LatexMathMultiLine_build__closure.prototype = {
    call$1(err) {
      var _this = this, _null = null;
      type$.FlutterMathException._as(err);
      return U.Text$(_this.workaround.call$1(_this.mathText), _null, _null, _null, _null, _null, _null, _null, _this.textStyle.copyWith$1$color(_null), _null, _this.config.textDirection, _null, _null, _null);
    },
    $signature: typesOffset + 31
  };
  B.LatexMath_span_closure.prototype = {
    call$1(tex) {
      return tex;
    },
    $signature: 21
  };
  B.LatexMath_span_closure0.prototype = {
    call$4(context, tex, textStyle, inline) {
      var t5, t6, _null = null,
        t1 = this.config,
        t2 = t1.style,
        t3 = t2 == null,
        t4 = t3 ? _null : t2.color;
      if (t4 == null)
        t4 = H.Theme_of(context).colorScheme.onSurface;
      t5 = t3 ? _null : t2.fontSize;
      if (t5 == null) {
        t5 = H.Theme_of(context).textTheme.bodyMedium;
        t5 = t5 == null ? _null : t5.fontSize;
      }
      t6 = t3 ? _null : t2.fontWeight;
      if (t6 == null)
        t6 = F.FontWeight_3;
      t2 = t3 ? _null : t2.fontWeight;
      if (t2 == null)
        t2 = F.FontWeight_3;
      return new B.SelectableAdapter(B.Math_Math$tex(tex, A.MathStyle_0, new B.LatexMath_span__closure(this.workaround, this.mathText, t1, textStyle), B.MathOptions_MathOptions(t4, t5, _null, new B.FontOptions("Main", t6, D.FontStyle_0, A.List_empty22), A.MathSize_6, A.MathStyle_0, new B.FontOptions("Main", t2, D.FontStyle_0, A.List_empty22)), A.TexParserSettings_Strict_0, 1, textStyle), tex, _null);
    },
    $signature: typesOffset + 30
  };
  B.LatexMath_span__closure.prototype = {
    call$1(err) {
      var _this = this, _null = null;
      type$.FlutterMathException._as(err);
      return U.Text$(_this.workaround.call$1(_this.mathText), _null, _null, _null, _null, _null, _null, _null, _this.textStyle.copyWith$1$color(_null), _null, _this.config.textDirection, _null, _null, _null);
    },
    $signature: typesOffset + 31
  };
  B.ATagMd_span_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  B.ImageMd_span_closure0.prototype = {
    call$3(context, child, loadingProgress) {
      var t1;
      type$.BuildContext._as(context);
      type$.Widget._as(child);
      type$.nullable_ImageChunkEvent._as(loadingProgress);
      if (loadingProgress == null)
        return child;
      t1 = loadingProgress.expectedTotalBytes;
      return new B.CustomImageLoading(t1 != null ? loadingProgress.cumulativeBytesLoaded / t1 : 1, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 82
  };
  B.ImageMd_span_closure.prototype = {
    call$3(context, error, stackTrace) {
      return A.CustomImageError_null;
    },
    $signature: typesOffset + 62
  };
  B.TableMd_build_closure.prototype = {
    call$1(e) {
      var t1 = type$.WhereIterable_String;
      t1 = C.List_List$of(new C.WhereIterable(C._setArrayType(D.JSString_methods.trim$0(C._asString(e)).split("|"), type$.JSArray_String), type$.bool_Function_String._as(new B.TableMd_build__closure0()), t1), true, t1._eval$1("Iterable.E"));
      return new C.ListMapView(t1, C._arrayInstanceType(t1)._eval$1("ListMapView<1>"));
    },
    $signature: 316
  };
  B.TableMd_build__closure0.prototype = {
    call$1(element) {
      return C._asString(element).length !== 0;
    },
    $signature: 27
  };
  B.TableMd_build_closure0.prototype = {
    call$1(index) {
      var hasLeftColon, hasRightColon,
        separator = J.$index$asx(this.separatorRow, index);
      separator = D.JSString_methods.trim$0(separator == null ? "" : separator);
      hasLeftColon = D.JSString_methods.startsWith$1(separator, ":");
      hasRightColon = D.JSString_methods.endsWith$1(separator, ":");
      if (hasLeftColon && hasRightColon)
        return D.TextAlign_2;
      else if (hasRightColon)
        return D.TextAlign_1;
      else if (hasLeftColon)
        return D.TextAlign_0;
      else
        return D.TextAlign_0;
    },
    $signature: 317
  };
  B.TableMd_build_closure1.prototype = {
    call$1(entry) {
      type$.MapEntry_of_int_and_Map_int_String._as(entry);
      if (this.hasHeader && J.$eq$(entry.key, 1))
        return false;
      return true;
    },
    $signature: 318
  };
  B.TableMd_build_closure2.prototype = {
    call$1(entry) {
      var t1, t2, _this = this, _null = null;
      type$.MapEntry_of_int_and_Map_int_String._as(entry);
      if (_this.hasHeader && J.$eq$(entry.key, 0)) {
        t1 = H.Theme_of(_this.context).colorScheme;
        t2 = t1._surfaceContainerHighest;
        t1 = new E.BoxDecoration(t2 == null ? t1.surface : t2, _null, _null, _null, _null, _null, _null, F.BoxShape_0);
      } else
        t1 = _null;
      t2 = _this._box_0;
      return new A1.TableRow(t1, C.List_List$generate(t2.maxCol, new B.TableMd_build__closure(t2, entry, _this.context, _this.config), true, type$.Widget));
    },
    $signature: typesOffset + 63
  };
  B.TableMd_build__closure.prototype = {
    call$1(index) {
      var t2, t3, $content, _this = this, _null = null,
        e = _this.entry.value,
        t1 = J.getInterceptor$asx(e),
        data = t1.$index(e, index);
      if (data == null)
        data = "";
      t2 = C.RegExp_RegExp("^:?--+:?$", true, false, false, false);
      t3 = D.JSString_methods.trim$0(data);
      if (t2._nativeRegExp.test(t3) || t3.length === 0)
        return Ak.SizedBox_null_null_null_null;
      t1 = t1.$index(e, index);
      $content = new E.Padding(Ah.EdgeInsets_8_4_8_4, new B.MdWidget(D.JSString_methods.trim$0(t1 == null ? "" : t1), _this.context, false, _this.config, _null), _null);
      t1 = _this._box_0.columnAlignments;
      if (!(index < t1.length))
        return C.ioore(t1, index);
      switch (t1[index].index) {
        case 2:
          $content = E.Center$($content, _null, _null, _null);
          break;
        case 1:
          $content = new E.Align(S.Alignment_1_0, _null, _null, $content, _null);
          break;
        case 0:
        default:
          $content = new E.Align(I.Alignment_m1_0, _null, _null, $content, _null);
          break;
      }
      return $content;
    },
    $signature: 319
  };
  B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure.prototype = {
    call$1($parent) {
      if (type$._NestedHookElement._is($parent))
        this.$this.SingleChildWidgetElementMixin__parent = $parent;
      return false;
    },
    $signature: 15
  };
  B.optimizedRanges_closure.prototype = {
    call$2(first, second) {
      var t2,
        t1 = type$.RangeCharPredicate;
      t1._as(first);
      t1._as(second);
      t1 = first.start;
      t2 = second.start;
      return t1 !== t2 ? t1 - t2 : first.stop - second.stop;
    },
    $signature: typesOffset + 64
  };
  B.optimizedRanges_closure0.prototype = {
    call$2(current, range) {
      C._asInt(current);
      type$.RangeCharPredicate._as(range);
      return current + (range.stop - range.start + 1);
    },
    $signature: typesOffset + 65
  };
  B._single_closure.prototype = {
    call$1(element) {
      C._asString(element);
      if (0 >= element.length)
        return C.ioore(element, 0);
      return new B.RangeCharPredicate(element.charCodeAt(0), element.charCodeAt(0));
    },
    $signature: typesOffset + 66
  };
  B._range_closure.prototype = {
    call$3(start, _, $stop) {
      C._asString(start);
      C._asString(_);
      C._asString($stop);
      if (0 >= start.length)
        return C.ioore(start, 0);
      if (0 >= $stop.length)
        return C.ioore($stop, 0);
      return new B.RangeCharPredicate(start.charCodeAt(0), $stop.charCodeAt(0));
    },
    $signature: typesOffset + 67
  };
  B._pattern_closure.prototype = {
    call$2(negation, sequence) {
      var t1;
      C._asStringQ(negation);
      type$.CharacterPredicate._as(sequence);
      if (negation == null)
        t1 = sequence;
      else
        t1 = sequence instanceof B.ConstantCharPredicate ? new B.ConstantCharPredicate(!sequence.constant) : new B.NotCharacterPredicate(sequence);
      return t1;
    },
    $signature: typesOffset + 68
  };
  B.RecordParserExtension2_map2_closure.prototype = {
    call$1(record) {
      this.T1._eval$1("@<0>")._bind$1(this.T2)._eval$1("+(1,2)")._as(record);
      return this.callback.call$2(record._0, record._1);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T1)._bind$1(this.T2)._eval$1("1(+(2,3))");
    }
  };
  B.RecordParserExtension3_map3_closure.prototype = {
    call$1(record) {
      var _this = this;
      _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._eval$1("+(1,2,3)")._as(record);
      return _this.callback.call$3(record._0, record._1, record._2);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._eval$1("1(+(2,3,4))");
    }
  };
  B.RecordParserExtension4_map4_closure.prototype = {
    call$1(record) {
      var _this = this,
        t1 = _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._eval$1("+(1,2,3,4)")._as(record)._values;
      return _this.callback.call$4(t1[0], t1[1], t1[2], t1[3]);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._eval$1("1(+(2,3,4,5))");
    }
  };
  B.RecordParserExtension5_map5_closure.prototype = {
    call$1(record) {
      var _this = this,
        t1 = _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._eval$1("+(1,2,3,4,5)")._as(record)._values;
      return _this.callback.call$5(t1[0], t1[1], t1[2], t1[3], t1[4]);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._eval$1("1(+(2,3,4,5,6))");
    }
  };
  B.RecordParserExtension8_map8_closure.prototype = {
    call$1(record) {
      var _this = this,
        t1 = _this.T1._eval$1("@<0>")._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._bind$1(_this.T6)._bind$1(_this.T7)._bind$1(_this.T8)._eval$1("+(1,2,3,4,5,6,7,8)")._as(record)._values;
      return _this.callback.call$8(t1[0], t1[1], t1[2], t1[3], t1[4], t1[5], t1[6], t1[7]);
    },
    $signature() {
      var _this = this;
      return _this.R._eval$1("@<0>")._bind$1(_this.T1)._bind$1(_this.T2)._bind$1(_this.T3)._bind$1(_this.T4)._bind$1(_this.T5)._bind$1(_this.T6)._bind$1(_this.T7)._bind$1(_this.T8)._eval$1("1(+(2,3,4,5,6,7,8,9))");
    }
  };
  B.string_closure.prototype = {
    call$1(each) {
      return this.element === each;
    },
    $signature: 27
  };
  B.ProxyProvider_closure.prototype = {
    call$2(context, value) {
      this.R._eval$1("0?")._as(value);
      return this.update.call$3(context, Z.Provider_of(context, true, this.T), value);
    },
    $signature() {
      return this.R._eval$1("0(BuildContext,0?)");
    }
  };
  B._Selector0State_buildWithChild_closure.prototype = {
    call$1(context) {
      var t1;
      type$.BuildContext._as(context);
      t1 = this.$this;
      return t1.$ti._eval$1("Widget(BuildContext,1,Widget?)")._as(t1._widget.builder).call$3(context, this.selected, this.child);
    },
    $signature: 16
  };
  B.Selector2_closure.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      return this.selector.call$3(context, Z.Provider_of(context, true, this.A), Z.Provider_of(context, true, this.B));
    },
    $signature() {
      return this.S._eval$1("0(BuildContext)");
    }
  };
  B.RenderWebVectorGraphic_paint_closure.prototype = {
    call$2(context, offset) {
      var t1 = this.$this,
        t2 = t1._html_render_vector_graphics$_opacityHandle;
      t2.set$layer(0, context.pushOpacity$4$oldLayer(offset, D.JSInt_methods.round$0(t1._html_render_vector_graphics$_opacityValue * 255), new B.RenderWebVectorGraphic_paint__closure(t1), t2._layer));
    },
    $signature: 24
  };
  B.RenderWebVectorGraphic_paint__closure.prototype = {
    call$2(context, offset) {
      var t4, layer,
        t1 = this.$this,
        t2 = t1._html_render_vector_graphics$_colorFilter,
        t3 = t1._filterLayer;
      if (t2 != null) {
        t4 = t3._layer;
        t1 = type$.void_Function_PaintingContext_Offset._as(new B.RenderWebVectorGraphic_paint___closure(t1));
        type$.nullable_ColorFilterLayer._as(t4);
        layer = t4 == null ? new C.ColorFilterLayer(C.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), C.LayerHandle$(type$.Layer)) : t4;
        if (t2 !== layer._layer$_colorFilter) {
          layer._layer$_colorFilter = t2;
          layer.markNeedsAddToScene$0();
        }
        context.pushLayer$3(layer, t1, offset);
        t3.set$layer(0, layer);
      } else {
        t3.set$layer(0, null);
        context.get$canvas(0).drawPicture$1(t1._html_render_vector_graphics$_pictureInfo.picture);
      }
    },
    $signature: 24
  };
  B.RenderWebVectorGraphic_paint___closure.prototype = {
    call$2(context, offset) {
      context.get$canvas(0).drawPicture$1(this.$this._html_render_vector_graphics$_pictureInfo.picture);
    },
    $signature: 24
  };
  B.decodeVectorGraphics_process.prototype = {
    call$0() {
      var listener, t3, recorder, response, _this = this, t1 = {},
        t2 = _this.loader;
      t2 = C.Object_hash(t2._svg, t2.theme, t2.colorMapper, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue, D.C_SentinelValue);
      t3 = $.$get$_renderer();
      recorder = t3.createPictureRecorder$0();
      listener = B.FlutterVectorGraphicsListener$_(t2, A.C__DefaultPictureFactory, recorder, t3.createCanvas$2(recorder, null), _this.locale, _this.textDirection, _this.clipViewbox, _this.onError);
      t3 = _this.data;
      response = A.C_VectorGraphicsCodec.decode$2(0, t3, listener);
      t1.response = response;
      if (response.complete)
        return new C.SynchronousFuture(listener.toPicture$0(), type$.SynchronousFuture_PictureInfo);
      return C.Future_wait(listener._listener0$_pendingImages, false, type$.void).then$1$1(0, new B.decodeVectorGraphics_process_closure(t1, t3, listener), type$.PictureInfo);
    },
    $signature: typesOffset + 69
  };
  B.decodeVectorGraphics_process_closure.prototype = {
    call$1(_) {
      var t1 = this.listener,
        t2 = this._box_0;
      t2.response = A.C_VectorGraphicsCodec.decode$3$response(0, this.data, t1, t2.response);
      return t1.toPicture$0();
    },
    $signature: typesOffset + 70
  };
  B.FlutterVectorGraphicsListener_onDrawText_draw.prototype = {
    call$1(paintId) {
      var paint, builder, paragraph, t3, t4, _this = this, _null = null,
        t1 = _this.$this,
        t2 = t1._paints;
      if (!(paintId < t2.length))
        return C.ioore(t2, paintId);
      paint = t2[paintId];
      t2 = _this.patternId;
      if (t2 != null)
        paint.set$shader(t1._patterns.$index(0, t2).shader);
      t2 = C.ParagraphStyle_ParagraphStyle(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t1._listener0$_textDirection, _null);
      builder = $.$get$_renderer().createParagraphBuilder$1(t2);
      t2 = _this.textConfig;
      builder.pushStyle$1(C.TextStyle_TextStyle(_null, _null, t2.decoration, t2.decorationColor, t2.decorationStyle, _null, t2.fontFamily, _null, _null, t2.fontSize, _null, _null, t2.fontWeight, paint, _null, _null, _null, t1._listener0$_locale, _null, _null, _null));
      builder.addText$1(t2.text);
      paragraph = builder.build$0();
      paragraph.layout$1(F.ParagraphConstraints_t5V);
      _this._box_0.paragraphWidth = paragraph.get$maxIntrinsicWidth();
      if (t1._textTransform != null) {
        t3 = t1._listener0$_canvas;
        t3.save$0(0);
        t4 = t1._textTransform;
        t4.toString;
        t3.transform$1(0, t4);
      }
      t3 = t1._listener0$_canvas;
      t3.drawParagraph$2(paragraph, new C.Offset(_this.dx - paragraph.get$maxIntrinsicWidth() * t2.xAnchorMultiplier, _this.dy - paragraph.get$alphabeticBaseline(paragraph)));
      paragraph.dispose$0();
      if (t1._textTransform != null)
        t3.restore$0(0);
    },
    $signature: 22
  };
  B.FlutterVectorGraphicsListener_onImage_closure.prototype = {
    call$0() {
      return B.OneFrameImageStreamCompleter$(W.ImmutableBuffer_fromUint8List(this.data).then$1$1(0, new B.FlutterVectorGraphicsListener_onImage__closure(), type$.ImageInfo), null);
    },
    $signature: typesOffset + 71
  };
  B.FlutterVectorGraphicsListener_onImage__closure.prototype = {
    call$1(buffer) {
      return this.$call$body$FlutterVectorGraphicsListener_onImage__closure(type$.ImmutableBuffer._as(buffer));
    },
    $call$body$FlutterVectorGraphicsListener_onImage__closure(buffer) {
      var $async$goto = 0,
        $async$completer = C._makeAsyncAwaitCompleter(type$.ImageInfo),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$next = [], descriptor, codec, info, image;
      var $async$call$1 = C._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$goto = 6;
              return C._asyncAwait(B.ImageDescriptor_encoded(buffer), $async$call$1);
            case 6:
              // returning from await.
              descriptor = $async$result;
              $async$goto = 7;
              return C._asyncAwait(descriptor.instantiateCodec$0(), $async$call$1);
            case 7:
              // returning from await.
              codec = $async$result;
              $async$goto = 8;
              return C._asyncAwait(codec.getNextFrame$0(), $async$call$1);
            case 8:
              // returning from await.
              info = $async$result;
              image = J.get$image$z(info);
              descriptor._ui$_data = null;
              codec.dispose$0();
              $async$returnValue = new W.ImageInfo(image, 1, null);
              $async$next = [1];
              // goto finally
              $async$goto = 4;
              break;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              buffer._ui$_list = null;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return C._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return C._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return C._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 321
  };
  B.FlutterVectorGraphicsListener_onImage_closure0.prototype = {
    call$2(image, synchronousCall) {
      var _this = this;
      type$.ImageInfo._as(image);
      C._asBool(synchronousCall);
      _this.cacheCompleter.removeListener$1(0, _this.listener._readLocal$0());
      _this.$this._images.$indexSet(0, _this.imageId, image.get$image(image));
      _this.completer.complete$0(0);
    },
    $signature: 66
  };
  B.FlutterVectorGraphicsListener_onImage_closure1.prototype = {
    call$2(exception, stackTrace) {
      var t1;
      type$.Object._as(exception);
      type$.nullable_StackTrace._as(stackTrace);
      t1 = this.completer;
      if ((t1.future._state & 30) === 0)
        t1.complete$0(0);
      this.cacheCompleter.removeListener$1(0, this.listener._readLocal$0());
      t1 = C.ErrorDescription$("Failed to load image");
      C.FlutterError_reportError(new C.FlutterErrorDetails(exception, stackTrace, "image resource service", t1, null, true));
    },
    $signature: 53
  };
  B._VectorGraphicWidgetState__loadPicture_closure.prototype = {
    call$1(data) {
      var t1 = this.key;
      return B.decodeVectorGraphics(type$.ByteData._as(data), t1.clipViewbox, this.loader, t1.locale, t1.textDirection);
    },
    $signature: typesOffset + 72
  };
  B._VectorGraphicWidgetState__loadPicture_closure0.prototype = {
    call$1(pictureInfo) {
      return new B._PictureData(type$.PictureInfo._as(pictureInfo), this.key, 0);
    },
    $signature: typesOffset + 73
  };
  B._VectorGraphicWidgetState__loadPicture_closure1.prototype = {
    call$0() {
      $._VectorGraphicWidgetState__pendingPictures.remove$1(0, this.key);
    },
    $signature: 3
  };
  B._VectorGraphicWidgetState__handleError_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._vector_graphics$_error = this.error;
      t1._stackTrace = this.stackTrace;
    },
    $signature: 0
  };
  B._VectorGraphicWidgetState__loadAssetBytes_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._maybeReleasePicture$1(t1._pictureInfo);
      t1._pictureInfo = this.data;
    },
    $signature: 0
  };
  B._VectorGraphicWidgetState__loadAssetBytes_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._maybeReleasePicture$1(t1._pictureInfo);
      t1._pictureInfo = this.data;
    },
    $signature: 0
  };
  B.DrawCommandBuilder__getOrGenerateId_closure.prototype = {
    call$0() {
      return this.map.__js_helper$_length;
    },
    $signature: 37
  };
  B.CubicToCommand_computeLength_compute.prototype = {
    call$5(p1, cp1, cp2, p2, distance) {
      var points;
      if (B.Point_distance(cp1, B.Point_lerp(p1, p2, 0.3333333333333333)) > 1.5 || B.Point_distance(cp2, B.Point_lerp(p1, p2, 0.6666666666666666)) > 1.5) {
        points = B.CubicToCommand_subdivide(p1, cp1, cp2, p2, 0.5);
        distance = this.call$5(points[0], points[1], points[2], points[3], distance);
        distance = this.call$5(points[3], points[4], points[5], points[6], distance);
      } else
        distance += B.Point_distance(p1, p2);
      return distance;
    },
    $signature: typesOffset + 74
  };
  B.SvgParser__parseColor_closure.prototype = {
    call$1(rawColor) {
      return D.JSString_methods.trim$0(C._asString(rawColor));
    },
    $signature: 21
  };
  B.SvgParser__parseColor_closure0.prototype = {
    call$1(rawColor) {
      return C.int_parse(C._asString(rawColor), null);
    },
    $signature: 64
  };
  B.SvgParser__parseColor_closure1.prototype = {
    call$1(rawColor) {
      var t1;
      rawColor = D.JSString_methods.trim$0(C._asString(rawColor));
      if (D.JSString_methods.endsWith$1(rawColor, "%"))
        rawColor = D.JSString_methods.substring$2(rawColor, 0, rawColor.length - 1);
      if (D.JSString_methods.contains$1(rawColor, ".")) {
        t1 = B.parseDouble(rawColor, false);
        t1.toString;
        return D.JSNumber_methods.round$0(t1 * 2.55);
      }
      return C.int_parse(rawColor, null);
    },
    $signature: 64
  };
  B.SvgParser__parseColor_closure2.prototype = {
    call$1(val) {
      C._asDouble(val);
      return val + (1 - this.saturation) * (0.5 - val);
    },
    $signature: 13
  };
  B.SvgParser__parseColor_closure3.prototype = {
    call$1(val) {
      return this.luminance * 2 * C._asDouble(val);
    },
    $signature: 13
  };
  B.SvgParser__parseColor_closure4.prototype = {
    call$1(val) {
      C._asDouble(val);
      return this.luminance * 2 * (1 - val) + 2 * val - 1;
    },
    $signature: 13
  };
  B.SvgParser__parseColor_closure5.prototype = {
    call$1(val) {
      return C._asDouble(val) * 255;
    },
    $signature: 13
  };
  B.SvgParser__parseColor_closure6.prototype = {
    call$1(rawColor) {
      var t1;
      rawColor = D.JSString_methods.trim$0(C._asString(rawColor));
      if (D.JSString_methods.endsWith$1(rawColor, "%")) {
        t1 = B.parseDouble(D.JSString_methods.substring$2(rawColor, 0, rawColor.length - 1), false);
        t1.toString;
        return D.JSNumber_methods.round$0(t1 * 2.55);
      }
      return C.int_parse(rawColor, null);
    },
    $signature: 64
  };
  B._Resolver_getClipPath_extractPathsFromNode.prototype = {
    call$1(target) {
      var t1, t2, nextPath, t3, t4, t5, _this = this;
      type$.nullable_Node._as(target);
      if (target instanceof B.PathNode) {
        t1 = target.path;
        t2 = C._setArrayType([], type$.JSArray_PathCommand);
        nextPath = new B.PathBuilder(t2, $);
        D.JSArray_methods.addAll$1(t2, t1._path$_commands);
        nextPath.__PathBuilder_fillType_A = t1.fillType;
        t1 = target.attributes.clipRule;
        if (t1 == null)
          t1 = A.PathFillType_00;
        nextPath.__PathBuilder_fillType_A = t1;
        t2 = _this._box_0;
        t3 = t2.currentPath;
        t4 = t3 == null;
        if (!t4) {
          t5 = t3.__PathBuilder_fillType_A;
          t5 === $ && C.throwLateFieldNI("fillType");
          t5 = t1 !== t5;
          t1 = t5;
        } else
          t1 = false;
        if (t1) {
          t2.currentPath = nextPath;
          D.JSArray_methods.add$1(_this.pathBuilders, nextPath);
        } else if (t4) {
          t2.currentPath = nextPath;
          D.JSArray_methods.add$1(_this.pathBuilders, nextPath);
        } else {
          t1 = nextPath.toPath$1$reset(false);
          D.JSArray_methods.addAll$1(t3._path$_commands, t1._path$_commands);
        }
      } else if (target instanceof B.DeferredNode) {
        t1 = target.refId;
        _this.call$1(target.resolver.call$1(t1));
      } else if (target instanceof B.ParentNode) {
        type$.void_Function_Node._as(_this);
        D.JSArray_methods.forEach$1(target._node$_children, _this);
      }
    },
    $signature: typesOffset + 77
  };
  B._Resolver_getClipPath_closure.prototype = {
    call$1(builder) {
      return type$.PathBuilder._as(builder).toPath$0();
    },
    $signature: typesOffset + 78
  };
  B._Resolver_addDeferredGradient_closure.prototype = {
    call$0() {
      return C._setArrayType([], type$.JSArray_Gradient);
    },
    $signature: typesOffset + 79
  };
  B._Resolver_addClipPath_closure.prototype = {
    call$0() {
      return this.pathNodes;
    },
    $signature: typesOffset + 80
  };
  B._Resolver_addDrawable_closure.prototype = {
    call$0() {
      return this.drawable;
    },
    $signature: typesOffset + 81
  };
  B.SvgAttributes_heritable_closure.prototype = {
    call$1(entry) {
      return A.Set_N2bSi.contains$1(0, type$.MapEntry_String_String._as(entry).key);
    },
    $signature: 322
  };
  B.CommandBuilderVisitor_visitResolvedTextPositionNode_closure.prototype = {
    call$1(child) {
      var t1 = type$.void;
      type$.Node._as(child).accept$2$2(0, this.$this, this.data, t1, t1);
    },
    $signature: typesOffset + 82
  };
  B._asNumericCharacterReferences_closure.prototype = {
    call$1(rune) {
      return "&#x" + D.JSInt_methods.toRadixString$1(C._asInt(rune), 16).toUpperCase() + ";";
    },
    $signature: 57
  };
  B.XmlEventParser_characterData_closure.prototype = {
    call$1(each) {
      var _null = null;
      return new B.XmlRawTextEvent(C._asString(each), this.$this.entityMapping, _null, _null, _null, _null);
    },
    $signature: typesOffset + 98
  };
  B.XmlEventParser_startElement_closure.prototype = {
    call$5(_, nameToken, attributes, __, closeElement) {
      var _null = null;
      C._asString(_);
      C._asString(nameToken);
      type$.List_XmlEventAttribute._as(attributes);
      C._asString(__);
      return new B.XmlStartElementEvent(nameToken, attributes, C._asString(closeElement) === "/>", _null, _null, _null, _null);
    },
    $signature: typesOffset + 99
  };
  B.XmlEventParser_attribute_closure.prototype = {
    call$3(_, $name, attribute) {
      C._asString(_);
      C._asString($name);
      type$.Record_2_String_and_XmlAttributeType._as(attribute);
      return new B.XmlEventAttribute($name, this.$this.entityMapping.decode$1(0, attribute._0), attribute._1, null);
    },
    $signature: typesOffset + 100
  };
  B.XmlEventParser_attributeAssignment_closure.prototype = {
    call$4(_, __, ___, value) {
      C._asString(_);
      C._asString(__);
      C._asString(___);
      return type$.Record_2_String_and_XmlAttributeType._as(value);
    },
    $signature: typesOffset + 101
  };
  B.XmlEventParser_attributeValueDoubleQuote_closure.prototype = {
    call$3(_, value, __) {
      C._asString(_);
      C._asString(value);
      C._asString(__);
      return new C._Record_2(value, A.XmlAttributeType_BDu);
    },
    $signature: typesOffset + 35
  };
  B.XmlEventParser_attributeValueSingleQuote_closure.prototype = {
    call$3(_, value, __) {
      C._asString(_);
      C._asString(value);
      C._asString(__);
      return new C._Record_2(value, A.XmlAttributeType_Ugh);
    },
    $signature: typesOffset + 35
  };
  B.XmlEventParser_attributeValueNoQuote_closure.prototype = {
    call$1(value) {
      return new C._Record_2(C._asString(value), A.XmlAttributeType_BDu);
    },
    $signature: typesOffset + 103
  };
  B.XmlEventParser_endElement_closure.prototype = {
    call$4(_, $name, __, ___) {
      var _null = null;
      C._asString(_);
      C._asString($name);
      C._asString(__);
      C._asString(___);
      return new B.XmlEndElementEvent($name, _null, _null, _null, _null);
    },
    $signature: typesOffset + 104
  };
  B.XmlEventParser_comment_closure.prototype = {
    call$3(_, text, __) {
      var _null = null;
      C._asString(_);
      C._asString(text);
      C._asString(__);
      return new B.XmlCommentEvent(text, _null, _null, _null, _null);
    },
    $signature: typesOffset + 105
  };
  B.XmlEventParser_cdata_closure.prototype = {
    call$3(_, text, __) {
      var _null = null;
      C._asString(_);
      C._asString(text);
      C._asString(__);
      return new B.XmlCDATAEvent(text, _null, _null, _null, _null);
    },
    $signature: typesOffset + 106
  };
  B.XmlEventParser_declaration_closure.prototype = {
    call$4(_, attributes, __, ___) {
      var _null = null;
      C._asString(_);
      type$.List_XmlEventAttribute._as(attributes);
      C._asString(__);
      C._asString(___);
      return new B.XmlDeclarationEvent(attributes, _null, _null, _null, _null);
    },
    $signature: typesOffset + 107
  };
  B.XmlEventParser_processing_closure.prototype = {
    call$2(_, text) {
      C._asString(_);
      return C._asString(text);
    },
    $signature: 146
  };
  B.XmlEventParser_processing_closure0.prototype = {
    call$4(_, target, text, __) {
      var _null = null;
      C._asString(_);
      C._asString(target);
      C._asString(text);
      C._asString(__);
      return new B.XmlProcessingEvent(target, text, _null, _null, _null, _null);
    },
    $signature: typesOffset + 108
  };
  B.XmlEventParser_doctype_closure.prototype = {
    call$8(_, __, $name, externalId, ___, internalSubset, ____, _____) {
      var _null = null;
      C._asString(_);
      C._asString(__);
      C._asString($name);
      type$.nullable_DtdExternalId._as(externalId);
      C._asString(___);
      C._asStringQ(internalSubset);
      C._asString(____);
      C._asString(_____);
      return new B.XmlDoctypeEvent($name, externalId, internalSubset, _null, _null, _null, _null);
    },
    $signature: typesOffset + 109
  };
  B.XmlEventParser_doctypeExternalIdSystem_closure.prototype = {
    call$3(_, __, attribute) {
      C._asString(_);
      C._asString(__);
      type$.Record_2_String_and_XmlAttributeType._as(attribute);
      return new B.DtdExternalId(null, null, attribute._0, attribute._1);
    },
    $signature: typesOffset + 110
  };
  B.XmlEventParser_doctypeExternalIdPublic_closure.prototype = {
    call$5(_, __, publicAttribute, ___, systemAttribute) {
      var t1;
      C._asString(_);
      C._asString(__);
      t1 = type$.Record_2_String_and_XmlAttributeType;
      t1._as(publicAttribute);
      C._asString(___);
      t1._as(systemAttribute);
      return new B.DtdExternalId(publicAttribute._0, publicAttribute._1, systemAttribute._0, systemAttribute._1);
    },
    $signature: typesOffset + 111
  };
  B.XmlEventParser_doctypeIntSubset_closure.prototype = {
    call$3(_, contents, __) {
      C._asString(_);
      C._asString(contents);
      C._asString(__);
      return contents;
    },
    $signature: 324
  };
  B.eventParserCache_closure.prototype = {
    call$1(entityMapping) {
      return B.resolve(new B.ReferenceParser(new B.XmlEventParser(type$.XmlEntityMapping._as(entityMapping)).get$event(), D.List_empty1, type$.ReferenceParser_XmlEvent), type$.XmlEvent);
    },
    $signature: typesOffset + 112
  };
  (function aliases() {
    var _ = B.__CheckboxState_State_TickerProviderStateMixin.prototype;
    _.super$__CheckboxState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = B.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype;
    _.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$initState = _.initState$0;
    _.super$__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose = _.dispose$0;
    _ = B.__RadioState_State_TickerProviderStateMixin.prototype;
    _.super$__RadioState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = B.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin.prototype;
    _.super$__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin$dispose = _.dispose$0;
    _ = B.GreenNode.prototype;
    _.super$GreenNode$toJson = _.toJson$0;
    _ = B.RenderLine.prototype;
    _.super$RenderLine$paint = _.paint$2;
    _ = B.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant.prototype;
    _.super$__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant$dispose = _.dispose$0;
    _ = B.Parser.prototype;
    _.super$Parser$replace = _.replace$2;
    _.super$Parser$toString = _.toString$0;
    _ = B.DelegateParser.prototype;
    _.super$DelegateParser$replace = _.replace$2;
  })();
  (function installTearOffs() {
    var _instance_1_u = hunkHelpers._instance_1u,
      _static_2 = hunkHelpers._static_2,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance = hunkHelpers.installInstanceTearOff,
      _static_1 = hunkHelpers._static_1,
      _instance_0_i = hunkHelpers._instance_0i;
    _instance_1_u(B._RadioState.prototype, "get$_radio$_handleChanged", "_radio$_handleChanged$1", 120);
    _static_2(B, "selectable_text_SelectableText__defaultContextMenuBuilder$closure", "SelectableText__defaultContextMenuBuilder", 114);
    _instance_1_u(B._SelectableTextSelectionGestureDetectorBuilder.prototype, "get$onSingleTapUp", "onSingleTapUp$1", 54);
    var _;
    _instance_0_u(_ = B._SelectableTextState.prototype, "get$_onControllerChanged", "_onControllerChanged$0", 10);
    _instance_0_u(_, "get$_selectable_text$_handleFocusChanged", "_selectable_text$_handleFocusChanged$0", 10);
    _instance_2_u(_, "get$_selectable_text$_handleSelectionChanged", "_selectable_text$_handleSelectionChanged$2", 97);
    _instance_0_u(_, "get$_selectable_text$_handleSelectionHandleTapped", "_selectable_text$_handleSelectionHandleTapped$0", 10);
    _instance_2_u(B.RenderFittedBox.prototype, "get$_paintChildWithTransform", "_paintChildWithTransform$2", 115);
    _instance_1_u(_ = B.ToggleableStateMixin.prototype, "get$_toggleable$_handleTapDown", "_toggleable$_handleTapDown$1", 28);
    _instance(_, "get$_toggleable$_handleTap", 0, 0, function() {
      return [null];
    }, ["call$1", "call$0"], ["_toggleable$_handleTap$1", "_toggleable$_handleTap$0"], 124, 0, 0);
    _instance(_, "get$_handleTapEnd", 0, 0, null, ["call$1", "call$0"], ["_handleTapEnd$1", "_handleTapEnd$0"], 45, 0, 0);
    _instance_1_u(_, "get$_toggleable$_handleFocusHighlightChanged", "_toggleable$_handleFocusHighlightChanged$1", 29);
    _instance_1_u(_, "get$_toggleable$_handleHoverChanged", "_toggleable$_handleHoverChanged$1", 29);
    _instance_0_u(B.ToggleablePainter.prototype, "get$dispose", "dispose$0", 10);
    _static_2(B, "eqn_array___casesHandler$closure", "_casesHandler", 5);
    _static_2(B, "eqn_array___alignedHandler$closure", "_alignedHandler", 5);
    _static_2(B, "eqn_array___alignedAtHandler$closure", "_alignedAtHandler", 5);
    _static_2(B, "katex_base___accentHandler$closure", "_accentHandler", 0);
    _static_2(B, "katex_base___textAccentHandler$closure", "_textAccentHandler", 0);
    _static_2(B, "katex_base___accentUnderHandler$closure", "_accentUnderHandler", 0);
    _static_2(B, "katex_base___throwExceptionHandler$closure", "_throwExceptionHandler", 0);
    _static_2(B, "katex_base___arrowHandler$closure", "_arrowHandler", 0);
    _static_2(B, "katex_base___breakHandler$closure", "_breakHandler", 0);
    _static_2(B, "katex_base___charHandler$closure", "_charHandler", 0);
    _static_2(B, "katex_base___textcolorHandler$closure", "_textcolorHandler", 0);
    _static_2(B, "katex_base___colorHandler$closure", "_colorHandler", 0);
    _static_2(B, "katex_base___crHandler$closure", "_crHandler", 0);
    _static_2(B, "katex_base___delimSizeHandler$closure", "_delimSizeHandler", 0);
    _static_2(B, "katex_base___rightHandler$closure", "_rightHandler", 0);
    _static_2(B, "katex_base___leftHandler$closure", "_leftHandler", 0);
    _static_2(B, "katex_base___middleHandler$closure", "_middleHandler", 0);
    _static_2(B, "katex_base___colorboxHandler$closure", "_colorboxHandler", 0);
    _static_2(B, "katex_base___fcolorboxHandler$closure", "_fcolorboxHandler", 0);
    _static_2(B, "katex_base___fboxHandler$closure", "_fboxHandler", 0);
    _static_2(B, "katex_base___cancelHandler$closure", "_cancelHandler", 0);
    _static_2(B, "katex_base___enviromentHandler$closure", "_enviromentHandler", 0);
    _static_2(B, "katex_base___fontHandler$closure", "_fontHandler", 0);
    _static_2(B, "katex_base___boldSymbolHandler$closure", "_boldSymbolHandler", 0);
    _static_2(B, "katex_base___textFontHandler$closure", "_textFontHandler", 0);
    _static_2(B, "katex_base___fracHandler$closure", "_fracHandler", 0);
    _static_2(B, "katex_base___overHandler$closure", "_overHandler", 0);
    _static_2(B, "katex_base___genfracHandler$closure", "_genfracHandler", 0);
    _static_2(B, "katex_base___aboveHandler$closure", "_aboveHandler", 0);
    _static_2(B, "katex_base___aboveFracHandler$closure", "_aboveFracHandler", 0);
    _static_2(B, "katex_base___horizBraceHandler$closure", "_horizBraceHandler", 0);
    _static_2(B, "katex_base___kernHandler$closure", "_kernHandler", 0);
    _static_2(B, "katex_base___mathLeftHandler$closure", "_mathLeftHandler", 0);
    _static_2(B, "katex_base___mathRightHandler$closure", "_mathRightHandler", 0);
    _static_2(B, "katex_base___mclassHandler$closure", "_mclassHandler", 0);
    _static_2(B, "katex_base___bigOpHandler$closure", "_bigOpHandler", 0);
    _static_2(B, "katex_base___mathFunctionHandler$closure", "_mathFunctionHandler", 0);
    _static_2(B, "katex_base___mathLimitsHandler$closure", "_mathLimitsHandler", 0);
    _static_2(B, "katex_base___integralHandler$closure", "_integralHandler", 0);
    _static_2(B, "katex_base___operatorNameHandler$closure", "_operatorNameHandler", 0);
    _static_2(B, "katex_base___phantomHandler$closure", "_phantomHandler", 0);
    _static_2(B, "katex_base___raiseBoxHandler$closure", "_raiseBoxHandler", 0);
    _static_2(B, "katex_base___ruleHandler$closure", "_ruleHandler", 0);
    _static_2(B, "katex_base___sizingHandler$closure", "_sizingHandler", 0);
    _static_2(B, "katex_base___sqrtHandler$closure", "_sqrtHandler", 0);
    _static_2(B, "katex_base___stylingHandler$closure", "_stylingHandler", 0);
    _static_2(B, "katex_base___textHandler$closure", "_textHandler", 0);
    _static_2(B, "katex_base___underOverHandler$closure", "_underOverHandler", 0);
    _instance_1_u(_ = B.RenderCustomLayout.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = B._RenderLayoutBuilderPreserveBaseline.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = B.RenderLine.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_0_u(B.RenderEditableLine.prototype, "get$onCursorOpacityChanged", "onCursorOpacityChanged$0", 10);
    _instance_1_u(_ = B.RenderMinDimension.prototype, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = B.RenderResetDimension.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = B.RenderRelativeWidthColumn.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _static_1(B, "math0_Math_defaultOnErrorFallback$closure", "Math_defaultOnErrorFallback", 117);
    _static_1(B, "optimize__optimizedRanges$closure", "optimizedRanges", 118);
    _static_2(B, "parser__Elements_svg$closure", "_Elements_svg", 2);
    _static_2(B, "parser__Elements_g$closure", "_Elements_g", 2);
    _static_2(B, "parser__Elements_textOrTspan$closure", "_Elements_textOrTspan", 2);
    _static_2(B, "parser__Elements_symbol$closure", "_Elements_symbol", 2);
    _static_2(B, "parser__Elements_pattern$closure", "_Elements_pattern", 2);
    _static_2(B, "parser__Elements_use$closure", "_Elements_use", 2);
    _static_2(B, "parser__Elements_radialGradient$closure", "_Elements_radialGradient", 2);
    _static_2(B, "parser__Elements_linearGradient$closure", "_Elements_linearGradient", 2);
    _static_2(B, "parser__Elements_clipPath$closure", "_Elements_clipPath", 2);
    _static_2(B, "parser__Elements_image$closure", "_Elements_image", 2);
    _static_1(B, "parser__Paths_circle$closure", "_Paths_circle", 8);
    _static_1(B, "parser__Paths_path$closure", "_Paths_path", 8);
    _static_1(B, "parser__Paths_rect$closure", "_Paths_rect", 8);
    _static_1(B, "parser__Paths_polygon$closure", "_Paths_polygon", 39);
    _static_1(B, "parser__Paths_polyline$closure", "_Paths_polyline", 39);
    _static_1(B, "parser__Paths_ellipse$closure", "_Paths_ellipse", 8);
    _static_1(B, "parser__Paths_line$closure", "_Paths_line", 8);
    _instance_1_u(_ = B._Resolver.prototype, "get$getDrawable", "getDrawable$1", 75);
    _instance_1_u(_, "get$getClipPath", "getClipPath$1", 76);
    _static_1(B, "default_mapping___textReplace$closure", "_textReplace", 17);
    _static_1(B, "default_mapping___singeQuoteAttributeReplace$closure", "_singeQuoteAttributeReplace", 17);
    _static_1(B, "default_mapping___doubleQuoteAttributeReplace$closure", "_doubleQuoteAttributeReplace", 17);
    _instance_0_u(_ = B.XmlEventParser.prototype, "get$event", "event$0", 125);
    _instance_0_u(_, "get$characterData", "characterData$0", 84);
    _instance_0_u(_, "get$startElement", "startElement$0", 85);
    _instance_0_i(_, "get$attributes", "attributes$0", 86);
    _instance_0_u(_, "get$attribute", "attribute$0", 87);
    _instance_0_u(_, "get$attributeAssignment", "attributeAssignment$0", 11);
    _instance_0_u(_, "get$attributeValue", "attributeValue$0", 11);
    _instance_0_u(_, "get$attributeValueDoubleQuote", "attributeValueDoubleQuote$0", 11);
    _instance_0_u(_, "get$attributeValueSingleQuote", "attributeValueSingleQuote$0", 11);
    _instance_0_u(_, "get$attributeValueNoQuote", "attributeValueNoQuote$0", 11);
    _instance_0_i(_, "get$endElement", "endElement$0", 89);
    _instance_0_u(_, "get$comment", "comment$0", 90);
    _instance_0_u(_, "get$cdata", "cdata$0", 91);
    _instance_0_u(_, "get$declaration", "declaration$0", 92);
    _instance_0_u(_, "get$processing", "processing$0", 93);
    _instance_0_u(_, "get$doctype", "doctype$0", 94);
    _instance_0_u(_, "get$doctypeExternalId", "doctypeExternalId$0", 18);
    _instance_0_u(_, "get$doctypeExternalIdSystem", "doctypeExternalIdSystem$0", 18);
    _instance_0_u(_, "get$doctypeExternalIdPublic", "doctypeExternalIdPublic$0", 18);
    _instance_0_u(_, "get$doctypeIntSubset", "doctypeIntSubset$0", 7);
    _instance_0_u(_, "get$doctypeElementDecl", "doctypeElementDecl$0", 12);
    _instance_0_u(_, "get$doctypeAttlistDecl", "doctypeAttlistDecl$0", 12);
    _instance_0_u(_, "get$doctypeEntityDecl", "doctypeEntityDecl$0", 12);
    _instance_0_u(_, "get$doctypeNotationDecl", "doctypeNotationDecl$0", 12);
    _instance_0_u(_, "get$doctypeReference", "doctypeReference$0", 12);
    _instance_0_u(_, "get$space", "space$0", 7);
    _instance_0_u(_, "get$spaceOptional", "spaceOptional$0", 7);
    _instance_0_u(_, "get$nameToken", "nameToken$0", 7);
    _instance_0_u(_, "get$nameStartChar", "nameStartChar$0", 7);
    _instance_0_u(_, "get$nameChar", "nameChar$0", 7);
    _instance_1_u(B.XmlEventVisitor.prototype, "get$visit", "visit$1", 113);
    _static_2(B, "array___arrayHandler$closure", "_arrayHandler", 5);
    _static_2(B, "array___matrixHandler$closure", "_matrixHandler", 5);
    _static_2(B, "array___smallMatrixHandler$closure", "_smallMatrixHandler", 5);
    _static_2(B, "array___subArrayHandler$closure", "_subArrayHandler", 5);
    _static_2(B, "cursor___cursorHandler$closure", "_cursorHandler", 0);
    _static_2(B, "katex_ext___notHandler$closure", "_notHandler", 0);
    _static_1(B, "code___toFormattedChar$closure", "_toFormattedChar", 123);
    _static_2(B, "failure_joiner__selectFirst$closure", "selectFirst", 14);
    _static_2(B, "failure_joiner__selectLast$closure", "selectLast", 14);
    _static_2(B, "failure_joiner__selectFarthest$closure", "selectFarthest", 14);
    _static_2(B, "parsers___parseSvgMatrix$closure", "_parseSvgMatrix", 6);
    _static_2(B, "parsers___parseSvgSkewX$closure", "_parseSvgSkewX", 6);
    _static_2(B, "parsers___parseSvgSkewY$closure", "_parseSvgSkewY", 6);
    _static_2(B, "parsers___parseSvgTranslate$closure", "_parseSvgTranslate", 6);
    _static_2(B, "parsers___parseSvgScale$closure", "_parseSvgScale", 6);
    _static_2(B, "parsers___parseSvgRotate$closure", "_parseSvgRotate", 6);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _mixin = hunkHelpers.mixin,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(C.Object, [B.ImageDescriptor, B.WebImageInfo, B.NetworkImageLoadException, B.TableBorder, B.ToggleableStateMixin, B.AccentRenderConfig, B.FontMetrics, B.GreenNode, B.CustomLayoutDelegate, B.StackDelimiterConf, B.MathOptions, B.OptionsDiff, B.FontOptions, B.PartialFontOptions, B.Measurement, B.SymbolRenderConfig, B.RenderConfig, B.SyntaxTree, B.SyntaxNode, B.PositionDependentMixin, B._ClipChildrenMixin, B.BuildResult, B._NodeSpacingConf, B.CharacterMetrics, B.EnvContext, B.EnvSpec, B.FunctionContext, B.FunctionSpec, B.Lexer, B.MacroExpander, B.MacroDefinition, B.MacroExpansion, B.Namespace, B.ParseException, B.TexParser, B.ArgumentParsingContext, B.ScriptsParsingResults, B.TexParserSettings, B.SourceLocation0, B.TexSymbolConfig, B.Token, B.AxisConfiguration, B._ScriptUvConf, B.DelimiterConf, B._KatexImagesData, B.BuildException, B.Cache0, B.SvgTheme, B.BytesLoader, B.SvgCacheKey, B.Svg, B.GptMarkdownConfig, B.MarkdownComponent, B._PathOffset, B.SvgPathStringSource, B.PathSegmentData, B.SvgPathNormalizer, B.Context1, B.ParserException, B.Parser, B.Token0, B.MatchesIterator, B.CharacterPredicate, B.LookupCharPredicate, B.RangeCharPredicate, B.WhitespaceCharPredicate, B.Tuple2, B.Tuple3, B.PictureInfo, B._PatternConfig, B._PatternState, B._DefaultPictureFactory, B.VectorGraphicsCodecListener, B._TextPosition, B._TextConfig, B.VectorGraphicsDecodeException, B.RasterKey, B.RasterData, B._PictureData, B._PictureKey, B.DecodeResponse, B.VectorGraphicsCodec, B.VectorGraphicsBuffer, B._ReadBuffer, B.DrawCommandBuilder, B.Point, B.Rect0, B.ImageData, B.DrawImageData, B.AffineMatrix, B.PathCommand, B.PathBuilder, B.Path, B._CircularIntervalList, B._PathDasher, B.PatternData, B.ImageSizeData, B.Color0, B.Gradient, B.Paint, B.Stroke, B.Fill, B.TextPosition0, B.TextConfig, B.TextDecoration0, B.Node0, B._SvgGroupTuple, B.SvgParser, B._Resolver, B._Viewport, B.SvgAttributes, B.DoubleOrPercentage, B.SvgStrokeAttributes, B.SvgFillAttributes, B.ColorOrNone, B.Visitor, B.SvgTheme0, B.ErrorOnUnResolvedNode, B.VectorInstructions, B.DrawCommand, B.Matrix41, B.Vector40, B.DtdExternalId, B.XmlEntityMapping, B.XmlException, B.XmlFormatException, B.XmlCache, B.XmlAnnotator, B.XmlHasBuffer, B.XmlHasLocation, B.XmlHasParent, B.__XmlEventEncoderSink_Object_XmlEventVisitor, B._XmlEvent_Object_XmlHasParent, B.XmlEventIterator, B.XmlEventParser, B.ConversionSink, B._XmlEventAttribute_Object_XmlNamed, B.XmlNamed, B.XmlEventVisitor]);
    _inheritMany(C._Enum, [B._CheckboxType, B._RadioType, B._FracPos, B.MatrixSeparatorStyle, B.MatrixColumnAlign, B._SqrtPos, B.Unit, B.MathSize, B.MathStyle, B.MathStyleDiff, B.AtomType, B.Mode, B.Strict, B._ScriptPos, B.FlutterMathMode, B.SvgPathSegType, B.RenderingStrategy, B._CurrentSection, B.PathFillType0, B.PathCommandType, B.ImageFormat, B.GradientUnitMode, B.BlendMode0, B.PaintingStyle0, B.StrokeCap0, B.StrokeJoin0, B.TileMode0, B.FontWeight0, B.TextDecorationStyle0, B.DrawCommandType, B.XmlAttributeType, B.XmlNodeType]);
    _inheritMany(C.StatefulWidget, [B.Checkbox, B.Radio, B.SelectableText, B.CodeField, B.LinkButton, B.MdWidget, B.SingleChildStatefulWidget, B.VectorGraphic]);
    _inheritMany(C.State, [B.__CheckboxState_State_TickerProviderStateMixin, B.__RadioState_State_TickerProviderStateMixin, B._SelectableTextState, B._CodeFieldState, B._LinkButtonState, B._MdWidgetState, B.SingleChildState, B._VectorGraphicWidgetState]);
    _inherit(B.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin, B.__CheckboxState_State_TickerProviderStateMixin);
    _inherit(B._CheckboxState, B.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin);
    _inheritMany(C.Closure, [B._CheckboxState__widgetFillColor_closure, B._CheckboxState_build_closure, B._CheckboxDefaultsM3_side_closure, B._CheckboxDefaultsM3_fillColor_closure, B._CheckboxDefaultsM3_checkColor_closure, B._CheckboxDefaultsM3_overlayColor_closure, B._RadioState__widgetFillColor_closure, B._RadioState_build_closure, B._RadioDefaultsM3_fillColor_closure, B._RadioDefaultsM3_overlayColor_closure, B.NetworkImage__fetchImageBytes_closure, B.NetworkImage__fetchImageBytes_closure0, B._ForwardingImageStreamCompleter_closure, B._ForwardingImageStreamCompleter__closure1, B.AccentNode_buildWidget_closure1, B.AccentUnderNode_buildWidget_closure0, B.EquationArrayNode_buildWidget_closure, B.EquationArrayNode_buildWidget_closure0, B.EquationArrayNode_toJson_closure, B.EquationArrayNode_toJson_closure0, B.EquationArrayNode_toJson_closure1, B.LeftRightNode_buildWidget_closure, B.LeftRightNode_toJson_closure, B.buildCustomSizedDelimWidget_closure, B.MatrixNode_MatrixNode_closure, B.MatrixNode_MatrixNode_closure0, B.MatrixNode_buildWidget_closure, B.MatrixNode_computeChildren_closure, B.MatrixNode_toJson_closure, B.MatrixNode_toJson_closure0, B.MatrixNode_toJson_closure1, B.MatrixNode_toJson_closure2, B.MatrixNode_toJson_closure3, B.MatrixNode_toJson_closure4, B.MatrixNode_toJson_closure5, B.MatrixNode_toJson__closure, B.MatrixLayoutDelegate_performHorizontalIntrinsicLayout_closure, B.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure, B.MatrixLayoutDelegate_performVerticalIntrinsicLayout_closure0, B.getSqrtAdvanceWidth_closure, B.sqrtSvg_closure, B.StretchyOpNode_buildWidget_closure0, B.StyleNode_toJson_closure, B.SymbolNode_buildWidget_closure, B.stringToNode_closure, B.SlotableNode_computeWidth_closure, B.TransparentNode_computeWidth_closure, B.TransparentNode_computeChildPositions_closure, B.TransparentNode_buildWidget_closure, B.TransparentNode_flattenedChildList_closure, B.EquationRowNode_computeWidth_closure, B.EquationRowNode_computeChildPositions_closure, B.EquationRowNode_flattenedChildList_closure, B.EquationRowNode_computeCaretPositions_closure, B.EquationRowNode_buildWidget_closure, B.EquationRowNode_buildWidget_closure0, B.EquationRowNode_buildWidget_closure1, B.EquationRowNode_buildWidget_closure4, B.EquationRowNode_buildWidget__closure1, B.EquationRowNode_buildWidget__closure2, B.EquationRowNode_buildWidget__closure0, B.EquationRowNode_buildWidget__closure, B.EquationRowNode_toJson_closure, B.allBlocks_closure, B.supportedCodepoint_closure, B._casesHandler_closure, B._alignedHandler_closure, B._alignedHandler__closure, B._alignedAtHandler_closure, B._alignedAtHandler_closure0, B._alignedAtHandler__closure, B._charHandler_closure, B._delimiterSymbols_closure, B._checkDelimiter_closure, B._leftHandler_closure, B._enviromentHandler_closure, B._enviromentHandler_closure0, B.MacroExpander_consumeArgs_closure, B.MacroExpander_expandMacroAsText_closure, B.MacroDefinition$fromString_closure, B.MacroDefinition$fromCtxString_closure, B.MacroDefinition$fromMacroExpansion_closure, B.builtinMacros_closure, B.builtinMacros_closure0, B.builtinMacros_closure1, B.builtinMacros_closure2, B.builtinMacros_closure3, B.builtinMacros_closure4, B.builtinMacros_closure5, B.builtinMacros_closure6, B.builtinMacros_closure7, B.builtinMacros_closure8, B.builtinMacros_closure9, B.builtinMacros__closure0, B.builtinMacros_closure10, B.builtinMacros__closure, B.builtinMacros_closure11, B.builtinMacros_closure12, B.builtinMacros_closure13, B.ParseException_closure, B.TexParser__parseSymbol_closure, B.RenderEqnArray__computeLayout_closure, B.makeDecoratedEqualSymbol_closure, B.makeBaseSymbol_closure, B.unicodeLiteral_closure, B.Cache_putIfAbsent_closure, B.SvgLoader__load_closure, B.SvgLoader__load__closure, B._CodeFieldState_build__closure, B.CustomRb_build_closure, B.CustomCb_build_closure, B._LinkButtonState_build_closure2, B._LinkButtonState_build_closure3, B._LinkButtonState_build_closure0, B._LinkButtonState_build_closure1, B.MarkdownComponent_generate_closure, B.MarkdownComponent_generate_closure0, B.MarkdownComponent_generate_closure1, B.LatexMathMultiLine_build_closure, B.LatexMathMultiLine_build_closure0, B.LatexMathMultiLine_build__closure, B.LatexMath_span_closure, B.LatexMath_span_closure0, B.LatexMath_span__closure, B.ImageMd_span_closure0, B.ImageMd_span_closure, B.TableMd_build_closure, B.TableMd_build__closure0, B.TableMd_build_closure0, B.TableMd_build_closure1, B.TableMd_build_closure2, B.TableMd_build__closure, B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin_activate_closure, B._single_closure, B._range_closure, B.RecordParserExtension2_map2_closure, B.RecordParserExtension3_map3_closure, B.RecordParserExtension4_map4_closure, B.RecordParserExtension5_map5_closure, B.RecordParserExtension8_map8_closure, B.string_closure, B._Selector0State_buildWithChild_closure, B.Selector2_closure, B.decodeVectorGraphics_process_closure, B.FlutterVectorGraphicsListener_onDrawText_draw, B.FlutterVectorGraphicsListener_onImage__closure, B._VectorGraphicWidgetState__loadPicture_closure, B._VectorGraphicWidgetState__loadPicture_closure0, B.CubicToCommand_computeLength_compute, B.SvgParser__parseColor_closure, B.SvgParser__parseColor_closure0, B.SvgParser__parseColor_closure1, B.SvgParser__parseColor_closure2, B.SvgParser__parseColor_closure3, B.SvgParser__parseColor_closure4, B.SvgParser__parseColor_closure5, B.SvgParser__parseColor_closure6, B._Resolver_getClipPath_extractPathsFromNode, B._Resolver_getClipPath_closure, B.SvgAttributes_heritable_closure, B.CommandBuilderVisitor_visitResolvedTextPositionNode_closure, B._asNumericCharacterReferences_closure, B.XmlEventParser_characterData_closure, B.XmlEventParser_startElement_closure, B.XmlEventParser_attribute_closure, B.XmlEventParser_attributeAssignment_closure, B.XmlEventParser_attributeValueDoubleQuote_closure, B.XmlEventParser_attributeValueSingleQuote_closure, B.XmlEventParser_attributeValueNoQuote_closure, B.XmlEventParser_endElement_closure, B.XmlEventParser_comment_closure, B.XmlEventParser_cdata_closure, B.XmlEventParser_declaration_closure, B.XmlEventParser_processing_closure0, B.XmlEventParser_doctype_closure, B.XmlEventParser_doctypeExternalIdSystem_closure, B.XmlEventParser_doctypeExternalIdPublic_closure, B.XmlEventParser_doctypeIntSubset_closure, B.eventParserCache_closure]);
    _inherit(B.ToggleablePainter, C.ChangeNotifier);
    _inheritMany(B.ToggleablePainter, [B._CheckboxPainter, B._RadioPainter]);
    _inherit(B._CheckboxDefaultsM3, H.CheckboxThemeData);
    _inheritMany(C.StatelessWidget, [B.Divider, B._TextButtonWithIconChild, B.Spacer, B.Multiscripts, B.Math, B.SvgPicture, B.CustomRb, B.CustomCb, B.BlockQuoteWidget, B.SelectableAdapter, B.UnorderedListView, B.OrderedListView, B.GptMarkdown]);
    _inherit(B.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin, B.__RadioState_State_TickerProviderStateMixin);
    _inherit(B._RadioState, B.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin);
    _inherit(B._RadioDefaultsM3, H.RadioThemeData);
    _inherit(B._TextSpanEditingController, L.TextEditingController);
    _inherit(B._SelectableTextSelectionGestureDetectorBuilder, L.TextSelectionGestureDetectorBuilder);
    _inheritMany(C.Closure0Args, [B._SelectableTextState__onControllerChanged_closure, B._SelectableTextState__handleSelectionChanged_closure, B._SelectableTextState_build_closure, B.NetworkImage__loadAsync_loadViaDecode, B.NetworkImage__loadAsync_loadViaImgElement, B.ToggleableStateMixin__handleTapDown_closure, B.ToggleableStateMixin__handleTapEnd_closure, B.ToggleableStateMixin__handleFocusHighlightChanged_closure, B.ToggleableStateMixin__handleHoverChanged_closure, B.SvgLoader_loadBytes_closure, B._CodeFieldState_build_closure, B._CodeFieldState_build___closure, B._CodeFieldState_build__closure0, B._LinkButtonState_build_closure, B._LinkButtonState__handleHover_closure, B._LinkButtonState__handlePress_closure, B.ATagMd_span_closure, B.decodeVectorGraphics_process, B.FlutterVectorGraphicsListener_onImage_closure, B._VectorGraphicWidgetState__loadPicture_closure1, B._VectorGraphicWidgetState__handleError_closure, B._VectorGraphicWidgetState__loadAssetBytes_closure, B._VectorGraphicWidgetState__loadAssetBytes_closure0, B.DrawCommandBuilder__getOrGenerateId_closure, B._Resolver_addDeferredGradient_closure, B._Resolver_addClipPath_closure, B._Resolver_addDrawable_closure]);
    _inherit(B._TextButtonWithIcon, L.TextButton);
    _inherit(B.NetworkImage, A2.ImageProvider);
    _inheritMany(C.Closure2Args, [B.NetworkImage__loadAsync_closure, B._ForwardingImageStreamCompleter__closure, B._ForwardingImageStreamCompleter__closure0, B._ForwardingImageStreamCompleter__closure2, B._ForwardingImageStreamCompleter_closure0, B.OneFrameImageStreamCompleter_closure, B.RenderFittedBox_hitTestChildren_closure, B.AccentNode_buildWidget_closure, B.AccentNode_buildWidget_closure0, B.AccentUnderNode_buildWidget_closure, B.EnclosureNode_buildWidget_closure, B.EnclosureNode_buildWidget_closure0, B.LeftRightNode_buildWidget__closure0, B.LeftRightNode_buildWidget__closure, B.MatrixNode_buildWidget_closure0, B.SqrtNode_buildWidget_closure, B.StretchyOpNode_buildWidget_closure, B.EquationRowNode_buildWidget_closure2, B.EquationRowNode_buildWidget_closure3, B.textFontMetrics_closure, B.scriptFontMetrics_closure, B.scriptscriptFontMetrics_closure, B.environments_closure, B.RegisterFunctionExt_registerFunctions_closure, B.Namespace_endGroup_closure, B.RenderCustomLayout_computeMinIntrinsicWidth_closure, B.RenderCustomLayout_computeMaxIntrinsicWidth_closure, B.RenderCustomLayout_computeMinIntrinsicHeight_closure, B.RenderCustomLayout_computeMaxIntrinsicHeight_closure, B.IntrinsicLayoutDelegate_getIntrinsicSize_closure, B.IntrinsicLayoutDelegate_getIntrinsicSize_closure0, B.IntrinsicLayoutDelegate_computeLayout_closure, B.IntrinsicLayoutDelegate_computeLayout_closure0, B.IntrinsicLayoutDelegate_computeLayout_closure1, B.IntrinsicLayoutDelegate_computeLayout_closure2, B.RenderLine_computeMinIntrinsicWidth_closure, B.RenderLine_computeMaxIntrinsicWidth_closure, B.RenderLine_computeMinIntrinsicHeight_closure, B.RenderLine_computeMaxIntrinsicHeight_closure, B.RenderRelativeWidthColumn_computeMinIntrinsicWidth_closure, B.RenderRelativeWidthColumn_computeMaxIntrinsicWidth_closure, B.RenderRelativeWidthColumn_computeMinIntrinsicHeight_closure, B.RenderRelativeWidthColumn_computeMaxIntrinsicHeight_closure, B.optimizedRanges_closure, B.optimizedRanges_closure0, B._pattern_closure, B.ProxyProvider_closure, B.RenderWebVectorGraphic_paint_closure, B.RenderWebVectorGraphic_paint__closure, B.RenderWebVectorGraphic_paint___closure, B.FlutterVectorGraphicsListener_onImage_closure0, B.FlutterVectorGraphicsListener_onImage_closure1, B.XmlEventParser_processing_closure]);
    _inheritMany(A2.ImageStreamCompleter, [B._ForwardingImageStreamCompleter, B.OneFrameImageStreamCompleter]);
    _inherit(B.OvalBorder, M.CircleBorder);
    _inheritMany(C.RenderProxyBox, [B.RenderFittedBox, B._BaselineDistanceBox, B.RenderResetBaseline, B.RenderShiftBaseline, B.RenderCustomImageError, B.RenderCustomImageLoading, B.__RenderSelectableAdapter_RenderProxyBox_Selectable]);
    _inheritMany(C.SingleChildRenderObjectWidget, [B.FittedBox, B._BaselineDistance, B.MinDimension, B.ResetBaseline, B.ResetDimension, B.ShiftBaseline, B._SelectableAdapter, B._RawVectorGraphicWidget, B._RawWebVectorGraphicWidget, B._RawPictureVectorGraphicWidget]);
    _inheritMany(B.GreenNode, [B.ParentableNode, B.LeafNode]);
    _inheritMany(B.ParentableNode, [B.SlotableNode, B._TransparentNode_ParentableNode__ClipChildrenMixin, B._EquationRowNode_ParentableNode_PositionDependentMixin]);
    _inheritMany(B.SlotableNode, [B.AccentNode, B.AccentUnderNode, B.EnclosureNode, B.EquationArrayNode, B.FracNode, B.FunctionNode, B.LeftRightNode, B.MatrixNode, B.MultiscriptsNode, B.NaryOperatorNode, B.OverNode, B.RaiseBoxNode, B.SqrtNode, B.StretchyOpNode, B.UnderNode]);
    _inheritMany(B.LeafNode, [B.CursorNode, B.PhantomNode, B.SpaceNode, B.SymbolNode, B.TemporaryNode]);
    _inheritMany(H.CustomPainter, [B.LinePainter, B.BlockQuotePainter]);
    _inheritMany(B.CustomLayoutDelegate, [B.HorizontalStrikeDelegate, B.IntrinsicLayoutDelegate, B.SqrtLayoutDelegate]);
    _inheritMany(B.IntrinsicLayoutDelegate, [B.FracLayoutDelegate, B.MatrixLayoutDelegate, B.MultiscriptsLayoutDelegate]);
    _inherit(B.TransparentNode, B._TransparentNode_ParentableNode__ClipChildrenMixin);
    _inherit(B.StyleNode, B.TransparentNode);
    _inherit(B._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin, B._EquationRowNode_ParentableNode_PositionDependentMixin);
    _inherit(B.EquationRowNode, B._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin);
    _inheritMany(B.TemporaryNode, [B.CrNode, B._LeftRightRightNode, B._MiddleNode, B._EndEnvironmentNode]);
    _inheritMany(E.ContainerBoxParentData, [B.CustomLayoutParentData, B.EqnArrayParentData, B.LineParentData, B.VListParentData]);
    _inheritMany(E.ParentDataWidget, [B.CustomLayoutId, B.LineElement, B.VListElement]);
    _inheritMany(E.MultiChildRenderObjectWidget, [B.CustomLayout, B.EqnArray, B.Line, B.EditableLine, B.VList]);
    _inheritMany(C.RenderBox, [B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin, B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin, B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin, B._RenderLine_RenderBox_ContainerRenderObjectMixin, B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin, B.RenderDivider, B.RenderWebVectorGraphic, B.RenderVectorGraphic, B.RenderPictureVectorGraphic]);
    _inherit(B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin);
    _inherit(B.RenderCustomLayout, B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin);
    _inherit(B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(B.RenderEqnArray, B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(B.LayoutBuilderPreserveBaseline, V.ConstrainedLayoutBuilder);
    _inherit(B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin);
    _inherit(B._RenderLayoutBuilderPreserveBaseline, B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder);
    _inherit(B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, B._RenderLine_RenderBox_ContainerRenderObjectMixin);
    _inherit(B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(B.RenderLine, B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(B.RenderEditableLine, B.RenderLine);
    _inheritMany(E.RenderShiftedBox, [B.RenderMinDimension, B.RenderResetDimension]);
    _inherit(B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin);
    _inherit(B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin);
    _inherit(B.RenderRelativeWidthColumn, B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin);
    _inherit(B.SvgLoader, B.BytesLoader);
    _inherit(B.SvgStringLoader, B.SvgLoader);
    _inheritMany(C.LeafRenderObjectWidget, [B.CustomDivider, B.CustomImageError, B.CustomImageLoading]);
    _inherit(B.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant, B.__RenderSelectableAdapter_RenderProxyBox_Selectable);
    _inherit(B._RenderSelectableAdapter, B.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant);
    _inheritMany(B.MarkdownComponent, [B.InlineMd, B.BlockMd]);
    _inheritMany(B.BlockMd, [B.IndentMd, B.HTag, B.HrLine, B.CheckBoxMd, B.RadioButtonMd, B.UnOrderedList, B.OrderedList, B.LatexMathMultiLine, B.TableMd, B.CodeBlockMd]);
    _inheritMany(B.InlineMd, [B.NewLines, B.BlockQuote, B.HighlightedText, B.BoldMd, B.StrikeMd, B.ItalicMd, B.LatexMath, B.SourceTag, B.ATagMd, B.ImageMd, B.UnderLineMd]);
    _inherit(B.CustomTableColumnWidth, A1.TableColumnWidth);
    _inherit(B.GptMarkdownThemeData, Af.ThemeExtension);
    _inherit(B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin, C.StatefulElement);
    _inherit(B.SingleChildStatefulElement, B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin);
    _inherit(B.Result, B.Context1);
    _inheritMany(B.Result, [B.Success, B.Failure]);
    _inheritMany(B.Parser, [B.ReferenceParser, B.DelegateParser, B.ListParser, B.SequenceParser2, B.SequenceParser3, B.SequenceParser4, B.SequenceParser5, B.SequenceParser8, B.EpsilonParser, B.NewlineParser, B.AnyCharacterParser, B.SingleCharacterParser, B.PredicateParser, B.RepeatingCharacterParser, B.XmlCharacterDataParser]);
    _inheritMany(C.Iterable, [B.MatchesIterable, B.XmlEventIterable]);
    _inheritMany(B.DelegateParser, [B.FlattenParser, B.MapParser, B.TokenParser, B.OptionalParser, B.SkipParser, B.RepeatingParser]);
    _inheritMany(B.CharacterPredicate, [B.SingleCharPredicate, B.ConstantCharPredicate, B.NotCharacterPredicate]);
    _inherit(B.ChoiceParser, B.ListParser);
    _inheritMany(B.RepeatingParser, [B.LimitedRepeatingParser, B.PossessiveRepeatingParser]);
    _inherit(B.LazyRepeatingParser, B.LimitedRepeatingParser);
    _inherit(B.ProxyProvider0, A7.InheritedProvider);
    _inherit(B.ProxyProvider, B.ProxyProvider0);
    _inherit(B.Selector0, B.SingleChildStatefulWidget);
    _inherit(B._Selector0State, B.SingleChildState);
    _inherit(B.Selector2, B.Selector0);
    _inherit(B.FlutterVectorGraphicsListener, B.VectorGraphicsCodecListener);
    _inheritMany(B.PathCommand, [B.LineToCommand, B.MoveToCommand, B.CubicToCommand, B.CloseCommand]);
    _inheritMany(B.ImageSizeData, [B.PngImageSizeData, B.GifImageSizeData, B.JpegImageSizeData, B.WebPImageSizeData, B.BmpImageSizeData]);
    _inheritMany(B.Gradient, [B.LinearGradient0, B.RadialGradient]);
    _inheritMany(B.Node0, [B._EmptyNode, B.TransformableNode, B.ResolvedTextPositionNode, B.ResolvedTextNode, B.ResolvedPathNode, B.ResolvedClipNode, B.ResolvedMaskNode, B.ResolvedImageNode, B.ResolvedPatternNode]);
    _inheritMany(B.TransformableNode, [B.AttributedNode, B.ClipNode, B.MaskNode, B.PatternNode]);
    _inheritMany(B.AttributedNode, [B.ParentNode, B.PathNode, B.DeferredNode, B.TextNode, B.ImageNode]);
    _inheritMany(B.ParentNode, [B.ViewportNode, B.TextPositionNode, B.SaveLayerNode]);
    _inheritMany(B.Visitor, [B.ResolvingVisitor, B._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode]);
    _inherit(B.CommandBuilderVisitor, B._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode);
    _inherit(B.XmlDefaultEntityMapping, B.XmlEntityMapping);
    _inherit(B._XmlParserException_XmlException_XmlFormatException, B.XmlException);
    _inherit(B.XmlParserException, B._XmlParserException_XmlException_XmlFormatException);
    _inherit(B.XmlEventEncoder, C.Converter);
    _inherit(B._XmlEventEncoderSink, B.__XmlEventEncoderSink_Object_XmlEventVisitor);
    _inherit(B._XmlEvent_Object_XmlHasParent_XmlHasLocation, B._XmlEvent_Object_XmlHasParent);
    _inherit(B._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer, B._XmlEvent_Object_XmlHasParent_XmlHasLocation);
    _inherit(B.XmlEvent, B._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer);
    _inheritMany(B.XmlEvent, [B.XmlCDATAEvent, B.XmlCommentEvent, B.XmlDeclarationEvent, B.XmlDoctypeEvent, B._XmlEndElementEvent_XmlEvent_XmlNamed, B.XmlProcessingEvent, B._XmlStartElementEvent_XmlEvent_XmlNamed, B.XmlRawTextEvent]);
    _inherit(B.XmlEndElementEvent, B._XmlEndElementEvent_XmlEvent_XmlNamed);
    _inherit(B.XmlStartElementEvent, B._XmlStartElementEvent_XmlEvent_XmlNamed);
    _inherit(B._XmlEventAttribute_Object_XmlNamed_XmlHasParent, B._XmlEventAttribute_Object_XmlNamed);
    _inherit(B.XmlEventAttribute, B._XmlEventAttribute_Object_XmlNamed_XmlHasParent);
    _mixinHard(B.__CheckboxState_State_TickerProviderStateMixin, E.TickerProviderStateMixin);
    _mixinHard(B.__CheckboxState_State_TickerProviderStateMixin_ToggleableStateMixin, B.ToggleableStateMixin);
    _mixinHard(B.__RadioState_State_TickerProviderStateMixin, E.TickerProviderStateMixin);
    _mixinHard(B.__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin, B.ToggleableStateMixin);
    _mixin(B._EquationRowNode_ParentableNode_PositionDependentMixin, B.PositionDependentMixin);
    _mixin(B._EquationRowNode_ParentableNode_PositionDependentMixin__ClipChildrenMixin, B._ClipChildrenMixin);
    _mixin(B._TransparentNode_ParentableNode__ClipChildrenMixin, B._ClipChildrenMixin);
    _mixinHard(B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin, E.ContainerRenderObjectMixin);
    _mixin(B._RenderCustomLayout_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, E.RenderBoxContainerDefaultsMixin);
    _mixinHard(B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin, E.ContainerRenderObjectMixin);
    _mixin(B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, E.RenderBoxContainerDefaultsMixin);
    _mixinHard(B._RenderEqnArray_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, H.DebugOverflowIndicatorMixin);
    _mixinHard(B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin, C.RenderObjectWithChildMixin);
    _mixin(B.__RenderLayoutBuilderPreserveBaseline_RenderBox_RenderObjectWithChildMixin_RenderConstrainedLayoutBuilder, V.RenderConstrainedLayoutBuilder);
    _mixinHard(B._RenderLine_RenderBox_ContainerRenderObjectMixin, E.ContainerRenderObjectMixin);
    _mixin(B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, E.RenderBoxContainerDefaultsMixin);
    _mixinHard(B._RenderLine_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, H.DebugOverflowIndicatorMixin);
    _mixinHard(B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin, E.ContainerRenderObjectMixin);
    _mixin(B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin, E.RenderBoxContainerDefaultsMixin);
    _mixinHard(B._RenderRelativeWidthColumn_RenderBox_ContainerRenderObjectMixin_RenderBoxContainerDefaultsMixin_DebugOverflowIndicatorMixin, H.DebugOverflowIndicatorMixin);
    _mixin(B.__RenderSelectableAdapter_RenderProxyBox_Selectable, E.Selectable0);
    _mixinHard(B.__RenderSelectableAdapter_RenderProxyBox_Selectable_SelectionRegistrant, H.SelectionRegistrant);
    _mixinHard(B._SingleChildStatefulElement_StatefulElement_SingleChildWidgetElementMixin, An.SingleChildWidgetElementMixin);
    _mixin(B._CommandBuilderVisitor_Visitor_ErrorOnUnResolvedNode, B.ErrorOnUnResolvedNode);
    _mixin(B._XmlParserException_XmlException_XmlFormatException, B.XmlFormatException);
    _mixin(B.__XmlEventEncoderSink_Object_XmlEventVisitor, B.XmlEventVisitor);
    _mixin(B._XmlEvent_Object_XmlHasParent, B.XmlHasParent);
    _mixin(B._XmlEvent_Object_XmlHasParent_XmlHasLocation, B.XmlHasLocation);
    _mixin(B._XmlEvent_Object_XmlHasParent_XmlHasLocation_XmlHasBuffer, B.XmlHasBuffer);
    _mixin(B._XmlEndElementEvent_XmlEvent_XmlNamed, B.XmlNamed);
    _mixin(B._XmlStartElementEvent_XmlEvent_XmlNamed, B.XmlNamed);
    _mixin(B._XmlEventAttribute_Object_XmlNamed, B.XmlNamed);
    _mixin(B._XmlEventAttribute_Object_XmlNamed_XmlHasParent, B.XmlHasParent);
  })();
  C._Universe_addRules(init.typeUniverse, JSON.parse('{"Checkbox":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CheckboxType":{"Enum":[]},"_CheckboxState":{"TickerProviderStateMixin":["Checkbox"],"State":["Checkbox"],"TickerProvider":[],"State.T":"Checkbox"},"_CheckboxPainter":{"ChangeNotifier":[],"CustomPainter":[],"Listenable":[]},"_CheckboxDefaultsM3":{"CheckboxThemeData":[]},"Divider":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"Radio":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RadioType":{"Enum":[]},"_RadioState":{"TickerProviderStateMixin":["Radio<1>"],"State":["Radio<1>"],"TickerProvider":[],"State.T":"Radio<1>"},"_RadioPainter":{"ChangeNotifier":[],"CustomPainter":[],"Listenable":[]},"_RadioDefaultsM3":{"RadioThemeData":[]},"SelectableText":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TextSpanEditingController":{"TextEditingController":[],"ValueNotifier":["TextEditingValue"],"ChangeNotifier":[],"ValueListenable":["TextEditingValue"],"Listenable":[],"ValueNotifier.T":"TextEditingValue"},"_SelectableTextState":{"State":["SelectableText"],"TextSelectionGestureDetectorBuilderDelegate":[],"State.T":"SelectableText"},"_TextButtonWithIcon":{"ButtonStyleButton":[],"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_TextButtonWithIconChild":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"NetworkImage":{"NetworkImage0":[],"ImageProvider":["NetworkImage0"],"ImageProvider.T":"NetworkImage0"},"_ForwardingImageStreamCompleter":{"ImageStreamCompleter":[]},"WebImageInfo":{"ImageInfo":[]},"NetworkImageLoadException":{"Exception":[]},"OneFrameImageStreamCompleter":{"ImageStreamCompleter":[]},"OvalBorder":{"CircleBorder":[],"OutlinedBorder":[],"ShapeBorder":[]},"RenderFittedBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"FittedBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"Spacer":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"ToggleablePainter":{"ChangeNotifier":[],"CustomPainter":[],"Listenable":[]},"AccentNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"AccentUnderNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"CursorNode":{"GreenNode":[]},"_BaselineDistance":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_BaselineDistanceBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"EnclosureNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"LinePainter":{"CustomPainter":[],"Listenable":[]},"HorizontalStrikeDelegate":{"CustomLayoutDelegate":["int"]},"EquationArrayNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"_FracPos":{"Enum":[]},"FracNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"FracLayoutDelegate":{"IntrinsicLayoutDelegate":["_FracPos"],"CustomLayoutDelegate":["_FracPos"],"IntrinsicLayoutDelegate.T":"_FracPos"},"FunctionNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"LeftRightNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"MatrixSeparatorStyle":{"Enum":[]},"MatrixColumnAlign":{"Enum":[]},"MatrixNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"MatrixLayoutDelegate":{"IntrinsicLayoutDelegate":["int"],"CustomLayoutDelegate":["int"],"IntrinsicLayoutDelegate.T":"int"},"MultiscriptsNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"NaryOperatorNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"OverNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"PhantomNode":{"GreenNode":[]},"RaiseBoxNode":{"SlotableNode":["EquationRowNode"],"GreenNode":[],"SlotableNode.T":"EquationRowNode"},"SpaceNode":{"GreenNode":[]},"_SqrtPos":{"Enum":[]},"SqrtNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"SqrtLayoutDelegate":{"CustomLayoutDelegate":["_SqrtPos"]},"StretchyOpNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"StyleNode":{"GreenNode":[]},"SymbolNode":{"GreenNode":[]},"UnderNode":{"SlotableNode":["EquationRowNode?"],"GreenNode":[],"SlotableNode.T":"EquationRowNode?"},"Unit":{"Enum":[]},"MathSize":{"Enum":[]},"MathStyle":{"Enum":[]},"MathStyleDiff":{"Enum":[]},"EquationRowNode":{"PositionDependentMixin":["GreenNode"],"GreenNode":[]},"AtomType":{"Enum":[]},"ParentableNode":{"GreenNode":[]},"SlotableNode":{"GreenNode":[]},"TransparentNode":{"GreenNode":[]},"LeafNode":{"GreenNode":[]},"TemporaryNode":{"GreenNode":[]},"Mode":{"Enum":[]},"CrNode":{"GreenNode":[]},"_LeftRightRightNode":{"GreenNode":[]},"_EndEnvironmentNode":{"GreenNode":[]},"_MiddleNode":{"GreenNode":[]},"Lexer":{"LexerInterface":[]},"MacroExpander":{"MacroContext":[]},"ParseException":{"FlutterMathException":[],"Exception":[]},"Strict":{"Enum":[]},"CustomLayoutParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"CustomLayoutId":{"ParentDataWidget":["CustomLayoutParentData<1>"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"CustomLayoutParentData<1>"},"CustomLayout":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderCustomLayout":{"RenderBoxContainerDefaultsMixin":["RenderBox","CustomLayoutParentData<@>"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","CustomLayoutParentData<@>"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"CustomLayoutParentData<@>","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"CustomLayoutParentData<@>"},"IntrinsicLayoutDelegate":{"CustomLayoutDelegate":["1"]},"EqnArrayParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"EqnArray":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderEqnArray":{"RenderBoxContainerDefaultsMixin":["RenderBox","EqnArrayParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","EqnArrayParentData"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"EqnArrayParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"EqnArrayParentData"},"LayoutBuilderPreserveBaseline":{"ConstrainedLayoutBuilder":["BoxConstraints"],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"ConstrainedLayoutBuilder.0":"BoxConstraints"},"_RenderLayoutBuilderPreserveBaseline":{"RenderConstrainedLayoutBuilder":["BoxConstraints","RenderBox"],"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox","RenderConstrainedLayoutBuilder.0":"BoxConstraints"},"LineParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"LineElement":{"ParentDataWidget":["LineParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"LineParentData"},"Line":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderLine":{"RenderBoxContainerDefaultsMixin":["RenderBox","LineParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","LineParentData"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"LineParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"LineParentData"},"EditableLine":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderEditableLine":{"RenderLine":[],"RenderBoxContainerDefaultsMixin":["RenderBox","LineParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","LineParentData"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"LineParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"LineParentData"},"MinDimension":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderMinDimension":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_ScriptPos":{"Enum":[]},"Multiscripts":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"MultiscriptsLayoutDelegate":{"IntrinsicLayoutDelegate":["_ScriptPos"],"CustomLayoutDelegate":["_ScriptPos"],"IntrinsicLayoutDelegate.T":"_ScriptPos"},"ResetBaseline":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderResetBaseline":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"ResetDimension":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderResetDimension":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"ShiftBaseline":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderShiftBaseline":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"VListParentData":{"BoxParentData":[],"ContainerParentDataMixin":["RenderBox"],"ParentData":[],"ContainerParentDataMixin.0":"RenderBox"},"VListElement":{"ParentDataWidget":["VListParentData"],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[],"ParentDataWidget.T":"VListParentData"},"VList":{"MultiChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderRelativeWidthColumn":{"RenderBoxContainerDefaultsMixin":["RenderBox","VListParentData"],"RenderBox":[],"ContainerRenderObjectMixin":["RenderBox","VListParentData"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"VListParentData","ContainerRenderObjectMixin.0":"RenderBox","RenderBoxContainerDefaultsMixin.1":"VListParentData"},"FlutterMathException":{"Exception":[]},"BuildException":{"FlutterMathException":[],"Exception":[]},"Math":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FlutterMathMode":{"Enum":[]},"SvgLoader":{"BytesLoader":[]},"SvgStringLoader":{"SvgLoader":["~"],"BytesLoader":[],"SvgLoader.T":"~"},"SvgPicture":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"CodeField":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CodeFieldState":{"State":["CodeField"],"State.T":"CodeField"},"CustomDivider":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderDivider":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"CustomImageError":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderCustomImageError":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"CustomImageLoading":{"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderCustomImageLoading":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"CustomRb":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"CustomCb":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BlockQuoteWidget":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BlockQuotePainter":{"CustomPainter":[],"Listenable":[]},"LinkButton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_LinkButtonState":{"State":["LinkButton"],"State.T":"LinkButton"},"SelectableAdapter":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SelectableAdapter":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderSelectableAdapter":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"Selectable0":[],"DiagnosticableTree":[],"ValueListenable":["SelectionGeometry"],"HitTestTarget":[],"Listenable":[],"RenderObjectWithChildMixin.0":"RenderBox"},"UnorderedListView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"OrderedListView":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"MdWidget":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"GptMarkdownThemeData":{"ThemeExtension":["GptMarkdownThemeData"],"ThemeExtension.T":"GptMarkdownThemeData"},"GptMarkdownTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"GptMarkdown":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"InlineMd":{"MarkdownComponent":[]},"BlockMd":{"MarkdownComponent":[]},"IndentMd":{"MarkdownComponent":[]},"HTag":{"MarkdownComponent":[]},"NewLines":{"MarkdownComponent":[]},"HrLine":{"MarkdownComponent":[]},"CheckBoxMd":{"MarkdownComponent":[]},"RadioButtonMd":{"MarkdownComponent":[]},"BlockQuote":{"MarkdownComponent":[]},"UnOrderedList":{"MarkdownComponent":[]},"OrderedList":{"MarkdownComponent":[]},"HighlightedText":{"MarkdownComponent":[]},"BoldMd":{"MarkdownComponent":[]},"StrikeMd":{"MarkdownComponent":[]},"ItalicMd":{"MarkdownComponent":[]},"LatexMathMultiLine":{"MarkdownComponent":[]},"LatexMath":{"MarkdownComponent":[]},"SourceTag":{"MarkdownComponent":[]},"ATagMd":{"MarkdownComponent":[]},"ImageMd":{"MarkdownComponent":[]},"TableMd":{"MarkdownComponent":[]},"CodeBlockMd":{"MarkdownComponent":[]},"UnderLineMd":{"MarkdownComponent":[]},"_MdWidgetState":{"State":["MdWidget"],"State.T":"MdWidget"},"CustomTableColumnWidth":{"TableColumnWidth":[]},"SingleChildStatefulWidget":{"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[]},"SingleChildState":{"State":["1"]},"SingleChildStatefulElement":{"StatefulElement":[],"Element":[],"DiagnosticableTree":[],"BuildContext":[]},"SvgPathSegType":{"Enum":[]},"ParserException":{"FormatException":[],"Exception":[]},"Failure":{"Result":["0&"],"Context1":[]},"Result":{"Context1":[]},"Success":{"Result":["1"],"Context1":[]},"ReferenceParser":{"ResolvableParser":["1"],"Parser":["1"]},"MatchesIterable":{"Iterable":["1"],"Iterable.E":"1"},"MatchesIterator":{"Iterator":["1"]},"FlattenParser":{"DelegateParser":["~","String"],"Parser":["String"],"DelegateParser.T":"~"},"MapParser":{"DelegateParser":["1","2"],"Parser":["2"],"DelegateParser.T":"1"},"TokenParser":{"DelegateParser":["1","Token0<1>"],"Parser":["Token0<1>"],"DelegateParser.T":"1"},"SingleCharPredicate":{"CharacterPredicate":[]},"ConstantCharPredicate":{"CharacterPredicate":[]},"LookupCharPredicate":{"CharacterPredicate":[]},"NotCharacterPredicate":{"CharacterPredicate":[]},"RangeCharPredicate":{"CharacterPredicate":[]},"WhitespaceCharPredicate":{"CharacterPredicate":[]},"ChoiceParser":{"ListParser":["1","1"],"Parser":["1"],"ListParser.R":"1"},"DelegateParser":{"Parser":["2"]},"SequenceParser2":{"Parser":["+(1,2)"]},"SequenceParser3":{"Parser":["+(1,2,3)"]},"SequenceParser4":{"Parser":["+(1,2,3,4)"]},"SequenceParser5":{"Parser":["+(1,2,3,4,5)"]},"SequenceParser8":{"Parser":["+(1,2,3,4,5,6,7,8)"]},"ListParser":{"Parser":["2"]},"OptionalParser":{"DelegateParser":["1","1"],"Parser":["1"],"DelegateParser.T":"1"},"SkipParser":{"DelegateParser":["1","1"],"Parser":["1"],"DelegateParser.T":"1"},"EpsilonParser":{"Parser":["1"]},"NewlineParser":{"Parser":["String"]},"AnyCharacterParser":{"Parser":["String"]},"SingleCharacterParser":{"Parser":["String"]},"PredicateParser":{"Parser":["String"]},"RepeatingCharacterParser":{"Parser":["String"]},"LazyRepeatingParser":{"LimitedRepeatingParser":["1"],"RepeatingParser":["1","List<1>"],"DelegateParser":["1","List<1>"],"Parser":["List<1>"],"DelegateParser.T":"1"},"LimitedRepeatingParser":{"RepeatingParser":["1","List<1>"],"DelegateParser":["1","List<1>"],"Parser":["List<1>"]},"PossessiveRepeatingParser":{"RepeatingParser":["1","List<1>"],"DelegateParser":["1","List<1>"],"Parser":["List<1>"],"DelegateParser.T":"1"},"RepeatingParser":{"DelegateParser":["1","2"],"Parser":["2"]},"ProxyProvider0":{"InheritedProvider":["1"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[]},"ProxyProvider":{"ProxyProvider0":["2"],"InheritedProvider":["2"],"SingleChildStatelessWidget":[],"StatelessWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"InheritedProvider.T":"2"},"Selector0":{"SingleChildStatefulWidget":[],"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[]},"_Selector0State":{"SingleChildState":["Selector0<1>"],"State":["Selector0<1>"],"State.T":"Selector0<1>"},"Selector2":{"Selector0":["3"],"SingleChildStatefulWidget":[],"StatefulWidget":[],"SingleChildWidget":[],"Widget":[],"DiagnosticableTree":[],"Selector0.T":"3"},"RenderWebVectorGraphic":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"_DefaultPictureFactory":{"PictureFactory":[]},"FlutterVectorGraphicsListener":{"VectorGraphicsCodecListener":[]},"VectorGraphicsDecodeException":{"Exception":[]},"RenderVectorGraphic":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"RenderPictureVectorGraphic":{"RenderBox":[],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"VectorGraphic":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"RenderingStrategy":{"Enum":[]},"_VectorGraphicWidgetState":{"State":["VectorGraphic"],"State.T":"VectorGraphic"},"_RawVectorGraphicWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RawWebVectorGraphicWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RawPictureVectorGraphicWidget":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_CurrentSection":{"Enum":[]},"PathBuilder":{"PathProxy":[]},"PathFillType0":{"Enum":[]},"PathCommandType":{"Enum":[]},"LineToCommand":{"PathCommand":[]},"MoveToCommand":{"PathCommand":[]},"CubicToCommand":{"PathCommand":[]},"CloseCommand":{"PathCommand":[]},"ImageFormat":{"Enum":[]},"BlendMode0":{"Enum":[]},"LinearGradient0":{"Gradient":[]},"GradientUnitMode":{"Enum":[]},"RadialGradient":{"Gradient":[]},"PaintingStyle0":{"Enum":[]},"StrokeCap0":{"Enum":[]},"StrokeJoin0":{"Enum":[]},"TileMode0":{"Enum":[]},"FontWeight0":{"Enum":[]},"TextDecorationStyle0":{"Enum":[]},"AttributedNode":{"Node0":[]},"_EmptyNode":{"Node0":[]},"TransformableNode":{"Node0":[]},"ViewportNode":{"ParentNode":[],"AttributedNode":[],"Node0":[]},"ParentNode":{"AttributedNode":[],"Node0":[]},"TextPositionNode":{"ParentNode":[],"AttributedNode":[],"Node0":[]},"SaveLayerNode":{"ParentNode":[],"AttributedNode":[],"Node0":[]},"ClipNode":{"Node0":[]},"MaskNode":{"Node0":[]},"PathNode":{"AttributedNode":[],"Node0":[]},"DeferredNode":{"AttributedNode":[],"Node0":[]},"TextNode":{"AttributedNode":[],"Node0":[]},"ImageNode":{"AttributedNode":[],"Node0":[]},"PatternNode":{"Node0":[]},"ResolvedPathNode":{"Node0":[]},"ResolvingVisitor":{"Visitor":["Node0","AffineMatrix"]},"ResolvedTextPositionNode":{"Node0":[]},"ResolvedTextNode":{"Node0":[]},"ResolvedClipNode":{"Node0":[]},"ResolvedMaskNode":{"Node0":[]},"ResolvedImageNode":{"Node0":[]},"ResolvedPatternNode":{"Node0":[]},"CommandBuilderVisitor":{"ErrorOnUnResolvedNode":["~","~"],"Visitor":["~","~"],"ErrorOnUnResolvedNode.V":"~"},"DrawCommandType":{"Enum":[]},"XmlDefaultEntityMapping":{"XmlEntityMapping":[]},"XmlAttributeType":{"Enum":[]},"XmlNodeType":{"Enum":[]},"XmlException":{"Exception":[]},"XmlParserException":{"FormatException":[],"Exception":[]},"XmlCharacterDataParser":{"Parser":["String"]},"XmlEventEncoder":{"Converter":["List<XmlEvent>","String"],"StreamTransformer":["List<XmlEvent>","String"],"Converter.T":"String","Converter.S":"List<XmlEvent>"},"_XmlEventEncoderSink":{"XmlEventVisitor":[],"Sink":["List<XmlEvent>"]},"XmlCDATAEvent":{"XmlEvent":[]},"XmlCommentEvent":{"XmlEvent":[]},"XmlDeclarationEvent":{"XmlEvent":[]},"XmlDoctypeEvent":{"XmlEvent":[]},"XmlEndElementEvent":{"XmlEvent":[]},"XmlProcessingEvent":{"XmlEvent":[]},"XmlStartElementEvent":{"XmlEvent":[]},"XmlTextEvent":{"XmlEvent":[]},"XmlRawTextEvent":{"XmlTextEvent":[],"XmlEvent":[]},"XmlEventIterable":{"Iterable":["XmlEvent"],"Iterable.E":"XmlEvent"},"XmlEventIterator":{"Iterator":["XmlEvent"]},"ConversionSink":{"Sink":["1"]},"CheckboxTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"RadioTheme":{"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"MathController":{"ChangeNotifier":[],"Listenable":[]},"DefaultSvgTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]},"ResolvableParser":{"Parser":["1"]}}'));
  C._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"__RadioState_State_TickerProviderStateMixin":1,"__RadioState_State_TickerProviderStateMixin_ToggleableStateMixin":1,"ToggleableStateMixin":1,"ParentableNode":1}'));
  var string$ = {
    x2ePleas: ".Please report this error with correponding input.",
    x5c_____: "\\ *\\\\\\[((?:.)*?)\\\\\\]|(\\ *\\\\begin.*?\\\\end{.*?})"
  };
  var type$ = (function rtii() {
    var findType = C.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      AffineMatrix: findType("AffineMatrix"),
      Animation_double: findType("Animation<double>"),
      ArgumentParsingContext: findType("ArgumentParsingContext"),
      AttributedNode: findType("AttributedNode"),
      AxisConfiguration__FracPos: findType("AxisConfiguration<_FracPos>"),
      AxisConfiguration__ScriptPos: findType("AxisConfiguration<_ScriptPos>"),
      AxisConfiguration_int: findType("AxisConfiguration<int>"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      BuildContext: findType("BuildContext"),
      BuildResult: findType("BuildResult"),
      ByteData: findType("ByteData"),
      CallbackAction_ActivateIntent: findType("CallbackAction<ActivateIntent>"),
      CharacterPredicate: findType("CharacterPredicate"),
      Checkbox: findType("Checkbox"),
      CheckboxTheme: findType("CheckboxTheme"),
      CodeUnits: findType("CodeUnits"),
      Codec: findType("Codec0"),
      Color: findType("Color"),
      ColorFilterLayer: findType("ColorFilterLayer"),
      ColorMapper: findType("ColorMapper"),
      Color_2: findType("Color0"),
      ConstantStringMap_String_AtomType: findType("ConstantStringMap<String,AtomType>"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringMap_String_TexSymbolConfig: findType("ConstantStringMap<String,TexSymbolConfig>"),
      ConstantStringMap_String_int: findType("ConstantStringMap<String,int>"),
      ConstantStringMap_of_String_and_List_String: findType("ConstantStringMap<String,List<String>>"),
      ConstantStringMap_of_String_and_List_double: findType("ConstantStringMap<String,List<double>>"),
      ConstantStringSet_String: findType("ConstantStringSet<String>"),
      Consumer_FlutterMathMode: findType("Consumer<FlutterMathMode>"),
      ContainerLayer: findType("ContainerLayer0"),
      ConversionSink_String: findType("ConversionSink<String>"),
      CrNode: findType("CrNode"),
      CubicToCommand: findType("CubicToCommand"),
      CustomLayoutId_int: findType("CustomLayoutId<int>"),
      CustomLayoutParentData_dynamic: findType("CustomLayoutParentData<@>"),
      CustomLayout__FracPos: findType("CustomLayout<_FracPos>"),
      CustomLayout__ScriptPos: findType("CustomLayout<_ScriptPos>"),
      CustomLayout__SqrtPos: findType("CustomLayout<_SqrtPos>"),
      CustomLayout_int: findType("CustomLayout<int>"),
      DefaultSelectionStyle: findType("DefaultSelectionStyle"),
      DefaultSvgTheme: findType("DefaultSvgTheme"),
      DefaultTextStyle: findType("DefaultTextStyle"),
      DelimiterConf: findType("DelimiterConf"),
      Directionality: findType("Directionality"),
      DirectionallyExtendSelectionEvent: findType("DirectionallyExtendSelectionEvent"),
      DrawCommand: findType("DrawCommand"),
      DrawImageData: findType("DrawImageData"),
      DtdExternalId: findType("DtdExternalId"),
      EditableTextState: findType("EditableTextState"),
      EnvContext: findType("EnvContext"),
      EnvSpec: findType("EnvSpec"),
      EpsilonParser_String: findType("EpsilonParser<String>"),
      EpsilonParser_void: findType("EpsilonParser<~>"),
      EqnArrayParentData: findType("EqnArrayParentData"),
      EquationRowNode: findType("EquationRowNode"),
      EquationRowNode_Function_List_EquationRowNode: findType("EquationRowNode(List<EquationRowNode>)"),
      EquationRowNode_Function_List_GreenNode: findType("EquationRowNode(List<GreenNode>)"),
      Error: findType("Error"),
      Failure: findType("Failure"),
      FlutterMathException: findType("FlutterMathException"),
      FlutterMathMode: findType("FlutterMathMode"),
      FontOptions: findType("FontOptions"),
      FormatException: findType("FormatException"),
      FunctionContext: findType("FunctionContext"),
      FunctionSpec_GreenNode: findType("FunctionSpec<GreenNode>"),
      Future_ByteData_Function: findType("Future<ByteData>()"),
      Future_Codec_Function_ImmutableBuffer: findType("Future<Codec0>(ImmutableBuffer)"),
      Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int: findType("Future<Codec0>(ImmutableBuffer{allowUpscaling:bool,cacheHeight:int?,cacheWidth:int?})"),
      Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int: findType("Future<Codec0>(ImmutableBuffer{getTargetSize:TargetImageSize(int,int)?})"),
      GeneralConstantMap_AtomType_Measurement: findType("GeneralConstantMap<AtomType,Measurement>"),
      GeneralConstantMap_int_CharacterMetrics: findType("GeneralConstantMap<int,CharacterMetrics>"),
      GeneralConstantMap_of_AtomType_and_Map_AtomType_Measurement: findType("GeneralConstantMap<AtomType,Map<AtomType,Measurement>>"),
      GeneralConstantMap_of_List_String_and_EnvSpec: findType("GeneralConstantMap<List<String>,EnvSpec>"),
      GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode: findType("GeneralConstantMap<List<String>,FunctionSpec<GreenNode>>"),
      GeneralConstantMap_of_Mode_and_nullable_String: findType("GeneralConstantMap<Mode,String?>"),
      GeneralConstantSet_nullable_AtomType: findType("GeneralConstantSet<AtomType?>"),
      GptMarkdownTheme: findType("GptMarkdownTheme"),
      GptMarkdownThemeData: findType("GptMarkdownThemeData"),
      Gradient: findType("Gradient"),
      GranularlyExtendSelectionEvent: findType("GranularlyExtendSelectionEvent"),
      GreenNode: findType("GreenNode"),
      Image: findType("Image2"),
      ImageChunkEvent: findType("ImageChunkEvent"),
      ImageData: findType("ImageData"),
      ImageDescriptor: findType("ImageDescriptor"),
      ImageInfo: findType("ImageInfo"),
      ImageStreamCompleter: findType("ImageStreamCompleter"),
      ImmutableBuffer: findType("ImmutableBuffer"),
      IndexedVertices: findType("IndexedVertices"),
      InlineSpan: findType("InlineSpan"),
      Iterable_RangeCharPredicate: findType("Iterable<RangeCharPredicate>"),
      Iterable_RenderBox: findType("Iterable<RenderBox>"),
      Iterable_double: findType("Iterable<double>"),
      Iterable_nullable_Map_of_String_and_nullable_Object: findType("Iterable<Map<String,Object?>?>"),
      JSArray_Alignment: findType("JSArray<Alignment>"),
      JSArray_BuildResult: findType("JSArray<BuildResult>"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_Color_2: findType("JSArray<Color0>"),
      JSArray_DelimiterConf: findType("JSArray<DelimiterConf>"),
      JSArray_DrawCommand: findType("JSArray<DrawCommand>"),
      JSArray_EquationRowNode: findType("JSArray<EquationRowNode>"),
      JSArray_FontOptions: findType("JSArray<FontOptions>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_Gradient: findType("JSArray<Gradient>"),
      JSArray_GreenNode: findType("JSArray<GreenNode>"),
      JSArray_ImageStreamListener: findType("JSArray<ImageStreamListener>"),
      JSArray_InlineSpan: findType("JSArray<InlineSpan>"),
      JSArray_List_EquationRowNode: findType("JSArray<List<EquationRowNode>>"),
      JSArray_List_GreenNode: findType("JSArray<List<GreenNode>>"),
      JSArray_List_int: findType("JSArray<List<int>>"),
      JSArray_Map_of_String_and_nullable_MacroDefinition: findType("JSArray<Map<String,MacroDefinition?>>"),
      JSArray_MarkdownComponent: findType("JSArray<MarkdownComponent>"),
      JSArray_MathOptions: findType("JSArray<MathOptions>"),
      JSArray_MatrixColumnAlign: findType("JSArray<MatrixColumnAlign>"),
      JSArray_MatrixNode: findType("JSArray<MatrixNode>"),
      JSArray_MatrixSeparatorStyle: findType("JSArray<MatrixSeparatorStyle>"),
      JSArray_Measurement: findType("JSArray<Measurement>"),
      JSArray_Node: findType("JSArray<Node0>"),
      JSArray_Paint: findType("JSArray<Paint0>"),
      JSArray_Parser_DtdExternalId: findType("JSArray<Parser<DtdExternalId>>"),
      JSArray_Parser_Object: findType("JSArray<Parser<Object>>"),
      JSArray_Parser_Record_2_String_and_XmlAttributeType: findType("JSArray<Parser<+(String,XmlAttributeType)>>"),
      JSArray_Parser_String: findType("JSArray<Parser<String>>"),
      JSArray_Parser_XmlEvent: findType("JSArray<Parser<XmlEvent>>"),
      JSArray_Parser_dynamic: findType("JSArray<Parser<@>>"),
      JSArray_Path: findType("JSArray<Path>"),
      JSArray_PathBuilder: findType("JSArray<PathBuilder>"),
      JSArray_PathCommand: findType("JSArray<PathCommand>"),
      JSArray_Path_2: findType("JSArray<Path0>"),
      JSArray_Point: findType("JSArray<Point>"),
      JSArray_RangeCharPredicate: findType("JSArray<RangeCharPredicate>"),
      JSArray_Rect: findType("JSArray<Rect>"),
      JSArray_RenderBox: findType("JSArray<RenderBox>"),
      JSArray_Shader: findType("JSArray<Shader>"),
      JSArray_Size: findType("JSArray<Size>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_SymbolNode: findType("JSArray<SymbolNode>"),
      JSArray_TextAlign: findType("JSArray<TextAlign>"),
      JSArray_TextDecoration: findType("JSArray<TextDecoration>"),
      JSArray_TextSpan: findType("JSArray<TextSpan>"),
      JSArray_Token: findType("JSArray<Token>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_XmlEvent: findType("JSArray<XmlEvent>"),
      JSArray_XmlStartElementEvent: findType("JSArray<XmlStartElementEvent>"),
      JSArray__TextConfig: findType("JSArray<_TextConfig>"),
      JSArray__TextPosition: findType("JSArray<_TextPosition>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_EquationRowNode: findType("JSArray<EquationRowNode?>"),
      JSArray_nullable_String: findType("JSArray<String?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_2_Object_and_nullable_StackTrace: findType("JSArray<~(Object,StackTrace?)>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSObject: findType("JSObject0"),
      LabeledGlobalKey_EditableTextState: findType("LabeledGlobalKey<EditableTextState>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      Layer: findType("Layer0"),
      LazyRepeatingParser_Object: findType("LazyRepeatingParser<Object>"),
      LazyRepeatingParser_String: findType("LazyRepeatingParser<String>"),
      LazyRepeatingParser_dynamic: findType("LazyRepeatingParser<@>"),
      LineElement: findType("LineElement"),
      LineParentData: findType("LineParentData"),
      LineToCommand: findType("LineToCommand"),
      List_EquationRowNode: findType("List<EquationRowNode>"),
      List_Gradient: findType("List<Gradient>"),
      List_GreenNode: findType("List<GreenNode>"),
      List_InlineSpan: findType("List<InlineSpan>"),
      List_MathOptions: findType("List<MathOptions>"),
      List_Node: findType("List<Node0>"),
      List_Object: findType("List<Object>"),
      List_Path_Function_String: findType("List<Path>(String)"),
      List_String: findType("List<String>"),
      List_Token: findType("List<Token>"),
      List_XmlEvent: findType("List<XmlEvent>"),
      List_XmlEventAttribute: findType("List<XmlEventAttribute>"),
      List_double: findType("List<double>"),
      List_int: findType("List<int>"),
      List_nullable_BuildResult: findType("List<BuildResult?>"),
      List_nullable_EquationRowNode: findType("List<EquationRowNode?>"),
      List_nullable_SyntaxNode: findType("List<SyntaxNode?>"),
      MacroContext: findType("MacroContext"),
      MacroDefinition: findType("MacroDefinition"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      MapEntry_String_double: findType("MapEntry<String,double>"),
      MapEntry_of_String_and_List_List_int: findType("MapEntry<String,List<List<int>>>"),
      MapEntry_of_int_and_Map_int_String: findType("MapEntry<int,Map<int,String>>"),
      Map_String_String: findType("Map<String,String>"),
      Map__FracPos_RenderBox: findType("Map<_FracPos,RenderBox>"),
      Map__FracPos_double: findType("Map<_FracPos,double>"),
      Map__ScriptPos_RenderBox: findType("Map<_ScriptPos,RenderBox>"),
      Map__ScriptPos_double: findType("Map<_ScriptPos,double>"),
      Map__SqrtPos_RenderBox: findType("Map<_SqrtPos,RenderBox>"),
      Map_int_RenderBox: findType("Map<int,RenderBox>"),
      Map_int_String_Function_String: findType("Map<int,String>(String)"),
      Map_int_double: findType("Map<int,double>"),
      Map_of_String_and_nullable_Object: findType("Map<String,Object?>"),
      Map_of_Type_and_Action_Intent: findType("Map<Type,Action<Intent>>"),
      MappedListIterable_PathBuilder_Path: findType("MappedListIterable<PathBuilder,Path>"),
      MappedListIterable_Size_double: findType("MappedListIterable<Size,double>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_SymbolNode: findType("MappedListIterable<String,SymbolNode>"),
      MappedListIterable_String_Widget: findType("MappedListIterable<String,Widget>"),
      MappedListIterable_String_int: findType("MappedListIterable<String,int>"),
      MappedListIterable_double_double: findType("MappedListIterable<double,double>"),
      MappedListIterable_of_List_EquationRowNode_and_EquationRowNode: findType("MappedListIterable<List<EquationRowNode>,EquationRowNode>"),
      MappedListIterable_of_List_GreenNode_and_EquationRowNode: findType("MappedListIterable<List<GreenNode>,EquationRowNode>"),
      MappedListIterable_of_String_and_Map_int_String: findType("MappedListIterable<String,Map<int,String>>"),
      MarkdownComponent: findType("MarkdownComponent"),
      MatchesIterable_Token_String: findType("MatchesIterable<Token0<String>>"),
      MathController: findType("MathController"),
      MathOptions: findType("MathOptions"),
      Matrix4: findType("Matrix41"),
      MatrixColumnAlign: findType("MatrixColumnAlign"),
      MatrixSeparatorStyle: findType("MatrixSeparatorStyle"),
      MdWidget: findType("MdWidget"),
      Measurement: findType("Measurement"),
      MediaQuery: findType("MediaQuery"),
      MouseCursor: findType("MouseCursor"),
      MoveToCommand: findType("MoveToCommand"),
      Namespace_MacroDefinition: findType("Namespace<MacroDefinition>"),
      NativeByteBuffer: findType("NativeByteBuffer"),
      NetworkImage: findType("NetworkImage0"),
      NetworkImage_2: findType("NetworkImage"),
      Node: findType("Node0"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      Offset: findType("Offset"),
      OpacityLayer: findType("OpacityLayer"),
      OptionalParser_Record_2_String_and_XmlAttributeType: findType("OptionalParser<+(String,XmlAttributeType)>"),
      OptionalParser_String: findType("OptionalParser<String>"),
      OptionalParser_nullable_DtdExternalId: findType("OptionalParser<DtdExternalId?>"),
      OptionalParser_nullable_String: findType("OptionalParser<String?>"),
      Paint: findType("Paint"),
      Parser_dynamic: findType("Parser<@>"),
      Path: findType("Path"),
      PathBuilder: findType("PathBuilder"),
      PathCommand: findType("PathCommand"),
      Path_Function_PathBuilder: findType("Path(PathBuilder)"),
      PatternData: findType("PatternData"),
      PictureInfo: findType("PictureInfo"),
      Point: findType("Point"),
      PointerEnterEvent: findType("PointerEnterEvent"),
      PointerExitEvent: findType("PointerExitEvent"),
      PositionDependentMixin_GreenNode: findType("PositionDependentMixin<GreenNode>"),
      RadioTheme: findType("RadioTheme"),
      Radio_bool: findType("Radio<bool>"),
      RangeCharPredicate: findType("RangeCharPredicate"),
      Record_2_String_and_XmlAttributeType: findType("+(String,XmlAttributeType)"),
      ReferenceParser_DtdExternalId: findType("ReferenceParser<DtdExternalId>"),
      ReferenceParser_List_XmlEventAttribute: findType("ReferenceParser<List<XmlEventAttribute>>"),
      ReferenceParser_Record_2_String_and_XmlAttributeType: findType("ReferenceParser<+(String,XmlAttributeType)>"),
      ReferenceParser_String: findType("ReferenceParser<String>"),
      ReferenceParser_XmlCDATAEvent: findType("ReferenceParser<XmlCDATAEvent>"),
      ReferenceParser_XmlCommentEvent: findType("ReferenceParser<XmlCommentEvent>"),
      ReferenceParser_XmlDeclarationEvent: findType("ReferenceParser<XmlDeclarationEvent>"),
      ReferenceParser_XmlDoctypeEvent: findType("ReferenceParser<XmlDoctypeEvent>"),
      ReferenceParser_XmlEndElementEvent: findType("ReferenceParser<XmlEndElementEvent>"),
      ReferenceParser_XmlEvent: findType("ReferenceParser<XmlEvent>"),
      ReferenceParser_XmlEventAttribute: findType("ReferenceParser<XmlEventAttribute>"),
      ReferenceParser_XmlProcessingEvent: findType("ReferenceParser<XmlProcessingEvent>"),
      ReferenceParser_XmlStartElementEvent: findType("ReferenceParser<XmlStartElementEvent>"),
      ReferenceParser_XmlTextEvent: findType("ReferenceParser<XmlTextEvent>"),
      ReferenceParser_dynamic: findType("ReferenceParser<@>"),
      ReferenceParser_void: findType("ReferenceParser<~>"),
      RegExpMatch: findType("RegExpMatch"),
      RenderBox: findType("RenderBox"),
      RenderCustomImageError: findType("RenderCustomImageError"),
      RenderCustomImageLoading: findType("RenderCustomImageLoading"),
      RenderCustomLayout_dynamic: findType("RenderCustomLayout<@>"),
      RenderDivider: findType("RenderDivider"),
      RenderEditableLine: findType("RenderEditableLine"),
      RenderFittedBox: findType("RenderFittedBox"),
      RenderLine: findType("RenderLine"),
      RenderMinDimension: findType("RenderMinDimension"),
      RenderPictureVectorGraphic: findType("RenderPictureVectorGraphic"),
      RenderRelativeWidthColumn: findType("RenderRelativeWidthColumn"),
      RenderResetBaseline: findType("RenderResetBaseline"),
      RenderResetDimension: findType("RenderResetDimension"),
      RenderShiftBaseline: findType("RenderShiftBaseline"),
      RenderVectorGraphic: findType("RenderVectorGraphic"),
      RenderWebVectorGraphic: findType("RenderWebVectorGraphic"),
      ResolvableParser_dynamic: findType("ResolvableParser<@>"),
      ReversedListIterable_Token: findType("ReversedListIterable<Token>"),
      Runes: findType("Runes"),
      SelectableText: findType("SelectableText"),
      SelectionEdgeUpdateEvent: findType("SelectionEdgeUpdateEvent"),
      SelectionStyle: findType("SelectionStyle"),
      SequenceParser8_of_String_and_String_and_String_and_nullable_DtdExternalId_and_String_and_nullable_String_and_String_and_String: findType("SequenceParser8<String,String,String,DtdExternalId?,String,String?,String,String>"),
      Set_WidgetState: findType("Set<WidgetState>"),
      SingleChildState_SingleChildStatefulWidget: findType("SingleChildState<SingleChildStatefulWidget>"),
      SingleChildStatefulWidget: findType("SingleChildStatefulWidget"),
      Sink_String: findType("Sink<String>"),
      Size: findType("Size"),
      Size_Function_BoxConstraints: findType("Size(BoxConstraints)"),
      SkipParser_DtdExternalId: findType("SkipParser<DtdExternalId>"),
      SpaceNode: findType("SpaceNode"),
      StackTrace: findType("StackTrace"),
      StreamController_ImageChunkEvent: findType("StreamController<ImageChunkEvent>"),
      String: findType("String"),
      String_Function_Match: findType("String(Match)"),
      String_Function_String: findType("String(String)"),
      Success_String: findType("Success<String>"),
      SymbolNode: findType("SymbolNode"),
      SymbolNode_Function_String: findType("SymbolNode(String)"),
      SynchronousFuture_ByteData: findType("SynchronousFuture<ByteData>"),
      SynchronousFuture_NetworkImage: findType("SynchronousFuture<NetworkImage>"),
      SynchronousFuture_PictureInfo: findType("SynchronousFuture<PictureInfo>"),
      TableRow: findType("TableRow"),
      TapDragUpDetails: findType("TapDragUpDetails"),
      TexParser: findType("TexParser"),
      TexSymbolConfig: findType("TexSymbolConfig"),
      TextAlign: findType("TextAlign"),
      TextBaseline: findType("TextBaseline"),
      TextConfig: findType("TextConfig"),
      TextPainter: findType("TextPainter"),
      TextPosition: findType("TextPosition0"),
      TextSelection: findType("TextSelection"),
      Token: findType("Token"),
      TokenParser_String: findType("TokenParser<String>"),
      TransformLayer: findType("TransformLayer"),
      Tuple2_LayerLink_LayerLink: findType("Tuple2<LayerLink,LayerLink>"),
      Tuple2_double_double: findType("Tuple2<double,double>"),
      Tuple3_of_TextSelection_and_nullable_LayerLink_and_nullable_LayerLink: findType("Tuple3<TextSelection,LayerLink?,LayerLink?>"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      UnsupportedError: findType("UnsupportedError"),
      VListParentData: findType("VListParentData"),
      ValueNotifier_SelectionGeometry: findType("ValueNotifier<SelectionGeometry>"),
      Vector4: findType("Vector40"),
      VectorGraphic: findType("VectorGraphic"),
      Visitor_Node_AffineMatrix: findType("Visitor<Node0,AffineMatrix>"),
      WhereIterable_String: findType("WhereIterable<String>"),
      Widget: findType("Widget"),
      WidgetState: findType("WidgetState"),
      WidgetStatePropertyAll_EdgeInsetsGeometry: findType("WidgetStatePropertyAll<EdgeInsetsGeometry>"),
      Widget_Function_String: findType("Widget(String)"),
      Wrapper_AnimationController: findType("Wrapper<AnimationController>"),
      XmlCDATAEvent: findType("XmlCDATAEvent"),
      XmlCommentEvent: findType("XmlCommentEvent"),
      XmlDeclarationEvent: findType("XmlDeclarationEvent"),
      XmlDoctypeEvent: findType("XmlDoctypeEvent"),
      XmlEndElementEvent: findType("XmlEndElementEvent"),
      XmlEntityMapping: findType("XmlEntityMapping"),
      XmlEvent: findType("XmlEvent"),
      XmlEventAttribute: findType("XmlEventAttribute"),
      XmlProcessingEvent: findType("XmlProcessingEvent"),
      XmlStartElementEvent: findType("XmlStartElementEvent"),
      XmlTextEvent: findType("XmlTextEvent"),
      _AsyncCompleter_JSObject: findType("_AsyncCompleter<JSObject0>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _CachedLayoutCalculation_BoxConstraints_Size: findType("_CachedLayoutCalculation<BoxConstraints,Size>"),
      _CachedLayoutCalculation_double_double: findType("_CachedLayoutCalculation<double,double>"),
      _EndEnvironmentNode: findType("_EndEnvironmentNode"),
      _FracPos: findType("_FracPos"),
      _Future_JSObject: findType("_Future<JSObject0>"),
      _Future_void: findType("_Future<~>"),
      _LeftRightRightNode: findType("_LeftRightRightNode"),
      _NestedHookElement: findType("_NestedHookElement"),
      _NodeSpacingConf: findType("_NodeSpacingConf"),
      _PathOffset: findType("_PathOffset"),
      _PatternState: findType("_PatternState"),
      _PictureData: findType("_PictureData"),
      _RenderSelectableAdapter: findType("_RenderSelectableAdapter"),
      _ScriptPos: findType("_ScriptPos"),
      _SqrtPos: findType("_SqrtPos"),
      _SvgGroupTuple: findType("_SvgGroupTuple"),
      _SyncStarIterable_PathSegmentData: findType("_SyncStarIterable<PathSegmentData>"),
      _SyncStarIterable_XmlEvent: findType("_SyncStarIterable<XmlEvent>"),
      _WidgetStatePropertyWith_Color: findType("_WidgetStatePropertyWith<Color>"),
      _WidgetStatePropertyWith_MouseCursor: findType("_WidgetStatePropertyWith<MouseCursor>"),
      _WidgetStatePropertyWith_nullable_Color: findType("_WidgetStatePropertyWith<Color?>"),
      bool_Function_String: findType("bool(String)"),
      double: findType("double"),
      double_Function_RenderBox_double: findType("double(RenderBox,double)"),
      double_Function_Size: findType("double(Size)"),
      double_Function_double: findType("double(double)"),
      dynamic: findType("@"),
      int: findType("int"),
      int_Function_String: findType("int(String)"),
      nullable_Animation_double: findType("Animation<double>?"),
      nullable_AttributedNode_Function_String: findType("AttributedNode?(String)"),
      nullable_BorderSide: findType("BorderSide?"),
      nullable_BoxConstraints_Function_double: findType("BoxConstraints(double)?"),
      nullable_BoxConstraints_Function_double_double: findType("BoxConstraints(double,double)?"),
      nullable_BuildResult: findType("BuildResult?"),
      nullable_ColorFilterLayer: findType("ColorFilterLayer?"),
      nullable_CustomLayoutId_int: findType("CustomLayoutId<int>?"),
      nullable_DtdExternalId: findType("DtdExternalId?"),
      nullable_EquationRowNode: findType("EquationRowNode?"),
      nullable_GlobalKey_State_StatefulWidget: findType("GlobalKey<State<StatefulWidget>>?"),
      nullable_GptMarkdownThemeData: findType("GptMarkdownThemeData?"),
      nullable_Gradient: findType("Gradient?"),
      nullable_GreenNode: findType("GreenNode?"),
      nullable_ImageChunkEvent: findType("ImageChunkEvent?"),
      nullable_Intent: findType("Intent?"),
      nullable_List_double: findType("List<double>?"),
      nullable_List_nullable_BuildResult: findType("List<BuildResult?>?"),
      nullable_MacroDefinition: findType("MacroDefinition?"),
      nullable_Map_of_String_and_nullable_Object: findType("Map<String,Object?>?"),
      nullable_MouseCursor: findType("MouseCursor?"),
      nullable_Node: findType("Node0?"),
      nullable_Object: findType("Object?"),
      nullable_Result_XmlEvent: findType("Result<XmlEvent>?"),
      nullable_StackTrace: findType("StackTrace?"),
      nullable_String: findType("String?"),
      nullable_String_Function_Match: findType("String(Match)?"),
      nullable_String_Function_String: findType("String(String)?"),
      nullable_SyntaxNode: findType("SyntaxNode?"),
      nullable_TextSelection: findType("TextSelection?"),
      nullable_Widget: findType("Widget?"),
      nullable_WidgetStateProperty_MouseCursor: findType("WidgetStateProperty<MouseCursor>?"),
      nullable_XmlEvent: findType("XmlEvent?"),
      nullable__NestedHookElement: findType("_NestedHookElement?"),
      nullable_void_Function_bool: findType("~(bool)?"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Node: findType("~(Node0)"),
      void_Function_PaintingContext_Offset: findType("~(PaintingContext,Offset)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    A.AffineMatrix_qrl = new B.AffineMatrix(1, 0, 0, 1, 0, 0, 1);
    A.Alignment_1_m1 = new E.Alignment(1, -1);
    A.Alignment_m1_1 = new E.Alignment(-1, 1);
    A.AtomType_0 = new B.AtomType(0, "ord");
    A.AtomType_1 = new B.AtomType(1, "op");
    A.AtomType_2 = new B.AtomType(2, "bin");
    A.AtomType_3 = new B.AtomType(3, "rel");
    A.AtomType_4 = new B.AtomType(4, "open");
    A.AtomType_5 = new B.AtomType(5, "close");
    A.AtomType_8 = new B.AtomType(8, "spacing");
    A.BlendMode_30 = new B.BlendMode0(3, "srcOver");
    A.BorderSide_5XO = new E.BorderSide(D.Color_Edl, 0, F.BorderStyle_1, -1);
    A.BorderSide_fqe = new E.BorderSide(D.Color_Edl, 2, F.BorderStyle_1, -1);
    A.C_SvgTheme = new B.SvgTheme();
    A.C_VectorGraphicsCodec = new B.VectorGraphicsCodec();
    A.C_WhitespaceCharPredicate = new B.WhitespaceCharPredicate();
    A.Object_Vls = {amp: 0, apos: 1, gt: 2, lt: 3, quot: 4};
    A.Map_D0Awe = new C.ConstantStringMap(A.Object_Vls, ["&", "'", ">", "<", '"'], type$.ConstantStringMap_String_String);
    A.C_XmlDefaultEntityMapping = new B.XmlDefaultEntityMapping();
    A.C__DefaultPictureFactory = new B._DefaultPictureFactory();
    A.C__EmptyNode = new B._EmptyNode();
    A.CharacterMetrics_0_0_0_0 = new B.CharacterMetrics(0, 0, 0, 0);
    A.PathCommandType_3 = new B.PathCommandType(3, "close");
    A.CloseCommand_PathCommandType_3 = new B.CloseCommand(A.PathCommandType_3);
    A.Color_4294967295 = new B.Color0(4294967295);
    A.ColorOrNone_false_Color_4294967295 = new B.ColorOrNone(false, A.Color_4294967295);
    A.ColorOrNone_false_null = new B.ColorOrNone(false, null);
    A.ColorOrNone_true_null = new B.ColorOrNone(true, null);
    A.Color_4278190080 = new B.Color0(4278190080);
    A.ConstantCharPredicate_false = new B.ConstantCharPredicate(false);
    A.ConstantCharPredicate_true = new B.ConstantCharPredicate(true);
    A.CustomImageError_null = new B.CustomImageError(null);
    A.DecodeResponse_true_null = new B.DecodeResponse(true, null);
    A.Divider_null = new B.Divider(null);
    A.DrawCommandType_0 = new B.DrawCommandType(0, "path");
    A.DrawCommandType_2 = new B.DrawCommandType(2, "saveLayer");
    A.DrawCommandType_4 = new B.DrawCommandType(4, "clip");
    A.DrawCommandType_6 = new B.DrawCommandType(6, "text");
    A.DrawCommandType_7 = new B.DrawCommandType(7, "image");
    A.DrawCommandType_8 = new B.DrawCommandType(8, "pattern");
    A.DrawCommandType_9 = new B.DrawCommandType(9, "textPosition");
    A.DrawCommandType_5 = new B.DrawCommandType(5, "mask");
    A.DrawCommand_2Th = new B.DrawCommand(null, A.DrawCommandType_5, null, null, null, null);
    A.DrawCommandType_3 = new B.DrawCommandType(3, "restore");
    A.DrawCommand_AWW = new B.DrawCommand(null, A.DrawCommandType_3, null, null, null, null);
    A.EdgeInsetsDirectional_12_8_16_8 = new E.EdgeInsetsDirectional(12, 8, 16, 8);
    A.EdgeInsetsDirectional_8_0_0_0 = new E.EdgeInsetsDirectional(8, 0, 0, 0);
    A.List_U4b = C._setArrayType(makeConstList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2126, 0.7152, 0.0722, 0, 0]), type$.JSArray_double);
    A.EngineColorFilter_fTn = new A9.EngineColorFilter(null, null, A.List_U4b, D.ColorFilterType_1);
    A.Fill_Color_4278190080_null = new B.Fill(A.Color_4278190080, null);
    A.FlutterMathMode_2 = new B.FlutterMathMode(2, "view");
    A.List_empty22 = C._setArrayType(makeConstList([]), type$.JSArray_FontOptions);
    A.FontOptions_25d = new B.FontOptions("Main", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.FontOptions_VMn = new B.FontOptions("Typewriter", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.FontStyle_1 = new C.FontStyle(1, "italic");
    A.FontOptions_ih5 = new B.FontOptions("Main", F.FontWeight_6, D.FontStyle_0, A.List_empty22);
    A.List_rVM = C._setArrayType(makeConstList([A.FontOptions_ih5]), type$.JSArray_FontOptions);
    A.FontOptions_eIp = new B.FontOptions("Math", F.FontWeight_6, A.FontStyle_1, A.List_rVM);
    A.FontWeight_00 = new B.FontWeight0(0, "w100");
    A.FontWeight_1 = new B.FontWeight0(1, "w200");
    A.FontWeight_2 = new B.FontWeight0(2, "w300");
    A.FontWeight_30 = new B.FontWeight0(3, "w400");
    A.FontWeight_4 = new B.FontWeight0(4, "w500");
    A.FontWeight_50 = new B.FontWeight0(5, "w600");
    A.FontWeight_60 = new B.FontWeight0(6, "w700");
    A.FontWeight_7 = new B.FontWeight0(7, "w800");
    A.FontWeight_8 = new B.FontWeight0(8, "w900");
    A.GradientUnitMode_0 = new B.GradientUnitMode(0, "objectBoundingBox");
    A.GradientUnitMode_1 = new B.GradientUnitMode(1, "userSpaceOnUse");
    A.GradientUnitMode_2 = new B.GradientUnitMode(2, "transformed");
    A.IconData_57746_MaterialIcons_null_false = new E.IconData(57746, "MaterialIcons", null, false);
    A.IconData_57846_MaterialIcons_null_false = new E.IconData(57846, "MaterialIcons", null, false);
    A.ListEquality_DefaultEquality = new E.ListEquality(F.C_DefaultEquality, C.findType("ListEquality<XmlEventAttribute>"));
    A.List_192_193_194 = C._setArrayType(makeConstList([192, 193, 194]), type$.JSArray_int);
    A.MathSize_0 = new B.MathSize(0, "tiny");
    A.MathSize_1 = new B.MathSize(1, "size2");
    A.MathSize_2 = new B.MathSize(2, "scriptsize");
    A.MathSize_3 = new B.MathSize(3, "footnotesize");
    A.MathSize_4 = new B.MathSize(4, "small");
    A.MathSize_5 = new B.MathSize(5, "normalsize");
    A.MathSize_6 = new B.MathSize(6, "large");
    A.MathSize_7 = new B.MathSize(7, "Large");
    A.MathSize_8 = new B.MathSize(8, "LARGE");
    A.MathSize_9 = new B.MathSize(9, "huge");
    A.MathSize_10 = new B.MathSize(10, "HUGE");
    A.List_1HU = C._setArrayType(makeConstList([A.MathSize_0, A.MathSize_1, A.MathSize_2, A.MathSize_3, A.MathSize_4, A.MathSize_5, A.MathSize_6, A.MathSize_7, A.MathSize_8, A.MathSize_9, A.MathSize_10]), C.findType("JSArray<MathSize>"));
    A.List_3PE = C._setArrayType(makeConstList([0, 239, 300, 360, 420]), type$.JSArray_double);
    A.List_Fyt = C._setArrayType(makeConstList([4, 5, 4, 5, 6, 7, 6, 7]), type$.JSArray_int);
    A.List_aWa = C._setArrayType(makeConstList([5, 5, 5, 5, 7, 7, 7, 7]), type$.JSArray_int);
    A.List_VJE = C._setArrayType(makeConstList([2, 3, 4, 5, 6, 7, 6, 7]), type$.JSArray_int);
    A.List_802 = C._setArrayType(makeConstList([3, 3, 5, 5, 7, 7, 7, 7]), type$.JSArray_int);
    A.List_XRB = C._setArrayType(makeConstList([1, 1, 3, 3, 5, 5, 7, 7]), type$.JSArray_int);
    A.List_p6G = C._setArrayType(makeConstList([0, 1, 2, 3, 2, 3, 2, 3]), type$.JSArray_int);
    A.List_grk = C._setArrayType(makeConstList([0, 0, 2, 2, 4, 4, 6, 6]), type$.JSArray_int);
    A.List_9iU = C._setArrayType(makeConstList([A.List_Fyt, A.List_aWa, A.List_VJE, A.List_802, A.List_XRB, A.List_p6G, A.List_grk]), type$.JSArray_List_int);
    A.List_AAT = C._setArrayType(makeConstList([D.BlendMode_0, D.BlendMode_1, D.BlendMode_2, D.BlendMode_3, D.BlendMode_4, D.BlendMode_5, D.BlendMode_6, D.BlendMode_7, D.BlendMode_8, D.BlendMode_9, D.BlendMode_10, D.BlendMode_11, D.BlendMode_12, D.BlendMode_13, D.BlendMode_14, D.BlendMode_15, D.BlendMode_16, D.BlendMode_17, D.BlendMode_18, D.BlendMode_19, D.BlendMode_20, D.BlendMode_21, D.BlendMode_22, D.BlendMode_23, D.BlendMode_24, D.BlendMode_25, D.BlendMode_26, D.BlendMode_27, D.BlendMode_28]), C.findType("JSArray<BlendMode>"));
    A.List_F26 = C._setArrayType(makeConstList([0, 0.26, 0.286, 0.3, 0.306, 0.34]), type$.JSArray_double);
    A.MathStyle_2 = new B.MathStyle(2, "text");
    A.DelimiterConf_uZn = new B.DelimiterConf(A.FontOptions_25d, A.MathStyle_2);
    A.FontOptions_Xjt = new B.FontOptions("Size1", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.DelimiterConf_IeG = new B.DelimiterConf(A.FontOptions_Xjt, A.MathStyle_2);
    A.FontOptions_QLa = new B.FontOptions("Size2", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.DelimiterConf_VX0 = new B.DelimiterConf(A.FontOptions_QLa, A.MathStyle_2);
    A.FontOptions_J2w = new B.FontOptions("Size3", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.DelimiterConf_0pU = new B.DelimiterConf(A.FontOptions_J2w, A.MathStyle_2);
    A.FontOptions_7b7 = new B.FontOptions("Size4", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.DelimiterConf_5kT = new B.DelimiterConf(A.FontOptions_7b7, A.MathStyle_2);
    A.List_Hga = C._setArrayType(makeConstList([A.DelimiterConf_uZn, A.DelimiterConf_IeG, A.DelimiterConf_VX0, A.DelimiterConf_0pU, A.DelimiterConf_5kT]), type$.JSArray_DelimiterConf);
    A.List_HoQ = C._setArrayType(makeConstList([0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.2, 1.44, 1.728, 2.074, 2.488]), type$.JSArray_double);
    A.List_J9A = C._setArrayType(makeConstList([1, 1, 2, 2, 3, 3]), type$.JSArray_int);
    A.List_Lm4 = C._setArrayType(makeConstList([D.TileMode_0, D.TileMode_1, D.TileMode_2, D.TileMode_3]), C.findType("JSArray<TileMode>"));
    A.List_PIO = C._setArrayType(makeConstList([0, 0.24, 0.3, 0.3, 0.36, 0.42]), type$.JSArray_double);
    A.List_PathFillType_0_PathFillType_1 = C._setArrayType(makeConstList([D.PathFillType_0, D.PathFillType_1]), C.findType("JSArray<PathFillType>"));
    A.List_RJL = C._setArrayType(makeConstList(["\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge"]), type$.JSArray_String);
    A.List_Sn5 = C._setArrayType(makeConstList([0, 1062, 2364, 2364, 2364]), type$.JSArray_double);
    A.List_U02 = C._setArrayType(makeConstList(["(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "\u230a", "\u230b", "\\lceil", "\\rceil", "\u2308", "\u2309", "<", ">", "\\langle", "\u27e8", "\\rangle", "\u27e9", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "\u27ee", "\u27ef", "\\lmoustache", "\\rmoustache", "\u23b0", "\u23b1", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "."]), type$.JSArray_String);
    A.List_U9x = C._setArrayType(makeConstList([D.TextDecorationStyle_00, D.TextDecorationStyle_10, D.TextDecorationStyle_20, D.TextDecorationStyle_30, D.TextDecorationStyle_40]), C.findType("JSArray<TextDecorationStyle>"));
    A.List_UOF = C._setArrayType(makeConstList([K.Alignment_m1_m1, S.Alignment_0_m1, A.Alignment_1_m1]), type$.JSArray_Alignment);
    A.List_1_1_1 = C._setArrayType(makeConstList([1, 1, 1]), type$.JSArray_int);
    A.List_2_1_1 = C._setArrayType(makeConstList([2, 1, 1]), type$.JSArray_int);
    A.List_3_1_1 = C._setArrayType(makeConstList([3, 1, 1]), type$.JSArray_int);
    A.List_4_2_1 = C._setArrayType(makeConstList([4, 2, 1]), type$.JSArray_int);
    A.List_5_2_1 = C._setArrayType(makeConstList([5, 2, 1]), type$.JSArray_int);
    A.List_6_3_1 = C._setArrayType(makeConstList([6, 3, 1]), type$.JSArray_int);
    A.List_7_4_2 = C._setArrayType(makeConstList([7, 4, 2]), type$.JSArray_int);
    A.List_8_6_3 = C._setArrayType(makeConstList([8, 6, 3]), type$.JSArray_int);
    A.List_9_7_6 = C._setArrayType(makeConstList([9, 7, 6]), type$.JSArray_int);
    A.List_10_8_7 = C._setArrayType(makeConstList([10, 8, 7]), type$.JSArray_int);
    A.List_11_10_9 = C._setArrayType(makeConstList([11, 10, 9]), type$.JSArray_int);
    A.List_VdS = C._setArrayType(makeConstList([A.List_1_1_1, A.List_2_1_1, A.List_3_1_1, A.List_4_2_1, A.List_5_2_1, A.List_6_3_1, A.List_7_4_2, A.List_8_6_3, A.List_9_7_6, A.List_10_8_7, A.List_11_10_9]), type$.JSArray_List_int);
    A.List_b7O = C._setArrayType(makeConstList([0, 260, 286, 306, 312]), type$.JSArray_double);
    A.MathStyle_0 = new B.MathStyle(0, "display");
    A.MathStyle_1 = new B.MathStyle(1, "displayCramped");
    A.MathStyle_3 = new B.MathStyle(3, "textCramped");
    A.MathStyle_4 = new B.MathStyle(4, "script");
    A.MathStyle_5 = new B.MathStyle(5, "scriptCramped");
    A.MathStyle_6 = new B.MathStyle(6, "scriptscript");
    A.MathStyle_7 = new B.MathStyle(7, "scriptscriptCramped");
    A.List_c06 = C._setArrayType(makeConstList([A.MathStyle_0, A.MathStyle_1, A.MathStyle_2, A.MathStyle_3, A.MathStyle_4, A.MathStyle_5, A.MathStyle_6, A.MathStyle_7]), C.findType("JSArray<MathStyle>"));
    A.List_cuD = C._setArrayType(makeConstList([0, 600, 1033, 2339, 2340]), type$.JSArray_double);
    A.List_eKf = C._setArrayType(makeConstList([K.Alignment_m1_m1, A.Alignment_1_m1]), type$.JSArray_Alignment);
    A.List_empty25 = C._setArrayType(makeConstList([]), type$.JSArray_GreenNode);
    A.List_empty24 = C._setArrayType(makeConstList([]), type$.JSArray_MathOptions);
    A.List_empty30 = C._setArrayType(makeConstList([]), type$.JSArray_MatrixColumnAlign);
    A.List_empty29 = C._setArrayType(makeConstList([]), type$.JSArray_MatrixSeparatorStyle);
    A.List_empty35 = C._setArrayType(makeConstList([]), type$.JSArray_Measurement);
    A.List_empty28 = C._setArrayType(makeConstList([]), type$.JSArray_Parser_dynamic);
    A.List_empty26 = C._setArrayType(makeConstList([]), type$.JSArray_PathCommand);
    A.List_empty23 = C._setArrayType(makeConstList([]), C.findType("JSArray<BuildResult?>"));
    A.DelimiterConf_5KU = new B.DelimiterConf(A.FontOptions_25d, A.MathStyle_6);
    A.DelimiterConf_lLi = new B.DelimiterConf(A.FontOptions_25d, A.MathStyle_4);
    A.List_oAf = C._setArrayType(makeConstList([A.DelimiterConf_5KU, A.DelimiterConf_lLi, A.DelimiterConf_uZn]), type$.JSArray_DelimiterConf);
    A.List_s5R = C._setArrayType(makeConstList([D.StrokeCap_0, D.StrokeCap_1, D.StrokeCap_20]), C.findType("JSArray<StrokeCap>"));
    A.List_vQP = C._setArrayType(makeConstList([A.DelimiterConf_5KU, A.DelimiterConf_lLi, A.DelimiterConf_uZn, A.DelimiterConf_IeG, A.DelimiterConf_VX0, A.DelimiterConf_0pU, A.DelimiterConf_5kT]), type$.JSArray_DelimiterConf);
    A.List_w8c = C._setArrayType(makeConstList([1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648]), type$.JSArray_int);
    A.List_ykM = C._setArrayType(makeConstList([D.StrokeJoin_0, D.StrokeJoin_1, D.StrokeJoin_20]), C.findType("JSArray<StrokeJoin>"));
    A.Object_j1Q = {"\\mathit": 0, "\\mathrm": 1, "\\mathbf": 2, "\\boldsymbol": 3, "\\mathbb": 4, "\\mathcal": 5, "\\mathfrak": 6, "\\mathtt": 7, "\\mathscr": 8, "\\mathsf": 9};
    A.FontOptions_jvJ = new B.FontOptions("Main", F.FontWeight_3, A.FontStyle_1, A.List_empty22);
    A.FontOptions_eMX = new B.FontOptions("AMS", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.FontOptions_h4J = new B.FontOptions("Caligraphic", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.FontOptions_81E = new B.FontOptions("Fraktur", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.FontOptions_Q2z = new B.FontOptions("Script", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.FontOptions_afU = new B.FontOptions("SansSerif", F.FontWeight_3, D.FontStyle_0, A.List_empty22);
    A.Map_0eATf = new C.ConstantStringMap(A.Object_j1Q, [A.FontOptions_jvJ, A.FontOptions_25d, A.FontOptions_ih5, A.FontOptions_eIp, A.FontOptions_eMX, A.FontOptions_h4J, A.FontOptions_81E, A.FontOptions_VMn, A.FontOptions_Q2z, A.FontOptions_afU], C.findType("ConstantStringMap<String,FontOptions>"));
    A.Object_sJt = {slant: 0, space: 1, stretch: 2, shrink: 3, xHeight: 4, quad: 5, extraSpace: 6, num1: 7, num2: 8, num3: 9, denom1: 10, denom2: 11, sup1: 12, sup2: 13, sup3: 14, sub1: 15, sub2: 16, supDrop: 17, subDrop: 18, delim1: 19, delim2: 20, axisHeight: 21, defaultRuleThickness: 22, bigOpSpacing1: 23, bigOpSpacing2: 24, bigOpSpacing3: 25, bigOpSpacing4: 26, bigOpSpacing5: 27, sqrtRuleThickness: 28, ptPerEm: 29, doubleRuleSep: 30, arrayRuleWidth: 31, fboxsep: 32, fboxrule: 33};
    A.List_dfC = C._setArrayType(makeConstList([0.25, 0.25, 0.25]), type$.JSArray_double);
    A.List_0_0_0 = C._setArrayType(makeConstList([0, 0, 0]), type$.JSArray_double);
    A.List_BFU = C._setArrayType(makeConstList([0.431, 0.431, 0.431]), type$.JSArray_double);
    A.List_3vQ = C._setArrayType(makeConstList([1, 1.171, 1.472]), type$.JSArray_double);
    A.List_e4o = C._setArrayType(makeConstList([0.677, 0.732, 0.925]), type$.JSArray_double);
    A.List_8kZ = C._setArrayType(makeConstList([0.394, 0.384, 0.387]), type$.JSArray_double);
    A.List_AAp = C._setArrayType(makeConstList([0.444, 0.471, 0.504]), type$.JSArray_double);
    A.List_hjy = C._setArrayType(makeConstList([0.686, 0.752, 1.025]), type$.JSArray_double);
    A.List_Loh = C._setArrayType(makeConstList([0.345, 0.344, 0.532]), type$.JSArray_double);
    A.List_JcA = C._setArrayType(makeConstList([0.413, 0.503, 0.504]), type$.JSArray_double);
    A.List_xJW = C._setArrayType(makeConstList([0.363, 0.431, 0.404]), type$.JSArray_double);
    A.List_a8A = C._setArrayType(makeConstList([0.289, 0.286, 0.294]), type$.JSArray_double);
    A.List_pvk = C._setArrayType(makeConstList([0.15, 0.143, 0.2]), type$.JSArray_double);
    A.List_99r = C._setArrayType(makeConstList([0.247, 0.286, 0.4]), type$.JSArray_double);
    A.List_iQ3 = C._setArrayType(makeConstList([0.386, 0.353, 0.494]), type$.JSArray_double);
    A.List_GFx = C._setArrayType(makeConstList([0.05, 0.071, 0.1]), type$.JSArray_double);
    A.List_SBR = C._setArrayType(makeConstList([2.39, 1.7, 1.98]), type$.JSArray_double);
    A.List_jnV = C._setArrayType(makeConstList([1.01, 1.157, 1.42]), type$.JSArray_double);
    A.List_Kwn = C._setArrayType(makeConstList([0.04, 0.049, 0.049]), type$.JSArray_double);
    A.List_KHY = C._setArrayType(makeConstList([0.111, 0.111, 0.111]), type$.JSArray_double);
    A.List_Djo = C._setArrayType(makeConstList([0.166, 0.166, 0.166]), type$.JSArray_double);
    A.List_HpE = C._setArrayType(makeConstList([0.2, 0.2, 0.2]), type$.JSArray_double);
    A.List_qie = C._setArrayType(makeConstList([0.6, 0.611, 0.611]), type$.JSArray_double);
    A.List_UUX = C._setArrayType(makeConstList([0.1, 0.143, 0.143]), type$.JSArray_double);
    A.List_1WS = C._setArrayType(makeConstList([0.04, 0.04, 0.04]), type$.JSArray_double);
    A.List_10_10_10 = C._setArrayType(makeConstList([10, 10, 10]), type$.JSArray_double);
    A.List_6MP = C._setArrayType(makeConstList([0.3, 0.3, 0.3]), type$.JSArray_double);
    A.Map_1bfGT = new C.ConstantStringMap(A.Object_sJt, [A.List_dfC, A.List_0_0_0, A.List_0_0_0, A.List_0_0_0, A.List_BFU, A.List_3vQ, A.List_0_0_0, A.List_e4o, A.List_8kZ, A.List_AAp, A.List_hjy, A.List_Loh, A.List_JcA, A.List_xJW, A.List_a8A, A.List_pvk, A.List_99r, A.List_iQ3, A.List_GFx, A.List_SBR, A.List_jnV, A.List_dfC, A.List_Kwn, A.List_KHY, A.List_Djo, A.List_HpE, A.List_qie, A.List_UUX, A.List_1WS, A.List_10_10_10, A.List_HpE, A.List_1WS, A.List_6MP, A.List_1WS], type$.ConstantStringMap_of_String_and_List_double);
    A.Object_ijD = {"\u0300": 0, "\u0308": 1, "\u0303": 2, "\u0304": 3, "\u0301": 4, "\u0306": 5, "\u030c": 6, "\u0302": 7, "\u0307": 8, "\u030a": 9, "\u030b": 10};
    A.Mode_1 = new B.Mode(1, "text");
    A.Mode_0 = new B.Mode(0, "math");
    A.Map_JaygT = new C.GeneralConstantMap([A.Mode_1, "\\`", A.Mode_0, "\\grave"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JaX5M = new C.GeneralConstantMap([A.Mode_1, '\\"', A.Mode_0, "\\ddot"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JaYHN = new C.GeneralConstantMap([A.Mode_1, "\\~", A.Mode_0, "\\tilde"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JauHP = new C.GeneralConstantMap([A.Mode_1, "\\=", A.Mode_0, "\\bar"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JasPw = new C.GeneralConstantMap([A.Mode_1, "\\'", A.Mode_0, "\\acute"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JaeMz = new C.GeneralConstantMap([A.Mode_1, "\\u", A.Mode_0, "\\breve"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_Ja76b = new C.GeneralConstantMap([A.Mode_1, "\\v", A.Mode_0, "\\check"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_Ja7dZ = new C.GeneralConstantMap([A.Mode_1, "\\^", A.Mode_0, "\\hat"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JaQOh = new C.GeneralConstantMap([A.Mode_1, "\\.", A.Mode_0, "\\dot"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_JaXm8 = new C.GeneralConstantMap([A.Mode_1, "\\r", A.Mode_0, "\\mathring"], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_Jaksi = new C.GeneralConstantMap([A.Mode_1, "\\H", A.Mode_0, null], type$.GeneralConstantMap_of_Mode_and_nullable_String);
    A.Map_1zAbk = new C.ConstantStringMap(A.Object_ijD, [A.Map_JaygT, A.Map_JaX5M, A.Map_JaYHN, A.Map_JauHP, A.Map_JasPw, A.Map_JaeMz, A.Map_Ja76b, A.Map_Ja7dZ, A.Map_JaQOh, A.Map_JaXm8, A.Map_Jaksi], C.findType("ConstantStringMap<String,Map<Mode,String?>>"));
    A.Map_1zxva = new C.ConstantStringMap(A.Object_ijD, ["`", "\xa8", "~", "\xaf", "\xb4", "\u02d8", "\u02c7", "^", "\u02d9", "\u02da", "\u02dd"], type$.ConstantStringMap_String_String);
    A.List_cases_dcases_rcases_drcases = C._setArrayType(makeConstList(["cases", "dcases", "rcases", "drcases"]), type$.JSArray_String);
    A.List_aligned = C._setArrayType(makeConstList(["aligned"]), type$.JSArray_String);
    A.List_alignedat = C._setArrayType(makeConstList(["alignedat"]), type$.JSArray_String);
    A.EnvSpec__casesHandler = new B.EnvSpec(B.eqn_array___casesHandler$closure());
    A.EnvSpec__alignedHandler = new B.EnvSpec(B.eqn_array___alignedHandler$closure());
    A.EnvSpec__alignedAtHandler = new B.EnvSpec(B.eqn_array___alignedAtHandler$closure());
    A.Map_2fcbp = new C.GeneralConstantMap([A.List_cases_dcases_rcases_drcases, A.EnvSpec__casesHandler, A.List_aligned, A.EnvSpec__alignedHandler, A.List_alignedat, A.EnvSpec__alignedAtHandler], type$.GeneralConstantMap_of_List_String_and_EnvSpec);
    A.Object_Asq = {l: 0, c: 1, r: 2};
    A.MatrixColumnAlign_0 = new B.MatrixColumnAlign(0, "left");
    A.MatrixColumnAlign_1 = new B.MatrixColumnAlign(1, "center");
    A.MatrixColumnAlign_2 = new B.MatrixColumnAlign(2, "right");
    A.Map_38VCd = new C.ConstantStringMap(A.Object_Asq, [A.MatrixColumnAlign_0, A.MatrixColumnAlign_1, A.MatrixColumnAlign_2], C.findType("ConstantStringMap<String,MatrixColumnAlign>"));
    A.Object_fZB = {"\xe1": 0, "\xe0": 1, "\xe4": 2, "\u01df": 3, "\xe3": 4, "\u0101": 5, "\u0103": 6, "\u1eaf": 7, "\u1eb1": 8, "\u1eb5": 9, "\u01ce": 10, "\xe2": 11, "\u1ea5": 12, "\u1ea7": 13, "\u1eab": 14, "\u0227": 15, "\u01e1": 16, "\xe5": 17, "\u01fb": 18, "\u1e03": 19, "\u0107": 20, "\u010d": 21, "\u0109": 22, "\u010b": 23, "\u010f": 24, "\u1e0b": 25, "\xe9": 26, "\xe8": 27, "\xeb": 28, "\u1ebd": 29, "\u0113": 30, "\u1e17": 31, "\u1e15": 32, "\u0115": 33, "\u011b": 34, "\xea": 35, "\u1ebf": 36, "\u1ec1": 37, "\u1ec5": 38, "\u0117": 39, "\u1e1f": 40, "\u01f5": 41, "\u1e21": 42, "\u011f": 43, "\u01e7": 44, "\u011d": 45, "\u0121": 46, "\u1e27": 47, "\u021f": 48, "\u0125": 49, "\u1e23": 50, "\xed": 51, "\xec": 52, "\xef": 53, "\u1e2f": 54, "\u0129": 55, "\u012b": 56, "\u012d": 57, "\u01d0": 58, "\xee": 59, "\u01f0": 60, "\u0135": 61, "\u1e31": 62, "\u01e9": 63, "\u013a": 64, "\u013e": 65, "\u1e3f": 66, "\u1e41": 67, "\u0144": 68, "\u01f9": 69, "\xf1": 70, "\u0148": 71, "\u1e45": 72, "\xf3": 73, "\xf2": 74, "\xf6": 75, "\u022b": 76, "\xf5": 77, "\u1e4d": 78, "\u1e4f": 79, "\u022d": 80, "\u014d": 81, "\u1e53": 82, "\u1e51": 83, "\u014f": 84, "\u01d2": 85, "\xf4": 86, "\u1ed1": 87, "\u1ed3": 88, "\u1ed7": 89, "\u022f": 90, "\u0231": 91, "\u0151": 92, "\u1e55": 93, "\u1e57": 94, "\u0155": 95, "\u0159": 96, "\u1e59": 97, "\u015b": 98, "\u1e65": 99, "\u0161": 100, "\u1e67": 101, "\u015d": 102, "\u1e61": 103, "\u1e97": 104, "\u0165": 105, "\u1e6b": 106, "\xfa": 107, "\xf9": 108, "\xfc": 109, "\u01d8": 110, "\u01dc": 111, "\u01d6": 112, "\u01da": 113, "\u0169": 114, "\u1e79": 115, "\u016b": 116, "\u1e7b": 117, "\u016d": 118, "\u01d4": 119, "\xfb": 120, "\u016f": 121, "\u0171": 122, "\u1e7d": 123, "\u1e83": 124, "\u1e81": 125, "\u1e85": 126, "\u0175": 127, "\u1e87": 128, "\u1e98": 129, "\u1e8d": 130, "\u1e8b": 131, "\xfd": 132, "\u1ef3": 133, "\xff": 134, "\u1ef9": 135, "\u0233": 136, "\u0177": 137, "\u1e8f": 138, "\u1e99": 139, "\u017a": 140, "\u017e": 141, "\u1e91": 142, "\u017c": 143, "\xc1": 144, "\xc0": 145, "\xc4": 146, "\u01de": 147, "\xc3": 148, "\u0100": 149, "\u0102": 150, "\u1eae": 151, "\u1eb0": 152, "\u1eb4": 153, "\u01cd": 154, "\xc2": 155, "\u1ea4": 156, "\u1ea6": 157, "\u1eaa": 158, "\u0226": 159, "\u01e0": 160, "\xc5": 161, "\u01fa": 162, "\u1e02": 163, "\u0106": 164, "\u010c": 165, "\u0108": 166, "\u010a": 167, "\u010e": 168, "\u1e0a": 169, "\xc9": 170, "\xc8": 171, "\xcb": 172, "\u1ebc": 173, "\u0112": 174, "\u1e16": 175, "\u1e14": 176, "\u0114": 177, "\u011a": 178, "\xca": 179, "\u1ebe": 180, "\u1ec0": 181, "\u1ec4": 182, "\u0116": 183, "\u1e1e": 184, "\u01f4": 185, "\u1e20": 186, "\u011e": 187, "\u01e6": 188, "\u011c": 189, "\u0120": 190, "\u1e26": 191, "\u021e": 192, "\u0124": 193, "\u1e22": 194, "\xcd": 195, "\xcc": 196, "\xcf": 197, "\u1e2e": 198, "\u0128": 199, "\u012a": 200, "\u012c": 201, "\u01cf": 202, "\xce": 203, "\u0130": 204, "\u0134": 205, "\u1e30": 206, "\u01e8": 207, "\u0139": 208, "\u013d": 209, "\u1e3e": 210, "\u1e40": 211, "\u0143": 212, "\u01f8": 213, "\xd1": 214, "\u0147": 215, "\u1e44": 216, "\xd3": 217, "\xd2": 218, "\xd6": 219, "\u022a": 220, "\xd5": 221, "\u1e4c": 222, "\u1e4e": 223, "\u022c": 224, "\u014c": 225, "\u1e52": 226, "\u1e50": 227, "\u014e": 228, "\u01d1": 229, "\xd4": 230, "\u1ed0": 231, "\u1ed2": 232, "\u1ed6": 233, "\u022e": 234, "\u0230": 235, "\u0150": 236, "\u1e54": 237, "\u1e56": 238, "\u0154": 239, "\u0158": 240, "\u1e58": 241, "\u015a": 242, "\u1e64": 243, "\u0160": 244, "\u1e66": 245, "\u015c": 246, "\u1e60": 247, "\u0164": 248, "\u1e6a": 249, "\xda": 250, "\xd9": 251, "\xdc": 252, "\u01d7": 253, "\u01db": 254, "\u01d5": 255, "\u01d9": 256, "\u0168": 257, "\u1e78": 258, "\u016a": 259, "\u1e7a": 260, "\u016c": 261, "\u01d3": 262, "\xdb": 263, "\u016e": 264, "\u0170": 265, "\u1e7c": 266, "\u1e82": 267, "\u1e80": 268, "\u1e84": 269, "\u0174": 270, "\u1e86": 271, "\u1e8c": 272, "\u1e8a": 273, "\xdd": 274, "\u1ef2": 275, "\u0178": 276, "\u1ef8": 277, "\u0232": 278, "\u0176": 279, "\u1e8e": 280, "\u0179": 281, "\u017d": 282, "\u1e90": 283, "\u017b": 284, "\u03ac": 285, "\u1f70": 286, "\u1fb1": 287, "\u1fb0": 288, "\u03ad": 289, "\u1f72": 290, "\u03ae": 291, "\u1f74": 292, "\u03af": 293, "\u1f76": 294, "\u03ca": 295, "\u0390": 296, "\u1fd2": 297, "\u1fd1": 298, "\u1fd0": 299, "\u03cc": 300, "\u1f78": 301, "\u03cd": 302, "\u1f7a": 303, "\u03cb": 304, "\u03b0": 305, "\u1fe2": 306, "\u1fe1": 307, "\u1fe0": 308, "\u03ce": 309, "\u1f7c": 310, "\u038e": 311, "\u1fea": 312, "\u03ab": 313, "\u1fe9": 314, "\u1fe8": 315, "\u038f": 316, "\u1ffa": 317};
    A.Map_3Abhf = new C.ConstantStringMap(A.Object_fZB, ["a\u0301", "a\u0300", "a\u0308", "a\u0308\u0304", "a\u0303", "a\u0304", "a\u0306", "a\u0306\u0301", "a\u0306\u0300", "a\u0306\u0303", "a\u030c", "a\u0302", "a\u0302\u0301", "a\u0302\u0300", "a\u0302\u0303", "a\u0307", "a\u0307\u0304", "a\u030a", "a\u030a\u0301", "b\u0307", "c\u0301", "c\u030c", "c\u0302", "c\u0307", "d\u030c", "d\u0307", "e\u0301", "e\u0300", "e\u0308", "e\u0303", "e\u0304", "e\u0304\u0301", "e\u0304\u0300", "e\u0306", "e\u030c", "e\u0302", "e\u0302\u0301", "e\u0302\u0300", "e\u0302\u0303", "e\u0307", "f\u0307", "g\u0301", "g\u0304", "g\u0306", "g\u030c", "g\u0302", "g\u0307", "h\u0308", "h\u030c", "h\u0302", "h\u0307", "i\u0301", "i\u0300", "i\u0308", "i\u0308\u0301", "i\u0303", "i\u0304", "i\u0306", "i\u030c", "i\u0302", "j\u030c", "j\u0302", "k\u0301", "k\u030c", "l\u0301", "l\u030c", "m\u0301", "m\u0307", "n\u0301", "n\u0300", "n\u0303", "n\u030c", "n\u0307", "o\u0301", "o\u0300", "o\u0308", "o\u0308\u0304", "o\u0303", "o\u0303\u0301", "o\u0303\u0308", "o\u0303\u0304", "o\u0304", "o\u0304\u0301", "o\u0304\u0300", "o\u0306", "o\u030c", "o\u0302", "o\u0302\u0301", "o\u0302\u0300", "o\u0302\u0303", "o\u0307", "o\u0307\u0304", "o\u030b", "p\u0301", "p\u0307", "r\u0301", "r\u030c", "r\u0307", "s\u0301", "s\u0301\u0307", "s\u030c", "s\u030c\u0307", "s\u0302", "s\u0307", "t\u0308", "t\u030c", "t\u0307", "u\u0301", "u\u0300", "u\u0308", "u\u0308\u0301", "u\u0308\u0300", "u\u0308\u0304", "u\u0308\u030c", "u\u0303", "u\u0303\u0301", "u\u0304", "u\u0304\u0308", "u\u0306", "u\u030c", "u\u0302", "u\u030a", "u\u030b", "v\u0303", "w\u0301", "w\u0300", "w\u0308", "w\u0302", "w\u0307", "w\u030a", "x\u0308", "x\u0307", "y\u0301", "y\u0300", "y\u0308", "y\u0303", "y\u0304", "y\u0302", "y\u0307", "y\u030a", "z\u0301", "z\u030c", "z\u0302", "z\u0307", "A\u0301", "A\u0300", "A\u0308", "A\u0308\u0304", "A\u0303", "A\u0304", "A\u0306", "A\u0306\u0301", "A\u0306\u0300", "A\u0306\u0303", "A\u030c", "A\u0302", "A\u0302\u0301", "A\u0302\u0300", "A\u0302\u0303", "A\u0307", "A\u0307\u0304", "A\u030a", "A\u030a\u0301", "B\u0307", "C\u0301", "C\u030c", "C\u0302", "C\u0307", "D\u030c", "D\u0307", "E\u0301", "E\u0300", "E\u0308", "E\u0303", "E\u0304", "E\u0304\u0301", "E\u0304\u0300", "E\u0306", "E\u030c", "E\u0302", "E\u0302\u0301", "E\u0302\u0300", "E\u0302\u0303", "E\u0307", "F\u0307", "G\u0301", "G\u0304", "G\u0306", "G\u030c", "G\u0302", "G\u0307", "H\u0308", "H\u030c", "H\u0302", "H\u0307", "I\u0301", "I\u0300", "I\u0308", "I\u0308\u0301", "I\u0303", "I\u0304", "I\u0306", "I\u030c", "I\u0302", "I\u0307", "J\u0302", "K\u0301", "K\u030c", "L\u0301", "L\u030c", "M\u0301", "M\u0307", "N\u0301", "N\u0300", "N\u0303", "N\u030c", "N\u0307", "O\u0301", "O\u0300", "O\u0308", "O\u0308\u0304", "O\u0303", "O\u0303\u0301", "O\u0303\u0308", "O\u0303\u0304", "O\u0304", "O\u0304\u0301", "O\u0304\u0300", "O\u0306", "O\u030c", "O\u0302", "O\u0302\u0301", "O\u0302\u0300", "O\u0302\u0303", "O\u0307", "O\u0307\u0304", "O\u030b", "P\u0301", "P\u0307", "R\u0301", "R\u030c", "R\u0307", "S\u0301", "S\u0301\u0307", "S\u030c", "S\u030c\u0307", "S\u0302", "S\u0307", "T\u030c", "T\u0307", "U\u0301", "U\u0300", "U\u0308", "U\u0308\u0301", "U\u0308\u0300", "U\u0308\u0304", "U\u0308\u030c", "U\u0303", "U\u0303\u0301", "U\u0304", "U\u0304\u0308", "U\u0306", "U\u030c", "U\u0302", "U\u030a", "U\u030b", "V\u0303", "W\u0301", "W\u0300", "W\u0308", "W\u0302", "W\u0307", "X\u0308", "X\u0307", "Y\u0301", "Y\u0300", "Y\u0308", "Y\u0303", "Y\u0304", "Y\u0302", "Y\u0307", "Z\u0301", "Z\u030c", "Z\u0302", "Z\u0307", "\u03b1\u0301", "\u03b1\u0300", "\u03b1\u0304", "\u03b1\u0306", "\u03b5\u0301", "\u03b5\u0300", "\u03b7\u0301", "\u03b7\u0300", "\u03b9\u0301", "\u03b9\u0300", "\u03b9\u0308", "\u03b9\u0308\u0301", "\u03b9\u0308\u0300", "\u03b9\u0304", "\u03b9\u0306", "\u03bf\u0301", "\u03bf\u0300", "\u03c5\u0301", "\u03c5\u0300", "\u03c5\u0308", "\u03c5\u0308\u0301", "\u03c5\u0308\u0300", "\u03c5\u0304", "\u03c5\u0306", "\u03c9\u0301", "\u03c9\u0300", "\u03a5\u0301", "\u03a5\u0300", "\u03a5\u0308", "\u03a5\u0304", "\u03a5\u0306", "\u03a9\u0301", "\u03a9\u0300"], type$.ConstantStringMap_String_String);
    A.SvgPathSegType_1 = new B.SvgPathSegType(1, "close");
    A.SvgPathSegType_2 = new B.SvgPathSegType(2, "moveToAbs");
    A.SvgPathSegType_3 = new B.SvgPathSegType(3, "moveToRel");
    A.SvgPathSegType_4 = new B.SvgPathSegType(4, "lineToAbs");
    A.SvgPathSegType_5 = new B.SvgPathSegType(5, "lineToRel");
    A.SvgPathSegType_6 = new B.SvgPathSegType(6, "cubicToAbs");
    A.SvgPathSegType_7 = new B.SvgPathSegType(7, "cubicToRel");
    A.SvgPathSegType_8 = new B.SvgPathSegType(8, "quadToAbs");
    A.SvgPathSegType_9 = new B.SvgPathSegType(9, "quadToRel");
    A.SvgPathSegType_10 = new B.SvgPathSegType(10, "arcToAbs");
    A.SvgPathSegType_11 = new B.SvgPathSegType(11, "arcToRel");
    A.SvgPathSegType_12 = new B.SvgPathSegType(12, "lineToHorizontalAbs");
    A.SvgPathSegType_13 = new B.SvgPathSegType(13, "lineToHorizontalRel");
    A.SvgPathSegType_14 = new B.SvgPathSegType(14, "lineToVerticalAbs");
    A.SvgPathSegType_15 = new B.SvgPathSegType(15, "lineToVerticalRel");
    A.SvgPathSegType_16 = new B.SvgPathSegType(16, "smoothCubicToAbs");
    A.SvgPathSegType_17 = new B.SvgPathSegType(17, "smoothCubicToRel");
    A.SvgPathSegType_18 = new B.SvgPathSegType(18, "smoothQuadToAbs");
    A.SvgPathSegType_19 = new B.SvgPathSegType(19, "smoothQuadToRel");
    A.Map_42CKi = new C.GeneralConstantMap([90, A.SvgPathSegType_1, 122, A.SvgPathSegType_1, 77, A.SvgPathSegType_2, 109, A.SvgPathSegType_3, 76, A.SvgPathSegType_4, 108, A.SvgPathSegType_5, 67, A.SvgPathSegType_6, 99, A.SvgPathSegType_7, 81, A.SvgPathSegType_8, 113, A.SvgPathSegType_9, 65, A.SvgPathSegType_10, 97, A.SvgPathSegType_11, 72, A.SvgPathSegType_12, 104, A.SvgPathSegType_13, 86, A.SvgPathSegType_14, 118, A.SvgPathSegType_15, 83, A.SvgPathSegType_16, 115, A.SvgPathSegType_17, 84, A.SvgPathSegType_18, 116, A.SvgPathSegType_19], C.findType("GeneralConstantMap<int,SvgPathSegType>"));
    A.Object_7j7 = {"^": 0, "\u02c7": 1, "~": 2, "\xb4": 3, "`": 4, "\u02d9": 5, "\xa8": 6, "\xaf": 7, "\u2192": 8, "\u02d8": 9, "\u02da": 10, "\u02dd": 11, "\u2190": 12, "\u2194": 13, "\u23de": 14, "\u23df": 15, "\u21d2": 16, "\u23e0": 17, "\u21bc": 18, "\u21c0": 19};
    A.AccentRenderConfig_Meh = new B.AccentRenderConfig("^", "widehat", null);
    A.AccentRenderConfig_koX = new B.AccentRenderConfig("\u02c7", "widecheck", null);
    A.AccentRenderConfig_GcE = new B.AccentRenderConfig("~", "widetilde", "utilde");
    A.AccentRenderConfig_zCE = new B.AccentRenderConfig("\u02ca", null, null);
    A.AccentRenderConfig_2jS = new B.AccentRenderConfig("\u02cb", null, null);
    A.AccentRenderConfig_xsx = new B.AccentRenderConfig("\u02d9", null, null);
    A.AccentRenderConfig_umL = new B.AccentRenderConfig("\xa8", null, null);
    A.AccentRenderConfig_VAP = new B.AccentRenderConfig("\u02c9", null, null);
    A.AccentRenderConfig_Mq9 = new B.AccentRenderConfig("\u20d7", "overrightarrow", "underrightarrow");
    A.AccentRenderConfig_FLX = new B.AccentRenderConfig("\u02d8", null, null);
    A.AccentRenderConfig_sE0 = new B.AccentRenderConfig("\u02da", null, null);
    A.AccentRenderConfig_mFJ = new B.AccentRenderConfig("\u02dd", null, null);
    A.AccentRenderConfig_null_overleftarrow_underleftarrow = new B.AccentRenderConfig(null, "overleftarrow", "underleftarrow");
    A.AccentRenderConfig_X1L = new B.AccentRenderConfig(null, "overleftrightarrow", "underleftrightarrow");
    A.AccentRenderConfig_null_overbrace_null = new B.AccentRenderConfig(null, "overbrace", null);
    A.AccentRenderConfig_null_null_underbrace = new B.AccentRenderConfig(null, null, "underbrace");
    A.AccentRenderConfig_null_Overrightarrow_null = new B.AccentRenderConfig(null, "Overrightarrow", null);
    A.AccentRenderConfig_null_overgroup_undergroup = new B.AccentRenderConfig(null, "overgroup", "undergroup");
    A.AccentRenderConfig_null_overleftharpoon_null = new B.AccentRenderConfig(null, "overleftharpoon", null);
    A.AccentRenderConfig_null_overrightharpoon_null = new B.AccentRenderConfig(null, "overrightharpoon", null);
    A.Map_8zs6u = new C.ConstantStringMap(A.Object_7j7, [A.AccentRenderConfig_Meh, A.AccentRenderConfig_koX, A.AccentRenderConfig_GcE, A.AccentRenderConfig_zCE, A.AccentRenderConfig_2jS, A.AccentRenderConfig_xsx, A.AccentRenderConfig_umL, A.AccentRenderConfig_VAP, A.AccentRenderConfig_Mq9, A.AccentRenderConfig_FLX, A.AccentRenderConfig_sE0, A.AccentRenderConfig_mFJ, A.AccentRenderConfig_null_overleftarrow_underleftarrow, A.AccentRenderConfig_X1L, A.AccentRenderConfig_null_overbrace_null, A.AccentRenderConfig_null_null_underbrace, A.AccentRenderConfig_null_Overrightarrow_null, A.AccentRenderConfig_null_overgroup_undergroup, A.AccentRenderConfig_null_overleftharpoon_null, A.AccentRenderConfig_null_overrightharpoon_null], C.findType("ConstantStringMap<String,AccentRenderConfig>"));
    A.Object_xVE = {"Main-Regular": 0, "Size1-Regular": 1, "Size2-Regular": 2, "Size3-Regular": 3, "Size4-Regular": 4};
    A.Map_9JvRE = new C.ConstantStringMap(A.Object_xVE, [1, 1.2, 1.8, 2.4, 3], C.findType("ConstantStringMap<String,double>"));
    A.Object_kce = {overrightarrow: 0, overleftarrow: 1, underrightarrow: 2, underleftarrow: 3, xrightarrow: 4, xleftarrow: 5, Overrightarrow: 6, xRightarrow: 7, xLeftarrow: 8, overleftharpoon: 9, xleftharpoonup: 10, xleftharpoondown: 11, overrightharpoon: 12, xrightharpoonup: 13, xrightharpoondown: 14, xlongequal: 15, xtwoheadleftarrow: 16, xtwoheadrightarrow: 17, overleftrightarrow: 18, overbrace: 19, underbrace: 20, underleftrightarrow: 21, xleftrightarrow: 22, xLeftrightarrow: 23, xrightleftharpoons: 24, xleftrightharpoons: 25, xhookleftarrow: 26, xhookrightarrow: 27, overlinesegment: 28, underlinesegment: 29, overgroup: 30, undergroup: 31, xmapsto: 32, xtofrom: 33, xrightleftarrows: 34, xrightequilibrium: 35, xleftequilibrium: 36};
    A.List_rightarrow = C._setArrayType(makeConstList(["rightarrow"]), type$.JSArray_String);
    A._KatexImagesData_1Y2 = new B._KatexImagesData(A.List_rightarrow, 0.888, 522, A.Alignment_1_m1);
    A.List_leftarrow = C._setArrayType(makeConstList(["leftarrow"]), type$.JSArray_String);
    A._KatexImagesData_gBZ = new B._KatexImagesData(A.List_leftarrow, 0.888, 522, K.Alignment_m1_m1);
    A._KatexImagesData_Zyd = new B._KatexImagesData(A.List_rightarrow, 1.469, 522, A.Alignment_1_m1);
    A._KatexImagesData_Reg = new B._KatexImagesData(A.List_leftarrow, 1.469, 522, K.Alignment_m1_m1);
    A.List_doublerightarrow = C._setArrayType(makeConstList(["doublerightarrow"]), type$.JSArray_String);
    A._KatexImagesData_XYX = new B._KatexImagesData(A.List_doublerightarrow, 0.888, 560, A.Alignment_1_m1);
    A._KatexImagesData_xyg = new B._KatexImagesData(A.List_doublerightarrow, 1.526, 560, A.Alignment_1_m1);
    A.List_doubleleftarrow = C._setArrayType(makeConstList(["doubleleftarrow"]), type$.JSArray_String);
    A._KatexImagesData_XbC = new B._KatexImagesData(A.List_doubleleftarrow, 1.526, 560, K.Alignment_m1_m1);
    A.List_leftharpoon = C._setArrayType(makeConstList(["leftharpoon"]), type$.JSArray_String);
    A._KatexImagesData_4Mr = new B._KatexImagesData(A.List_leftharpoon, 0.888, 522, K.Alignment_m1_m1);
    A.List_leftharpoondown = C._setArrayType(makeConstList(["leftharpoondown"]), type$.JSArray_String);
    A._KatexImagesData_Ixr = new B._KatexImagesData(A.List_leftharpoondown, 0.888, 522, K.Alignment_m1_m1);
    A.List_rightharpoon = C._setArrayType(makeConstList(["rightharpoon"]), type$.JSArray_String);
    A._KatexImagesData_jbL = new B._KatexImagesData(A.List_rightharpoon, 0.888, 522, A.Alignment_1_m1);
    A.List_rightharpoondown = C._setArrayType(makeConstList(["rightharpoondown"]), type$.JSArray_String);
    A._KatexImagesData_Siq = new B._KatexImagesData(A.List_rightharpoondown, 0.888, 522, A.Alignment_1_m1);
    A.List_longequal = C._setArrayType(makeConstList(["longequal"]), type$.JSArray_String);
    A._KatexImagesData_MeZ = new B._KatexImagesData(A.List_longequal, 0.888, 334, K.Alignment_m1_m1);
    A.List_twoheadleftarrow = C._setArrayType(makeConstList(["twoheadleftarrow"]), type$.JSArray_String);
    A._KatexImagesData_zp7 = new B._KatexImagesData(A.List_twoheadleftarrow, 0.888, 334, K.Alignment_m1_m1);
    A.List_twoheadrightarrow = C._setArrayType(makeConstList(["twoheadrightarrow"]), type$.JSArray_String);
    A._KatexImagesData_Khw = new B._KatexImagesData(A.List_twoheadrightarrow, 0.888, 334, A.Alignment_1_m1);
    A.List_leftarrow_rightarrow = C._setArrayType(makeConstList(["leftarrow", "rightarrow"]), type$.JSArray_String);
    A._KatexImagesData_HZv = new B._KatexImagesData(A.List_leftarrow_rightarrow, 0.888, 522, null);
    A.List_leftbrace_midbrace_rightbrace = C._setArrayType(makeConstList(["leftbrace", "midbrace", "rightbrace"]), type$.JSArray_String);
    A._KatexImagesData_jXF = new B._KatexImagesData(A.List_leftbrace_midbrace_rightbrace, 1.6, 548, null);
    A.List_Tyg = C._setArrayType(makeConstList(["leftbraceunder", "midbraceunder", "rightbraceunder"]), type$.JSArray_String);
    A._KatexImagesData_akj = new B._KatexImagesData(A.List_Tyg, 1.6, 548, null);
    A._KatexImagesData_yoY = new B._KatexImagesData(A.List_leftarrow_rightarrow, 1.75, 522, null);
    A.List_doubleleftarrow_doublerightarrow = C._setArrayType(makeConstList(["doubleleftarrow", "doublerightarrow"]), type$.JSArray_String);
    A._KatexImagesData_7Uw = new B._KatexImagesData(A.List_doubleleftarrow_doublerightarrow, 1.75, 560, null);
    A.List_dyE = C._setArrayType(makeConstList(["leftharpoondownplus", "rightharpoonplus"]), type$.JSArray_String);
    A._KatexImagesData_hSk = new B._KatexImagesData(A.List_dyE, 1.75, 716, null);
    A.List_mjC = C._setArrayType(makeConstList(["leftharpoonplus", "rightharpoondownplus"]), type$.JSArray_String);
    A._KatexImagesData_V5i = new B._KatexImagesData(A.List_mjC, 1.75, 716, null);
    A.List_leftarrow_righthook = C._setArrayType(makeConstList(["leftarrow", "righthook"]), type$.JSArray_String);
    A._KatexImagesData_IXN = new B._KatexImagesData(A.List_leftarrow_righthook, 1.08, 522, null);
    A.List_lefthook_rightarrow = C._setArrayType(makeConstList(["lefthook", "rightarrow"]), type$.JSArray_String);
    A._KatexImagesData_ZTv = new B._KatexImagesData(A.List_lefthook_rightarrow, 1.08, 522, null);
    A.List_leftlinesegment_rightlinesegment = C._setArrayType(makeConstList(["leftlinesegment", "rightlinesegment"]), type$.JSArray_String);
    A._KatexImagesData_JYK = new B._KatexImagesData(A.List_leftlinesegment_rightlinesegment, 0.888, 522, null);
    A.List_leftgroup_rightgroup = C._setArrayType(makeConstList(["leftgroup", "rightgroup"]), type$.JSArray_String);
    A._KatexImagesData_rH2 = new B._KatexImagesData(A.List_leftgroup_rightgroup, 0.888, 342, null);
    A.List_leftgroupunder_rightgroupunder = C._setArrayType(makeConstList(["leftgroupunder", "rightgroupunder"]), type$.JSArray_String);
    A._KatexImagesData_eiM = new B._KatexImagesData(A.List_leftgroupunder_rightgroupunder, 0.888, 342, null);
    A.List_leftmapsto_rightarrow = C._setArrayType(makeConstList(["leftmapsto", "rightarrow"]), type$.JSArray_String);
    A._KatexImagesData_szc = new B._KatexImagesData(A.List_leftmapsto_rightarrow, 1.5, 522, null);
    A.List_leftToFrom_rightToFrom = C._setArrayType(makeConstList(["leftToFrom", "rightToFrom"]), type$.JSArray_String);
    A._KatexImagesData_fMe = new B._KatexImagesData(A.List_leftToFrom_rightToFrom, 1.75, 528, null);
    A.List_IH3 = C._setArrayType(makeConstList(["baraboveleftarrow", "rightarrowabovebar"]), type$.JSArray_String);
    A._KatexImagesData_tJv = new B._KatexImagesData(A.List_IH3, 1.75, 901, null);
    A.List_MV1 = C._setArrayType(makeConstList(["baraboveshortleftharpoon", "rightharpoonaboveshortbar"]), type$.JSArray_String);
    A._KatexImagesData_Ax2 = new B._KatexImagesData(A.List_MV1, 1.75, 716, null);
    A.List_m1F = C._setArrayType(makeConstList(["shortbaraboveleftharpoon", "shortrightharpoonabovebar"]), type$.JSArray_String);
    A._KatexImagesData_R1i = new B._KatexImagesData(A.List_m1F, 1.75, 716, null);
    A.Map_B3hpY = new C.ConstantStringMap(A.Object_kce, [A._KatexImagesData_1Y2, A._KatexImagesData_gBZ, A._KatexImagesData_1Y2, A._KatexImagesData_gBZ, A._KatexImagesData_Zyd, A._KatexImagesData_Reg, A._KatexImagesData_XYX, A._KatexImagesData_xyg, A._KatexImagesData_XbC, A._KatexImagesData_4Mr, A._KatexImagesData_4Mr, A._KatexImagesData_Ixr, A._KatexImagesData_jbL, A._KatexImagesData_jbL, A._KatexImagesData_Siq, A._KatexImagesData_MeZ, A._KatexImagesData_zp7, A._KatexImagesData_Khw, A._KatexImagesData_HZv, A._KatexImagesData_jXF, A._KatexImagesData_akj, A._KatexImagesData_HZv, A._KatexImagesData_yoY, A._KatexImagesData_7Uw, A._KatexImagesData_hSk, A._KatexImagesData_V5i, A._KatexImagesData_IXN, A._KatexImagesData_ZTv, A._KatexImagesData_JYK, A._KatexImagesData_JYK, A._KatexImagesData_rH2, A._KatexImagesData_eiM, A._KatexImagesData_szc, A._KatexImagesData_fMe, A._KatexImagesData_tJv, A._KatexImagesData_Ax2, A._KatexImagesData_R1i], C.findType("ConstantStringMap<String,_KatexImagesData>"));
    A.Object_zR2 = {circle: 0, path: 1, rect: 2, polygon: 3, polyline: 4, ellipse: 5, line: 6};
    A.Map_BvFKH = new C.ConstantStringMap(A.Object_zR2, [B.parser__Paths_circle$closure(), B.parser__Paths_path$closure(), B.parser__Paths_rect$closure(), B.parser__Paths_polygon$closure(), B.parser__Paths_polyline$closure(), B.parser__Paths_ellipse$closure(), B.parser__Paths_line$closure()], C.findType("ConstantStringMap<String,Path?(SvgParser)>"));
    A.Unit_0 = new B.Unit(0, "pt");
    A.Unit_1 = new B.Unit(1, "mm");
    A.Unit_2 = new B.Unit(2, "cm");
    A.Unit_3 = new B.Unit(3, "inches");
    A.Unit_4 = new B.Unit(4, "bp");
    A.Unit_5 = new B.Unit(5, "pc");
    A.Unit_6 = new B.Unit(6, "dd");
    A.Unit_7 = new B.Unit(7, "cc");
    A.Unit_8 = new B.Unit(8, "nd");
    A.Unit_9 = new B.Unit(9, "nc");
    A.Unit_10 = new B.Unit(10, "sp");
    A.Unit_11 = new B.Unit(11, "px");
    A.Unit_12 = new B.Unit(12, "ex");
    A.Unit_13 = new B.Unit(13, "em");
    A.Unit_14 = new B.Unit(14, "mu");
    A.Unit_15 = new B.Unit(15, "lp");
    A.Unit_16 = new B.Unit(16, "cssEm");
    A.Map_Dg3fw = new C.GeneralConstantMap([A.Unit_0, 1, A.Unit_1, 2.8452755905511813, A.Unit_2, 28.45275590551181, A.Unit_3, 72.27, A.Unit_4, 1.00375, A.Unit_5, 12, A.Unit_6, 1.070008643042351, A.Unit_7, 12.84010371650821, A.Unit_8, 1.0669781931464175, A.Unit_9, 12.80373831775701, A.Unit_10, 0.0000152587890625, A.Unit_11, 1.00375, A.Unit_12, null, A.Unit_13, null, A.Unit_14, null, A.Unit_15, 0.45168749999999996, A.Unit_16, null], C.findType("GeneralConstantMap<Unit,double?>"));
    A.Map_Dgfp9 = new C.GeneralConstantMap([A.Unit_0, "pt", A.Unit_1, "mm", A.Unit_2, "cm", A.Unit_3, "inches", A.Unit_4, "bp", A.Unit_5, "pc", A.Unit_6, "dd", A.Unit_7, "cc", A.Unit_8, "nd", A.Unit_9, "nc", A.Unit_10, "sp", A.Unit_11, "px", A.Unit_12, "ex", A.Unit_13, "em", A.Unit_14, "mu", A.Unit_15, "lp", A.Unit_16, "cssEm"], C.findType("GeneralConstantMap<Unit,String>"));
    A.Object_pPH = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "\u2261": 10, "\u227a": 11, "\u227b": 12, "\u223c": 13, "\u2aaf": 14, "\u2ab0": 15, "\u2243": 16, "\u2223": 17, "\u226a": 18, "\u226b": 19, "\u224d": 20, "\u22c8": 21, "\u2323": 22, "\u2291": 23, "\u2292": 24, "\u2250": 25, "\u2322": 26, "\u220b": 27, "\u221d": 28, "\u22a2": 29, "\u22a3": 30, "\u2135": 31, "\u2200": 32, "\u210f": 33, "\u2203": 34, "\u2207": 35, "\u266d": 36, "\u2113": 37, "\u266e": 38, "\u2663": 39, "\u2118": 40, "\u266f": 41, "\u2662": 42, "\u211c": 43, "\u2661": 44, "\u2111": 45, "\u2660": 46, "\u23b1": 47, "\u23b0": 48, "\u27ef": 49, "\u27ee": 50, "\u2213": 51, "\u2296": 52, "\u228e": 53, "\u2293": 54, "\u2294": 55, "\u2240": 56, "\u27f5": 57, "\u21d0": 58, "\u27f8": 59, "\u27f6": 60, "\u21d2": 61, "\u27f9": 62, "\u2194": 63, "\u27f7": 64, "\u21d4": 65, "\u27fa": 66, "\u21a6": 67, "\u27fc": 68, "\u2197": 69, "\u21a9": 70, "\u21aa": 71, "\u2198": 72, "\u21bc": 73, "\u21c0": 74, "\u2199": 75, "\u21bd": 76, "\u21c1": 77, "\u2196": 78, "\u21cc": 79, "\u226e": 80, "\u2a87": 81, "\u2268": 82, "\u22e6": 83, "\u2a89": 84, "\u2280": 85, "\u22e0": 86, "\u22e8": 87, "\u2ab9": 88, "\u2241": 89, "\u2224": 90, "\u22ac": 91, "\u22ad": 92, "\u22ec": 93, "\u228a": 94, "\u2acb": 95, "\u226f": 96, "\u2a88": 97, "\u2269": 98, "\u22e7": 99, "\u2a8a": 100, "\u2281": 101, "\u22e1": 102, "\u22e9": 103, "\u2aba": 104, "\u2246": 105, "\u2226": 106, "\u22af": 107, "\u22ed": 108, "\u228b": 109, "\u2acc": 110, "\u22ae": 111, "\u2ab5": 112, "\u2ab6": 113, "\u219a": 114, "\u219b": 115, "\u21cd": 116, "\u21cf": 117, "\u21ae": 118, "\u21ce": 119, "\u2221": 120, "\u2132": 121, "\u2141": 122, "\u2222": 123, "\u2201": 124, "\xf0": 125, "\xa5": 126, "\u2713": 127, "\u2136": 128, "\u2138": 129, "\u2137": 130, "\u03dd": 131, "\u250c": 132, "\u2510": 133, "\u2514": 134, "\u2518": 135, "\u2266": 136, "\u2a7d": 137, "\u2a95": 138, "\u2272": 139, "\u2a85": 140, "\u224a": 141, "\u22d8": 142, "\u2276": 143, "\u22da": 144, "\u2a8b": 145, "\u2253": 146, "\u2252": 147, "\u223d": 148, "\u22cd": 149, "\u2ac5": 150, "\u22d0": 151, "\u228f": 152, "\u227c": 153, "\u22de": 154, "\u227e": 155, "\u2ab7": 156, "\u22a8": 157, "\u22aa": 158, "\u224f": 159, "\u224e": 160, "\u2267": 161, "\u2a7e": 162, "\u2a96": 163, "\u2273": 164, "\u2a86": 165, "\u22d9": 166, "\u2277": 167, "\u22db": 168, "\u2a8c": 169, "\u2256": 170, "\u2257": 171, "\u225c": 172, "\u2ac6": 173, "\u22d1": 174, "\u2290": 175, "\u227d": 176, "\u22df": 177, "\u227f": 178, "\u2ab8": 179, "\u22a9": 180, "\u226c": 181, "\u22d4": 182, "\u2234": 183, "\u2235": 184, "\u2242": 185, "\u2251": 186, "\u2214": 187, "\u22d2": 188, "\u22d3": 189, "\u2a5e": 190, "\u229f": 191, "\u229e": 192, "\u22c7": 193, "\u22c9": 194, "\u22ca": 195, "\u22cb": 196, "\u22cc": 197, "\u22cf": 198, "\u22ce": 199, "\u229d": 200, "\u229b": 201, "\u22ba": 202, "\u22a0": 203, "\u21e2": 204, "\u21e0": 205, "\u21c7": 206, "\u21c6": 207, "\u21da": 208, "\u219e": 209, "\u21a2": 210, "\u21ab": 211, "\u21cb": 212, "\u21b6": 213, "\u21ba": 214, "\u21b0": 215, "\u21c8": 216, "\u21bf": 217, "\u21c3": 218, "\u22b8": 219, "\u21ad": 220, "\u21c9": 221, "\u21c4": 222, "\u21a0": 223, "\u21a3": 224, "\u21ac": 225, "\u21b7": 226, "\u21bb": 227, "\u21b1": 228, "\u21ca": 229, "\u21be": 230, "\u21c2": 231, "\u21dd": 232, "\u21db": 233, "`": 234, "\u2220": 235, "\u221e": 236, "\u0393": 237, "\u0394": 238, "\u0398": 239, "\u039b": 240, "\u039e": 241, "\u03a0": 242, "\u03a3": 243, "\u03a5": 244, "\u03a6": 245, "\u03a8": 246, "\u03a9": 247, "\u0391": 248, "\u0392": 249, "\u0395": 250, "\u0396": 251, "\u0397": 252, "\u0399": 253, "\u039a": 254, "\u039c": 255, "\u039d": 256, "\u039f": 257, "\u03a1": 258, "\u03a4": 259, "\u03a7": 260, "\xac": 261, "\u03b1": 262, "\u03b2": 263, "\u03b3": 264, "\u03b4": 265, "\u03f5": 266, "\u03b6": 267, "\u03b7": 268, "\u03b8": 269, "\u03b9": 270, "\u03ba": 271, "\u03bb": 272, "\u03bc": 273, "\u03bd": 274, "\u03be": 275, "\u03bf": 276, "\u03c0": 277, "\u03c1": 278, "\u03c3": 279, "\u03c4": 280, "\u03c5": 281, "\u03d5": 282, "\u03c7": 283, "\u03c8": 284, "\u03c9": 285, "\u03b5": 286, "\u03d1": 287, "\u03d6": 288, "\u03f1": 289, "\u03c2": 290, "\u03c6": 291, "*": 292, "+": 293, "-": 294, "\u22c5": 295, "\xf7": 296, "\xb1": 297, "\xd7": 298, "\u2229": 299, "\u222a": 300, "\u2227": 301, "\u2228": 302, "(": 303, "[": 304, "\u27e8": 305, ")": 306, "]": 307, "?": 308, "!": 309, "\u27e9": 310, "=": 311, "<": 312, ">": 313, ":": 314, "\u2248": 315, "\u2245": 316, "\u2265": 317, "\u2208": 318, "\u2282": 319, "\u2283": 320, "\u2286": 321, "\u2287": 322, "\u2288": 323, "\u2289": 324, "\u2190": 325, "\u2264": 326, "\u2192": 327, "\u2271": 328, "\u2270": 329, ",": 330, ";": 331, "\u22bc": 332, "\u22bb": 333, "\u2299": 334, "\u2295": 335, "\u2297": 336, "\u2202": 337, "\u2298": 338, "\u229a": 339, "\u22a1": 340, "\u230a": 341, "\u230b": 342, "\u2308": 343, "\u2309": 344, "|": 345, "\u2191": 346, "\u21d1": 347, "\u2193": 348, "\u21d3": 349, "\u2195": 350, "\u21d5": 351, "\u2026": 352, "\u22ef": 353, "\u22f1": 354, "\u0131": 355, "\u0237": 356, "\xb0": 357, "\xa3": 358, "/": 359, "@": 360, ".": 361, '"': 362, A: 363, B: 364, C: 365, D: 366, E: 367, F: 368, G: 369, H: 370, I: 371, J: 372, K: 373, L: 374, M: 375, N: 376, O: 377, P: 378, Q: 379, R: 380, S: 381, T: 382, U: 383, V: 384, W: 385, X: 386, Y: 387, Z: 388, a: 389, b: 390, c: 391, d: 392, e: 393, f: 394, g: 395, h: 396, i: 397, j: 398, k: 399, l: 400, m: 401, n: 402, o: 403, p: 404, q: 405, r: 406, s: 407, t: 408, u: 409, v: 410, w: 411, x: 412, y: 413, z: 414, "\u2102": 415, "\u210d": 416, "\u2115": 417, "\u2119": 418, "\u211a": 419, "\u211d": 420, "\u2124": 421, "\u210e": 422, "\ud835\udc00": 423, "\ud835\udc34": 424, "\ud835\udc68": 425, "\ud835\udd04": 426, "\ud835\udda0": 427, "\ud835\uddd4": 428, "\ud835\ude08": 429, "\ud835\ude70": 430, "\ud835\udd38": 431, "\ud835\udc9c": 432, "\ud835\udc01": 433, "\ud835\udc35": 434, "\ud835\udc69": 435, "\ud835\udd05": 436, "\ud835\udda1": 437, "\ud835\uddd5": 438, "\ud835\ude09": 439, "\ud835\ude71": 440, "\ud835\udd39": 441, "\ud835\udc9d": 442, "\ud835\udc02": 443, "\ud835\udc36": 444, "\ud835\udc6a": 445, "\ud835\udd06": 446, "\ud835\udda2": 447, "\ud835\uddd6": 448, "\ud835\ude0a": 449, "\ud835\ude72": 450, "\ud835\udd3a": 451, "\ud835\udc9e": 452, "\ud835\udc03": 453, "\ud835\udc37": 454, "\ud835\udc6b": 455, "\ud835\udd07": 456, "\ud835\udda3": 457, "\ud835\uddd7": 458, "\ud835\ude0b": 459, "\ud835\ude73": 460, "\ud835\udd3b": 461, "\ud835\udc9f": 462, "\ud835\udc04": 463, "\ud835\udc38": 464, "\ud835\udc6c": 465, "\ud835\udd08": 466, "\ud835\udda4": 467, "\ud835\uddd8": 468, "\ud835\ude0c": 469, "\ud835\ude74": 470, "\ud835\udd3c": 471, "\ud835\udca0": 472, "\ud835\udc05": 473, "\ud835\udc39": 474, "\ud835\udc6d": 475, "\ud835\udd09": 476, "\ud835\udda5": 477, "\ud835\uddd9": 478, "\ud835\ude0d": 479, "\ud835\ude75": 480, "\ud835\udd3d": 481, "\ud835\udca1": 482, "\ud835\udc06": 483, "\ud835\udc3a": 484, "\ud835\udc6e": 485, "\ud835\udd0a": 486, "\ud835\udda6": 487, "\ud835\uddda": 488, "\ud835\ude0e": 489, "\ud835\ude76": 490, "\ud835\udd3e": 491, "\ud835\udca2": 492, "\ud835\udc07": 493, "\ud835\udc3b": 494, "\ud835\udc6f": 495, "\ud835\udd0b": 496, "\ud835\udda7": 497, "\ud835\udddb": 498, "\ud835\ude0f": 499, "\ud835\ude77": 500, "\ud835\udd3f": 501, "\ud835\udca3": 502, "\ud835\udc08": 503, "\ud835\udc3c": 504, "\ud835\udc70": 505, "\ud835\udd0c": 506, "\ud835\udda8": 507, "\ud835\udddc": 508, "\ud835\ude10": 509, "\ud835\ude78": 510, "\ud835\udd40": 511, "\ud835\udca4": 512, "\ud835\udc09": 513, "\ud835\udc3d": 514, "\ud835\udc71": 515, "\ud835\udd0d": 516, "\ud835\udda9": 517, "\ud835\udddd": 518, "\ud835\ude11": 519, "\ud835\ude79": 520, "\ud835\udd41": 521, "\ud835\udca5": 522, "\ud835\udc0a": 523, "\ud835\udc3e": 524, "\ud835\udc72": 525, "\ud835\udd0e": 526, "\ud835\uddaa": 527, "\ud835\uddde": 528, "\ud835\ude12": 529, "\ud835\ude7a": 530, "\ud835\udd42": 531, "\ud835\udca6": 532, "\ud835\udc0b": 533, "\ud835\udc3f": 534, "\ud835\udc73": 535, "\ud835\udd0f": 536, "\ud835\uddab": 537, "\ud835\udddf": 538, "\ud835\ude13": 539, "\ud835\ude7b": 540, "\ud835\udd43": 541, "\ud835\udca7": 542, "\ud835\udc0c": 543, "\ud835\udc40": 544, "\ud835\udc74": 545, "\ud835\udd10": 546, "\ud835\uddac": 547, "\ud835\udde0": 548, "\ud835\ude14": 549, "\ud835\ude7c": 550, "\ud835\udd44": 551, "\ud835\udca8": 552, "\ud835\udc0d": 553, "\ud835\udc41": 554, "\ud835\udc75": 555, "\ud835\udd11": 556, "\ud835\uddad": 557, "\ud835\udde1": 558, "\ud835\ude15": 559, "\ud835\ude7d": 560, "\ud835\udd45": 561, "\ud835\udca9": 562, "\ud835\udc0e": 563, "\ud835\udc42": 564, "\ud835\udc76": 565, "\ud835\udd12": 566, "\ud835\uddae": 567, "\ud835\udde2": 568, "\ud835\ude16": 569, "\ud835\ude7e": 570, "\ud835\udd46": 571, "\ud835\udcaa": 572, "\ud835\udc0f": 573, "\ud835\udc43": 574, "\ud835\udc77": 575, "\ud835\udd13": 576, "\ud835\uddaf": 577, "\ud835\udde3": 578, "\ud835\ude17": 579, "\ud835\ude7f": 580, "\ud835\udd47": 581, "\ud835\udcab": 582, "\ud835\udc10": 583, "\ud835\udc44": 584, "\ud835\udc78": 585, "\ud835\udd14": 586, "\ud835\uddb0": 587, "\ud835\udde4": 588, "\ud835\ude18": 589, "\ud835\ude80": 590, "\ud835\udd48": 591, "\ud835\udcac": 592, "\ud835\udc11": 593, "\ud835\udc45": 594, "\ud835\udc79": 595, "\ud835\udd15": 596, "\ud835\uddb1": 597, "\ud835\udde5": 598, "\ud835\ude19": 599, "\ud835\ude81": 600, "\ud835\udd49": 601, "\ud835\udcad": 602, "\ud835\udc12": 603, "\ud835\udc46": 604, "\ud835\udc7a": 605, "\ud835\udd16": 606, "\ud835\uddb2": 607, "\ud835\udde6": 608, "\ud835\ude1a": 609, "\ud835\ude82": 610, "\ud835\udd4a": 611, "\ud835\udcae": 612, "\ud835\udc13": 613, "\ud835\udc47": 614, "\ud835\udc7b": 615, "\ud835\udd17": 616, "\ud835\uddb3": 617, "\ud835\udde7": 618, "\ud835\ude1b": 619, "\ud835\ude83": 620, "\ud835\udd4b": 621, "\ud835\udcaf": 622, "\ud835\udc14": 623, "\ud835\udc48": 624, "\ud835\udc7c": 625, "\ud835\udd18": 626, "\ud835\uddb4": 627, "\ud835\udde8": 628, "\ud835\ude1c": 629, "\ud835\ude84": 630, "\ud835\udd4c": 631, "\ud835\udcb0": 632, "\ud835\udc15": 633, "\ud835\udc49": 634, "\ud835\udc7d": 635, "\ud835\udd19": 636, "\ud835\uddb5": 637, "\ud835\udde9": 638, "\ud835\ude1d": 639, "\ud835\ude85": 640, "\ud835\udd4d": 641, "\ud835\udcb1": 642, "\ud835\udc16": 643, "\ud835\udc4a": 644, "\ud835\udc7e": 645, "\ud835\udd1a": 646, "\ud835\uddb6": 647, "\ud835\uddea": 648, "\ud835\ude1e": 649, "\ud835\ude86": 650, "\ud835\udd4e": 651, "\ud835\udcb2": 652, "\ud835\udc17": 653, "\ud835\udc4b": 654, "\ud835\udc7f": 655, "\ud835\udd1b": 656, "\ud835\uddb7": 657, "\ud835\uddeb": 658, "\ud835\ude1f": 659, "\ud835\ude87": 660, "\ud835\udd4f": 661, "\ud835\udcb3": 662, "\ud835\udc18": 663, "\ud835\udc4c": 664, "\ud835\udc80": 665, "\ud835\udd1c": 666, "\ud835\uddb8": 667, "\ud835\uddec": 668, "\ud835\ude20": 669, "\ud835\ude88": 670, "\ud835\udd50": 671, "\ud835\udcb4": 672, "\ud835\udc19": 673, "\ud835\udc4d": 674, "\ud835\udc81": 675, "\ud835\udd1d": 676, "\ud835\uddb9": 677, "\ud835\udded": 678, "\ud835\ude21": 679, "\ud835\ude89": 680, "\ud835\udd51": 681, "\ud835\udcb5": 682, "\ud835\udc1a": 683, "\ud835\udc4e": 684, "\ud835\udc82": 685, "\ud835\udd1e": 686, "\ud835\uddba": 687, "\ud835\uddee": 688, "\ud835\ude22": 689, "\ud835\ude8a": 690, "\ud835\udc1b": 691, "\ud835\udc4f": 692, "\ud835\udc83": 693, "\ud835\udd1f": 694, "\ud835\uddbb": 695, "\ud835\uddef": 696, "\ud835\ude23": 697, "\ud835\ude8b": 698, "\ud835\udc1c": 699, "\ud835\udc50": 700, "\ud835\udc84": 701, "\ud835\udd20": 702, "\ud835\uddbc": 703, "\ud835\uddf0": 704, "\ud835\ude24": 705, "\ud835\ude8c": 706, "\ud835\udc1d": 707, "\ud835\udc51": 708, "\ud835\udc85": 709, "\ud835\udd21": 710, "\ud835\uddbd": 711, "\ud835\uddf1": 712, "\ud835\ude25": 713, "\ud835\ude8d": 714, "\ud835\udc1e": 715, "\ud835\udc52": 716, "\ud835\udc86": 717, "\ud835\udd22": 718, "\ud835\uddbe": 719, "\ud835\uddf2": 720, "\ud835\ude26": 721, "\ud835\ude8e": 722, "\ud835\udc1f": 723, "\ud835\udc53": 724, "\ud835\udc87": 725, "\ud835\udd23": 726, "\ud835\uddbf": 727, "\ud835\uddf3": 728, "\ud835\ude27": 729, "\ud835\ude8f": 730, "\ud835\udc20": 731, "\ud835\udc54": 732, "\ud835\udc88": 733, "\ud835\udd24": 734, "\ud835\uddc0": 735, "\ud835\uddf4": 736, "\ud835\ude28": 737, "\ud835\ude90": 738, "\ud835\udc21": 739, "\ud835\udc55": 740, "\ud835\udc89": 741, "\ud835\udd25": 742, "\ud835\uddc1": 743, "\ud835\uddf5": 744, "\ud835\ude29": 745, "\ud835\ude91": 746, "\ud835\udc22": 747, "\ud835\udc56": 748, "\ud835\udc8a": 749, "\ud835\udd26": 750, "\ud835\uddc2": 751, "\ud835\uddf6": 752, "\ud835\ude2a": 753, "\ud835\ude92": 754, "\ud835\udc23": 755, "\ud835\udc57": 756, "\ud835\udc8b": 757, "\ud835\udd27": 758, "\ud835\uddc3": 759, "\ud835\uddf7": 760, "\ud835\ude2b": 761, "\ud835\ude93": 762, "\ud835\udc24": 763, "\ud835\udc58": 764, "\ud835\udc8c": 765, "\ud835\udd28": 766, "\ud835\uddc4": 767, "\ud835\uddf8": 768, "\ud835\ude2c": 769, "\ud835\ude94": 770, "\ud835\udc25": 771, "\ud835\udc59": 772, "\ud835\udc8d": 773, "\ud835\udd29": 774, "\ud835\uddc5": 775, "\ud835\uddf9": 776, "\ud835\ude2d": 777, "\ud835\ude95": 778, "\ud835\udc26": 779, "\ud835\udc5a": 780, "\ud835\udc8e": 781, "\ud835\udd2a": 782, "\ud835\uddc6": 783, "\ud835\uddfa": 784, "\ud835\ude2e": 785, "\ud835\ude96": 786, "\ud835\udc27": 787, "\ud835\udc5b": 788, "\ud835\udc8f": 789, "\ud835\udd2b": 790, "\ud835\uddc7": 791, "\ud835\uddfb": 792, "\ud835\ude2f": 793, "\ud835\ude97": 794, "\ud835\udc28": 795, "\ud835\udc5c": 796, "\ud835\udc90": 797, "\ud835\udd2c": 798, "\ud835\uddc8": 799, "\ud835\uddfc": 800, "\ud835\ude30": 801, "\ud835\ude98": 802, "\ud835\udc29": 803, "\ud835\udc5d": 804, "\ud835\udc91": 805, "\ud835\udd2d": 806, "\ud835\uddc9": 807, "\ud835\uddfd": 808, "\ud835\ude31": 809, "\ud835\ude99": 810, "\ud835\udc2a": 811, "\ud835\udc5e": 812, "\ud835\udc92": 813, "\ud835\udd2e": 814, "\ud835\uddca": 815, "\ud835\uddfe": 816, "\ud835\ude32": 817, "\ud835\ude9a": 818, "\ud835\udc2b": 819, "\ud835\udc5f": 820, "\ud835\udc93": 821, "\ud835\udd2f": 822, "\ud835\uddcb": 823, "\ud835\uddff": 824, "\ud835\ude33": 825, "\ud835\ude9b": 826, "\ud835\udc2c": 827, "\ud835\udc60": 828, "\ud835\udc94": 829, "\ud835\udd30": 830, "\ud835\uddcc": 831, "\ud835\ude00": 832, "\ud835\ude34": 833, "\ud835\ude9c": 834, "\ud835\udc2d": 835, "\ud835\udc61": 836, "\ud835\udc95": 837, "\ud835\udd31": 838, "\ud835\uddcd": 839, "\ud835\ude01": 840, "\ud835\ude35": 841, "\ud835\ude9d": 842, "\ud835\udc2e": 843, "\ud835\udc62": 844, "\ud835\udc96": 845, "\ud835\udd32": 846, "\ud835\uddce": 847, "\ud835\ude02": 848, "\ud835\ude36": 849, "\ud835\ude9e": 850, "\ud835\udc2f": 851, "\ud835\udc63": 852, "\ud835\udc97": 853, "\ud835\udd33": 854, "\ud835\uddcf": 855, "\ud835\ude03": 856, "\ud835\ude37": 857, "\ud835\ude9f": 858, "\ud835\udc30": 859, "\ud835\udc64": 860, "\ud835\udc98": 861, "\ud835\udd34": 862, "\ud835\uddd0": 863, "\ud835\ude04": 864, "\ud835\ude38": 865, "\ud835\udea0": 866, "\ud835\udc31": 867, "\ud835\udc65": 868, "\ud835\udc99": 869, "\ud835\udd35": 870, "\ud835\uddd1": 871, "\ud835\ude05": 872, "\ud835\ude39": 873, "\ud835\udea1": 874, "\ud835\udc32": 875, "\ud835\udc66": 876, "\ud835\udc9a": 877, "\ud835\udd36": 878, "\ud835\uddd2": 879, "\ud835\ude06": 880, "\ud835\ude3a": 881, "\ud835\udea2": 882, "\ud835\udc33": 883, "\ud835\udc67": 884, "\ud835\udc9b": 885, "\ud835\udd37": 886, "\ud835\uddd3": 887, "\ud835\ude07": 888, "\ud835\ude3b": 889, "\ud835\udea3": 890, "\ud835\udd5c": 891, "\ud835\udfce": 892, "\ud835\udfe2": 893, "\ud835\udfec": 894, "\ud835\udff6": 895, "\ud835\udfcf": 896, "\ud835\udfe3": 897, "\ud835\udfed": 898, "\ud835\udff7": 899, "\ud835\udfd0": 900, "\ud835\udfe4": 901, "\ud835\udfee": 902, "\ud835\udff8": 903, "\ud835\udfd1": 904, "\ud835\udfe5": 905, "\ud835\udfef": 906, "\ud835\udff9": 907, "\ud835\udfd2": 908, "\ud835\udfe6": 909, "\ud835\udff0": 910, "\ud835\udffa": 911, "\ud835\udfd3": 912, "\ud835\udfe7": 913, "\ud835\udff1": 914, "\ud835\udffb": 915, "\ud835\udfd4": 916, "\ud835\udfe8": 917, "\ud835\udff2": 918, "\ud835\udffc": 919, "\ud835\udfd5": 920, "\ud835\udfe9": 921, "\ud835\udff3": 922, "\ud835\udffd": 923, "\ud835\udfd6": 924, "\ud835\udfea": 925, "\ud835\udff4": 926, "\ud835\udffe": 927, "\ud835\udfd7": 928, "\ud835\udfeb": 929, "\ud835\udff5": 930, "\ud835\udfff": 931, "\xc7": 932, "\xd0": 933, "\xde": 934, "\xe7": 935, "\xfe": 936, "\xa0": 937, " ": 938, "\\equiv": 939, "\\prec": 940, "\\succ": 941, "\\sim": 942, "\\preceq": 943, "\\succeq": 944, "\\simeq": 945, "\\mid": 946, "\\ll": 947, "\\gg": 948, "\\asymp": 949, "\\bowtie": 950, "\\smile": 951, "\\sqsubseteq": 952, "\\sqsupseteq": 953, "\\doteq": 954, "\\frown": 955, "\\ni": 956, "\\propto": 957, "\\vdash": 958, "\\dashv": 959, "\\owns": 960, "\\ldotp": 961, "\\cdotp": 962, "\\aleph": 963, "\\forall": 964, "\\hbar": 965, "\\exists": 966, "\\nabla": 967, "\\flat": 968, "\\ell": 969, "\\natural": 970, "\\clubsuit": 971, "\\wp": 972, "\\sharp": 973, "\\diamondsuit": 974, "\\Re": 975, "\\heartsuit": 976, "\\Im": 977, "\\spadesuit": 978, "\\rmoustache": 979, "\\lmoustache": 980, "\\rgroup": 981, "\\lgroup": 982, "\\mp": 983, "\\ominus": 984, "\\uplus": 985, "\\sqcap": 986, "\\ast": 987, "\\sqcup": 988, "\\wr": 989, "\\longleftarrow": 990, "\\Leftarrow": 991, "\\Longleftarrow": 992, "\\longrightarrow": 993, "\\Rightarrow": 994, "\\Longrightarrow": 995, "\\leftrightarrow": 996, "\\longleftrightarrow": 997, "\\Leftrightarrow": 998, "\\Longleftrightarrow": 999, "\\mapsto": 1000, "\\longmapsto": 1001, "\\nearrow": 1002, "\\hookleftarrow": 1003, "\\hookrightarrow": 1004, "\\searrow": 1005, "\\leftharpoonup": 1006, "\\rightharpoonup": 1007, "\\swarrow": 1008, "\\leftharpoondown": 1009, "\\rightharpoondown": 1010, "\\nwarrow": 1011, "\\rightleftharpoons": 1012, "\\nless": 1013, "\\nleqslant": 1014, "\\nleqq": 1015, "\\lneq": 1016, "\\lneqq": 1017, "\\lvertneqq": 1018, "\\lnsim": 1019, "\\lnapprox": 1020, "\\nprec": 1021, "\\npreceq": 1022, "\\precnsim": 1023, "\\precnapprox": 1024, "\\nsim": 1025, "\\nshortmid": 1026, "\\nmid": 1027, "\\nvdash": 1028, "\\nvDash": 1029, "\\ntrianglelefteq": 1030, "\\subsetneq": 1031, "\\varsubsetneq": 1032, "\\subsetneqq": 1033, "\\varsubsetneqq": 1034, "\\ngtr": 1035, "\\ngeqslant": 1036, "\\ngeqq": 1037, "\\gneq": 1038, "\\gneqq": 1039, "\\gvertneqq": 1040, "\\gnsim": 1041, "\\gnapprox": 1042, "\\nsucc": 1043, "\\nsucceq": 1044, "\\succnsim": 1045, "\\succnapprox": 1046, "\\ncong": 1047, "\\nshortparallel": 1048, "\\nparallel": 1049, "\\nVDash": 1050, "\\ntrianglerighteq": 1051, "\\nsupseteqq": 1052, "\\supsetneq": 1053, "\\varsupsetneq": 1054, "\\supsetneqq": 1055, "\\varsupsetneqq": 1056, "\\nVdash": 1057, "\\precneqq": 1058, "\\succneqq": 1059, "\\nsubseteqq": 1060, "\\nleftarrow": 1061, "\\nrightarrow": 1062, "\\nLeftarrow": 1063, "\\nRightarrow": 1064, "\\nleftrightarrow": 1065, "\\nLeftrightarrow": 1066, "\\hslash": 1067, "\\measuredangle": 1068, "\\Finv": 1069, "\\Game": 1070, "\\sphericalangle": 1071, "\\complement": 1072, "\\eth": 1073, "\\yen": 1074, "\\checkmark": 1075, "\\beth": 1076, "\\daleth": 1077, "\\gimel": 1078, "\\digamma": 1079, "\\@ulcorner": 1080, "\\@urcorner": 1081, "\\@llcorner": 1082, "\\@lrcorner": 1083, "\\leqq": 1084, "\\leqslant": 1085, "\\eqslantless": 1086, "\\lesssim": 1087, "\\lessapprox": 1088, "\\approxeq": 1089, "\\lll": 1090, "\\lessgtr": 1091, "\\lesseqgtr": 1092, "\\lesseqqgtr": 1093, "\\doteqdot": 1094, "\\risingdotseq": 1095, "\\fallingdotseq": 1096, "\\backsim": 1097, "\\backsimeq": 1098, "\\subseteqq": 1099, "\\Subset": 1100, "\\sqsubset": 1101, "\\preccurlyeq": 1102, "\\curlyeqprec": 1103, "\\precsim": 1104, "\\precapprox": 1105, "\\vDash": 1106, "\\Vvdash": 1107, "\\smallsmile": 1108, "\\smallfrown": 1109, "\\bumpeq": 1110, "\\Bumpeq": 1111, "\\geqq": 1112, "\\geqslant": 1113, "\\eqslantgtr": 1114, "\\gtrsim": 1115, "\\gtrapprox": 1116, "\\ggg": 1117, "\\gtrless": 1118, "\\gtreqless": 1119, "\\gtreqqless": 1120, "\\eqcirc": 1121, "\\circeq": 1122, "\\triangleq": 1123, "\\thicksim": 1124, "\\thickapprox": 1125, "\\supseteqq": 1126, "\\Supset": 1127, "\\sqsupset": 1128, "\\succcurlyeq": 1129, "\\curlyeqsucc": 1130, "\\succsim": 1131, "\\succapprox": 1132, "\\Vdash": 1133, "\\shortmid": 1134, "\\between": 1135, "\\pitchfork": 1136, "\\varpropto": 1137, "\\therefore": 1138, "\\because": 1139, "\\llless": 1140, "\\gggtr": 1141, "\\eqsim": 1142, "\\Join": 1143, "\\Doteq": 1144, "\\dotplus": 1145, "\\Cap": 1146, "\\Cup": 1147, "\\doublebarwedge": 1148, "\\boxminus": 1149, "\\boxplus": 1150, "\\divideontimes": 1151, "\\ltimes": 1152, "\\rtimes": 1153, "\\leftthreetimes": 1154, "\\rightthreetimes": 1155, "\\curlywedge": 1156, "\\curlyvee": 1157, "\\circleddash": 1158, "\\circledast": 1159, "\\centerdot": 1160, "\\intercal": 1161, "\\doublecap": 1162, "\\doublecup": 1163, "\\boxtimes": 1164, "\\dashrightarrow": 1165, "\\dashleftarrow": 1166, "\\leftleftarrows": 1167, "\\leftrightarrows": 1168, "\\Lleftarrow": 1169, "\\twoheadleftarrow": 1170, "\\leftarrowtail": 1171, "\\looparrowleft": 1172, "\\leftrightharpoons": 1173, "\\curvearrowleft": 1174, "\\circlearrowleft": 1175, "\\Lsh": 1176, "\\upuparrows": 1177, "\\upharpoonleft": 1178, "\\downharpoonleft": 1179, "\\multimap": 1180, "\\leftrightsquigarrow": 1181, "\\rightrightarrows": 1182, "\\rightleftarrows": 1183, "\\twoheadrightarrow": 1184, "\\rightarrowtail": 1185, "\\looparrowright": 1186, "\\curvearrowright": 1187, "\\circlearrowright": 1188, "\\Rsh": 1189, "\\downdownarrows": 1190, "\\upharpoonright": 1191, "\\downharpoonright": 1192, "\\rightsquigarrow": 1193, "\\leadsto": 1194, "\\Rrightarrow": 1195, "\\restriction": 1196, "\\angle": 1197, "\\infty": 1198, "\\Gamma": 1199, "\\Delta": 1200, "\\Theta": 1201, "\\Lambda": 1202, "\\Xi": 1203, "\\Pi": 1204, "\\Sigma": 1205, "\\Upsilon": 1206, "\\Phi": 1207, "\\Psi": 1208, "\\Omega": 1209, "\\neg": 1210, "\\lnot": 1211, "\\alpha": 1212, "\\beta": 1213, "\\gamma": 1214, "\\delta": 1215, "\\epsilon": 1216, "\\zeta": 1217, "\\eta": 1218, "\\theta": 1219, "\\iota": 1220, "\\kappa": 1221, "\\lambda": 1222, "\\mu": 1223, "\\nu": 1224, "\\xi": 1225, "\\omicron": 1226, "\\pi": 1227, "\\rho": 1228, "\\sigma": 1229, "\\tau": 1230, "\\upsilon": 1231, "\\phi": 1232, "\\chi": 1233, "\\psi": 1234, "\\omega": 1235, "\\varepsilon": 1236, "\\vartheta": 1237, "\\varpi": 1238, "\\varrho": 1239, "\\varsigma": 1240, "\\varphi": 1241, "\\cdot": 1242, "\\div": 1243, "\\pm": 1244, "\\times": 1245, "\\cap": 1246, "\\cup": 1247, "\\land": 1248, "\\lor": 1249, "\\wedge": 1250, "\\vee": 1251, "\\langle": 1252, "\\lvert": 1253, "\\rangle": 1254, "\\rvert": 1255, "\\approx": 1256, "\\cong": 1257, "\\ge": 1258, "\\geq": 1259, "\\gets": 1260, "\\gt": 1261, "\\in": 1262, "\\subset": 1263, "\\supset": 1264, "\\subseteq": 1265, "\\supseteq": 1266, "\\nsubseteq": 1267, "\\nsupseteq": 1268, "\\models": 1269, "\\leftarrow": 1270, "\\le": 1271, "\\leq": 1272, "\\lt": 1273, "\\rightarrow": 1274, "\\to": 1275, "\\ngeq": 1276, "\\nleq": 1277, "\\ ": 1278, "~": 1279, "\\space": 1280, "\\nobreakspace": 1281, "\\barwedge": 1282, "\\veebar": 1283, "\\odot": 1284, "\\oplus": 1285, "\\otimes": 1286, "\\partial": 1287, "\\oslash": 1288, "\\circledcirc": 1289, "\\boxdot": 1290, "\\lbrack": 1291, "\\rbrack": 1292, "\\lparen": 1293, "\\rparen": 1294, "\\lfloor": 1295, "\\rfloor": 1296, "\\lceil": 1297, "\\rceil": 1298, "\\vert": 1299, "\\uparrow": 1300, "\\Uparrow": 1301, "\\downarrow": 1302, "\\Downarrow": 1303, "\\updownarrow": 1304, "\\Updownarrow": 1305, "\\mathellipsis": 1306, "\\ldots": 1307, "\\@cdots": 1308, "\\ddots": 1309, "\\imath": 1310, "\\jmath": 1311, "\\degree": 1312, "\\pounds": 1313, "\\mathsterling": 1314, "\\perp": 1315, "\\bot": 1316, "\\parallel": 1317, "\\shortparallel": 1318, "\\lVert": 1319, "\\rVert": 1320, "\\|": 1321, "\\Vert": 1322, "\\#": 1323, "\\&": 1324, "\\And": 1325, "\\dagger": 1326, "\\dag": 1327, "\\ddagger": 1328, "\\ddag": 1329, "\\bigcirc": 1330, "\\bullet": 1331, "\\amalg": 1332, "\\ntriangleleft": 1333, "\\ntriangleright": 1334, "\\trianglelefteq": 1335, "\\unlhd": 1336, "\\trianglerighteq": 1337, "\\unrhd": 1338, "\\bigtriangleup": 1339, "\\vartriangle": 1340, "\\triangle": 1341, "\\bigtriangledown": 1342, "\\triangledown": 1343, "\\lozenge": 1344, "\\Diamond": 1345, "\\circledS": 1346, "\\circledR": 1347, "\\nexists": 1348, "\\mho": 1349, "\\backprime": 1350, "\\blacktriangle": 1351, "\\blacktriangledown": 1352, "\\blacksquare": 1353, "\\blacklozenge": 1354, "\\bigstar": 1355, "\\diagup": 1356, "\\diagdown": 1357, "\\square": 1358, "\\Box": 1359, "\\varkappa": 1360, "\\lessdot": 1361, "\\lhd": 1362, "\\vartriangleleft": 1363, "\\gtrdot": 1364, "\\vartriangleright": 1365, "\\rhd": 1366, "\\blacktriangleleft": 1367, "\\backepsilon": 1368, "\\blacktriangleright": 1369, "\\setminus": 1370, "\\smallsetminus": 1371, "\\$": 1372, "\\%": 1373, "\\_": 1374, "\\prime": 1375, "\\top": 1376, "\\emptyset": 1377, "\\varnothing": 1378, "\\circ": 1379, "\\surd": 1380, "\\not": 1381, "\\diamond": 1382, "\\star": 1383, "\\triangleleft": 1384, "\\triangleright": 1385, "\\{": 1386, "\\lbrace": 1387, "\\}": 1388, "\\rbrace": 1389, "\\backslash": 1390, "\\coprod": 1391, "\\bigvee": 1392, "\\bigwedge": 1393, "\\biguplus": 1394, "\\bigcap": 1395, "\\bigcup": 1396, "\\int": 1397, "\\intop": 1398, "\\smallint": 1399, "\\iint": 1400, "\\iiint": 1401, "\\prod": 1402, "\\sum": 1403, "\\bigotimes": 1404, "\\bigoplus": 1405, "\\bigodot": 1406, "\\oint": 1407, "\\oiint": 1408, "\\oiiint": 1409, "\\bigsqcup": 1410, "\\varvdots": 1411, "\\acute": 1412, "\\grave": 1413, "\\ddot": 1414, "\\tilde": 1415, "\\bar": 1416, "\\breve": 1417, "\\check": 1418, "\\hat": 1419, "\\vec": 1420, "\\dot": 1421, "\\mathring": 1422, "\\maltese": 1423, "\u2259": 1424, "\u225a": 1425, "\u225b": 1426, "\u225d": 1427, "\u225e": 1428, "\u225f": 1429, "\\neq": 1430, "\\notin": 1431, "\\notni": 1432, "\u2260": 1433, "\u2209": 1434, "\u220c": 1435, "\\colon": 1436, "\\dblcolon": 1437, "\\coloneqq": 1438, "\\eqqcolon": 1439, "\\eqcolon": 1440, "\\llbracket": 1441, "\\rrbracket": 1442, "\\lBrace": 1443, "\\rBrace": 1444};
    A.TexSymbolConfig_sAj = new B.TexSymbolConfig("0", false, null);
    A.TexSymbolConfig_JIB = new B.TexSymbolConfig("1", false, null);
    A.TexSymbolConfig_Kjf = new B.TexSymbolConfig("2", false, null);
    A.TexSymbolConfig_hf8 = new B.TexSymbolConfig("3", false, null);
    A.TexSymbolConfig_Rb2 = new B.TexSymbolConfig("4", false, null);
    A.TexSymbolConfig_xTp = new B.TexSymbolConfig("5", false, null);
    A.TexSymbolConfig_v6K = new B.TexSymbolConfig("6", false, null);
    A.TexSymbolConfig_nqA = new B.TexSymbolConfig("7", false, null);
    A.TexSymbolConfig_gK2 = new B.TexSymbolConfig("8", false, null);
    A.TexSymbolConfig_jJE = new B.TexSymbolConfig("9", false, null);
    A.TexSymbolConfig_KUP = new B.TexSymbolConfig("\u2261", false, null);
    A.TexSymbolConfig_wGY = new B.TexSymbolConfig("\u227a", false, null);
    A.TexSymbolConfig_4bt = new B.TexSymbolConfig("\u227b", false, null);
    A.TexSymbolConfig_DHc = new B.TexSymbolConfig("\u223c", false, null);
    A.TexSymbolConfig_agq = new B.TexSymbolConfig("\u2aaf", false, null);
    A.TexSymbolConfig_MTR = new B.TexSymbolConfig("\u2ab0", false, null);
    A.TexSymbolConfig_1FX = new B.TexSymbolConfig("\u2243", false, null);
    A.TexSymbolConfig_cZq = new B.TexSymbolConfig("\u2223", false, null);
    A.TexSymbolConfig_SJe = new B.TexSymbolConfig("\u226a", false, null);
    A.TexSymbolConfig_fBr = new B.TexSymbolConfig("\u226b", false, null);
    A.TexSymbolConfig_khi = new B.TexSymbolConfig("\u224d", false, null);
    A.TexSymbolConfig_Tk5 = new B.TexSymbolConfig("\u22c8", false, null);
    A.TexSymbolConfig_SYM = new B.TexSymbolConfig("\u2323", false, null);
    A.TexSymbolConfig_uNR = new B.TexSymbolConfig("\u2291", false, null);
    A.TexSymbolConfig_mSW = new B.TexSymbolConfig("\u2292", false, null);
    A.TexSymbolConfig_fGk = new B.TexSymbolConfig("\u2250", false, null);
    A.TexSymbolConfig_tU4 = new B.TexSymbolConfig("\u2322", false, null);
    A.TexSymbolConfig_29i = new B.TexSymbolConfig("\u220b", false, null);
    A.TexSymbolConfig_jmd = new B.TexSymbolConfig("\u221d", false, null);
    A.TexSymbolConfig_ZTu = new B.TexSymbolConfig("\u22a2", false, null);
    A.TexSymbolConfig_Grr = new B.TexSymbolConfig("\u22a3", false, null);
    A.TexSymbolConfig_tuy = new B.TexSymbolConfig("\u2135", false, null);
    A.TexSymbolConfig_wau = new B.TexSymbolConfig("\u2200", false, null);
    A.TexSymbolConfig_sWu = new B.TexSymbolConfig("\u210f", false, null);
    A.TexSymbolConfig_Rie = new B.TexSymbolConfig("\u2203", false, null);
    A.TexSymbolConfig_a90 = new B.TexSymbolConfig("\u2207", false, null);
    A.TexSymbolConfig_Q5K = new B.TexSymbolConfig("\u266d", false, null);
    A.TexSymbolConfig_0dD = new B.TexSymbolConfig("\u2113", false, null);
    A.TexSymbolConfig_nOB = new B.TexSymbolConfig("\u266e", false, null);
    A.TexSymbolConfig_Aej = new B.TexSymbolConfig("\u2663", false, null);
    A.TexSymbolConfig_ccx = new B.TexSymbolConfig("\u2118", false, null);
    A.TexSymbolConfig_Z3V = new B.TexSymbolConfig("\u266f", false, null);
    A.TexSymbolConfig_pur = new B.TexSymbolConfig("\u2662", false, null);
    A.TexSymbolConfig_OON = new B.TexSymbolConfig("\u211c", false, null);
    A.TexSymbolConfig_PZ2 = new B.TexSymbolConfig("\u2661", false, null);
    A.TexSymbolConfig_LSU = new B.TexSymbolConfig("\u2111", false, null);
    A.TexSymbolConfig_vPH = new B.TexSymbolConfig("\u2660", false, null);
    A.TexSymbolConfig_u6o = new B.TexSymbolConfig("\u23b1", false, null);
    A.TexSymbolConfig_Dwz = new B.TexSymbolConfig("\u23b0", false, null);
    A.TexSymbolConfig_RSC = new B.TexSymbolConfig("\u27ef", false, null);
    A.TexSymbolConfig_t9t = new B.TexSymbolConfig("\u27ee", false, null);
    A.TexSymbolConfig_2CX = new B.TexSymbolConfig("\u2213", false, null);
    A.TexSymbolConfig_tXA = new B.TexSymbolConfig("\u2296", false, null);
    A.TexSymbolConfig_wbP = new B.TexSymbolConfig("\u228e", false, null);
    A.TexSymbolConfig_rOw = new B.TexSymbolConfig("\u2293", false, null);
    A.TexSymbolConfig_K5n = new B.TexSymbolConfig("\u2294", false, null);
    A.TexSymbolConfig_YsD = new B.TexSymbolConfig("\u2240", false, null);
    A.TexSymbolConfig_rp7 = new B.TexSymbolConfig("\u27f5", false, null);
    A.TexSymbolConfig_NWo = new B.TexSymbolConfig("\u21d0", false, null);
    A.TexSymbolConfig_UO3 = new B.TexSymbolConfig("\u27f8", false, null);
    A.TexSymbolConfig_kkE = new B.TexSymbolConfig("\u27f6", false, null);
    A.TexSymbolConfig_R8D = new B.TexSymbolConfig("\u21d2", false, null);
    A.TexSymbolConfig_gRH = new B.TexSymbolConfig("\u27f9", false, null);
    A.TexSymbolConfig_7a5 = new B.TexSymbolConfig("\u2194", false, null);
    A.TexSymbolConfig_1Gr = new B.TexSymbolConfig("\u27f7", false, null);
    A.TexSymbolConfig_g3R = new B.TexSymbolConfig("\u21d4", false, null);
    A.TexSymbolConfig_fLI = new B.TexSymbolConfig("\u27fa", false, null);
    A.TexSymbolConfig_61L = new B.TexSymbolConfig("\u21a6", false, null);
    A.TexSymbolConfig_wxW = new B.TexSymbolConfig("\u27fc", false, null);
    A.TexSymbolConfig_CDn = new B.TexSymbolConfig("\u2197", false, null);
    A.TexSymbolConfig_DqM = new B.TexSymbolConfig("\u21a9", false, null);
    A.TexSymbolConfig_vlT = new B.TexSymbolConfig("\u21aa", false, null);
    A.TexSymbolConfig_zni = new B.TexSymbolConfig("\u2198", false, null);
    A.TexSymbolConfig_nih = new B.TexSymbolConfig("\u21bc", false, null);
    A.TexSymbolConfig_nO1 = new B.TexSymbolConfig("\u21c0", false, null);
    A.TexSymbolConfig_GiU = new B.TexSymbolConfig("\u2199", false, null);
    A.TexSymbolConfig_kwB = new B.TexSymbolConfig("\u21bd", false, null);
    A.TexSymbolConfig_zCo = new B.TexSymbolConfig("\u21c1", false, null);
    A.TexSymbolConfig_o9s = new B.TexSymbolConfig("\u2196", false, null);
    A.TexSymbolConfig_OGi = new B.TexSymbolConfig("\u21cc", false, null);
    A.TexSymbolConfig_T2M = new B.TexSymbolConfig("\u226e", false, null);
    A.TexSymbolConfig_qnI = new B.TexSymbolConfig("\u2a87", false, null);
    A.TexSymbolConfig_3Jy = new B.TexSymbolConfig("\u2268", false, null);
    A.TexSymbolConfig_D6s = new B.TexSymbolConfig("\u22e6", false, null);
    A.TexSymbolConfig_7fW = new B.TexSymbolConfig("\u2a89", false, null);
    A.TexSymbolConfig_ZV8 = new B.TexSymbolConfig("\u2280", false, null);
    A.TexSymbolConfig_jWD = new B.TexSymbolConfig("\u22e0", false, null);
    A.TexSymbolConfig_N8P = new B.TexSymbolConfig("\u22e8", false, null);
    A.TexSymbolConfig_4vg = new B.TexSymbolConfig("\u2ab9", false, null);
    A.TexSymbolConfig_jZr = new B.TexSymbolConfig("\u2241", false, null);
    A.TexSymbolConfig_Luc = new B.TexSymbolConfig("\u2224", false, null);
    A.TexSymbolConfig_vNr = new B.TexSymbolConfig("\u22ac", false, null);
    A.TexSymbolConfig_J4P = new B.TexSymbolConfig("\u22ad", false, null);
    A.TexSymbolConfig_noL = new B.TexSymbolConfig("\u22ec", false, null);
    A.TexSymbolConfig_pXh = new B.TexSymbolConfig("\u228a", false, null);
    A.TexSymbolConfig_ahV = new B.TexSymbolConfig("\u2acb", false, null);
    A.TexSymbolConfig_4Td = new B.TexSymbolConfig("\u226f", false, null);
    A.TexSymbolConfig_zvd = new B.TexSymbolConfig("\u2a88", false, null);
    A.TexSymbolConfig_oLh = new B.TexSymbolConfig("\u2269", false, null);
    A.TexSymbolConfig_w91 = new B.TexSymbolConfig("\u22e7", false, null);
    A.TexSymbolConfig_OLE = new B.TexSymbolConfig("\u2a8a", false, null);
    A.TexSymbolConfig_KUp = new B.TexSymbolConfig("\u2281", false, null);
    A.TexSymbolConfig_isu = new B.TexSymbolConfig("\u22e1", false, null);
    A.TexSymbolConfig_Pr7 = new B.TexSymbolConfig("\u22e9", false, null);
    A.TexSymbolConfig_f87 = new B.TexSymbolConfig("\u2aba", false, null);
    A.TexSymbolConfig_11c = new B.TexSymbolConfig("\u2246", false, null);
    A.TexSymbolConfig_c4l = new B.TexSymbolConfig("\u2226", false, null);
    A.TexSymbolConfig_rLT = new B.TexSymbolConfig("\u22af", false, null);
    A.TexSymbolConfig_KNN = new B.TexSymbolConfig("\u22ed", false, null);
    A.TexSymbolConfig_7Os = new B.TexSymbolConfig("\u228b", false, null);
    A.TexSymbolConfig_ZX1 = new B.TexSymbolConfig("\u2acc", false, null);
    A.TexSymbolConfig_RWQ = new B.TexSymbolConfig("\u22ae", false, null);
    A.TexSymbolConfig_bnT = new B.TexSymbolConfig("\u2ab5", false, null);
    A.TexSymbolConfig_Ru5 = new B.TexSymbolConfig("\u2ab6", false, null);
    A.TexSymbolConfig_JW9 = new B.TexSymbolConfig("\u219a", false, null);
    A.TexSymbolConfig_1FU = new B.TexSymbolConfig("\u219b", false, null);
    A.TexSymbolConfig_oYS = new B.TexSymbolConfig("\u21cd", false, null);
    A.TexSymbolConfig_idj = new B.TexSymbolConfig("\u21cf", false, null);
    A.TexSymbolConfig_Vpa = new B.TexSymbolConfig("\u21ae", false, null);
    A.TexSymbolConfig_i9Y = new B.TexSymbolConfig("\u21ce", false, null);
    A.TexSymbolConfig_gV0 = new B.TexSymbolConfig("\u2221", false, null);
    A.TexSymbolConfig_EdC = new B.TexSymbolConfig("\u2132", false, null);
    A.TexSymbolConfig_ZkC = new B.TexSymbolConfig("\u2141", false, null);
    A.TexSymbolConfig_IGr = new B.TexSymbolConfig("\u2222", false, null);
    A.TexSymbolConfig_iOE = new B.TexSymbolConfig("\u2201", false, null);
    A.TexSymbolConfig_W15 = new B.TexSymbolConfig("\xf0", false, null);
    A.TexSymbolConfig_OLK = new B.TexSymbolConfig("\xa5", false, null);
    A.TexSymbolConfig_kFC = new B.TexSymbolConfig("\u2713", false, null);
    A.TexSymbolConfig_fj0 = new B.TexSymbolConfig("\u2136", false, null);
    A.TexSymbolConfig_E4J = new B.TexSymbolConfig("\u2138", false, null);
    A.TexSymbolConfig_2VC = new B.TexSymbolConfig("\u2137", false, null);
    A.TexSymbolConfig_qCc = new B.TexSymbolConfig("\u03dd", false, null);
    A.TexSymbolConfig_E8g = new B.TexSymbolConfig("\u250c", false, null);
    A.TexSymbolConfig_dVO = new B.TexSymbolConfig("\u2510", false, null);
    A.TexSymbolConfig_jIX = new B.TexSymbolConfig("\u2514", false, null);
    A.TexSymbolConfig_PEQ = new B.TexSymbolConfig("\u2518", false, null);
    A.TexSymbolConfig_Blp = new B.TexSymbolConfig("\u2266", false, null);
    A.TexSymbolConfig_ThN = new B.TexSymbolConfig("\u2a7d", false, null);
    A.TexSymbolConfig_cIV = new B.TexSymbolConfig("\u2a95", false, null);
    A.TexSymbolConfig_KsT = new B.TexSymbolConfig("\u2272", false, null);
    A.TexSymbolConfig_51q = new B.TexSymbolConfig("\u2a85", false, null);
    A.TexSymbolConfig_wUO = new B.TexSymbolConfig("\u224a", false, null);
    A.TexSymbolConfig_N08 = new B.TexSymbolConfig("\u22d8", false, null);
    A.TexSymbolConfig_eUw = new B.TexSymbolConfig("\u2276", false, null);
    A.TexSymbolConfig_2QM = new B.TexSymbolConfig("\u22da", false, null);
    A.TexSymbolConfig_zzW = new B.TexSymbolConfig("\u2a8b", false, null);
    A.TexSymbolConfig_ENJ = new B.TexSymbolConfig("\u2253", false, null);
    A.TexSymbolConfig_UfM = new B.TexSymbolConfig("\u2252", false, null);
    A.TexSymbolConfig_Rh9 = new B.TexSymbolConfig("\u223d", false, null);
    A.TexSymbolConfig_WQc = new B.TexSymbolConfig("\u22cd", false, null);
    A.TexSymbolConfig_AFn = new B.TexSymbolConfig("\u2ac5", false, null);
    A.TexSymbolConfig_2lE = new B.TexSymbolConfig("\u22d0", false, null);
    A.TexSymbolConfig_aVu = new B.TexSymbolConfig("\u228f", false, null);
    A.TexSymbolConfig_Ufz = new B.TexSymbolConfig("\u227c", false, null);
    A.TexSymbolConfig_dey = new B.TexSymbolConfig("\u22de", false, null);
    A.TexSymbolConfig_ykG = new B.TexSymbolConfig("\u227e", false, null);
    A.TexSymbolConfig_oEp = new B.TexSymbolConfig("\u2ab7", false, null);
    A.TexSymbolConfig_yKn = new B.TexSymbolConfig("\u22a8", false, null);
    A.TexSymbolConfig_inG = new B.TexSymbolConfig("\u22aa", false, null);
    A.TexSymbolConfig_uza = new B.TexSymbolConfig("\u224f", false, null);
    A.TexSymbolConfig_CAN = new B.TexSymbolConfig("\u224e", false, null);
    A.TexSymbolConfig_33C = new B.TexSymbolConfig("\u2267", false, null);
    A.TexSymbolConfig_HOi = new B.TexSymbolConfig("\u2a7e", false, null);
    A.TexSymbolConfig_aze = new B.TexSymbolConfig("\u2a96", false, null);
    A.TexSymbolConfig_qIS = new B.TexSymbolConfig("\u2273", false, null);
    A.TexSymbolConfig_kxf = new B.TexSymbolConfig("\u2a86", false, null);
    A.TexSymbolConfig_ENE = new B.TexSymbolConfig("\u22d9", false, null);
    A.TexSymbolConfig_kXi = new B.TexSymbolConfig("\u2277", false, null);
    A.TexSymbolConfig_KnO = new B.TexSymbolConfig("\u22db", false, null);
    A.TexSymbolConfig_Vxp = new B.TexSymbolConfig("\u2a8c", false, null);
    A.TexSymbolConfig_X91 = new B.TexSymbolConfig("\u2256", false, null);
    A.TexSymbolConfig_sOO = new B.TexSymbolConfig("\u2257", false, null);
    A.TexSymbolConfig_F1w = new B.TexSymbolConfig("\u225c", false, null);
    A.TexSymbolConfig_yeL = new B.TexSymbolConfig("\u2ac6", false, null);
    A.TexSymbolConfig_mHP = new B.TexSymbolConfig("\u22d1", false, null);
    A.TexSymbolConfig_wAU = new B.TexSymbolConfig("\u2290", false, null);
    A.TexSymbolConfig_rJe = new B.TexSymbolConfig("\u227d", false, null);
    A.TexSymbolConfig_SeH = new B.TexSymbolConfig("\u22df", false, null);
    A.TexSymbolConfig_EDb = new B.TexSymbolConfig("\u227f", false, null);
    A.TexSymbolConfig_jAY = new B.TexSymbolConfig("\u2ab8", false, null);
    A.TexSymbolConfig_6SW = new B.TexSymbolConfig("\u22a9", false, null);
    A.TexSymbolConfig_rNB = new B.TexSymbolConfig("\u226c", false, null);
    A.TexSymbolConfig_0hz = new B.TexSymbolConfig("\u22d4", false, null);
    A.TexSymbolConfig_5Go = new B.TexSymbolConfig("\u2234", false, null);
    A.TexSymbolConfig_7pe = new B.TexSymbolConfig("\u2235", false, null);
    A.TexSymbolConfig_CGr = new B.TexSymbolConfig("\u2242", false, null);
    A.TexSymbolConfig_LDZ = new B.TexSymbolConfig("\u2251", false, null);
    A.TexSymbolConfig_evQ = new B.TexSymbolConfig("\u2214", false, null);
    A.TexSymbolConfig_9cG = new B.TexSymbolConfig("\u22d2", false, null);
    A.TexSymbolConfig_RT9 = new B.TexSymbolConfig("\u22d3", false, null);
    A.TexSymbolConfig_pWI = new B.TexSymbolConfig("\u2a5e", false, null);
    A.TexSymbolConfig_sL0 = new B.TexSymbolConfig("\u229f", false, null);
    A.TexSymbolConfig_DKB = new B.TexSymbolConfig("\u229e", false, null);
    A.TexSymbolConfig_N2Y = new B.TexSymbolConfig("\u22c7", false, null);
    A.TexSymbolConfig_MFT = new B.TexSymbolConfig("\u22c9", false, null);
    A.TexSymbolConfig_ktx = new B.TexSymbolConfig("\u22ca", false, null);
    A.TexSymbolConfig_n44 = new B.TexSymbolConfig("\u22cb", false, null);
    A.TexSymbolConfig_gnp = new B.TexSymbolConfig("\u22cc", false, null);
    A.TexSymbolConfig_l27 = new B.TexSymbolConfig("\u22cf", false, null);
    A.TexSymbolConfig_lDd = new B.TexSymbolConfig("\u22ce", false, null);
    A.TexSymbolConfig_UCq = new B.TexSymbolConfig("\u229d", false, null);
    A.TexSymbolConfig_Ejj = new B.TexSymbolConfig("\u229b", false, null);
    A.TexSymbolConfig_Q8n = new B.TexSymbolConfig("\u22ba", false, null);
    A.TexSymbolConfig_WRN = new B.TexSymbolConfig("\u22a0", false, null);
    A.TexSymbolConfig_HVQ = new B.TexSymbolConfig("\u21e2", false, null);
    A.TexSymbolConfig_gwv = new B.TexSymbolConfig("\u21e0", false, null);
    A.TexSymbolConfig_6h7 = new B.TexSymbolConfig("\u21c7", false, null);
    A.TexSymbolConfig_9MG = new B.TexSymbolConfig("\u21c6", false, null);
    A.TexSymbolConfig_5X4 = new B.TexSymbolConfig("\u21da", false, null);
    A.TexSymbolConfig_RWP = new B.TexSymbolConfig("\u219e", false, null);
    A.TexSymbolConfig_nM2 = new B.TexSymbolConfig("\u21a2", false, null);
    A.TexSymbolConfig_8OW = new B.TexSymbolConfig("\u21ab", false, null);
    A.TexSymbolConfig_kH8 = new B.TexSymbolConfig("\u21cb", false, null);
    A.TexSymbolConfig_DHP = new B.TexSymbolConfig("\u21b6", false, null);
    A.TexSymbolConfig_qS7 = new B.TexSymbolConfig("\u21ba", false, null);
    A.TexSymbolConfig_FmP = new B.TexSymbolConfig("\u21b0", false, null);
    A.TexSymbolConfig_b9H = new B.TexSymbolConfig("\u21c8", false, null);
    A.TexSymbolConfig_a2f = new B.TexSymbolConfig("\u21bf", false, null);
    A.TexSymbolConfig_t1F = new B.TexSymbolConfig("\u21c3", false, null);
    A.TexSymbolConfig_N9p = new B.TexSymbolConfig("\u22b8", false, null);
    A.TexSymbolConfig_5cN = new B.TexSymbolConfig("\u21ad", false, null);
    A.TexSymbolConfig_V1L = new B.TexSymbolConfig("\u21c9", false, null);
    A.TexSymbolConfig_1ly = new B.TexSymbolConfig("\u21c4", false, null);
    A.TexSymbolConfig_9lw = new B.TexSymbolConfig("\u21a0", false, null);
    A.TexSymbolConfig_H2S = new B.TexSymbolConfig("\u21a3", false, null);
    A.TexSymbolConfig_CW3 = new B.TexSymbolConfig("\u21ac", false, null);
    A.TexSymbolConfig_cVm = new B.TexSymbolConfig("\u21b7", false, null);
    A.TexSymbolConfig_Agz = new B.TexSymbolConfig("\u21bb", false, null);
    A.TexSymbolConfig_owZ = new B.TexSymbolConfig("\u21b1", false, null);
    A.TexSymbolConfig_SpI = new B.TexSymbolConfig("\u21ca", false, null);
    A.TexSymbolConfig_cOU = new B.TexSymbolConfig("\u21be", false, null);
    A.TexSymbolConfig_GTn = new B.TexSymbolConfig("\u21c2", false, null);
    A.TexSymbolConfig_Z5Q = new B.TexSymbolConfig("\u21dd", false, null);
    A.TexSymbolConfig_FNN = new B.TexSymbolConfig("\u21db", false, null);
    A.TexSymbolConfig_mVM = new B.TexSymbolConfig("`", false, null);
    A.TexSymbolConfig_Wuk = new B.TexSymbolConfig("\u2220", false, null);
    A.TexSymbolConfig_XQC = new B.TexSymbolConfig("\u221e", false, null);
    A.TexSymbolConfig_9N0 = new B.TexSymbolConfig("\u0393", false, null);
    A.TexSymbolConfig_PgS = new B.TexSymbolConfig("\u0394", false, null);
    A.TexSymbolConfig_ihK = new B.TexSymbolConfig("\u0398", false, null);
    A.TexSymbolConfig_rbG = new B.TexSymbolConfig("\u039b", false, null);
    A.TexSymbolConfig_su8 = new B.TexSymbolConfig("\u039e", false, null);
    A.TexSymbolConfig_83F = new B.TexSymbolConfig("\u03a0", false, null);
    A.TexSymbolConfig_bNJ = new B.TexSymbolConfig("\u03a3", false, null);
    A.TexSymbolConfig_VWa = new B.TexSymbolConfig("\u03a5", false, null);
    A.TexSymbolConfig_4VT = new B.TexSymbolConfig("\u03a6", false, null);
    A.TexSymbolConfig_qsx = new B.TexSymbolConfig("\u03a8", false, null);
    A.TexSymbolConfig_4ca = new B.TexSymbolConfig("\u03a9", false, null);
    A.TexSymbolConfig_1Zh = new B.TexSymbolConfig("\u0391", false, null);
    A.TexSymbolConfig_Eyc = new B.TexSymbolConfig("\u0392", false, null);
    A.TexSymbolConfig_ogt = new B.TexSymbolConfig("\u0395", false, null);
    A.TexSymbolConfig_du3 = new B.TexSymbolConfig("\u0396", false, null);
    A.TexSymbolConfig_s1V = new B.TexSymbolConfig("\u0397", false, null);
    A.TexSymbolConfig_jji = new B.TexSymbolConfig("\u0399", false, null);
    A.TexSymbolConfig_I9t = new B.TexSymbolConfig("\u039a", false, null);
    A.TexSymbolConfig_qgc = new B.TexSymbolConfig("\u039c", false, null);
    A.TexSymbolConfig_mTD = new B.TexSymbolConfig("\u039d", false, null);
    A.TexSymbolConfig_XO5 = new B.TexSymbolConfig("\u039f", false, null);
    A.TexSymbolConfig_g0L = new B.TexSymbolConfig("\u03a1", false, null);
    A.TexSymbolConfig_qJ1 = new B.TexSymbolConfig("\u03a4", false, null);
    A.TexSymbolConfig_K6f = new B.TexSymbolConfig("\u03a7", false, null);
    A.TexSymbolConfig_bMJ = new B.TexSymbolConfig("\xac", false, null);
    A.TexSymbolConfig_yRA = new B.TexSymbolConfig("\u03b1", false, null);
    A.TexSymbolConfig_icu = new B.TexSymbolConfig("\u03b2", false, null);
    A.TexSymbolConfig_APZ = new B.TexSymbolConfig("\u03b3", false, null);
    A.TexSymbolConfig_yzR = new B.TexSymbolConfig("\u03b4", false, null);
    A.TexSymbolConfig_mRX = new B.TexSymbolConfig("\u03f5", false, null);
    A.TexSymbolConfig_iP7 = new B.TexSymbolConfig("\u03b6", false, null);
    A.TexSymbolConfig_hmL = new B.TexSymbolConfig("\u03b7", false, null);
    A.TexSymbolConfig_l6Y = new B.TexSymbolConfig("\u03b8", false, null);
    A.TexSymbolConfig_7oH = new B.TexSymbolConfig("\u03b9", false, null);
    A.TexSymbolConfig_8HV = new B.TexSymbolConfig("\u03ba", false, null);
    A.TexSymbolConfig_aNY = new B.TexSymbolConfig("\u03bb", false, null);
    A.TexSymbolConfig_4Kk = new B.TexSymbolConfig("\u03bc", false, null);
    A.TexSymbolConfig_Ple = new B.TexSymbolConfig("\u03bd", false, null);
    A.TexSymbolConfig_wCA = new B.TexSymbolConfig("\u03be", false, null);
    A.TexSymbolConfig_dDd = new B.TexSymbolConfig("\u03bf", false, null);
    A.TexSymbolConfig_cne = new B.TexSymbolConfig("\u03c0", false, null);
    A.TexSymbolConfig_7Hd = new B.TexSymbolConfig("\u03c1", false, null);
    A.TexSymbolConfig_1pE = new B.TexSymbolConfig("\u03c3", false, null);
    A.TexSymbolConfig_97d = new B.TexSymbolConfig("\u03c4", false, null);
    A.TexSymbolConfig_S8G = new B.TexSymbolConfig("\u03c5", false, null);
    A.TexSymbolConfig_PWg = new B.TexSymbolConfig("\u03d5", false, null);
    A.TexSymbolConfig_B4y = new B.TexSymbolConfig("\u03c7", false, null);
    A.TexSymbolConfig_KWO = new B.TexSymbolConfig("\u03c8", false, null);
    A.TexSymbolConfig_H9O = new B.TexSymbolConfig("\u03c9", false, null);
    A.TexSymbolConfig_86o = new B.TexSymbolConfig("\u03b5", false, null);
    A.TexSymbolConfig_kf5 = new B.TexSymbolConfig("\u03d1", false, null);
    A.TexSymbolConfig_6Ao = new B.TexSymbolConfig("\u03d6", false, null);
    A.TexSymbolConfig_IWq = new B.TexSymbolConfig("\u03f1", false, null);
    A.TexSymbolConfig_TWI = new B.TexSymbolConfig("\u03c2", false, null);
    A.TexSymbolConfig_G2f = new B.TexSymbolConfig("\u03c6", false, null);
    A.TexSymbolConfig_LvD = new B.TexSymbolConfig("*", false, null);
    A.TexSymbolConfig_bvq = new B.TexSymbolConfig("+", false, null);
    A.TexSymbolConfig_yCb = new B.TexSymbolConfig("-", false, null);
    A.TexSymbolConfig_Bi9 = new B.TexSymbolConfig("\u22c5", false, null);
    A.TexSymbolConfig_ase = new B.TexSymbolConfig("\xf7", false, null);
    A.TexSymbolConfig_wxy = new B.TexSymbolConfig("\xb1", false, null);
    A.TexSymbolConfig_RVm = new B.TexSymbolConfig("\xd7", false, null);
    A.TexSymbolConfig_uxV = new B.TexSymbolConfig("\u2229", false, null);
    A.TexSymbolConfig_p4M = new B.TexSymbolConfig("\u222a", false, null);
    A.TexSymbolConfig_RWj = new B.TexSymbolConfig("\u2227", false, null);
    A.TexSymbolConfig_VdW = new B.TexSymbolConfig("\u2228", false, null);
    A.TexSymbolConfig_fwE = new B.TexSymbolConfig("(", false, null);
    A.TexSymbolConfig_lE0 = new B.TexSymbolConfig("[", false, null);
    A.TexSymbolConfig_ie6 = new B.TexSymbolConfig("\u27e8", false, null);
    A.TexSymbolConfig_kwy = new B.TexSymbolConfig(")", false, null);
    A.TexSymbolConfig_AUm = new B.TexSymbolConfig("]", false, null);
    A.TexSymbolConfig_QWQ = new B.TexSymbolConfig("?", false, null);
    A.TexSymbolConfig_dI7 = new B.TexSymbolConfig("!", false, null);
    A.TexSymbolConfig_AIj = new B.TexSymbolConfig("\u27e9", false, null);
    A.TexSymbolConfig_lbA = new B.TexSymbolConfig("=", false, null);
    A.TexSymbolConfig_1Yd = new B.TexSymbolConfig("<", false, null);
    A.TexSymbolConfig_ztQ = new B.TexSymbolConfig(">", false, null);
    A.TexSymbolConfig_dAE = new B.TexSymbolConfig(":", false, null);
    A.TexSymbolConfig_bV5 = new B.TexSymbolConfig("\u2248", false, null);
    A.TexSymbolConfig_m92 = new B.TexSymbolConfig("\u2245", false, null);
    A.TexSymbolConfig_W3f = new B.TexSymbolConfig("\u2265", false, null);
    A.TexSymbolConfig_Yj0 = new B.TexSymbolConfig("\u2208", false, null);
    A.TexSymbolConfig_bo9 = new B.TexSymbolConfig("\u2282", false, null);
    A.TexSymbolConfig_Vkt = new B.TexSymbolConfig("\u2283", false, null);
    A.TexSymbolConfig_CTy = new B.TexSymbolConfig("\u2286", false, null);
    A.TexSymbolConfig_MHN = new B.TexSymbolConfig("\u2287", false, null);
    A.TexSymbolConfig_ZnX = new B.TexSymbolConfig("\u2288", false, null);
    A.TexSymbolConfig_sxS = new B.TexSymbolConfig("\u2289", false, null);
    A.TexSymbolConfig_WCC = new B.TexSymbolConfig("\u2190", false, null);
    A.TexSymbolConfig_wcx = new B.TexSymbolConfig("\u2264", false, null);
    A.TexSymbolConfig_uyv = new B.TexSymbolConfig("\u2192", false, null);
    A.TexSymbolConfig_I5t = new B.TexSymbolConfig("\u2271", false, null);
    A.TexSymbolConfig_QjH = new B.TexSymbolConfig("\u2270", false, null);
    A.TexSymbolConfig_uxw = new B.TexSymbolConfig(",", false, null);
    A.TexSymbolConfig_njr = new B.TexSymbolConfig(";", false, null);
    A.TexSymbolConfig_q6t = new B.TexSymbolConfig("\u22bc", false, null);
    A.TexSymbolConfig_1Dq = new B.TexSymbolConfig("\u22bb", false, null);
    A.TexSymbolConfig_jCK = new B.TexSymbolConfig("\u2299", false, null);
    A.TexSymbolConfig_o58 = new B.TexSymbolConfig("\u2295", false, null);
    A.TexSymbolConfig_vgd = new B.TexSymbolConfig("\u2297", false, null);
    A.TexSymbolConfig_0Ma = new B.TexSymbolConfig("\u2202", false, null);
    A.TexSymbolConfig_ssk = new B.TexSymbolConfig("\u2298", false, null);
    A.TexSymbolConfig_Yas = new B.TexSymbolConfig("\u229a", false, null);
    A.TexSymbolConfig_rXF = new B.TexSymbolConfig("\u22a1", false, null);
    A.TexSymbolConfig_yGr = new B.TexSymbolConfig("\u230a", false, null);
    A.TexSymbolConfig_a86 = new B.TexSymbolConfig("\u230b", false, null);
    A.TexSymbolConfig_zEn = new B.TexSymbolConfig("\u2308", false, null);
    A.TexSymbolConfig_lqa = new B.TexSymbolConfig("\u2309", false, null);
    A.TexSymbolConfig_OJs = new B.TexSymbolConfig("|", false, null);
    A.TexSymbolConfig_myC = new B.TexSymbolConfig("\u2191", false, null);
    A.TexSymbolConfig_6w8 = new B.TexSymbolConfig("\u21d1", false, null);
    A.TexSymbolConfig_hRK = new B.TexSymbolConfig("\u2193", false, null);
    A.TexSymbolConfig_wZD = new B.TexSymbolConfig("\u21d3", false, null);
    A.TexSymbolConfig_D0C = new B.TexSymbolConfig("\u2195", false, null);
    A.TexSymbolConfig_0YU = new B.TexSymbolConfig("\u21d5", false, null);
    A.TexSymbolConfig_1e8 = new B.TexSymbolConfig("\u2026", false, null);
    A.TexSymbolConfig_wat = new B.TexSymbolConfig("\u22ef", false, null);
    A.TexSymbolConfig_Q2z = new B.TexSymbolConfig("\u22f1", false, null);
    A.TexSymbolConfig_Ewq = new B.TexSymbolConfig("\u0131", false, null);
    A.TexSymbolConfig_eup = new B.TexSymbolConfig("\u0237", false, null);
    A.TexSymbolConfig_G3M = new B.TexSymbolConfig("\xb0", false, null);
    A.TexSymbolConfig_ovp = new B.TexSymbolConfig("\xa3", false, null);
    A.TexSymbolConfig_G90 = new B.TexSymbolConfig("/", false, null);
    A.TexSymbolConfig_Coz = new B.TexSymbolConfig("@", false, null);
    A.TexSymbolConfig_IzI = new B.TexSymbolConfig(".", false, null);
    A.TexSymbolConfig_OFB = new B.TexSymbolConfig('"', false, null);
    A.TexSymbolConfig_A_false_null = new B.TexSymbolConfig("A", false, null);
    A.TexSymbolConfig_B_false_null = new B.TexSymbolConfig("B", false, null);
    A.TexSymbolConfig_C_false_null = new B.TexSymbolConfig("C", false, null);
    A.TexSymbolConfig_D_false_null = new B.TexSymbolConfig("D", false, null);
    A.TexSymbolConfig_E_false_null = new B.TexSymbolConfig("E", false, null);
    A.TexSymbolConfig_F_false_null = new B.TexSymbolConfig("F", false, null);
    A.TexSymbolConfig_G_false_null = new B.TexSymbolConfig("G", false, null);
    A.TexSymbolConfig_H_false_null = new B.TexSymbolConfig("H", false, null);
    A.TexSymbolConfig_I_false_null = new B.TexSymbolConfig("I", false, null);
    A.TexSymbolConfig_J_false_null = new B.TexSymbolConfig("J", false, null);
    A.TexSymbolConfig_K_false_null = new B.TexSymbolConfig("K", false, null);
    A.TexSymbolConfig_L_false_null = new B.TexSymbolConfig("L", false, null);
    A.TexSymbolConfig_M_false_null = new B.TexSymbolConfig("M", false, null);
    A.TexSymbolConfig_N_false_null = new B.TexSymbolConfig("N", false, null);
    A.TexSymbolConfig_O_false_null = new B.TexSymbolConfig("O", false, null);
    A.TexSymbolConfig_P_false_null = new B.TexSymbolConfig("P", false, null);
    A.TexSymbolConfig_Q_false_null = new B.TexSymbolConfig("Q", false, null);
    A.TexSymbolConfig_R_false_null = new B.TexSymbolConfig("R", false, null);
    A.TexSymbolConfig_S_false_null = new B.TexSymbolConfig("S", false, null);
    A.TexSymbolConfig_T_false_null = new B.TexSymbolConfig("T", false, null);
    A.TexSymbolConfig_U_false_null = new B.TexSymbolConfig("U", false, null);
    A.TexSymbolConfig_V_false_null = new B.TexSymbolConfig("V", false, null);
    A.TexSymbolConfig_W_false_null = new B.TexSymbolConfig("W", false, null);
    A.TexSymbolConfig_X_false_null = new B.TexSymbolConfig("X", false, null);
    A.TexSymbolConfig_Y_false_null = new B.TexSymbolConfig("Y", false, null);
    A.TexSymbolConfig_Z_false_null = new B.TexSymbolConfig("Z", false, null);
    A.TexSymbolConfig_a_false_null = new B.TexSymbolConfig("a", false, null);
    A.TexSymbolConfig_b_false_null = new B.TexSymbolConfig("b", false, null);
    A.TexSymbolConfig_c_false_null = new B.TexSymbolConfig("c", false, null);
    A.TexSymbolConfig_d_false_null = new B.TexSymbolConfig("d", false, null);
    A.TexSymbolConfig_e_false_null = new B.TexSymbolConfig("e", false, null);
    A.TexSymbolConfig_f_false_null = new B.TexSymbolConfig("f", false, null);
    A.TexSymbolConfig_g_false_null = new B.TexSymbolConfig("g", false, null);
    A.TexSymbolConfig_h_false_null = new B.TexSymbolConfig("h", false, null);
    A.TexSymbolConfig_i_false_null = new B.TexSymbolConfig("i", false, null);
    A.TexSymbolConfig_j_false_null = new B.TexSymbolConfig("j", false, null);
    A.TexSymbolConfig_k_false_null = new B.TexSymbolConfig("k", false, null);
    A.TexSymbolConfig_l_false_null = new B.TexSymbolConfig("l", false, null);
    A.TexSymbolConfig_m_false_null = new B.TexSymbolConfig("m", false, null);
    A.TexSymbolConfig_n_false_null = new B.TexSymbolConfig("n", false, null);
    A.TexSymbolConfig_o_false_null = new B.TexSymbolConfig("o", false, null);
    A.TexSymbolConfig_p_false_null = new B.TexSymbolConfig("p", false, null);
    A.TexSymbolConfig_q_false_null = new B.TexSymbolConfig("q", false, null);
    A.TexSymbolConfig_r_false_null = new B.TexSymbolConfig("r", false, null);
    A.TexSymbolConfig_s_false_null = new B.TexSymbolConfig("s", false, null);
    A.TexSymbolConfig_t_false_null = new B.TexSymbolConfig("t", false, null);
    A.TexSymbolConfig_u_false_null = new B.TexSymbolConfig("u", false, null);
    A.TexSymbolConfig_v_false_null = new B.TexSymbolConfig("v", false, null);
    A.TexSymbolConfig_w_false_null = new B.TexSymbolConfig("w", false, null);
    A.TexSymbolConfig_x_false_null = new B.TexSymbolConfig("x", false, null);
    A.TexSymbolConfig_y_false_null = new B.TexSymbolConfig("y", false, null);
    A.TexSymbolConfig_z_false_null = new B.TexSymbolConfig("z", false, null);
    A.TexSymbolConfig_XRQ = new B.TexSymbolConfig("\u2102", false, null);
    A.TexSymbolConfig_SJh = new B.TexSymbolConfig("\u210d", false, null);
    A.TexSymbolConfig_ukc = new B.TexSymbolConfig("\u2115", false, null);
    A.TexSymbolConfig_D32 = new B.TexSymbolConfig("\u2119", false, null);
    A.TexSymbolConfig_BvH = new B.TexSymbolConfig("\u211a", false, null);
    A.TexSymbolConfig_0Bc = new B.TexSymbolConfig("\u211d", false, null);
    A.TexSymbolConfig_AKG = new B.TexSymbolConfig("\u2124", false, null);
    A.TexSymbolConfig_BIG = new B.TexSymbolConfig("\u210e", false, null);
    A.TexSymbolConfig_npA = new B.TexSymbolConfig("\ud835\udc00", false, null);
    A.TexSymbolConfig_ixl = new B.TexSymbolConfig("\ud835\udc34", false, null);
    A.TexSymbolConfig_kon = new B.TexSymbolConfig("\ud835\udc68", false, null);
    A.TexSymbolConfig_LJ1 = new B.TexSymbolConfig("\ud835\udd04", false, null);
    A.TexSymbolConfig_un4 = new B.TexSymbolConfig("\ud835\udda0", false, null);
    A.TexSymbolConfig_I3d = new B.TexSymbolConfig("\ud835\uddd4", false, null);
    A.TexSymbolConfig_DH8 = new B.TexSymbolConfig("\ud835\ude08", false, null);
    A.TexSymbolConfig_IaC = new B.TexSymbolConfig("\ud835\ude70", false, null);
    A.TexSymbolConfig_DOk = new B.TexSymbolConfig("\ud835\udd38", false, null);
    A.TexSymbolConfig_3zX = new B.TexSymbolConfig("\ud835\udc9c", false, null);
    A.TexSymbolConfig_8fY = new B.TexSymbolConfig("\ud835\udc01", false, null);
    A.TexSymbolConfig_uu3 = new B.TexSymbolConfig("\ud835\udc35", false, null);
    A.TexSymbolConfig_1RG = new B.TexSymbolConfig("\ud835\udc69", false, null);
    A.TexSymbolConfig_8Jk = new B.TexSymbolConfig("\ud835\udd05", false, null);
    A.TexSymbolConfig_jF2 = new B.TexSymbolConfig("\ud835\udda1", false, null);
    A.TexSymbolConfig_8jC = new B.TexSymbolConfig("\ud835\uddd5", false, null);
    A.TexSymbolConfig_rGE = new B.TexSymbolConfig("\ud835\ude09", false, null);
    A.TexSymbolConfig_tDo = new B.TexSymbolConfig("\ud835\ude71", false, null);
    A.TexSymbolConfig_tLg = new B.TexSymbolConfig("\ud835\udd39", false, null);
    A.TexSymbolConfig_Zb4 = new B.TexSymbolConfig("\ud835\udc9d", false, null);
    A.TexSymbolConfig_DIi = new B.TexSymbolConfig("\ud835\udc02", false, null);
    A.TexSymbolConfig_S14 = new B.TexSymbolConfig("\ud835\udc36", false, null);
    A.TexSymbolConfig_zVj = new B.TexSymbolConfig("\ud835\udc6a", false, null);
    A.TexSymbolConfig_ldr = new B.TexSymbolConfig("\ud835\udd06", false, null);
    A.TexSymbolConfig_43i = new B.TexSymbolConfig("\ud835\udda2", false, null);
    A.TexSymbolConfig_p15 = new B.TexSymbolConfig("\ud835\uddd6", false, null);
    A.TexSymbolConfig_HGM = new B.TexSymbolConfig("\ud835\ude0a", false, null);
    A.TexSymbolConfig_LrS = new B.TexSymbolConfig("\ud835\ude72", false, null);
    A.TexSymbolConfig_5Gq = new B.TexSymbolConfig("\ud835\udd3a", false, null);
    A.TexSymbolConfig_ZSe = new B.TexSymbolConfig("\ud835\udc9e", false, null);
    A.TexSymbolConfig_LoS = new B.TexSymbolConfig("\ud835\udc03", false, null);
    A.TexSymbolConfig_6WB = new B.TexSymbolConfig("\ud835\udc37", false, null);
    A.TexSymbolConfig_N6G = new B.TexSymbolConfig("\ud835\udc6b", false, null);
    A.TexSymbolConfig_Dza = new B.TexSymbolConfig("\ud835\udd07", false, null);
    A.TexSymbolConfig_amc = new B.TexSymbolConfig("\ud835\udda3", false, null);
    A.TexSymbolConfig_rV0 = new B.TexSymbolConfig("\ud835\uddd7", false, null);
    A.TexSymbolConfig_fG6 = new B.TexSymbolConfig("\ud835\ude0b", false, null);
    A.TexSymbolConfig_rQF = new B.TexSymbolConfig("\ud835\ude73", false, null);
    A.TexSymbolConfig_v2Z = new B.TexSymbolConfig("\ud835\udd3b", false, null);
    A.TexSymbolConfig_MDq = new B.TexSymbolConfig("\ud835\udc9f", false, null);
    A.TexSymbolConfig_qT4 = new B.TexSymbolConfig("\ud835\udc04", false, null);
    A.TexSymbolConfig_Xt2 = new B.TexSymbolConfig("\ud835\udc38", false, null);
    A.TexSymbolConfig_In5 = new B.TexSymbolConfig("\ud835\udc6c", false, null);
    A.TexSymbolConfig_Vid = new B.TexSymbolConfig("\ud835\udd08", false, null);
    A.TexSymbolConfig_17F = new B.TexSymbolConfig("\ud835\udda4", false, null);
    A.TexSymbolConfig_3TT = new B.TexSymbolConfig("\ud835\uddd8", false, null);
    A.TexSymbolConfig_SxH = new B.TexSymbolConfig("\ud835\ude0c", false, null);
    A.TexSymbolConfig_utH = new B.TexSymbolConfig("\ud835\ude74", false, null);
    A.TexSymbolConfig_H8e = new B.TexSymbolConfig("\ud835\udd3c", false, null);
    A.TexSymbolConfig_E6q = new B.TexSymbolConfig("\ud835\udca0", false, null);
    A.TexSymbolConfig_mHs = new B.TexSymbolConfig("\ud835\udc05", false, null);
    A.TexSymbolConfig_xsj = new B.TexSymbolConfig("\ud835\udc39", false, null);
    A.TexSymbolConfig_fQm = new B.TexSymbolConfig("\ud835\udc6d", false, null);
    A.TexSymbolConfig_llg = new B.TexSymbolConfig("\ud835\udd09", false, null);
    A.TexSymbolConfig_DLM = new B.TexSymbolConfig("\ud835\udda5", false, null);
    A.TexSymbolConfig_VfA = new B.TexSymbolConfig("\ud835\uddd9", false, null);
    A.TexSymbolConfig_rbS = new B.TexSymbolConfig("\ud835\ude0d", false, null);
    A.TexSymbolConfig_LrN = new B.TexSymbolConfig("\ud835\ude75", false, null);
    A.TexSymbolConfig_SSu = new B.TexSymbolConfig("\ud835\udd3d", false, null);
    A.TexSymbolConfig_eVj = new B.TexSymbolConfig("\ud835\udca1", false, null);
    A.TexSymbolConfig_zHn = new B.TexSymbolConfig("\ud835\udc06", false, null);
    A.TexSymbolConfig_5pU = new B.TexSymbolConfig("\ud835\udc3a", false, null);
    A.TexSymbolConfig_kRu = new B.TexSymbolConfig("\ud835\udc6e", false, null);
    A.TexSymbolConfig_25b = new B.TexSymbolConfig("\ud835\udd0a", false, null);
    A.TexSymbolConfig_xaj = new B.TexSymbolConfig("\ud835\udda6", false, null);
    A.TexSymbolConfig_7BP = new B.TexSymbolConfig("\ud835\uddda", false, null);
    A.TexSymbolConfig_CL4 = new B.TexSymbolConfig("\ud835\ude0e", false, null);
    A.TexSymbolConfig_bdG = new B.TexSymbolConfig("\ud835\ude76", false, null);
    A.TexSymbolConfig_r1p = new B.TexSymbolConfig("\ud835\udd3e", false, null);
    A.TexSymbolConfig_mee = new B.TexSymbolConfig("\ud835\udca2", false, null);
    A.TexSymbolConfig_PqG = new B.TexSymbolConfig("\ud835\udc07", false, null);
    A.TexSymbolConfig_yhR = new B.TexSymbolConfig("\ud835\udc3b", false, null);
    A.TexSymbolConfig_O07 = new B.TexSymbolConfig("\ud835\udc6f", false, null);
    A.TexSymbolConfig_BKa = new B.TexSymbolConfig("\ud835\udd0b", false, null);
    A.TexSymbolConfig_UuM = new B.TexSymbolConfig("\ud835\udda7", false, null);
    A.TexSymbolConfig_mqF = new B.TexSymbolConfig("\ud835\udddb", false, null);
    A.TexSymbolConfig_1xU = new B.TexSymbolConfig("\ud835\ude0f", false, null);
    A.TexSymbolConfig_Uhz = new B.TexSymbolConfig("\ud835\ude77", false, null);
    A.TexSymbolConfig_fWu = new B.TexSymbolConfig("\ud835\udd3f", false, null);
    A.TexSymbolConfig_7ix = new B.TexSymbolConfig("\ud835\udca3", false, null);
    A.TexSymbolConfig_xsO = new B.TexSymbolConfig("\ud835\udc08", false, null);
    A.TexSymbolConfig_5Xn = new B.TexSymbolConfig("\ud835\udc3c", false, null);
    A.TexSymbolConfig_pru = new B.TexSymbolConfig("\ud835\udc70", false, null);
    A.TexSymbolConfig_Mdw = new B.TexSymbolConfig("\ud835\udd0c", false, null);
    A.TexSymbolConfig_BvD = new B.TexSymbolConfig("\ud835\udda8", false, null);
    A.TexSymbolConfig_giH = new B.TexSymbolConfig("\ud835\udddc", false, null);
    A.TexSymbolConfig_2rv = new B.TexSymbolConfig("\ud835\ude10", false, null);
    A.TexSymbolConfig_S1J = new B.TexSymbolConfig("\ud835\ude78", false, null);
    A.TexSymbolConfig_BuK = new B.TexSymbolConfig("\ud835\udd40", false, null);
    A.TexSymbolConfig_hXI = new B.TexSymbolConfig("\ud835\udca4", false, null);
    A.TexSymbolConfig_6XT = new B.TexSymbolConfig("\ud835\udc09", false, null);
    A.TexSymbolConfig_ahO = new B.TexSymbolConfig("\ud835\udc3d", false, null);
    A.TexSymbolConfig_4ge = new B.TexSymbolConfig("\ud835\udc71", false, null);
    A.TexSymbolConfig_cna = new B.TexSymbolConfig("\ud835\udd0d", false, null);
    A.TexSymbolConfig_hgs = new B.TexSymbolConfig("\ud835\udda9", false, null);
    A.TexSymbolConfig_U0u = new B.TexSymbolConfig("\ud835\udddd", false, null);
    A.TexSymbolConfig_PYo = new B.TexSymbolConfig("\ud835\ude11", false, null);
    A.TexSymbolConfig_usb = new B.TexSymbolConfig("\ud835\ude79", false, null);
    A.TexSymbolConfig_P8l = new B.TexSymbolConfig("\ud835\udd41", false, null);
    A.TexSymbolConfig_Gjv = new B.TexSymbolConfig("\ud835\udca5", false, null);
    A.TexSymbolConfig_3YP = new B.TexSymbolConfig("\ud835\udc0a", false, null);
    A.TexSymbolConfig_OdH = new B.TexSymbolConfig("\ud835\udc3e", false, null);
    A.TexSymbolConfig_uOB = new B.TexSymbolConfig("\ud835\udc72", false, null);
    A.TexSymbolConfig_kT1 = new B.TexSymbolConfig("\ud835\udd0e", false, null);
    A.TexSymbolConfig_Cvq = new B.TexSymbolConfig("\ud835\uddaa", false, null);
    A.TexSymbolConfig_ykE = new B.TexSymbolConfig("\ud835\uddde", false, null);
    A.TexSymbolConfig_Dhd = new B.TexSymbolConfig("\ud835\ude12", false, null);
    A.TexSymbolConfig_TQG = new B.TexSymbolConfig("\ud835\ude7a", false, null);
    A.TexSymbolConfig_eeV = new B.TexSymbolConfig("\ud835\udd42", false, null);
    A.TexSymbolConfig_w23 = new B.TexSymbolConfig("\ud835\udca6", false, null);
    A.TexSymbolConfig_JDM = new B.TexSymbolConfig("\ud835\udc0b", false, null);
    A.TexSymbolConfig_SDu = new B.TexSymbolConfig("\ud835\udc3f", false, null);
    A.TexSymbolConfig_4jj = new B.TexSymbolConfig("\ud835\udc73", false, null);
    A.TexSymbolConfig_Uuq = new B.TexSymbolConfig("\ud835\udd0f", false, null);
    A.TexSymbolConfig_azh = new B.TexSymbolConfig("\ud835\uddab", false, null);
    A.TexSymbolConfig_Ger = new B.TexSymbolConfig("\ud835\udddf", false, null);
    A.TexSymbolConfig_FCw = new B.TexSymbolConfig("\ud835\ude13", false, null);
    A.TexSymbolConfig_dAd = new B.TexSymbolConfig("\ud835\ude7b", false, null);
    A.TexSymbolConfig_6ys = new B.TexSymbolConfig("\ud835\udd43", false, null);
    A.TexSymbolConfig_VY6 = new B.TexSymbolConfig("\ud835\udca7", false, null);
    A.TexSymbolConfig_n8Q = new B.TexSymbolConfig("\ud835\udc0c", false, null);
    A.TexSymbolConfig_Z5T = new B.TexSymbolConfig("\ud835\udc40", false, null);
    A.TexSymbolConfig_tcX = new B.TexSymbolConfig("\ud835\udc74", false, null);
    A.TexSymbolConfig_9Pd = new B.TexSymbolConfig("\ud835\udd10", false, null);
    A.TexSymbolConfig_7qW = new B.TexSymbolConfig("\ud835\uddac", false, null);
    A.TexSymbolConfig_4ck = new B.TexSymbolConfig("\ud835\udde0", false, null);
    A.TexSymbolConfig_48P = new B.TexSymbolConfig("\ud835\ude14", false, null);
    A.TexSymbolConfig_i2R = new B.TexSymbolConfig("\ud835\ude7c", false, null);
    A.TexSymbolConfig_9Lz = new B.TexSymbolConfig("\ud835\udd44", false, null);
    A.TexSymbolConfig_8Tu = new B.TexSymbolConfig("\ud835\udca8", false, null);
    A.TexSymbolConfig_gmn = new B.TexSymbolConfig("\ud835\udc0d", false, null);
    A.TexSymbolConfig_TCP = new B.TexSymbolConfig("\ud835\udc41", false, null);
    A.TexSymbolConfig_Bak = new B.TexSymbolConfig("\ud835\udc75", false, null);
    A.TexSymbolConfig_qfz = new B.TexSymbolConfig("\ud835\udd11", false, null);
    A.TexSymbolConfig_4kI = new B.TexSymbolConfig("\ud835\uddad", false, null);
    A.TexSymbolConfig_gX3 = new B.TexSymbolConfig("\ud835\udde1", false, null);
    A.TexSymbolConfig_dVk = new B.TexSymbolConfig("\ud835\ude15", false, null);
    A.TexSymbolConfig_6Qc = new B.TexSymbolConfig("\ud835\ude7d", false, null);
    A.TexSymbolConfig_cpd = new B.TexSymbolConfig("\ud835\udd45", false, null);
    A.TexSymbolConfig_2NA = new B.TexSymbolConfig("\ud835\udca9", false, null);
    A.TexSymbolConfig_oUS = new B.TexSymbolConfig("\ud835\udc0e", false, null);
    A.TexSymbolConfig_trO = new B.TexSymbolConfig("\ud835\udc42", false, null);
    A.TexSymbolConfig_mP9 = new B.TexSymbolConfig("\ud835\udc76", false, null);
    A.TexSymbolConfig_njn = new B.TexSymbolConfig("\ud835\udd12", false, null);
    A.TexSymbolConfig_fHV = new B.TexSymbolConfig("\ud835\uddae", false, null);
    A.TexSymbolConfig_4Hj = new B.TexSymbolConfig("\ud835\udde2", false, null);
    A.TexSymbolConfig_D10 = new B.TexSymbolConfig("\ud835\ude16", false, null);
    A.TexSymbolConfig_mQ7 = new B.TexSymbolConfig("\ud835\ude7e", false, null);
    A.TexSymbolConfig_RBr = new B.TexSymbolConfig("\ud835\udd46", false, null);
    A.TexSymbolConfig_xMh = new B.TexSymbolConfig("\ud835\udcaa", false, null);
    A.TexSymbolConfig_fnH = new B.TexSymbolConfig("\ud835\udc0f", false, null);
    A.TexSymbolConfig_t7z = new B.TexSymbolConfig("\ud835\udc43", false, null);
    A.TexSymbolConfig_9zk = new B.TexSymbolConfig("\ud835\udc77", false, null);
    A.TexSymbolConfig_XPe = new B.TexSymbolConfig("\ud835\udd13", false, null);
    A.TexSymbolConfig_hLH = new B.TexSymbolConfig("\ud835\uddaf", false, null);
    A.TexSymbolConfig_XzX = new B.TexSymbolConfig("\ud835\udde3", false, null);
    A.TexSymbolConfig_okO = new B.TexSymbolConfig("\ud835\ude17", false, null);
    A.TexSymbolConfig_ibN = new B.TexSymbolConfig("\ud835\ude7f", false, null);
    A.TexSymbolConfig_8kL = new B.TexSymbolConfig("\ud835\udd47", false, null);
    A.TexSymbolConfig_vkz = new B.TexSymbolConfig("\ud835\udcab", false, null);
    A.TexSymbolConfig_yYW = new B.TexSymbolConfig("\ud835\udc10", false, null);
    A.TexSymbolConfig_MsQ = new B.TexSymbolConfig("\ud835\udc44", false, null);
    A.TexSymbolConfig_RVG = new B.TexSymbolConfig("\ud835\udc78", false, null);
    A.TexSymbolConfig_9DA = new B.TexSymbolConfig("\ud835\udd14", false, null);
    A.TexSymbolConfig_jq6 = new B.TexSymbolConfig("\ud835\uddb0", false, null);
    A.TexSymbolConfig_qP7 = new B.TexSymbolConfig("\ud835\udde4", false, null);
    A.TexSymbolConfig_nCA = new B.TexSymbolConfig("\ud835\ude18", false, null);
    A.TexSymbolConfig_5vn = new B.TexSymbolConfig("\ud835\ude80", false, null);
    A.TexSymbolConfig_hcW = new B.TexSymbolConfig("\ud835\udd48", false, null);
    A.TexSymbolConfig_MGX = new B.TexSymbolConfig("\ud835\udcac", false, null);
    A.TexSymbolConfig_bIz = new B.TexSymbolConfig("\ud835\udc11", false, null);
    A.TexSymbolConfig_cPR = new B.TexSymbolConfig("\ud835\udc45", false, null);
    A.TexSymbolConfig_tbX = new B.TexSymbolConfig("\ud835\udc79", false, null);
    A.TexSymbolConfig_t9l = new B.TexSymbolConfig("\ud835\udd15", false, null);
    A.TexSymbolConfig_L4M = new B.TexSymbolConfig("\ud835\uddb1", false, null);
    A.TexSymbolConfig_n9t = new B.TexSymbolConfig("\ud835\udde5", false, null);
    A.TexSymbolConfig_FiX = new B.TexSymbolConfig("\ud835\ude19", false, null);
    A.TexSymbolConfig_CAS = new B.TexSymbolConfig("\ud835\ude81", false, null);
    A.TexSymbolConfig_dsF = new B.TexSymbolConfig("\ud835\udd49", false, null);
    A.TexSymbolConfig_SKe = new B.TexSymbolConfig("\ud835\udcad", false, null);
    A.TexSymbolConfig_7DQ = new B.TexSymbolConfig("\ud835\udc12", false, null);
    A.TexSymbolConfig_QtG = new B.TexSymbolConfig("\ud835\udc46", false, null);
    A.TexSymbolConfig_MHm = new B.TexSymbolConfig("\ud835\udc7a", false, null);
    A.TexSymbolConfig_f6t = new B.TexSymbolConfig("\ud835\udd16", false, null);
    A.TexSymbolConfig_J8t = new B.TexSymbolConfig("\ud835\uddb2", false, null);
    A.TexSymbolConfig_RRK = new B.TexSymbolConfig("\ud835\udde6", false, null);
    A.TexSymbolConfig_Vvs = new B.TexSymbolConfig("\ud835\ude1a", false, null);
    A.TexSymbolConfig_dhT = new B.TexSymbolConfig("\ud835\ude82", false, null);
    A.TexSymbolConfig_VQL = new B.TexSymbolConfig("\ud835\udd4a", false, null);
    A.TexSymbolConfig_SC5 = new B.TexSymbolConfig("\ud835\udcae", false, null);
    A.TexSymbolConfig_DTs = new B.TexSymbolConfig("\ud835\udc13", false, null);
    A.TexSymbolConfig_UZb = new B.TexSymbolConfig("\ud835\udc47", false, null);
    A.TexSymbolConfig_2Sd = new B.TexSymbolConfig("\ud835\udc7b", false, null);
    A.TexSymbolConfig_OH5 = new B.TexSymbolConfig("\ud835\udd17", false, null);
    A.TexSymbolConfig_6ql = new B.TexSymbolConfig("\ud835\uddb3", false, null);
    A.TexSymbolConfig_GPg = new B.TexSymbolConfig("\ud835\udde7", false, null);
    A.TexSymbolConfig_R1J = new B.TexSymbolConfig("\ud835\ude1b", false, null);
    A.TexSymbolConfig_dqr = new B.TexSymbolConfig("\ud835\ude83", false, null);
    A.TexSymbolConfig_pyS = new B.TexSymbolConfig("\ud835\udd4b", false, null);
    A.TexSymbolConfig_cOy = new B.TexSymbolConfig("\ud835\udcaf", false, null);
    A.TexSymbolConfig_Et6 = new B.TexSymbolConfig("\ud835\udc14", false, null);
    A.TexSymbolConfig_kEr = new B.TexSymbolConfig("\ud835\udc48", false, null);
    A.TexSymbolConfig_5Pu = new B.TexSymbolConfig("\ud835\udc7c", false, null);
    A.TexSymbolConfig_kmp = new B.TexSymbolConfig("\ud835\udd18", false, null);
    A.TexSymbolConfig_2pM = new B.TexSymbolConfig("\ud835\uddb4", false, null);
    A.TexSymbolConfig_htn = new B.TexSymbolConfig("\ud835\udde8", false, null);
    A.TexSymbolConfig_KJU = new B.TexSymbolConfig("\ud835\ude1c", false, null);
    A.TexSymbolConfig_N4X = new B.TexSymbolConfig("\ud835\ude84", false, null);
    A.TexSymbolConfig_8zq = new B.TexSymbolConfig("\ud835\udd4c", false, null);
    A.TexSymbolConfig_xhi = new B.TexSymbolConfig("\ud835\udcb0", false, null);
    A.TexSymbolConfig_WeI = new B.TexSymbolConfig("\ud835\udc15", false, null);
    A.TexSymbolConfig_oYX = new B.TexSymbolConfig("\ud835\udc49", false, null);
    A.TexSymbolConfig_oBD = new B.TexSymbolConfig("\ud835\udc7d", false, null);
    A.TexSymbolConfig_xaK = new B.TexSymbolConfig("\ud835\udd19", false, null);
    A.TexSymbolConfig_inw = new B.TexSymbolConfig("\ud835\uddb5", false, null);
    A.TexSymbolConfig_tFT = new B.TexSymbolConfig("\ud835\udde9", false, null);
    A.TexSymbolConfig_cWj = new B.TexSymbolConfig("\ud835\ude1d", false, null);
    A.TexSymbolConfig_Vh7 = new B.TexSymbolConfig("\ud835\ude85", false, null);
    A.TexSymbolConfig_D2d = new B.TexSymbolConfig("\ud835\udd4d", false, null);
    A.TexSymbolConfig_1D5 = new B.TexSymbolConfig("\ud835\udcb1", false, null);
    A.TexSymbolConfig_qFl = new B.TexSymbolConfig("\ud835\udc16", false, null);
    A.TexSymbolConfig_oOD = new B.TexSymbolConfig("\ud835\udc4a", false, null);
    A.TexSymbolConfig_nLg = new B.TexSymbolConfig("\ud835\udc7e", false, null);
    A.TexSymbolConfig_rOQ = new B.TexSymbolConfig("\ud835\udd1a", false, null);
    A.TexSymbolConfig_9Uz = new B.TexSymbolConfig("\ud835\uddb6", false, null);
    A.TexSymbolConfig_3oW = new B.TexSymbolConfig("\ud835\uddea", false, null);
    A.TexSymbolConfig_Rqo = new B.TexSymbolConfig("\ud835\ude1e", false, null);
    A.TexSymbolConfig_Mwp = new B.TexSymbolConfig("\ud835\ude86", false, null);
    A.TexSymbolConfig_yRb = new B.TexSymbolConfig("\ud835\udd4e", false, null);
    A.TexSymbolConfig_LBz = new B.TexSymbolConfig("\ud835\udcb2", false, null);
    A.TexSymbolConfig_eOR = new B.TexSymbolConfig("\ud835\udc17", false, null);
    A.TexSymbolConfig_Inm = new B.TexSymbolConfig("\ud835\udc4b", false, null);
    A.TexSymbolConfig_YyP = new B.TexSymbolConfig("\ud835\udc7f", false, null);
    A.TexSymbolConfig_IFq = new B.TexSymbolConfig("\ud835\udd1b", false, null);
    A.TexSymbolConfig_O2L = new B.TexSymbolConfig("\ud835\uddb7", false, null);
    A.TexSymbolConfig_sS6 = new B.TexSymbolConfig("\ud835\uddeb", false, null);
    A.TexSymbolConfig_DKW = new B.TexSymbolConfig("\ud835\ude1f", false, null);
    A.TexSymbolConfig_WZi = new B.TexSymbolConfig("\ud835\ude87", false, null);
    A.TexSymbolConfig_NW5 = new B.TexSymbolConfig("\ud835\udd4f", false, null);
    A.TexSymbolConfig_5Qk = new B.TexSymbolConfig("\ud835\udcb3", false, null);
    A.TexSymbolConfig_mQp = new B.TexSymbolConfig("\ud835\udc18", false, null);
    A.TexSymbolConfig_Lp5 = new B.TexSymbolConfig("\ud835\udc4c", false, null);
    A.TexSymbolConfig_6cM = new B.TexSymbolConfig("\ud835\udc80", false, null);
    A.TexSymbolConfig_bVG = new B.TexSymbolConfig("\ud835\udd1c", false, null);
    A.TexSymbolConfig_eBF = new B.TexSymbolConfig("\ud835\uddb8", false, null);
    A.TexSymbolConfig_6Ad = new B.TexSymbolConfig("\ud835\uddec", false, null);
    A.TexSymbolConfig_xU8 = new B.TexSymbolConfig("\ud835\ude20", false, null);
    A.TexSymbolConfig_h7l = new B.TexSymbolConfig("\ud835\ude88", false, null);
    A.TexSymbolConfig_1mL = new B.TexSymbolConfig("\ud835\udd50", false, null);
    A.TexSymbolConfig_STb = new B.TexSymbolConfig("\ud835\udcb4", false, null);
    A.TexSymbolConfig_3AX = new B.TexSymbolConfig("\ud835\udc19", false, null);
    A.TexSymbolConfig_mER = new B.TexSymbolConfig("\ud835\udc4d", false, null);
    A.TexSymbolConfig_eOC = new B.TexSymbolConfig("\ud835\udc81", false, null);
    A.TexSymbolConfig_99l = new B.TexSymbolConfig("\ud835\udd1d", false, null);
    A.TexSymbolConfig_BKZ = new B.TexSymbolConfig("\ud835\uddb9", false, null);
    A.TexSymbolConfig_bw4 = new B.TexSymbolConfig("\ud835\udded", false, null);
    A.TexSymbolConfig_E5u = new B.TexSymbolConfig("\ud835\ude21", false, null);
    A.TexSymbolConfig_etr = new B.TexSymbolConfig("\ud835\ude89", false, null);
    A.TexSymbolConfig_LAT = new B.TexSymbolConfig("\ud835\udd51", false, null);
    A.TexSymbolConfig_fIw = new B.TexSymbolConfig("\ud835\udcb5", false, null);
    A.TexSymbolConfig_jjp = new B.TexSymbolConfig("\ud835\udc1a", false, null);
    A.TexSymbolConfig_CR3 = new B.TexSymbolConfig("\ud835\udc4e", false, null);
    A.TexSymbolConfig_qNo = new B.TexSymbolConfig("\ud835\udc82", false, null);
    A.TexSymbolConfig_EFm = new B.TexSymbolConfig("\ud835\udd1e", false, null);
    A.TexSymbolConfig_M80 = new B.TexSymbolConfig("\ud835\uddba", false, null);
    A.TexSymbolConfig_7z7 = new B.TexSymbolConfig("\ud835\uddee", false, null);
    A.TexSymbolConfig_9pK = new B.TexSymbolConfig("\ud835\ude22", false, null);
    A.TexSymbolConfig_HC6 = new B.TexSymbolConfig("\ud835\ude8a", false, null);
    A.TexSymbolConfig_ZVV = new B.TexSymbolConfig("\ud835\udc1b", false, null);
    A.TexSymbolConfig_9uT = new B.TexSymbolConfig("\ud835\udc4f", false, null);
    A.TexSymbolConfig_o0I = new B.TexSymbolConfig("\ud835\udc83", false, null);
    A.TexSymbolConfig_MwN = new B.TexSymbolConfig("\ud835\udd1f", false, null);
    A.TexSymbolConfig_EPs = new B.TexSymbolConfig("\ud835\uddbb", false, null);
    A.TexSymbolConfig_Set = new B.TexSymbolConfig("\ud835\uddef", false, null);
    A.TexSymbolConfig_3Ba = new B.TexSymbolConfig("\ud835\ude23", false, null);
    A.TexSymbolConfig_WHI = new B.TexSymbolConfig("\ud835\ude8b", false, null);
    A.TexSymbolConfig_YDi = new B.TexSymbolConfig("\ud835\udc1c", false, null);
    A.TexSymbolConfig_cRl = new B.TexSymbolConfig("\ud835\udc50", false, null);
    A.TexSymbolConfig_BiP = new B.TexSymbolConfig("\ud835\udc84", false, null);
    A.TexSymbolConfig_pd6 = new B.TexSymbolConfig("\ud835\udd20", false, null);
    A.TexSymbolConfig_ZxO = new B.TexSymbolConfig("\ud835\uddbc", false, null);
    A.TexSymbolConfig_XWx = new B.TexSymbolConfig("\ud835\uddf0", false, null);
    A.TexSymbolConfig_inG0 = new B.TexSymbolConfig("\ud835\ude24", false, null);
    A.TexSymbolConfig_BDK = new B.TexSymbolConfig("\ud835\ude8c", false, null);
    A.TexSymbolConfig_Kri = new B.TexSymbolConfig("\ud835\udc1d", false, null);
    A.TexSymbolConfig_wII = new B.TexSymbolConfig("\ud835\udc51", false, null);
    A.TexSymbolConfig_yF5 = new B.TexSymbolConfig("\ud835\udc85", false, null);
    A.TexSymbolConfig_lN4 = new B.TexSymbolConfig("\ud835\udd21", false, null);
    A.TexSymbolConfig_pPh = new B.TexSymbolConfig("\ud835\uddbd", false, null);
    A.TexSymbolConfig_5Pi = new B.TexSymbolConfig("\ud835\uddf1", false, null);
    A.TexSymbolConfig_vuM = new B.TexSymbolConfig("\ud835\ude25", false, null);
    A.TexSymbolConfig_LkM = new B.TexSymbolConfig("\ud835\ude8d", false, null);
    A.TexSymbolConfig_KEQ = new B.TexSymbolConfig("\ud835\udc1e", false, null);
    A.TexSymbolConfig_dg8 = new B.TexSymbolConfig("\ud835\udc52", false, null);
    A.TexSymbolConfig_pWx = new B.TexSymbolConfig("\ud835\udc86", false, null);
    A.TexSymbolConfig_BZa = new B.TexSymbolConfig("\ud835\udd22", false, null);
    A.TexSymbolConfig_yUu = new B.TexSymbolConfig("\ud835\uddbe", false, null);
    A.TexSymbolConfig_DT6 = new B.TexSymbolConfig("\ud835\uddf2", false, null);
    A.TexSymbolConfig_F1O = new B.TexSymbolConfig("\ud835\ude26", false, null);
    A.TexSymbolConfig_Klo = new B.TexSymbolConfig("\ud835\ude8e", false, null);
    A.TexSymbolConfig_wQn = new B.TexSymbolConfig("\ud835\udc1f", false, null);
    A.TexSymbolConfig_YPx = new B.TexSymbolConfig("\ud835\udc53", false, null);
    A.TexSymbolConfig_uQw = new B.TexSymbolConfig("\ud835\udc87", false, null);
    A.TexSymbolConfig_SlJ = new B.TexSymbolConfig("\ud835\udd23", false, null);
    A.TexSymbolConfig_rlX = new B.TexSymbolConfig("\ud835\uddbf", false, null);
    A.TexSymbolConfig_tRJ = new B.TexSymbolConfig("\ud835\uddf3", false, null);
    A.TexSymbolConfig_Oqf = new B.TexSymbolConfig("\ud835\ude27", false, null);
    A.TexSymbolConfig_6V5 = new B.TexSymbolConfig("\ud835\ude8f", false, null);
    A.TexSymbolConfig_f0p = new B.TexSymbolConfig("\ud835\udc20", false, null);
    A.TexSymbolConfig_2hA = new B.TexSymbolConfig("\ud835\udc54", false, null);
    A.TexSymbolConfig_lr4 = new B.TexSymbolConfig("\ud835\udc88", false, null);
    A.TexSymbolConfig_bMa = new B.TexSymbolConfig("\ud835\udd24", false, null);
    A.TexSymbolConfig_BWw = new B.TexSymbolConfig("\ud835\uddc0", false, null);
    A.TexSymbolConfig_qFh = new B.TexSymbolConfig("\ud835\uddf4", false, null);
    A.TexSymbolConfig_phT = new B.TexSymbolConfig("\ud835\ude28", false, null);
    A.TexSymbolConfig_pyb = new B.TexSymbolConfig("\ud835\ude90", false, null);
    A.TexSymbolConfig_r5C = new B.TexSymbolConfig("\ud835\udc21", false, null);
    A.TexSymbolConfig_iSQ = new B.TexSymbolConfig("\ud835\udc55", false, null);
    A.TexSymbolConfig_irg = new B.TexSymbolConfig("\ud835\udc89", false, null);
    A.TexSymbolConfig_vvl = new B.TexSymbolConfig("\ud835\udd25", false, null);
    A.TexSymbolConfig_GMf = new B.TexSymbolConfig("\ud835\uddc1", false, null);
    A.TexSymbolConfig_Yq4 = new B.TexSymbolConfig("\ud835\uddf5", false, null);
    A.TexSymbolConfig_B93 = new B.TexSymbolConfig("\ud835\ude29", false, null);
    A.TexSymbolConfig_JTC = new B.TexSymbolConfig("\ud835\ude91", false, null);
    A.TexSymbolConfig_bLN = new B.TexSymbolConfig("\ud835\udc22", false, null);
    A.TexSymbolConfig_F3z = new B.TexSymbolConfig("\ud835\udc56", false, null);
    A.TexSymbolConfig_FB9 = new B.TexSymbolConfig("\ud835\udc8a", false, null);
    A.TexSymbolConfig_v3q = new B.TexSymbolConfig("\ud835\udd26", false, null);
    A.TexSymbolConfig_3zs = new B.TexSymbolConfig("\ud835\uddc2", false, null);
    A.TexSymbolConfig_JSR = new B.TexSymbolConfig("\ud835\uddf6", false, null);
    A.TexSymbolConfig_pJU = new B.TexSymbolConfig("\ud835\ude2a", false, null);
    A.TexSymbolConfig_unp = new B.TexSymbolConfig("\ud835\ude92", false, null);
    A.TexSymbolConfig_3Jq = new B.TexSymbolConfig("\ud835\udc23", false, null);
    A.TexSymbolConfig_8jX = new B.TexSymbolConfig("\ud835\udc57", false, null);
    A.TexSymbolConfig_oil = new B.TexSymbolConfig("\ud835\udc8b", false, null);
    A.TexSymbolConfig_cEe = new B.TexSymbolConfig("\ud835\udd27", false, null);
    A.TexSymbolConfig_Yuu = new B.TexSymbolConfig("\ud835\uddc3", false, null);
    A.TexSymbolConfig_zIf = new B.TexSymbolConfig("\ud835\uddf7", false, null);
    A.TexSymbolConfig_28O = new B.TexSymbolConfig("\ud835\ude2b", false, null);
    A.TexSymbolConfig_s3I = new B.TexSymbolConfig("\ud835\ude93", false, null);
    A.TexSymbolConfig_MsW = new B.TexSymbolConfig("\ud835\udc24", false, null);
    A.TexSymbolConfig_EUx = new B.TexSymbolConfig("\ud835\udc58", false, null);
    A.TexSymbolConfig_kfR = new B.TexSymbolConfig("\ud835\udc8c", false, null);
    A.TexSymbolConfig_JbZ = new B.TexSymbolConfig("\ud835\udd28", false, null);
    A.TexSymbolConfig_QY8 = new B.TexSymbolConfig("\ud835\uddc4", false, null);
    A.TexSymbolConfig_noM = new B.TexSymbolConfig("\ud835\uddf8", false, null);
    A.TexSymbolConfig_AG9 = new B.TexSymbolConfig("\ud835\ude2c", false, null);
    A.TexSymbolConfig_SZD = new B.TexSymbolConfig("\ud835\ude94", false, null);
    A.TexSymbolConfig_sWv = new B.TexSymbolConfig("\ud835\udc25", false, null);
    A.TexSymbolConfig_OmY = new B.TexSymbolConfig("\ud835\udc59", false, null);
    A.TexSymbolConfig_hWH = new B.TexSymbolConfig("\ud835\udc8d", false, null);
    A.TexSymbolConfig_daS = new B.TexSymbolConfig("\ud835\udd29", false, null);
    A.TexSymbolConfig_JGA = new B.TexSymbolConfig("\ud835\uddc5", false, null);
    A.TexSymbolConfig_xi1 = new B.TexSymbolConfig("\ud835\uddf9", false, null);
    A.TexSymbolConfig_VEM = new B.TexSymbolConfig("\ud835\ude2d", false, null);
    A.TexSymbolConfig_ZdH = new B.TexSymbolConfig("\ud835\ude95", false, null);
    A.TexSymbolConfig_Cva = new B.TexSymbolConfig("\ud835\udc26", false, null);
    A.TexSymbolConfig_fF7 = new B.TexSymbolConfig("\ud835\udc5a", false, null);
    A.TexSymbolConfig_yM2 = new B.TexSymbolConfig("\ud835\udc8e", false, null);
    A.TexSymbolConfig_16r = new B.TexSymbolConfig("\ud835\udd2a", false, null);
    A.TexSymbolConfig_AgP = new B.TexSymbolConfig("\ud835\uddc6", false, null);
    A.TexSymbolConfig_v6d = new B.TexSymbolConfig("\ud835\uddfa", false, null);
    A.TexSymbolConfig_bOp = new B.TexSymbolConfig("\ud835\ude2e", false, null);
    A.TexSymbolConfig_sDa = new B.TexSymbolConfig("\ud835\ude96", false, null);
    A.TexSymbolConfig_XwA = new B.TexSymbolConfig("\ud835\udc27", false, null);
    A.TexSymbolConfig_X4k = new B.TexSymbolConfig("\ud835\udc5b", false, null);
    A.TexSymbolConfig_vlK = new B.TexSymbolConfig("\ud835\udc8f", false, null);
    A.TexSymbolConfig_UyA = new B.TexSymbolConfig("\ud835\udd2b", false, null);
    A.TexSymbolConfig_hVI = new B.TexSymbolConfig("\ud835\uddc7", false, null);
    A.TexSymbolConfig_L3s = new B.TexSymbolConfig("\ud835\uddfb", false, null);
    A.TexSymbolConfig_Up0 = new B.TexSymbolConfig("\ud835\ude2f", false, null);
    A.TexSymbolConfig_fLF = new B.TexSymbolConfig("\ud835\ude97", false, null);
    A.TexSymbolConfig_Oa3 = new B.TexSymbolConfig("\ud835\udc28", false, null);
    A.TexSymbolConfig_MZt = new B.TexSymbolConfig("\ud835\udc5c", false, null);
    A.TexSymbolConfig_eXT = new B.TexSymbolConfig("\ud835\udc90", false, null);
    A.TexSymbolConfig_rPj = new B.TexSymbolConfig("\ud835\udd2c", false, null);
    A.TexSymbolConfig_mmc = new B.TexSymbolConfig("\ud835\uddc8", false, null);
    A.TexSymbolConfig_fvM = new B.TexSymbolConfig("\ud835\uddfc", false, null);
    A.TexSymbolConfig_LyV = new B.TexSymbolConfig("\ud835\ude30", false, null);
    A.TexSymbolConfig_egV = new B.TexSymbolConfig("\ud835\ude98", false, null);
    A.TexSymbolConfig_ZVG = new B.TexSymbolConfig("\ud835\udc29", false, null);
    A.TexSymbolConfig_bo0 = new B.TexSymbolConfig("\ud835\udc5d", false, null);
    A.TexSymbolConfig_DGy = new B.TexSymbolConfig("\ud835\udc91", false, null);
    A.TexSymbolConfig_hRX = new B.TexSymbolConfig("\ud835\udd2d", false, null);
    A.TexSymbolConfig_j5E = new B.TexSymbolConfig("\ud835\uddc9", false, null);
    A.TexSymbolConfig_MJg = new B.TexSymbolConfig("\ud835\uddfd", false, null);
    A.TexSymbolConfig_6Lu = new B.TexSymbolConfig("\ud835\ude31", false, null);
    A.TexSymbolConfig_XFJ = new B.TexSymbolConfig("\ud835\ude99", false, null);
    A.TexSymbolConfig_Adg = new B.TexSymbolConfig("\ud835\udc2a", false, null);
    A.TexSymbolConfig_pfz = new B.TexSymbolConfig("\ud835\udc5e", false, null);
    A.TexSymbolConfig_sZ8 = new B.TexSymbolConfig("\ud835\udc92", false, null);
    A.TexSymbolConfig_LYn = new B.TexSymbolConfig("\ud835\udd2e", false, null);
    A.TexSymbolConfig_uOn = new B.TexSymbolConfig("\ud835\uddca", false, null);
    A.TexSymbolConfig_WET = new B.TexSymbolConfig("\ud835\uddfe", false, null);
    A.TexSymbolConfig_vzo = new B.TexSymbolConfig("\ud835\ude32", false, null);
    A.TexSymbolConfig_Aay = new B.TexSymbolConfig("\ud835\ude9a", false, null);
    A.TexSymbolConfig_CuN = new B.TexSymbolConfig("\ud835\udc2b", false, null);
    A.TexSymbolConfig_tLS = new B.TexSymbolConfig("\ud835\udc5f", false, null);
    A.TexSymbolConfig_WJG = new B.TexSymbolConfig("\ud835\udc93", false, null);
    A.TexSymbolConfig_SDj = new B.TexSymbolConfig("\ud835\udd2f", false, null);
    A.TexSymbolConfig_3D4 = new B.TexSymbolConfig("\ud835\uddcb", false, null);
    A.TexSymbolConfig_meu = new B.TexSymbolConfig("\ud835\uddff", false, null);
    A.TexSymbolConfig_VHn = new B.TexSymbolConfig("\ud835\ude33", false, null);
    A.TexSymbolConfig_pNX = new B.TexSymbolConfig("\ud835\ude9b", false, null);
    A.TexSymbolConfig_Wn8 = new B.TexSymbolConfig("\ud835\udc2c", false, null);
    A.TexSymbolConfig_b8h = new B.TexSymbolConfig("\ud835\udc60", false, null);
    A.TexSymbolConfig_l7O = new B.TexSymbolConfig("\ud835\udc94", false, null);
    A.TexSymbolConfig_NlT = new B.TexSymbolConfig("\ud835\udd30", false, null);
    A.TexSymbolConfig_c4R = new B.TexSymbolConfig("\ud835\uddcc", false, null);
    A.TexSymbolConfig_J7p = new B.TexSymbolConfig("\ud835\ude00", false, null);
    A.TexSymbolConfig_xLv = new B.TexSymbolConfig("\ud835\ude34", false, null);
    A.TexSymbolConfig_QCJ = new B.TexSymbolConfig("\ud835\ude9c", false, null);
    A.TexSymbolConfig_KaP = new B.TexSymbolConfig("\ud835\udc2d", false, null);
    A.TexSymbolConfig_iwZ = new B.TexSymbolConfig("\ud835\udc61", false, null);
    A.TexSymbolConfig_4Zp = new B.TexSymbolConfig("\ud835\udc95", false, null);
    A.TexSymbolConfig_NqZ = new B.TexSymbolConfig("\ud835\udd31", false, null);
    A.TexSymbolConfig_nC9 = new B.TexSymbolConfig("\ud835\uddcd", false, null);
    A.TexSymbolConfig_yAg = new B.TexSymbolConfig("\ud835\ude01", false, null);
    A.TexSymbolConfig_tix = new B.TexSymbolConfig("\ud835\ude35", false, null);
    A.TexSymbolConfig_u4w = new B.TexSymbolConfig("\ud835\ude9d", false, null);
    A.TexSymbolConfig_GBv = new B.TexSymbolConfig("\ud835\udc2e", false, null);
    A.TexSymbolConfig_WLk = new B.TexSymbolConfig("\ud835\udc62", false, null);
    A.TexSymbolConfig_ynQ = new B.TexSymbolConfig("\ud835\udc96", false, null);
    A.TexSymbolConfig_w8J = new B.TexSymbolConfig("\ud835\udd32", false, null);
    A.TexSymbolConfig_YMY = new B.TexSymbolConfig("\ud835\uddce", false, null);
    A.TexSymbolConfig_Xrg = new B.TexSymbolConfig("\ud835\ude02", false, null);
    A.TexSymbolConfig_9Ei = new B.TexSymbolConfig("\ud835\ude36", false, null);
    A.TexSymbolConfig_eSJ = new B.TexSymbolConfig("\ud835\ude9e", false, null);
    A.TexSymbolConfig_DVX = new B.TexSymbolConfig("\ud835\udc2f", false, null);
    A.TexSymbolConfig_lJc = new B.TexSymbolConfig("\ud835\udc63", false, null);
    A.TexSymbolConfig_v2W = new B.TexSymbolConfig("\ud835\udc97", false, null);
    A.TexSymbolConfig_Iun = new B.TexSymbolConfig("\ud835\udd33", false, null);
    A.TexSymbolConfig_g9W = new B.TexSymbolConfig("\ud835\uddcf", false, null);
    A.TexSymbolConfig_nfb = new B.TexSymbolConfig("\ud835\ude03", false, null);
    A.TexSymbolConfig_WB0 = new B.TexSymbolConfig("\ud835\ude37", false, null);
    A.TexSymbolConfig_qeA = new B.TexSymbolConfig("\ud835\ude9f", false, null);
    A.TexSymbolConfig_fG0 = new B.TexSymbolConfig("\ud835\udc30", false, null);
    A.TexSymbolConfig_wwT = new B.TexSymbolConfig("\ud835\udc64", false, null);
    A.TexSymbolConfig_18C = new B.TexSymbolConfig("\ud835\udc98", false, null);
    A.TexSymbolConfig_EFB = new B.TexSymbolConfig("\ud835\udd34", false, null);
    A.TexSymbolConfig_Myn = new B.TexSymbolConfig("\ud835\uddd0", false, null);
    A.TexSymbolConfig_1XY = new B.TexSymbolConfig("\ud835\ude04", false, null);
    A.TexSymbolConfig_70y = new B.TexSymbolConfig("\ud835\ude38", false, null);
    A.TexSymbolConfig_8cz = new B.TexSymbolConfig("\ud835\udea0", false, null);
    A.TexSymbolConfig_9Ag = new B.TexSymbolConfig("\ud835\udc31", false, null);
    A.TexSymbolConfig_mQx = new B.TexSymbolConfig("\ud835\udc65", false, null);
    A.TexSymbolConfig_7kw = new B.TexSymbolConfig("\ud835\udc99", false, null);
    A.TexSymbolConfig_PCr = new B.TexSymbolConfig("\ud835\udd35", false, null);
    A.TexSymbolConfig_kod = new B.TexSymbolConfig("\ud835\uddd1", false, null);
    A.TexSymbolConfig_iAa = new B.TexSymbolConfig("\ud835\ude05", false, null);
    A.TexSymbolConfig_pDO = new B.TexSymbolConfig("\ud835\ude39", false, null);
    A.TexSymbolConfig_Yon = new B.TexSymbolConfig("\ud835\udea1", false, null);
    A.TexSymbolConfig_b8M = new B.TexSymbolConfig("\ud835\udc32", false, null);
    A.TexSymbolConfig_fq5 = new B.TexSymbolConfig("\ud835\udc66", false, null);
    A.TexSymbolConfig_VHH = new B.TexSymbolConfig("\ud835\udc9a", false, null);
    A.TexSymbolConfig_LRz = new B.TexSymbolConfig("\ud835\udd36", false, null);
    A.TexSymbolConfig_SHa = new B.TexSymbolConfig("\ud835\uddd2", false, null);
    A.TexSymbolConfig_6cJ = new B.TexSymbolConfig("\ud835\ude06", false, null);
    A.TexSymbolConfig_HFP = new B.TexSymbolConfig("\ud835\ude3a", false, null);
    A.TexSymbolConfig_Lfp = new B.TexSymbolConfig("\ud835\udea2", false, null);
    A.TexSymbolConfig_6VK = new B.TexSymbolConfig("\ud835\udc33", false, null);
    A.TexSymbolConfig_5RE = new B.TexSymbolConfig("\ud835\udc67", false, null);
    A.TexSymbolConfig_RDo = new B.TexSymbolConfig("\ud835\udc9b", false, null);
    A.TexSymbolConfig_JoQ = new B.TexSymbolConfig("\ud835\udd37", false, null);
    A.TexSymbolConfig_f8o = new B.TexSymbolConfig("\ud835\uddd3", false, null);
    A.TexSymbolConfig_TYO = new B.TexSymbolConfig("\ud835\ude07", false, null);
    A.TexSymbolConfig_ouX = new B.TexSymbolConfig("\ud835\ude3b", false, null);
    A.TexSymbolConfig_8pc = new B.TexSymbolConfig("\ud835\udea3", false, null);
    A.TexSymbolConfig_VBv = new B.TexSymbolConfig("\ud835\udd5c", false, null);
    A.TexSymbolConfig_NWc = new B.TexSymbolConfig("\ud835\udfce", false, null);
    A.TexSymbolConfig_A1i = new B.TexSymbolConfig("\ud835\udfe2", false, null);
    A.TexSymbolConfig_EM4 = new B.TexSymbolConfig("\ud835\udfec", false, null);
    A.TexSymbolConfig_ISp = new B.TexSymbolConfig("\ud835\udff6", false, null);
    A.TexSymbolConfig_mjk = new B.TexSymbolConfig("\ud835\udfcf", false, null);
    A.TexSymbolConfig_uEx = new B.TexSymbolConfig("\ud835\udfe3", false, null);
    A.TexSymbolConfig_te9 = new B.TexSymbolConfig("\ud835\udfed", false, null);
    A.TexSymbolConfig_Pon = new B.TexSymbolConfig("\ud835\udff7", false, null);
    A.TexSymbolConfig_VRk = new B.TexSymbolConfig("\ud835\udfd0", false, null);
    A.TexSymbolConfig_op1 = new B.TexSymbolConfig("\ud835\udfe4", false, null);
    A.TexSymbolConfig_UUf = new B.TexSymbolConfig("\ud835\udfee", false, null);
    A.TexSymbolConfig_iqn = new B.TexSymbolConfig("\ud835\udff8", false, null);
    A.TexSymbolConfig_Uhg = new B.TexSymbolConfig("\ud835\udfd1", false, null);
    A.TexSymbolConfig_p73 = new B.TexSymbolConfig("\ud835\udfe5", false, null);
    A.TexSymbolConfig_8gs = new B.TexSymbolConfig("\ud835\udfef", false, null);
    A.TexSymbolConfig_O2x = new B.TexSymbolConfig("\ud835\udff9", false, null);
    A.TexSymbolConfig_185 = new B.TexSymbolConfig("\ud835\udfd2", false, null);
    A.TexSymbolConfig_MQ4 = new B.TexSymbolConfig("\ud835\udfe6", false, null);
    A.TexSymbolConfig_KnC = new B.TexSymbolConfig("\ud835\udff0", false, null);
    A.TexSymbolConfig_Edq = new B.TexSymbolConfig("\ud835\udffa", false, null);
    A.TexSymbolConfig_DJa = new B.TexSymbolConfig("\ud835\udfd3", false, null);
    A.TexSymbolConfig_ffx = new B.TexSymbolConfig("\ud835\udfe7", false, null);
    A.TexSymbolConfig_3ir = new B.TexSymbolConfig("\ud835\udff1", false, null);
    A.TexSymbolConfig_3s9 = new B.TexSymbolConfig("\ud835\udffb", false, null);
    A.TexSymbolConfig_BDM = new B.TexSymbolConfig("\ud835\udfd4", false, null);
    A.TexSymbolConfig_KRD = new B.TexSymbolConfig("\ud835\udfe8", false, null);
    A.TexSymbolConfig_Hl4 = new B.TexSymbolConfig("\ud835\udff2", false, null);
    A.TexSymbolConfig_su5 = new B.TexSymbolConfig("\ud835\udffc", false, null);
    A.TexSymbolConfig_SJb = new B.TexSymbolConfig("\ud835\udfd5", false, null);
    A.TexSymbolConfig_u9Q = new B.TexSymbolConfig("\ud835\udfe9", false, null);
    A.TexSymbolConfig_zWB = new B.TexSymbolConfig("\ud835\udff3", false, null);
    A.TexSymbolConfig_Bav = new B.TexSymbolConfig("\ud835\udffd", false, null);
    A.TexSymbolConfig_iYT = new B.TexSymbolConfig("\ud835\udfd6", false, null);
    A.TexSymbolConfig_cAz = new B.TexSymbolConfig("\ud835\udfea", false, null);
    A.TexSymbolConfig_Gbi = new B.TexSymbolConfig("\ud835\udff4", false, null);
    A.TexSymbolConfig_UNd = new B.TexSymbolConfig("\ud835\udffe", false, null);
    A.TexSymbolConfig_V4z = new B.TexSymbolConfig("\ud835\udfd7", false, null);
    A.TexSymbolConfig_Ztu = new B.TexSymbolConfig("\ud835\udfeb", false, null);
    A.TexSymbolConfig_PfV = new B.TexSymbolConfig("\ud835\udff5", false, null);
    A.TexSymbolConfig_hY2 = new B.TexSymbolConfig("\ud835\udfff", false, null);
    A.TexSymbolConfig_pRY = new B.TexSymbolConfig("\xc7", false, null);
    A.TexSymbolConfig_8AK = new B.TexSymbolConfig("\xd0", false, null);
    A.TexSymbolConfig_KYo = new B.TexSymbolConfig("\xde", false, null);
    A.TexSymbolConfig_5FU = new B.TexSymbolConfig("\xe7", false, null);
    A.TexSymbolConfig_eh3 = new B.TexSymbolConfig("\xfe", false, null);
    A.TexSymbolConfig_RVb = new B.TexSymbolConfig("\xa0", false, null);
    A.TexSymbolConfig_61m = new B.TexSymbolConfig(" ", false, null);
    A.AtomType_6 = new B.AtomType(6, "punct");
    A.TexSymbolConfig_rff = new B.TexSymbolConfig(".", false, A.AtomType_6);
    A.TexSymbolConfig_J3m = new B.TexSymbolConfig("\u22c5", false, A.AtomType_6);
    A.TexSymbolConfig_IyD = new B.TexSymbolConfig("\u2a87", true, null);
    A.TexSymbolConfig_1EK = new B.TexSymbolConfig("\u2270", true, null);
    A.TexSymbolConfig_XYu = new B.TexSymbolConfig("\u2268", true, null);
    A.TexSymbolConfig_vpw = new B.TexSymbolConfig("\u2224", true, null);
    A.TexSymbolConfig_pL9 = new B.TexSymbolConfig("\u228a", true, null);
    A.TexSymbolConfig_1it = new B.TexSymbolConfig("\u2acb", true, null);
    A.TexSymbolConfig_Hbj = new B.TexSymbolConfig("\u2a88", true, null);
    A.TexSymbolConfig_SeO = new B.TexSymbolConfig("\u2271", true, null);
    A.TexSymbolConfig_r7L = new B.TexSymbolConfig("\u2269", true, null);
    A.TexSymbolConfig_Osn = new B.TexSymbolConfig("\u2226", true, null);
    A.TexSymbolConfig_AIY = new B.TexSymbolConfig("\u2289", true, null);
    A.TexSymbolConfig_pv3 = new B.TexSymbolConfig("\u228b", true, null);
    A.TexSymbolConfig_pkm = new B.TexSymbolConfig("\u2acc", true, null);
    A.TexSymbolConfig_Url = new B.TexSymbolConfig("\u2288", true, null);
    A.TexSymbolConfig_uT8 = new B.TexSymbolConfig("\u210f", true, null);
    A.TexSymbolConfig_UOx = new B.TexSymbolConfig("\u231c", false, null);
    A.TexSymbolConfig_rMp = new B.TexSymbolConfig("\u231d", false, null);
    A.TexSymbolConfig_EJh = new B.TexSymbolConfig("\u231e", false, null);
    A.TexSymbolConfig_Ngf = new B.TexSymbolConfig("\u231f", false, null);
    A.TexSymbolConfig_80p = new B.TexSymbolConfig("\u2323", true, null);
    A.TexSymbolConfig_h1n = new B.TexSymbolConfig("\u2322", true, null);
    A.TexSymbolConfig_xjG = new B.TexSymbolConfig("\u223c", true, null);
    A.TexSymbolConfig_hfo = new B.TexSymbolConfig("\u2248", true, null);
    A.TexSymbolConfig_ou2 = new B.TexSymbolConfig("\u2223", true, null);
    A.TexSymbolConfig_17u = new B.TexSymbolConfig("\u221d", true, null);
    A.TexSymbolConfig_DBB = new B.TexSymbolConfig("\u22c5", true, null);
    A.TexSymbolConfig_Ith = new B.TexSymbolConfig("\u2223", false, A.AtomType_4);
    A.TexSymbolConfig_ITf = new B.TexSymbolConfig("\u2223", false, A.AtomType_5);
    A.TexSymbolConfig_37C = new B.TexSymbolConfig("\u22a8", true, null);
    A.TexSymbolConfig_hqG = new B.TexSymbolConfig("\u2223", false, A.AtomType_0);
    A.TexSymbolConfig_lsF = new B.TexSymbolConfig("\u22a5", false, null);
    A.TexSymbolConfig_pRQ = new B.TexSymbolConfig("\u22a5", false, A.AtomType_0);
    A.TexSymbolConfig_lJU = new B.TexSymbolConfig("\u2225", false, null);
    A.TexSymbolConfig_1w0 = new B.TexSymbolConfig("\u2225", true, null);
    A.TexSymbolConfig_Cku = new B.TexSymbolConfig("\u2225", false, A.AtomType_4);
    A.TexSymbolConfig_u10 = new B.TexSymbolConfig("\u2225", false, A.AtomType_5);
    A.TexSymbolConfig_Wuu = new B.TexSymbolConfig("\u2225", false, A.AtomType_0);
    A.TexSymbolConfig_VjA = new B.TexSymbolConfig("#", false, null);
    A.TexSymbolConfig_qfX = new B.TexSymbolConfig("&", false, null);
    A.TexSymbolConfig_cQK = new B.TexSymbolConfig("&", false, A.AtomType_2);
    A.TexSymbolConfig_kFA = new B.TexSymbolConfig("\u2020", false, null);
    A.TexSymbolConfig_G16 = new B.TexSymbolConfig("\u2020", false, A.AtomType_0);
    A.TexSymbolConfig_AgW = new B.TexSymbolConfig("\u2021", false, null);
    A.TexSymbolConfig_QE6 = new B.TexSymbolConfig("\u2021", false, A.AtomType_0);
    A.TexSymbolConfig_Fzw = new B.TexSymbolConfig("\u25ef", false, null);
    A.TexSymbolConfig_iKT = new B.TexSymbolConfig("\u2219", false, null);
    A.TexSymbolConfig_03I = new B.TexSymbolConfig("\u2a3f", false, null);
    A.TexSymbolConfig_frX = new B.TexSymbolConfig("\u22ea", false, null);
    A.TexSymbolConfig_Vd4 = new B.TexSymbolConfig("\u22eb", false, null);
    A.TexSymbolConfig_qmh = new B.TexSymbolConfig("\u22b4", false, null);
    A.TexSymbolConfig_txU = new B.TexSymbolConfig("\u22b4", false, A.AtomType_2);
    A.TexSymbolConfig_c9E = new B.TexSymbolConfig("\u22b5", false, null);
    A.TexSymbolConfig_arS = new B.TexSymbolConfig("\u22b5", false, A.AtomType_2);
    A.TexSymbolConfig_SvB = new B.TexSymbolConfig("\u25b3", false, null);
    A.TexSymbolConfig_aN2 = new B.TexSymbolConfig("\u25b3", true, null);
    A.TexSymbolConfig_zr2 = new B.TexSymbolConfig("\u25b3", false, A.AtomType_0);
    A.TexSymbolConfig_eL8 = new B.TexSymbolConfig("\u25bd", false, null);
    A.TexSymbolConfig_Lyp = new B.TexSymbolConfig("\u25bd", true, null);
    A.TexSymbolConfig_0Kh = new B.TexSymbolConfig("\u25ca", false, null);
    A.TexSymbolConfig_kU3 = new B.TexSymbolConfig("\u24c8", false, null);
    A.TexSymbolConfig_j1j = new B.TexSymbolConfig("\xae", false, null);
    A.TexSymbolConfig_fvF = new B.TexSymbolConfig("\u2204", false, null);
    A.TexSymbolConfig_jB1 = new B.TexSymbolConfig("\u2127", false, null);
    A.TexSymbolConfig_ruq = new B.TexSymbolConfig("\u2035", false, null);
    A.TexSymbolConfig_GKn = new B.TexSymbolConfig("\u25b2", false, null);
    A.TexSymbolConfig_MOw = new B.TexSymbolConfig("\u25bc", false, null);
    A.TexSymbolConfig_cjT = new B.TexSymbolConfig("\u25a0", false, null);
    A.TexSymbolConfig_nVm = new B.TexSymbolConfig("\u29eb", false, null);
    A.TexSymbolConfig_Iu8 = new B.TexSymbolConfig("\u2605", false, null);
    A.TexSymbolConfig_Jjf = new B.TexSymbolConfig("\u2571", false, null);
    A.TexSymbolConfig_CTv = new B.TexSymbolConfig("\u2572", false, null);
    A.TexSymbolConfig_ZZz = new B.TexSymbolConfig("\u25a1", false, null);
    A.TexSymbolConfig_Drn = new B.TexSymbolConfig("\u03f0", false, null);
    A.TexSymbolConfig_Z1i = new B.TexSymbolConfig("\u22d6", false, null);
    A.TexSymbolConfig_PQq = new B.TexSymbolConfig("\u22b2", false, null);
    A.TexSymbolConfig_C8s = new B.TexSymbolConfig("\u22b2", true, null);
    A.TexSymbolConfig_OvW = new B.TexSymbolConfig("\u22d7", false, null);
    A.TexSymbolConfig_P2y = new B.TexSymbolConfig("\u22b3", false, null);
    A.TexSymbolConfig_wKD = new B.TexSymbolConfig("\u22b3", false, A.AtomType_2);
    A.TexSymbolConfig_N0R = new B.TexSymbolConfig("\u25c0", false, null);
    A.TexSymbolConfig_mDn = new B.TexSymbolConfig("\u220d", false, null);
    A.TexSymbolConfig_GKw = new B.TexSymbolConfig("\u25b6", false, null);
    A.TexSymbolConfig_wEt = new B.TexSymbolConfig("\u2216", false, null);
    A.TexSymbolConfig_spO = new B.TexSymbolConfig("\u2216", true, null);
    A.TexSymbolConfig_$_false_null = new B.TexSymbolConfig("$", false, null);
    A.TexSymbolConfig_Gdt = new B.TexSymbolConfig("%", false, null);
    A.TexSymbolConfig___false_null = new B.TexSymbolConfig("_", false, null);
    A.TexSymbolConfig_HTp = new B.TexSymbolConfig("\u2032", false, null);
    A.TexSymbolConfig_9EO = new B.TexSymbolConfig("\u22a4", false, null);
    A.TexSymbolConfig_fBG = new B.TexSymbolConfig("\u2205", false, null);
    A.TexSymbolConfig_VdG = new B.TexSymbolConfig("\u2205", true, null);
    A.TexSymbolConfig_Kbv = new B.TexSymbolConfig("\u2218", false, null);
    A.TexSymbolConfig_27R = new B.TexSymbolConfig("\u221a", false, null);
    A.TexSymbolConfig_JOd = new B.TexSymbolConfig("\u0338", false, null);
    A.TexSymbolConfig_Txq = new B.TexSymbolConfig("\u22c4", false, null);
    A.TexSymbolConfig_EHy = new B.TexSymbolConfig("\u22c6", false, null);
    A.TexSymbolConfig_bJN = new B.TexSymbolConfig("\u25c3", false, null);
    A.TexSymbolConfig_FRn = new B.TexSymbolConfig("\u25b9", false, null);
    A.TexSymbolConfig_P7D = new B.TexSymbolConfig("{", false, null);
    A.TexSymbolConfig_19L = new B.TexSymbolConfig("}", false, null);
    A.TexSymbolConfig_6Tf = new B.TexSymbolConfig("\\", false, null);
    A.TexSymbolConfig_b0P = new B.TexSymbolConfig("\u2210", false, null);
    A.TexSymbolConfig_PDX = new B.TexSymbolConfig("\u22c1", false, null);
    A.TexSymbolConfig_tYh = new B.TexSymbolConfig("\u22c0", false, null);
    A.TexSymbolConfig_250 = new B.TexSymbolConfig("\u2a04", false, null);
    A.TexSymbolConfig_BmC = new B.TexSymbolConfig("\u22c2", false, null);
    A.TexSymbolConfig_veX = new B.TexSymbolConfig("\u22c3", false, null);
    A.TexSymbolConfig_dmO = new B.TexSymbolConfig("\u222b", false, null);
    A.TexSymbolConfig_23M = new B.TexSymbolConfig("\u222c", false, null);
    A.TexSymbolConfig_AuU = new B.TexSymbolConfig("\u222d", false, null);
    A.TexSymbolConfig_k9E = new B.TexSymbolConfig("\u220f", false, null);
    A.TexSymbolConfig_2ps = new B.TexSymbolConfig("\u2211", false, null);
    A.TexSymbolConfig_mLy = new B.TexSymbolConfig("\u2a02", false, null);
    A.TexSymbolConfig_YLA = new B.TexSymbolConfig("\u2a01", false, null);
    A.TexSymbolConfig_oEa = new B.TexSymbolConfig("\u2a00", false, null);
    A.TexSymbolConfig_E9t = new B.TexSymbolConfig("\u222e", false, null);
    A.TexSymbolConfig_STd = new B.TexSymbolConfig("\u222f", false, null);
    A.TexSymbolConfig_fyP = new B.TexSymbolConfig("\u2230", false, null);
    A.TexSymbolConfig_MXs = new B.TexSymbolConfig("\u2a06", false, null);
    A.TexSymbolConfig_ujq = new B.TexSymbolConfig("\u22ee", false, null);
    A.TexSymbolConfig_UAC = new B.TexSymbolConfig("\u02ca", false, null);
    A.TexSymbolConfig_Jqm = new B.TexSymbolConfig("\u02cb", false, null);
    A.TexSymbolConfig_ot1 = new B.TexSymbolConfig("\xa8", false, null);
    A.TexSymbolConfig_r4v = new B.TexSymbolConfig("~", false, null);
    A.TexSymbolConfig_ClT = new B.TexSymbolConfig("\u02c9", false, null);
    A.TexSymbolConfig_hu9 = new B.TexSymbolConfig("\u02d8", false, null);
    A.TexSymbolConfig_RHL = new B.TexSymbolConfig("\u02c7", false, null);
    A.TexSymbolConfig_nBu = new B.TexSymbolConfig("^", false, null);
    A.TexSymbolConfig_m1W = new B.TexSymbolConfig("\u20d7", false, null);
    A.TexSymbolConfig_FTA = new B.TexSymbolConfig("\u02d9", false, null);
    A.TexSymbolConfig_7LH = new B.TexSymbolConfig("\u02da", false, null);
    A.TexSymbolConfig_eld = new B.TexSymbolConfig("\u2720", false, null);
    A.TexSymbolConfig_6ua = new B.TexSymbolConfig("\u2259", false, null);
    A.TexSymbolConfig_ZUy = new B.TexSymbolConfig("\u225a", false, null);
    A.TexSymbolConfig_I4M = new B.TexSymbolConfig("\u225b", false, null);
    A.TexSymbolConfig_6F3 = new B.TexSymbolConfig("\u225d", false, null);
    A.TexSymbolConfig_S55 = new B.TexSymbolConfig("\u225e", false, null);
    A.TexSymbolConfig_WiO = new B.TexSymbolConfig("\u225f", false, null);
    A.TexSymbolConfig_8jl = new B.TexSymbolConfig("\u2260", false, null);
    A.TexSymbolConfig_ieb = new B.TexSymbolConfig("\u2209", false, null);
    A.TexSymbolConfig_Jqm0 = new B.TexSymbolConfig("\u220c", false, null);
    A.TexSymbolConfig_MYn = new B.TexSymbolConfig(":", false, A.AtomType_6);
    A.TexSymbolConfig_nD7 = new B.TexSymbolConfig("\u2237", false, null);
    A.TexSymbolConfig_V95 = new B.TexSymbolConfig("\u2254", false, null);
    A.TexSymbolConfig_ELi = new B.TexSymbolConfig("\u2255", false, null);
    A.TexSymbolConfig_6wT = new B.TexSymbolConfig("\u2239", false, null);
    A.TexSymbolConfig_p2K = new B.TexSymbolConfig("\u27e6", false, null);
    A.TexSymbolConfig_JKK = new B.TexSymbolConfig("\u27e7", false, null);
    A.TexSymbolConfig_Gj3 = new B.TexSymbolConfig("\u2983", false, null);
    A.TexSymbolConfig_jXd = new B.TexSymbolConfig("\u2984", false, null);
    A.Map_MYH09 = new C.ConstantStringMap(A.Object_pPH, [A.TexSymbolConfig_sAj, A.TexSymbolConfig_JIB, A.TexSymbolConfig_Kjf, A.TexSymbolConfig_hf8, A.TexSymbolConfig_Rb2, A.TexSymbolConfig_xTp, A.TexSymbolConfig_v6K, A.TexSymbolConfig_nqA, A.TexSymbolConfig_gK2, A.TexSymbolConfig_jJE, A.TexSymbolConfig_KUP, A.TexSymbolConfig_wGY, A.TexSymbolConfig_4bt, A.TexSymbolConfig_DHc, A.TexSymbolConfig_agq, A.TexSymbolConfig_MTR, A.TexSymbolConfig_1FX, A.TexSymbolConfig_cZq, A.TexSymbolConfig_SJe, A.TexSymbolConfig_fBr, A.TexSymbolConfig_khi, A.TexSymbolConfig_Tk5, A.TexSymbolConfig_SYM, A.TexSymbolConfig_uNR, A.TexSymbolConfig_mSW, A.TexSymbolConfig_fGk, A.TexSymbolConfig_tU4, A.TexSymbolConfig_29i, A.TexSymbolConfig_jmd, A.TexSymbolConfig_ZTu, A.TexSymbolConfig_Grr, A.TexSymbolConfig_tuy, A.TexSymbolConfig_wau, A.TexSymbolConfig_sWu, A.TexSymbolConfig_Rie, A.TexSymbolConfig_a90, A.TexSymbolConfig_Q5K, A.TexSymbolConfig_0dD, A.TexSymbolConfig_nOB, A.TexSymbolConfig_Aej, A.TexSymbolConfig_ccx, A.TexSymbolConfig_Z3V, A.TexSymbolConfig_pur, A.TexSymbolConfig_OON, A.TexSymbolConfig_PZ2, A.TexSymbolConfig_LSU, A.TexSymbolConfig_vPH, A.TexSymbolConfig_u6o, A.TexSymbolConfig_Dwz, A.TexSymbolConfig_RSC, A.TexSymbolConfig_t9t, A.TexSymbolConfig_2CX, A.TexSymbolConfig_tXA, A.TexSymbolConfig_wbP, A.TexSymbolConfig_rOw, A.TexSymbolConfig_K5n, A.TexSymbolConfig_YsD, A.TexSymbolConfig_rp7, A.TexSymbolConfig_NWo, A.TexSymbolConfig_UO3, A.TexSymbolConfig_kkE, A.TexSymbolConfig_R8D, A.TexSymbolConfig_gRH, A.TexSymbolConfig_7a5, A.TexSymbolConfig_1Gr, A.TexSymbolConfig_g3R, A.TexSymbolConfig_fLI, A.TexSymbolConfig_61L, A.TexSymbolConfig_wxW, A.TexSymbolConfig_CDn, A.TexSymbolConfig_DqM, A.TexSymbolConfig_vlT, A.TexSymbolConfig_zni, A.TexSymbolConfig_nih, A.TexSymbolConfig_nO1, A.TexSymbolConfig_GiU, A.TexSymbolConfig_kwB, A.TexSymbolConfig_zCo, A.TexSymbolConfig_o9s, A.TexSymbolConfig_OGi, A.TexSymbolConfig_T2M, A.TexSymbolConfig_qnI, A.TexSymbolConfig_3Jy, A.TexSymbolConfig_D6s, A.TexSymbolConfig_7fW, A.TexSymbolConfig_ZV8, A.TexSymbolConfig_jWD, A.TexSymbolConfig_N8P, A.TexSymbolConfig_4vg, A.TexSymbolConfig_jZr, A.TexSymbolConfig_Luc, A.TexSymbolConfig_vNr, A.TexSymbolConfig_J4P, A.TexSymbolConfig_noL, A.TexSymbolConfig_pXh, A.TexSymbolConfig_ahV, A.TexSymbolConfig_4Td, A.TexSymbolConfig_zvd, A.TexSymbolConfig_oLh, A.TexSymbolConfig_w91, A.TexSymbolConfig_OLE, A.TexSymbolConfig_KUp, A.TexSymbolConfig_isu, A.TexSymbolConfig_Pr7, A.TexSymbolConfig_f87, A.TexSymbolConfig_11c, A.TexSymbolConfig_c4l, A.TexSymbolConfig_rLT, A.TexSymbolConfig_KNN, A.TexSymbolConfig_7Os, A.TexSymbolConfig_ZX1, A.TexSymbolConfig_RWQ, A.TexSymbolConfig_bnT, A.TexSymbolConfig_Ru5, A.TexSymbolConfig_JW9, A.TexSymbolConfig_1FU, A.TexSymbolConfig_oYS, A.TexSymbolConfig_idj, A.TexSymbolConfig_Vpa, A.TexSymbolConfig_i9Y, A.TexSymbolConfig_gV0, A.TexSymbolConfig_EdC, A.TexSymbolConfig_ZkC, A.TexSymbolConfig_IGr, A.TexSymbolConfig_iOE, A.TexSymbolConfig_W15, A.TexSymbolConfig_OLK, A.TexSymbolConfig_kFC, A.TexSymbolConfig_fj0, A.TexSymbolConfig_E4J, A.TexSymbolConfig_2VC, A.TexSymbolConfig_qCc, A.TexSymbolConfig_E8g, A.TexSymbolConfig_dVO, A.TexSymbolConfig_jIX, A.TexSymbolConfig_PEQ, A.TexSymbolConfig_Blp, A.TexSymbolConfig_ThN, A.TexSymbolConfig_cIV, A.TexSymbolConfig_KsT, A.TexSymbolConfig_51q, A.TexSymbolConfig_wUO, A.TexSymbolConfig_N08, A.TexSymbolConfig_eUw, A.TexSymbolConfig_2QM, A.TexSymbolConfig_zzW, A.TexSymbolConfig_ENJ, A.TexSymbolConfig_UfM, A.TexSymbolConfig_Rh9, A.TexSymbolConfig_WQc, A.TexSymbolConfig_AFn, A.TexSymbolConfig_2lE, A.TexSymbolConfig_aVu, A.TexSymbolConfig_Ufz, A.TexSymbolConfig_dey, A.TexSymbolConfig_ykG, A.TexSymbolConfig_oEp, A.TexSymbolConfig_yKn, A.TexSymbolConfig_inG, A.TexSymbolConfig_uza, A.TexSymbolConfig_CAN, A.TexSymbolConfig_33C, A.TexSymbolConfig_HOi, A.TexSymbolConfig_aze, A.TexSymbolConfig_qIS, A.TexSymbolConfig_kxf, A.TexSymbolConfig_ENE, A.TexSymbolConfig_kXi, A.TexSymbolConfig_KnO, A.TexSymbolConfig_Vxp, A.TexSymbolConfig_X91, A.TexSymbolConfig_sOO, A.TexSymbolConfig_F1w, A.TexSymbolConfig_yeL, A.TexSymbolConfig_mHP, A.TexSymbolConfig_wAU, A.TexSymbolConfig_rJe, A.TexSymbolConfig_SeH, A.TexSymbolConfig_EDb, A.TexSymbolConfig_jAY, A.TexSymbolConfig_6SW, A.TexSymbolConfig_rNB, A.TexSymbolConfig_0hz, A.TexSymbolConfig_5Go, A.TexSymbolConfig_7pe, A.TexSymbolConfig_CGr, A.TexSymbolConfig_LDZ, A.TexSymbolConfig_evQ, A.TexSymbolConfig_9cG, A.TexSymbolConfig_RT9, A.TexSymbolConfig_pWI, A.TexSymbolConfig_sL0, A.TexSymbolConfig_DKB, A.TexSymbolConfig_N2Y, A.TexSymbolConfig_MFT, A.TexSymbolConfig_ktx, A.TexSymbolConfig_n44, A.TexSymbolConfig_gnp, A.TexSymbolConfig_l27, A.TexSymbolConfig_lDd, A.TexSymbolConfig_UCq, A.TexSymbolConfig_Ejj, A.TexSymbolConfig_Q8n, A.TexSymbolConfig_WRN, A.TexSymbolConfig_HVQ, A.TexSymbolConfig_gwv, A.TexSymbolConfig_6h7, A.TexSymbolConfig_9MG, A.TexSymbolConfig_5X4, A.TexSymbolConfig_RWP, A.TexSymbolConfig_nM2, A.TexSymbolConfig_8OW, A.TexSymbolConfig_kH8, A.TexSymbolConfig_DHP, A.TexSymbolConfig_qS7, A.TexSymbolConfig_FmP, A.TexSymbolConfig_b9H, A.TexSymbolConfig_a2f, A.TexSymbolConfig_t1F, A.TexSymbolConfig_N9p, A.TexSymbolConfig_5cN, A.TexSymbolConfig_V1L, A.TexSymbolConfig_1ly, A.TexSymbolConfig_9lw, A.TexSymbolConfig_H2S, A.TexSymbolConfig_CW3, A.TexSymbolConfig_cVm, A.TexSymbolConfig_Agz, A.TexSymbolConfig_owZ, A.TexSymbolConfig_SpI, A.TexSymbolConfig_cOU, A.TexSymbolConfig_GTn, A.TexSymbolConfig_Z5Q, A.TexSymbolConfig_FNN, A.TexSymbolConfig_mVM, A.TexSymbolConfig_Wuk, A.TexSymbolConfig_XQC, A.TexSymbolConfig_9N0, A.TexSymbolConfig_PgS, A.TexSymbolConfig_ihK, A.TexSymbolConfig_rbG, A.TexSymbolConfig_su8, A.TexSymbolConfig_83F, A.TexSymbolConfig_bNJ, A.TexSymbolConfig_VWa, A.TexSymbolConfig_4VT, A.TexSymbolConfig_qsx, A.TexSymbolConfig_4ca, A.TexSymbolConfig_1Zh, A.TexSymbolConfig_Eyc, A.TexSymbolConfig_ogt, A.TexSymbolConfig_du3, A.TexSymbolConfig_s1V, A.TexSymbolConfig_jji, A.TexSymbolConfig_I9t, A.TexSymbolConfig_qgc, A.TexSymbolConfig_mTD, A.TexSymbolConfig_XO5, A.TexSymbolConfig_g0L, A.TexSymbolConfig_qJ1, A.TexSymbolConfig_K6f, A.TexSymbolConfig_bMJ, A.TexSymbolConfig_yRA, A.TexSymbolConfig_icu, A.TexSymbolConfig_APZ, A.TexSymbolConfig_yzR, A.TexSymbolConfig_mRX, A.TexSymbolConfig_iP7, A.TexSymbolConfig_hmL, A.TexSymbolConfig_l6Y, A.TexSymbolConfig_7oH, A.TexSymbolConfig_8HV, A.TexSymbolConfig_aNY, A.TexSymbolConfig_4Kk, A.TexSymbolConfig_Ple, A.TexSymbolConfig_wCA, A.TexSymbolConfig_dDd, A.TexSymbolConfig_cne, A.TexSymbolConfig_7Hd, A.TexSymbolConfig_1pE, A.TexSymbolConfig_97d, A.TexSymbolConfig_S8G, A.TexSymbolConfig_PWg, A.TexSymbolConfig_B4y, A.TexSymbolConfig_KWO, A.TexSymbolConfig_H9O, A.TexSymbolConfig_86o, A.TexSymbolConfig_kf5, A.TexSymbolConfig_6Ao, A.TexSymbolConfig_IWq, A.TexSymbolConfig_TWI, A.TexSymbolConfig_G2f, A.TexSymbolConfig_LvD, A.TexSymbolConfig_bvq, A.TexSymbolConfig_yCb, A.TexSymbolConfig_Bi9, A.TexSymbolConfig_ase, A.TexSymbolConfig_wxy, A.TexSymbolConfig_RVm, A.TexSymbolConfig_uxV, A.TexSymbolConfig_p4M, A.TexSymbolConfig_RWj, A.TexSymbolConfig_VdW, A.TexSymbolConfig_fwE, A.TexSymbolConfig_lE0, A.TexSymbolConfig_ie6, A.TexSymbolConfig_kwy, A.TexSymbolConfig_AUm, A.TexSymbolConfig_QWQ, A.TexSymbolConfig_dI7, A.TexSymbolConfig_AIj, A.TexSymbolConfig_lbA, A.TexSymbolConfig_1Yd, A.TexSymbolConfig_ztQ, A.TexSymbolConfig_dAE, A.TexSymbolConfig_bV5, A.TexSymbolConfig_m92, A.TexSymbolConfig_W3f, A.TexSymbolConfig_Yj0, A.TexSymbolConfig_bo9, A.TexSymbolConfig_Vkt, A.TexSymbolConfig_CTy, A.TexSymbolConfig_MHN, A.TexSymbolConfig_ZnX, A.TexSymbolConfig_sxS, A.TexSymbolConfig_WCC, A.TexSymbolConfig_wcx, A.TexSymbolConfig_uyv, A.TexSymbolConfig_I5t, A.TexSymbolConfig_QjH, A.TexSymbolConfig_uxw, A.TexSymbolConfig_njr, A.TexSymbolConfig_q6t, A.TexSymbolConfig_1Dq, A.TexSymbolConfig_jCK, A.TexSymbolConfig_o58, A.TexSymbolConfig_vgd, A.TexSymbolConfig_0Ma, A.TexSymbolConfig_ssk, A.TexSymbolConfig_Yas, A.TexSymbolConfig_rXF, A.TexSymbolConfig_yGr, A.TexSymbolConfig_a86, A.TexSymbolConfig_zEn, A.TexSymbolConfig_lqa, A.TexSymbolConfig_OJs, A.TexSymbolConfig_myC, A.TexSymbolConfig_6w8, A.TexSymbolConfig_hRK, A.TexSymbolConfig_wZD, A.TexSymbolConfig_D0C, A.TexSymbolConfig_0YU, A.TexSymbolConfig_1e8, A.TexSymbolConfig_wat, A.TexSymbolConfig_Q2z, A.TexSymbolConfig_Ewq, A.TexSymbolConfig_eup, A.TexSymbolConfig_G3M, A.TexSymbolConfig_ovp, A.TexSymbolConfig_G90, A.TexSymbolConfig_Coz, A.TexSymbolConfig_IzI, A.TexSymbolConfig_OFB, A.TexSymbolConfig_A_false_null, A.TexSymbolConfig_B_false_null, A.TexSymbolConfig_C_false_null, A.TexSymbolConfig_D_false_null, A.TexSymbolConfig_E_false_null, A.TexSymbolConfig_F_false_null, A.TexSymbolConfig_G_false_null, A.TexSymbolConfig_H_false_null, A.TexSymbolConfig_I_false_null, A.TexSymbolConfig_J_false_null, A.TexSymbolConfig_K_false_null, A.TexSymbolConfig_L_false_null, A.TexSymbolConfig_M_false_null, A.TexSymbolConfig_N_false_null, A.TexSymbolConfig_O_false_null, A.TexSymbolConfig_P_false_null, A.TexSymbolConfig_Q_false_null, A.TexSymbolConfig_R_false_null, A.TexSymbolConfig_S_false_null, A.TexSymbolConfig_T_false_null, A.TexSymbolConfig_U_false_null, A.TexSymbolConfig_V_false_null, A.TexSymbolConfig_W_false_null, A.TexSymbolConfig_X_false_null, A.TexSymbolConfig_Y_false_null, A.TexSymbolConfig_Z_false_null, A.TexSymbolConfig_a_false_null, A.TexSymbolConfig_b_false_null, A.TexSymbolConfig_c_false_null, A.TexSymbolConfig_d_false_null, A.TexSymbolConfig_e_false_null, A.TexSymbolConfig_f_false_null, A.TexSymbolConfig_g_false_null, A.TexSymbolConfig_h_false_null, A.TexSymbolConfig_i_false_null, A.TexSymbolConfig_j_false_null, A.TexSymbolConfig_k_false_null, A.TexSymbolConfig_l_false_null, A.TexSymbolConfig_m_false_null, A.TexSymbolConfig_n_false_null, A.TexSymbolConfig_o_false_null, A.TexSymbolConfig_p_false_null, A.TexSymbolConfig_q_false_null, A.TexSymbolConfig_r_false_null, A.TexSymbolConfig_s_false_null, A.TexSymbolConfig_t_false_null, A.TexSymbolConfig_u_false_null, A.TexSymbolConfig_v_false_null, A.TexSymbolConfig_w_false_null, A.TexSymbolConfig_x_false_null, A.TexSymbolConfig_y_false_null, A.TexSymbolConfig_z_false_null, A.TexSymbolConfig_XRQ, A.TexSymbolConfig_SJh, A.TexSymbolConfig_ukc, A.TexSymbolConfig_D32, A.TexSymbolConfig_BvH, A.TexSymbolConfig_0Bc, A.TexSymbolConfig_AKG, A.TexSymbolConfig_BIG, A.TexSymbolConfig_npA, A.TexSymbolConfig_ixl, A.TexSymbolConfig_kon, A.TexSymbolConfig_LJ1, A.TexSymbolConfig_un4, A.TexSymbolConfig_I3d, A.TexSymbolConfig_DH8, A.TexSymbolConfig_IaC, A.TexSymbolConfig_DOk, A.TexSymbolConfig_3zX, A.TexSymbolConfig_8fY, A.TexSymbolConfig_uu3, A.TexSymbolConfig_1RG, A.TexSymbolConfig_8Jk, A.TexSymbolConfig_jF2, A.TexSymbolConfig_8jC, A.TexSymbolConfig_rGE, A.TexSymbolConfig_tDo, A.TexSymbolConfig_tLg, A.TexSymbolConfig_Zb4, A.TexSymbolConfig_DIi, A.TexSymbolConfig_S14, A.TexSymbolConfig_zVj, A.TexSymbolConfig_ldr, A.TexSymbolConfig_43i, A.TexSymbolConfig_p15, A.TexSymbolConfig_HGM, A.TexSymbolConfig_LrS, A.TexSymbolConfig_5Gq, A.TexSymbolConfig_ZSe, A.TexSymbolConfig_LoS, A.TexSymbolConfig_6WB, A.TexSymbolConfig_N6G, A.TexSymbolConfig_Dza, A.TexSymbolConfig_amc, A.TexSymbolConfig_rV0, A.TexSymbolConfig_fG6, A.TexSymbolConfig_rQF, A.TexSymbolConfig_v2Z, A.TexSymbolConfig_MDq, A.TexSymbolConfig_qT4, A.TexSymbolConfig_Xt2, A.TexSymbolConfig_In5, A.TexSymbolConfig_Vid, A.TexSymbolConfig_17F, A.TexSymbolConfig_3TT, A.TexSymbolConfig_SxH, A.TexSymbolConfig_utH, A.TexSymbolConfig_H8e, A.TexSymbolConfig_E6q, A.TexSymbolConfig_mHs, A.TexSymbolConfig_xsj, A.TexSymbolConfig_fQm, A.TexSymbolConfig_llg, A.TexSymbolConfig_DLM, A.TexSymbolConfig_VfA, A.TexSymbolConfig_rbS, A.TexSymbolConfig_LrN, A.TexSymbolConfig_SSu, A.TexSymbolConfig_eVj, A.TexSymbolConfig_zHn, A.TexSymbolConfig_5pU, A.TexSymbolConfig_kRu, A.TexSymbolConfig_25b, A.TexSymbolConfig_xaj, A.TexSymbolConfig_7BP, A.TexSymbolConfig_CL4, A.TexSymbolConfig_bdG, A.TexSymbolConfig_r1p, A.TexSymbolConfig_mee, A.TexSymbolConfig_PqG, A.TexSymbolConfig_yhR, A.TexSymbolConfig_O07, A.TexSymbolConfig_BKa, A.TexSymbolConfig_UuM, A.TexSymbolConfig_mqF, A.TexSymbolConfig_1xU, A.TexSymbolConfig_Uhz, A.TexSymbolConfig_fWu, A.TexSymbolConfig_7ix, A.TexSymbolConfig_xsO, A.TexSymbolConfig_5Xn, A.TexSymbolConfig_pru, A.TexSymbolConfig_Mdw, A.TexSymbolConfig_BvD, A.TexSymbolConfig_giH, A.TexSymbolConfig_2rv, A.TexSymbolConfig_S1J, A.TexSymbolConfig_BuK, A.TexSymbolConfig_hXI, A.TexSymbolConfig_6XT, A.TexSymbolConfig_ahO, A.TexSymbolConfig_4ge, A.TexSymbolConfig_cna, A.TexSymbolConfig_hgs, A.TexSymbolConfig_U0u, A.TexSymbolConfig_PYo, A.TexSymbolConfig_usb, A.TexSymbolConfig_P8l, A.TexSymbolConfig_Gjv, A.TexSymbolConfig_3YP, A.TexSymbolConfig_OdH, A.TexSymbolConfig_uOB, A.TexSymbolConfig_kT1, A.TexSymbolConfig_Cvq, A.TexSymbolConfig_ykE, A.TexSymbolConfig_Dhd, A.TexSymbolConfig_TQG, A.TexSymbolConfig_eeV, A.TexSymbolConfig_w23, A.TexSymbolConfig_JDM, A.TexSymbolConfig_SDu, A.TexSymbolConfig_4jj, A.TexSymbolConfig_Uuq, A.TexSymbolConfig_azh, A.TexSymbolConfig_Ger, A.TexSymbolConfig_FCw, A.TexSymbolConfig_dAd, A.TexSymbolConfig_6ys, A.TexSymbolConfig_VY6, A.TexSymbolConfig_n8Q, A.TexSymbolConfig_Z5T, A.TexSymbolConfig_tcX, A.TexSymbolConfig_9Pd, A.TexSymbolConfig_7qW, A.TexSymbolConfig_4ck, A.TexSymbolConfig_48P, A.TexSymbolConfig_i2R, A.TexSymbolConfig_9Lz, A.TexSymbolConfig_8Tu, A.TexSymbolConfig_gmn, A.TexSymbolConfig_TCP, A.TexSymbolConfig_Bak, A.TexSymbolConfig_qfz, A.TexSymbolConfig_4kI, A.TexSymbolConfig_gX3, A.TexSymbolConfig_dVk, A.TexSymbolConfig_6Qc, A.TexSymbolConfig_cpd, A.TexSymbolConfig_2NA, A.TexSymbolConfig_oUS, A.TexSymbolConfig_trO, A.TexSymbolConfig_mP9, A.TexSymbolConfig_njn, A.TexSymbolConfig_fHV, A.TexSymbolConfig_4Hj, A.TexSymbolConfig_D10, A.TexSymbolConfig_mQ7, A.TexSymbolConfig_RBr, A.TexSymbolConfig_xMh, A.TexSymbolConfig_fnH, A.TexSymbolConfig_t7z, A.TexSymbolConfig_9zk, A.TexSymbolConfig_XPe, A.TexSymbolConfig_hLH, A.TexSymbolConfig_XzX, A.TexSymbolConfig_okO, A.TexSymbolConfig_ibN, A.TexSymbolConfig_8kL, A.TexSymbolConfig_vkz, A.TexSymbolConfig_yYW, A.TexSymbolConfig_MsQ, A.TexSymbolConfig_RVG, A.TexSymbolConfig_9DA, A.TexSymbolConfig_jq6, A.TexSymbolConfig_qP7, A.TexSymbolConfig_nCA, A.TexSymbolConfig_5vn, A.TexSymbolConfig_hcW, A.TexSymbolConfig_MGX, A.TexSymbolConfig_bIz, A.TexSymbolConfig_cPR, A.TexSymbolConfig_tbX, A.TexSymbolConfig_t9l, A.TexSymbolConfig_L4M, A.TexSymbolConfig_n9t, A.TexSymbolConfig_FiX, A.TexSymbolConfig_CAS, A.TexSymbolConfig_dsF, A.TexSymbolConfig_SKe, A.TexSymbolConfig_7DQ, A.TexSymbolConfig_QtG, A.TexSymbolConfig_MHm, A.TexSymbolConfig_f6t, A.TexSymbolConfig_J8t, A.TexSymbolConfig_RRK, A.TexSymbolConfig_Vvs, A.TexSymbolConfig_dhT, A.TexSymbolConfig_VQL, A.TexSymbolConfig_SC5, A.TexSymbolConfig_DTs, A.TexSymbolConfig_UZb, A.TexSymbolConfig_2Sd, A.TexSymbolConfig_OH5, A.TexSymbolConfig_6ql, A.TexSymbolConfig_GPg, A.TexSymbolConfig_R1J, A.TexSymbolConfig_dqr, A.TexSymbolConfig_pyS, A.TexSymbolConfig_cOy, A.TexSymbolConfig_Et6, A.TexSymbolConfig_kEr, A.TexSymbolConfig_5Pu, A.TexSymbolConfig_kmp, A.TexSymbolConfig_2pM, A.TexSymbolConfig_htn, A.TexSymbolConfig_KJU, A.TexSymbolConfig_N4X, A.TexSymbolConfig_8zq, A.TexSymbolConfig_xhi, A.TexSymbolConfig_WeI, A.TexSymbolConfig_oYX, A.TexSymbolConfig_oBD, A.TexSymbolConfig_xaK, A.TexSymbolConfig_inw, A.TexSymbolConfig_tFT, A.TexSymbolConfig_cWj, A.TexSymbolConfig_Vh7, A.TexSymbolConfig_D2d, A.TexSymbolConfig_1D5, A.TexSymbolConfig_qFl, A.TexSymbolConfig_oOD, A.TexSymbolConfig_nLg, A.TexSymbolConfig_rOQ, A.TexSymbolConfig_9Uz, A.TexSymbolConfig_3oW, A.TexSymbolConfig_Rqo, A.TexSymbolConfig_Mwp, A.TexSymbolConfig_yRb, A.TexSymbolConfig_LBz, A.TexSymbolConfig_eOR, A.TexSymbolConfig_Inm, A.TexSymbolConfig_YyP, A.TexSymbolConfig_IFq, A.TexSymbolConfig_O2L, A.TexSymbolConfig_sS6, A.TexSymbolConfig_DKW, A.TexSymbolConfig_WZi, A.TexSymbolConfig_NW5, A.TexSymbolConfig_5Qk, A.TexSymbolConfig_mQp, A.TexSymbolConfig_Lp5, A.TexSymbolConfig_6cM, A.TexSymbolConfig_bVG, A.TexSymbolConfig_eBF, A.TexSymbolConfig_6Ad, A.TexSymbolConfig_xU8, A.TexSymbolConfig_h7l, A.TexSymbolConfig_1mL, A.TexSymbolConfig_STb, A.TexSymbolConfig_3AX, A.TexSymbolConfig_mER, A.TexSymbolConfig_eOC, A.TexSymbolConfig_99l, A.TexSymbolConfig_BKZ, A.TexSymbolConfig_bw4, A.TexSymbolConfig_E5u, A.TexSymbolConfig_etr, A.TexSymbolConfig_LAT, A.TexSymbolConfig_fIw, A.TexSymbolConfig_jjp, A.TexSymbolConfig_CR3, A.TexSymbolConfig_qNo, A.TexSymbolConfig_EFm, A.TexSymbolConfig_M80, A.TexSymbolConfig_7z7, A.TexSymbolConfig_9pK, A.TexSymbolConfig_HC6, A.TexSymbolConfig_ZVV, A.TexSymbolConfig_9uT, A.TexSymbolConfig_o0I, A.TexSymbolConfig_MwN, A.TexSymbolConfig_EPs, A.TexSymbolConfig_Set, A.TexSymbolConfig_3Ba, A.TexSymbolConfig_WHI, A.TexSymbolConfig_YDi, A.TexSymbolConfig_cRl, A.TexSymbolConfig_BiP, A.TexSymbolConfig_pd6, A.TexSymbolConfig_ZxO, A.TexSymbolConfig_XWx, A.TexSymbolConfig_inG0, A.TexSymbolConfig_BDK, A.TexSymbolConfig_Kri, A.TexSymbolConfig_wII, A.TexSymbolConfig_yF5, A.TexSymbolConfig_lN4, A.TexSymbolConfig_pPh, A.TexSymbolConfig_5Pi, A.TexSymbolConfig_vuM, A.TexSymbolConfig_LkM, A.TexSymbolConfig_KEQ, A.TexSymbolConfig_dg8, A.TexSymbolConfig_pWx, A.TexSymbolConfig_BZa, A.TexSymbolConfig_yUu, A.TexSymbolConfig_DT6, A.TexSymbolConfig_F1O, A.TexSymbolConfig_Klo, A.TexSymbolConfig_wQn, A.TexSymbolConfig_YPx, A.TexSymbolConfig_uQw, A.TexSymbolConfig_SlJ, A.TexSymbolConfig_rlX, A.TexSymbolConfig_tRJ, A.TexSymbolConfig_Oqf, A.TexSymbolConfig_6V5, A.TexSymbolConfig_f0p, A.TexSymbolConfig_2hA, A.TexSymbolConfig_lr4, A.TexSymbolConfig_bMa, A.TexSymbolConfig_BWw, A.TexSymbolConfig_qFh, A.TexSymbolConfig_phT, A.TexSymbolConfig_pyb, A.TexSymbolConfig_r5C, A.TexSymbolConfig_iSQ, A.TexSymbolConfig_irg, A.TexSymbolConfig_vvl, A.TexSymbolConfig_GMf, A.TexSymbolConfig_Yq4, A.TexSymbolConfig_B93, A.TexSymbolConfig_JTC, A.TexSymbolConfig_bLN, A.TexSymbolConfig_F3z, A.TexSymbolConfig_FB9, A.TexSymbolConfig_v3q, A.TexSymbolConfig_3zs, A.TexSymbolConfig_JSR, A.TexSymbolConfig_pJU, A.TexSymbolConfig_unp, A.TexSymbolConfig_3Jq, A.TexSymbolConfig_8jX, A.TexSymbolConfig_oil, A.TexSymbolConfig_cEe, A.TexSymbolConfig_Yuu, A.TexSymbolConfig_zIf, A.TexSymbolConfig_28O, A.TexSymbolConfig_s3I, A.TexSymbolConfig_MsW, A.TexSymbolConfig_EUx, A.TexSymbolConfig_kfR, A.TexSymbolConfig_JbZ, A.TexSymbolConfig_QY8, A.TexSymbolConfig_noM, A.TexSymbolConfig_AG9, A.TexSymbolConfig_SZD, A.TexSymbolConfig_sWv, A.TexSymbolConfig_OmY, A.TexSymbolConfig_hWH, A.TexSymbolConfig_daS, A.TexSymbolConfig_JGA, A.TexSymbolConfig_xi1, A.TexSymbolConfig_VEM, A.TexSymbolConfig_ZdH, A.TexSymbolConfig_Cva, A.TexSymbolConfig_fF7, A.TexSymbolConfig_yM2, A.TexSymbolConfig_16r, A.TexSymbolConfig_AgP, A.TexSymbolConfig_v6d, A.TexSymbolConfig_bOp, A.TexSymbolConfig_sDa, A.TexSymbolConfig_XwA, A.TexSymbolConfig_X4k, A.TexSymbolConfig_vlK, A.TexSymbolConfig_UyA, A.TexSymbolConfig_hVI, A.TexSymbolConfig_L3s, A.TexSymbolConfig_Up0, A.TexSymbolConfig_fLF, A.TexSymbolConfig_Oa3, A.TexSymbolConfig_MZt, A.TexSymbolConfig_eXT, A.TexSymbolConfig_rPj, A.TexSymbolConfig_mmc, A.TexSymbolConfig_fvM, A.TexSymbolConfig_LyV, A.TexSymbolConfig_egV, A.TexSymbolConfig_ZVG, A.TexSymbolConfig_bo0, A.TexSymbolConfig_DGy, A.TexSymbolConfig_hRX, A.TexSymbolConfig_j5E, A.TexSymbolConfig_MJg, A.TexSymbolConfig_6Lu, A.TexSymbolConfig_XFJ, A.TexSymbolConfig_Adg, A.TexSymbolConfig_pfz, A.TexSymbolConfig_sZ8, A.TexSymbolConfig_LYn, A.TexSymbolConfig_uOn, A.TexSymbolConfig_WET, A.TexSymbolConfig_vzo, A.TexSymbolConfig_Aay, A.TexSymbolConfig_CuN, A.TexSymbolConfig_tLS, A.TexSymbolConfig_WJG, A.TexSymbolConfig_SDj, A.TexSymbolConfig_3D4, A.TexSymbolConfig_meu, A.TexSymbolConfig_VHn, A.TexSymbolConfig_pNX, A.TexSymbolConfig_Wn8, A.TexSymbolConfig_b8h, A.TexSymbolConfig_l7O, A.TexSymbolConfig_NlT, A.TexSymbolConfig_c4R, A.TexSymbolConfig_J7p, A.TexSymbolConfig_xLv, A.TexSymbolConfig_QCJ, A.TexSymbolConfig_KaP, A.TexSymbolConfig_iwZ, A.TexSymbolConfig_4Zp, A.TexSymbolConfig_NqZ, A.TexSymbolConfig_nC9, A.TexSymbolConfig_yAg, A.TexSymbolConfig_tix, A.TexSymbolConfig_u4w, A.TexSymbolConfig_GBv, A.TexSymbolConfig_WLk, A.TexSymbolConfig_ynQ, A.TexSymbolConfig_w8J, A.TexSymbolConfig_YMY, A.TexSymbolConfig_Xrg, A.TexSymbolConfig_9Ei, A.TexSymbolConfig_eSJ, A.TexSymbolConfig_DVX, A.TexSymbolConfig_lJc, A.TexSymbolConfig_v2W, A.TexSymbolConfig_Iun, A.TexSymbolConfig_g9W, A.TexSymbolConfig_nfb, A.TexSymbolConfig_WB0, A.TexSymbolConfig_qeA, A.TexSymbolConfig_fG0, A.TexSymbolConfig_wwT, A.TexSymbolConfig_18C, A.TexSymbolConfig_EFB, A.TexSymbolConfig_Myn, A.TexSymbolConfig_1XY, A.TexSymbolConfig_70y, A.TexSymbolConfig_8cz, A.TexSymbolConfig_9Ag, A.TexSymbolConfig_mQx, A.TexSymbolConfig_7kw, A.TexSymbolConfig_PCr, A.TexSymbolConfig_kod, A.TexSymbolConfig_iAa, A.TexSymbolConfig_pDO, A.TexSymbolConfig_Yon, A.TexSymbolConfig_b8M, A.TexSymbolConfig_fq5, A.TexSymbolConfig_VHH, A.TexSymbolConfig_LRz, A.TexSymbolConfig_SHa, A.TexSymbolConfig_6cJ, A.TexSymbolConfig_HFP, A.TexSymbolConfig_Lfp, A.TexSymbolConfig_6VK, A.TexSymbolConfig_5RE, A.TexSymbolConfig_RDo, A.TexSymbolConfig_JoQ, A.TexSymbolConfig_f8o, A.TexSymbolConfig_TYO, A.TexSymbolConfig_ouX, A.TexSymbolConfig_8pc, A.TexSymbolConfig_VBv, A.TexSymbolConfig_NWc, A.TexSymbolConfig_A1i, A.TexSymbolConfig_EM4, A.TexSymbolConfig_ISp, A.TexSymbolConfig_mjk, A.TexSymbolConfig_uEx, A.TexSymbolConfig_te9, A.TexSymbolConfig_Pon, A.TexSymbolConfig_VRk, A.TexSymbolConfig_op1, A.TexSymbolConfig_UUf, A.TexSymbolConfig_iqn, A.TexSymbolConfig_Uhg, A.TexSymbolConfig_p73, A.TexSymbolConfig_8gs, A.TexSymbolConfig_O2x, A.TexSymbolConfig_185, A.TexSymbolConfig_MQ4, A.TexSymbolConfig_KnC, A.TexSymbolConfig_Edq, A.TexSymbolConfig_DJa, A.TexSymbolConfig_ffx, A.TexSymbolConfig_3ir, A.TexSymbolConfig_3s9, A.TexSymbolConfig_BDM, A.TexSymbolConfig_KRD, A.TexSymbolConfig_Hl4, A.TexSymbolConfig_su5, A.TexSymbolConfig_SJb, A.TexSymbolConfig_u9Q, A.TexSymbolConfig_zWB, A.TexSymbolConfig_Bav, A.TexSymbolConfig_iYT, A.TexSymbolConfig_cAz, A.TexSymbolConfig_Gbi, A.TexSymbolConfig_UNd, A.TexSymbolConfig_V4z, A.TexSymbolConfig_Ztu, A.TexSymbolConfig_PfV, A.TexSymbolConfig_hY2, A.TexSymbolConfig_pRY, A.TexSymbolConfig_8AK, A.TexSymbolConfig_KYo, A.TexSymbolConfig_5FU, A.TexSymbolConfig_eh3, A.TexSymbolConfig_RVb, A.TexSymbolConfig_61m, A.TexSymbolConfig_KUP, A.TexSymbolConfig_wGY, A.TexSymbolConfig_4bt, A.TexSymbolConfig_DHc, A.TexSymbolConfig_agq, A.TexSymbolConfig_MTR, A.TexSymbolConfig_1FX, A.TexSymbolConfig_cZq, A.TexSymbolConfig_SJe, A.TexSymbolConfig_fBr, A.TexSymbolConfig_khi, A.TexSymbolConfig_Tk5, A.TexSymbolConfig_SYM, A.TexSymbolConfig_uNR, A.TexSymbolConfig_mSW, A.TexSymbolConfig_fGk, A.TexSymbolConfig_tU4, A.TexSymbolConfig_29i, A.TexSymbolConfig_jmd, A.TexSymbolConfig_ZTu, A.TexSymbolConfig_Grr, A.TexSymbolConfig_29i, A.TexSymbolConfig_rff, A.TexSymbolConfig_J3m, A.TexSymbolConfig_tuy, A.TexSymbolConfig_wau, A.TexSymbolConfig_sWu, A.TexSymbolConfig_Rie, A.TexSymbolConfig_a90, A.TexSymbolConfig_Q5K, A.TexSymbolConfig_0dD, A.TexSymbolConfig_nOB, A.TexSymbolConfig_Aej, A.TexSymbolConfig_ccx, A.TexSymbolConfig_Z3V, A.TexSymbolConfig_pur, A.TexSymbolConfig_OON, A.TexSymbolConfig_PZ2, A.TexSymbolConfig_LSU, A.TexSymbolConfig_vPH, A.TexSymbolConfig_u6o, A.TexSymbolConfig_Dwz, A.TexSymbolConfig_RSC, A.TexSymbolConfig_t9t, A.TexSymbolConfig_2CX, A.TexSymbolConfig_tXA, A.TexSymbolConfig_wbP, A.TexSymbolConfig_rOw, A.TexSymbolConfig_LvD, A.TexSymbolConfig_K5n, A.TexSymbolConfig_YsD, A.TexSymbolConfig_rp7, A.TexSymbolConfig_NWo, A.TexSymbolConfig_UO3, A.TexSymbolConfig_kkE, A.TexSymbolConfig_R8D, A.TexSymbolConfig_gRH, A.TexSymbolConfig_7a5, A.TexSymbolConfig_1Gr, A.TexSymbolConfig_g3R, A.TexSymbolConfig_fLI, A.TexSymbolConfig_61L, A.TexSymbolConfig_wxW, A.TexSymbolConfig_CDn, A.TexSymbolConfig_DqM, A.TexSymbolConfig_vlT, A.TexSymbolConfig_zni, A.TexSymbolConfig_nih, A.TexSymbolConfig_nO1, A.TexSymbolConfig_GiU, A.TexSymbolConfig_kwB, A.TexSymbolConfig_zCo, A.TexSymbolConfig_o9s, A.TexSymbolConfig_OGi, A.TexSymbolConfig_T2M, A.TexSymbolConfig_IyD, A.TexSymbolConfig_1EK, A.TexSymbolConfig_qnI, A.TexSymbolConfig_3Jy, A.TexSymbolConfig_XYu, A.TexSymbolConfig_D6s, A.TexSymbolConfig_7fW, A.TexSymbolConfig_ZV8, A.TexSymbolConfig_jWD, A.TexSymbolConfig_N8P, A.TexSymbolConfig_4vg, A.TexSymbolConfig_jZr, A.TexSymbolConfig_vpw, A.TexSymbolConfig_Luc, A.TexSymbolConfig_vNr, A.TexSymbolConfig_J4P, A.TexSymbolConfig_noL, A.TexSymbolConfig_pXh, A.TexSymbolConfig_pL9, A.TexSymbolConfig_ahV, A.TexSymbolConfig_1it, A.TexSymbolConfig_4Td, A.TexSymbolConfig_Hbj, A.TexSymbolConfig_SeO, A.TexSymbolConfig_zvd, A.TexSymbolConfig_oLh, A.TexSymbolConfig_r7L, A.TexSymbolConfig_w91, A.TexSymbolConfig_OLE, A.TexSymbolConfig_KUp, A.TexSymbolConfig_isu, A.TexSymbolConfig_Pr7, A.TexSymbolConfig_f87, A.TexSymbolConfig_11c, A.TexSymbolConfig_Osn, A.TexSymbolConfig_c4l, A.TexSymbolConfig_rLT, A.TexSymbolConfig_KNN, A.TexSymbolConfig_AIY, A.TexSymbolConfig_7Os, A.TexSymbolConfig_pv3, A.TexSymbolConfig_ZX1, A.TexSymbolConfig_pkm, A.TexSymbolConfig_RWQ, A.TexSymbolConfig_bnT, A.TexSymbolConfig_Ru5, A.TexSymbolConfig_Url, A.TexSymbolConfig_JW9, A.TexSymbolConfig_1FU, A.TexSymbolConfig_oYS, A.TexSymbolConfig_idj, A.TexSymbolConfig_Vpa, A.TexSymbolConfig_i9Y, A.TexSymbolConfig_uT8, A.TexSymbolConfig_gV0, A.TexSymbolConfig_EdC, A.TexSymbolConfig_ZkC, A.TexSymbolConfig_IGr, A.TexSymbolConfig_iOE, A.TexSymbolConfig_W15, A.TexSymbolConfig_OLK, A.TexSymbolConfig_kFC, A.TexSymbolConfig_fj0, A.TexSymbolConfig_E4J, A.TexSymbolConfig_2VC, A.TexSymbolConfig_qCc, A.TexSymbolConfig_UOx, A.TexSymbolConfig_rMp, A.TexSymbolConfig_EJh, A.TexSymbolConfig_Ngf, A.TexSymbolConfig_Blp, A.TexSymbolConfig_ThN, A.TexSymbolConfig_cIV, A.TexSymbolConfig_KsT, A.TexSymbolConfig_51q, A.TexSymbolConfig_wUO, A.TexSymbolConfig_N08, A.TexSymbolConfig_eUw, A.TexSymbolConfig_2QM, A.TexSymbolConfig_zzW, A.TexSymbolConfig_LDZ, A.TexSymbolConfig_ENJ, A.TexSymbolConfig_UfM, A.TexSymbolConfig_Rh9, A.TexSymbolConfig_WQc, A.TexSymbolConfig_AFn, A.TexSymbolConfig_2lE, A.TexSymbolConfig_aVu, A.TexSymbolConfig_Ufz, A.TexSymbolConfig_dey, A.TexSymbolConfig_ykG, A.TexSymbolConfig_oEp, A.TexSymbolConfig_yKn, A.TexSymbolConfig_inG, A.TexSymbolConfig_80p, A.TexSymbolConfig_h1n, A.TexSymbolConfig_uza, A.TexSymbolConfig_CAN, A.TexSymbolConfig_33C, A.TexSymbolConfig_HOi, A.TexSymbolConfig_aze, A.TexSymbolConfig_qIS, A.TexSymbolConfig_kxf, A.TexSymbolConfig_ENE, A.TexSymbolConfig_kXi, A.TexSymbolConfig_KnO, A.TexSymbolConfig_Vxp, A.TexSymbolConfig_X91, A.TexSymbolConfig_sOO, A.TexSymbolConfig_F1w, A.TexSymbolConfig_xjG, A.TexSymbolConfig_hfo, A.TexSymbolConfig_yeL, A.TexSymbolConfig_mHP, A.TexSymbolConfig_wAU, A.TexSymbolConfig_rJe, A.TexSymbolConfig_SeH, A.TexSymbolConfig_EDb, A.TexSymbolConfig_jAY, A.TexSymbolConfig_6SW, A.TexSymbolConfig_ou2, A.TexSymbolConfig_rNB, A.TexSymbolConfig_0hz, A.TexSymbolConfig_17u, A.TexSymbolConfig_5Go, A.TexSymbolConfig_7pe, A.TexSymbolConfig_N08, A.TexSymbolConfig_ENE, A.TexSymbolConfig_CGr, A.TexSymbolConfig_Tk5, A.TexSymbolConfig_LDZ, A.TexSymbolConfig_evQ, A.TexSymbolConfig_9cG, A.TexSymbolConfig_RT9, A.TexSymbolConfig_pWI, A.TexSymbolConfig_sL0, A.TexSymbolConfig_DKB, A.TexSymbolConfig_N2Y, A.TexSymbolConfig_MFT, A.TexSymbolConfig_ktx, A.TexSymbolConfig_n44, A.TexSymbolConfig_gnp, A.TexSymbolConfig_l27, A.TexSymbolConfig_lDd, A.TexSymbolConfig_UCq, A.TexSymbolConfig_Ejj, A.TexSymbolConfig_DBB, A.TexSymbolConfig_Q8n, A.TexSymbolConfig_9cG, A.TexSymbolConfig_RT9, A.TexSymbolConfig_WRN, A.TexSymbolConfig_HVQ, A.TexSymbolConfig_gwv, A.TexSymbolConfig_6h7, A.TexSymbolConfig_9MG, A.TexSymbolConfig_5X4, A.TexSymbolConfig_RWP, A.TexSymbolConfig_nM2, A.TexSymbolConfig_8OW, A.TexSymbolConfig_kH8, A.TexSymbolConfig_DHP, A.TexSymbolConfig_qS7, A.TexSymbolConfig_FmP, A.TexSymbolConfig_b9H, A.TexSymbolConfig_a2f, A.TexSymbolConfig_t1F, A.TexSymbolConfig_N9p, A.TexSymbolConfig_5cN, A.TexSymbolConfig_V1L, A.TexSymbolConfig_1ly, A.TexSymbolConfig_9lw, A.TexSymbolConfig_H2S, A.TexSymbolConfig_CW3, A.TexSymbolConfig_cVm, A.TexSymbolConfig_Agz, A.TexSymbolConfig_owZ, A.TexSymbolConfig_SpI, A.TexSymbolConfig_cOU, A.TexSymbolConfig_GTn, A.TexSymbolConfig_Z5Q, A.TexSymbolConfig_Z5Q, A.TexSymbolConfig_FNN, A.TexSymbolConfig_cOU, A.TexSymbolConfig_Wuk, A.TexSymbolConfig_XQC, A.TexSymbolConfig_9N0, A.TexSymbolConfig_PgS, A.TexSymbolConfig_ihK, A.TexSymbolConfig_rbG, A.TexSymbolConfig_su8, A.TexSymbolConfig_83F, A.TexSymbolConfig_bNJ, A.TexSymbolConfig_VWa, A.TexSymbolConfig_4VT, A.TexSymbolConfig_qsx, A.TexSymbolConfig_4ca, A.TexSymbolConfig_bMJ, A.TexSymbolConfig_bMJ, A.TexSymbolConfig_yRA, A.TexSymbolConfig_icu, A.TexSymbolConfig_APZ, A.TexSymbolConfig_yzR, A.TexSymbolConfig_mRX, A.TexSymbolConfig_iP7, A.TexSymbolConfig_hmL, A.TexSymbolConfig_l6Y, A.TexSymbolConfig_7oH, A.TexSymbolConfig_8HV, A.TexSymbolConfig_aNY, A.TexSymbolConfig_4Kk, A.TexSymbolConfig_Ple, A.TexSymbolConfig_wCA, A.TexSymbolConfig_dDd, A.TexSymbolConfig_cne, A.TexSymbolConfig_7Hd, A.TexSymbolConfig_1pE, A.TexSymbolConfig_97d, A.TexSymbolConfig_S8G, A.TexSymbolConfig_PWg, A.TexSymbolConfig_B4y, A.TexSymbolConfig_KWO, A.TexSymbolConfig_H9O, A.TexSymbolConfig_86o, A.TexSymbolConfig_kf5, A.TexSymbolConfig_6Ao, A.TexSymbolConfig_IWq, A.TexSymbolConfig_TWI, A.TexSymbolConfig_G2f, A.TexSymbolConfig_Bi9, A.TexSymbolConfig_ase, A.TexSymbolConfig_wxy, A.TexSymbolConfig_RVm, A.TexSymbolConfig_uxV, A.TexSymbolConfig_p4M, A.TexSymbolConfig_RWj, A.TexSymbolConfig_VdW, A.TexSymbolConfig_RWj, A.TexSymbolConfig_VdW, A.TexSymbolConfig_ie6, A.TexSymbolConfig_Ith, A.TexSymbolConfig_AIj, A.TexSymbolConfig_ITf, A.TexSymbolConfig_bV5, A.TexSymbolConfig_m92, A.TexSymbolConfig_W3f, A.TexSymbolConfig_W3f, A.TexSymbolConfig_WCC, A.TexSymbolConfig_ztQ, A.TexSymbolConfig_Yj0, A.TexSymbolConfig_bo9, A.TexSymbolConfig_Vkt, A.TexSymbolConfig_CTy, A.TexSymbolConfig_MHN, A.TexSymbolConfig_ZnX, A.TexSymbolConfig_sxS, A.TexSymbolConfig_37C, A.TexSymbolConfig_WCC, A.TexSymbolConfig_wcx, A.TexSymbolConfig_wcx, A.TexSymbolConfig_1Yd, A.TexSymbolConfig_uyv, A.TexSymbolConfig_uyv, A.TexSymbolConfig_I5t, A.TexSymbolConfig_QjH, A.TexSymbolConfig_61m, A.TexSymbolConfig_RVb, A.TexSymbolConfig_61m, A.TexSymbolConfig_RVb, A.TexSymbolConfig_q6t, A.TexSymbolConfig_1Dq, A.TexSymbolConfig_jCK, A.TexSymbolConfig_o58, A.TexSymbolConfig_vgd, A.TexSymbolConfig_0Ma, A.TexSymbolConfig_ssk, A.TexSymbolConfig_Yas, A.TexSymbolConfig_rXF, A.TexSymbolConfig_lE0, A.TexSymbolConfig_AUm, A.TexSymbolConfig_fwE, A.TexSymbolConfig_kwy, A.TexSymbolConfig_yGr, A.TexSymbolConfig_a86, A.TexSymbolConfig_zEn, A.TexSymbolConfig_lqa, A.TexSymbolConfig_hqG, A.TexSymbolConfig_myC, A.TexSymbolConfig_6w8, A.TexSymbolConfig_hRK, A.TexSymbolConfig_wZD, A.TexSymbolConfig_D0C, A.TexSymbolConfig_0YU, A.TexSymbolConfig_1e8, A.TexSymbolConfig_1e8, A.TexSymbolConfig_wat, A.TexSymbolConfig_Q2z, A.TexSymbolConfig_Ewq, A.TexSymbolConfig_eup, A.TexSymbolConfig_G3M, A.TexSymbolConfig_ovp, A.TexSymbolConfig_ovp, A.TexSymbolConfig_lsF, A.TexSymbolConfig_pRQ, A.TexSymbolConfig_lJU, A.TexSymbolConfig_1w0, A.TexSymbolConfig_Cku, A.TexSymbolConfig_u10, A.TexSymbolConfig_Wuu, A.TexSymbolConfig_Wuu, A.TexSymbolConfig_VjA, A.TexSymbolConfig_qfX, A.TexSymbolConfig_cQK, A.TexSymbolConfig_kFA, A.TexSymbolConfig_G16, A.TexSymbolConfig_AgW, A.TexSymbolConfig_QE6, A.TexSymbolConfig_Fzw, A.TexSymbolConfig_iKT, A.TexSymbolConfig_03I, A.TexSymbolConfig_frX, A.TexSymbolConfig_Vd4, A.TexSymbolConfig_qmh, A.TexSymbolConfig_txU, A.TexSymbolConfig_c9E, A.TexSymbolConfig_arS, A.TexSymbolConfig_SvB, A.TexSymbolConfig_aN2, A.TexSymbolConfig_zr2, A.TexSymbolConfig_eL8, A.TexSymbolConfig_Lyp, A.TexSymbolConfig_0Kh, A.TexSymbolConfig_0Kh, A.TexSymbolConfig_kU3, A.TexSymbolConfig_j1j, A.TexSymbolConfig_fvF, A.TexSymbolConfig_jB1, A.TexSymbolConfig_ruq, A.TexSymbolConfig_GKn, A.TexSymbolConfig_MOw, A.TexSymbolConfig_cjT, A.TexSymbolConfig_nVm, A.TexSymbolConfig_Iu8, A.TexSymbolConfig_Jjf, A.TexSymbolConfig_CTv, A.TexSymbolConfig_ZZz, A.TexSymbolConfig_ZZz, A.TexSymbolConfig_Drn, A.TexSymbolConfig_Z1i, A.TexSymbolConfig_PQq, A.TexSymbolConfig_C8s, A.TexSymbolConfig_OvW, A.TexSymbolConfig_P2y, A.TexSymbolConfig_wKD, A.TexSymbolConfig_N0R, A.TexSymbolConfig_mDn, A.TexSymbolConfig_GKw, A.TexSymbolConfig_wEt, A.TexSymbolConfig_spO, A.TexSymbolConfig_$_false_null, A.TexSymbolConfig_Gdt, A.TexSymbolConfig___false_null, A.TexSymbolConfig_HTp, A.TexSymbolConfig_9EO, A.TexSymbolConfig_fBG, A.TexSymbolConfig_VdG, A.TexSymbolConfig_Kbv, A.TexSymbolConfig_27R, A.TexSymbolConfig_JOd, A.TexSymbolConfig_Txq, A.TexSymbolConfig_EHy, A.TexSymbolConfig_bJN, A.TexSymbolConfig_FRn, A.TexSymbolConfig_P7D, A.TexSymbolConfig_P7D, A.TexSymbolConfig_19L, A.TexSymbolConfig_19L, A.TexSymbolConfig_6Tf, A.TexSymbolConfig_b0P, A.TexSymbolConfig_PDX, A.TexSymbolConfig_tYh, A.TexSymbolConfig_250, A.TexSymbolConfig_BmC, A.TexSymbolConfig_veX, A.TexSymbolConfig_dmO, A.TexSymbolConfig_dmO, A.TexSymbolConfig_dmO, A.TexSymbolConfig_23M, A.TexSymbolConfig_AuU, A.TexSymbolConfig_k9E, A.TexSymbolConfig_2ps, A.TexSymbolConfig_mLy, A.TexSymbolConfig_YLA, A.TexSymbolConfig_oEa, A.TexSymbolConfig_E9t, A.TexSymbolConfig_STd, A.TexSymbolConfig_fyP, A.TexSymbolConfig_MXs, A.TexSymbolConfig_ujq, A.TexSymbolConfig_UAC, A.TexSymbolConfig_Jqm, A.TexSymbolConfig_ot1, A.TexSymbolConfig_r4v, A.TexSymbolConfig_ClT, A.TexSymbolConfig_hu9, A.TexSymbolConfig_RHL, A.TexSymbolConfig_nBu, A.TexSymbolConfig_m1W, A.TexSymbolConfig_FTA, A.TexSymbolConfig_7LH, A.TexSymbolConfig_eld, A.TexSymbolConfig_6ua, A.TexSymbolConfig_ZUy, A.TexSymbolConfig_I4M, A.TexSymbolConfig_6F3, A.TexSymbolConfig_S55, A.TexSymbolConfig_WiO, A.TexSymbolConfig_8jl, A.TexSymbolConfig_ieb, A.TexSymbolConfig_Jqm0, A.TexSymbolConfig_8jl, A.TexSymbolConfig_ieb, A.TexSymbolConfig_Jqm0, A.TexSymbolConfig_MYn, A.TexSymbolConfig_nD7, A.TexSymbolConfig_V95, A.TexSymbolConfig_ELi, A.TexSymbolConfig_6wT, A.TexSymbolConfig_p2K, A.TexSymbolConfig_JKK, A.TexSymbolConfig_Gj3, A.TexSymbolConfig_jXd], type$.ConstantStringMap_String_TexSymbolConfig);
    A.Object_LTu = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "\xa7": 10, "\xb6": 11, "\xa5": 12, "\u2026": 13, "\u0131": 14, "\u0237": 15, "\xdf": 16, "\xe6": 17, "\u0153": 18, "\xf8": 19, "\xc6": 20, "\u0152": 21, "\xd8": 22, "`": 23, "'": 24, "\xb0": 25, "\xa3": 26, " ": 27, "!": 28, "@": 29, "*": 30, "(": 31, ")": 32, "-": 33, "=": 34, "+": 35, "[": 36, "]": 37, "<": 38, ">": 39, "|": 40, '"': 41, ";": 42, ":": 43, "?": 44, "/": 45, ".": 46, ",": 47, A: 48, B: 49, C: 50, D: 51, E: 52, F: 53, G: 54, H: 55, I: 56, J: 57, K: 58, L: 59, M: 60, N: 61, O: 62, P: 63, Q: 64, R: 65, S: 66, T: 67, U: 68, V: 69, W: 70, X: 71, Y: 72, Z: 73, a: 74, b: 75, c: 76, d: 77, e: 78, f: 79, g: 80, h: 81, i: 82, j: 83, k: 84, l: 85, m: 86, n: 87, o: 88, p: 89, q: 90, r: 91, s: 92, t: 93, u: 94, v: 95, w: 96, x: 97, y: 98, z: 99, "\u2102": 100, "\u210d": 101, "\u2115": 102, "\u2119": 103, "\u211a": 104, "\u211d": 105, "\u2124": 106, "\u210e": 107, "\ud835\udc00": 108, "\ud835\udc34": 109, "\ud835\udc68": 110, "\ud835\udd04": 111, "\ud835\udda0": 112, "\ud835\uddd4": 113, "\ud835\ude08": 114, "\ud835\ude70": 115, "\ud835\udd38": 116, "\ud835\udc9c": 117, "\ud835\udc01": 118, "\ud835\udc35": 119, "\ud835\udc69": 120, "\ud835\udd05": 121, "\ud835\udda1": 122, "\ud835\uddd5": 123, "\ud835\ude09": 124, "\ud835\ude71": 125, "\ud835\udd39": 126, "\ud835\udc9d": 127, "\ud835\udc02": 128, "\ud835\udc36": 129, "\ud835\udc6a": 130, "\ud835\udd06": 131, "\ud835\udda2": 132, "\ud835\uddd6": 133, "\ud835\ude0a": 134, "\ud835\ude72": 135, "\ud835\udd3a": 136, "\ud835\udc9e": 137, "\ud835\udc03": 138, "\ud835\udc37": 139, "\ud835\udc6b": 140, "\ud835\udd07": 141, "\ud835\udda3": 142, "\ud835\uddd7": 143, "\ud835\ude0b": 144, "\ud835\ude73": 145, "\ud835\udd3b": 146, "\ud835\udc9f": 147, "\ud835\udc04": 148, "\ud835\udc38": 149, "\ud835\udc6c": 150, "\ud835\udd08": 151, "\ud835\udda4": 152, "\ud835\uddd8": 153, "\ud835\ude0c": 154, "\ud835\ude74": 155, "\ud835\udd3c": 156, "\ud835\udca0": 157, "\ud835\udc05": 158, "\ud835\udc39": 159, "\ud835\udc6d": 160, "\ud835\udd09": 161, "\ud835\udda5": 162, "\ud835\uddd9": 163, "\ud835\ude0d": 164, "\ud835\ude75": 165, "\ud835\udd3d": 166, "\ud835\udca1": 167, "\ud835\udc06": 168, "\ud835\udc3a": 169, "\ud835\udc6e": 170, "\ud835\udd0a": 171, "\ud835\udda6": 172, "\ud835\uddda": 173, "\ud835\ude0e": 174, "\ud835\ude76": 175, "\ud835\udd3e": 176, "\ud835\udca2": 177, "\ud835\udc07": 178, "\ud835\udc3b": 179, "\ud835\udc6f": 180, "\ud835\udd0b": 181, "\ud835\udda7": 182, "\ud835\udddb": 183, "\ud835\ude0f": 184, "\ud835\ude77": 185, "\ud835\udd3f": 186, "\ud835\udca3": 187, "\ud835\udc08": 188, "\ud835\udc3c": 189, "\ud835\udc70": 190, "\ud835\udd0c": 191, "\ud835\udda8": 192, "\ud835\udddc": 193, "\ud835\ude10": 194, "\ud835\ude78": 195, "\ud835\udd40": 196, "\ud835\udca4": 197, "\ud835\udc09": 198, "\ud835\udc3d": 199, "\ud835\udc71": 200, "\ud835\udd0d": 201, "\ud835\udda9": 202, "\ud835\udddd": 203, "\ud835\ude11": 204, "\ud835\ude79": 205, "\ud835\udd41": 206, "\ud835\udca5": 207, "\ud835\udc0a": 208, "\ud835\udc3e": 209, "\ud835\udc72": 210, "\ud835\udd0e": 211, "\ud835\uddaa": 212, "\ud835\uddde": 213, "\ud835\ude12": 214, "\ud835\ude7a": 215, "\ud835\udd42": 216, "\ud835\udca6": 217, "\ud835\udc0b": 218, "\ud835\udc3f": 219, "\ud835\udc73": 220, "\ud835\udd0f": 221, "\ud835\uddab": 222, "\ud835\udddf": 223, "\ud835\ude13": 224, "\ud835\ude7b": 225, "\ud835\udd43": 226, "\ud835\udca7": 227, "\ud835\udc0c": 228, "\ud835\udc40": 229, "\ud835\udc74": 230, "\ud835\udd10": 231, "\ud835\uddac": 232, "\ud835\udde0": 233, "\ud835\ude14": 234, "\ud835\ude7c": 235, "\ud835\udd44": 236, "\ud835\udca8": 237, "\ud835\udc0d": 238, "\ud835\udc41": 239, "\ud835\udc75": 240, "\ud835\udd11": 241, "\ud835\uddad": 242, "\ud835\udde1": 243, "\ud835\ude15": 244, "\ud835\ude7d": 245, "\ud835\udd45": 246, "\ud835\udca9": 247, "\ud835\udc0e": 248, "\ud835\udc42": 249, "\ud835\udc76": 250, "\ud835\udd12": 251, "\ud835\uddae": 252, "\ud835\udde2": 253, "\ud835\ude16": 254, "\ud835\ude7e": 255, "\ud835\udd46": 256, "\ud835\udcaa": 257, "\ud835\udc0f": 258, "\ud835\udc43": 259, "\ud835\udc77": 260, "\ud835\udd13": 261, "\ud835\uddaf": 262, "\ud835\udde3": 263, "\ud835\ude17": 264, "\ud835\ude7f": 265, "\ud835\udd47": 266, "\ud835\udcab": 267, "\ud835\udc10": 268, "\ud835\udc44": 269, "\ud835\udc78": 270, "\ud835\udd14": 271, "\ud835\uddb0": 272, "\ud835\udde4": 273, "\ud835\ude18": 274, "\ud835\ude80": 275, "\ud835\udd48": 276, "\ud835\udcac": 277, "\ud835\udc11": 278, "\ud835\udc45": 279, "\ud835\udc79": 280, "\ud835\udd15": 281, "\ud835\uddb1": 282, "\ud835\udde5": 283, "\ud835\ude19": 284, "\ud835\ude81": 285, "\ud835\udd49": 286, "\ud835\udcad": 287, "\ud835\udc12": 288, "\ud835\udc46": 289, "\ud835\udc7a": 290, "\ud835\udd16": 291, "\ud835\uddb2": 292, "\ud835\udde6": 293, "\ud835\ude1a": 294, "\ud835\ude82": 295, "\ud835\udd4a": 296, "\ud835\udcae": 297, "\ud835\udc13": 298, "\ud835\udc47": 299, "\ud835\udc7b": 300, "\ud835\udd17": 301, "\ud835\uddb3": 302, "\ud835\udde7": 303, "\ud835\ude1b": 304, "\ud835\ude83": 305, "\ud835\udd4b": 306, "\ud835\udcaf": 307, "\ud835\udc14": 308, "\ud835\udc48": 309, "\ud835\udc7c": 310, "\ud835\udd18": 311, "\ud835\uddb4": 312, "\ud835\udde8": 313, "\ud835\ude1c": 314, "\ud835\ude84": 315, "\ud835\udd4c": 316, "\ud835\udcb0": 317, "\ud835\udc15": 318, "\ud835\udc49": 319, "\ud835\udc7d": 320, "\ud835\udd19": 321, "\ud835\uddb5": 322, "\ud835\udde9": 323, "\ud835\ude1d": 324, "\ud835\ude85": 325, "\ud835\udd4d": 326, "\ud835\udcb1": 327, "\ud835\udc16": 328, "\ud835\udc4a": 329, "\ud835\udc7e": 330, "\ud835\udd1a": 331, "\ud835\uddb6": 332, "\ud835\uddea": 333, "\ud835\ude1e": 334, "\ud835\ude86": 335, "\ud835\udd4e": 336, "\ud835\udcb2": 337, "\ud835\udc17": 338, "\ud835\udc4b": 339, "\ud835\udc7f": 340, "\ud835\udd1b": 341, "\ud835\uddb7": 342, "\ud835\uddeb": 343, "\ud835\ude1f": 344, "\ud835\ude87": 345, "\ud835\udd4f": 346, "\ud835\udcb3": 347, "\ud835\udc18": 348, "\ud835\udc4c": 349, "\ud835\udc80": 350, "\ud835\udd1c": 351, "\ud835\uddb8": 352, "\ud835\uddec": 353, "\ud835\ude20": 354, "\ud835\ude88": 355, "\ud835\udd50": 356, "\ud835\udcb4": 357, "\ud835\udc19": 358, "\ud835\udc4d": 359, "\ud835\udc81": 360, "\ud835\udd1d": 361, "\ud835\uddb9": 362, "\ud835\udded": 363, "\ud835\ude21": 364, "\ud835\ude89": 365, "\ud835\udd51": 366, "\ud835\udcb5": 367, "\ud835\udc1a": 368, "\ud835\udc4e": 369, "\ud835\udc82": 370, "\ud835\udd1e": 371, "\ud835\uddba": 372, "\ud835\uddee": 373, "\ud835\ude22": 374, "\ud835\ude8a": 375, "\ud835\udc1b": 376, "\ud835\udc4f": 377, "\ud835\udc83": 378, "\ud835\udd1f": 379, "\ud835\uddbb": 380, "\ud835\uddef": 381, "\ud835\ude23": 382, "\ud835\ude8b": 383, "\ud835\udc1c": 384, "\ud835\udc50": 385, "\ud835\udc84": 386, "\ud835\udd20": 387, "\ud835\uddbc": 388, "\ud835\uddf0": 389, "\ud835\ude24": 390, "\ud835\ude8c": 391, "\ud835\udc1d": 392, "\ud835\udc51": 393, "\ud835\udc85": 394, "\ud835\udd21": 395, "\ud835\uddbd": 396, "\ud835\uddf1": 397, "\ud835\ude25": 398, "\ud835\ude8d": 399, "\ud835\udc1e": 400, "\ud835\udc52": 401, "\ud835\udc86": 402, "\ud835\udd22": 403, "\ud835\uddbe": 404, "\ud835\uddf2": 405, "\ud835\ude26": 406, "\ud835\ude8e": 407, "\ud835\udc1f": 408, "\ud835\udc53": 409, "\ud835\udc87": 410, "\ud835\udd23": 411, "\ud835\uddbf": 412, "\ud835\uddf3": 413, "\ud835\ude27": 414, "\ud835\ude8f": 415, "\ud835\udc20": 416, "\ud835\udc54": 417, "\ud835\udc88": 418, "\ud835\udd24": 419, "\ud835\uddc0": 420, "\ud835\uddf4": 421, "\ud835\ude28": 422, "\ud835\ude90": 423, "\ud835\udc21": 424, "\ud835\udc55": 425, "\ud835\udc89": 426, "\ud835\udd25": 427, "\ud835\uddc1": 428, "\ud835\uddf5": 429, "\ud835\ude29": 430, "\ud835\ude91": 431, "\ud835\udc22": 432, "\ud835\udc56": 433, "\ud835\udc8a": 434, "\ud835\udd26": 435, "\ud835\uddc2": 436, "\ud835\uddf6": 437, "\ud835\ude2a": 438, "\ud835\ude92": 439, "\ud835\udc23": 440, "\ud835\udc57": 441, "\ud835\udc8b": 442, "\ud835\udd27": 443, "\ud835\uddc3": 444, "\ud835\uddf7": 445, "\ud835\ude2b": 446, "\ud835\ude93": 447, "\ud835\udc24": 448, "\ud835\udc58": 449, "\ud835\udc8c": 450, "\ud835\udd28": 451, "\ud835\uddc4": 452, "\ud835\uddf8": 453, "\ud835\ude2c": 454, "\ud835\ude94": 455, "\ud835\udc25": 456, "\ud835\udc59": 457, "\ud835\udc8d": 458, "\ud835\udd29": 459, "\ud835\uddc5": 460, "\ud835\uddf9": 461, "\ud835\ude2d": 462, "\ud835\ude95": 463, "\ud835\udc26": 464, "\ud835\udc5a": 465, "\ud835\udc8e": 466, "\ud835\udd2a": 467, "\ud835\uddc6": 468, "\ud835\uddfa": 469, "\ud835\ude2e": 470, "\ud835\ude96": 471, "\ud835\udc27": 472, "\ud835\udc5b": 473, "\ud835\udc8f": 474, "\ud835\udd2b": 475, "\ud835\uddc7": 476, "\ud835\uddfb": 477, "\ud835\ude2f": 478, "\ud835\ude97": 479, "\ud835\udc28": 480, "\ud835\udc5c": 481, "\ud835\udc90": 482, "\ud835\udd2c": 483, "\ud835\uddc8": 484, "\ud835\uddfc": 485, "\ud835\ude30": 486, "\ud835\ude98": 487, "\ud835\udc29": 488, "\ud835\udc5d": 489, "\ud835\udc91": 490, "\ud835\udd2d": 491, "\ud835\uddc9": 492, "\ud835\uddfd": 493, "\ud835\ude31": 494, "\ud835\ude99": 495, "\ud835\udc2a": 496, "\ud835\udc5e": 497, "\ud835\udc92": 498, "\ud835\udd2e": 499, "\ud835\uddca": 500, "\ud835\uddfe": 501, "\ud835\ude32": 502, "\ud835\ude9a": 503, "\ud835\udc2b": 504, "\ud835\udc5f": 505, "\ud835\udc93": 506, "\ud835\udd2f": 507, "\ud835\uddcb": 508, "\ud835\uddff": 509, "\ud835\ude33": 510, "\ud835\ude9b": 511, "\ud835\udc2c": 512, "\ud835\udc60": 513, "\ud835\udc94": 514, "\ud835\udd30": 515, "\ud835\uddcc": 516, "\ud835\ude00": 517, "\ud835\ude34": 518, "\ud835\ude9c": 519, "\ud835\udc2d": 520, "\ud835\udc61": 521, "\ud835\udc95": 522, "\ud835\udd31": 523, "\ud835\uddcd": 524, "\ud835\ude01": 525, "\ud835\ude35": 526, "\ud835\ude9d": 527, "\ud835\udc2e": 528, "\ud835\udc62": 529, "\ud835\udc96": 530, "\ud835\udd32": 531, "\ud835\uddce": 532, "\ud835\ude02": 533, "\ud835\ude36": 534, "\ud835\ude9e": 535, "\ud835\udc2f": 536, "\ud835\udc63": 537, "\ud835\udc97": 538, "\ud835\udd33": 539, "\ud835\uddcf": 540, "\ud835\ude03": 541, "\ud835\ude37": 542, "\ud835\ude9f": 543, "\ud835\udc30": 544, "\ud835\udc64": 545, "\ud835\udc98": 546, "\ud835\udd34": 547, "\ud835\uddd0": 548, "\ud835\ude04": 549, "\ud835\ude38": 550, "\ud835\udea0": 551, "\ud835\udc31": 552, "\ud835\udc65": 553, "\ud835\udc99": 554, "\ud835\udd35": 555, "\ud835\uddd1": 556, "\ud835\ude05": 557, "\ud835\ude39": 558, "\ud835\udea1": 559, "\ud835\udc32": 560, "\ud835\udc66": 561, "\ud835\udc9a": 562, "\ud835\udd36": 563, "\ud835\uddd2": 564, "\ud835\ude06": 565, "\ud835\ude3a": 566, "\ud835\udea2": 567, "\ud835\udc33": 568, "\ud835\udc67": 569, "\ud835\udc9b": 570, "\ud835\udd37": 571, "\ud835\uddd3": 572, "\ud835\ude07": 573, "\ud835\ude3b": 574, "\ud835\udea3": 575, "\ud835\udd5c": 576, "\ud835\udfce": 577, "\ud835\udfe2": 578, "\ud835\udfec": 579, "\ud835\udff6": 580, "\ud835\udfcf": 581, "\ud835\udfe3": 582, "\ud835\udfed": 583, "\ud835\udff7": 584, "\ud835\udfd0": 585, "\ud835\udfe4": 586, "\ud835\udfee": 587, "\ud835\udff8": 588, "\ud835\udfd1": 589, "\ud835\udfe5": 590, "\ud835\udfef": 591, "\ud835\udff9": 592, "\ud835\udfd2": 593, "\ud835\udfe6": 594, "\ud835\udff0": 595, "\ud835\udffa": 596, "\ud835\udfd3": 597, "\ud835\udfe7": 598, "\ud835\udff1": 599, "\ud835\udffb": 600, "\ud835\udfd4": 601, "\ud835\udfe8": 602, "\ud835\udff2": 603, "\ud835\udffc": 604, "\ud835\udfd5": 605, "\ud835\udfe9": 606, "\ud835\udff3": 607, "\ud835\udffd": 608, "\ud835\udfd6": 609, "\ud835\udfea": 610, "\ud835\udff4": 611, "\ud835\udffe": 612, "\ud835\udfd7": 613, "\ud835\udfeb": 614, "\ud835\udff5": 615, "\ud835\udfff": 616, "\xc7": 617, "\xd0": 618, "\xde": 619, "\xe7": 620, "\xfe": 621, "\xf0": 622, "\u2013": 623, "\u2014": 624, "\u2018": 625, "\u2019": 626, "\u201c": 627, "\u201d": 628, "\xa0": 629, "\\S": 630, "\\P": 631, "\\yen": 632, "\\ ": 633, "~": 634, "\\space": 635, "\\nobreakspace": 636, "\\lbrack": 637, "\\rbrack": 638, "\\textless": 639, "\\textgreater": 640, "\\textbar": 641, "\\textellipsis": 642, "\\ldots": 643, "\\i": 644, "\\j": 645, "\\ss": 646, "\\ae": 647, "\\oe": 648, "\\o": 649, "\\AE": 650, "\\OE": 651, "\\O": 652, "--": 653, "\\textendash": 654, "---": 655, "\\textemdash": 656, "\\textquoteleft": 657, "\\textquoteright": 658, "``": 659, "\\textquotedblleft": 660, "''": 661, "\\textquotedblright": 662, "\\degree": 663, "\\textdegree": 664, "\\pounds": 665, "\\textsterling": 666, "\\textbardbl": 667, "\\#": 668, "\\&": 669, "\\textdagger": 670, "\\dag": 671, "\\textdaggerdbl": 672, "\\ddag": 673, "\\textcircled": 674, "\\circledR": 675, "\\$": 676, "\\textdollar": 677, "\\%": 678, "\\_": 679, "\\textunderscore": 680, "\\{": 681, "\\textbraceleft": 682, "\\}": 683, "\\textbraceright": 684, "\\textbackslash": 685, "\\'": 686, "\\`": 687, '\\"': 688, "\\textasciitilde": 689, "\\=": 690, "\\u": 691, "\\v": 692, "\\textasciicircum": 693, "\\.": 694, "\\r": 695, "\\maltese": 696, "\\checkmark": 697, "\\^": 698, "\\~": 699, "\\H": 700};
    A.TexSymbolConfig_wMV = new B.TexSymbolConfig("\xa7", false, null);
    A.TexSymbolConfig_Vqy = new B.TexSymbolConfig("\xb6", false, null);
    A.TexSymbolConfig_FDA = new B.TexSymbolConfig("\xdf", false, null);
    A.TexSymbolConfig_MnY = new B.TexSymbolConfig("\xe6", false, null);
    A.TexSymbolConfig_mI9 = new B.TexSymbolConfig("\u0153", false, null);
    A.TexSymbolConfig_CKF = new B.TexSymbolConfig("\xf8", false, null);
    A.TexSymbolConfig_ZPh = new B.TexSymbolConfig("\xc6", false, null);
    A.TexSymbolConfig_hQH = new B.TexSymbolConfig("\u0152", false, null);
    A.TexSymbolConfig_RAh = new B.TexSymbolConfig("\xd8", false, null);
    A.TexSymbolConfig_c47 = new B.TexSymbolConfig("'", false, null);
    A.TexSymbolConfig_Zb1 = new B.TexSymbolConfig("\u2013", false, null);
    A.TexSymbolConfig_s1a = new B.TexSymbolConfig("\u2014", false, null);
    A.TexSymbolConfig_Cw8 = new B.TexSymbolConfig("\u2018", false, null);
    A.TexSymbolConfig_9Jl = new B.TexSymbolConfig("\u2019", false, null);
    A.TexSymbolConfig_iqu = new B.TexSymbolConfig("\u201c", false, null);
    A.TexSymbolConfig_1XN = new B.TexSymbolConfig("\u201d", false, null);
    A.TexSymbolConfig_4Q8 = new B.TexSymbolConfig("\u02c6", false, null);
    A.TexSymbolConfig_jG0 = new B.TexSymbolConfig("\u02dc", false, null);
    A.TexSymbolConfig_S6K = new B.TexSymbolConfig("\u02dd", false, null);
    A.Map_SXdse = new C.ConstantStringMap(A.Object_LTu, [A.TexSymbolConfig_sAj, A.TexSymbolConfig_JIB, A.TexSymbolConfig_Kjf, A.TexSymbolConfig_hf8, A.TexSymbolConfig_Rb2, A.TexSymbolConfig_xTp, A.TexSymbolConfig_v6K, A.TexSymbolConfig_nqA, A.TexSymbolConfig_gK2, A.TexSymbolConfig_jJE, A.TexSymbolConfig_wMV, A.TexSymbolConfig_Vqy, A.TexSymbolConfig_OLK, A.TexSymbolConfig_1e8, A.TexSymbolConfig_Ewq, A.TexSymbolConfig_eup, A.TexSymbolConfig_FDA, A.TexSymbolConfig_MnY, A.TexSymbolConfig_mI9, A.TexSymbolConfig_CKF, A.TexSymbolConfig_ZPh, A.TexSymbolConfig_hQH, A.TexSymbolConfig_RAh, A.TexSymbolConfig_mVM, A.TexSymbolConfig_c47, A.TexSymbolConfig_G3M, A.TexSymbolConfig_ovp, A.TexSymbolConfig_61m, A.TexSymbolConfig_dI7, A.TexSymbolConfig_Coz, A.TexSymbolConfig_LvD, A.TexSymbolConfig_fwE, A.TexSymbolConfig_kwy, A.TexSymbolConfig_yCb, A.TexSymbolConfig_lbA, A.TexSymbolConfig_bvq, A.TexSymbolConfig_lE0, A.TexSymbolConfig_AUm, A.TexSymbolConfig_1Yd, A.TexSymbolConfig_ztQ, A.TexSymbolConfig_OJs, A.TexSymbolConfig_OFB, A.TexSymbolConfig_njr, A.TexSymbolConfig_dAE, A.TexSymbolConfig_QWQ, A.TexSymbolConfig_G90, A.TexSymbolConfig_IzI, A.TexSymbolConfig_uxw, A.TexSymbolConfig_A_false_null, A.TexSymbolConfig_B_false_null, A.TexSymbolConfig_C_false_null, A.TexSymbolConfig_D_false_null, A.TexSymbolConfig_E_false_null, A.TexSymbolConfig_F_false_null, A.TexSymbolConfig_G_false_null, A.TexSymbolConfig_H_false_null, A.TexSymbolConfig_I_false_null, A.TexSymbolConfig_J_false_null, A.TexSymbolConfig_K_false_null, A.TexSymbolConfig_L_false_null, A.TexSymbolConfig_M_false_null, A.TexSymbolConfig_N_false_null, A.TexSymbolConfig_O_false_null, A.TexSymbolConfig_P_false_null, A.TexSymbolConfig_Q_false_null, A.TexSymbolConfig_R_false_null, A.TexSymbolConfig_S_false_null, A.TexSymbolConfig_T_false_null, A.TexSymbolConfig_U_false_null, A.TexSymbolConfig_V_false_null, A.TexSymbolConfig_W_false_null, A.TexSymbolConfig_X_false_null, A.TexSymbolConfig_Y_false_null, A.TexSymbolConfig_Z_false_null, A.TexSymbolConfig_a_false_null, A.TexSymbolConfig_b_false_null, A.TexSymbolConfig_c_false_null, A.TexSymbolConfig_d_false_null, A.TexSymbolConfig_e_false_null, A.TexSymbolConfig_f_false_null, A.TexSymbolConfig_g_false_null, A.TexSymbolConfig_h_false_null, A.TexSymbolConfig_i_false_null, A.TexSymbolConfig_j_false_null, A.TexSymbolConfig_k_false_null, A.TexSymbolConfig_l_false_null, A.TexSymbolConfig_m_false_null, A.TexSymbolConfig_n_false_null, A.TexSymbolConfig_o_false_null, A.TexSymbolConfig_p_false_null, A.TexSymbolConfig_q_false_null, A.TexSymbolConfig_r_false_null, A.TexSymbolConfig_s_false_null, A.TexSymbolConfig_t_false_null, A.TexSymbolConfig_u_false_null, A.TexSymbolConfig_v_false_null, A.TexSymbolConfig_w_false_null, A.TexSymbolConfig_x_false_null, A.TexSymbolConfig_y_false_null, A.TexSymbolConfig_z_false_null, A.TexSymbolConfig_XRQ, A.TexSymbolConfig_SJh, A.TexSymbolConfig_ukc, A.TexSymbolConfig_D32, A.TexSymbolConfig_BvH, A.TexSymbolConfig_0Bc, A.TexSymbolConfig_AKG, A.TexSymbolConfig_BIG, A.TexSymbolConfig_npA, A.TexSymbolConfig_ixl, A.TexSymbolConfig_kon, A.TexSymbolConfig_LJ1, A.TexSymbolConfig_un4, A.TexSymbolConfig_I3d, A.TexSymbolConfig_DH8, A.TexSymbolConfig_IaC, A.TexSymbolConfig_DOk, A.TexSymbolConfig_3zX, A.TexSymbolConfig_8fY, A.TexSymbolConfig_uu3, A.TexSymbolConfig_1RG, A.TexSymbolConfig_8Jk, A.TexSymbolConfig_jF2, A.TexSymbolConfig_8jC, A.TexSymbolConfig_rGE, A.TexSymbolConfig_tDo, A.TexSymbolConfig_tLg, A.TexSymbolConfig_Zb4, A.TexSymbolConfig_DIi, A.TexSymbolConfig_S14, A.TexSymbolConfig_zVj, A.TexSymbolConfig_ldr, A.TexSymbolConfig_43i, A.TexSymbolConfig_p15, A.TexSymbolConfig_HGM, A.TexSymbolConfig_LrS, A.TexSymbolConfig_5Gq, A.TexSymbolConfig_ZSe, A.TexSymbolConfig_LoS, A.TexSymbolConfig_6WB, A.TexSymbolConfig_N6G, A.TexSymbolConfig_Dza, A.TexSymbolConfig_amc, A.TexSymbolConfig_rV0, A.TexSymbolConfig_fG6, A.TexSymbolConfig_rQF, A.TexSymbolConfig_v2Z, A.TexSymbolConfig_MDq, A.TexSymbolConfig_qT4, A.TexSymbolConfig_Xt2, A.TexSymbolConfig_In5, A.TexSymbolConfig_Vid, A.TexSymbolConfig_17F, A.TexSymbolConfig_3TT, A.TexSymbolConfig_SxH, A.TexSymbolConfig_utH, A.TexSymbolConfig_H8e, A.TexSymbolConfig_E6q, A.TexSymbolConfig_mHs, A.TexSymbolConfig_xsj, A.TexSymbolConfig_fQm, A.TexSymbolConfig_llg, A.TexSymbolConfig_DLM, A.TexSymbolConfig_VfA, A.TexSymbolConfig_rbS, A.TexSymbolConfig_LrN, A.TexSymbolConfig_SSu, A.TexSymbolConfig_eVj, A.TexSymbolConfig_zHn, A.TexSymbolConfig_5pU, A.TexSymbolConfig_kRu, A.TexSymbolConfig_25b, A.TexSymbolConfig_xaj, A.TexSymbolConfig_7BP, A.TexSymbolConfig_CL4, A.TexSymbolConfig_bdG, A.TexSymbolConfig_r1p, A.TexSymbolConfig_mee, A.TexSymbolConfig_PqG, A.TexSymbolConfig_yhR, A.TexSymbolConfig_O07, A.TexSymbolConfig_BKa, A.TexSymbolConfig_UuM, A.TexSymbolConfig_mqF, A.TexSymbolConfig_1xU, A.TexSymbolConfig_Uhz, A.TexSymbolConfig_fWu, A.TexSymbolConfig_7ix, A.TexSymbolConfig_xsO, A.TexSymbolConfig_5Xn, A.TexSymbolConfig_pru, A.TexSymbolConfig_Mdw, A.TexSymbolConfig_BvD, A.TexSymbolConfig_giH, A.TexSymbolConfig_2rv, A.TexSymbolConfig_S1J, A.TexSymbolConfig_BuK, A.TexSymbolConfig_hXI, A.TexSymbolConfig_6XT, A.TexSymbolConfig_ahO, A.TexSymbolConfig_4ge, A.TexSymbolConfig_cna, A.TexSymbolConfig_hgs, A.TexSymbolConfig_U0u, A.TexSymbolConfig_PYo, A.TexSymbolConfig_usb, A.TexSymbolConfig_P8l, A.TexSymbolConfig_Gjv, A.TexSymbolConfig_3YP, A.TexSymbolConfig_OdH, A.TexSymbolConfig_uOB, A.TexSymbolConfig_kT1, A.TexSymbolConfig_Cvq, A.TexSymbolConfig_ykE, A.TexSymbolConfig_Dhd, A.TexSymbolConfig_TQG, A.TexSymbolConfig_eeV, A.TexSymbolConfig_w23, A.TexSymbolConfig_JDM, A.TexSymbolConfig_SDu, A.TexSymbolConfig_4jj, A.TexSymbolConfig_Uuq, A.TexSymbolConfig_azh, A.TexSymbolConfig_Ger, A.TexSymbolConfig_FCw, A.TexSymbolConfig_dAd, A.TexSymbolConfig_6ys, A.TexSymbolConfig_VY6, A.TexSymbolConfig_n8Q, A.TexSymbolConfig_Z5T, A.TexSymbolConfig_tcX, A.TexSymbolConfig_9Pd, A.TexSymbolConfig_7qW, A.TexSymbolConfig_4ck, A.TexSymbolConfig_48P, A.TexSymbolConfig_i2R, A.TexSymbolConfig_9Lz, A.TexSymbolConfig_8Tu, A.TexSymbolConfig_gmn, A.TexSymbolConfig_TCP, A.TexSymbolConfig_Bak, A.TexSymbolConfig_qfz, A.TexSymbolConfig_4kI, A.TexSymbolConfig_gX3, A.TexSymbolConfig_dVk, A.TexSymbolConfig_6Qc, A.TexSymbolConfig_cpd, A.TexSymbolConfig_2NA, A.TexSymbolConfig_oUS, A.TexSymbolConfig_trO, A.TexSymbolConfig_mP9, A.TexSymbolConfig_njn, A.TexSymbolConfig_fHV, A.TexSymbolConfig_4Hj, A.TexSymbolConfig_D10, A.TexSymbolConfig_mQ7, A.TexSymbolConfig_RBr, A.TexSymbolConfig_xMh, A.TexSymbolConfig_fnH, A.TexSymbolConfig_t7z, A.TexSymbolConfig_9zk, A.TexSymbolConfig_XPe, A.TexSymbolConfig_hLH, A.TexSymbolConfig_XzX, A.TexSymbolConfig_okO, A.TexSymbolConfig_ibN, A.TexSymbolConfig_8kL, A.TexSymbolConfig_vkz, A.TexSymbolConfig_yYW, A.TexSymbolConfig_MsQ, A.TexSymbolConfig_RVG, A.TexSymbolConfig_9DA, A.TexSymbolConfig_jq6, A.TexSymbolConfig_qP7, A.TexSymbolConfig_nCA, A.TexSymbolConfig_5vn, A.TexSymbolConfig_hcW, A.TexSymbolConfig_MGX, A.TexSymbolConfig_bIz, A.TexSymbolConfig_cPR, A.TexSymbolConfig_tbX, A.TexSymbolConfig_t9l, A.TexSymbolConfig_L4M, A.TexSymbolConfig_n9t, A.TexSymbolConfig_FiX, A.TexSymbolConfig_CAS, A.TexSymbolConfig_dsF, A.TexSymbolConfig_SKe, A.TexSymbolConfig_7DQ, A.TexSymbolConfig_QtG, A.TexSymbolConfig_MHm, A.TexSymbolConfig_f6t, A.TexSymbolConfig_J8t, A.TexSymbolConfig_RRK, A.TexSymbolConfig_Vvs, A.TexSymbolConfig_dhT, A.TexSymbolConfig_VQL, A.TexSymbolConfig_SC5, A.TexSymbolConfig_DTs, A.TexSymbolConfig_UZb, A.TexSymbolConfig_2Sd, A.TexSymbolConfig_OH5, A.TexSymbolConfig_6ql, A.TexSymbolConfig_GPg, A.TexSymbolConfig_R1J, A.TexSymbolConfig_dqr, A.TexSymbolConfig_pyS, A.TexSymbolConfig_cOy, A.TexSymbolConfig_Et6, A.TexSymbolConfig_kEr, A.TexSymbolConfig_5Pu, A.TexSymbolConfig_kmp, A.TexSymbolConfig_2pM, A.TexSymbolConfig_htn, A.TexSymbolConfig_KJU, A.TexSymbolConfig_N4X, A.TexSymbolConfig_8zq, A.TexSymbolConfig_xhi, A.TexSymbolConfig_WeI, A.TexSymbolConfig_oYX, A.TexSymbolConfig_oBD, A.TexSymbolConfig_xaK, A.TexSymbolConfig_inw, A.TexSymbolConfig_tFT, A.TexSymbolConfig_cWj, A.TexSymbolConfig_Vh7, A.TexSymbolConfig_D2d, A.TexSymbolConfig_1D5, A.TexSymbolConfig_qFl, A.TexSymbolConfig_oOD, A.TexSymbolConfig_nLg, A.TexSymbolConfig_rOQ, A.TexSymbolConfig_9Uz, A.TexSymbolConfig_3oW, A.TexSymbolConfig_Rqo, A.TexSymbolConfig_Mwp, A.TexSymbolConfig_yRb, A.TexSymbolConfig_LBz, A.TexSymbolConfig_eOR, A.TexSymbolConfig_Inm, A.TexSymbolConfig_YyP, A.TexSymbolConfig_IFq, A.TexSymbolConfig_O2L, A.TexSymbolConfig_sS6, A.TexSymbolConfig_DKW, A.TexSymbolConfig_WZi, A.TexSymbolConfig_NW5, A.TexSymbolConfig_5Qk, A.TexSymbolConfig_mQp, A.TexSymbolConfig_Lp5, A.TexSymbolConfig_6cM, A.TexSymbolConfig_bVG, A.TexSymbolConfig_eBF, A.TexSymbolConfig_6Ad, A.TexSymbolConfig_xU8, A.TexSymbolConfig_h7l, A.TexSymbolConfig_1mL, A.TexSymbolConfig_STb, A.TexSymbolConfig_3AX, A.TexSymbolConfig_mER, A.TexSymbolConfig_eOC, A.TexSymbolConfig_99l, A.TexSymbolConfig_BKZ, A.TexSymbolConfig_bw4, A.TexSymbolConfig_E5u, A.TexSymbolConfig_etr, A.TexSymbolConfig_LAT, A.TexSymbolConfig_fIw, A.TexSymbolConfig_jjp, A.TexSymbolConfig_CR3, A.TexSymbolConfig_qNo, A.TexSymbolConfig_EFm, A.TexSymbolConfig_M80, A.TexSymbolConfig_7z7, A.TexSymbolConfig_9pK, A.TexSymbolConfig_HC6, A.TexSymbolConfig_ZVV, A.TexSymbolConfig_9uT, A.TexSymbolConfig_o0I, A.TexSymbolConfig_MwN, A.TexSymbolConfig_EPs, A.TexSymbolConfig_Set, A.TexSymbolConfig_3Ba, A.TexSymbolConfig_WHI, A.TexSymbolConfig_YDi, A.TexSymbolConfig_cRl, A.TexSymbolConfig_BiP, A.TexSymbolConfig_pd6, A.TexSymbolConfig_ZxO, A.TexSymbolConfig_XWx, A.TexSymbolConfig_inG0, A.TexSymbolConfig_BDK, A.TexSymbolConfig_Kri, A.TexSymbolConfig_wII, A.TexSymbolConfig_yF5, A.TexSymbolConfig_lN4, A.TexSymbolConfig_pPh, A.TexSymbolConfig_5Pi, A.TexSymbolConfig_vuM, A.TexSymbolConfig_LkM, A.TexSymbolConfig_KEQ, A.TexSymbolConfig_dg8, A.TexSymbolConfig_pWx, A.TexSymbolConfig_BZa, A.TexSymbolConfig_yUu, A.TexSymbolConfig_DT6, A.TexSymbolConfig_F1O, A.TexSymbolConfig_Klo, A.TexSymbolConfig_wQn, A.TexSymbolConfig_YPx, A.TexSymbolConfig_uQw, A.TexSymbolConfig_SlJ, A.TexSymbolConfig_rlX, A.TexSymbolConfig_tRJ, A.TexSymbolConfig_Oqf, A.TexSymbolConfig_6V5, A.TexSymbolConfig_f0p, A.TexSymbolConfig_2hA, A.TexSymbolConfig_lr4, A.TexSymbolConfig_bMa, A.TexSymbolConfig_BWw, A.TexSymbolConfig_qFh, A.TexSymbolConfig_phT, A.TexSymbolConfig_pyb, A.TexSymbolConfig_r5C, A.TexSymbolConfig_iSQ, A.TexSymbolConfig_irg, A.TexSymbolConfig_vvl, A.TexSymbolConfig_GMf, A.TexSymbolConfig_Yq4, A.TexSymbolConfig_B93, A.TexSymbolConfig_JTC, A.TexSymbolConfig_bLN, A.TexSymbolConfig_F3z, A.TexSymbolConfig_FB9, A.TexSymbolConfig_v3q, A.TexSymbolConfig_3zs, A.TexSymbolConfig_JSR, A.TexSymbolConfig_pJU, A.TexSymbolConfig_unp, A.TexSymbolConfig_3Jq, A.TexSymbolConfig_8jX, A.TexSymbolConfig_oil, A.TexSymbolConfig_cEe, A.TexSymbolConfig_Yuu, A.TexSymbolConfig_zIf, A.TexSymbolConfig_28O, A.TexSymbolConfig_s3I, A.TexSymbolConfig_MsW, A.TexSymbolConfig_EUx, A.TexSymbolConfig_kfR, A.TexSymbolConfig_JbZ, A.TexSymbolConfig_QY8, A.TexSymbolConfig_noM, A.TexSymbolConfig_AG9, A.TexSymbolConfig_SZD, A.TexSymbolConfig_sWv, A.TexSymbolConfig_OmY, A.TexSymbolConfig_hWH, A.TexSymbolConfig_daS, A.TexSymbolConfig_JGA, A.TexSymbolConfig_xi1, A.TexSymbolConfig_VEM, A.TexSymbolConfig_ZdH, A.TexSymbolConfig_Cva, A.TexSymbolConfig_fF7, A.TexSymbolConfig_yM2, A.TexSymbolConfig_16r, A.TexSymbolConfig_AgP, A.TexSymbolConfig_v6d, A.TexSymbolConfig_bOp, A.TexSymbolConfig_sDa, A.TexSymbolConfig_XwA, A.TexSymbolConfig_X4k, A.TexSymbolConfig_vlK, A.TexSymbolConfig_UyA, A.TexSymbolConfig_hVI, A.TexSymbolConfig_L3s, A.TexSymbolConfig_Up0, A.TexSymbolConfig_fLF, A.TexSymbolConfig_Oa3, A.TexSymbolConfig_MZt, A.TexSymbolConfig_eXT, A.TexSymbolConfig_rPj, A.TexSymbolConfig_mmc, A.TexSymbolConfig_fvM, A.TexSymbolConfig_LyV, A.TexSymbolConfig_egV, A.TexSymbolConfig_ZVG, A.TexSymbolConfig_bo0, A.TexSymbolConfig_DGy, A.TexSymbolConfig_hRX, A.TexSymbolConfig_j5E, A.TexSymbolConfig_MJg, A.TexSymbolConfig_6Lu, A.TexSymbolConfig_XFJ, A.TexSymbolConfig_Adg, A.TexSymbolConfig_pfz, A.TexSymbolConfig_sZ8, A.TexSymbolConfig_LYn, A.TexSymbolConfig_uOn, A.TexSymbolConfig_WET, A.TexSymbolConfig_vzo, A.TexSymbolConfig_Aay, A.TexSymbolConfig_CuN, A.TexSymbolConfig_tLS, A.TexSymbolConfig_WJG, A.TexSymbolConfig_SDj, A.TexSymbolConfig_3D4, A.TexSymbolConfig_meu, A.TexSymbolConfig_VHn, A.TexSymbolConfig_pNX, A.TexSymbolConfig_Wn8, A.TexSymbolConfig_b8h, A.TexSymbolConfig_l7O, A.TexSymbolConfig_NlT, A.TexSymbolConfig_c4R, A.TexSymbolConfig_J7p, A.TexSymbolConfig_xLv, A.TexSymbolConfig_QCJ, A.TexSymbolConfig_KaP, A.TexSymbolConfig_iwZ, A.TexSymbolConfig_4Zp, A.TexSymbolConfig_NqZ, A.TexSymbolConfig_nC9, A.TexSymbolConfig_yAg, A.TexSymbolConfig_tix, A.TexSymbolConfig_u4w, A.TexSymbolConfig_GBv, A.TexSymbolConfig_WLk, A.TexSymbolConfig_ynQ, A.TexSymbolConfig_w8J, A.TexSymbolConfig_YMY, A.TexSymbolConfig_Xrg, A.TexSymbolConfig_9Ei, A.TexSymbolConfig_eSJ, A.TexSymbolConfig_DVX, A.TexSymbolConfig_lJc, A.TexSymbolConfig_v2W, A.TexSymbolConfig_Iun, A.TexSymbolConfig_g9W, A.TexSymbolConfig_nfb, A.TexSymbolConfig_WB0, A.TexSymbolConfig_qeA, A.TexSymbolConfig_fG0, A.TexSymbolConfig_wwT, A.TexSymbolConfig_18C, A.TexSymbolConfig_EFB, A.TexSymbolConfig_Myn, A.TexSymbolConfig_1XY, A.TexSymbolConfig_70y, A.TexSymbolConfig_8cz, A.TexSymbolConfig_9Ag, A.TexSymbolConfig_mQx, A.TexSymbolConfig_7kw, A.TexSymbolConfig_PCr, A.TexSymbolConfig_kod, A.TexSymbolConfig_iAa, A.TexSymbolConfig_pDO, A.TexSymbolConfig_Yon, A.TexSymbolConfig_b8M, A.TexSymbolConfig_fq5, A.TexSymbolConfig_VHH, A.TexSymbolConfig_LRz, A.TexSymbolConfig_SHa, A.TexSymbolConfig_6cJ, A.TexSymbolConfig_HFP, A.TexSymbolConfig_Lfp, A.TexSymbolConfig_6VK, A.TexSymbolConfig_5RE, A.TexSymbolConfig_RDo, A.TexSymbolConfig_JoQ, A.TexSymbolConfig_f8o, A.TexSymbolConfig_TYO, A.TexSymbolConfig_ouX, A.TexSymbolConfig_8pc, A.TexSymbolConfig_VBv, A.TexSymbolConfig_NWc, A.TexSymbolConfig_A1i, A.TexSymbolConfig_EM4, A.TexSymbolConfig_ISp, A.TexSymbolConfig_mjk, A.TexSymbolConfig_uEx, A.TexSymbolConfig_te9, A.TexSymbolConfig_Pon, A.TexSymbolConfig_VRk, A.TexSymbolConfig_op1, A.TexSymbolConfig_UUf, A.TexSymbolConfig_iqn, A.TexSymbolConfig_Uhg, A.TexSymbolConfig_p73, A.TexSymbolConfig_8gs, A.TexSymbolConfig_O2x, A.TexSymbolConfig_185, A.TexSymbolConfig_MQ4, A.TexSymbolConfig_KnC, A.TexSymbolConfig_Edq, A.TexSymbolConfig_DJa, A.TexSymbolConfig_ffx, A.TexSymbolConfig_3ir, A.TexSymbolConfig_3s9, A.TexSymbolConfig_BDM, A.TexSymbolConfig_KRD, A.TexSymbolConfig_Hl4, A.TexSymbolConfig_su5, A.TexSymbolConfig_SJb, A.TexSymbolConfig_u9Q, A.TexSymbolConfig_zWB, A.TexSymbolConfig_Bav, A.TexSymbolConfig_iYT, A.TexSymbolConfig_cAz, A.TexSymbolConfig_Gbi, A.TexSymbolConfig_UNd, A.TexSymbolConfig_V4z, A.TexSymbolConfig_Ztu, A.TexSymbolConfig_PfV, A.TexSymbolConfig_hY2, A.TexSymbolConfig_pRY, A.TexSymbolConfig_8AK, A.TexSymbolConfig_KYo, A.TexSymbolConfig_5FU, A.TexSymbolConfig_eh3, A.TexSymbolConfig_W15, A.TexSymbolConfig_Zb1, A.TexSymbolConfig_s1a, A.TexSymbolConfig_Cw8, A.TexSymbolConfig_9Jl, A.TexSymbolConfig_iqu, A.TexSymbolConfig_1XN, A.TexSymbolConfig_RVb, A.TexSymbolConfig_wMV, A.TexSymbolConfig_Vqy, A.TexSymbolConfig_OLK, A.TexSymbolConfig_61m, A.TexSymbolConfig_RVb, A.TexSymbolConfig_61m, A.TexSymbolConfig_RVb, A.TexSymbolConfig_lE0, A.TexSymbolConfig_AUm, A.TexSymbolConfig_1Yd, A.TexSymbolConfig_ztQ, A.TexSymbolConfig_OJs, A.TexSymbolConfig_1e8, A.TexSymbolConfig_1e8, A.TexSymbolConfig_Ewq, A.TexSymbolConfig_eup, A.TexSymbolConfig_FDA, A.TexSymbolConfig_MnY, A.TexSymbolConfig_mI9, A.TexSymbolConfig_CKF, A.TexSymbolConfig_ZPh, A.TexSymbolConfig_hQH, A.TexSymbolConfig_RAh, A.TexSymbolConfig_Zb1, A.TexSymbolConfig_Zb1, A.TexSymbolConfig_s1a, A.TexSymbolConfig_s1a, A.TexSymbolConfig_Cw8, A.TexSymbolConfig_9Jl, A.TexSymbolConfig_iqu, A.TexSymbolConfig_iqu, A.TexSymbolConfig_1XN, A.TexSymbolConfig_1XN, A.TexSymbolConfig_G3M, A.TexSymbolConfig_G3M, A.TexSymbolConfig_ovp, A.TexSymbolConfig_ovp, A.TexSymbolConfig_lJU, A.TexSymbolConfig_VjA, A.TexSymbolConfig_qfX, A.TexSymbolConfig_kFA, A.TexSymbolConfig_kFA, A.TexSymbolConfig_AgW, A.TexSymbolConfig_AgW, A.TexSymbolConfig_Fzw, A.TexSymbolConfig_j1j, A.TexSymbolConfig_$_false_null, A.TexSymbolConfig_$_false_null, A.TexSymbolConfig_Gdt, A.TexSymbolConfig___false_null, A.TexSymbolConfig___false_null, A.TexSymbolConfig_P7D, A.TexSymbolConfig_P7D, A.TexSymbolConfig_19L, A.TexSymbolConfig_19L, A.TexSymbolConfig_6Tf, A.TexSymbolConfig_UAC, A.TexSymbolConfig_Jqm, A.TexSymbolConfig_ot1, A.TexSymbolConfig_r4v, A.TexSymbolConfig_ClT, A.TexSymbolConfig_hu9, A.TexSymbolConfig_RHL, A.TexSymbolConfig_nBu, A.TexSymbolConfig_FTA, A.TexSymbolConfig_7LH, A.TexSymbolConfig_eld, A.TexSymbolConfig_kFC, A.TexSymbolConfig_4Q8, A.TexSymbolConfig_jG0, A.TexSymbolConfig_S6K], type$.ConstantStringMap_String_TexSymbolConfig);
    A.Map_Dgm7a = new C.GeneralConstantMap([A.Mode_0, A.Map_MYH09, A.Mode_1, A.Map_SXdse], C.findType("GeneralConstantMap<Mode,Map<String,TexSymbolConfig>>"));
    A.Object_bSF = {doubleleftarrow: 0, doublerightarrow: 1, leftarrow: 2, leftbrace: 3, leftbraceunder: 4, leftgroup: 5, leftgroupunder: 6, leftharpoon: 7, leftharpoonplus: 8, leftharpoondown: 9, leftharpoondownplus: 10, lefthook: 11, leftlinesegment: 12, leftmapsto: 13, leftToFrom: 14, longequal: 15, midbrace: 16, midbraceunder: 17, oiintSize1: 18, oiintSize2: 19, oiiintSize1: 20, oiiintSize2: 21, rightarrow: 22, rightbrace: 23, rightbraceunder: 24, rightgroup: 25, rightgroupunder: 26, rightharpoon: 27, rightharpoonplus: 28, rightharpoondown: 29, rightharpoondownplus: 30, righthook: 31, rightlinesegment: 32, rightToFrom: 33, twoheadleftarrow: 34, twoheadrightarrow: 35, tilde1: 36, tilde2: 37, tilde3: 38, tilde4: 39, vec: 40, widehat1: 41, widehat2: 42, widehat3: 43, widehat4: 44, widecheck1: 45, widecheck2: 46, widecheck3: 47, widecheck4: 48, baraboveleftarrow: 49, rightarrowabovebar: 50, baraboveshortleftharpoon: 51, rightharpoonaboveshortbar: 52, shortbaraboveleftharpoon: 53, shortrightharpoonabovebar: 54};
    A.Map_I87FN = new C.ConstantStringMap(A.Object_bSF, ["M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z", "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z", "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z", "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z", "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z", "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z", "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z", "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z", "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z", "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z", "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z", "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z", "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z", "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z", "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z", "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z", "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z", "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z", "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z", "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z", "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z", "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z", "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z", "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z", "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z", "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z", "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z", "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z", "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z", "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z", "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z", "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z", "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z", "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z", "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z", "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z", "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z", "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z", "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z", "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z", "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z", "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z", "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z", "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z", "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z", "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z", "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z", "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z", "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z", "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z", "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"], type$.ConstantStringMap_String_String);
    A.Object_wPV = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, "\u2261": 10, "\u227a": 11, "\u227b": 12, "\u223c": 13, "\u2aaf": 14, "\u2ab0": 15, "\u2243": 16, "\u2223": 17, "\u226a": 18, "\u226b": 19, "\u224d": 20, "\u22c8": 21, "\u2323": 22, "\u2291": 23, "\u2292": 24, "\u2250": 25, "\u2322": 26, "\u220b": 27, "\u221d": 28, "\u22a2": 29, "\u22a3": 30, "\u2135": 31, "\u2200": 32, "\u210f": 33, "\u2203": 34, "\u2207": 35, "\u266d": 36, "\u2113": 37, "\u266e": 38, "\u2663": 39, "\u2118": 40, "\u266f": 41, "\u2662": 42, "\u211c": 43, "\u2661": 44, "\u2111": 45, "\u2660": 46, "\u23b1": 47, "\u23b0": 48, "\u27ef": 49, "\u27ee": 50, "\u2213": 51, "\u2296": 52, "\u228e": 53, "\u2293": 54, "\u2294": 55, "\u2240": 56, "\u27f5": 57, "\u21d0": 58, "\u27f8": 59, "\u27f6": 60, "\u21d2": 61, "\u27f9": 62, "\u2194": 63, "\u27f7": 64, "\u21d4": 65, "\u27fa": 66, "\u21a6": 67, "\u27fc": 68, "\u2197": 69, "\u21a9": 70, "\u21aa": 71, "\u2198": 72, "\u21bc": 73, "\u21c0": 74, "\u2199": 75, "\u21bd": 76, "\u21c1": 77, "\u2196": 78, "\u21cc": 79, "\u226e": 80, "\u2a87": 81, "\u2268": 82, "\u22e6": 83, "\u2a89": 84, "\u2280": 85, "\u22e0": 86, "\u22e8": 87, "\u2ab9": 88, "\u2241": 89, "\u2224": 90, "\u22ac": 91, "\u22ad": 92, "\u22ec": 93, "\u228a": 94, "\u2acb": 95, "\u226f": 96, "\u2a88": 97, "\u2269": 98, "\u22e7": 99, "\u2a8a": 100, "\u2281": 101, "\u22e1": 102, "\u22e9": 103, "\u2aba": 104, "\u2246": 105, "\u2226": 106, "\u22af": 107, "\u22ed": 108, "\u228b": 109, "\u2acc": 110, "\u22ae": 111, "\u2ab5": 112, "\u2ab6": 113, "\u219a": 114, "\u219b": 115, "\u21cd": 116, "\u21cf": 117, "\u21ae": 118, "\u21ce": 119, "\u2221": 120, "\u2132": 121, "\u2141": 122, "\u2222": 123, "\u2201": 124, "\xf0": 125, "\xa5": 126, "\u2713": 127, "\u2136": 128, "\u2138": 129, "\u2137": 130, "\u03dd": 131, "\u250c": 132, "\u2510": 133, "\u2514": 134, "\u2518": 135, "\u2266": 136, "\u2a7d": 137, "\u2a95": 138, "\u2272": 139, "\u2a85": 140, "\u224a": 141, "\u22d8": 142, "\u2276": 143, "\u22da": 144, "\u2a8b": 145, "\u2253": 146, "\u2252": 147, "\u223d": 148, "\u22cd": 149, "\u2ac5": 150, "\u22d0": 151, "\u228f": 152, "\u227c": 153, "\u22de": 154, "\u227e": 155, "\u2ab7": 156, "\u22a8": 157, "\u22aa": 158, "\u224f": 159, "\u224e": 160, "\u2267": 161, "\u2a7e": 162, "\u2a96": 163, "\u2273": 164, "\u2a86": 165, "\u22d9": 166, "\u2277": 167, "\u22db": 168, "\u2a8c": 169, "\u2256": 170, "\u2257": 171, "\u225c": 172, "\u2ac6": 173, "\u22d1": 174, "\u2290": 175, "\u227d": 176, "\u22df": 177, "\u227f": 178, "\u2ab8": 179, "\u22a9": 180, "\u226c": 181, "\u22d4": 182, "\u2234": 183, "\u2235": 184, "\u2242": 185, "\u2251": 186, "\u2214": 187, "\u22d2": 188, "\u22d3": 189, "\u2a5e": 190, "\u229f": 191, "\u229e": 192, "\u22c7": 193, "\u22c9": 194, "\u22ca": 195, "\u22cb": 196, "\u22cc": 197, "\u22cf": 198, "\u22ce": 199, "\u229d": 200, "\u229b": 201, "\u22ba": 202, "\u22a0": 203, "\u21e2": 204, "\u21e0": 205, "\u21c7": 206, "\u21c6": 207, "\u21da": 208, "\u219e": 209, "\u21a2": 210, "\u21ab": 211, "\u21cb": 212, "\u21b6": 213, "\u21ba": 214, "\u21b0": 215, "\u21c8": 216, "\u21bf": 217, "\u21c3": 218, "\u22b8": 219, "\u21ad": 220, "\u21c9": 221, "\u21c4": 222, "\u21a0": 223, "\u21a3": 224, "\u21ac": 225, "\u21b7": 226, "\u21bb": 227, "\u21b1": 228, "\u21ca": 229, "\u21be": 230, "\u21c2": 231, "\u21dd": 232, "\u21db": 233, "`": 234, "\u2220": 235, "\u221e": 236, "\u0393": 237, "\u0394": 238, "\u0398": 239, "\u039b": 240, "\u039e": 241, "\u03a0": 242, "\u03a3": 243, "\u03a5": 244, "\u03a6": 245, "\u03a8": 246, "\u03a9": 247, "\u0391": 248, "\u0392": 249, "\u0395": 250, "\u0396": 251, "\u0397": 252, "\u0399": 253, "\u039a": 254, "\u039c": 255, "\u039d": 256, "\u039f": 257, "\u03a1": 258, "\u03a4": 259, "\u03a7": 260, "\xac": 261, "\u03b1": 262, "\u03b2": 263, "\u03b3": 264, "\u03b4": 265, "\u03f5": 266, "\u03b6": 267, "\u03b7": 268, "\u03b8": 269, "\u03b9": 270, "\u03ba": 271, "\u03bb": 272, "\u03bc": 273, "\u03bd": 274, "\u03be": 275, "\u03bf": 276, "\u03c0": 277, "\u03c1": 278, "\u03c3": 279, "\u03c4": 280, "\u03c5": 281, "\u03d5": 282, "\u03c7": 283, "\u03c8": 284, "\u03c9": 285, "\u03b5": 286, "\u03d1": 287, "\u03d6": 288, "\u03f1": 289, "\u03c2": 290, "\u03c6": 291, "*": 292, "+": 293, "-": 294, "\u22c5": 295, "\xf7": 296, "\xb1": 297, "\xd7": 298, "\u2229": 299, "\u222a": 300, "\u2227": 301, "\u2228": 302, "(": 303, "[": 304, "\u27e8": 305, ")": 306, "]": 307, "?": 308, "!": 309, "\u27e9": 310, "=": 311, "<": 312, ">": 313, ":": 314, "\u2248": 315, "\u2245": 316, "\u2265": 317, "\u2208": 318, "\u2282": 319, "\u2283": 320, "\u2286": 321, "\u2287": 322, "\u2288": 323, "\u2289": 324, "\u2190": 325, "\u2264": 326, "\u2192": 327, "\u2271": 328, "\u2270": 329, ",": 330, ";": 331, "\u22bc": 332, "\u22bb": 333, "\u2299": 334, "\u2295": 335, "\u2297": 336, "\u2202": 337, "\u2298": 338, "\u229a": 339, "\u22a1": 340, "\u230a": 341, "\u230b": 342, "\u2308": 343, "\u2309": 344, "|": 345, "\u2191": 346, "\u21d1": 347, "\u2193": 348, "\u21d3": 349, "\u2195": 350, "\u21d5": 351, "\u2026": 352, "\u22ef": 353, "\u22f1": 354, "\u0131": 355, "\u0237": 356, "\xb0": 357, "\xa3": 358, "/": 359, "@": 360, ".": 361, '"': 362, A: 363, B: 364, C: 365, D: 366, E: 367, F: 368, G: 369, H: 370, I: 371, J: 372, K: 373, L: 374, M: 375, N: 376, O: 377, P: 378, Q: 379, R: 380, S: 381, T: 382, U: 383, V: 384, W: 385, X: 386, Y: 387, Z: 388, a: 389, b: 390, c: 391, d: 392, e: 393, f: 394, g: 395, h: 396, i: 397, j: 398, k: 399, l: 400, m: 401, n: 402, o: 403, p: 404, q: 405, r: 406, s: 407, t: 408, u: 409, v: 410, w: 411, x: 412, y: 413, z: 414, "\u2102": 415, "\u210d": 416, "\u2115": 417, "\u2119": 418, "\u211a": 419, "\u211d": 420, "\u2124": 421, "\u210e": 422, "\ud835\udc00": 423, "\ud835\udc34": 424, "\ud835\udc68": 425, "\ud835\udd04": 426, "\ud835\udda0": 427, "\ud835\uddd4": 428, "\ud835\ude08": 429, "\ud835\ude70": 430, "\ud835\udd38": 431, "\ud835\udc9c": 432, "\ud835\udc01": 433, "\ud835\udc35": 434, "\ud835\udc69": 435, "\ud835\udd05": 436, "\ud835\udda1": 437, "\ud835\uddd5": 438, "\ud835\ude09": 439, "\ud835\ude71": 440, "\ud835\udd39": 441, "\ud835\udc9d": 442, "\ud835\udc02": 443, "\ud835\udc36": 444, "\ud835\udc6a": 445, "\ud835\udd06": 446, "\ud835\udda2": 447, "\ud835\uddd6": 448, "\ud835\ude0a": 449, "\ud835\ude72": 450, "\ud835\udd3a": 451, "\ud835\udc9e": 452, "\ud835\udc03": 453, "\ud835\udc37": 454, "\ud835\udc6b": 455, "\ud835\udd07": 456, "\ud835\udda3": 457, "\ud835\uddd7": 458, "\ud835\ude0b": 459, "\ud835\ude73": 460, "\ud835\udd3b": 461, "\ud835\udc9f": 462, "\ud835\udc04": 463, "\ud835\udc38": 464, "\ud835\udc6c": 465, "\ud835\udd08": 466, "\ud835\udda4": 467, "\ud835\uddd8": 468, "\ud835\ude0c": 469, "\ud835\ude74": 470, "\ud835\udd3c": 471, "\ud835\udca0": 472, "\ud835\udc05": 473, "\ud835\udc39": 474, "\ud835\udc6d": 475, "\ud835\udd09": 476, "\ud835\udda5": 477, "\ud835\uddd9": 478, "\ud835\ude0d": 479, "\ud835\ude75": 480, "\ud835\udd3d": 481, "\ud835\udca1": 482, "\ud835\udc06": 483, "\ud835\udc3a": 484, "\ud835\udc6e": 485, "\ud835\udd0a": 486, "\ud835\udda6": 487, "\ud835\uddda": 488, "\ud835\ude0e": 489, "\ud835\ude76": 490, "\ud835\udd3e": 491, "\ud835\udca2": 492, "\ud835\udc07": 493, "\ud835\udc3b": 494, "\ud835\udc6f": 495, "\ud835\udd0b": 496, "\ud835\udda7": 497, "\ud835\udddb": 498, "\ud835\ude0f": 499, "\ud835\ude77": 500, "\ud835\udd3f": 501, "\ud835\udca3": 502, "\ud835\udc08": 503, "\ud835\udc3c": 504, "\ud835\udc70": 505, "\ud835\udd0c": 506, "\ud835\udda8": 507, "\ud835\udddc": 508, "\ud835\ude10": 509, "\ud835\ude78": 510, "\ud835\udd40": 511, "\ud835\udca4": 512, "\ud835\udc09": 513, "\ud835\udc3d": 514, "\ud835\udc71": 515, "\ud835\udd0d": 516, "\ud835\udda9": 517, "\ud835\udddd": 518, "\ud835\ude11": 519, "\ud835\ude79": 520, "\ud835\udd41": 521, "\ud835\udca5": 522, "\ud835\udc0a": 523, "\ud835\udc3e": 524, "\ud835\udc72": 525, "\ud835\udd0e": 526, "\ud835\uddaa": 527, "\ud835\uddde": 528, "\ud835\ude12": 529, "\ud835\ude7a": 530, "\ud835\udd42": 531, "\ud835\udca6": 532, "\ud835\udc0b": 533, "\ud835\udc3f": 534, "\ud835\udc73": 535, "\ud835\udd0f": 536, "\ud835\uddab": 537, "\ud835\udddf": 538, "\ud835\ude13": 539, "\ud835\ude7b": 540, "\ud835\udd43": 541, "\ud835\udca7": 542, "\ud835\udc0c": 543, "\ud835\udc40": 544, "\ud835\udc74": 545, "\ud835\udd10": 546, "\ud835\uddac": 547, "\ud835\udde0": 548, "\ud835\ude14": 549, "\ud835\ude7c": 550, "\ud835\udd44": 551, "\ud835\udca8": 552, "\ud835\udc0d": 553, "\ud835\udc41": 554, "\ud835\udc75": 555, "\ud835\udd11": 556, "\ud835\uddad": 557, "\ud835\udde1": 558, "\ud835\ude15": 559, "\ud835\ude7d": 560, "\ud835\udd45": 561, "\ud835\udca9": 562, "\ud835\udc0e": 563, "\ud835\udc42": 564, "\ud835\udc76": 565, "\ud835\udd12": 566, "\ud835\uddae": 567, "\ud835\udde2": 568, "\ud835\ude16": 569, "\ud835\ude7e": 570, "\ud835\udd46": 571, "\ud835\udcaa": 572, "\ud835\udc0f": 573, "\ud835\udc43": 574, "\ud835\udc77": 575, "\ud835\udd13": 576, "\ud835\uddaf": 577, "\ud835\udde3": 578, "\ud835\ude17": 579, "\ud835\ude7f": 580, "\ud835\udd47": 581, "\ud835\udcab": 582, "\ud835\udc10": 583, "\ud835\udc44": 584, "\ud835\udc78": 585, "\ud835\udd14": 586, "\ud835\uddb0": 587, "\ud835\udde4": 588, "\ud835\ude18": 589, "\ud835\ude80": 590, "\ud835\udd48": 591, "\ud835\udcac": 592, "\ud835\udc11": 593, "\ud835\udc45": 594, "\ud835\udc79": 595, "\ud835\udd15": 596, "\ud835\uddb1": 597, "\ud835\udde5": 598, "\ud835\ude19": 599, "\ud835\ude81": 600, "\ud835\udd49": 601, "\ud835\udcad": 602, "\ud835\udc12": 603, "\ud835\udc46": 604, "\ud835\udc7a": 605, "\ud835\udd16": 606, "\ud835\uddb2": 607, "\ud835\udde6": 608, "\ud835\ude1a": 609, "\ud835\ude82": 610, "\ud835\udd4a": 611, "\ud835\udcae": 612, "\ud835\udc13": 613, "\ud835\udc47": 614, "\ud835\udc7b": 615, "\ud835\udd17": 616, "\ud835\uddb3": 617, "\ud835\udde7": 618, "\ud835\ude1b": 619, "\ud835\ude83": 620, "\ud835\udd4b": 621, "\ud835\udcaf": 622, "\ud835\udc14": 623, "\ud835\udc48": 624, "\ud835\udc7c": 625, "\ud835\udd18": 626, "\ud835\uddb4": 627, "\ud835\udde8": 628, "\ud835\ude1c": 629, "\ud835\ude84": 630, "\ud835\udd4c": 631, "\ud835\udcb0": 632, "\ud835\udc15": 633, "\ud835\udc49": 634, "\ud835\udc7d": 635, "\ud835\udd19": 636, "\ud835\uddb5": 637, "\ud835\udde9": 638, "\ud835\ude1d": 639, "\ud835\ude85": 640, "\ud835\udd4d": 641, "\ud835\udcb1": 642, "\ud835\udc16": 643, "\ud835\udc4a": 644, "\ud835\udc7e": 645, "\ud835\udd1a": 646, "\ud835\uddb6": 647, "\ud835\uddea": 648, "\ud835\ude1e": 649, "\ud835\ude86": 650, "\ud835\udd4e": 651, "\ud835\udcb2": 652, "\ud835\udc17": 653, "\ud835\udc4b": 654, "\ud835\udc7f": 655, "\ud835\udd1b": 656, "\ud835\uddb7": 657, "\ud835\uddeb": 658, "\ud835\ude1f": 659, "\ud835\ude87": 660, "\ud835\udd4f": 661, "\ud835\udcb3": 662, "\ud835\udc18": 663, "\ud835\udc4c": 664, "\ud835\udc80": 665, "\ud835\udd1c": 666, "\ud835\uddb8": 667, "\ud835\uddec": 668, "\ud835\ude20": 669, "\ud835\ude88": 670, "\ud835\udd50": 671, "\ud835\udcb4": 672, "\ud835\udc19": 673, "\ud835\udc4d": 674, "\ud835\udc81": 675, "\ud835\udd1d": 676, "\ud835\uddb9": 677, "\ud835\udded": 678, "\ud835\ude21": 679, "\ud835\ude89": 680, "\ud835\udd51": 681, "\ud835\udcb5": 682, "\ud835\udc1a": 683, "\ud835\udc4e": 684, "\ud835\udc82": 685, "\ud835\udd1e": 686, "\ud835\uddba": 687, "\ud835\uddee": 688, "\ud835\ude22": 689, "\ud835\ude8a": 690, "\ud835\udc1b": 691, "\ud835\udc4f": 692, "\ud835\udc83": 693, "\ud835\udd1f": 694, "\ud835\uddbb": 695, "\ud835\uddef": 696, "\ud835\ude23": 697, "\ud835\ude8b": 698, "\ud835\udc1c": 699, "\ud835\udc50": 700, "\ud835\udc84": 701, "\ud835\udd20": 702, "\ud835\uddbc": 703, "\ud835\uddf0": 704, "\ud835\ude24": 705, "\ud835\ude8c": 706, "\ud835\udc1d": 707, "\ud835\udc51": 708, "\ud835\udc85": 709, "\ud835\udd21": 710, "\ud835\uddbd": 711, "\ud835\uddf1": 712, "\ud835\ude25": 713, "\ud835\ude8d": 714, "\ud835\udc1e": 715, "\ud835\udc52": 716, "\ud835\udc86": 717, "\ud835\udd22": 718, "\ud835\uddbe": 719, "\ud835\uddf2": 720, "\ud835\ude26": 721, "\ud835\ude8e": 722, "\ud835\udc1f": 723, "\ud835\udc53": 724, "\ud835\udc87": 725, "\ud835\udd23": 726, "\ud835\uddbf": 727, "\ud835\uddf3": 728, "\ud835\ude27": 729, "\ud835\ude8f": 730, "\ud835\udc20": 731, "\ud835\udc54": 732, "\ud835\udc88": 733, "\ud835\udd24": 734, "\ud835\uddc0": 735, "\ud835\uddf4": 736, "\ud835\ude28": 737, "\ud835\ude90": 738, "\ud835\udc21": 739, "\ud835\udc55": 740, "\ud835\udc89": 741, "\ud835\udd25": 742, "\ud835\uddc1": 743, "\ud835\uddf5": 744, "\ud835\ude29": 745, "\ud835\ude91": 746, "\ud835\udc22": 747, "\ud835\udc56": 748, "\ud835\udc8a": 749, "\ud835\udd26": 750, "\ud835\uddc2": 751, "\ud835\uddf6": 752, "\ud835\ude2a": 753, "\ud835\ude92": 754, "\ud835\udc23": 755, "\ud835\udc57": 756, "\ud835\udc8b": 757, "\ud835\udd27": 758, "\ud835\uddc3": 759, "\ud835\uddf7": 760, "\ud835\ude2b": 761, "\ud835\ude93": 762, "\ud835\udc24": 763, "\ud835\udc58": 764, "\ud835\udc8c": 765, "\ud835\udd28": 766, "\ud835\uddc4": 767, "\ud835\uddf8": 768, "\ud835\ude2c": 769, "\ud835\ude94": 770, "\ud835\udc25": 771, "\ud835\udc59": 772, "\ud835\udc8d": 773, "\ud835\udd29": 774, "\ud835\uddc5": 775, "\ud835\uddf9": 776, "\ud835\ude2d": 777, "\ud835\ude95": 778, "\ud835\udc26": 779, "\ud835\udc5a": 780, "\ud835\udc8e": 781, "\ud835\udd2a": 782, "\ud835\uddc6": 783, "\ud835\uddfa": 784, "\ud835\ude2e": 785, "\ud835\ude96": 786, "\ud835\udc27": 787, "\ud835\udc5b": 788, "\ud835\udc8f": 789, "\ud835\udd2b": 790, "\ud835\uddc7": 791, "\ud835\uddfb": 792, "\ud835\ude2f": 793, "\ud835\ude97": 794, "\ud835\udc28": 795, "\ud835\udc5c": 796, "\ud835\udc90": 797, "\ud835\udd2c": 798, "\ud835\uddc8": 799, "\ud835\uddfc": 800, "\ud835\ude30": 801, "\ud835\ude98": 802, "\ud835\udc29": 803, "\ud835\udc5d": 804, "\ud835\udc91": 805, "\ud835\udd2d": 806, "\ud835\uddc9": 807, "\ud835\uddfd": 808, "\ud835\ude31": 809, "\ud835\ude99": 810, "\ud835\udc2a": 811, "\ud835\udc5e": 812, "\ud835\udc92": 813, "\ud835\udd2e": 814, "\ud835\uddca": 815, "\ud835\uddfe": 816, "\ud835\ude32": 817, "\ud835\ude9a": 818, "\ud835\udc2b": 819, "\ud835\udc5f": 820, "\ud835\udc93": 821, "\ud835\udd2f": 822, "\ud835\uddcb": 823, "\ud835\uddff": 824, "\ud835\ude33": 825, "\ud835\ude9b": 826, "\ud835\udc2c": 827, "\ud835\udc60": 828, "\ud835\udc94": 829, "\ud835\udd30": 830, "\ud835\uddcc": 831, "\ud835\ude00": 832, "\ud835\ude34": 833, "\ud835\ude9c": 834, "\ud835\udc2d": 835, "\ud835\udc61": 836, "\ud835\udc95": 837, "\ud835\udd31": 838, "\ud835\uddcd": 839, "\ud835\ude01": 840, "\ud835\ude35": 841, "\ud835\ude9d": 842, "\ud835\udc2e": 843, "\ud835\udc62": 844, "\ud835\udc96": 845, "\ud835\udd32": 846, "\ud835\uddce": 847, "\ud835\ude02": 848, "\ud835\ude36": 849, "\ud835\ude9e": 850, "\ud835\udc2f": 851, "\ud835\udc63": 852, "\ud835\udc97": 853, "\ud835\udd33": 854, "\ud835\uddcf": 855, "\ud835\ude03": 856, "\ud835\ude37": 857, "\ud835\ude9f": 858, "\ud835\udc30": 859, "\ud835\udc64": 860, "\ud835\udc98": 861, "\ud835\udd34": 862, "\ud835\uddd0": 863, "\ud835\ude04": 864, "\ud835\ude38": 865, "\ud835\udea0": 866, "\ud835\udc31": 867, "\ud835\udc65": 868, "\ud835\udc99": 869, "\ud835\udd35": 870, "\ud835\uddd1": 871, "\ud835\ude05": 872, "\ud835\ude39": 873, "\ud835\udea1": 874, "\ud835\udc32": 875, "\ud835\udc66": 876, "\ud835\udc9a": 877, "\ud835\udd36": 878, "\ud835\uddd2": 879, "\ud835\ude06": 880, "\ud835\ude3a": 881, "\ud835\udea2": 882, "\ud835\udc33": 883, "\ud835\udc67": 884, "\ud835\udc9b": 885, "\ud835\udd37": 886, "\ud835\uddd3": 887, "\ud835\ude07": 888, "\ud835\ude3b": 889, "\ud835\udea3": 890, "\ud835\udd5c": 891, "\ud835\udfce": 892, "\ud835\udfe2": 893, "\ud835\udfec": 894, "\ud835\udff6": 895, "\ud835\udfcf": 896, "\ud835\udfe3": 897, "\ud835\udfed": 898, "\ud835\udff7": 899, "\ud835\udfd0": 900, "\ud835\udfe4": 901, "\ud835\udfee": 902, "\ud835\udff8": 903, "\ud835\udfd1": 904, "\ud835\udfe5": 905, "\ud835\udfef": 906, "\ud835\udff9": 907, "\ud835\udfd2": 908, "\ud835\udfe6": 909, "\ud835\udff0": 910, "\ud835\udffa": 911, "\ud835\udfd3": 912, "\ud835\udfe7": 913, "\ud835\udff1": 914, "\ud835\udffb": 915, "\ud835\udfd4": 916, "\ud835\udfe8": 917, "\ud835\udff2": 918, "\ud835\udffc": 919, "\ud835\udfd5": 920, "\ud835\udfe9": 921, "\ud835\udff3": 922, "\ud835\udffd": 923, "\ud835\udfd6": 924, "\ud835\udfea": 925, "\ud835\udff4": 926, "\ud835\udffe": 927, "\ud835\udfd7": 928, "\ud835\udfeb": 929, "\ud835\udff5": 930, "\ud835\udfff": 931, "\xc7": 932, "\xd0": 933, "\xde": 934, "\xe7": 935, "\xfe": 936, "\xa0": 937, " ": 938, "\xa7": 939, "\xb6": 940, "\xdf": 941, "\xe6": 942, "\u0153": 943, "\xf8": 944, "\xc6": 945, "\u0152": 946, "\xd8": 947, "'": 948, "\u2013": 949, "\u2014": 950, "\u2018": 951, "\u2019": 952, "\u201c": 953, "\u201d": 954, "\u231c": 955, "\u231d": 956, "\u231e": 957, "\u231f": 958, "\u22a5": 959, "\u2225": 960, "#": 961, "&": 962, "\u2020": 963, "\u2021": 964, "\u25ef": 965, "\u2219": 966, "\u2a3f": 967, "\u22ea": 968, "\u22eb": 969, "\u22b4": 970, "\u22b5": 971, "\u25b3": 972, "\u25bd": 973, "\u25ca": 974, "\u24c8": 975, "\xae": 976, "\u2204": 977, "\u2127": 978, "\u2035": 979, "\u25b2": 980, "\u25bc": 981, "\u25a0": 982, "\u29eb": 983, "\u2605": 984, "\u2571": 985, "\u2572": 986, "\u25a1": 987, "\u03f0": 988, "\u22d6": 989, "\u22b2": 990, "\u22d7": 991, "\u22b3": 992, "\u25c0": 993, "\u220d": 994, "\u25b6": 995, "\u2216": 996, $: 997, "%": 998, _: 999, "\u2032": 1000, "\u22a4": 1001, "\u2205": 1002, "\u2218": 1003, "\u221a": 1004, "\u0338": 1005, "\u22c4": 1006, "\u22c6": 1007, "\u25c3": 1008, "\u25b9": 1009, "{": 1010, "}": 1011, "\\": 1012, "\u2210": 1013, "\u22c1": 1014, "\u22c0": 1015, "\u2a04": 1016, "\u22c2": 1017, "\u22c3": 1018, "\u222b": 1019, "\u222c": 1020, "\u222d": 1021, "\u220f": 1022, "\u2211": 1023, "\u2a02": 1024, "\u2a01": 1025, "\u2a00": 1026, "\u222e": 1027, "\u222f": 1028, "\u2230": 1029, "\u2a06": 1030, "\u22ee": 1031, "\u02ca": 1032, "\u02cb": 1033, "\xa8": 1034, "~": 1035, "\u02c9": 1036, "\u02d8": 1037, "\u02c7": 1038, "^": 1039, "\u20d7": 1040, "\u02d9": 1041, "\u02da": 1042, "\u2720": 1043, "\u02c6": 1044, "\u02dc": 1045, "\u02dd": 1046};
    A.RenderConfig_tV5 = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_uWd = new B.SymbolRenderConfig(A.RenderConfig_tV5, A.RenderConfig_tV5, null);
    A.RenderConfig_vNf = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_3);
    A.SymbolRenderConfig_0Ko = new B.SymbolRenderConfig(A.RenderConfig_vNf, null, null);
    A.RenderConfig_6gY = new B.RenderConfig(null, A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_3ap = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, null);
    A.SymbolRenderConfig_lvT = new B.SymbolRenderConfig(A.RenderConfig_vNf, null, A.SymbolRenderConfig_3ap);
    A.SymbolRenderConfig_wW7 = new B.SymbolRenderConfig(A.RenderConfig_tV5, null, null);
    A.RenderConfig_xOp = new B.RenderConfig(null, A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_owH = new B.SymbolRenderConfig(A.RenderConfig_xOp, null, null);
    A.SymbolRenderConfig_6XR = new B.SymbolRenderConfig(A.RenderConfig_tV5, null, A.SymbolRenderConfig_owH);
    A.RenderConfig_9Og = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_5);
    A.SymbolRenderConfig_vKi = new B.SymbolRenderConfig(A.RenderConfig_9Og, null, null);
    A.RenderConfig_g7p = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_4);
    A.SymbolRenderConfig_ws9 = new B.SymbolRenderConfig(A.RenderConfig_g7p, null, null);
    A.RenderConfig_Mk1 = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_2);
    A.SymbolRenderConfig_BQu = new B.SymbolRenderConfig(A.RenderConfig_Mk1, null, null);
    A.RenderConfig_p8a = new B.RenderConfig("\ue010", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_nT8 = new B.SymbolRenderConfig(A.RenderConfig_p8a, null, null);
    A.SymbolRenderConfig_LZA = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_nT8);
    A.RenderConfig_OCS = new B.RenderConfig("\ue00c", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_kLV = new B.SymbolRenderConfig(A.RenderConfig_OCS, null, null);
    A.SymbolRenderConfig_GNY = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_kLV);
    A.RenderConfig_h45 = new B.RenderConfig("\ue006", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_SfZ = new B.SymbolRenderConfig(A.RenderConfig_h45, null, null);
    A.SymbolRenderConfig_oFh = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_SfZ);
    A.RenderConfig_nSR = new B.RenderConfig("\ue01a", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_IAG = new B.SymbolRenderConfig(A.RenderConfig_nSR, null, null);
    A.SymbolRenderConfig_qJQ = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_IAG);
    A.RenderConfig_sBx = new B.RenderConfig("\ue017", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_PLC = new B.SymbolRenderConfig(A.RenderConfig_sBx, null, null);
    A.SymbolRenderConfig_MoU = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_PLC);
    A.RenderConfig_nB6 = new B.RenderConfig("\ue00f", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_jGv = new B.SymbolRenderConfig(A.RenderConfig_nB6, null, null);
    A.SymbolRenderConfig_Ovl = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_jGv);
    A.RenderConfig_myM = new B.RenderConfig("\ue00d", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_zWQ = new B.SymbolRenderConfig(A.RenderConfig_myM, null, null);
    A.SymbolRenderConfig_4s1 = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_zWQ);
    A.RenderConfig_7LY = new B.RenderConfig("\ue007", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_RJZ = new B.SymbolRenderConfig(A.RenderConfig_7LY, null, null);
    A.SymbolRenderConfig_Pwv = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_RJZ);
    A.RenderConfig_HD4 = new B.RenderConfig("\ue01b", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_k3f = new B.SymbolRenderConfig(A.RenderConfig_HD4, null, null);
    A.SymbolRenderConfig_Ddg = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_k3f);
    A.RenderConfig_A65 = new B.RenderConfig("\ue019", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_Zok = new B.SymbolRenderConfig(A.RenderConfig_A65, null, null);
    A.SymbolRenderConfig_jx8 = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_Zok);
    A.SymbolRenderConfig_L53 = new B.SymbolRenderConfig(A.RenderConfig_xOp, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_zHp = new B.SymbolRenderConfig(A.RenderConfig_xOp, A.RenderConfig_xOp, null);
    A.RenderConfig_aVZ = new B.RenderConfig(null, A.FontOptions_eMX, A.AtomType_4);
    A.SymbolRenderConfig_sW2 = new B.SymbolRenderConfig(A.RenderConfig_aVZ, null, null);
    A.RenderConfig_2R7 = new B.RenderConfig(null, A.FontOptions_eMX, A.AtomType_5);
    A.SymbolRenderConfig_m3r = new B.SymbolRenderConfig(A.RenderConfig_2R7, null, null);
    A.SymbolRenderConfig_8SS = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_0Ko);
    A.RenderConfig_ekA = new B.RenderConfig(null, A.FontOptions_eMX, A.AtomType_2);
    A.SymbolRenderConfig_QTt = new B.SymbolRenderConfig(A.RenderConfig_ekA, null, null);
    A.RenderConfig_xrs = new B.RenderConfig("\u2018", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_7lN = new B.SymbolRenderConfig(A.RenderConfig_xrs, A.RenderConfig_xrs, null);
    A.RenderConfig_XXu = new B.RenderConfig("A", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_e4C = new B.SymbolRenderConfig(A.RenderConfig_XXu, null, null);
    A.RenderConfig_DVy = new B.RenderConfig("B", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_tge = new B.SymbolRenderConfig(A.RenderConfig_DVy, null, null);
    A.RenderConfig_H7H = new B.RenderConfig("E", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_pm6 = new B.SymbolRenderConfig(A.RenderConfig_H7H, null, null);
    A.RenderConfig_JRD = new B.RenderConfig("Z", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_4aN = new B.SymbolRenderConfig(A.RenderConfig_JRD, null, null);
    A.RenderConfig_JCA = new B.RenderConfig("H", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_BnS = new B.SymbolRenderConfig(A.RenderConfig_JCA, null, null);
    A.RenderConfig_qlG = new B.RenderConfig("I", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_QEX = new B.SymbolRenderConfig(A.RenderConfig_qlG, null, null);
    A.RenderConfig_gtE = new B.RenderConfig("K", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_xfc = new B.SymbolRenderConfig(A.RenderConfig_gtE, null, null);
    A.RenderConfig_Oe0 = new B.RenderConfig("M", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_wuw = new B.SymbolRenderConfig(A.RenderConfig_Oe0, null, null);
    A.RenderConfig_06E = new B.RenderConfig("N", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_eYJ = new B.SymbolRenderConfig(A.RenderConfig_06E, null, null);
    A.RenderConfig_GxD = new B.RenderConfig("O", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_0Ji = new B.SymbolRenderConfig(A.RenderConfig_GxD, null, null);
    A.RenderConfig_BVn = new B.RenderConfig("P", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_JUM = new B.SymbolRenderConfig(A.RenderConfig_BVn, null, null);
    A.RenderConfig_nKI = new B.RenderConfig("T", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_aUa = new B.SymbolRenderConfig(A.RenderConfig_nKI, null, null);
    A.RenderConfig_9kZ = new B.RenderConfig("X", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_Wv4 = new B.SymbolRenderConfig(A.RenderConfig_9kZ, null, null);
    A.FontOptions_hf0 = new B.FontOptions("Math", F.FontWeight_3, A.FontStyle_1, A.List_empty22);
    A.RenderConfig_GH3 = new B.RenderConfig(null, A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_nFu = new B.SymbolRenderConfig(A.RenderConfig_GH3, null, null);
    A.RenderConfig_hrP = new B.RenderConfig("\u2217", A.FontOptions_25d, A.AtomType_2);
    A.SymbolRenderConfig_qzb = new B.SymbolRenderConfig(A.RenderConfig_hrP, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_X7m = new B.SymbolRenderConfig(A.RenderConfig_Mk1, A.RenderConfig_tV5, null);
    A.RenderConfig_yMX = new B.RenderConfig("\u2212", A.FontOptions_25d, A.AtomType_2);
    A.SymbolRenderConfig_FqF = new B.SymbolRenderConfig(A.RenderConfig_yMX, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_e2J = new B.SymbolRenderConfig(A.RenderConfig_Mk1, null, A.SymbolRenderConfig_QTt);
    A.SymbolRenderConfig_2tj = new B.SymbolRenderConfig(A.RenderConfig_g7p, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_00V = new B.SymbolRenderConfig(A.RenderConfig_9Og, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_5H9 = new B.SymbolRenderConfig(A.RenderConfig_vNf, A.RenderConfig_tV5, null);
    A.RenderConfig_JAF = new B.RenderConfig("\ue016", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_Yot = new B.SymbolRenderConfig(A.RenderConfig_JAF, null, null);
    A.SymbolRenderConfig_uF1 = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_Yot);
    A.RenderConfig_ITA = new B.RenderConfig("\ue018", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_pe4 = new B.SymbolRenderConfig(A.RenderConfig_ITA, null, null);
    A.SymbolRenderConfig_SWj = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_pe4);
    A.RenderConfig_SCP = new B.RenderConfig("\ue00e", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_UVM = new B.SymbolRenderConfig(A.RenderConfig_SCP, null, null);
    A.SymbolRenderConfig_ONN = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_UVM);
    A.RenderConfig_Lx9 = new B.RenderConfig("\ue011", A.FontOptions_eMX, A.AtomType_3);
    A.SymbolRenderConfig_PHV = new B.SymbolRenderConfig(A.RenderConfig_Lx9, null, null);
    A.SymbolRenderConfig_Frn = new B.SymbolRenderConfig(A.RenderConfig_6gY, null, A.SymbolRenderConfig_PHV);
    A.RenderConfig_Qsv = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_6);
    A.SymbolRenderConfig_crM = new B.SymbolRenderConfig(A.RenderConfig_Qsv, A.RenderConfig_tV5, null);
    A.RenderConfig_D7v = new B.RenderConfig("\u2223", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_J19 = new B.SymbolRenderConfig(A.RenderConfig_D7v, A.RenderConfig_tV5, null);
    A.AtomType_7 = new B.AtomType(7, "inner");
    A.RenderConfig_Yrd = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_7);
    A.SymbolRenderConfig_FCH = new B.SymbolRenderConfig(A.RenderConfig_Yrd, A.RenderConfig_Yrd, null);
    A.SymbolRenderConfig_C6U = new B.SymbolRenderConfig(A.RenderConfig_Yrd, null, null);
    A.RenderConfig_xCJ = new B.RenderConfig(null, A.FontOptions_jvJ, A.AtomType_0);
    A.SymbolRenderConfig_Xik = new B.SymbolRenderConfig(A.RenderConfig_xCJ, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_ncO = new B.SymbolRenderConfig(A.RenderConfig_xCJ, A.RenderConfig_xCJ, null);
    A.SymbolRenderConfig_YAh = new B.SymbolRenderConfig(A.RenderConfig_GH3, A.RenderConfig_tV5, null);
    A.RenderConfig_yom = new B.RenderConfig("C", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_UBH = new B.SymbolRenderConfig(A.RenderConfig_yom, A.RenderConfig_yom, null);
    A.RenderConfig_hSm = new B.RenderConfig("H", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_Usq = new B.SymbolRenderConfig(A.RenderConfig_hSm, A.RenderConfig_hSm, null);
    A.RenderConfig_Mti = new B.RenderConfig("N", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_WJQ = new B.SymbolRenderConfig(A.RenderConfig_Mti, A.RenderConfig_Mti, null);
    A.RenderConfig_PKP = new B.RenderConfig("P", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_dV2 = new B.SymbolRenderConfig(A.RenderConfig_PKP, A.RenderConfig_PKP, null);
    A.RenderConfig_CSI = new B.RenderConfig("Q", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_slB = new B.SymbolRenderConfig(A.RenderConfig_CSI, A.RenderConfig_CSI, null);
    A.RenderConfig_DoY = new B.RenderConfig("R", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_PQA = new B.SymbolRenderConfig(A.RenderConfig_DoY, A.RenderConfig_DoY, null);
    A.RenderConfig_t0i = new B.RenderConfig("Z", A.FontOptions_eMX, A.AtomType_0);
    A.SymbolRenderConfig_PyU = new B.SymbolRenderConfig(A.RenderConfig_t0i, A.RenderConfig_t0i, null);
    A.RenderConfig_fev = new B.RenderConfig("h", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_We4 = new B.SymbolRenderConfig(A.RenderConfig_fev, A.RenderConfig_fev, null);
    A.RenderConfig_En5 = new B.RenderConfig("A", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_DvQ = new B.SymbolRenderConfig(A.RenderConfig_En5, A.RenderConfig_XXu, null);
    A.RenderConfig_w7s = new B.RenderConfig("B", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_amy = new B.SymbolRenderConfig(A.RenderConfig_w7s, A.RenderConfig_DVy, null);
    A.RenderConfig_wyi = new B.RenderConfig("C", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_oBL = new B.RenderConfig("C", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_fda = new B.SymbolRenderConfig(A.RenderConfig_wyi, A.RenderConfig_oBL, null);
    A.RenderConfig_OPN = new B.RenderConfig("D", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_aVp = new B.RenderConfig("D", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_4cq = new B.SymbolRenderConfig(A.RenderConfig_OPN, A.RenderConfig_aVp, null);
    A.RenderConfig_x8b = new B.RenderConfig("E", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_6cI = new B.SymbolRenderConfig(A.RenderConfig_x8b, A.RenderConfig_H7H, null);
    A.RenderConfig_LZV = new B.RenderConfig("F", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_BvA = new B.RenderConfig("F", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_kA4 = new B.SymbolRenderConfig(A.RenderConfig_LZV, A.RenderConfig_BvA, null);
    A.RenderConfig_d3w = new B.RenderConfig("G", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_WIY = new B.RenderConfig("G", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_UKD = new B.SymbolRenderConfig(A.RenderConfig_d3w, A.RenderConfig_WIY, null);
    A.RenderConfig_qBq = new B.RenderConfig("H", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_jiu = new B.SymbolRenderConfig(A.RenderConfig_qBq, A.RenderConfig_JCA, null);
    A.RenderConfig_Ocu = new B.RenderConfig("I", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_ow7 = new B.SymbolRenderConfig(A.RenderConfig_Ocu, A.RenderConfig_qlG, null);
    A.RenderConfig_BBs = new B.RenderConfig("J", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_kiI = new B.RenderConfig("J", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_8zS = new B.SymbolRenderConfig(A.RenderConfig_BBs, A.RenderConfig_kiI, null);
    A.RenderConfig_fyl = new B.RenderConfig("K", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_E1Y = new B.SymbolRenderConfig(A.RenderConfig_fyl, A.RenderConfig_gtE, null);
    A.RenderConfig_GzU = new B.RenderConfig("L", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_4nz = new B.RenderConfig("L", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_jaJ = new B.SymbolRenderConfig(A.RenderConfig_GzU, A.RenderConfig_4nz, null);
    A.RenderConfig_7BN = new B.RenderConfig("M", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_Q4o = new B.SymbolRenderConfig(A.RenderConfig_7BN, A.RenderConfig_Oe0, null);
    A.RenderConfig_KYx = new B.RenderConfig("N", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_ExN = new B.SymbolRenderConfig(A.RenderConfig_KYx, A.RenderConfig_06E, null);
    A.RenderConfig_utR = new B.RenderConfig("O", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_waa = new B.SymbolRenderConfig(A.RenderConfig_utR, A.RenderConfig_GxD, null);
    A.RenderConfig_RAt = new B.RenderConfig("P", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_RWf = new B.SymbolRenderConfig(A.RenderConfig_RAt, A.RenderConfig_BVn, null);
    A.RenderConfig_bJ7 = new B.RenderConfig("Q", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_ZZj = new B.RenderConfig("Q", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_4rd = new B.SymbolRenderConfig(A.RenderConfig_bJ7, A.RenderConfig_ZZj, null);
    A.RenderConfig_6Mo = new B.RenderConfig("R", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_dfw = new B.RenderConfig("R", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_8P2 = new B.SymbolRenderConfig(A.RenderConfig_6Mo, A.RenderConfig_dfw, null);
    A.RenderConfig_9b4 = new B.RenderConfig("S", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_LBI = new B.RenderConfig("S", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_YFz = new B.SymbolRenderConfig(A.RenderConfig_9b4, A.RenderConfig_LBI, null);
    A.RenderConfig_FBB = new B.RenderConfig("T", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_akQ = new B.SymbolRenderConfig(A.RenderConfig_FBB, A.RenderConfig_nKI, null);
    A.RenderConfig_Ra0 = new B.RenderConfig("U", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_iuq = new B.RenderConfig("U", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_cvi = new B.SymbolRenderConfig(A.RenderConfig_Ra0, A.RenderConfig_iuq, null);
    A.RenderConfig_vG0 = new B.RenderConfig("V", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_IXP = new B.RenderConfig("V", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_21O = new B.SymbolRenderConfig(A.RenderConfig_vG0, A.RenderConfig_IXP, null);
    A.RenderConfig_gIu = new B.RenderConfig("W", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_H1P = new B.RenderConfig("W", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_oUG = new B.SymbolRenderConfig(A.RenderConfig_gIu, A.RenderConfig_H1P, null);
    A.RenderConfig_YS1 = new B.RenderConfig("X", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_rum = new B.SymbolRenderConfig(A.RenderConfig_YS1, A.RenderConfig_9kZ, null);
    A.RenderConfig_fX8 = new B.RenderConfig("Y", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_VYT = new B.RenderConfig("Y", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_QVb = new B.SymbolRenderConfig(A.RenderConfig_fX8, A.RenderConfig_VYT, null);
    A.RenderConfig_aq2 = new B.RenderConfig("Z", A.FontOptions_hf0, A.AtomType_0);
    A.SymbolRenderConfig_Df5 = new B.SymbolRenderConfig(A.RenderConfig_aq2, A.RenderConfig_JRD, null);
    A.RenderConfig_Bz7 = new B.RenderConfig("a", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_oiS = new B.RenderConfig("a", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_c5Q = new B.SymbolRenderConfig(A.RenderConfig_Bz7, A.RenderConfig_oiS, null);
    A.RenderConfig_gbB = new B.RenderConfig("b", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_oNp = new B.RenderConfig("b", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_dVJ = new B.SymbolRenderConfig(A.RenderConfig_gbB, A.RenderConfig_oNp, null);
    A.RenderConfig_HTN = new B.RenderConfig("c", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_ojE = new B.RenderConfig("c", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_QoK = new B.SymbolRenderConfig(A.RenderConfig_HTN, A.RenderConfig_ojE, null);
    A.RenderConfig_whc = new B.RenderConfig("d", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_691 = new B.RenderConfig("d", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_33z = new B.SymbolRenderConfig(A.RenderConfig_whc, A.RenderConfig_691, null);
    A.RenderConfig_okV = new B.RenderConfig("e", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_0LW = new B.RenderConfig("e", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_rD8 = new B.SymbolRenderConfig(A.RenderConfig_okV, A.RenderConfig_0LW, null);
    A.RenderConfig_Gas = new B.RenderConfig("f", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_CIw = new B.RenderConfig("f", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_14d = new B.SymbolRenderConfig(A.RenderConfig_Gas, A.RenderConfig_CIw, null);
    A.RenderConfig_1DG = new B.RenderConfig("g", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_GAT = new B.RenderConfig("g", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_iHt = new B.SymbolRenderConfig(A.RenderConfig_1DG, A.RenderConfig_GAT, null);
    A.RenderConfig_KdJ = new B.RenderConfig("h", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_T43 = new B.SymbolRenderConfig(A.RenderConfig_fev, A.RenderConfig_KdJ, null);
    A.RenderConfig_2ou = new B.RenderConfig("i", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_OaY = new B.RenderConfig("i", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_PIS = new B.SymbolRenderConfig(A.RenderConfig_2ou, A.RenderConfig_OaY, null);
    A.RenderConfig_4Su = new B.RenderConfig("j", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_rin = new B.RenderConfig("j", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_JqA = new B.SymbolRenderConfig(A.RenderConfig_4Su, A.RenderConfig_rin, null);
    A.RenderConfig_2O8 = new B.RenderConfig("k", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_8WC = new B.RenderConfig("k", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_7tG = new B.SymbolRenderConfig(A.RenderConfig_2O8, A.RenderConfig_8WC, null);
    A.RenderConfig_aQ0 = new B.RenderConfig("l", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_Wxw = new B.RenderConfig("l", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_DJd = new B.SymbolRenderConfig(A.RenderConfig_aQ0, A.RenderConfig_Wxw, null);
    A.RenderConfig_EZR = new B.RenderConfig("m", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_Cqx = new B.RenderConfig("m", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_ZSD = new B.SymbolRenderConfig(A.RenderConfig_EZR, A.RenderConfig_Cqx, null);
    A.RenderConfig_95N = new B.RenderConfig("n", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_Fb7 = new B.RenderConfig("n", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_wjj = new B.SymbolRenderConfig(A.RenderConfig_95N, A.RenderConfig_Fb7, null);
    A.RenderConfig_w0v = new B.RenderConfig("o", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_ArE = new B.RenderConfig("o", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_Jnt = new B.SymbolRenderConfig(A.RenderConfig_w0v, A.RenderConfig_ArE, null);
    A.RenderConfig_lYn = new B.RenderConfig("p", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_I76 = new B.RenderConfig("p", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_usH = new B.SymbolRenderConfig(A.RenderConfig_lYn, A.RenderConfig_I76, null);
    A.RenderConfig_ECs = new B.RenderConfig("q", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_YCZ = new B.RenderConfig("q", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_DWH = new B.SymbolRenderConfig(A.RenderConfig_ECs, A.RenderConfig_YCZ, null);
    A.RenderConfig_8t5 = new B.RenderConfig("r", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_1OS = new B.RenderConfig("r", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_gQD = new B.SymbolRenderConfig(A.RenderConfig_8t5, A.RenderConfig_1OS, null);
    A.RenderConfig_Zyy = new B.RenderConfig("s", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_Jlq = new B.RenderConfig("s", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_tha = new B.SymbolRenderConfig(A.RenderConfig_Zyy, A.RenderConfig_Jlq, null);
    A.RenderConfig_7VU = new B.RenderConfig("t", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_qlz = new B.RenderConfig("t", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_qKR = new B.SymbolRenderConfig(A.RenderConfig_7VU, A.RenderConfig_qlz, null);
    A.RenderConfig_n2m = new B.RenderConfig("u", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_ROx = new B.RenderConfig("u", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_LcB = new B.SymbolRenderConfig(A.RenderConfig_n2m, A.RenderConfig_ROx, null);
    A.RenderConfig_JLu = new B.RenderConfig("v", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_bGh = new B.RenderConfig("v", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_4fE = new B.SymbolRenderConfig(A.RenderConfig_JLu, A.RenderConfig_bGh, null);
    A.RenderConfig_tZl = new B.RenderConfig("w", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_Sgs = new B.RenderConfig("w", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_WxS = new B.SymbolRenderConfig(A.RenderConfig_tZl, A.RenderConfig_Sgs, null);
    A.RenderConfig_ikT = new B.RenderConfig("x", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_CPH = new B.RenderConfig("x", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_jbQ = new B.SymbolRenderConfig(A.RenderConfig_ikT, A.RenderConfig_CPH, null);
    A.RenderConfig_TTB = new B.RenderConfig("y", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_AOk = new B.RenderConfig("y", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_6eC = new B.SymbolRenderConfig(A.RenderConfig_TTB, A.RenderConfig_AOk, null);
    A.RenderConfig_kt9 = new B.RenderConfig("z", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_mkA = new B.RenderConfig("z", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_g7N = new B.SymbolRenderConfig(A.RenderConfig_kt9, A.RenderConfig_mkA, null);
    A.RenderConfig_5yf = new B.RenderConfig("0", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_c5F = new B.RenderConfig("0", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_2io = new B.SymbolRenderConfig(A.RenderConfig_5yf, A.RenderConfig_c5F, null);
    A.RenderConfig_HUB = new B.RenderConfig("1", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_4h8 = new B.RenderConfig("1", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_Qs6 = new B.SymbolRenderConfig(A.RenderConfig_HUB, A.RenderConfig_4h8, null);
    A.RenderConfig_Ovn = new B.RenderConfig("2", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_EyQ = new B.RenderConfig("2", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_omc = new B.SymbolRenderConfig(A.RenderConfig_Ovn, A.RenderConfig_EyQ, null);
    A.RenderConfig_VlX = new B.RenderConfig("3", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_k2o = new B.RenderConfig("3", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_nVe = new B.SymbolRenderConfig(A.RenderConfig_VlX, A.RenderConfig_k2o, null);
    A.RenderConfig_KPA = new B.RenderConfig("4", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_jnX = new B.RenderConfig("4", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_MkN = new B.SymbolRenderConfig(A.RenderConfig_KPA, A.RenderConfig_jnX, null);
    A.RenderConfig_kqr = new B.RenderConfig("5", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_yUT = new B.RenderConfig("5", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_Rnc = new B.SymbolRenderConfig(A.RenderConfig_kqr, A.RenderConfig_yUT, null);
    A.RenderConfig_bzl = new B.RenderConfig("6", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_IrY = new B.RenderConfig("6", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_GqE = new B.SymbolRenderConfig(A.RenderConfig_bzl, A.RenderConfig_IrY, null);
    A.RenderConfig_2x4 = new B.RenderConfig("7", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_sRO = new B.RenderConfig("7", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_F3j = new B.SymbolRenderConfig(A.RenderConfig_2x4, A.RenderConfig_sRO, null);
    A.RenderConfig_NLB = new B.RenderConfig("8", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_24c = new B.RenderConfig("8", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_1Vb = new B.SymbolRenderConfig(A.RenderConfig_NLB, A.RenderConfig_24c, null);
    A.RenderConfig_SzT = new B.RenderConfig("9", A.FontOptions_hf0, A.AtomType_0);
    A.RenderConfig_qQo = new B.RenderConfig("9", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_azf = new B.SymbolRenderConfig(A.RenderConfig_SzT, A.RenderConfig_qQo, null);
    A.RenderConfig_wL4 = new B.RenderConfig(null, A.FontOptions_25d, A.AtomType_8);
    A.SymbolRenderConfig_p7j = new B.SymbolRenderConfig(A.RenderConfig_wL4, A.RenderConfig_wL4, null);
    A.RenderConfig_JG2 = new B.RenderConfig("\xa0", A.FontOptions_25d, A.AtomType_8);
    A.SymbolRenderConfig_Z9u = new B.SymbolRenderConfig(A.RenderConfig_JG2, A.RenderConfig_JG2, null);
    A.SymbolRenderConfig_lNS = new B.SymbolRenderConfig(null, A.RenderConfig_tV5, null);
    A.RenderConfig_AAa = new B.RenderConfig("\u2019", A.FontOptions_25d, A.AtomType_0);
    A.SymbolRenderConfig_Tg7 = new B.SymbolRenderConfig(null, A.RenderConfig_AAa, null);
    A.RenderConfig_2Q6 = new B.RenderConfig("\u250c", A.FontOptions_eMX, A.AtomType_4);
    A.SymbolRenderConfig_FPD = new B.SymbolRenderConfig(A.RenderConfig_2Q6, null, null);
    A.RenderConfig_X9H = new B.RenderConfig("\u2510", A.FontOptions_eMX, A.AtomType_5);
    A.SymbolRenderConfig_Gn2 = new B.SymbolRenderConfig(A.RenderConfig_X9H, null, null);
    A.RenderConfig_DiK = new B.RenderConfig("\u2514", A.FontOptions_eMX, A.AtomType_4);
    A.SymbolRenderConfig_3D2 = new B.SymbolRenderConfig(A.RenderConfig_DiK, null, null);
    A.RenderConfig_awQ = new B.RenderConfig("\u2518", A.FontOptions_eMX, A.AtomType_5);
    A.SymbolRenderConfig_Qyo = new B.SymbolRenderConfig(A.RenderConfig_awQ, null, null);
    A.SymbolRenderConfig_mQA = new B.SymbolRenderConfig(A.RenderConfig_vNf, A.RenderConfig_tV5, A.SymbolRenderConfig_3ap);
    A.RenderConfig_LTs = new B.RenderConfig(null, A.FontOptions_25d, null);
    A.SymbolRenderConfig_OcA = new B.SymbolRenderConfig(A.RenderConfig_Mk1, A.RenderConfig_LTs, null);
    A.SymbolRenderConfig_Jqr = new B.SymbolRenderConfig(A.RenderConfig_Mk1, null, A.SymbolRenderConfig_3ap);
    A.SymbolRenderConfig_KrC = new B.SymbolRenderConfig(A.RenderConfig_Mk1, null, A.SymbolRenderConfig_owH);
    A.SymbolRenderConfig_Dba = new B.SymbolRenderConfig(A.RenderConfig_ekA, null, A.SymbolRenderConfig_3ap);
    A.RenderConfig_QCr = new B.RenderConfig("\ue020", A.FontOptions_25d, A.AtomType_3);
    A.SymbolRenderConfig_B85 = new B.SymbolRenderConfig(A.RenderConfig_QCr, null, null);
    A.SymbolRenderConfig_nVY = new B.SymbolRenderConfig(A.RenderConfig_LTs, null, null);
    A.SymbolRenderConfig_2qq = new B.SymbolRenderConfig(A.RenderConfig_LTs, A.RenderConfig_LTs, null);
    A.SymbolRenderConfig_4tO = new B.SymbolRenderConfig(A.RenderConfig_LTs, A.RenderConfig_tV5, null);
    A.SymbolRenderConfig_Ede = new B.SymbolRenderConfig(null, A.RenderConfig_LTs, null);
    A.Map_LoPS5 = new C.ConstantStringMap(A.Object_wPV, [A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_lvT, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_lvT, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_lvT, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_lvT, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_lvT, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_6XR, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_vKi, A.SymbolRenderConfig_ws9, A.SymbolRenderConfig_vKi, A.SymbolRenderConfig_ws9, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_LZA, A.SymbolRenderConfig_GNY, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_oFh, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_qJQ, A.SymbolRenderConfig_MoU, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_Ovl, A.SymbolRenderConfig_4s1, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_Pwv, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_Ddg, A.SymbolRenderConfig_jx8, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_L53, A.SymbolRenderConfig_zHp, A.SymbolRenderConfig_zHp, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_sW2, A.SymbolRenderConfig_m3r, A.SymbolRenderConfig_sW2, A.SymbolRenderConfig_m3r, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_8SS, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_7lN, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_e4C, A.SymbolRenderConfig_tge, A.SymbolRenderConfig_pm6, A.SymbolRenderConfig_4aN, A.SymbolRenderConfig_BnS, A.SymbolRenderConfig_QEX, A.SymbolRenderConfig_xfc, A.SymbolRenderConfig_wuw, A.SymbolRenderConfig_eYJ, A.SymbolRenderConfig_0Ji, A.SymbolRenderConfig_JUM, A.SymbolRenderConfig_aUa, A.SymbolRenderConfig_Wv4, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_nFu, A.SymbolRenderConfig_qzb, A.SymbolRenderConfig_X7m, A.SymbolRenderConfig_FqF, A.SymbolRenderConfig_e2J, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_2tj, A.SymbolRenderConfig_2tj, A.SymbolRenderConfig_ws9, A.SymbolRenderConfig_00V, A.SymbolRenderConfig_00V, A.SymbolRenderConfig_00V, A.SymbolRenderConfig_00V, A.SymbolRenderConfig_vKi, A.SymbolRenderConfig_5H9, A.SymbolRenderConfig_5H9, A.SymbolRenderConfig_5H9, A.SymbolRenderConfig_5H9, A.SymbolRenderConfig_lvT, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_uF1, A.SymbolRenderConfig_SWj, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_ONN, A.SymbolRenderConfig_Frn, A.SymbolRenderConfig_crM, A.SymbolRenderConfig_crM, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_ws9, A.SymbolRenderConfig_vKi, A.SymbolRenderConfig_ws9, A.SymbolRenderConfig_vKi, A.SymbolRenderConfig_J19, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_FCH, A.SymbolRenderConfig_C6U, A.SymbolRenderConfig_C6U, A.SymbolRenderConfig_Xik, A.SymbolRenderConfig_Xik, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_ncO, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_UBH, A.SymbolRenderConfig_Usq, A.SymbolRenderConfig_WJQ, A.SymbolRenderConfig_dV2, A.SymbolRenderConfig_slB, A.SymbolRenderConfig_PQA, A.SymbolRenderConfig_PyU, A.SymbolRenderConfig_We4, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_DvQ, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_amy, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_fda, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_4cq, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_6cI, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_kA4, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_UKD, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_jiu, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_ow7, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_8zS, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_E1Y, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_jaJ, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_Q4o, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_ExN, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_waa, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_RWf, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_4rd, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_8P2, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_YFz, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_akQ, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_cvi, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_21O, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_oUG, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_rum, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_QVb, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_Df5, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_c5Q, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_dVJ, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_QoK, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_33z, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_rD8, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_14d, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_iHt, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_T43, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_PIS, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_JqA, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_DJd, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_ZSD, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_wjj, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_Jnt, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_usH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_DWH, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_gQD, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_tha, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_qKR, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_LcB, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_4fE, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_WxS, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_jbQ, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_6eC, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_g7N, A.SymbolRenderConfig_7tG, A.SymbolRenderConfig_2io, A.SymbolRenderConfig_2io, A.SymbolRenderConfig_2io, A.SymbolRenderConfig_2io, A.SymbolRenderConfig_Qs6, A.SymbolRenderConfig_Qs6, A.SymbolRenderConfig_Qs6, A.SymbolRenderConfig_Qs6, A.SymbolRenderConfig_omc, A.SymbolRenderConfig_omc, A.SymbolRenderConfig_omc, A.SymbolRenderConfig_omc, A.SymbolRenderConfig_nVe, A.SymbolRenderConfig_nVe, A.SymbolRenderConfig_nVe, A.SymbolRenderConfig_nVe, A.SymbolRenderConfig_MkN, A.SymbolRenderConfig_MkN, A.SymbolRenderConfig_MkN, A.SymbolRenderConfig_MkN, A.SymbolRenderConfig_Rnc, A.SymbolRenderConfig_Rnc, A.SymbolRenderConfig_Rnc, A.SymbolRenderConfig_Rnc, A.SymbolRenderConfig_GqE, A.SymbolRenderConfig_GqE, A.SymbolRenderConfig_GqE, A.SymbolRenderConfig_GqE, A.SymbolRenderConfig_F3j, A.SymbolRenderConfig_F3j, A.SymbolRenderConfig_F3j, A.SymbolRenderConfig_F3j, A.SymbolRenderConfig_1Vb, A.SymbolRenderConfig_1Vb, A.SymbolRenderConfig_1Vb, A.SymbolRenderConfig_1Vb, A.SymbolRenderConfig_azf, A.SymbolRenderConfig_azf, A.SymbolRenderConfig_azf, A.SymbolRenderConfig_azf, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_YAh, A.SymbolRenderConfig_p7j, A.SymbolRenderConfig_Z9u, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_Tg7, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_lNS, A.SymbolRenderConfig_FPD, A.SymbolRenderConfig_Gn2, A.SymbolRenderConfig_3D2, A.SymbolRenderConfig_Qyo, A.SymbolRenderConfig_0Ko, A.SymbolRenderConfig_mQA, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_X7m, A.SymbolRenderConfig_X7m, A.SymbolRenderConfig_OcA, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_Jqr, A.SymbolRenderConfig_KrC, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_zHp, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_owH, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_Dba, A.SymbolRenderConfig_QTt, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_3ap, A.SymbolRenderConfig_e2J, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_6XR, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_B85, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_BQu, A.SymbolRenderConfig_2tj, A.SymbolRenderConfig_00V, A.SymbolRenderConfig_uWd, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_wW7, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_4tO, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_4tO, A.SymbolRenderConfig_nVY, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_2qq, A.SymbolRenderConfig_zHp, A.SymbolRenderConfig_Ede, A.SymbolRenderConfig_Ede, A.SymbolRenderConfig_Ede], C.findType("ConstantStringMap<String,SymbolRenderConfig>"));
    A.Object_n7F = {display: 0, displayCramped: 1, text: 2, textCramped: 3, script: 4, scriptCramped: 5, scriptscript: 6, scriptscriptCramped: 7};
    A.Map_MRjU2 = new C.ConstantStringMap(A.Object_n7F, [A.MathStyle_0, A.MathStyle_1, A.MathStyle_2, A.MathStyle_3, A.MathStyle_4, A.MathStyle_5, A.MathStyle_6, A.MathStyle_7], C.findType("ConstantStringMap<String,MathStyle>"));
    A.Object_2zP = {"\\cancel": 0, "\\bcancel": 1, "\\xcancel": 2, "\\sout": 3};
    A.List_updiagonalstrike = C._setArrayType(makeConstList(["updiagonalstrike"]), type$.JSArray_String);
    A.List_downdiagonalstrike = C._setArrayType(makeConstList(["downdiagonalstrike"]), type$.JSArray_String);
    A.List_0Gb = C._setArrayType(makeConstList(["updiagonalstrike, downdiagonalstrike"]), type$.JSArray_String);
    A.List_horizontalstrike = C._setArrayType(makeConstList(["horizontalstrike"]), type$.JSArray_String);
    A.Map_MxbnW = new C.ConstantStringMap(A.Object_2zP, [A.List_updiagonalstrike, A.List_downdiagonalstrike, A.List_0Gb, A.List_horizontalstrike], type$.ConstantStringMap_of_String_and_List_String);
    A.Object_42N = {"\\bigl": 0, "\\Bigl": 1, "\\biggl": 2, "\\Biggl": 3, "\\bigr": 4, "\\Bigr": 5, "\\biggr": 6, "\\Biggr": 7, "\\bigm": 8, "\\Bigm": 9, "\\biggm": 10, "\\Biggm": 11, "\\big": 12, "\\Big": 13, "\\bigg": 14, "\\Bigg": 15};
    A.Map_PP6Nv = new C.ConstantStringMap(A.Object_42N, [A.AtomType_4, A.AtomType_4, A.AtomType_4, A.AtomType_4, A.AtomType_5, A.AtomType_5, A.AtomType_5, A.AtomType_5, A.AtomType_3, A.AtomType_3, A.AtomType_3, A.AtomType_3, A.AtomType_0, A.AtomType_0, A.AtomType_0, A.AtomType_0], type$.ConstantStringMap_String_AtomType);
    A.Map_PPymm = new C.ConstantStringMap(A.Object_42N, [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4], type$.ConstantStringMap_String_int);
    A.Object_UdF = {vec: 0, oiintSize1: 1, oiintSize2: 2, oiiintSize1: 3, oiiintSize2: 4};
    A.List_wbl = C._setArrayType(makeConstList([0.471, 0.714]), type$.JSArray_double);
    A.List_cxD = C._setArrayType(makeConstList([0.957, 0.499]), type$.JSArray_double);
    A.List_8Bc = C._setArrayType(makeConstList([1.472, 0.659]), type$.JSArray_double);
    A.List_0md = C._setArrayType(makeConstList([1.304, 0.499]), type$.JSArray_double);
    A.List_d0Y = C._setArrayType(makeConstList([1.98, 0.659]), type$.JSArray_double);
    A.Map_RARog = new C.ConstantStringMap(A.Object_UdF, [A.List_wbl, A.List_cxD, A.List_8Bc, A.List_0md, A.List_d0Y], type$.ConstantStringMap_of_String_and_List_double);
    A.Object_kZd = {"\\underleftarrow": 0, "\\underrightarrow": 1, "\\underleftrightarrow": 2, "\\undergroup": 3, "\\utilde": 4, "\\underline": 5};
    A.Map_ROG3o = new C.ConstantStringMap(A.Object_kZd, ["\u2190", "\u2192", "\u2194", "\u23e0", "~", "\xaf"], type$.ConstantStringMap_String_String);
    A.Object_vDU = {"\u2191": 0, "\u2193": 1, "\u2195": 2, "\u21d1": 3, "\u21d3": 4, "\u21d5": 5, "|": 6, "\u2016": 7, "\u2223": 8, "\u2225": 9, "(": 10, ")": 11, "[": 12, "]": 13, "{": 14, "}": 15, "\u230a": 16, "\u230b": 17, "\u2308": 18, "\u2309": 19, "\u27ee": 20, "\u27ef": 21, "\u23b0": 22, "\u23b1": 23};
    A.StackDelimiterConf_NCD = new B.StackDelimiterConf("\u2191", null, "\u23d0", "\u23d0", A.FontOptions_Xjt);
    A.StackDelimiterConf_81c = new B.StackDelimiterConf("\u23d0", null, "\u23d0", "\u2193", A.FontOptions_Xjt);
    A.StackDelimiterConf_EwD = new B.StackDelimiterConf("\u2191", null, "\u23d0", "\u2193", A.FontOptions_Xjt);
    A.StackDelimiterConf_AZ1 = new B.StackDelimiterConf("\u21d1", null, "\u2016", "\u2016", A.FontOptions_Xjt);
    A.StackDelimiterConf_ZIE = new B.StackDelimiterConf("\u2016", null, "\u2016", "\u21d3", A.FontOptions_Xjt);
    A.StackDelimiterConf_peK = new B.StackDelimiterConf("\u21d1", null, "\u2016", "\u21d3", A.FontOptions_Xjt);
    A.StackDelimiterConf_imb = new B.StackDelimiterConf("\u2223", null, "\u2223", "\u2223", A.FontOptions_Xjt);
    A.StackDelimiterConf_LAw = new B.StackDelimiterConf("\u2016", null, "\u2016", "\u2016", A.FontOptions_Xjt);
    A.StackDelimiterConf_yR1 = new B.StackDelimiterConf("\u2225", null, "\u2225", "\u2225", A.FontOptions_Xjt);
    A.StackDelimiterConf_zup = new B.StackDelimiterConf("\u239b", null, "\u239c", "\u239d", A.FontOptions_7b7);
    A.StackDelimiterConf_o5C = new B.StackDelimiterConf("\u239e", null, "\u239f", "\u23a0", A.FontOptions_7b7);
    A.StackDelimiterConf_ezF = new B.StackDelimiterConf("\u23a1", null, "\u23a2", "\u23a3", A.FontOptions_7b7);
    A.StackDelimiterConf_eaU = new B.StackDelimiterConf("\u23a4", null, "\u23a5", "\u23a6", A.FontOptions_7b7);
    A.StackDelimiterConf_LVD = new B.StackDelimiterConf("\u23a7", "\u23a8", "\u23aa", "\u23a9", A.FontOptions_7b7);
    A.StackDelimiterConf_iIZ = new B.StackDelimiterConf("\u23ab", "\u23ac", "\u23aa", "\u23ad", A.FontOptions_7b7);
    A.StackDelimiterConf_bxB = new B.StackDelimiterConf("\u23a2", null, "\u23a2", "\u23a3", A.FontOptions_7b7);
    A.StackDelimiterConf_TVA = new B.StackDelimiterConf("\u23a5", null, "\u23a5", "\u23a6", A.FontOptions_7b7);
    A.StackDelimiterConf_XVM = new B.StackDelimiterConf("\u23a1", null, "\u23a2", "\u23a2", A.FontOptions_7b7);
    A.StackDelimiterConf_o1W = new B.StackDelimiterConf("\u23a4", null, "\u23a5", "\u23a5", A.FontOptions_7b7);
    A.StackDelimiterConf_a2k = new B.StackDelimiterConf("\u23a7", null, "\u23aa", "\u23a9", A.FontOptions_7b7);
    A.StackDelimiterConf_bUL = new B.StackDelimiterConf("\u23ab", null, "\u23aa", "\u23ad", A.FontOptions_7b7);
    A.StackDelimiterConf_4F4 = new B.StackDelimiterConf("\u23a7", null, "\u23aa", "\u23ad", A.FontOptions_7b7);
    A.StackDelimiterConf_4UK = new B.StackDelimiterConf("\u23ab", null, "\u23aa", "\u23a9", A.FontOptions_7b7);
    A.Map_TitJ9 = new C.ConstantStringMap(A.Object_vDU, [A.StackDelimiterConf_NCD, A.StackDelimiterConf_81c, A.StackDelimiterConf_EwD, A.StackDelimiterConf_AZ1, A.StackDelimiterConf_ZIE, A.StackDelimiterConf_peK, A.StackDelimiterConf_imb, A.StackDelimiterConf_LAw, A.StackDelimiterConf_imb, A.StackDelimiterConf_yR1, A.StackDelimiterConf_zup, A.StackDelimiterConf_o5C, A.StackDelimiterConf_ezF, A.StackDelimiterConf_eaU, A.StackDelimiterConf_LVD, A.StackDelimiterConf_iIZ, A.StackDelimiterConf_bxB, A.StackDelimiterConf_TVA, A.StackDelimiterConf_XVM, A.StackDelimiterConf_o1W, A.StackDelimiterConf_a2k, A.StackDelimiterConf_bUL, A.StackDelimiterConf_4F4, A.StackDelimiterConf_4UK], C.findType("ConstantStringMap<String,StackDelimiterConf>"));
    A.List_wwh = C._setArrayType(makeConstList(["\\not"]), type$.JSArray_String);
    A.FunctionSpec_rzf = new B.FunctionSpec(1, false, true, false, B.katex_ext___notHandler$closure(), type$.FunctionSpec_GreenNode);
    A.Map_V9azN = new C.GeneralConstantMap([A.List_wwh, A.FunctionSpec_rzf], type$.GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode);
    A.Object_0dO = {pt: 0, mm: 1, cm: 2, inches: 3, bp: 4, pc: 5, dd: 6, cc: 7, nd: 8, nc: 9, sp: 10, px: 11, ex: 12, em: 13, mu: 14, lp: 15, cssEm: 16};
    A.Map_VFR9N = new C.ConstantStringMap(A.Object_0dO, [A.Unit_0, A.Unit_1, A.Unit_2, A.Unit_3, A.Unit_4, A.Unit_5, A.Unit_6, A.Unit_7, A.Unit_8, A.Unit_9, A.Unit_10, A.Unit_11, A.Unit_12, A.Unit_13, A.Unit_14, A.Unit_15, A.Unit_16], C.findType("ConstantStringMap<String,Unit>"));
    A.Object_0vB = {svg: 0, g: 1, a: 2, use: 3, symbol: 4, mask: 5, pattern: 6, radialGradient: 7, linearGradient: 8, clipPath: 9, image: 10, text: 11, tspan: 12};
    A.Map_VVevv = new C.ConstantStringMap(A.Object_0vB, [B.parser__Elements_svg$closure(), B.parser__Elements_g$closure(), B.parser__Elements_g$closure(), B.parser__Elements_use$closure(), B.parser__Elements_symbol$closure(), B.parser__Elements_symbol$closure(), B.parser__Elements_pattern$closure(), B.parser__Elements_radialGradient$closure(), B.parser__Elements_linearGradient$closure(), B.parser__Elements_clipPath$closure(), B.parser__Elements_image$closure(), B.parser__Elements_textOrTspan$closure(), B.parser__Elements_textOrTspan$closure()], C.findType("ConstantStringMap<String,~(SvgParser,bool)>"));
    A.Object_ibZ = {"\u219a": 0, "\u219b": 1, "\u21ae": 2, "\u21cd": 3, "\u21cf": 4, "\u21ce": 5, "\u2209": 6, "\u220c": 7, "\u2224": 8, "\u2226": 9, "\u2241": 10, "\u2244": 11, "\u2247": 12, "\u2249": 13, "\u226d": 14, "\u2260": 15, "\u2262": 16, "\u226e": 17, "\u226f": 18, "\u2270": 19, "\u2271": 20, "\u2274": 21, "\u2275": 22, "\u2278": 23, "\u2279": 24, "\u2280": 25, "\u2281": 26, "\u2284": 27, "\u2285": 28, "\u2288": 29, "\u2289": 30, "\u22ac": 31, "\u22ad": 32, "\u22ae": 33, "\u22af": 34, "\u22e0": 35, "\u22e1": 36, "\u22e2": 37, "\u22e3": 38, "\u22ea": 39, "\u22eb": 40, "\u22ec": 41, "\u22ed": 42, "\u2204": 43};
    A.List_6GS = C._setArrayType(makeConstList(["\u0338", "\u2190"]), type$.JSArray_String);
    A.List_FbX = C._setArrayType(makeConstList(["\u0338", "\u2192"]), type$.JSArray_String);
    A.List_HyE = C._setArrayType(makeConstList(["\u0338", "\u2194"]), type$.JSArray_String);
    A.List_iR1 = C._setArrayType(makeConstList(["\u0338", "\u21d0"]), type$.JSArray_String);
    A.List_SnV = C._setArrayType(makeConstList(["\u0338", "\u21d2"]), type$.JSArray_String);
    A.List_8oi = C._setArrayType(makeConstList(["\u0338", "\u21d4"]), type$.JSArray_String);
    A.List_2ep = C._setArrayType(makeConstList(["\u0338", "\u2208"]), type$.JSArray_String);
    A.List_bCQ = C._setArrayType(makeConstList(["\u0338", "\u220b"]), type$.JSArray_String);
    A.List_Ftr = C._setArrayType(makeConstList(["\u0338", "\u2223"]), type$.JSArray_String);
    A.List_OdQ = C._setArrayType(makeConstList(["\u0338", "\u2225"]), type$.JSArray_String);
    A.List_w25 = C._setArrayType(makeConstList(["\u0338", "\u223c"]), type$.JSArray_String);
    A.List_WGe = C._setArrayType(makeConstList(["\u0338", "\u2243"]), type$.JSArray_String);
    A.List_nDQ = C._setArrayType(makeConstList(["\u0338", "\u2245"]), type$.JSArray_String);
    A.List_3e3 = C._setArrayType(makeConstList(["\u0338", "\u2248"]), type$.JSArray_String);
    A.List_dDH = C._setArrayType(makeConstList(["\u0338", "\u224d"]), type$.JSArray_String);
    A.List_xcU = C._setArrayType(makeConstList(["\u0338", "="]), type$.JSArray_String);
    A.List_XId = C._setArrayType(makeConstList(["\u0338", "\u2261"]), type$.JSArray_String);
    A.List_35M = C._setArrayType(makeConstList(["\u0338", "<"]), type$.JSArray_String);
    A.List_VzI = C._setArrayType(makeConstList(["\u0338", ">"]), type$.JSArray_String);
    A.List_RXE = C._setArrayType(makeConstList(["\u0338", "\u2264"]), type$.JSArray_String);
    A.List_Msu = C._setArrayType(makeConstList(["\u0338", "\u2265"]), type$.JSArray_String);
    A.List_b7p = C._setArrayType(makeConstList(["\u0338", "\u2272"]), type$.JSArray_String);
    A.List_oaG = C._setArrayType(makeConstList(["\u0338", "\u2273"]), type$.JSArray_String);
    A.List_sxj = C._setArrayType(makeConstList(["\u0338", "\u2276"]), type$.JSArray_String);
    A.List_vOD = C._setArrayType(makeConstList(["\u0338", "\u2277"]), type$.JSArray_String);
    A.List_zKt = C._setArrayType(makeConstList(["\u0338", "\u227a"]), type$.JSArray_String);
    A.List_Ij0 = C._setArrayType(makeConstList(["\u0338", "\u227b"]), type$.JSArray_String);
    A.List_pza = C._setArrayType(makeConstList(["\u0338", "\u2282"]), type$.JSArray_String);
    A.List_fXT = C._setArrayType(makeConstList(["\u0338", "\u2283"]), type$.JSArray_String);
    A.List_XYO = C._setArrayType(makeConstList(["\u0338", "\u2286"]), type$.JSArray_String);
    A.List_lNZ = C._setArrayType(makeConstList(["\u0338", "\u2287"]), type$.JSArray_String);
    A.List_ZZo = C._setArrayType(makeConstList(["\u0338", "\u22a2"]), type$.JSArray_String);
    A.List_B1q = C._setArrayType(makeConstList(["\u0338", "\u22a8"]), type$.JSArray_String);
    A.List_tYC = C._setArrayType(makeConstList(["\u0338", "\u22a9"]), type$.JSArray_String);
    A.List_Ulr = C._setArrayType(makeConstList(["\u0338", "\u22ab"]), type$.JSArray_String);
    A.List_g9f = C._setArrayType(makeConstList(["\u0338", "\u227c"]), type$.JSArray_String);
    A.List_R38 = C._setArrayType(makeConstList(["\u0338", "\u227d"]), type$.JSArray_String);
    A.List_p7M = C._setArrayType(makeConstList(["\u0338", "\u2291"]), type$.JSArray_String);
    A.List_vuP = C._setArrayType(makeConstList(["\u0338", "\u2292"]), type$.JSArray_String);
    A.List_RV4 = C._setArrayType(makeConstList(["\u0338", "\u22b2"]), type$.JSArray_String);
    A.List_6P9 = C._setArrayType(makeConstList(["\u0338", "\u22b3"]), type$.JSArray_String);
    A.List_BEv = C._setArrayType(makeConstList(["\u0338", "\u22b4"]), type$.JSArray_String);
    A.List_aGW = C._setArrayType(makeConstList(["\u0338", "\u22b5"]), type$.JSArray_String);
    A.List_vLj = C._setArrayType(makeConstList(["\u0338", "\u2203"]), type$.JSArray_String);
    A.Map_W7r5a = new C.ConstantStringMap(A.Object_ibZ, [A.List_6GS, A.List_FbX, A.List_HyE, A.List_iR1, A.List_SnV, A.List_8oi, A.List_2ep, A.List_bCQ, A.List_Ftr, A.List_OdQ, A.List_w25, A.List_WGe, A.List_nDQ, A.List_3e3, A.List_dDH, A.List_xcU, A.List_XId, A.List_35M, A.List_VzI, A.List_RXE, A.List_Msu, A.List_b7p, A.List_oaG, A.List_sxj, A.List_vOD, A.List_zKt, A.List_Ij0, A.List_pza, A.List_fXT, A.List_XYO, A.List_lNZ, A.List_ZZo, A.List_B1q, A.List_tYC, A.List_Ulr, A.List_g9f, A.List_R38, A.List_p7M, A.List_vuP, A.List_RV4, A.List_6P9, A.List_BEv, A.List_aGW, A.List_vLj], type$.ConstantStringMap_of_String_and_List_String);
    A.Object_zz3 = {aliceblue: 0, antiquewhite: 1, aqua: 2, aquamarine: 3, azure: 4, beige: 5, bisque: 6, black: 7, blanchedalmond: 8, blue: 9, blueviolet: 10, brown: 11, burlywood: 12, cadetblue: 13, chartreuse: 14, chocolate: 15, coral: 16, cornflowerblue: 17, cornsilk: 18, crimson: 19, cyan: 20, darkblue: 21, darkcyan: 22, darkgoldenrod: 23, darkgray: 24, darkgreen: 25, darkgrey: 26, darkkhaki: 27, darkmagenta: 28, darkolivegreen: 29, darkorange: 30, darkorchid: 31, darkred: 32, darksalmon: 33, darkseagreen: 34, darkslateblue: 35, darkslategray: 36, darkslategrey: 37, darkturquoise: 38, darkviolet: 39, deeppink: 40, deepskyblue: 41, dimgray: 42, dimgrey: 43, dodgerblue: 44, firebrick: 45, floralwhite: 46, forestgreen: 47, fuchsia: 48, gainsboro: 49, ghostwhite: 50, gold: 51, goldenrod: 52, gray: 53, grey: 54, green: 55, greenyellow: 56, honeydew: 57, hotpink: 58, indianred: 59, indigo: 60, ivory: 61, khaki: 62, lavender: 63, lavenderblush: 64, lawngreen: 65, lemonchiffon: 66, lightblue: 67, lightcoral: 68, lightcyan: 69, lightgoldenrodyellow: 70, lightgray: 71, lightgreen: 72, lightgrey: 73, lightpink: 74, lightsalmon: 75, lightseagreen: 76, lightskyblue: 77, lightslategray: 78, lightslategrey: 79, lightsteelblue: 80, lightyellow: 81, lime: 82, limegreen: 83, linen: 84, magenta: 85, maroon: 86, mediumaquamarine: 87, mediumblue: 88, mediumorchid: 89, mediumpurple: 90, mediumseagreen: 91, mediumslateblue: 92, mediumspringgreen: 93, mediumturquoise: 94, mediumvioletred: 95, midnightblue: 96, mintcream: 97, mistyrose: 98, moccasin: 99, navajowhite: 100, navy: 101, oldlace: 102, olive: 103, olivedrab: 104, orange: 105, orangered: 106, orchid: 107, palegoldenrod: 108, palegreen: 109, paleturquoise: 110, palevioletred: 111, papayawhip: 112, peachpuff: 113, peru: 114, pink: 115, plum: 116, powderblue: 117, purple: 118, red: 119, rosybrown: 120, royalblue: 121, saddlebrown: 122, salmon: 123, sandybrown: 124, seagreen: 125, seashell: 126, sienna: 127, silver: 128, skyblue: 129, slateblue: 130, slategray: 131, slategrey: 132, snow: 133, springgreen: 134, steelblue: 135, tan: 136, teal: 137, thistle: 138, tomato: 139, transparent: 140, turquoise: 141, violet: 142, wheat: 143, white: 144, whitesmoke: 145, yellow: 146, yellowgreen: 147};
    A.Color_4293982463 = new B.Color0(4293982463);
    A.Color_4294634455 = new B.Color0(4294634455);
    A.Color_4278255615 = new B.Color0(4278255615);
    A.Color_4286578644 = new B.Color0(4286578644);
    A.Color_4293984255 = new B.Color0(4293984255);
    A.Color_4294309340 = new B.Color0(4294309340);
    A.Color_4294960324 = new B.Color0(4294960324);
    A.Color_4294962125 = new B.Color0(4294962125);
    A.Color_4278190335 = new B.Color0(4278190335);
    A.Color_4287245282 = new B.Color0(4287245282);
    A.Color_4289014314 = new B.Color0(4289014314);
    A.Color_4292786311 = new B.Color0(4292786311);
    A.Color_4284456608 = new B.Color0(4284456608);
    A.Color_4286578432 = new B.Color0(4286578432);
    A.Color_4291979550 = new B.Color0(4291979550);
    A.Color_4294934352 = new B.Color0(4294934352);
    A.Color_4284782061 = new B.Color0(4284782061);
    A.Color_4294965468 = new B.Color0(4294965468);
    A.Color_4292613180 = new B.Color0(4292613180);
    A.Color_4278190219 = new B.Color0(4278190219);
    A.Color_4278225803 = new B.Color0(4278225803);
    A.Color_4290283019 = new B.Color0(4290283019);
    A.Color_4289309097 = new B.Color0(4289309097);
    A.Color_4278215680 = new B.Color0(4278215680);
    A.Color_4290623339 = new B.Color0(4290623339);
    A.Color_4287299723 = new B.Color0(4287299723);
    A.Color_4283788079 = new B.Color0(4283788079);
    A.Color_4294937600 = new B.Color0(4294937600);
    A.Color_4288230092 = new B.Color0(4288230092);
    A.Color_4287299584 = new B.Color0(4287299584);
    A.Color_4293498490 = new B.Color0(4293498490);
    A.Color_4287609999 = new B.Color0(4287609999);
    A.Color_4282924427 = new B.Color0(4282924427);
    A.Color_4281290575 = new B.Color0(4281290575);
    A.Color_4278243025 = new B.Color0(4278243025);
    A.Color_4287889619 = new B.Color0(4287889619);
    A.Color_4294907027 = new B.Color0(4294907027);
    A.Color_4278239231 = new B.Color0(4278239231);
    A.Color_4285098345 = new B.Color0(4285098345);
    A.Color_4280193279 = new B.Color0(4280193279);
    A.Color_4289864226 = new B.Color0(4289864226);
    A.Color_4294966000 = new B.Color0(4294966000);
    A.Color_4280453922 = new B.Color0(4280453922);
    A.Color_4294902015 = new B.Color0(4294902015);
    A.Color_4292664540 = new B.Color0(4292664540);
    A.Color_4294506751 = new B.Color0(4294506751);
    A.Color_4294956800 = new B.Color0(4294956800);
    A.Color_4292519200 = new B.Color0(4292519200);
    A.Color_4286611584 = new B.Color0(4286611584);
    A.Color_4278222848 = new B.Color0(4278222848);
    A.Color_4289593135 = new B.Color0(4289593135);
    A.Color_4293984240 = new B.Color0(4293984240);
    A.Color_4294928820 = new B.Color0(4294928820);
    A.Color_4291648604 = new B.Color0(4291648604);
    A.Color_4283105410 = new B.Color0(4283105410);
    A.Color_4294967280 = new B.Color0(4294967280);
    A.Color_4293977740 = new B.Color0(4293977740);
    A.Color_4293322490 = new B.Color0(4293322490);
    A.Color_4294963445 = new B.Color0(4294963445);
    A.Color_4286381056 = new B.Color0(4286381056);
    A.Color_4294965965 = new B.Color0(4294965965);
    A.Color_4289583334 = new B.Color0(4289583334);
    A.Color_4293951616 = new B.Color0(4293951616);
    A.Color_4292935679 = new B.Color0(4292935679);
    A.Color_4294638290 = new B.Color0(4294638290);
    A.Color_4292072403 = new B.Color0(4292072403);
    A.Color_4287688336 = new B.Color0(4287688336);
    A.Color_4294948545 = new B.Color0(4294948545);
    A.Color_4294942842 = new B.Color0(4294942842);
    A.Color_4280332970 = new B.Color0(4280332970);
    A.Color_4287090426 = new B.Color0(4287090426);
    A.Color_4286023833 = new B.Color0(4286023833);
    A.Color_4289774814 = new B.Color0(4289774814);
    A.Color_4294967264 = new B.Color0(4294967264);
    A.Color_4278255360 = new B.Color0(4278255360);
    A.Color_4281519410 = new B.Color0(4281519410);
    A.Color_4294635750 = new B.Color0(4294635750);
    A.Color_4286578688 = new B.Color0(4286578688);
    A.Color_4284927402 = new B.Color0(4284927402);
    A.Color_4278190285 = new B.Color0(4278190285);
    A.Color_4290401747 = new B.Color0(4290401747);
    A.Color_4287852763 = new B.Color0(4287852763);
    A.Color_4282168177 = new B.Color0(4282168177);
    A.Color_4286277870 = new B.Color0(4286277870);
    A.Color_4278254234 = new B.Color0(4278254234);
    A.Color_4282962380 = new B.Color0(4282962380);
    A.Color_4291237253 = new B.Color0(4291237253);
    A.Color_4279834992 = new B.Color0(4279834992);
    A.Color_4294311930 = new B.Color0(4294311930);
    A.Color_4294960353 = new B.Color0(4294960353);
    A.Color_4294960309 = new B.Color0(4294960309);
    A.Color_4294958765 = new B.Color0(4294958765);
    A.Color_4278190208 = new B.Color0(4278190208);
    A.Color_4294833638 = new B.Color0(4294833638);
    A.Color_4286611456 = new B.Color0(4286611456);
    A.Color_4285238819 = new B.Color0(4285238819);
    A.Color_4294944000 = new B.Color0(4294944000);
    A.Color_4294919424 = new B.Color0(4294919424);
    A.Color_4292505814 = new B.Color0(4292505814);
    A.Color_4293847210 = new B.Color0(4293847210);
    A.Color_4288215960 = new B.Color0(4288215960);
    A.Color_4289720046 = new B.Color0(4289720046);
    A.Color_4292571283 = new B.Color0(4292571283);
    A.Color_4294963157 = new B.Color0(4294963157);
    A.Color_4294957753 = new B.Color0(4294957753);
    A.Color_4291659071 = new B.Color0(4291659071);
    A.Color_4294951115 = new B.Color0(4294951115);
    A.Color_4292714717 = new B.Color0(4292714717);
    A.Color_4289781990 = new B.Color0(4289781990);
    A.Color_4286578816 = new B.Color0(4286578816);
    A.Color_4294901760 = new B.Color0(4294901760);
    A.Color_4290547599 = new B.Color0(4290547599);
    A.Color_4282477025 = new B.Color0(4282477025);
    A.Color_4287317267 = new B.Color0(4287317267);
    A.Color_4294606962 = new B.Color0(4294606962);
    A.Color_4294222944 = new B.Color0(4294222944);
    A.Color_4281240407 = new B.Color0(4281240407);
    A.Color_4294964718 = new B.Color0(4294964718);
    A.Color_4288696877 = new B.Color0(4288696877);
    A.Color_4290822336 = new B.Color0(4290822336);
    A.Color_4287090411 = new B.Color0(4287090411);
    A.Color_4285160141 = new B.Color0(4285160141);
    A.Color_4285563024 = new B.Color0(4285563024);
    A.Color_4294966010 = new B.Color0(4294966010);
    A.Color_4278255487 = new B.Color0(4278255487);
    A.Color_4282811060 = new B.Color0(4282811060);
    A.Color_4291998860 = new B.Color0(4291998860);
    A.Color_4278222976 = new B.Color0(4278222976);
    A.Color_4292394968 = new B.Color0(4292394968);
    A.Color_4294927175 = new B.Color0(4294927175);
    A.Color_16777215 = new B.Color0(16777215);
    A.Color_4282441936 = new B.Color0(4282441936);
    A.Color_4293821166 = new B.Color0(4293821166);
    A.Color_4294303411 = new B.Color0(4294303411);
    A.Color_4294309365 = new B.Color0(4294309365);
    A.Color_4294967040 = new B.Color0(4294967040);
    A.Color_4288335154 = new B.Color0(4288335154);
    A.Map_Ymznx = new C.ConstantStringMap(A.Object_zz3, [A.Color_4293982463, A.Color_4294634455, A.Color_4278255615, A.Color_4286578644, A.Color_4293984255, A.Color_4294309340, A.Color_4294960324, A.Color_4278190080, A.Color_4294962125, A.Color_4278190335, A.Color_4287245282, A.Color_4289014314, A.Color_4292786311, A.Color_4284456608, A.Color_4286578432, A.Color_4291979550, A.Color_4294934352, A.Color_4284782061, A.Color_4294965468, A.Color_4292613180, A.Color_4278255615, A.Color_4278190219, A.Color_4278225803, A.Color_4290283019, A.Color_4289309097, A.Color_4278215680, A.Color_4289309097, A.Color_4290623339, A.Color_4287299723, A.Color_4283788079, A.Color_4294937600, A.Color_4288230092, A.Color_4287299584, A.Color_4293498490, A.Color_4287609999, A.Color_4282924427, A.Color_4281290575, A.Color_4281290575, A.Color_4278243025, A.Color_4287889619, A.Color_4294907027, A.Color_4278239231, A.Color_4285098345, A.Color_4285098345, A.Color_4280193279, A.Color_4289864226, A.Color_4294966000, A.Color_4280453922, A.Color_4294902015, A.Color_4292664540, A.Color_4294506751, A.Color_4294956800, A.Color_4292519200, A.Color_4286611584, A.Color_4286611584, A.Color_4278222848, A.Color_4289593135, A.Color_4293984240, A.Color_4294928820, A.Color_4291648604, A.Color_4283105410, A.Color_4294967280, A.Color_4293977740, A.Color_4293322490, A.Color_4294963445, A.Color_4286381056, A.Color_4294965965, A.Color_4289583334, A.Color_4293951616, A.Color_4292935679, A.Color_4294638290, A.Color_4292072403, A.Color_4287688336, A.Color_4292072403, A.Color_4294948545, A.Color_4294942842, A.Color_4280332970, A.Color_4287090426, A.Color_4286023833, A.Color_4286023833, A.Color_4289774814, A.Color_4294967264, A.Color_4278255360, A.Color_4281519410, A.Color_4294635750, A.Color_4294902015, A.Color_4286578688, A.Color_4284927402, A.Color_4278190285, A.Color_4290401747, A.Color_4287852763, A.Color_4282168177, A.Color_4286277870, A.Color_4278254234, A.Color_4282962380, A.Color_4291237253, A.Color_4279834992, A.Color_4294311930, A.Color_4294960353, A.Color_4294960309, A.Color_4294958765, A.Color_4278190208, A.Color_4294833638, A.Color_4286611456, A.Color_4285238819, A.Color_4294944000, A.Color_4294919424, A.Color_4292505814, A.Color_4293847210, A.Color_4288215960, A.Color_4289720046, A.Color_4292571283, A.Color_4294963157, A.Color_4294957753, A.Color_4291659071, A.Color_4294951115, A.Color_4292714717, A.Color_4289781990, A.Color_4286578816, A.Color_4294901760, A.Color_4290547599, A.Color_4282477025, A.Color_4287317267, A.Color_4294606962, A.Color_4294222944, A.Color_4281240407, A.Color_4294964718, A.Color_4288696877, A.Color_4290822336, A.Color_4287090411, A.Color_4285160141, A.Color_4285563024, A.Color_4285563024, A.Color_4294966010, A.Color_4278255487, A.Color_4282811060, A.Color_4291998860, A.Color_4278222976, A.Color_4292394968, A.Color_4294927175, A.Color_16777215, A.Color_4282441936, A.Color_4293821166, A.Color_4294303411, A.Color_4294967295, A.Color_4294309365, A.Color_4294967040, A.Color_4288335154], C.findType("ConstantStringMap<String,Color0>"));
    A.Object_a9U = {"\\mathop": 0, "\\mathord": 1, "\\mathbin": 2, "\\mathrel": 3, "\\mathopen": 4, "\\mathclose": 5, "\\mathpunct": 6, "\\mathinner": 7};
    A.Map_ZC8v1 = new C.ConstantStringMap(A.Object_a9U, [A.AtomType_1, A.AtomType_0, A.AtomType_2, A.AtomType_3, A.AtomType_4, A.AtomType_5, A.AtomType_6, A.AtomType_7], type$.ConstantStringMap_String_AtomType);
    A.Object_fVf = {"|": 0, ":": 1};
    A.MatrixSeparatorStyle_0 = new B.MatrixSeparatorStyle(0, "solid");
    A.MatrixSeparatorStyle_1 = new B.MatrixSeparatorStyle(1, "dashed");
    A.Map_a0fCI = new C.ConstantStringMap(A.Object_fVf, [A.MatrixSeparatorStyle_0, A.MatrixSeparatorStyle_1], C.findType("ConstantStringMap<String,MatrixSeparatorStyle>"));
    A.Object_A89 = {",": 0, "\\not": 1, "+": 2, "=": 3, "<": 4, ">": 5, "-": 6, "*": 7, ":": 8, "\\DOTSB": 9, "\\coprod": 10, "\\bigvee": 11, "\\bigwedge": 12, "\\biguplus": 13, "\\bigcap": 14, "\\bigcup": 15, "\\prod": 16, "\\sum": 17, "\\bigotimes": 18, "\\bigoplus": 19, "\\bigodot": 20, "\\bigsqcup": 21, "\\And": 22, "\\longrightarrow": 23, "\\Longrightarrow": 24, "\\longleftarrow": 25, "\\Longleftarrow": 26, "\\longleftrightarrow": 27, "\\Longleftrightarrow": 28, "\\mapsto": 29, "\\longmapsto": 30, "\\hookrightarrow": 31, "\\doteq": 32, "\\mathbin": 33, "\\mathrel": 34, "\\relbar": 35, "\\Relbar": 36, "\\xrightarrow": 37, "\\xleftarrow": 38, "\\DOTSI": 39, "\\int": 40, "\\oint": 41, "\\iint": 42, "\\iiint": 43, "\\iiiint": 44, "\\idotsint": 45, "\\DOTSX": 46};
    A.Map_chCvV = new C.ConstantStringMap(A.Object_A89, ["\\dotsc", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsb", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsi", "\\dotsx"], type$.ConstantStringMap_String_String);
    A.Map_empty9 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<String,MacroDefinition>"));
    A.List_Gcs = C._setArrayType(makeConstList(["\\cursor"]), type$.JSArray_String);
    A.FunctionSpec_b8v = new B.FunctionSpec(1, false, true, false, B.cursor___cursorHandler$closure(), type$.FunctionSpec_GreenNode);
    A.Map_fe18k = new C.GeneralConstantMap([A.List_Gcs, A.FunctionSpec_b8v], type$.GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode);
    A.Object_E5c = {latin: 0, cyrillic: 1, brahmic: 2, georgian: 3, cjk: 4, hangul: 5};
    A.List_256_591 = C._setArrayType(makeConstList([256, 591]), type$.JSArray_int);
    A.List_768_879 = C._setArrayType(makeConstList([768, 879]), type$.JSArray_int);
    A.List_nS2 = C._setArrayType(makeConstList([A.List_256_591, A.List_768_879]), type$.JSArray_List_int);
    A.List_1024_1279 = C._setArrayType(makeConstList([1024, 1279]), type$.JSArray_int);
    A.List_List_1024_1279 = C._setArrayType(makeConstList([A.List_1024_1279]), type$.JSArray_List_int);
    A.List_2304_4255 = C._setArrayType(makeConstList([2304, 4255]), type$.JSArray_int);
    A.List_List_2304_4255 = C._setArrayType(makeConstList([A.List_2304_4255]), type$.JSArray_List_int);
    A.List_4256_4351 = C._setArrayType(makeConstList([4256, 4351]), type$.JSArray_int);
    A.List_List_4256_4351 = C._setArrayType(makeConstList([A.List_4256_4351]), type$.JSArray_List_int);
    A.List_12288_12543 = C._setArrayType(makeConstList([12288, 12543]), type$.JSArray_int);
    A.List_19968_40879 = C._setArrayType(makeConstList([19968, 40879]), type$.JSArray_int);
    A.List_65280_65376 = C._setArrayType(makeConstList([65280, 65376]), type$.JSArray_int);
    A.List_ifW = C._setArrayType(makeConstList([A.List_12288_12543, A.List_19968_40879, A.List_65280_65376]), type$.JSArray_List_int);
    A.List_44032_55215 = C._setArrayType(makeConstList([44032, 55215]), type$.JSArray_int);
    A.List_List_44032_55215 = C._setArrayType(makeConstList([A.List_44032_55215]), type$.JSArray_List_int);
    A.Map_h25Ly = new C.ConstantStringMap(A.Object_E5c, [A.List_nS2, A.List_List_1024_1279, A.List_List_2304_4255, A.List_List_4256_4351, A.List_ifW, A.List_List_44032_55215], C.findType("ConstantStringMap<String,List<List<int>>>"));
    A.Object_3k1 = {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, a: 10, A: 11, b: 12, B: 13, c: 14, C: 15, d: 16, D: 17, e: 18, E: 19, f: 20, F: 21};
    A.Map_hxXwm = new C.ConstantStringMap(A.Object_3k1, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15], type$.ConstantStringMap_String_int);
    A.Object_RTo = {"\\xleftarrow": 0, "\\xrightarrow": 1, "\\xleftrightarrow": 2, "\\xLeftarrow": 3, "\\xRightarrow": 4, "\\xLeftrightarrow": 5, "\\xhookleftarrow": 6, "\\xhookrightarrow": 7, "\\xmapsto": 8, "\\xrightharpoondown": 9, "\\xrightharpoonup": 10, "\\xleftharpoondown": 11, "\\xleftharpoonup": 12, "\\xrightleftharpoons": 13, "\\xleftrightharpoons": 14, "\\xlongequal": 15, "\\xtwoheadleftarrow": 16, "\\xtwoheadrightarrow": 17, "\\xtofrom": 18, "\\xrightleftarrows": 19, "\\xrightequilibrium": 20, "\\xleftequilibrium": 21};
    A.Map_i9JgH = new C.ConstantStringMap(A.Object_RTo, ["\u2190", "\u2192", "\u2194", "\u21d0", "\u21d2", "\u21d4", "\u21a9", "\u21aa", "\u21a6", "\u21c1", "\u21c0", "\u21bd", "\u21bc", "\u21cc", "\u21cb", "=", "\u219e", "\u21a0", "\u21c4", "\u21c4", "\u21cc", "\u21cb"], type$.ConstantStringMap_String_String);
    A.Object_NYK = {multiply: 0, screen: 1, overlay: 2, darken: 3, lighten: 4, "color-dodge": 5, "color-burn": 6, "hard-light": 7, "soft-light": 8, difference: 9, exclusion: 10, hue: 11, saturation: 12, color: 13, luminosity: 14};
    A.BlendMode_240 = new B.BlendMode0(24, "multiply");
    A.BlendMode_140 = new B.BlendMode0(14, "screen");
    A.BlendMode_150 = new B.BlendMode0(15, "overlay");
    A.BlendMode_160 = new B.BlendMode0(16, "darken");
    A.BlendMode_170 = new B.BlendMode0(17, "lighten");
    A.BlendMode_180 = new B.BlendMode0(18, "colorDodge");
    A.BlendMode_190 = new B.BlendMode0(19, "colorBurn");
    A.BlendMode_200 = new B.BlendMode0(20, "hardLight");
    A.BlendMode_210 = new B.BlendMode0(21, "softLight");
    A.BlendMode_220 = new B.BlendMode0(22, "difference");
    A.BlendMode_230 = new B.BlendMode0(23, "exclusion");
    A.BlendMode_250 = new B.BlendMode0(25, "hue");
    A.BlendMode_260 = new B.BlendMode0(26, "saturation");
    A.BlendMode_270 = new B.BlendMode0(27, "color");
    A.BlendMode_280 = new B.BlendMode0(28, "luminosity");
    A.Map_imLTu = new C.ConstantStringMap(A.Object_NYK, [A.BlendMode_240, A.BlendMode_140, A.BlendMode_150, A.BlendMode_160, A.BlendMode_170, A.BlendMode_180, A.BlendMode_190, A.BlendMode_200, A.BlendMode_210, A.BlendMode_220, A.BlendMode_230, A.BlendMode_250, A.BlendMode_260, A.BlendMode_270, A.BlendMode_280], C.findType("ConstantStringMap<String,BlendMode0>"));
    A.Object_2ti = {"\u2013": 0, "\u2014": 1, "\u201c": 2, "\u201d": 3};
    A.Map_jLcbb = new C.ConstantStringMap(A.Object_2ti, ["--", "---", "``", "''"], type$.ConstantStringMap_String_String);
    A.Object_Hoi = {"\\acute": 0, "\\grave": 1, "\\ddot": 2, "\\tilde": 3, "\\bar": 4, "\\breve": 5, "\\check": 6, "\\hat": 7, "\\vec": 8, "\\dot": 9, "\\mathring": 10, "\\widecheck": 11, "\\widehat": 12, "\\widetilde": 13, "\\overrightarrow": 14, "\\overleftarrow": 15, "\\Overrightarrow": 16, "\\overleftrightarrow": 17, "\\overleftharpoon": 18, "\\overrightharpoon": 19, "\\'": 20, "\\`": 21, "\\^": 22, "\\~": 23, "\\=": 24, "\\u": 25, "\\.": 26, '\\"': 27, "\\r": 28, "\\H": 29, "\\v": 30, "\\overline": 31};
    A.Map_mBRlU = new C.ConstantStringMap(A.Object_Hoi, ["\xb4", "`", "\xa8", "~", "\xaf", "\u02d8", "\u02c7", "^", "\u2192", "\u02d9", "\u02da", "\u02c7", "^", "~", "\u2192", "\u2190", "\u21d2", "\u2194", "\u21bc", "\u21c0", "\xb4", "`", "^", "~", "\xaf", "\u02d8", "\u02d9", "\xa8", "\u02da", "\u02dd", "\u02c7", "\xaf"], type$.ConstantStringMap_String_String);
    A.Object_tav = {black: 0, silver: 1, gray: 2, white: 3, maroon: 4, red: 5, purple: 6, fuchsia: 7, green: 8, lime: 9, olive: 10, yellow: 11, navy: 12, blue: 13, teal: 14, aqua: 15, orange: 16, aliceblue: 17, antiquewhite: 18, aquamarine: 19, azure: 20, beige: 21, bisque: 22, blanchedalmond: 23, blueviolet: 24, brown: 25, burlywood: 26, cadetblue: 27, chartreuse: 28, chocolate: 29, coral: 30, cornflowerblue: 31, cornsilk: 32, crimson: 33, cyan: 34, darkblue: 35, darkcyan: 36, darkgoldenrod: 37, darkgray: 38, darkgreen: 39, darkgrey: 40, darkkhaki: 41, darkmagenta: 42, darkolivegreen: 43, darkorange: 44, darkorchid: 45, darkred: 46, darksalmon: 47, darkseagreen: 48, darkslateblue: 49, darkslategray: 50, darkslategrey: 51, darkturquoise: 52, darkviolet: 53, deeppink: 54, deepskyblue: 55, dimgray: 56, dimgrey: 57, dodgerblue: 58, firebrick: 59, floralwhite: 60, forestgreen: 61, gainsboro: 62, ghostwhite: 63, gold: 64, goldenrod: 65, greenyellow: 66, grey: 67, honeydew: 68, hotpink: 69, indianred: 70, indigo: 71, ivory: 72, khaki: 73, lavender: 74, lavenderblush: 75, lawngreen: 76, lemonchiffon: 77, lightblue: 78, lightcoral: 79, lightcyan: 80, lightgoldenrodyellow: 81, lightgray: 82, lightgreen: 83, lightgrey: 84, lightpink: 85, lightsalmon: 86, lightseagreen: 87, lightskyblue: 88, lightslategray: 89, lightslategrey: 90, lightsteelblue: 91, lightyellow: 92, limegreen: 93, linen: 94, "magenta (synonym of\xa0fuchsia)": 95, mediumaquamarine: 96, mediumblue: 97, mediumorchid: 98, mediumpurple: 99, mediumseagreen: 100, mediumslateblue: 101, mediumspringgreen: 102, mediumturquoise: 103, mediumvioletred: 104, midnightblue: 105, mintcream: 106, mistyrose: 107, moccasin: 108, navajowhite: 109, oldlace: 110, olivedrab: 111, orangered: 112, orchid: 113, palegoldenrod: 114, palegreen: 115, paleturquoise: 116, palevioletred: 117, papayawhip: 118, peachpuff: 119, peru: 120, pink: 121, plum: 122, powderblue: 123, rosybrown: 124, royalblue: 125, saddlebrown: 126, salmon: 127, sandybrown: 128, seagreen: 129, seashell: 130, sienna: 131, skyblue: 132, slateblue: 133, slategray: 134, slategrey: 135, snow: 136, springgreen: 137, steelblue: 138, tan: 139, thistle: 140, tomato: 141, turquoise: 142, violet: 143, wheat: 144, whitesmoke: 145, yellowgreen: 146, rebeccapurple: 147, transparent: 148};
    A.Color_Gt4 = new C.Color(1, 0.7529411764705882, 0.7529411764705882, 0.7529411764705882, D.ColorSpace_0);
    A.Color_OXP = new C.Color(1, 0.5019607843137255, 0.5019607843137255, 0.5019607843137255, D.ColorSpace_0);
    A.Color_wFz = new C.Color(1, 0.5019607843137255, 0, 0, D.ColorSpace_0);
    A.Color_D9B = new C.Color(1, 1, 0, 0, D.ColorSpace_0);
    A.Color_KPr = new C.Color(1, 0.5019607843137255, 0, 0.5019607843137255, D.ColorSpace_0);
    A.Color_9Ph = new C.Color(1, 1, 0, 1, D.ColorSpace_0);
    A.Color_4rO = new C.Color(1, 0, 0.5019607843137255, 0, D.ColorSpace_0);
    A.Color_GlT = new C.Color(1, 0, 1, 0, D.ColorSpace_0);
    A.Color_zfj = new C.Color(1, 0.5019607843137255, 0.5019607843137255, 0, D.ColorSpace_0);
    A.Color_zRR = new C.Color(1, 0, 0, 0.5019607843137255, D.ColorSpace_0);
    A.Color_NeZ = new C.Color(1, 0, 0, 1, D.ColorSpace_0);
    A.Color_S8Z = new C.Color(1, 0, 0.5019607843137255, 0.5019607843137255, D.ColorSpace_0);
    A.Color_XtB = new C.Color(1, 0, 1, 1, D.ColorSpace_0);
    A.Color_Xgh = new C.Color(1, 1, 0.6470588235294118, 0, D.ColorSpace_0);
    A.Color_5w2 = new C.Color(1, 0.9411764705882353, 0.9725490196078431, 1, D.ColorSpace_0);
    A.Color_p2X = new C.Color(1, 0.9803921568627451, 0.9215686274509803, 0.8431372549019608, D.ColorSpace_0);
    A.Color_w03 = new C.Color(1, 0.4980392156862745, 1, 0.8313725490196079, D.ColorSpace_0);
    A.Color_4aD = new C.Color(1, 0.9411764705882353, 1, 1, D.ColorSpace_0);
    A.Color_5L1 = new C.Color(1, 0.9607843137254902, 0.9607843137254902, 0.8627450980392157, D.ColorSpace_0);
    A.Color_tQf = new C.Color(1, 1, 0.8941176470588236, 0.7686274509803922, D.ColorSpace_0);
    A.Color_FRC = new C.Color(1, 1, 0.9215686274509803, 0.803921568627451, D.ColorSpace_0);
    A.Color_k3J = new C.Color(1, 0.5411764705882353, 0.16862745098039217, 0.8862745098039215, D.ColorSpace_0);
    A.Color_FTl = new C.Color(1, 0.6470588235294118, 0.16470588235294117, 0.16470588235294117, D.ColorSpace_0);
    A.Color_Wxb = new C.Color(1, 0.8705882352941177, 0.7215686274509804, 0.5294117647058824, D.ColorSpace_0);
    A.Color_Zfq = new C.Color(1, 0.37254901960784315, 0.6196078431372549, 0.6274509803921569, D.ColorSpace_0);
    A.Color_8hy = new C.Color(1, 0.4980392156862745, 1, 0, D.ColorSpace_0);
    A.Color_BTQ = new C.Color(1, 0.8235294117647058, 0.4117647058823529, 0.11764705882352941, D.ColorSpace_0);
    A.Color_zfw = new C.Color(1, 1, 0.4980392156862745, 0.3137254901960784, D.ColorSpace_0);
    A.Color_Gku = new C.Color(1, 0.39215686274509803, 0.5843137254901961, 0.9294117647058824, D.ColorSpace_0);
    A.Color_7D7 = new C.Color(1, 1, 0.9725490196078431, 0.8627450980392157, D.ColorSpace_0);
    A.Color_lDC = new C.Color(1, 0.8627450980392157, 0.0784313725490196, 0.23529411764705882, D.ColorSpace_0);
    A.Color_P8J = new C.Color(1, 0, 0, 0.5450980392156862, D.ColorSpace_0);
    A.Color_eBw = new C.Color(1, 0, 0.5450980392156862, 0.5450980392156862, D.ColorSpace_0);
    A.Color_ARF = new C.Color(1, 0.7215686274509804, 0.5254901960784314, 0.043137254901960784, D.ColorSpace_0);
    A.Color_Njy = new C.Color(1, 0.6627450980392157, 0.6627450980392157, 0.6627450980392157, D.ColorSpace_0);
    A.Color_vT0 = new C.Color(1, 0, 0.39215686274509803, 0, D.ColorSpace_0);
    A.Color_QRI = new C.Color(1, 0.7411764705882353, 0.7176470588235294, 0.4196078431372549, D.ColorSpace_0);
    A.Color_9aq = new C.Color(1, 0.5450980392156862, 0, 0.5450980392156862, D.ColorSpace_0);
    A.Color_Fbn = new C.Color(1, 0.3333333333333333, 0.4196078431372549, 0.1843137254901961, D.ColorSpace_0);
    A.Color_DbF = new C.Color(1, 1, 0.5490196078431373, 0, D.ColorSpace_0);
    A.Color_4hi = new C.Color(1, 0.6, 0.19607843137254902, 0.8, D.ColorSpace_0);
    A.Color_Eum = new C.Color(1, 0.5450980392156862, 0, 0, D.ColorSpace_0);
    A.Color_zY6 = new C.Color(1, 0.9137254901960784, 0.5882352941176471, 0.47843137254901963, D.ColorSpace_0);
    A.Color_5X7 = new C.Color(1, 0.5607843137254902, 0.7372549019607844, 0.5607843137254902, D.ColorSpace_0);
    A.Color_Jw8 = new C.Color(1, 0.2823529411764706, 0.23921568627450981, 0.5450980392156862, D.ColorSpace_0);
    A.Color_xQ0 = new C.Color(1, 0.1843137254901961, 0.30980392156862746, 0.30980392156862746, D.ColorSpace_0);
    A.Color_ZPZ = new C.Color(1, 0, 0.807843137254902, 0.8196078431372549, D.ColorSpace_0);
    A.Color_wHa = new C.Color(1, 0.5803921568627451, 0, 0.8274509803921568, D.ColorSpace_0);
    A.Color_rmn = new C.Color(1, 1, 0.0784313725490196, 0.5764705882352941, D.ColorSpace_0);
    A.Color_b0F = new C.Color(1, 0, 0.7490196078431373, 1, D.ColorSpace_0);
    A.Color_vrg = new C.Color(1, 0.4117647058823529, 0.4117647058823529, 0.4117647058823529, D.ColorSpace_0);
    A.Color_4gP = new C.Color(1, 0.11764705882352941, 0.5647058823529412, 1, D.ColorSpace_0);
    A.Color_kJm = new C.Color(1, 0.6980392156862745, 0.13333333333333333, 0.13333333333333333, D.ColorSpace_0);
    A.Color_e7V = new C.Color(1, 1, 0.9803921568627451, 0.9411764705882353, D.ColorSpace_0);
    A.Color_x0B = new C.Color(1, 0.13333333333333333, 0.5450980392156862, 0.13333333333333333, D.ColorSpace_0);
    A.Color_Hbo = new C.Color(1, 0.9725490196078431, 0.9725490196078431, 1, D.ColorSpace_0);
    A.Color_ESG = new C.Color(1, 1, 0.8431372549019608, 0, D.ColorSpace_0);
    A.Color_E8B = new C.Color(1, 0.8549019607843137, 0.6470588235294118, 0.12549019607843137, D.ColorSpace_0);
    A.Color_Thb = new C.Color(1, 0.6784313725490196, 1, 0.1843137254901961, D.ColorSpace_0);
    A.Color_TO4 = new C.Color(1, 0.9411764705882353, 1, 0.9411764705882353, D.ColorSpace_0);
    A.Color_Z9O = new C.Color(1, 1, 0.4117647058823529, 0.7058823529411765, D.ColorSpace_0);
    A.Color_Z9v = new C.Color(1, 0.803921568627451, 0.3607843137254902, 0.3607843137254902, D.ColorSpace_0);
    A.Color_fg5 = new C.Color(1, 0.29411764705882354, 0, 0.5098039215686274, D.ColorSpace_0);
    A.Color_fKG = new C.Color(1, 1, 1, 0.9411764705882353, D.ColorSpace_0);
    A.Color_van = new C.Color(1, 0.9411764705882353, 0.9019607843137255, 0.5490196078431373, D.ColorSpace_0);
    A.Color_g94 = new C.Color(1, 0.9019607843137255, 0.9019607843137255, 0.9803921568627451, D.ColorSpace_0);
    A.Color_K1H = new C.Color(1, 1, 0.9411764705882353, 0.9607843137254902, D.ColorSpace_0);
    A.Color_HHi = new C.Color(1, 0.48627450980392156, 0.9882352941176471, 0, D.ColorSpace_0);
    A.Color_K4F = new C.Color(1, 1, 0.9803921568627451, 0.803921568627451, D.ColorSpace_0);
    A.Color_xgy = new C.Color(1, 0.6784313725490196, 0.8470588235294118, 0.9019607843137255, D.ColorSpace_0);
    A.Color_IQy = new C.Color(1, 0.9411764705882353, 0.5019607843137255, 0.5019607843137255, D.ColorSpace_0);
    A.Color_uYE = new C.Color(1, 0.8784313725490196, 1, 1, D.ColorSpace_0);
    A.Color_PPR = new C.Color(1, 0.9803921568627451, 0.9803921568627451, 0.8235294117647058, D.ColorSpace_0);
    A.Color_Ijv = new C.Color(1, 0.8274509803921568, 0.8274509803921568, 0.8274509803921568, D.ColorSpace_0);
    A.Color_IiQ = new C.Color(1, 0.5647058823529412, 0.9333333333333333, 0.5647058823529412, D.ColorSpace_0);
    A.Color_ula = new C.Color(1, 1, 0.7137254901960784, 0.7568627450980392, D.ColorSpace_0);
    A.Color_0Ll = new C.Color(1, 1, 0.6274509803921569, 0.47843137254901963, D.ColorSpace_0);
    A.Color_ol3 = new C.Color(1, 0.12549019607843137, 0.6980392156862745, 0.6666666666666666, D.ColorSpace_0);
    A.Color_EGs = new C.Color(1, 0.5294117647058824, 0.807843137254902, 0.9803921568627451, D.ColorSpace_0);
    A.Color_ZkV = new C.Color(1, 0.4666666666666667, 0.5333333333333333, 0.6, D.ColorSpace_0);
    A.Color_4tb = new C.Color(1, 0.6901960784313725, 0.7686274509803922, 0.8705882352941177, D.ColorSpace_0);
    A.Color_AvJ = new C.Color(1, 1, 1, 0.8784313725490196, D.ColorSpace_0);
    A.Color_E12 = new C.Color(1, 0.19607843137254902, 0.803921568627451, 0.19607843137254902, D.ColorSpace_0);
    A.Color_0Dt = new C.Color(1, 0.9803921568627451, 0.9411764705882353, 0.9019607843137255, D.ColorSpace_0);
    A.Color_9dp = new C.Color(1, 0.4, 0.803921568627451, 0.6666666666666666, D.ColorSpace_0);
    A.Color_79b = new C.Color(1, 0, 0, 0.803921568627451, D.ColorSpace_0);
    A.Color_4TI = new C.Color(1, 0.7294117647058823, 0.3333333333333333, 0.8274509803921568, D.ColorSpace_0);
    A.Color_ub0 = new C.Color(1, 0.5764705882352941, 0.4392156862745098, 0.8588235294117647, D.ColorSpace_0);
    A.Color_IBM = new C.Color(1, 0.23529411764705882, 0.7019607843137254, 0.44313725490196076, D.ColorSpace_0);
    A.Color_oLx = new C.Color(1, 0.4823529411764706, 0.40784313725490196, 0.9333333333333333, D.ColorSpace_0);
    A.Color_Lpa = new C.Color(1, 0, 0.9803921568627451, 0.6039215686274509, D.ColorSpace_0);
    A.Color_v7X = new C.Color(1, 0.2823529411764706, 0.8196078431372549, 0.8, D.ColorSpace_0);
    A.Color_0P5 = new C.Color(1, 0.7803921568627451, 0.08235294117647059, 0.5215686274509804, D.ColorSpace_0);
    A.Color_43l = new C.Color(1, 0.09803921568627451, 0.09803921568627451, 0.4392156862745098, D.ColorSpace_0);
    A.Color_bpr = new C.Color(1, 0.9607843137254902, 1, 0.9803921568627451, D.ColorSpace_0);
    A.Color_8DQ = new C.Color(1, 1, 0.8941176470588236, 0.8823529411764706, D.ColorSpace_0);
    A.Color_Knm = new C.Color(1, 1, 0.8941176470588236, 0.7098039215686275, D.ColorSpace_0);
    A.Color_9cz = new C.Color(1, 1, 0.8705882352941177, 0.6784313725490196, D.ColorSpace_0);
    A.Color_sKl = new C.Color(1, 0.9921568627450981, 0.9607843137254902, 0.9019607843137255, D.ColorSpace_0);
    A.Color_4qX = new C.Color(1, 0.4196078431372549, 0.5568627450980392, 0.13725490196078433, D.ColorSpace_0);
    A.Color_ln7 = new C.Color(1, 1, 0.27058823529411763, 0, D.ColorSpace_0);
    A.Color_Dpm = new C.Color(1, 0.8549019607843137, 0.4392156862745098, 0.8392156862745098, D.ColorSpace_0);
    A.Color_WIt = new C.Color(1, 0.9333333333333333, 0.9098039215686274, 0.6666666666666666, D.ColorSpace_0);
    A.Color_V2m = new C.Color(1, 0.596078431372549, 0.984313725490196, 0.596078431372549, D.ColorSpace_0);
    A.Color_ysS = new C.Color(1, 0.6862745098039216, 0.9333333333333333, 0.9333333333333333, D.ColorSpace_0);
    A.Color_xzO = new C.Color(1, 0.8588235294117647, 0.4392156862745098, 0.5764705882352941, D.ColorSpace_0);
    A.Color_NzG = new C.Color(1, 1, 0.9372549019607843, 0.8352941176470589, D.ColorSpace_0);
    A.Color_QBY = new C.Color(1, 1, 0.8549019607843137, 0.7254901960784313, D.ColorSpace_0);
    A.Color_UwD = new C.Color(1, 0.803921568627451, 0.5215686274509804, 0.24705882352941178, D.ColorSpace_0);
    A.Color_x0a = new C.Color(1, 1, 0.7529411764705882, 0.796078431372549, D.ColorSpace_0);
    A.Color_LFp = new C.Color(1, 0.8666666666666667, 0.6274509803921569, 0.8666666666666667, D.ColorSpace_0);
    A.Color_RUB = new C.Color(1, 0.6901960784313725, 0.8784313725490196, 0.9019607843137255, D.ColorSpace_0);
    A.Color_llO = new C.Color(1, 0.7372549019607844, 0.5607843137254902, 0.5607843137254902, D.ColorSpace_0);
    A.Color_bKc = new C.Color(1, 0.5450980392156862, 0.27058823529411763, 0.07450980392156863, D.ColorSpace_0);
    A.Color_PB4 = new C.Color(1, 0.9803921568627451, 0.5019607843137255, 0.4470588235294118, D.ColorSpace_0);
    A.Color_HsJ = new C.Color(1, 0.9568627450980393, 0.6431372549019608, 0.3764705882352941, D.ColorSpace_0);
    A.Color_6Rg = new C.Color(1, 0.1803921568627451, 0.5450980392156862, 0.3411764705882353, D.ColorSpace_0);
    A.Color_jDc = new C.Color(1, 1, 0.9607843137254902, 0.9333333333333333, D.ColorSpace_0);
    A.Color_CT9 = new C.Color(1, 0.6274509803921569, 0.3215686274509804, 0.17647058823529413, D.ColorSpace_0);
    A.Color_J3c = new C.Color(1, 0.5294117647058824, 0.807843137254902, 0.9215686274509803, D.ColorSpace_0);
    A.Color_OrC = new C.Color(1, 0.41568627450980394, 0.35294117647058826, 0.803921568627451, D.ColorSpace_0);
    A.Color_zXH = new C.Color(1, 0.4392156862745098, 0.5019607843137255, 0.5647058823529412, D.ColorSpace_0);
    A.Color_LeY = new C.Color(1, 1, 0.9803921568627451, 0.9803921568627451, D.ColorSpace_0);
    A.Color_G0R = new C.Color(1, 0, 1, 0.4980392156862745, D.ColorSpace_0);
    A.Color_diS = new C.Color(1, 0.27450980392156865, 0.5098039215686274, 0.7058823529411765, D.ColorSpace_0);
    A.Color_3TL = new C.Color(1, 0.8235294117647058, 0.7058823529411765, 0.5490196078431373, D.ColorSpace_0);
    A.Color_zPa = new C.Color(1, 0.8470588235294118, 0.7490196078431373, 0.8470588235294118, D.ColorSpace_0);
    A.Color_xW0 = new C.Color(1, 1, 0.38823529411764707, 0.2784313725490196, D.ColorSpace_0);
    A.Color_UkR = new C.Color(1, 0.25098039215686274, 0.8784313725490196, 0.8156862745098039, D.ColorSpace_0);
    A.Color_4LY = new C.Color(1, 0.9333333333333333, 0.5098039215686274, 0.9333333333333333, D.ColorSpace_0);
    A.Color_zqD = new C.Color(1, 0.9607843137254902, 0.8705882352941177, 0.7019607843137254, D.ColorSpace_0);
    A.Color_BSV = new C.Color(1, 0.6039215686274509, 0.803921568627451, 0.19607843137254902, D.ColorSpace_0);
    A.Color_53L = new C.Color(1, 0.4, 0.2, 0.6, D.ColorSpace_0);
    A.Map_mi3Hd = new C.ConstantStringMap(A.Object_tav, [F.Color_vnR, A.Color_Gt4, A.Color_OXP, F.Color_wst, A.Color_wFz, A.Color_D9B, A.Color_KPr, A.Color_9Ph, A.Color_4rO, A.Color_GlT, A.Color_zfj, A8.Color_VwQ, A.Color_zRR, A.Color_NeZ, A.Color_S8Z, A.Color_XtB, A.Color_Xgh, A.Color_5w2, A.Color_p2X, A.Color_w03, A.Color_4aD, A.Color_5L1, A.Color_tQf, A.Color_FRC, A.Color_k3J, A.Color_FTl, A.Color_Wxb, A.Color_Zfq, A.Color_8hy, A.Color_BTQ, A.Color_zfw, A.Color_Gku, A.Color_7D7, A.Color_lDC, A.Color_XtB, A.Color_P8J, A.Color_eBw, A.Color_ARF, A.Color_Njy, A.Color_vT0, A.Color_Njy, A.Color_QRI, A.Color_9aq, A.Color_Fbn, A.Color_DbF, A.Color_4hi, A.Color_Eum, A.Color_zY6, A.Color_5X7, A.Color_Jw8, A.Color_xQ0, A.Color_xQ0, A.Color_ZPZ, A.Color_wHa, A.Color_rmn, A.Color_b0F, A.Color_vrg, A.Color_vrg, A.Color_4gP, A.Color_kJm, A.Color_e7V, A.Color_x0B, Aj.Color_v5M, A.Color_Hbo, A.Color_ESG, A.Color_E8B, A.Color_Thb, A.Color_OXP, A.Color_TO4, A.Color_Z9O, A.Color_Z9v, A.Color_fg5, A.Color_fKG, A.Color_van, A.Color_g94, A.Color_K1H, A.Color_HHi, A.Color_K4F, A.Color_xgy, A.Color_IQy, A.Color_uYE, A.Color_PPR, A.Color_Ijv, A.Color_IiQ, A.Color_Ijv, A.Color_ula, A.Color_0Ll, A.Color_ol3, A.Color_EGs, A.Color_ZkV, A.Color_ZkV, A.Color_4tb, A.Color_AvJ, A.Color_E12, A.Color_0Dt, A.Color_9Ph, A.Color_9dp, A.Color_79b, A.Color_4TI, A.Color_ub0, A.Color_IBM, A.Color_oLx, A.Color_Lpa, A.Color_v7X, A.Color_0P5, A.Color_43l, A.Color_bpr, A.Color_8DQ, A.Color_Knm, A.Color_9cz, A.Color_sKl, A.Color_4qX, A.Color_ln7, A.Color_Dpm, A.Color_WIt, A.Color_V2m, A.Color_ysS, A.Color_xzO, A.Color_NzG, A.Color_QBY, A.Color_UwD, A.Color_x0a, A.Color_LFp, A.Color_RUB, A.Color_llO, Ap.Color_Akh, A.Color_bKc, A.Color_PB4, A.Color_HsJ, A.Color_6Rg, A.Color_jDc, A.Color_CT9, A.Color_J3c, A.Color_OrC, A.Color_zXH, A.Color_zXH, A.Color_LeY, A.Color_G0R, A.Color_diS, A.Color_3TL, A.Color_zPa, A.Color_xW0, A.Color_UkR, A.Color_4LY, A.Color_zqD, G.Color_euu, A.Color_BSV, A.Color_53L, D.Color_Edl], C.findType("ConstantStringMap<String,Color>"));
    A.Object_FsI = {"\u2190": 0, "\u2192": 1, "\u2194": 2, "\u21d0": 3, "\u21d2": 4, "\u21d4": 5, "\u21a9": 6, "\u21aa": 7, "\u21a6": 8, "\u21c1": 9, "\u21c0": 10, "\u21bd": 11, "\u21bc": 12, "\u21cc": 13, "\u21cb": 14, "=": 15, "\u219e": 16, "\u21a0": 17, "\u21c4": 18};
    A.Map_mkQGg = new C.ConstantStringMap(A.Object_FsI, ["xleftarrow", "xrightarrow", "xleftrightarrow", "xLeftarrow", "xRightarrow", "xLeftrightarrow", "xhookleftarrow", "xhookrightarrow", "xmapsto", "xrightharpoondown", "xrightharpoonup", "xleftharpoondown", "xleftharpoonup", "xrightleftharpoons", "xleftrightharpoons", "xlongequal", "xtwoheadleftarrow", "xtwoheadrightarrow", "xrightleftarrows"], type$.ConstantStringMap_String_String);
    A.Object_den = {"\u222f": 0, "\u2230": 1};
    A.Map_nMHK2 = new C.ConstantStringMap(A.Object_den, ["\u222c", "\u222d"], type$.ConstantStringMap_String_String);
    A.Object_jhH = {"\\`": 0, '\\"': 1, "\\~": 2, "\\=": 3, "\\'": 4, "\\u": 5, "\\v": 6, "\\^": 7, "\\.": 8, "\\r": 9, "\\H": 10};
    A.Map_qW5F6 = new C.ConstantStringMap(A.Object_jhH, ["\u0300", "\u0308", "\u0303", "\u0304", "\u0301", "\u0306", "\u030c", "\u0302", "\u0307", "\u030a", "\u030b"], type$.ConstantStringMap_String_String);
    A.Object_adl = {"\\Bbb": 0, "\\bold": 1, "\\frak": 2, "\\bm": 3};
    A.Map_qsqNW = new C.ConstantStringMap(A.Object_adl, ["\\mathbb", "\\mathbf", "\\mathfrak", "\\boldsymbol"], type$.ConstantStringMap_String_String);
    A.Object_tTC = {png: 0, jpeg: 1, jpg: 2, webp: 3, gif: 4, bmp: 5};
    A.ImageFormat_0 = new B.ImageFormat(0, "png");
    A.ImageFormat_1 = new B.ImageFormat(1, "jpeg");
    A.ImageFormat_2 = new B.ImageFormat(2, "webp");
    A.ImageFormat_3 = new B.ImageFormat(3, "gif");
    A.ImageFormat_4 = new B.ImageFormat(4, "bmp");
    A.Map_rXDqg = new C.ConstantStringMap(A.Object_tTC, [A.ImageFormat_0, A.ImageFormat_1, A.ImageFormat_1, A.ImageFormat_2, A.ImageFormat_3, A.ImageFormat_4], C.findType("ConstantStringMap<String,ImageFormat>"));
    A.Object_d68 = {"[": 0, "{": 1, "\\begingroup": 2};
    A.Map_rjIXC = new C.ConstantStringMap(A.Object_d68, ["]", "}", "\\endgroup"], type$.ConstantStringMap_String_String);
    A.Object_fHP = {"\\textrm": 0, "\\textsf": 1, "\\texttt": 2, "\\textnormal": 3, "\\textbf": 4, "\\textmd": 5, "\\textit": 6, "\\textup": 7};
    A.PartialFontOptions_Main_null_null = new B.PartialFontOptions("Main", null, null);
    A.PartialFontOptions_SansSerif_null_null = new B.PartialFontOptions("SansSerif", null, null);
    A.PartialFontOptions_Typewriter_null_null = new B.PartialFontOptions("Typewriter", null, null);
    A.PartialFontOptions_null_FontWeight_6_null = new B.PartialFontOptions(null, F.FontWeight_6, null);
    A.PartialFontOptions_null_FontWeight_3_null = new B.PartialFontOptions(null, F.FontWeight_3, null);
    A.PartialFontOptions_null_null_FontStyle_1 = new B.PartialFontOptions(null, null, A.FontStyle_1);
    A.PartialFontOptions_null_null_FontStyle_0 = new B.PartialFontOptions(null, null, D.FontStyle_0);
    A.Map_sP8MA = new C.ConstantStringMap(A.Object_fHP, [A.PartialFontOptions_Main_null_null, A.PartialFontOptions_SansSerif_null_null, A.PartialFontOptions_Typewriter_null_null, A.PartialFontOptions_Main_null_null, A.PartialFontOptions_null_FontWeight_6_null, A.PartialFontOptions_null_FontWeight_3_null, A.PartialFontOptions_null_null_FontStyle_1, A.PartialFontOptions_null_null_FontStyle_0], C.findType("ConstantStringMap<String,PartialFontOptions>"));
    A.Object_NeZ = {matrix: 0, translate: 1, scale: 2, rotate: 3, skewX: 4, skewY: 5};
    A.Map_uCfR4 = new C.ConstantStringMap(A.Object_NeZ, [B.parsers___parseSvgMatrix$closure(), B.parsers___parseSvgTranslate$closure(), B.parsers___parseSvgScale$closure(), B.parsers___parseSvgRotate$closure(), B.parsers___parseSvgSkewX$closure(), B.parsers___parseSvgSkewY$closure()], C.findType("ConstantStringMap<String,AffineMatrix(List<double>,AffineMatrix)>"));
    A.Object_yIa = {"\u2237": 0, "\u2254": 1, "\u2255": 2, "\u2239": 3, "\u27e6": 4, "\u27e7": 5, "\u2983": 6, "\u2984": 7};
    A.List_5PS = C._setArrayType(makeConstList([":", ":"]), type$.JSArray_String);
    A.List_deZ = C._setArrayType(makeConstList([":", "="]), type$.JSArray_String);
    A.List_hPQ = C._setArrayType(makeConstList(["=", ":"]), type$.JSArray_String);
    A.List_K61 = C._setArrayType(makeConstList(["-", ":"]), type$.JSArray_String);
    A.List_x3T = C._setArrayType(makeConstList(["[", "["]), type$.JSArray_String);
    A.List_4WR = C._setArrayType(makeConstList(["]", "]"]), type$.JSArray_String);
    A.List_Py5 = C._setArrayType(makeConstList(["{", "["]), type$.JSArray_String);
    A.List_Rp2 = C._setArrayType(makeConstList(["]", "}"]), type$.JSArray_String);
    A.Map_uUUqS = new C.ConstantStringMap(A.Object_yIa, [A.List_5PS, A.List_deZ, A.List_hPQ, A.List_K61, A.List_x3T, A.List_4WR, A.List_Py5, A.List_Rp2], type$.ConstantStringMap_of_String_and_List_String);
    A.Object_lwg = {"AMS-Regular": 0, "Caligraphic-Regular": 1, "Fraktur-Regular": 2, "Main-Bold": 3, "Main-BoldItalic": 4, "Main-Italic": 5, "Main-Regular": 6, "Math-BoldItalic": 7, "Math-Italic": 8, "SansSerif-Bold": 9, "SansSerif-Italic": 10, "SansSerif-Regular": 11, "Script-Regular": 12, "Size1-Regular": 13, "Size2-Regular": 14, "Size3-Regular": 15, "Size4-Regular": 16, "Typewriter-Regular": 17};
    A.CharacterMetrics_z2l = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_z2l0 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_z2l1 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_z2l2 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_z2l3 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_Gb6 = new B.CharacterMetrics(0.16667, 0.68889, 0, 0);
    A.CharacterMetrics_z2l4 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_Gb60 = new B.CharacterMetrics(0.16667, 0.68889, 0, 0);
    A.CharacterMetrics_z2l5 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_z2l6 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_fs2 = new B.CharacterMetrics(0, 0.675, 0.025, 0);
    A.CharacterMetrics_dpR = new B.CharacterMetrics(0.15559, 0.69224, 0, 0);
    A.CharacterMetrics_z2l7 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_xB7 = new B.CharacterMetrics(0, 0.825, 0, 0);
    A.CharacterMetrics_HAi = new B.CharacterMetrics(0, 0.9, 0, 0);
    A.CharacterMetrics_cNx = new B.CharacterMetrics(0.08167, 0.58167, 0, 0);
    A.CharacterMetrics_nuV = new B.CharacterMetrics(0, 0.43056, 0.04028, 0);
    A.CharacterMetrics_oSq = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_z2l8 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_z2l9 = new B.CharacterMetrics(0, 0.68889, 0, 0);
    A.CharacterMetrics_uJj = new B.CharacterMetrics(-0.03598, 0.46402, 0, 0);
    A.CharacterMetrics_Xd1 = new B.CharacterMetrics(-0.13313, 0.36687, 0, 0);
    A.CharacterMetrics_UuM = new B.CharacterMetrics(0.01354, 0.52239, 0, 0);
    A.CharacterMetrics_UuM0 = new B.CharacterMetrics(0.01354, 0.52239, 0, 0);
    A.CharacterMetrics_oSq0 = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_4pf = new B.CharacterMetrics(-0.13313, 0.37788, 0, 0);
    A.CharacterMetrics_Ghm = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_Nyz = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_8hq = new B.CharacterMetrics(0.08198, 0.58198, 0, 0);
    A.CharacterMetrics_GD5 = new B.CharacterMetrics(0.19444, 0.69224, 0, 0);
    A.CharacterMetrics_D7M = new B.CharacterMetrics(0.1808, 0.675, 0, 0);
    A.CharacterMetrics_GD50 = new B.CharacterMetrics(0.19444, 0.69224, 0, 0);
    A.CharacterMetrics_9FD = new B.CharacterMetrics(0.13667, 0.63667, 0, 0);
    A.CharacterMetrics_4pf0 = new B.CharacterMetrics(-0.13313, 0.37788, 0, 0);
    A.CharacterMetrics_QEB = new B.CharacterMetrics(-0.064, 0.437, 0, 0);
    A.CharacterMetrics_xB70 = new B.CharacterMetrics(0, 0.825, 0, 0);
    A.CharacterMetrics_Nyz0 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_cG1 = new B.CharacterMetrics(0.08198, 0.69224, 0, 0);
    A.CharacterMetrics_Ghm0 = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_Ghm1 = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_YOu = new B.CharacterMetrics(0.03517, 0.52239, 0, 0);
    A.CharacterMetrics_cNx0 = new B.CharacterMetrics(0.08167, 0.58167, 0, 0);
    A.CharacterMetrics_rWV = new B.CharacterMetrics(0.25142, 0.74111, 0, 0);
    A.CharacterMetrics_cNx1 = new B.CharacterMetrics(0.08167, 0.58167, 0, 0);
    A.CharacterMetrics_rWV0 = new B.CharacterMetrics(0.25142, 0.74111, 0, 0);
    A.CharacterMetrics_Ghm2 = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_Xd10 = new B.CharacterMetrics(-0.13313, 0.36687, 0, 0);
    A.CharacterMetrics_4pf1 = new B.CharacterMetrics(-0.13313, 0.37788, 0, 0);
    A.CharacterMetrics_2K8 = new B.CharacterMetrics(-0.03625, 0.46375, 0, 0);
    A.CharacterMetrics_7N1 = new B.CharacterMetrics(0.30274, 0.79383, 0, 0);
    A.CharacterMetrics_Y6k = new B.CharacterMetrics(-0.01688, 0.48312, 0, 0);
    A.CharacterMetrics_RvH = new B.CharacterMetrics(0.06062, 0.54986, 0, 0);
    A.CharacterMetrics_9YC = new B.CharacterMetrics(0.22958, 0.72958, 0, 0);
    A.CharacterMetrics_6I2 = new B.CharacterMetrics(0.08198, 0.91667, 0, 0);
    A.CharacterMetrics_SYh = new B.CharacterMetrics(0.25583, 0.75583, 0, 0);
    A.CharacterMetrics_Aoj = new B.CharacterMetrics(0.25142, 0.75726, 0, 0);
    A.CharacterMetrics_SYh0 = new B.CharacterMetrics(0.25583, 0.75583, 0, 0);
    A.CharacterMetrics_ntd = new B.CharacterMetrics(0.20576, 0.70576, 0, 0);
    A.CharacterMetrics_D7M0 = new B.CharacterMetrics(0.1808, 0.675, 0, 0);
    A.CharacterMetrics_9FD0 = new B.CharacterMetrics(0.13667, 0.63667, 0, 0);
    A.CharacterMetrics_lOx = new B.CharacterMetrics(0.13597, 0.63597, 0, 0);
    A.CharacterMetrics_7dG = new B.CharacterMetrics(0.03517, 0.54986, 0, 0);
    A.CharacterMetrics_bdr = new B.CharacterMetrics(0, 0.675, 0, 0);
    A.CharacterMetrics_Ghm3 = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_Ghm4 = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_oSq1 = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_Lx9 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0);
    A.CharacterMetrics_GD51 = new B.CharacterMetrics(0.19444, 0.69224, 0, 0);
    A.CharacterMetrics_oSq2 = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_uJj0 = new B.CharacterMetrics(-0.03598, 0.46402, 0, 0);
    A.CharacterMetrics_oSq3 = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_oSq4 = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_res = new B.CharacterMetrics(0.0391, 0.5391, 0, 0);
    A.CharacterMetrics_7dG0 = new B.CharacterMetrics(0.03517, 0.54986, 0, 0);
    A.CharacterMetrics_21I = new B.CharacterMetrics(0.38569, 0.88569, 0, 0);
    A.CharacterMetrics_IAY = new B.CharacterMetrics(0.23222, 0.74111, 0, 0);
    A.CharacterMetrics_GD52 = new B.CharacterMetrics(0.19444, 0.69224, 0, 0);
    A.CharacterMetrics_dpR0 = new B.CharacterMetrics(0.15559, 0.69224, 0, 0);
    A.CharacterMetrics_Rke = new B.CharacterMetrics(0, 0.37788, 0, 0);
    A.CharacterMetrics_qrd = new B.CharacterMetrics(0.19444, 0.68889, 0, 0);
    A.CharacterMetrics_6qH = new B.CharacterMetrics(0.19444, 0.74111, 0, 0);
    A.CharacterMetrics_oSq5 = new B.CharacterMetrics(0, 0.54986, 0, 0);
    A.CharacterMetrics_jH3 = new B.CharacterMetrics(0.11111, 0.69224, 0, 0);
    A.CharacterMetrics_GD53 = new B.CharacterMetrics(0.19444, 0.69224, 0, 0);
    A.CharacterMetrics_Ghm5 = new B.CharacterMetrics(0, 0.69224, 0, 0);
    A.CharacterMetrics_v2j = new B.CharacterMetrics(0.19444, 0.75583, 0, 0);
    A.CharacterMetrics_3dN = new B.CharacterMetrics(0.26167, 0.75726, 0, 0);
    A.CharacterMetrics_ZfP = new B.CharacterMetrics(0.48256, 0.98256, 0, 0);
    A.CharacterMetrics_3Tg = new B.CharacterMetrics(0.28481, 0.79383, 0, 0);
    A.CharacterMetrics_M6D = new B.CharacterMetrics(0.41951, 0.91951, 0, 0);
    A.Map_AQWi1 = new C.GeneralConstantMap([65, A.CharacterMetrics_z2l, 66, A.CharacterMetrics_z2l0, 67, A.CharacterMetrics_z2l, 68, A.CharacterMetrics_z2l, 69, A.CharacterMetrics_z2l0, 70, A.CharacterMetrics_z2l1, 71, A.CharacterMetrics_z2l2, 72, A.CharacterMetrics_z2l2, 73, A.CharacterMetrics_z2l3, 74, A.CharacterMetrics_Gb6, 75, A.CharacterMetrics_z2l2, 76, A.CharacterMetrics_z2l0, 77, A.CharacterMetrics_z2l4, 78, A.CharacterMetrics_z2l, 79, A.CharacterMetrics_Gb60, 80, A.CharacterMetrics_z2l1, 81, A.CharacterMetrics_Gb60, 82, A.CharacterMetrics_z2l, 83, A.CharacterMetrics_z2l5, 84, A.CharacterMetrics_z2l0, 85, A.CharacterMetrics_z2l, 86, A.CharacterMetrics_z2l, 87, A.CharacterMetrics_z2l6, 88, A.CharacterMetrics_z2l, 89, A.CharacterMetrics_z2l, 90, A.CharacterMetrics_z2l0, 107, A.CharacterMetrics_z2l5, 165, A.CharacterMetrics_fs2, 174, A.CharacterMetrics_dpR, 240, A.CharacterMetrics_z2l5, 295, A.CharacterMetrics_z2l7, 710, A.CharacterMetrics_xB7, 732, A.CharacterMetrics_HAi, 770, A.CharacterMetrics_xB7, 771, A.CharacterMetrics_HAi, 989, A.CharacterMetrics_cNx, 1008, A.CharacterMetrics_nuV, 8245, A.CharacterMetrics_oSq, 8463, A.CharacterMetrics_z2l7, 8487, A.CharacterMetrics_z2l, 8498, A.CharacterMetrics_z2l5, 8502, A.CharacterMetrics_z2l0, 8503, A.CharacterMetrics_z2l8, 8504, A.CharacterMetrics_z2l0, 8513, A.CharacterMetrics_z2l9, 8592, A.CharacterMetrics_uJj, 8594, A.CharacterMetrics_uJj, 8602, A.CharacterMetrics_Xd1, 8603, A.CharacterMetrics_Xd1, 8606, A.CharacterMetrics_UuM, 8608, A.CharacterMetrics_UuM, 8610, A.CharacterMetrics_UuM0, 8611, A.CharacterMetrics_UuM0, 8619, A.CharacterMetrics_oSq0, 8620, A.CharacterMetrics_oSq0, 8621, A.CharacterMetrics_4pf, 8622, A.CharacterMetrics_Xd1, 8624, A.CharacterMetrics_Ghm, 8625, A.CharacterMetrics_Ghm, 8630, A.CharacterMetrics_Nyz, 8631, A.CharacterMetrics_Nyz, 8634, A.CharacterMetrics_8hq, 8635, A.CharacterMetrics_8hq, 8638, A.CharacterMetrics_GD5, 8639, A.CharacterMetrics_GD5, 8642, A.CharacterMetrics_GD5, 8643, A.CharacterMetrics_GD5, 8644, A.CharacterMetrics_D7M, 8646, A.CharacterMetrics_D7M, 8647, A.CharacterMetrics_D7M, 8648, A.CharacterMetrics_GD50, 8649, A.CharacterMetrics_D7M, 8650, A.CharacterMetrics_GD50, 8651, A.CharacterMetrics_UuM, 8652, A.CharacterMetrics_UuM, 8653, A.CharacterMetrics_Xd1, 8654, A.CharacterMetrics_Xd1, 8655, A.CharacterMetrics_Xd1, 8666, A.CharacterMetrics_9FD, 8667, A.CharacterMetrics_9FD, 8669, A.CharacterMetrics_4pf0, 8672, A.CharacterMetrics_QEB, 8674, A.CharacterMetrics_QEB, 8705, A.CharacterMetrics_xB70, 8708, A.CharacterMetrics_z2l5, 8709, A.CharacterMetrics_cNx, 8717, A.CharacterMetrics_Nyz0, 8722, A.CharacterMetrics_uJj, 8724, A.CharacterMetrics_cG1, 8726, A.CharacterMetrics_cNx, 8733, A.CharacterMetrics_Ghm0, 8736, A.CharacterMetrics_Ghm1, 8737, A.CharacterMetrics_Ghm1, 8738, A.CharacterMetrics_YOu, 8739, A.CharacterMetrics_cNx0, 8740, A.CharacterMetrics_rWV, 8741, A.CharacterMetrics_cNx1, 8742, A.CharacterMetrics_rWV0, 8756, A.CharacterMetrics_Ghm2, 8757, A.CharacterMetrics_Ghm2, 8764, A.CharacterMetrics_Xd10, 8765, A.CharacterMetrics_4pf1, 8769, A.CharacterMetrics_Xd10, 8770, A.CharacterMetrics_2K8, 8774, A.CharacterMetrics_7N1, 8776, A.CharacterMetrics_Y6k, 8778, A.CharacterMetrics_cNx, 8782, A.CharacterMetrics_RvH, 8783, A.CharacterMetrics_RvH, 8785, A.CharacterMetrics_8hq, 8786, A.CharacterMetrics_8hq, 8787, A.CharacterMetrics_8hq, 8790, A.CharacterMetrics_Ghm0, 8791, A.CharacterMetrics_9YC, 8796, A.CharacterMetrics_6I2, 8806, A.CharacterMetrics_SYh, 8807, A.CharacterMetrics_SYh, 8808, A.CharacterMetrics_Aoj, 8809, A.CharacterMetrics_Aoj, 8812, A.CharacterMetrics_SYh0, 8814, A.CharacterMetrics_ntd, 8815, A.CharacterMetrics_ntd, 8816, A.CharacterMetrics_7N1, 8817, A.CharacterMetrics_7N1, 8818, A.CharacterMetrics_9YC, 8819, A.CharacterMetrics_9YC, 8822, A.CharacterMetrics_D7M0, 8823, A.CharacterMetrics_D7M0, 8828, A.CharacterMetrics_9FD0, 8829, A.CharacterMetrics_9FD0, 8830, A.CharacterMetrics_9YC, 8831, A.CharacterMetrics_9YC, 8832, A.CharacterMetrics_ntd, 8833, A.CharacterMetrics_ntd, 8840, A.CharacterMetrics_7N1, 8841, A.CharacterMetrics_7N1, 8842, A.CharacterMetrics_lOx, 8843, A.CharacterMetrics_lOx, 8847, A.CharacterMetrics_7dG, 8848, A.CharacterMetrics_7dG, 8858, A.CharacterMetrics_8hq, 8859, A.CharacterMetrics_8hq, 8861, A.CharacterMetrics_8hq, 8862, A.CharacterMetrics_bdr, 8863, A.CharacterMetrics_bdr, 8864, A.CharacterMetrics_bdr, 8865, A.CharacterMetrics_bdr, 8872, A.CharacterMetrics_Ghm3, 8873, A.CharacterMetrics_Ghm1, 8874, A.CharacterMetrics_Ghm4, 8876, A.CharacterMetrics_z2l1, 8877, A.CharacterMetrics_z2l1, 8878, A.CharacterMetrics_z2l, 8879, A.CharacterMetrics_z2l, 8882, A.CharacterMetrics_7dG, 8883, A.CharacterMetrics_7dG, 8884, A.CharacterMetrics_9FD0, 8885, A.CharacterMetrics_9FD0, 8888, A.CharacterMetrics_oSq1, 8890, A.CharacterMetrics_Lx9, 8891, A.CharacterMetrics_GD51, 8892, A.CharacterMetrics_GD51, 8901, A.CharacterMetrics_oSq2, 8903, A.CharacterMetrics_cNx, 8905, A.CharacterMetrics_cNx, 8906, A.CharacterMetrics_cNx, 8907, A.CharacterMetrics_Ghm0, 8908, A.CharacterMetrics_Ghm0, 8909, A.CharacterMetrics_uJj0, 8910, A.CharacterMetrics_oSq3, 8911, A.CharacterMetrics_oSq3, 8912, A.CharacterMetrics_7dG, 8913, A.CharacterMetrics_7dG, 8914, A.CharacterMetrics_oSq4, 8915, A.CharacterMetrics_oSq4, 8916, A.CharacterMetrics_Ghm2, 8918, A.CharacterMetrics_res, 8919, A.CharacterMetrics_res, 8920, A.CharacterMetrics_7dG0, 8921, A.CharacterMetrics_7dG0, 8922, A.CharacterMetrics_21I, 8923, A.CharacterMetrics_21I, 8926, A.CharacterMetrics_9FD0, 8927, A.CharacterMetrics_9FD0, 8928, A.CharacterMetrics_7N1, 8929, A.CharacterMetrics_7N1, 8934, A.CharacterMetrics_IAY, 8935, A.CharacterMetrics_IAY, 8936, A.CharacterMetrics_IAY, 8937, A.CharacterMetrics_IAY, 8938, A.CharacterMetrics_ntd, 8939, A.CharacterMetrics_ntd, 8940, A.CharacterMetrics_7N1, 8941, A.CharacterMetrics_7N1, 8994, A.CharacterMetrics_GD52, 8995, A.CharacterMetrics_GD52, 9416, A.CharacterMetrics_dpR0, 9484, A.CharacterMetrics_Ghm, 9488, A.CharacterMetrics_Ghm, 9492, A.CharacterMetrics_Rke, 9496, A.CharacterMetrics_Rke, 9585, A.CharacterMetrics_qrd, 9586, A.CharacterMetrics_6qH, 9632, A.CharacterMetrics_bdr, 9633, A.CharacterMetrics_bdr, 9650, A.CharacterMetrics_oSq5, 9651, A.CharacterMetrics_oSq5, 9654, A.CharacterMetrics_7dG, 9660, A.CharacterMetrics_oSq5, 9661, A.CharacterMetrics_oSq5, 9664, A.CharacterMetrics_7dG, 9674, A.CharacterMetrics_jH3, 9733, A.CharacterMetrics_GD53, 10003, A.CharacterMetrics_Ghm5, 10016, A.CharacterMetrics_Ghm5, 10731, A.CharacterMetrics_jH3, 10846, A.CharacterMetrics_v2j, 10877, A.CharacterMetrics_9FD0, 10878, A.CharacterMetrics_9FD0, 10885, A.CharacterMetrics_SYh, 10886, A.CharacterMetrics_SYh, 10887, A.CharacterMetrics_lOx, 10888, A.CharacterMetrics_lOx, 10889, A.CharacterMetrics_3dN, 10890, A.CharacterMetrics_3dN, 10891, A.CharacterMetrics_ZfP, 10892, A.CharacterMetrics_ZfP, 10901, A.CharacterMetrics_9FD0, 10902, A.CharacterMetrics_9FD0, 10933, A.CharacterMetrics_Aoj, 10934, A.CharacterMetrics_Aoj, 10935, A.CharacterMetrics_3dN, 10936, A.CharacterMetrics_3dN, 10937, A.CharacterMetrics_3dN, 10938, A.CharacterMetrics_3dN, 10949, A.CharacterMetrics_SYh, 10950, A.CharacterMetrics_SYh, 10955, A.CharacterMetrics_3Tg, 10956, A.CharacterMetrics_3Tg, 57350, A.CharacterMetrics_cNx0, 57351, A.CharacterMetrics_cNx1, 57352, A.CharacterMetrics_cNx, 57353, A.CharacterMetrics_nuV, 57356, A.CharacterMetrics_Aoj, 57357, A.CharacterMetrics_Aoj, 57358, A.CharacterMetrics_M6D, 57359, A.CharacterMetrics_7N1, 57360, A.CharacterMetrics_7N1, 57361, A.CharacterMetrics_M6D, 57366, A.CharacterMetrics_Aoj, 57367, A.CharacterMetrics_Aoj, 57368, A.CharacterMetrics_Aoj, 57369, A.CharacterMetrics_Aoj, 57370, A.CharacterMetrics_lOx, 57371, A.CharacterMetrics_lOx], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_Nyz1 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Lx90 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0);
    A.CharacterMetrics_CBT = new B.CharacterMetrics(0, 0.64444, 0, 0);
    A.CharacterMetrics_chF = new B.CharacterMetrics(0, 0.68333, 0, 0.19445);
    A.CharacterMetrics_0Z5 = new B.CharacterMetrics(0, 0.68333, 0.03041, 0.13889);
    A.CharacterMetrics_EMW = new B.CharacterMetrics(0, 0.68333, 0.05834, 0.13889);
    A.CharacterMetrics_bRO = new B.CharacterMetrics(0, 0.68333, 0.02778, 0.08334);
    A.CharacterMetrics_VMA = new B.CharacterMetrics(0, 0.68333, 0.08944, 0.11111);
    A.CharacterMetrics_e38 = new B.CharacterMetrics(0, 0.68333, 0.09931, 0.11111);
    A.CharacterMetrics_k2N = new B.CharacterMetrics(0.09722, 0.68333, 0.0593, 0.11111);
    A.CharacterMetrics_p3a = new B.CharacterMetrics(0, 0.68333, 0.00965, 0.11111);
    A.CharacterMetrics_WOG = new B.CharacterMetrics(0, 0.68333, 0.07382, 0);
    A.CharacterMetrics_lqS = new B.CharacterMetrics(0.09722, 0.68333, 0.18472, 0.16667);
    A.CharacterMetrics_nfE = new B.CharacterMetrics(0, 0.68333, 0.01445, 0.05556);
    A.CharacterMetrics_gSc = new B.CharacterMetrics(0, 0.68333, 0, 0.13889);
    A.CharacterMetrics_gSc0 = new B.CharacterMetrics(0, 0.68333, 0, 0.13889);
    A.CharacterMetrics_zis = new B.CharacterMetrics(0, 0.68333, 0.14736, 0.08334);
    A.CharacterMetrics_nxs = new B.CharacterMetrics(0, 0.68333, 0.02778, 0.11111);
    A.CharacterMetrics_gLH = new B.CharacterMetrics(0, 0.68333, 0.08222, 0.08334);
    A.CharacterMetrics_hSf = new B.CharacterMetrics(0.09722, 0.68333, 0, 0.11111);
    A.CharacterMetrics_vHQ = new B.CharacterMetrics(0, 0.68333, 0, 0.08334);
    A.CharacterMetrics_Sji = new B.CharacterMetrics(0, 0.68333, 0.075, 0.13889);
    A.CharacterMetrics_Cb8 = new B.CharacterMetrics(0, 0.68333, 0.25417, 0);
    A.CharacterMetrics_GJ1 = new B.CharacterMetrics(0, 0.68333, 0.09931, 0.08334);
    A.CharacterMetrics_zwd = new B.CharacterMetrics(0, 0.68333, 0.08222, 0);
    A.CharacterMetrics_gLH0 = new B.CharacterMetrics(0, 0.68333, 0.08222, 0.08334);
    A.CharacterMetrics_44L = new B.CharacterMetrics(0, 0.68333, 0.14643, 0.13889);
    A.CharacterMetrics_JzM = new B.CharacterMetrics(0.09722, 0.68333, 0.08222, 0.08334);
    A.CharacterMetrics_s2W = new B.CharacterMetrics(0, 0.68333, 0.07944, 0.13889);
    A.Map_lyvP9 = new C.GeneralConstantMap([48, A.CharacterMetrics_Nyz1, 49, A.CharacterMetrics_Nyz1, 50, A.CharacterMetrics_Nyz1, 51, A.CharacterMetrics_Lx90, 52, A.CharacterMetrics_Lx90, 53, A.CharacterMetrics_Lx90, 54, A.CharacterMetrics_CBT, 55, A.CharacterMetrics_Lx90, 56, A.CharacterMetrics_CBT, 57, A.CharacterMetrics_Lx90, 65, A.CharacterMetrics_chF, 66, A.CharacterMetrics_0Z5, 67, A.CharacterMetrics_EMW, 68, A.CharacterMetrics_bRO, 69, A.CharacterMetrics_VMA, 70, A.CharacterMetrics_e38, 71, A.CharacterMetrics_k2N, 72, A.CharacterMetrics_p3a, 73, A.CharacterMetrics_WOG, 74, A.CharacterMetrics_lqS, 75, A.CharacterMetrics_nfE, 76, A.CharacterMetrics_gSc, 77, A.CharacterMetrics_gSc0, 78, A.CharacterMetrics_zis, 79, A.CharacterMetrics_nxs, 80, A.CharacterMetrics_gLH, 81, A.CharacterMetrics_hSf, 82, A.CharacterMetrics_vHQ, 83, A.CharacterMetrics_Sji, 84, A.CharacterMetrics_Cb8, 85, A.CharacterMetrics_GJ1, 86, A.CharacterMetrics_zwd, 87, A.CharacterMetrics_gLH0, 88, A.CharacterMetrics_44L, 89, A.CharacterMetrics_JzM, 90, A.CharacterMetrics_s2W], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_Bq2 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq20 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq21 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq22 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_okn = new B.CharacterMetrics(0.24982, 0.74947, 0, 0);
    A.CharacterMetrics_svL = new B.CharacterMetrics(0, 0.62119, 0, 0);
    A.CharacterMetrics_gjC = new B.CharacterMetrics(0.08319, 0.58283, 0, 0);
    A.CharacterMetrics_tZA = new B.CharacterMetrics(0, 0.10803, 0, 0);
    A.CharacterMetrics_okn0 = new B.CharacterMetrics(0.24982, 0.74947, 0, 0);
    A.CharacterMetrics_Zdj = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_Htm = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_Bq23 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Zdj0 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_ttS = new B.CharacterMetrics(0.12604, 0.47534, 0, 0);
    A.CharacterMetrics_bJu = new B.CharacterMetrics(-0.13099, 0.36866, 0, 0);
    A.CharacterMetrics_Bq24 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq25 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq26 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq27 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq28 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq29 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_XZo = new B.CharacterMetrics(0.12604, 0.69141, 0, 0);
    A.CharacterMetrics_Bq210 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_L1r = new B.CharacterMetrics(0.06302, 0.69141, 0, 0);
    A.CharacterMetrics_Bq211 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_XZo0 = new B.CharacterMetrics(0.12604, 0.69141, 0, 0);
    A.CharacterMetrics_Bq212 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq213 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq214 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq215 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq216 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Pzh = new B.CharacterMetrics(0.18906, 0.69141, 0, 0);
    A.CharacterMetrics_Q57 = new B.CharacterMetrics(0.03781, 0.69141, 0, 0);
    A.CharacterMetrics_Bq217 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq218 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq219 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq220 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq221 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq222 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq223 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Pzh0 = new B.CharacterMetrics(0.18906, 0.69141, 0, 0);
    A.CharacterMetrics_XZo1 = new B.CharacterMetrics(0.12604, 0.69141, 0, 0);
    A.CharacterMetrics_okn1 = new B.CharacterMetrics(0.24982, 0.74947, 0, 0);
    A.CharacterMetrics_Bq224 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Zdj1 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_Bq225 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Zdj2 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_svL0 = new B.CharacterMetrics(0, 0.62119, 0, 0);
    A.CharacterMetrics_Zdj3 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_Pzh1 = new B.CharacterMetrics(0.18906, 0.69141, 0, 0);
    A.CharacterMetrics_Htm0 = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_Pzh2 = new B.CharacterMetrics(0.18906, 0.69141, 0, 0);
    A.CharacterMetrics_Bq226 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq227 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq228 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Bq229 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_Zdj4 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_Zdj5 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_Zdj6 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_nnd = new B.CharacterMetrics(0.18906, 0.52396, 0, 0);
    A.CharacterMetrics_Htm1 = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_Zdj7 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_Zdj8 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_svL1 = new B.CharacterMetrics(0, 0.62119, 0, 0);
    A.CharacterMetrics_Zdj9 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.CharacterMetrics_eHt = new B.CharacterMetrics(0, 0.52396, 0, 0);
    A.CharacterMetrics_eHt0 = new B.CharacterMetrics(0, 0.52396, 0, 0);
    A.CharacterMetrics_Htm2 = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_Htm3 = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_Htm4 = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_svL2 = new B.CharacterMetrics(0, 0.62119, 0, 0);
    A.CharacterMetrics_svL3 = new B.CharacterMetrics(0, 0.62119, 0, 0);
    A.CharacterMetrics_Pzh3 = new B.CharacterMetrics(0.18906, 0.69141, 0, 0);
    A.CharacterMetrics_Pzh4 = new B.CharacterMetrics(0.18906, 0.69141, 0, 0);
    A.CharacterMetrics_Htm5 = new B.CharacterMetrics(0.18906, 0.47534, 0, 0);
    A.CharacterMetrics_Bq230 = new B.CharacterMetrics(0, 0.69141, 0, 0);
    A.CharacterMetrics_svL4 = new B.CharacterMetrics(0, 0.62119, 0, 0);
    A.CharacterMetrics_Zdj10 = new B.CharacterMetrics(0, 0.47534, 0, 0);
    A.Map_yJz2H = new C.GeneralConstantMap([33, A.CharacterMetrics_Bq2, 34, A.CharacterMetrics_Bq20, 38, A.CharacterMetrics_Bq21, 39, A.CharacterMetrics_Bq22, 40, A.CharacterMetrics_okn, 41, A.CharacterMetrics_okn, 42, A.CharacterMetrics_svL, 43, A.CharacterMetrics_gjC, 44, A.CharacterMetrics_tZA, 45, A.CharacterMetrics_gjC, 46, A.CharacterMetrics_tZA, 47, A.CharacterMetrics_okn0, 48, A.CharacterMetrics_Zdj, 49, A.CharacterMetrics_Zdj, 50, A.CharacterMetrics_Zdj, 51, A.CharacterMetrics_Htm, 52, A.CharacterMetrics_Htm, 53, A.CharacterMetrics_Htm, 54, A.CharacterMetrics_Bq23, 55, A.CharacterMetrics_Htm, 56, A.CharacterMetrics_Bq23, 57, A.CharacterMetrics_Htm, 58, A.CharacterMetrics_Zdj0, 59, A.CharacterMetrics_ttS, 61, A.CharacterMetrics_bJu, 63, A.CharacterMetrics_Bq24, 65, A.CharacterMetrics_Bq25, 66, A.CharacterMetrics_Bq26, 67, A.CharacterMetrics_Bq27, 68, A.CharacterMetrics_Bq28, 69, A.CharacterMetrics_Bq29, 70, A.CharacterMetrics_XZo, 71, A.CharacterMetrics_Bq210, 72, A.CharacterMetrics_L1r, 73, A.CharacterMetrics_Bq211, 74, A.CharacterMetrics_XZo0, 75, A.CharacterMetrics_Bq212, 76, A.CharacterMetrics_Bq213, 77, A.CharacterMetrics_Bq214, 78, A.CharacterMetrics_Bq215, 79, A.CharacterMetrics_Bq216, 80, A.CharacterMetrics_Pzh, 81, A.CharacterMetrics_Q57, 82, A.CharacterMetrics_Bq217, 83, A.CharacterMetrics_Bq218, 84, A.CharacterMetrics_Bq219, 85, A.CharacterMetrics_Bq220, 86, A.CharacterMetrics_Bq221, 87, A.CharacterMetrics_Bq222, 88, A.CharacterMetrics_Bq223, 89, A.CharacterMetrics_Pzh0, 90, A.CharacterMetrics_XZo1, 91, A.CharacterMetrics_okn1, 93, A.CharacterMetrics_okn1, 94, A.CharacterMetrics_Bq224, 97, A.CharacterMetrics_Zdj1, 98, A.CharacterMetrics_Bq225, 99, A.CharacterMetrics_Zdj2, 100, A.CharacterMetrics_svL0, 101, A.CharacterMetrics_Zdj3, 102, A.CharacterMetrics_Pzh1, 103, A.CharacterMetrics_Htm0, 104, A.CharacterMetrics_Pzh2, 105, A.CharacterMetrics_Bq226, 106, A.CharacterMetrics_Bq227, 107, A.CharacterMetrics_Bq228, 108, A.CharacterMetrics_Bq229, 109, A.CharacterMetrics_Zdj4, 110, A.CharacterMetrics_Zdj5, 111, A.CharacterMetrics_Zdj6, 112, A.CharacterMetrics_nnd, 113, A.CharacterMetrics_Htm1, 114, A.CharacterMetrics_Zdj7, 115, A.CharacterMetrics_Zdj8, 116, A.CharacterMetrics_svL1, 117, A.CharacterMetrics_Zdj9, 118, A.CharacterMetrics_eHt, 119, A.CharacterMetrics_eHt0, 120, A.CharacterMetrics_Htm2, 121, A.CharacterMetrics_Htm3, 122, A.CharacterMetrics_Htm4, 8216, A.CharacterMetrics_Bq20, 8217, A.CharacterMetrics_Bq20, 58112, A.CharacterMetrics_svL2, 58113, A.CharacterMetrics_svL3, 58114, A.CharacterMetrics_Pzh3, 58115, A.CharacterMetrics_Pzh4, 58116, A.CharacterMetrics_Htm5, 58117, A.CharacterMetrics_Bq230, 58118, A.CharacterMetrics_svL4, 58119, A.CharacterMetrics_Zdj10], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_dQ1 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ10 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_Z0j = new B.CharacterMetrics(0.05556, 0.75, 0, 0);
    A.CharacterMetrics_Z0j0 = new B.CharacterMetrics(0.05556, 0.75, 0, 0);
    A.CharacterMetrics_dQ11 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ12 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Nd5 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_Coa = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_Muz = new B.CharacterMetrics(0.13333, 0.63333, 0, 0);
    A.CharacterMetrics_tHb = new B.CharacterMetrics(0.19444, 0.15556, 0, 0);
    A.CharacterMetrics_58p = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_439 = new B.CharacterMetrics(0, 0.15556, 0, 0);
    A.CharacterMetrics_Nd50 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_CBT0 = new B.CharacterMetrics(0, 0.64444, 0, 0);
    A.CharacterMetrics_58p0 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_7CM = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_Vbo = new B.CharacterMetrics(0.08556, 0.58556, 0, 0);
    A.CharacterMetrics_qWW = new B.CharacterMetrics(-0.10889, 0.39111, 0, 0);
    A.CharacterMetrics_dQ13 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_E2v = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v0 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v1 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v2 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v3 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v4 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v5 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v6 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v7 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v8 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v9 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v10 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v11 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v12 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v13 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_qSQ = new B.CharacterMetrics(0.19444, 0.68611, 0, 0);
    A.CharacterMetrics_E2v14 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v15 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v16 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v17 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_01K = new B.CharacterMetrics(0, 0.68611, 0.01597, 0);
    A.CharacterMetrics_01K0 = new B.CharacterMetrics(0, 0.68611, 0.01597, 0);
    A.CharacterMetrics_7Co = new B.CharacterMetrics(0, 0.68611, 0.02875, 0);
    A.CharacterMetrics_E2v18 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_Nd51 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_dQ14 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Gs7 = new B.CharacterMetrics(0.31, 0.13444, 0.03194, 0);
    A.CharacterMetrics_58p1 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_dQ15 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p2 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p3 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_I7x = new B.CharacterMetrics(0, 0.69444, 0.10903, 0);
    A.CharacterMetrics_ie5 = new B.CharacterMetrics(0.19444, 0.44444, 0.01597, 0);
    A.CharacterMetrics_f3e0 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_dQ16 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p4 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p5 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p6 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_7CM0 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_7CM1 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_58p7 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p8 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_clc = new B.CharacterMetrics(0, 0.63492, 0, 0);
    A.CharacterMetrics_C2s = new B.CharacterMetrics(0, 0.44444, 0.01597, 0);
    A.CharacterMetrics_C2s0 = new B.CharacterMetrics(0, 0.44444, 0.01597, 0);
    A.CharacterMetrics_58p9 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_ie50 = new B.CharacterMetrics(0.19444, 0.44444, 0.01597, 0);
    A.CharacterMetrics_LfA = new B.CharacterMetrics(0.35, 0.34444, 0, 0);
    A.CharacterMetrics_58p10 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_dQ17 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_aiS = new B.CharacterMetrics(0.17014, 0, 0, 0);
    A.CharacterMetrics_E2v19 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_N9P = new B.CharacterMetrics(0.04861, 0.73472, 0, 0);
    A.CharacterMetrics_dQ18 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p11 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_ZwP = new B.CharacterMetrics(0.09722, 0.54167, 0, 0);
    A.CharacterMetrics_E2v20 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_58p12 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_7CM2 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_xJj = new B.CharacterMetrics(0, 0.63194, 0, 0);
    A.CharacterMetrics_eCx = new B.CharacterMetrics(0, 0.59611, 0, 0);
    A.CharacterMetrics_E2v21 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v22 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v23 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_E2v24 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_GZK = new B.CharacterMetrics(0, 0.44444, 0.03194, 0);
    A.CharacterMetrics_GZK0 = new B.CharacterMetrics(0, 0.44444, 0.03194, 0);
    A.CharacterMetrics_f3e1 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_XSW = new B.CharacterMetrics(0, 0.55556, 0, 0);
    A.CharacterMetrics_AVN = new B.CharacterMetrics(0, 0.72444, 0.15486, 0);
    A.CharacterMetrics_dQ19 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ110 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ111 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_7CM3 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_dQ112 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_qWW0 = new B.CharacterMetrics(-0.10889, 0.39111, 0, 0);
    A.CharacterMetrics_f3e2 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_f3e3 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_f3e4 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_Nd52 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_O6g = new B.CharacterMetrics(0, 0.69444, 0.06389, 0);
    A.CharacterMetrics_Vbo0 = new B.CharacterMetrics(0.08556, 0.58556, 0, 0);
    A.CharacterMetrics_AoR = new B.CharacterMetrics(-0.02778, 0.47222, 0, 0);
    A.CharacterMetrics_kSb = new B.CharacterMetrics(-0.02639, 0.47361, 0, 0);
    A.CharacterMetrics_eqU = new B.CharacterMetrics(0.18, 0.82, 0, 0);
    A.CharacterMetrics_58p13 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_XSW0 = new B.CharacterMetrics(0, 0.55556, 0, 0);
    A.CharacterMetrics_eaJ = new B.CharacterMetrics(0.19444, 0.69444, 0.12778, 0);
    A.CharacterMetrics_f3e5 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_s1L = new B.CharacterMetrics(0.00222, 0.50222, 0, 0);
    A.CharacterMetrics_HLa = new B.CharacterMetrics(0.02444, 0.52444, 0, 0);
    A.CharacterMetrics_v2R = new B.CharacterMetrics(0.19667, 0.69667, 0, 0);
    A.CharacterMetrics_Vbo1 = new B.CharacterMetrics(0.08556, 0.58556, 0, 0);
    A.CharacterMetrics_kSb0 = new B.CharacterMetrics(-0.02639, 0.47361, 0, 0);
    A.CharacterMetrics_Nd53 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_GOV = new B.CharacterMetrics(-0.13889, 0.36111, 0, 0);
    A.CharacterMetrics_f3e6 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_gFq = new B.CharacterMetrics(0.12963, 0.69444, 0, 0);
    A.CharacterMetrics_Coa0 = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_f3e7 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_f3e8 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.Map_JckB2 = new C.GeneralConstantMap([33, A.CharacterMetrics_dQ1, 34, A.CharacterMetrics_dQ10, 35, A.CharacterMetrics_f3e, 36, A.CharacterMetrics_Z0j, 37, A.CharacterMetrics_Z0j0, 38, A.CharacterMetrics_dQ11, 39, A.CharacterMetrics_dQ12, 40, A.CharacterMetrics_Nd5, 41, A.CharacterMetrics_Nd5, 42, A.CharacterMetrics_Coa, 43, A.CharacterMetrics_Muz, 44, A.CharacterMetrics_tHb, 45, A.CharacterMetrics_58p, 46, A.CharacterMetrics_439, 47, A.CharacterMetrics_Nd50, 48, A.CharacterMetrics_CBT0, 49, A.CharacterMetrics_CBT0, 50, A.CharacterMetrics_CBT0, 51, A.CharacterMetrics_CBT0, 52, A.CharacterMetrics_CBT0, 53, A.CharacterMetrics_CBT0, 54, A.CharacterMetrics_CBT0, 55, A.CharacterMetrics_CBT0, 56, A.CharacterMetrics_CBT0, 57, A.CharacterMetrics_CBT0, 58, A.CharacterMetrics_58p0, 59, A.CharacterMetrics_7CM, 60, A.CharacterMetrics_Vbo, 61, A.CharacterMetrics_qWW, 62, A.CharacterMetrics_Vbo, 63, A.CharacterMetrics_dQ13, 64, A.CharacterMetrics_dQ11, 65, A.CharacterMetrics_E2v, 66, A.CharacterMetrics_E2v0, 67, A.CharacterMetrics_E2v1, 68, A.CharacterMetrics_E2v2, 69, A.CharacterMetrics_E2v3, 70, A.CharacterMetrics_E2v4, 71, A.CharacterMetrics_E2v5, 72, A.CharacterMetrics_E2v6, 73, A.CharacterMetrics_E2v7, 74, A.CharacterMetrics_E2v8, 75, A.CharacterMetrics_E2v9, 76, A.CharacterMetrics_E2v10, 77, A.CharacterMetrics_E2v11, 78, A.CharacterMetrics_E2v6, 79, A.CharacterMetrics_E2v12, 80, A.CharacterMetrics_E2v13, 81, A.CharacterMetrics_qSQ, 82, A.CharacterMetrics_E2v14, 83, A.CharacterMetrics_E2v15, 84, A.CharacterMetrics_E2v16, 85, A.CharacterMetrics_E2v17, 86, A.CharacterMetrics_01K, 87, A.CharacterMetrics_01K0, 88, A.CharacterMetrics_E2v, 89, A.CharacterMetrics_7Co, 90, A.CharacterMetrics_E2v18, 91, A.CharacterMetrics_Nd51, 92, A.CharacterMetrics_Nd50, 93, A.CharacterMetrics_Nd51, 94, A.CharacterMetrics_dQ14, 95, A.CharacterMetrics_Gs7, 97, A.CharacterMetrics_58p1, 98, A.CharacterMetrics_dQ15, 99, A.CharacterMetrics_58p2, 100, A.CharacterMetrics_dQ15, 101, A.CharacterMetrics_58p3, 102, A.CharacterMetrics_I7x, 103, A.CharacterMetrics_ie5, 104, A.CharacterMetrics_dQ15, 105, A.CharacterMetrics_dQ12, 106, A.CharacterMetrics_f3e0, 107, A.CharacterMetrics_dQ16, 108, A.CharacterMetrics_dQ12, 109, A.CharacterMetrics_58p4, 110, A.CharacterMetrics_58p5, 111, A.CharacterMetrics_58p6, 112, A.CharacterMetrics_7CM0, 113, A.CharacterMetrics_7CM1, 114, A.CharacterMetrics_58p7, 115, A.CharacterMetrics_58p8, 116, A.CharacterMetrics_clc, 117, A.CharacterMetrics_58p5, 118, A.CharacterMetrics_C2s, 119, A.CharacterMetrics_C2s0, 120, A.CharacterMetrics_58p9, 121, A.CharacterMetrics_ie50, 122, A.CharacterMetrics_58p2, 123, A.CharacterMetrics_Nd50, 124, A.CharacterMetrics_Nd51, 125, A.CharacterMetrics_Nd50, 126, A.CharacterMetrics_LfA, 168, A.CharacterMetrics_dQ14, 172, A.CharacterMetrics_58p10, 176, A.CharacterMetrics_dQ17, 177, A.CharacterMetrics_Muz, 184, A.CharacterMetrics_aiS, 198, A.CharacterMetrics_E2v19, 215, A.CharacterMetrics_Muz, 216, A.CharacterMetrics_N9P, 223, A.CharacterMetrics_dQ18, 230, A.CharacterMetrics_58p11, 247, A.CharacterMetrics_Muz, 248, A.CharacterMetrics_ZwP, 305, A.CharacterMetrics_58p0, 338, A.CharacterMetrics_E2v20, 339, A.CharacterMetrics_58p12, 567, A.CharacterMetrics_7CM2, 710, A.CharacterMetrics_dQ14, 711, A.CharacterMetrics_xJj, 713, A.CharacterMetrics_eCx, 714, A.CharacterMetrics_dQ14, 715, A.CharacterMetrics_dQ14, 728, A.CharacterMetrics_dQ14, 729, A.CharacterMetrics_dQ12, 730, A.CharacterMetrics_dQ17, 732, A.CharacterMetrics_dQ14, 733, A.CharacterMetrics_dQ14, 915, A.CharacterMetrics_E2v10, 916, A.CharacterMetrics_E2v21, 920, A.CharacterMetrics_E2v22, 923, A.CharacterMetrics_E2v23, 926, A.CharacterMetrics_E2v24, 928, A.CharacterMetrics_E2v6, 931, A.CharacterMetrics_E2v1, 933, A.CharacterMetrics_E2v22, 934, A.CharacterMetrics_E2v1, 936, A.CharacterMetrics_E2v22, 937, A.CharacterMetrics_E2v1, 8211, A.CharacterMetrics_GZK, 8212, A.CharacterMetrics_GZK0, 8216, A.CharacterMetrics_dQ12, 8217, A.CharacterMetrics_dQ12, 8220, A.CharacterMetrics_dQ10, 8221, A.CharacterMetrics_dQ10, 8224, A.CharacterMetrics_f3e1, 8225, A.CharacterMetrics_f3e1, 8242, A.CharacterMetrics_XSW, 8407, A.CharacterMetrics_AVN, 8463, A.CharacterMetrics_dQ19, 8465, A.CharacterMetrics_dQ110, 8467, A.CharacterMetrics_dQ111, 8472, A.CharacterMetrics_7CM3, 8476, A.CharacterMetrics_dQ110, 8501, A.CharacterMetrics_dQ112, 8592, A.CharacterMetrics_qWW0, 8593, A.CharacterMetrics_f3e2, 8594, A.CharacterMetrics_qWW0, 8595, A.CharacterMetrics_f3e2, 8596, A.CharacterMetrics_qWW0, 8597, A.CharacterMetrics_Nd50, 8598, A.CharacterMetrics_f3e3, 8599, A.CharacterMetrics_f3e3, 8600, A.CharacterMetrics_f3e3, 8601, A.CharacterMetrics_f3e3, 8636, A.CharacterMetrics_qWW0, 8637, A.CharacterMetrics_qWW0, 8640, A.CharacterMetrics_qWW0, 8641, A.CharacterMetrics_qWW0, 8656, A.CharacterMetrics_qWW0, 8657, A.CharacterMetrics_f3e4, 8658, A.CharacterMetrics_qWW0, 8659, A.CharacterMetrics_f3e4, 8660, A.CharacterMetrics_qWW0, 8661, A.CharacterMetrics_Nd52, 8704, A.CharacterMetrics_dQ15, 8706, A.CharacterMetrics_O6g, 8707, A.CharacterMetrics_dQ15, 8709, A.CharacterMetrics_Z0j, 8711, A.CharacterMetrics_E2v21, 8712, A.CharacterMetrics_Vbo0, 8715, A.CharacterMetrics_Vbo0, 8722, A.CharacterMetrics_Muz, 8723, A.CharacterMetrics_Muz, 8725, A.CharacterMetrics_Nd50, 8726, A.CharacterMetrics_Nd50, 8727, A.CharacterMetrics_AoR, 8728, A.CharacterMetrics_kSb, 8729, A.CharacterMetrics_kSb, 8730, A.CharacterMetrics_eqU, 8733, A.CharacterMetrics_58p12, 8734, A.CharacterMetrics_58p13, 8736, A.CharacterMetrics_Ghm1, 8739, A.CharacterMetrics_Nd51, 8741, A.CharacterMetrics_Nd50, 8743, A.CharacterMetrics_XSW0, 8744, A.CharacterMetrics_XSW0, 8745, A.CharacterMetrics_XSW0, 8746, A.CharacterMetrics_XSW0, 8747, A.CharacterMetrics_eaJ, 8764, A.CharacterMetrics_qWW, 8768, A.CharacterMetrics_f3e5, 8771, A.CharacterMetrics_s1L, 8776, A.CharacterMetrics_HLa, 8781, A.CharacterMetrics_s1L, 8801, A.CharacterMetrics_s1L, 8804, A.CharacterMetrics_v2R, 8805, A.CharacterMetrics_v2R, 8810, A.CharacterMetrics_Vbo1, 8811, A.CharacterMetrics_Vbo1, 8826, A.CharacterMetrics_Vbo, 8827, A.CharacterMetrics_Vbo, 8834, A.CharacterMetrics_Vbo, 8835, A.CharacterMetrics_Vbo, 8838, A.CharacterMetrics_v2R, 8839, A.CharacterMetrics_v2R, 8846, A.CharacterMetrics_XSW0, 8849, A.CharacterMetrics_v2R, 8850, A.CharacterMetrics_v2R, 8851, A.CharacterMetrics_XSW0, 8852, A.CharacterMetrics_XSW0, 8853, A.CharacterMetrics_Muz, 8854, A.CharacterMetrics_Muz, 8855, A.CharacterMetrics_Muz, 8856, A.CharacterMetrics_Muz, 8857, A.CharacterMetrics_Muz, 8866, A.CharacterMetrics_dQ112, 8867, A.CharacterMetrics_dQ112, 8868, A.CharacterMetrics_dQ11, 8869, A.CharacterMetrics_dQ11, 8900, A.CharacterMetrics_kSb, 8901, A.CharacterMetrics_kSb0, 8902, A.CharacterMetrics_AoR, 8968, A.CharacterMetrics_Nd53, 8969, A.CharacterMetrics_Nd53, 8970, A.CharacterMetrics_Nd53, 8971, A.CharacterMetrics_Nd53, 8994, A.CharacterMetrics_GOV, 8995, A.CharacterMetrics_GOV, 9651, A.CharacterMetrics_f3e6, 9657, A.CharacterMetrics_AoR, 9661, A.CharacterMetrics_f3e6, 9667, A.CharacterMetrics_AoR, 9711, A.CharacterMetrics_f3e3, 9824, A.CharacterMetrics_gFq, 9825, A.CharacterMetrics_gFq, 9826, A.CharacterMetrics_gFq, 9827, A.CharacterMetrics_gFq, 9837, A.CharacterMetrics_Coa0, 9838, A.CharacterMetrics_f3e7, 9839, A.CharacterMetrics_f3e7, 10216, A.CharacterMetrics_Nd5, 10217, A.CharacterMetrics_Nd5, 10815, A.CharacterMetrics_E2v6, 10927, A.CharacterMetrics_v2R, 10928, A.CharacterMetrics_v2R, 57376, A.CharacterMetrics_f3e8], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_ZbT = new B.CharacterMetrics(0, 0.69444, 0.11417, 0);
    A.CharacterMetrics_wcb = new B.CharacterMetrics(0, 0.69444, 0.07939, 0);
    A.CharacterMetrics_UPS = new B.CharacterMetrics(0.19444, 0.69444, 0.06833, 0);
    A.CharacterMetrics_iX9 = new B.CharacterMetrics(0.05556, 0.75, 0.12861, 0);
    A.CharacterMetrics_aVf = new B.CharacterMetrics(0, 0.69444, 0.08528, 0);
    A.CharacterMetrics_sHr = new B.CharacterMetrics(0, 0.69444, 0.12945, 0);
    A.CharacterMetrics_fif = new B.CharacterMetrics(0.25, 0.75, 0.15806, 0);
    A.CharacterMetrics_xOk = new B.CharacterMetrics(0.25, 0.75, 0.03306, 0);
    A.CharacterMetrics_eeN = new B.CharacterMetrics(0, 0.75, 0.14333, 0);
    A.CharacterMetrics_3bN = new B.CharacterMetrics(0.10333, 0.60333, 0.03306, 0);
    A.CharacterMetrics_BPj = new B.CharacterMetrics(0.19444, 0.14722, 0, 0);
    A.CharacterMetrics_w9S = new B.CharacterMetrics(0, 0.44444, 0.02611, 0);
    A.CharacterMetrics_XQz = new B.CharacterMetrics(0, 0.14722, 0, 0);
    A.CharacterMetrics_fif0 = new B.CharacterMetrics(0.25, 0.75, 0.15806, 0);
    A.CharacterMetrics_qyx = new B.CharacterMetrics(0, 0.64444, 0.13167, 0);
    A.CharacterMetrics_Zyf = new B.CharacterMetrics(0.19444, 0.64444, 0.13167, 0);
    A.CharacterMetrics_GWY = new B.CharacterMetrics(0, 0.44444, 0.06695, 0);
    A.CharacterMetrics_PP4 = new B.CharacterMetrics(0.19444, 0.44444, 0.06695, 0);
    A.CharacterMetrics_yJG = new B.CharacterMetrics(-0.10889, 0.39111, 0.06833, 0);
    A.CharacterMetrics_kKC = new B.CharacterMetrics(0, 0.69444, 0.11472, 0);
    A.CharacterMetrics_vJ6 = new B.CharacterMetrics(0, 0.69444, 0.09208, 0);
    A.CharacterMetrics_E2v25 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_hj1 = new B.CharacterMetrics(0, 0.68611, 0.0992, 0);
    A.CharacterMetrics_BrH = new B.CharacterMetrics(0, 0.68611, 0.14208, 0);
    A.CharacterMetrics_7XV = new B.CharacterMetrics(0, 0.68611, 0.09062, 0);
    A.CharacterMetrics_0Kp = new B.CharacterMetrics(0, 0.68611, 0.11431, 0);
    A.CharacterMetrics_g8y = new B.CharacterMetrics(0, 0.68611, 0.12903, 0);
    A.CharacterMetrics_0cn = new B.CharacterMetrics(0, 0.68611, 0.07347, 0);
    A.CharacterMetrics_4sQ = new B.CharacterMetrics(0, 0.68611, 0.17208, 0);
    A.CharacterMetrics_9j0 = new B.CharacterMetrics(0, 0.68611, 0.15681, 0);
    A.CharacterMetrics_fT0 = new B.CharacterMetrics(0, 0.68611, 0.145, 0);
    A.CharacterMetrics_BrH0 = new B.CharacterMetrics(0, 0.68611, 0.14208, 0);
    A.CharacterMetrics_E2v26 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_4sQ0 = new B.CharacterMetrics(0, 0.68611, 0.17208, 0);
    A.CharacterMetrics_7XV0 = new B.CharacterMetrics(0, 0.68611, 0.09062, 0);
    A.CharacterMetrics_hj10 = new B.CharacterMetrics(0, 0.68611, 0.0992, 0);
    A.CharacterMetrics_UD5 = new B.CharacterMetrics(0.19444, 0.68611, 0.09062, 0);
    A.CharacterMetrics_N49 = new B.CharacterMetrics(0, 0.68611, 0.02559, 0);
    A.CharacterMetrics_o4u = new B.CharacterMetrics(0, 0.68611, 0.11264, 0);
    A.CharacterMetrics_g8y0 = new B.CharacterMetrics(0, 0.68611, 0.12903, 0);
    A.CharacterMetrics_4sQ1 = new B.CharacterMetrics(0, 0.68611, 0.17208, 0);
    A.CharacterMetrics_dee = new B.CharacterMetrics(0, 0.68611, 0.18625, 0);
    A.CharacterMetrics_dee0 = new B.CharacterMetrics(0, 0.68611, 0.18625, 0);
    A.CharacterMetrics_9j00 = new B.CharacterMetrics(0, 0.68611, 0.15681, 0);
    A.CharacterMetrics_pY1 = new B.CharacterMetrics(0, 0.68611, 0.19803, 0);
    A.CharacterMetrics_BrH1 = new B.CharacterMetrics(0, 0.68611, 0.14208, 0);
    A.CharacterMetrics_fTY = new B.CharacterMetrics(0.25, 0.75, 0.1875, 0);
    A.CharacterMetrics_uQP = new B.CharacterMetrics(0.25, 0.75, 0.09972, 0);
    A.CharacterMetrics_8jL = new B.CharacterMetrics(0, 0.69444, 0.06709, 0);
    A.CharacterMetrics_rOe = new B.CharacterMetrics(0.31, 0.13444, 0.09811, 0);
    A.CharacterMetrics_7VT = new B.CharacterMetrics(0, 0.44444, 0.09426, 0);
    A.CharacterMetrics_0Hf = new B.CharacterMetrics(0, 0.69444, 0.07861, 0);
    A.CharacterMetrics_wWt = new B.CharacterMetrics(0, 0.44444, 0.05222, 0);
    A.CharacterMetrics_GKV = new B.CharacterMetrics(0, 0.69444, 0.10861, 0);
    A.CharacterMetrics_qnA = new B.CharacterMetrics(0, 0.44444, 0.085, 0);
    A.CharacterMetrics_oni = new B.CharacterMetrics(0.19444, 0.69444, 0.21778, 0);
    A.CharacterMetrics_CYd = new B.CharacterMetrics(0.19444, 0.44444, 0.105, 0);
    A.CharacterMetrics_kB8 = new B.CharacterMetrics(0, 0.69444, 0.09426, 0);
    A.CharacterMetrics_omc = new B.CharacterMetrics(0, 0.69326, 0.11387, 0);
    A.CharacterMetrics_Nw9 = new B.CharacterMetrics(0.19444, 0.69326, 0.1672, 0);
    A.CharacterMetrics_Ar5 = new B.CharacterMetrics(0, 0.69444, 0.11111, 0);
    A.CharacterMetrics_GKV0 = new B.CharacterMetrics(0, 0.69444, 0.10861, 0);
    A.CharacterMetrics_7VT0 = new B.CharacterMetrics(0, 0.44444, 0.09426, 0);
    A.CharacterMetrics_7VT1 = new B.CharacterMetrics(0, 0.44444, 0.09426, 0);
    A.CharacterMetrics_PlW = new B.CharacterMetrics(0, 0.44444, 0.07861, 0);
    A.CharacterMetrics_koX = new B.CharacterMetrics(0.19444, 0.44444, 0.07861, 0);
    A.CharacterMetrics_EiO = new B.CharacterMetrics(0, 0.44444, 0.11111, 0);
    A.CharacterMetrics_KMJ = new B.CharacterMetrics(0, 0.44444, 0.08167, 0);
    A.CharacterMetrics_OOO = new B.CharacterMetrics(0, 0.63492, 0.09639, 0);
    A.CharacterMetrics_7VT2 = new B.CharacterMetrics(0, 0.44444, 0.09426, 0);
    A.CharacterMetrics_EiO0 = new B.CharacterMetrics(0, 0.44444, 0.11111, 0);
    A.CharacterMetrics_EiO1 = new B.CharacterMetrics(0, 0.44444, 0.11111, 0);
    A.CharacterMetrics_2MD = new B.CharacterMetrics(0, 0.44444, 0.12583, 0);
    A.CharacterMetrics_CYd0 = new B.CharacterMetrics(0.19444, 0.44444, 0.105, 0);
    A.CharacterMetrics_KYL = new B.CharacterMetrics(0, 0.44444, 0.13889, 0);
    A.CharacterMetrics_zz6 = new B.CharacterMetrics(0.35, 0.34444, 0.11472, 0);
    A.CharacterMetrics_dQ113 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_6Rw = new B.CharacterMetrics(0, 0.69444, 0.11473, 0);
    A.CharacterMetrics_dQ114 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_aiS0 = new B.CharacterMetrics(0.17014, 0, 0, 0);
    A.CharacterMetrics_0Kp0 = new B.CharacterMetrics(0, 0.68611, 0.11431, 0);
    A.CharacterMetrics_PmL = new B.CharacterMetrics(0.04861, 0.73472, 0.09062, 0);
    A.CharacterMetrics_SMo = new B.CharacterMetrics(0.19444, 0.69444, 0.09736, 0);
    A.CharacterMetrics_qnA0 = new B.CharacterMetrics(0, 0.44444, 0.085, 0);
    A.CharacterMetrics_knt = new B.CharacterMetrics(0.09722, 0.54167, 0.09458, 0);
    A.CharacterMetrics_7VT3 = new B.CharacterMetrics(0, 0.44444, 0.09426, 0);
    A.CharacterMetrics_0Kp1 = new B.CharacterMetrics(0, 0.68611, 0.11431, 0);
    A.CharacterMetrics_5jy = new B.CharacterMetrics(0.19444, 0.44444, 0.04611, 0);
    A.CharacterMetrics_LvZ = new B.CharacterMetrics(0, 0.63194, 0.08271, 0);
    A.CharacterMetrics_cMZ = new B.CharacterMetrics(0, 0.59444, 0.10444, 0);
    A.CharacterMetrics_aVf0 = new B.CharacterMetrics(0, 0.69444, 0.08528, 0);
    A.CharacterMetrics_dQ115 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_v1w = new B.CharacterMetrics(0, 0.69444, 0.10333, 0);
    A.CharacterMetrics_g8y1 = new B.CharacterMetrics(0, 0.68611, 0.12903, 0);
    A.CharacterMetrics_E2v27 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_7XV1 = new B.CharacterMetrics(0, 0.68611, 0.09062, 0);
    A.CharacterMetrics_E2v28 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_cZ6 = new B.CharacterMetrics(0, 0.68611, 0.15092, 0);
    A.CharacterMetrics_0Kp2 = new B.CharacterMetrics(0, 0.68611, 0.11431, 0);
    A.CharacterMetrics_HlX = new B.CharacterMetrics(0, 0.68611, 0.10778, 0);
    A.CharacterMetrics_WTm = new B.CharacterMetrics(0, 0.68611, 0.05632, 0);
    A.CharacterMetrics_hj11 = new B.CharacterMetrics(0, 0.68611, 0.0992, 0);
    A.CharacterMetrics_L5z = new B.CharacterMetrics(0, 0.44444, 0.09811, 0);
    A.CharacterMetrics_L5z0 = new B.CharacterMetrics(0, 0.44444, 0.09811, 0);
    A.CharacterMetrics_RS4 = new B.CharacterMetrics(0, 0.69444, 0.16772, 0);
    A.Map_F3AqH = new C.GeneralConstantMap([33, A.CharacterMetrics_ZbT, 34, A.CharacterMetrics_wcb, 35, A.CharacterMetrics_UPS, 37, A.CharacterMetrics_iX9, 38, A.CharacterMetrics_aVf, 39, A.CharacterMetrics_sHr, 40, A.CharacterMetrics_fif, 41, A.CharacterMetrics_xOk, 42, A.CharacterMetrics_eeN, 43, A.CharacterMetrics_3bN, 44, A.CharacterMetrics_BPj, 45, A.CharacterMetrics_w9S, 46, A.CharacterMetrics_XQz, 47, A.CharacterMetrics_fif0, 48, A.CharacterMetrics_qyx, 49, A.CharacterMetrics_qyx, 50, A.CharacterMetrics_qyx, 51, A.CharacterMetrics_qyx, 52, A.CharacterMetrics_Zyf, 53, A.CharacterMetrics_qyx, 54, A.CharacterMetrics_qyx, 55, A.CharacterMetrics_Zyf, 56, A.CharacterMetrics_qyx, 57, A.CharacterMetrics_qyx, 58, A.CharacterMetrics_GWY, 59, A.CharacterMetrics_PP4, 61, A.CharacterMetrics_yJG, 63, A.CharacterMetrics_kKC, 64, A.CharacterMetrics_vJ6, 65, A.CharacterMetrics_E2v25, 66, A.CharacterMetrics_hj1, 67, A.CharacterMetrics_BrH, 68, A.CharacterMetrics_7XV, 69, A.CharacterMetrics_0Kp, 70, A.CharacterMetrics_g8y, 71, A.CharacterMetrics_0cn, 72, A.CharacterMetrics_4sQ, 73, A.CharacterMetrics_9j0, 74, A.CharacterMetrics_fT0, 75, A.CharacterMetrics_BrH0, 76, A.CharacterMetrics_E2v26, 77, A.CharacterMetrics_4sQ0, 78, A.CharacterMetrics_4sQ, 79, A.CharacterMetrics_7XV0, 80, A.CharacterMetrics_hj10, 81, A.CharacterMetrics_UD5, 82, A.CharacterMetrics_N49, 83, A.CharacterMetrics_o4u, 84, A.CharacterMetrics_g8y0, 85, A.CharacterMetrics_4sQ1, 86, A.CharacterMetrics_dee, 87, A.CharacterMetrics_dee0, 88, A.CharacterMetrics_9j00, 89, A.CharacterMetrics_pY1, 90, A.CharacterMetrics_BrH1, 91, A.CharacterMetrics_fTY, 93, A.CharacterMetrics_uQP, 94, A.CharacterMetrics_8jL, 95, A.CharacterMetrics_rOe, 97, A.CharacterMetrics_7VT, 98, A.CharacterMetrics_0Hf, 99, A.CharacterMetrics_wWt, 100, A.CharacterMetrics_GKV, 101, A.CharacterMetrics_qnA, 102, A.CharacterMetrics_oni, 103, A.CharacterMetrics_CYd, 104, A.CharacterMetrics_kB8, 105, A.CharacterMetrics_omc, 106, A.CharacterMetrics_Nw9, 107, A.CharacterMetrics_Ar5, 108, A.CharacterMetrics_GKV0, 109, A.CharacterMetrics_7VT0, 110, A.CharacterMetrics_7VT1, 111, A.CharacterMetrics_PlW, 112, A.CharacterMetrics_koX, 113, A.CharacterMetrics_CYd, 114, A.CharacterMetrics_EiO, 115, A.CharacterMetrics_KMJ, 116, A.CharacterMetrics_OOO, 117, A.CharacterMetrics_7VT2, 118, A.CharacterMetrics_EiO0, 119, A.CharacterMetrics_EiO1, 120, A.CharacterMetrics_2MD, 121, A.CharacterMetrics_CYd0, 122, A.CharacterMetrics_KYL, 126, A.CharacterMetrics_zz6, 163, A.CharacterMetrics_dQ113, 168, A.CharacterMetrics_6Rw, 176, A.CharacterMetrics_dQ114, 184, A.CharacterMetrics_aiS0, 198, A.CharacterMetrics_0Kp0, 216, A.CharacterMetrics_PmL, 223, A.CharacterMetrics_SMo, 230, A.CharacterMetrics_qnA0, 248, A.CharacterMetrics_knt, 305, A.CharacterMetrics_7VT3, 338, A.CharacterMetrics_0Kp1, 339, A.CharacterMetrics_qnA0, 567, A.CharacterMetrics_5jy, 710, A.CharacterMetrics_8jL, 711, A.CharacterMetrics_LvZ, 713, A.CharacterMetrics_cMZ, 714, A.CharacterMetrics_aVf0, 715, A.CharacterMetrics_dQ115, 728, A.CharacterMetrics_v1w, 729, A.CharacterMetrics_sHr, 730, A.CharacterMetrics_dQ114, 732, A.CharacterMetrics_kKC, 733, A.CharacterMetrics_kKC, 915, A.CharacterMetrics_g8y1, 916, A.CharacterMetrics_E2v27, 920, A.CharacterMetrics_7XV1, 923, A.CharacterMetrics_E2v28, 926, A.CharacterMetrics_cZ6, 928, A.CharacterMetrics_4sQ, 931, A.CharacterMetrics_0Kp2, 933, A.CharacterMetrics_HlX, 934, A.CharacterMetrics_WTm, 936, A.CharacterMetrics_HlX, 937, A.CharacterMetrics_hj11, 8211, A.CharacterMetrics_L5z, 8212, A.CharacterMetrics_L5z0, 8216, A.CharacterMetrics_sHr, 8217, A.CharacterMetrics_sHr, 8220, A.CharacterMetrics_RS4, 8221, A.CharacterMetrics_wcb], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_sJC = new B.CharacterMetrics(0, 0.69444, 0.12417, 0);
    A.CharacterMetrics_vLI = new B.CharacterMetrics(0, 0.69444, 0.06961, 0);
    A.CharacterMetrics_ipO = new B.CharacterMetrics(0.19444, 0.69444, 0.06616, 0);
    A.CharacterMetrics_JG2 = new B.CharacterMetrics(0.05556, 0.75, 0.13639, 0);
    A.CharacterMetrics_EX0 = new B.CharacterMetrics(0, 0.69444, 0.09694, 0);
    A.CharacterMetrics_0UU = new B.CharacterMetrics(0.25, 0.75, 0.16194, 0);
    A.CharacterMetrics_buB = new B.CharacterMetrics(0.25, 0.75, 0.03694, 0);
    A.CharacterMetrics_ow5 = new B.CharacterMetrics(0, 0.75, 0.14917, 0);
    A.CharacterMetrics_wqG = new B.CharacterMetrics(0.05667, 0.56167, 0.03694, 0);
    A.CharacterMetrics_jg2 = new B.CharacterMetrics(0.19444, 0.10556, 0, 0);
    A.CharacterMetrics_zRf = new B.CharacterMetrics(0, 0.43056, 0.02826, 0);
    A.CharacterMetrics_d0j = new B.CharacterMetrics(0, 0.10556, 0, 0);
    A.CharacterMetrics_0UU0 = new B.CharacterMetrics(0.25, 0.75, 0.16194, 0);
    A.CharacterMetrics_bcu = new B.CharacterMetrics(0, 0.64444, 0.13556, 0);
    A.CharacterMetrics_ltv = new B.CharacterMetrics(0.19444, 0.64444, 0.13556, 0);
    A.CharacterMetrics_nCg = new B.CharacterMetrics(0, 0.43056, 0.0582, 0);
    A.CharacterMetrics_JPx = new B.CharacterMetrics(0.19444, 0.43056, 0.0582, 0);
    A.CharacterMetrics_mmY = new B.CharacterMetrics(-0.13313, 0.36687, 0.06616, 0);
    A.CharacterMetrics_1G6 = new B.CharacterMetrics(0, 0.69444, 0.1225, 0);
    A.CharacterMetrics_JUa = new B.CharacterMetrics(0, 0.69444, 0.09597, 0);
    A.CharacterMetrics_hyV = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_PEl = new B.CharacterMetrics(0, 0.68333, 0.10257, 0);
    A.CharacterMetrics_ChJ = new B.CharacterMetrics(0, 0.68333, 0.14528, 0);
    A.CharacterMetrics_LKf = new B.CharacterMetrics(0, 0.68333, 0.09403, 0);
    A.CharacterMetrics_ffx = new B.CharacterMetrics(0, 0.68333, 0.12028, 0);
    A.CharacterMetrics_TyU = new B.CharacterMetrics(0, 0.68333, 0.13305, 0);
    A.CharacterMetrics_GTM = new B.CharacterMetrics(0, 0.68333, 0.08722, 0);
    A.CharacterMetrics_Ypo = new B.CharacterMetrics(0, 0.68333, 0.16389, 0);
    A.CharacterMetrics_QDS = new B.CharacterMetrics(0, 0.68333, 0.15806, 0);
    A.CharacterMetrics_NDp = new B.CharacterMetrics(0, 0.68333, 0.14028, 0);
    A.CharacterMetrics_ChJ0 = new B.CharacterMetrics(0, 0.68333, 0.14528, 0);
    A.CharacterMetrics_hyV0 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_Ypo0 = new B.CharacterMetrics(0, 0.68333, 0.16389, 0);
    A.CharacterMetrics_LKf0 = new B.CharacterMetrics(0, 0.68333, 0.09403, 0);
    A.CharacterMetrics_PEl0 = new B.CharacterMetrics(0, 0.68333, 0.10257, 0);
    A.CharacterMetrics_o87 = new B.CharacterMetrics(0.19444, 0.68333, 0.09403, 0);
    A.CharacterMetrics_YkG = new B.CharacterMetrics(0, 0.68333, 0.03868, 0);
    A.CharacterMetrics_4qF = new B.CharacterMetrics(0, 0.68333, 0.11972, 0);
    A.CharacterMetrics_TyU0 = new B.CharacterMetrics(0, 0.68333, 0.13305, 0);
    A.CharacterMetrics_oiA = new B.CharacterMetrics(0, 0.68333, 0.18361, 0);
    A.CharacterMetrics_oiA0 = new B.CharacterMetrics(0, 0.68333, 0.18361, 0);
    A.CharacterMetrics_QDS0 = new B.CharacterMetrics(0, 0.68333, 0.15806, 0);
    A.CharacterMetrics_C0q = new B.CharacterMetrics(0, 0.68333, 0.19383, 0);
    A.CharacterMetrics_ChJ1 = new B.CharacterMetrics(0, 0.68333, 0.14528, 0);
    A.CharacterMetrics_fTY0 = new B.CharacterMetrics(0.25, 0.75, 0.1875, 0);
    A.CharacterMetrics_5kk = new B.CharacterMetrics(0.25, 0.75, 0.10528, 0);
    A.CharacterMetrics_39L = new B.CharacterMetrics(0, 0.69444, 0.06646, 0);
    A.CharacterMetrics_pyk = new B.CharacterMetrics(0.31, 0.12056, 0.09208, 0);
    A.CharacterMetrics_nMC = new B.CharacterMetrics(0, 0.43056, 0.07671, 0);
    A.CharacterMetrics_x2v = new B.CharacterMetrics(0, 0.69444, 0.06312, 0);
    A.CharacterMetrics_AY9 = new B.CharacterMetrics(0, 0.43056, 0.05653, 0);
    A.CharacterMetrics_v1w0 = new B.CharacterMetrics(0, 0.69444, 0.10333, 0);
    A.CharacterMetrics_99I = new B.CharacterMetrics(0, 0.43056, 0.07514, 0);
    A.CharacterMetrics_arA = new B.CharacterMetrics(0.19444, 0.69444, 0.21194, 0);
    A.CharacterMetrics_Vr4 = new B.CharacterMetrics(0.19444, 0.43056, 0.08847, 0);
    A.CharacterMetrics_fOG = new B.CharacterMetrics(0, 0.69444, 0.07671, 0);
    A.CharacterMetrics_v6d = new B.CharacterMetrics(0, 0.65536, 0.1019, 0);
    A.CharacterMetrics_7cu = new B.CharacterMetrics(0.19444, 0.65536, 0.14467, 0);
    A.CharacterMetrics_fgp = new B.CharacterMetrics(0, 0.69444, 0.10764, 0);
    A.CharacterMetrics_v1w1 = new B.CharacterMetrics(0, 0.69444, 0.10333, 0);
    A.CharacterMetrics_nMC0 = new B.CharacterMetrics(0, 0.43056, 0.07671, 0);
    A.CharacterMetrics_nMC1 = new B.CharacterMetrics(0, 0.43056, 0.07671, 0);
    A.CharacterMetrics_lId = new B.CharacterMetrics(0, 0.43056, 0.06312, 0);
    A.CharacterMetrics_ND5 = new B.CharacterMetrics(0.19444, 0.43056, 0.06312, 0);
    A.CharacterMetrics_IIb = new B.CharacterMetrics(0, 0.43056, 0.10764, 0);
    A.CharacterMetrics_GZU = new B.CharacterMetrics(0, 0.43056, 0.08208, 0);
    A.CharacterMetrics_p3m = new B.CharacterMetrics(0, 0.61508, 0.09486, 0);
    A.CharacterMetrics_nMC2 = new B.CharacterMetrics(0, 0.43056, 0.07671, 0);
    A.CharacterMetrics_IIb0 = new B.CharacterMetrics(0, 0.43056, 0.10764, 0);
    A.CharacterMetrics_IIb1 = new B.CharacterMetrics(0, 0.43056, 0.10764, 0);
    A.CharacterMetrics_YzZ = new B.CharacterMetrics(0, 0.43056, 0.12042, 0);
    A.CharacterMetrics_Vr40 = new B.CharacterMetrics(0.19444, 0.43056, 0.08847, 0);
    A.CharacterMetrics_48V = new B.CharacterMetrics(0, 0.43056, 0.12292, 0);
    A.CharacterMetrics_YIW = new B.CharacterMetrics(0.35, 0.31786, 0.11585, 0);
    A.CharacterMetrics_dQ116 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dvo = new B.CharacterMetrics(0, 0.66786, 0.10474, 0);
    A.CharacterMetrics_dQ117 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_aiS1 = new B.CharacterMetrics(0.17014, 0, 0, 0);
    A.CharacterMetrics_ffx0 = new B.CharacterMetrics(0, 0.68333, 0.12028, 0);
    A.CharacterMetrics_VHw = new B.CharacterMetrics(0.04861, 0.73194, 0.09403, 0);
    A.CharacterMetrics_Fwz = new B.CharacterMetrics(0.19444, 0.69444, 0.10514, 0);
    A.CharacterMetrics_99I0 = new B.CharacterMetrics(0, 0.43056, 0.07514, 0);
    A.CharacterMetrics_FYx = new B.CharacterMetrics(0.09722, 0.52778, 0.09194, 0);
    A.CharacterMetrics_dW8 = new B.CharacterMetrics(0, 0.43056, 0, 0.02778);
    A.CharacterMetrics_ffx1 = new B.CharacterMetrics(0, 0.68333, 0.12028, 0);
    A.CharacterMetrics_8fd = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    A.CharacterMetrics_En7 = new B.CharacterMetrics(0, 0.62847, 0.08295, 0);
    A.CharacterMetrics_7KH = new B.CharacterMetrics(0, 0.56167, 0.10333, 0);
    A.CharacterMetrics_EX00 = new B.CharacterMetrics(0, 0.69444, 0.09694, 0);
    A.CharacterMetrics_dQ118 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_H91 = new B.CharacterMetrics(0, 0.69444, 0.10806, 0);
    A.CharacterMetrics_QGj = new B.CharacterMetrics(0, 0.66786, 0.11752, 0);
    A.CharacterMetrics_hcQ = new B.CharacterMetrics(0, 0.66786, 0.11585, 0);
    A.CharacterMetrics_TyU1 = new B.CharacterMetrics(0, 0.68333, 0.13305, 0);
    A.CharacterMetrics_hyV1 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV2 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_5du = new B.CharacterMetrics(0, 0.68333, 0.15294, 0);
    A.CharacterMetrics_ffx2 = new B.CharacterMetrics(0, 0.68333, 0.12028, 0);
    A.CharacterMetrics_0yo = new B.CharacterMetrics(0, 0.68333, 0.11111, 0);
    A.CharacterMetrics_A8P = new B.CharacterMetrics(0, 0.68333, 0.05986, 0);
    A.CharacterMetrics_PEl1 = new B.CharacterMetrics(0, 0.68333, 0.10257, 0);
    A.CharacterMetrics_WBn = new B.CharacterMetrics(0, 0.43056, 0.09208, 0);
    A.CharacterMetrics_WBn0 = new B.CharacterMetrics(0, 0.43056, 0.09208, 0);
    A.CharacterMetrics_ced = new B.CharacterMetrics(0, 0.69444, 0.1685, 0);
    A.Map_YJCUq = new C.GeneralConstantMap([33, A.CharacterMetrics_sJC, 34, A.CharacterMetrics_vLI, 35, A.CharacterMetrics_ipO, 37, A.CharacterMetrics_JG2, 38, A.CharacterMetrics_EX0, 39, A.CharacterMetrics_sJC, 40, A.CharacterMetrics_0UU, 41, A.CharacterMetrics_buB, 42, A.CharacterMetrics_ow5, 43, A.CharacterMetrics_wqG, 44, A.CharacterMetrics_jg2, 45, A.CharacterMetrics_zRf, 46, A.CharacterMetrics_d0j, 47, A.CharacterMetrics_0UU0, 48, A.CharacterMetrics_bcu, 49, A.CharacterMetrics_bcu, 50, A.CharacterMetrics_bcu, 51, A.CharacterMetrics_bcu, 52, A.CharacterMetrics_ltv, 53, A.CharacterMetrics_bcu, 54, A.CharacterMetrics_bcu, 55, A.CharacterMetrics_ltv, 56, A.CharacterMetrics_bcu, 57, A.CharacterMetrics_bcu, 58, A.CharacterMetrics_nCg, 59, A.CharacterMetrics_JPx, 61, A.CharacterMetrics_mmY, 63, A.CharacterMetrics_1G6, 64, A.CharacterMetrics_JUa, 65, A.CharacterMetrics_hyV, 66, A.CharacterMetrics_PEl, 67, A.CharacterMetrics_ChJ, 68, A.CharacterMetrics_LKf, 69, A.CharacterMetrics_ffx, 70, A.CharacterMetrics_TyU, 71, A.CharacterMetrics_GTM, 72, A.CharacterMetrics_Ypo, 73, A.CharacterMetrics_QDS, 74, A.CharacterMetrics_NDp, 75, A.CharacterMetrics_ChJ0, 76, A.CharacterMetrics_hyV0, 77, A.CharacterMetrics_Ypo0, 78, A.CharacterMetrics_Ypo, 79, A.CharacterMetrics_LKf0, 80, A.CharacterMetrics_PEl0, 81, A.CharacterMetrics_o87, 82, A.CharacterMetrics_YkG, 83, A.CharacterMetrics_4qF, 84, A.CharacterMetrics_TyU0, 85, A.CharacterMetrics_Ypo, 86, A.CharacterMetrics_oiA, 87, A.CharacterMetrics_oiA0, 88, A.CharacterMetrics_QDS0, 89, A.CharacterMetrics_C0q, 90, A.CharacterMetrics_ChJ1, 91, A.CharacterMetrics_fTY0, 93, A.CharacterMetrics_5kk, 94, A.CharacterMetrics_39L, 95, A.CharacterMetrics_pyk, 97, A.CharacterMetrics_nMC, 98, A.CharacterMetrics_x2v, 99, A.CharacterMetrics_AY9, 100, A.CharacterMetrics_v1w0, 101, A.CharacterMetrics_99I, 102, A.CharacterMetrics_arA, 103, A.CharacterMetrics_Vr4, 104, A.CharacterMetrics_fOG, 105, A.CharacterMetrics_v6d, 106, A.CharacterMetrics_7cu, 107, A.CharacterMetrics_fgp, 108, A.CharacterMetrics_v1w1, 109, A.CharacterMetrics_nMC0, 110, A.CharacterMetrics_nMC1, 111, A.CharacterMetrics_lId, 112, A.CharacterMetrics_ND5, 113, A.CharacterMetrics_Vr4, 114, A.CharacterMetrics_IIb, 115, A.CharacterMetrics_GZU, 116, A.CharacterMetrics_p3m, 117, A.CharacterMetrics_nMC2, 118, A.CharacterMetrics_IIb0, 119, A.CharacterMetrics_IIb1, 120, A.CharacterMetrics_YzZ, 121, A.CharacterMetrics_Vr40, 122, A.CharacterMetrics_48V, 126, A.CharacterMetrics_YIW, 163, A.CharacterMetrics_dQ116, 168, A.CharacterMetrics_dvo, 176, A.CharacterMetrics_dQ117, 184, A.CharacterMetrics_aiS1, 198, A.CharacterMetrics_ffx0, 216, A.CharacterMetrics_VHw, 223, A.CharacterMetrics_Fwz, 230, A.CharacterMetrics_99I0, 248, A.CharacterMetrics_FYx, 305, A.CharacterMetrics_dW8, 338, A.CharacterMetrics_ffx1, 339, A.CharacterMetrics_99I0, 567, A.CharacterMetrics_8fd, 710, A.CharacterMetrics_39L, 711, A.CharacterMetrics_En7, 713, A.CharacterMetrics_7KH, 714, A.CharacterMetrics_EX00, 715, A.CharacterMetrics_dQ118, 728, A.CharacterMetrics_H91, 729, A.CharacterMetrics_QGj, 730, A.CharacterMetrics_dQ117, 732, A.CharacterMetrics_hcQ, 733, A.CharacterMetrics_1G6, 915, A.CharacterMetrics_TyU1, 916, A.CharacterMetrics_hyV1, 920, A.CharacterMetrics_LKf0, 923, A.CharacterMetrics_hyV2, 926, A.CharacterMetrics_5du, 928, A.CharacterMetrics_Ypo, 931, A.CharacterMetrics_ffx2, 933, A.CharacterMetrics_0yo, 934, A.CharacterMetrics_A8P, 936, A.CharacterMetrics_0yo, 937, A.CharacterMetrics_PEl1, 8211, A.CharacterMetrics_WBn, 8212, A.CharacterMetrics_WBn0, 8216, A.CharacterMetrics_sJC, 8217, A.CharacterMetrics_sJC, 8220, A.CharacterMetrics_ced, 8221, A.CharacterMetrics_vLI, 8463, A.CharacterMetrics_z2l7], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_0_0_0_00 = new B.CharacterMetrics(0, 0, 0, 0);
    A.CharacterMetrics_dQ119 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ120 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e9 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_Z0j1 = new B.CharacterMetrics(0.05556, 0.75, 0, 0);
    A.CharacterMetrics_Z0j2 = new B.CharacterMetrics(0.05556, 0.75, 0, 0);
    A.CharacterMetrics_dQ121 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Nd54 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_Coa1 = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_FTd = new B.CharacterMetrics(0.08333, 0.58333, 0, 0);
    A.CharacterMetrics_jg20 = new B.CharacterMetrics(0.19444, 0.10556, 0, 0);
    A.CharacterMetrics_Nyz2 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_d0j0 = new B.CharacterMetrics(0, 0.10556, 0, 0);
    A.CharacterMetrics_Nd55 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_Nyz3 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Lx91 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0);
    A.CharacterMetrics_dQ122 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_hyV3 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV4 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV5 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV6 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV7 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV8 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV9 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV10 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV11 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV12 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV13 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV14 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_ODm = new B.CharacterMetrics(0.19444, 0.68333, 0, 0);
    A.CharacterMetrics_hyV15 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV16 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_gbw = new B.CharacterMetrics(0, 0.68333, 0.01389, 0);
    A.CharacterMetrics_gbw0 = new B.CharacterMetrics(0, 0.68333, 0.01389, 0);
    A.CharacterMetrics_xPj = new B.CharacterMetrics(0, 0.68333, 0.025, 0);
    A.CharacterMetrics_hyV17 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_Nd56 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_inu = new B.CharacterMetrics(0.31, 0.12056, 0.02778, 0);
    A.CharacterMetrics_dQ123 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Nyz4 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_wMf = new B.CharacterMetrics(0, 0.69444, 0.07778, 0);
    A.CharacterMetrics_6OA = new B.CharacterMetrics(0.19444, 0.43056, 0.01389, 0);
    A.CharacterMetrics_x19 = new B.CharacterMetrics(0, 0.66786, 0, 0);
    A.CharacterMetrics_5T9 = new B.CharacterMetrics(0.19444, 0.66786, 0, 0);
    A.CharacterMetrics_dQ124 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Nyz5 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Nyz6 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Lx92 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0);
    A.CharacterMetrics_Nyz7 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Nyz8 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_V3h = new B.CharacterMetrics(0, 0.61508, 0, 0);
    A.CharacterMetrics_gMb = new B.CharacterMetrics(0, 0.43056, 0.01389, 0);
    A.CharacterMetrics_gMb0 = new B.CharacterMetrics(0, 0.43056, 0.01389, 0);
    A.CharacterMetrics_Nyz9 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_6OA0 = new B.CharacterMetrics(0.19444, 0.43056, 0.01389, 0);
    A.CharacterMetrics_iDo = new B.CharacterMetrics(0.35, 0.31786, 0, 0);
    A.CharacterMetrics_f3e10 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_x190 = new B.CharacterMetrics(0, 0.66786, 0, 0);
    A.CharacterMetrics_Nyz10 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_dQ125 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e11 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_aiS2 = new B.CharacterMetrics(0.17014, 0, 0, 0);
    A.CharacterMetrics_hyV18 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_YII = new B.CharacterMetrics(0.04861, 0.73194, 0, 0);
    A.CharacterMetrics_Nyz11 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_KGB = new B.CharacterMetrics(0.09722, 0.52778, 0, 0);
    A.CharacterMetrics_hyV19 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_Nyz12 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Lx93 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0);
    A.CharacterMetrics_HGh = new B.CharacterMetrics(0, 0.62847, 0, 0);
    A.CharacterMetrics_tuA = new B.CharacterMetrics(0, 0.56778, 0, 0);
    A.CharacterMetrics_hyV20 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV21 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_hyV22 = new B.CharacterMetrics(0, 0.68333, 0, 0);
    A.CharacterMetrics_Uzk = new B.CharacterMetrics(0, 0.43056, 0.02778, 0);
    A.CharacterMetrics_Uzk0 = new B.CharacterMetrics(0, 0.43056, 0.02778, 0);
    A.CharacterMetrics_QyK = new B.CharacterMetrics(0, 0.12, 0, 0);
    A.CharacterMetrics_XSW1 = new B.CharacterMetrics(0, 0.55556, 0, 0);
    A.CharacterMetrics_N7H = new B.CharacterMetrics(0, 0.71444, 0.15382, 0);
    A.CharacterMetrics_dQ126 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_yb1 = new B.CharacterMetrics(0, 0.69444, 0, 0.11111);
    A.CharacterMetrics_3Rq = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.11111);
    A.CharacterMetrics_dQ127 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e12 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_f3e13 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_hWn = new B.CharacterMetrics(0.011, 0.511, 0, 0);
    A.CharacterMetrics_hWn0 = new B.CharacterMetrics(0.011, 0.511, 0, 0);
    A.CharacterMetrics_5wZ = new B.CharacterMetrics(0.011, 0.671, 0, 0);
    A.CharacterMetrics_Nd57 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_X7i = new B.CharacterMetrics(0, 0.69444, 0.05556, 0.08334);
    A.CharacterMetrics_res0 = new B.CharacterMetrics(0.0391, 0.5391, 0, 0);
    A.CharacterMetrics_o2x = new B.CharacterMetrics(-0.03472, 0.46528, 0, 0);
    A.CharacterMetrics_d0a = new B.CharacterMetrics(-0.05555, 0.44445, 0, 0);
    A.CharacterMetrics_KeD = new B.CharacterMetrics(0.2, 0.8, 0, 0);
    A.CharacterMetrics_XSW2 = new B.CharacterMetrics(0, 0.55556, 0, 0);
    A.CharacterMetrics_zBw = new B.CharacterMetrics(0.19444, 0.69444, 0.11111, 0);
    A.CharacterMetrics_f3e14 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_6sJ = new B.CharacterMetrics(-0.022, 0.589, 0, 0);
    A.CharacterMetrics_dbd = new B.CharacterMetrics(-0.133, 0.67, 0, 0);
    A.CharacterMetrics_res1 = new B.CharacterMetrics(0.0391, 0.5391, 0, 0);
    A.CharacterMetrics_E5E = new B.CharacterMetrics(0.249, 0.75, 0, 0);
    A.CharacterMetrics_d0a0 = new B.CharacterMetrics(-0.05555, 0.44445, 0, 0);
    A.CharacterMetrics_k0X = new B.CharacterMetrics(0.005, 0.505, 0, 0);
    A.CharacterMetrics_g9G = new B.CharacterMetrics(0.03, 0.9, 0, 0);
    A.CharacterMetrics_KEn = new B.CharacterMetrics(-0.19, 0.31, 0, 0);
    A.CharacterMetrics_3RB = new B.CharacterMetrics(-0.1, 0.82, 0, 0);
    A.CharacterMetrics_Nd58 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_lo8 = new B.CharacterMetrics(-0.14236, 0.35764, 0, 0);
    A.CharacterMetrics_isx = new B.CharacterMetrics(0.244, 0.744, 0, 0);
    A.CharacterMetrics_f3e15 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_gFq0 = new B.CharacterMetrics(0.12963, 0.69444, 0, 0);
    A.CharacterMetrics_Coa2 = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_f3e16 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_hWn1 = new B.CharacterMetrics(0.011, 0.511, 0, 0);
    A.CharacterMetrics_hWn2 = new B.CharacterMetrics(0.011, 0.511, 0, 0);
    A.CharacterMetrics_hWn3 = new B.CharacterMetrics(0.011, 0.511, 0, 0);
    A.CharacterMetrics_gJi = new B.CharacterMetrics(0.024, 0.525, 0, 0);
    A.CharacterMetrics_gJi0 = new B.CharacterMetrics(0.024, 0.525, 0, 0);
    A.CharacterMetrics_gJi1 = new B.CharacterMetrics(0.024, 0.525, 0, 0);
    A.Map_SJfYb = new C.GeneralConstantMap([32, A.CharacterMetrics_0_0_0_00, 33, A.CharacterMetrics_dQ119, 34, A.CharacterMetrics_dQ120, 35, A.CharacterMetrics_f3e9, 36, A.CharacterMetrics_Z0j1, 37, A.CharacterMetrics_Z0j2, 38, A.CharacterMetrics_dQ121, 39, A.CharacterMetrics_dQ119, 40, A.CharacterMetrics_Nd54, 41, A.CharacterMetrics_Nd54, 42, A.CharacterMetrics_Coa1, 43, A.CharacterMetrics_FTd, 44, A.CharacterMetrics_jg20, 45, A.CharacterMetrics_Nyz2, 46, A.CharacterMetrics_d0j0, 47, A.CharacterMetrics_Nd55, 48, A.CharacterMetrics_CBT, 49, A.CharacterMetrics_CBT, 50, A.CharacterMetrics_CBT, 51, A.CharacterMetrics_CBT, 52, A.CharacterMetrics_CBT, 53, A.CharacterMetrics_CBT, 54, A.CharacterMetrics_CBT, 55, A.CharacterMetrics_CBT, 56, A.CharacterMetrics_CBT, 57, A.CharacterMetrics_CBT, 58, A.CharacterMetrics_Nyz3, 59, A.CharacterMetrics_Lx91, 60, A.CharacterMetrics_res, 61, A.CharacterMetrics_Xd10, 62, A.CharacterMetrics_res, 63, A.CharacterMetrics_dQ122, 64, A.CharacterMetrics_dQ121, 65, A.CharacterMetrics_hyV3, 66, A.CharacterMetrics_hyV4, 67, A.CharacterMetrics_hyV5, 68, A.CharacterMetrics_hyV6, 69, A.CharacterMetrics_hyV7, 70, A.CharacterMetrics_hyV8, 71, A.CharacterMetrics_hyV9, 72, A.CharacterMetrics_hyV3, 73, A.CharacterMetrics_hyV10, 74, A.CharacterMetrics_hyV11, 75, A.CharacterMetrics_hyV12, 76, A.CharacterMetrics_hyV13, 77, A.CharacterMetrics_hyV14, 78, A.CharacterMetrics_hyV3, 79, A.CharacterMetrics_hyV12, 80, A.CharacterMetrics_hyV7, 81, A.CharacterMetrics_ODm, 82, A.CharacterMetrics_hyV15, 83, A.CharacterMetrics_hyV16, 84, A.CharacterMetrics_hyV5, 85, A.CharacterMetrics_hyV3, 86, A.CharacterMetrics_gbw, 87, A.CharacterMetrics_gbw0, 88, A.CharacterMetrics_hyV3, 89, A.CharacterMetrics_xPj, 90, A.CharacterMetrics_hyV17, 91, A.CharacterMetrics_Nd56, 92, A.CharacterMetrics_Nd55, 93, A.CharacterMetrics_Nd56, 94, A.CharacterMetrics_dQ120, 95, A.CharacterMetrics_inu, 97, A.CharacterMetrics_Nyz1, 98, A.CharacterMetrics_dQ123, 99, A.CharacterMetrics_Nyz4, 100, A.CharacterMetrics_dQ123, 101, A.CharacterMetrics_Nyz4, 102, A.CharacterMetrics_wMf, 103, A.CharacterMetrics_6OA, 104, A.CharacterMetrics_dQ123, 105, A.CharacterMetrics_x19, 106, A.CharacterMetrics_5T9, 107, A.CharacterMetrics_dQ124, 108, A.CharacterMetrics_dQ119, 109, A.CharacterMetrics_Nyz5, 110, A.CharacterMetrics_Nyz6, 111, A.CharacterMetrics_Nyz1, 112, A.CharacterMetrics_Lx9, 113, A.CharacterMetrics_Lx92, 114, A.CharacterMetrics_Nyz7, 115, A.CharacterMetrics_Nyz8, 116, A.CharacterMetrics_V3h, 117, A.CharacterMetrics_Nyz6, 118, A.CharacterMetrics_gMb, 119, A.CharacterMetrics_gMb0, 120, A.CharacterMetrics_Nyz9, 121, A.CharacterMetrics_6OA0, 122, A.CharacterMetrics_Nyz4, 123, A.CharacterMetrics_Nd55, 124, A.CharacterMetrics_Nd56, 125, A.CharacterMetrics_Nd55, 126, A.CharacterMetrics_iDo, 160, A.CharacterMetrics_0_0_0_00, 167, A.CharacterMetrics_f3e10, 168, A.CharacterMetrics_x190, 172, A.CharacterMetrics_Nyz10, 176, A.CharacterMetrics_dQ125, 177, A.CharacterMetrics_FTd, 182, A.CharacterMetrics_f3e11, 184, A.CharacterMetrics_aiS2, 198, A.CharacterMetrics_hyV18, 215, A.CharacterMetrics_FTd, 216, A.CharacterMetrics_YII, 223, A.CharacterMetrics_dQ120, 230, A.CharacterMetrics_Nyz11, 247, A.CharacterMetrics_FTd, 248, A.CharacterMetrics_KGB, 305, A.CharacterMetrics_Nyz3, 338, A.CharacterMetrics_hyV19, 339, A.CharacterMetrics_Nyz12, 567, A.CharacterMetrics_Lx93, 710, A.CharacterMetrics_dQ120, 711, A.CharacterMetrics_HGh, 713, A.CharacterMetrics_tuA, 714, A.CharacterMetrics_dQ120, 715, A.CharacterMetrics_dQ120, 728, A.CharacterMetrics_dQ120, 729, A.CharacterMetrics_x19, 730, A.CharacterMetrics_dQ125, 732, A.CharacterMetrics_x190, 733, A.CharacterMetrics_dQ120, 915, A.CharacterMetrics_hyV13, 916, A.CharacterMetrics_hyV20, 920, A.CharacterMetrics_hyV12, 923, A.CharacterMetrics_hyV21, 926, A.CharacterMetrics_hyV22, 928, A.CharacterMetrics_hyV3, 931, A.CharacterMetrics_hyV5, 933, A.CharacterMetrics_hyV12, 934, A.CharacterMetrics_hyV5, 936, A.CharacterMetrics_hyV12, 937, A.CharacterMetrics_hyV5, 8211, A.CharacterMetrics_Uzk, 8212, A.CharacterMetrics_Uzk0, 8216, A.CharacterMetrics_dQ119, 8217, A.CharacterMetrics_dQ119, 8220, A.CharacterMetrics_dQ120, 8221, A.CharacterMetrics_dQ120, 8224, A.CharacterMetrics_f3e10, 8225, A.CharacterMetrics_f3e10, 8230, A.CharacterMetrics_QyK, 8242, A.CharacterMetrics_XSW1, 8407, A.CharacterMetrics_N7H, 8463, A.CharacterMetrics_z2l7, 8465, A.CharacterMetrics_dQ126, 8467, A.CharacterMetrics_yb1, 8472, A.CharacterMetrics_3Rq, 8476, A.CharacterMetrics_dQ126, 8501, A.CharacterMetrics_dQ127, 8592, A.CharacterMetrics_Xd1, 8593, A.CharacterMetrics_f3e12, 8594, A.CharacterMetrics_Xd1, 8595, A.CharacterMetrics_f3e12, 8596, A.CharacterMetrics_Xd1, 8597, A.CharacterMetrics_Nd55, 8598, A.CharacterMetrics_f3e13, 8599, A.CharacterMetrics_f3e13, 8600, A.CharacterMetrics_f3e13, 8601, A.CharacterMetrics_f3e13, 8614, A.CharacterMetrics_hWn, 8617, A.CharacterMetrics_hWn0, 8618, A.CharacterMetrics_hWn0, 8636, A.CharacterMetrics_Xd1, 8637, A.CharacterMetrics_Xd1, 8640, A.CharacterMetrics_Xd1, 8641, A.CharacterMetrics_Xd1, 8652, A.CharacterMetrics_5wZ, 8656, A.CharacterMetrics_Xd1, 8657, A.CharacterMetrics_f3e11, 8658, A.CharacterMetrics_Xd1, 8659, A.CharacterMetrics_f3e11, 8660, A.CharacterMetrics_Xd1, 8661, A.CharacterMetrics_Nd57, 8704, A.CharacterMetrics_dQ123, 8706, A.CharacterMetrics_X7i, 8707, A.CharacterMetrics_dQ123, 8709, A.CharacterMetrics_Z0j1, 8711, A.CharacterMetrics_hyV20, 8712, A.CharacterMetrics_res0, 8715, A.CharacterMetrics_res0, 8722, A.CharacterMetrics_FTd, 8723, A.CharacterMetrics_FTd, 8725, A.CharacterMetrics_Nd55, 8726, A.CharacterMetrics_Nd55, 8727, A.CharacterMetrics_o2x, 8728, A.CharacterMetrics_d0a, 8729, A.CharacterMetrics_d0a, 8730, A.CharacterMetrics_KeD, 8733, A.CharacterMetrics_Nyz12, 8734, A.CharacterMetrics_Nyz, 8736, A.CharacterMetrics_Ghm1, 8739, A.CharacterMetrics_Nd56, 8741, A.CharacterMetrics_Nd55, 8743, A.CharacterMetrics_XSW2, 8744, A.CharacterMetrics_XSW2, 8745, A.CharacterMetrics_XSW2, 8746, A.CharacterMetrics_XSW2, 8747, A.CharacterMetrics_zBw, 8764, A.CharacterMetrics_Xd10, 8768, A.CharacterMetrics_f3e14, 8771, A.CharacterMetrics_2K8, 8773, A.CharacterMetrics_6sJ, 8776, A.CharacterMetrics_Y6k, 8781, A.CharacterMetrics_2K8, 8784, A.CharacterMetrics_dbd, 8801, A.CharacterMetrics_2K8, 8804, A.CharacterMetrics_lOx, 8805, A.CharacterMetrics_lOx, 8810, A.CharacterMetrics_res1, 8811, A.CharacterMetrics_res1, 8826, A.CharacterMetrics_res, 8827, A.CharacterMetrics_res, 8834, A.CharacterMetrics_res, 8835, A.CharacterMetrics_res, 8838, A.CharacterMetrics_lOx, 8839, A.CharacterMetrics_lOx, 8846, A.CharacterMetrics_XSW2, 8849, A.CharacterMetrics_lOx, 8850, A.CharacterMetrics_lOx, 8851, A.CharacterMetrics_XSW2, 8852, A.CharacterMetrics_XSW2, 8853, A.CharacterMetrics_FTd, 8854, A.CharacterMetrics_FTd, 8855, A.CharacterMetrics_FTd, 8856, A.CharacterMetrics_FTd, 8857, A.CharacterMetrics_FTd, 8866, A.CharacterMetrics_dQ127, 8867, A.CharacterMetrics_dQ127, 8868, A.CharacterMetrics_dQ121, 8869, A.CharacterMetrics_dQ121, 8872, A.CharacterMetrics_E5E, 8900, A.CharacterMetrics_d0a, 8901, A.CharacterMetrics_d0a0, 8902, A.CharacterMetrics_o2x, 8904, A.CharacterMetrics_k0X, 8942, A.CharacterMetrics_g9G, 8943, A.CharacterMetrics_KEn, 8945, A.CharacterMetrics_3RB, 8968, A.CharacterMetrics_Nd58, 8969, A.CharacterMetrics_Nd58, 8970, A.CharacterMetrics_Nd58, 8971, A.CharacterMetrics_Nd58, 8994, A.CharacterMetrics_lo8, 8995, A.CharacterMetrics_lo8, 9136, A.CharacterMetrics_isx, 9137, A.CharacterMetrics_isx, 9651, A.CharacterMetrics_f3e15, 9657, A.CharacterMetrics_o2x, 9661, A.CharacterMetrics_f3e15, 9667, A.CharacterMetrics_o2x, 9711, A.CharacterMetrics_f3e13, 9824, A.CharacterMetrics_gFq0, 9825, A.CharacterMetrics_gFq0, 9826, A.CharacterMetrics_gFq0, 9827, A.CharacterMetrics_gFq0, 9837, A.CharacterMetrics_Coa2, 9838, A.CharacterMetrics_f3e16, 9839, A.CharacterMetrics_f3e16, 10216, A.CharacterMetrics_Nd54, 10217, A.CharacterMetrics_Nd54, 10222, A.CharacterMetrics_isx, 10223, A.CharacterMetrics_isx, 10229, A.CharacterMetrics_hWn1, 10230, A.CharacterMetrics_hWn2, 10231, A.CharacterMetrics_hWn3, 10232, A.CharacterMetrics_gJi, 10233, A.CharacterMetrics_gJi0, 10234, A.CharacterMetrics_gJi1, 10236, A.CharacterMetrics_hWn2, 10815, A.CharacterMetrics_hyV3, 10927, A.CharacterMetrics_lOx, 10928, A.CharacterMetrics_lOx, 57376, A.CharacterMetrics_f3e8], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_kYH = new B.CharacterMetrics(0, 0.68611, 0.04835, 0);
    A.CharacterMetrics_LEb = new B.CharacterMetrics(0, 0.68611, 0.06979, 0);
    A.CharacterMetrics_gi0 = new B.CharacterMetrics(0, 0.68611, 0.03194, 0);
    A.CharacterMetrics_ySc = new B.CharacterMetrics(0, 0.68611, 0.05451, 0);
    A.CharacterMetrics_raM = new B.CharacterMetrics(0, 0.68611, 0.15972, 0);
    A.CharacterMetrics_E2v29 = new B.CharacterMetrics(0, 0.68611, 0, 0);
    A.CharacterMetrics_PlO = new B.CharacterMetrics(0, 0.68611, 0.08229, 0);
    A.CharacterMetrics_h5g = new B.CharacterMetrics(0, 0.68611, 0.07778, 0);
    A.CharacterMetrics_Bhw = new B.CharacterMetrics(0, 0.68611, 0.10069, 0);
    A.CharacterMetrics_LEb0 = new B.CharacterMetrics(0, 0.68611, 0.06979, 0);
    A.CharacterMetrics_8RH = new B.CharacterMetrics(0, 0.68611, 0.11424, 0);
    A.CharacterMetrics_8RH0 = new B.CharacterMetrics(0, 0.68611, 0.11424, 0);
    A.CharacterMetrics_gi00 = new B.CharacterMetrics(0, 0.68611, 0.03194, 0);
    A.CharacterMetrics_raM0 = new B.CharacterMetrics(0, 0.68611, 0.15972, 0);
    A.CharacterMetrics_qSQ0 = new B.CharacterMetrics(0.19444, 0.68611, 0, 0);
    A.CharacterMetrics_XkC = new B.CharacterMetrics(0, 0.68611, 0.00421, 0);
    A.CharacterMetrics_bOz = new B.CharacterMetrics(0, 0.68611, 0.05382, 0);
    A.CharacterMetrics_raM1 = new B.CharacterMetrics(0, 0.68611, 0.15972, 0);
    A.CharacterMetrics_8RH1 = new B.CharacterMetrics(0, 0.68611, 0.11424, 0);
    A.CharacterMetrics_B7o = new B.CharacterMetrics(0, 0.68611, 0.25555, 0);
    A.CharacterMetrics_raM2 = new B.CharacterMetrics(0, 0.68611, 0.15972, 0);
    A.CharacterMetrics_h5g0 = new B.CharacterMetrics(0, 0.68611, 0.07778, 0);
    A.CharacterMetrics_B7o0 = new B.CharacterMetrics(0, 0.68611, 0.25555, 0);
    A.CharacterMetrics_LEb1 = new B.CharacterMetrics(0, 0.68611, 0.06979, 0);
    A.CharacterMetrics_58p14 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_dQ128 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p15 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_dQ129 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p16 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_Bzk = new B.CharacterMetrics(0.19444, 0.69444, 0.11042, 0);
    A.CharacterMetrics_epD = new B.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    A.CharacterMetrics_5I4 = new B.CharacterMetrics(0, 0.69326, 0, 0);
    A.CharacterMetrics_6Jw = new B.CharacterMetrics(0.19444, 0.69326, 0.0622, 0);
    A.CharacterMetrics_b04 = new B.CharacterMetrics(0, 0.69444, 0.01852, 0);
    A.CharacterMetrics_WqC = new B.CharacterMetrics(0, 0.69444, 0.0088, 0);
    A.CharacterMetrics_58p17 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p18 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p19 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_7CM4 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_epD0 = new B.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    A.CharacterMetrics_GZK1 = new B.CharacterMetrics(0, 0.44444, 0.03194, 0);
    A.CharacterMetrics_58p20 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_clc0 = new B.CharacterMetrics(0, 0.63492, 0, 0);
    A.CharacterMetrics_58p21 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_tgM = new B.CharacterMetrics(0, 0.44444, 0.03704, 0);
    A.CharacterMetrics_uOI = new B.CharacterMetrics(0, 0.44444, 0.02778, 0);
    A.CharacterMetrics_58p22 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_epD1 = new B.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    A.CharacterMetrics_rBv = new B.CharacterMetrics(0, 0.44444, 0.04213, 0);
    A.CharacterMetrics_raM3 = new B.CharacterMetrics(0, 0.68611, 0.15972, 0);
    A.CharacterMetrics_gi01 = new B.CharacterMetrics(0, 0.68611, 0.03194, 0);
    A.CharacterMetrics_Mwc = new B.CharacterMetrics(0, 0.68611, 0.07458, 0);
    A.CharacterMetrics_ySc0 = new B.CharacterMetrics(0, 0.68611, 0.05451, 0);
    A.CharacterMetrics_raM4 = new B.CharacterMetrics(0, 0.68611, 0.15972, 0);
    A.CharacterMetrics_zkO = new B.CharacterMetrics(0, 0.68611, 0.11653, 0);
    A.CharacterMetrics_kYH0 = new B.CharacterMetrics(0, 0.68611, 0.04835, 0);
    A.CharacterMetrics_58p23 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_xCg = new B.CharacterMetrics(0.19444, 0.69444, 0.03403, 0);
    A.CharacterMetrics_nXk = new B.CharacterMetrics(0.19444, 0.44444, 0.06389, 0);
    A.CharacterMetrics_R5N = new B.CharacterMetrics(0, 0.69444, 0.03819, 0);
    A.CharacterMetrics_58p24 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_lYl = new B.CharacterMetrics(0.19444, 0.69444, 0.06215, 0);
    A.CharacterMetrics_epD2 = new B.CharacterMetrics(0.19444, 0.44444, 0.03704, 0);
    A.CharacterMetrics_VrS = new B.CharacterMetrics(0, 0.69444, 0.03194, 0);
    A.CharacterMetrics_58p25 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p26 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_dQ130 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_7CM5 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_Op7 = new B.CharacterMetrics(0, 0.44444, 0.06898, 0);
    A.CharacterMetrics_RaU = new B.CharacterMetrics(0.19444, 0.69444, 0.03021, 0);
    A.CharacterMetrics_tgM0 = new B.CharacterMetrics(0, 0.44444, 0.03704, 0);
    A.CharacterMetrics_7CM6 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_Arv = new B.CharacterMetrics(0.09722, 0.44444, 0.07917, 0);
    A.CharacterMetrics_tgM1 = new B.CharacterMetrics(0, 0.44444, 0.03704, 0);
    A.CharacterMetrics_mQC = new B.CharacterMetrics(0, 0.44444, 0.13472, 0);
    A.CharacterMetrics_tgM2 = new B.CharacterMetrics(0, 0.44444, 0.03704, 0);
    A.CharacterMetrics_7CM7 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_7CM8 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_f9h = new B.CharacterMetrics(0.19444, 0.69444, 0.03704, 0);
    A.CharacterMetrics_tgM3 = new B.CharacterMetrics(0, 0.44444, 0.03704, 0);
    A.CharacterMetrics_dQ131 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e17 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_GZK2 = new B.CharacterMetrics(0, 0.44444, 0.03194, 0);
    A.CharacterMetrics_58p27 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.Map_c3uZN = new C.GeneralConstantMap([65, A.CharacterMetrics_E2v, 66, A.CharacterMetrics_kYH, 67, A.CharacterMetrics_LEb, 68, A.CharacterMetrics_gi0, 69, A.CharacterMetrics_ySc, 70, A.CharacterMetrics_raM, 71, A.CharacterMetrics_E2v29, 72, A.CharacterMetrics_PlO, 73, A.CharacterMetrics_h5g, 74, A.CharacterMetrics_Bhw, 75, A.CharacterMetrics_LEb0, 76, A.CharacterMetrics_E2v3, 77, A.CharacterMetrics_8RH, 78, A.CharacterMetrics_8RH0, 79, A.CharacterMetrics_gi00, 80, A.CharacterMetrics_raM0, 81, A.CharacterMetrics_qSQ0, 82, A.CharacterMetrics_XkC, 83, A.CharacterMetrics_bOz, 84, A.CharacterMetrics_raM1, 85, A.CharacterMetrics_8RH1, 86, A.CharacterMetrics_B7o, 87, A.CharacterMetrics_raM2, 88, A.CharacterMetrics_h5g0, 89, A.CharacterMetrics_B7o0, 90, A.CharacterMetrics_LEb1, 97, A.CharacterMetrics_58p14, 98, A.CharacterMetrics_dQ128, 99, A.CharacterMetrics_58p15, 100, A.CharacterMetrics_dQ129, 101, A.CharacterMetrics_58p16, 102, A.CharacterMetrics_Bzk, 103, A.CharacterMetrics_epD, 104, A.CharacterMetrics_dQ19, 105, A.CharacterMetrics_5I4, 106, A.CharacterMetrics_6Jw, 107, A.CharacterMetrics_b04, 108, A.CharacterMetrics_WqC, 109, A.CharacterMetrics_58p17, 110, A.CharacterMetrics_58p18, 111, A.CharacterMetrics_58p19, 112, A.CharacterMetrics_7CM4, 113, A.CharacterMetrics_epD0, 114, A.CharacterMetrics_GZK1, 115, A.CharacterMetrics_58p20, 116, A.CharacterMetrics_clc0, 117, A.CharacterMetrics_58p21, 118, A.CharacterMetrics_tgM, 119, A.CharacterMetrics_uOI, 120, A.CharacterMetrics_58p22, 121, A.CharacterMetrics_epD1, 122, A.CharacterMetrics_rBv, 915, A.CharacterMetrics_raM3, 916, A.CharacterMetrics_E2v21, 920, A.CharacterMetrics_gi01, 923, A.CharacterMetrics_E2v23, 926, A.CharacterMetrics_Mwc, 928, A.CharacterMetrics_PlO, 931, A.CharacterMetrics_ySc0, 933, A.CharacterMetrics_raM4, 934, A.CharacterMetrics_E2v24, 936, A.CharacterMetrics_zkO, 937, A.CharacterMetrics_kYH0, 945, A.CharacterMetrics_58p23, 946, A.CharacterMetrics_xCg, 947, A.CharacterMetrics_nXk, 948, A.CharacterMetrics_R5N, 949, A.CharacterMetrics_58p24, 950, A.CharacterMetrics_lYl, 951, A.CharacterMetrics_epD2, 952, A.CharacterMetrics_VrS, 953, A.CharacterMetrics_58p25, 954, A.CharacterMetrics_58p26, 955, A.CharacterMetrics_dQ130, 956, A.CharacterMetrics_7CM5, 957, A.CharacterMetrics_Op7, 958, A.CharacterMetrics_RaU, 959, A.CharacterMetrics_58p19, 960, A.CharacterMetrics_tgM0, 961, A.CharacterMetrics_7CM6, 962, A.CharacterMetrics_Arv, 963, A.CharacterMetrics_tgM1, 964, A.CharacterMetrics_mQC, 965, A.CharacterMetrics_tgM2, 966, A.CharacterMetrics_7CM7, 967, A.CharacterMetrics_7CM8, 968, A.CharacterMetrics_f9h, 969, A.CharacterMetrics_tgM3, 977, A.CharacterMetrics_dQ131, 981, A.CharacterMetrics_f3e17, 982, A.CharacterMetrics_GZK2, 1009, A.CharacterMetrics_7CM6, 1013, A.CharacterMetrics_58p27], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_gSc1 = new B.CharacterMetrics(0, 0.68333, 0, 0.13889);
    A.CharacterMetrics_KEx = new B.CharacterMetrics(0, 0.68333, 0.05017, 0.08334);
    A.CharacterMetrics_hgS = new B.CharacterMetrics(0, 0.68333, 0.07153, 0.08334);
    A.CharacterMetrics_ldd = new B.CharacterMetrics(0, 0.68333, 0.02778, 0.05556);
    A.CharacterMetrics_agG = new B.CharacterMetrics(0, 0.68333, 0.05764, 0.08334);
    A.CharacterMetrics_Rkc = new B.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    A.CharacterMetrics_vHQ0 = new B.CharacterMetrics(0, 0.68333, 0, 0.08334);
    A.CharacterMetrics_UwD = new B.CharacterMetrics(0, 0.68333, 0.08125, 0.05556);
    A.CharacterMetrics_ocY = new B.CharacterMetrics(0, 0.68333, 0.07847, 0.11111);
    A.CharacterMetrics_sTI = new B.CharacterMetrics(0, 0.68333, 0.09618, 0.16667);
    A.CharacterMetrics_EHD = new B.CharacterMetrics(0, 0.68333, 0.07153, 0.05556);
    A.CharacterMetrics_LDq = new B.CharacterMetrics(0, 0.68333, 0, 0.02778);
    A.CharacterMetrics_Twn = new B.CharacterMetrics(0, 0.68333, 0.10903, 0.08334);
    A.CharacterMetrics_Twn0 = new B.CharacterMetrics(0, 0.68333, 0.10903, 0.08334);
    A.CharacterMetrics_bRO0 = new B.CharacterMetrics(0, 0.68333, 0.02778, 0.08334);
    A.CharacterMetrics_Rkc0 = new B.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    A.CharacterMetrics_GrW = new B.CharacterMetrics(0.19444, 0.68333, 0, 0.08334);
    A.CharacterMetrics_mVq = new B.CharacterMetrics(0, 0.68333, 0.00773, 0.08334);
    A.CharacterMetrics_agG0 = new B.CharacterMetrics(0, 0.68333, 0.05764, 0.08334);
    A.CharacterMetrics_Rkc1 = new B.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    A.CharacterMetrics_ROQ = new B.CharacterMetrics(0, 0.68333, 0.10903, 0.02778);
    A.CharacterMetrics_OPe = new B.CharacterMetrics(0, 0.68333, 0.22222, 0);
    A.CharacterMetrics_bYm = new B.CharacterMetrics(0, 0.68333, 0.13889, 0);
    A.CharacterMetrics_Fmz = new B.CharacterMetrics(0, 0.68333, 0.07847, 0.08334);
    A.CharacterMetrics_OPe0 = new B.CharacterMetrics(0, 0.68333, 0.22222, 0);
    A.CharacterMetrics_hgS0 = new B.CharacterMetrics(0, 0.68333, 0.07153, 0.08334);
    A.CharacterMetrics_Nyz13 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_dQ132 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_IEr = new B.CharacterMetrics(0, 0.43056, 0, 0.05556);
    A.CharacterMetrics_kv5 = new B.CharacterMetrics(0, 0.69444, 0, 0.16667);
    A.CharacterMetrics_IEr0 = new B.CharacterMetrics(0, 0.43056, 0, 0.05556);
    A.CharacterMetrics_Cga = new B.CharacterMetrics(0.19444, 0.69444, 0.10764, 0.16667);
    A.CharacterMetrics_xrG = new B.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.02778);
    A.CharacterMetrics_dQ133 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_7xV = new B.CharacterMetrics(0, 0.65952, 0, 0);
    A.CharacterMetrics_0rA = new B.CharacterMetrics(0.19444, 0.65952, 0.05724, 0);
    A.CharacterMetrics_sBP = new B.CharacterMetrics(0, 0.69444, 0.03148, 0);
    A.CharacterMetrics_vS9 = new B.CharacterMetrics(0, 0.69444, 0.01968, 0.08334);
    A.CharacterMetrics_Nyz14 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_Nyz15 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_IEr1 = new B.CharacterMetrics(0, 0.43056, 0, 0.05556);
    A.CharacterMetrics_8fd0 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    A.CharacterMetrics_Chk = new B.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.08334);
    A.CharacterMetrics_c5Q = new B.CharacterMetrics(0, 0.43056, 0.02778, 0.05556);
    A.CharacterMetrics_IEr2 = new B.CharacterMetrics(0, 0.43056, 0, 0.05556);
    A.CharacterMetrics_ILJ = new B.CharacterMetrics(0, 0.61508, 0, 0.08334);
    A.CharacterMetrics_dW80 = new B.CharacterMetrics(0, 0.43056, 0, 0.02778);
    A.CharacterMetrics_jsp = new B.CharacterMetrics(0, 0.43056, 0.03588, 0.02778);
    A.CharacterMetrics_qJU = new B.CharacterMetrics(0, 0.43056, 0.02691, 0.08334);
    A.CharacterMetrics_dW81 = new B.CharacterMetrics(0, 0.43056, 0, 0.02778);
    A.CharacterMetrics_tT6 = new B.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.05556);
    A.CharacterMetrics_9ml = new B.CharacterMetrics(0, 0.43056, 0.04398, 0.05556);
    A.CharacterMetrics_Rkc2 = new B.CharacterMetrics(0, 0.68333, 0.13889, 0.08334);
    A.CharacterMetrics_s5i = new B.CharacterMetrics(0, 0.68333, 0, 0.16667);
    A.CharacterMetrics_s5i0 = new B.CharacterMetrics(0, 0.68333, 0, 0.16667);
    A.CharacterMetrics_Rbj = new B.CharacterMetrics(0, 0.68333, 0.07569, 0.08334);
    A.CharacterMetrics_agG1 = new B.CharacterMetrics(0, 0.68333, 0.05764, 0.08334);
    A.CharacterMetrics_bBn = new B.CharacterMetrics(0, 0.68333, 0.13889, 0.05556);
    A.CharacterMetrics_vHQ1 = new B.CharacterMetrics(0, 0.68333, 0, 0.08334);
    A.CharacterMetrics_tIe = new B.CharacterMetrics(0, 0.68333, 0.11, 0.05556);
    A.CharacterMetrics_KEx0 = new B.CharacterMetrics(0, 0.68333, 0.05017, 0.08334);
    A.CharacterMetrics_nn9 = new B.CharacterMetrics(0, 0.43056, 0.0037, 0.02778);
    A.CharacterMetrics_oBT = new B.CharacterMetrics(0.19444, 0.69444, 0.05278, 0.08334);
    A.CharacterMetrics_Wy8 = new B.CharacterMetrics(0.19444, 0.43056, 0.05556, 0);
    A.CharacterMetrics_gTe = new B.CharacterMetrics(0, 0.69444, 0.03785, 0.05556);
    A.CharacterMetrics_JrD = new B.CharacterMetrics(0, 0.43056, 0, 0.08334);
    A.CharacterMetrics_CHU = new B.CharacterMetrics(0.19444, 0.69444, 0.07378, 0.08334);
    A.CharacterMetrics_tT60 = new B.CharacterMetrics(0.19444, 0.43056, 0.03588, 0.05556);
    A.CharacterMetrics_BGN = new B.CharacterMetrics(0, 0.69444, 0.02778, 0.08334);
    A.CharacterMetrics_IEr3 = new B.CharacterMetrics(0, 0.43056, 0, 0.05556);
    A.CharacterMetrics_Nyz16 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_dQ134 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_IXX = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.02778);
    A.CharacterMetrics_d4y = new B.CharacterMetrics(0, 0.43056, 0.06366, 0.02778);
    A.CharacterMetrics_klI = new B.CharacterMetrics(0.19444, 0.69444, 0.04601, 0.11111);
    A.CharacterMetrics_4j6 = new B.CharacterMetrics(0, 0.43056, 0.03588, 0);
    A.CharacterMetrics_8fd1 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    A.CharacterMetrics_C5E = new B.CharacterMetrics(0.09722, 0.43056, 0.07986, 0.08334);
    A.CharacterMetrics_4j60 = new B.CharacterMetrics(0, 0.43056, 0.03588, 0);
    A.CharacterMetrics_Kwb = new B.CharacterMetrics(0, 0.43056, 0.1132, 0.02778);
    A.CharacterMetrics_jsp0 = new B.CharacterMetrics(0, 0.43056, 0.03588, 0.02778);
    A.CharacterMetrics_8fd2 = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.08334);
    A.CharacterMetrics_pNa = new B.CharacterMetrics(0.19444, 0.43056, 0, 0.05556);
    A.CharacterMetrics_9Rl = new B.CharacterMetrics(0.19444, 0.69444, 0.03588, 0.11111);
    A.CharacterMetrics_4j61 = new B.CharacterMetrics(0, 0.43056, 0.03588, 0);
    A.CharacterMetrics_mBt = new B.CharacterMetrics(0, 0.69444, 0, 0.08334);
    A.CharacterMetrics_0i7 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0.08334);
    A.CharacterMetrics_Uzk1 = new B.CharacterMetrics(0, 0.43056, 0.02778, 0);
    A.CharacterMetrics_IEr4 = new B.CharacterMetrics(0, 0.43056, 0, 0.05556);
    A.Map_c3GaC = new C.GeneralConstantMap([65, A.CharacterMetrics_gSc1, 66, A.CharacterMetrics_KEx, 67, A.CharacterMetrics_hgS, 68, A.CharacterMetrics_ldd, 69, A.CharacterMetrics_agG, 70, A.CharacterMetrics_Rkc, 71, A.CharacterMetrics_vHQ0, 72, A.CharacterMetrics_UwD, 73, A.CharacterMetrics_ocY, 74, A.CharacterMetrics_sTI, 75, A.CharacterMetrics_EHD, 76, A.CharacterMetrics_LDq, 77, A.CharacterMetrics_Twn, 78, A.CharacterMetrics_Twn0, 79, A.CharacterMetrics_bRO0, 80, A.CharacterMetrics_Rkc0, 81, A.CharacterMetrics_GrW, 82, A.CharacterMetrics_mVq, 83, A.CharacterMetrics_agG0, 84, A.CharacterMetrics_Rkc1, 85, A.CharacterMetrics_ROQ, 86, A.CharacterMetrics_OPe, 87, A.CharacterMetrics_bYm, 88, A.CharacterMetrics_Fmz, 89, A.CharacterMetrics_OPe0, 90, A.CharacterMetrics_hgS0, 97, A.CharacterMetrics_Nyz13, 98, A.CharacterMetrics_dQ132, 99, A.CharacterMetrics_IEr, 100, A.CharacterMetrics_kv5, 101, A.CharacterMetrics_IEr0, 102, A.CharacterMetrics_Cga, 103, A.CharacterMetrics_xrG, 104, A.CharacterMetrics_dQ133, 105, A.CharacterMetrics_7xV, 106, A.CharacterMetrics_0rA, 107, A.CharacterMetrics_sBP, 108, A.CharacterMetrics_vS9, 109, A.CharacterMetrics_Nyz14, 110, A.CharacterMetrics_Nyz15, 111, A.CharacterMetrics_IEr1, 112, A.CharacterMetrics_8fd0, 113, A.CharacterMetrics_Chk, 114, A.CharacterMetrics_c5Q, 115, A.CharacterMetrics_IEr2, 116, A.CharacterMetrics_ILJ, 117, A.CharacterMetrics_dW80, 118, A.CharacterMetrics_jsp, 119, A.CharacterMetrics_qJU, 120, A.CharacterMetrics_dW81, 121, A.CharacterMetrics_tT6, 122, A.CharacterMetrics_9ml, 915, A.CharacterMetrics_Rkc2, 916, A.CharacterMetrics_s5i, 920, A.CharacterMetrics_bRO0, 923, A.CharacterMetrics_s5i0, 926, A.CharacterMetrics_Rbj, 928, A.CharacterMetrics_UwD, 931, A.CharacterMetrics_agG1, 933, A.CharacterMetrics_bBn, 934, A.CharacterMetrics_vHQ1, 936, A.CharacterMetrics_tIe, 937, A.CharacterMetrics_KEx0, 945, A.CharacterMetrics_nn9, 946, A.CharacterMetrics_oBT, 947, A.CharacterMetrics_Wy8, 948, A.CharacterMetrics_gTe, 949, A.CharacterMetrics_JrD, 950, A.CharacterMetrics_CHU, 951, A.CharacterMetrics_tT60, 952, A.CharacterMetrics_BGN, 953, A.CharacterMetrics_IEr3, 954, A.CharacterMetrics_Nyz16, 955, A.CharacterMetrics_dQ134, 956, A.CharacterMetrics_IXX, 957, A.CharacterMetrics_d4y, 958, A.CharacterMetrics_klI, 959, A.CharacterMetrics_IEr1, 960, A.CharacterMetrics_4j6, 961, A.CharacterMetrics_8fd1, 962, A.CharacterMetrics_C5E, 963, A.CharacterMetrics_4j60, 964, A.CharacterMetrics_Kwb, 965, A.CharacterMetrics_jsp0, 966, A.CharacterMetrics_8fd2, 967, A.CharacterMetrics_pNa, 968, A.CharacterMetrics_9Rl, 969, A.CharacterMetrics_4j61, 977, A.CharacterMetrics_mBt, 981, A.CharacterMetrics_0i7, 982, A.CharacterMetrics_Uzk1, 1009, A.CharacterMetrics_8fd1, 1013, A.CharacterMetrics_IEr4], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_dQ135 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ136 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e18 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_Z0j3 = new B.CharacterMetrics(0.05556, 0.75, 0, 0);
    A.CharacterMetrics_Z0j4 = new B.CharacterMetrics(0.05556, 0.75, 0, 0);
    A.CharacterMetrics_dQ137 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ138 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Nd59 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_Coa3 = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_kIN = new B.CharacterMetrics(0.11667, 0.61667, 0, 0);
    A.CharacterMetrics_ZaL = new B.CharacterMetrics(0.10556, 0.13056, 0, 0);
    A.CharacterMetrics_7gF = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_rqW = new B.CharacterMetrics(0, 0.13056, 0, 0);
    A.CharacterMetrics_Nd510 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_dQ139 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_7gF0 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_JxN = new B.CharacterMetrics(0.10556, 0.45833, 0, 0);
    A.CharacterMetrics_Wug = new B.CharacterMetrics(-0.09375, 0.40625, 0, 0);
    A.CharacterMetrics_dQ140 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ141 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ142 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ143 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ144 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ145 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ146 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ147 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ148 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_z1r = new B.CharacterMetrics(0.10556, 0.69444, 0, 0);
    A.CharacterMetrics_O9G = new B.CharacterMetrics(0, 0.69444, 0.01528, 0);
    A.CharacterMetrics_O9G0 = new B.CharacterMetrics(0, 0.69444, 0.01528, 0);
    A.CharacterMetrics_ylq = new B.CharacterMetrics(0, 0.69444, 0.0275, 0);
    A.CharacterMetrics_dQ149 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Nd511 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_ohs = new B.CharacterMetrics(0.35, 0.10833, 0.03056, 0);
    A.CharacterMetrics_7gF1 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_dQ150 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_7gF2 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_7gF3 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_lWq = new B.CharacterMetrics(0, 0.69444, 0.07639, 0);
    A.CharacterMetrics_vkK = new B.CharacterMetrics(0.19444, 0.45833, 0.01528, 0);
    A.CharacterMetrics_dQ151 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_f3e19 = new B.CharacterMetrics(0.19444, 0.69444, 0, 0);
    A.CharacterMetrics_dQ152 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_7gF4 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_7gF5 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_7gF6 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_M3G = new B.CharacterMetrics(0.19444, 0.45833, 0, 0);
    A.CharacterMetrics_cUu = new B.CharacterMetrics(0, 0.45833, 0.01528, 0);
    A.CharacterMetrics_7gF7 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_Cxf = new B.CharacterMetrics(0, 0.58929, 0, 0);
    A.CharacterMetrics_cUu0 = new B.CharacterMetrics(0, 0.45833, 0.01528, 0);
    A.CharacterMetrics_cUu1 = new B.CharacterMetrics(0, 0.45833, 0.01528, 0);
    A.CharacterMetrics_7gF8 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_vkK0 = new B.CharacterMetrics(0.19444, 0.45833, 0.01528, 0);
    A.CharacterMetrics_7gF9 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_LfA0 = new B.CharacterMetrics(0.35, 0.34444, 0, 0);
    A.CharacterMetrics_aiS3 = new B.CharacterMetrics(0.17014, 0, 0, 0);
    A.CharacterMetrics_7gF10 = new B.CharacterMetrics(0, 0.45833, 0, 0);
    A.CharacterMetrics_M3G0 = new B.CharacterMetrics(0.19444, 0.45833, 0, 0);
    A.CharacterMetrics_7eI = new B.CharacterMetrics(0, 0.63542, 0, 0);
    A.CharacterMetrics_DMV = new B.CharacterMetrics(0, 0.63778, 0, 0);
    A.CharacterMetrics_dQ153 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ154 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_w1Z = new B.CharacterMetrics(0, 0.45833, 0.03056, 0);
    A.CharacterMetrics_w1Z0 = new B.CharacterMetrics(0, 0.45833, 0.03056, 0);
    A.Map_8fPR5 = new C.GeneralConstantMap([33, A.CharacterMetrics_dQ135, 34, A.CharacterMetrics_dQ136, 35, A.CharacterMetrics_f3e18, 36, A.CharacterMetrics_Z0j3, 37, A.CharacterMetrics_Z0j4, 38, A.CharacterMetrics_dQ137, 39, A.CharacterMetrics_dQ138, 40, A.CharacterMetrics_Nd59, 41, A.CharacterMetrics_Nd59, 42, A.CharacterMetrics_Coa3, 43, A.CharacterMetrics_kIN, 44, A.CharacterMetrics_ZaL, 45, A.CharacterMetrics_7gF, 46, A.CharacterMetrics_rqW, 47, A.CharacterMetrics_Nd510, 48, A.CharacterMetrics_dQ139, 49, A.CharacterMetrics_dQ139, 50, A.CharacterMetrics_dQ139, 51, A.CharacterMetrics_dQ139, 52, A.CharacterMetrics_dQ139, 53, A.CharacterMetrics_dQ139, 54, A.CharacterMetrics_dQ139, 55, A.CharacterMetrics_dQ139, 56, A.CharacterMetrics_dQ139, 57, A.CharacterMetrics_dQ139, 58, A.CharacterMetrics_7gF0, 59, A.CharacterMetrics_JxN, 61, A.CharacterMetrics_Wug, 63, A.CharacterMetrics_dQ140, 64, A.CharacterMetrics_dQ141, 65, A.CharacterMetrics_dQ141, 66, A.CharacterMetrics_dQ141, 67, A.CharacterMetrics_dQ142, 68, A.CharacterMetrics_dQ143, 69, A.CharacterMetrics_dQ144, 70, A.CharacterMetrics_dQ127, 71, A.CharacterMetrics_dQ141, 72, A.CharacterMetrics_dQ143, 73, A.CharacterMetrics_dQ145, 74, A.CharacterMetrics_dQ140, 75, A.CharacterMetrics_dQ146, 76, A.CharacterMetrics_dQ147, 77, A.CharacterMetrics_dQ148, 78, A.CharacterMetrics_dQ143, 79, A.CharacterMetrics_dQ143, 80, A.CharacterMetrics_dQ142, 81, A.CharacterMetrics_z1r, 82, A.CharacterMetrics_dQ142, 83, A.CharacterMetrics_dQ127, 84, A.CharacterMetrics_dQ141, 85, A.CharacterMetrics_dQ146, 86, A.CharacterMetrics_O9G, 87, A.CharacterMetrics_O9G0, 88, A.CharacterMetrics_dQ141, 89, A.CharacterMetrics_ylq, 90, A.CharacterMetrics_dQ149, 91, A.CharacterMetrics_Nd511, 93, A.CharacterMetrics_Nd511, 94, A.CharacterMetrics_dQ139, 95, A.CharacterMetrics_ohs, 97, A.CharacterMetrics_7gF1, 98, A.CharacterMetrics_dQ150, 99, A.CharacterMetrics_7gF2, 100, A.CharacterMetrics_dQ150, 101, A.CharacterMetrics_7gF3, 102, A.CharacterMetrics_lWq, 103, A.CharacterMetrics_vkK, 104, A.CharacterMetrics_dQ150, 105, A.CharacterMetrics_dQ151, 106, A.CharacterMetrics_f3e19, 107, A.CharacterMetrics_dQ152, 108, A.CharacterMetrics_dQ151, 109, A.CharacterMetrics_7gF4, 110, A.CharacterMetrics_7gF5, 111, A.CharacterMetrics_7gF6, 112, A.CharacterMetrics_M3G, 113, A.CharacterMetrics_M3G, 114, A.CharacterMetrics_cUu, 115, A.CharacterMetrics_7gF7, 116, A.CharacterMetrics_Cxf, 117, A.CharacterMetrics_7gF5, 118, A.CharacterMetrics_cUu0, 119, A.CharacterMetrics_cUu1, 120, A.CharacterMetrics_7gF8, 121, A.CharacterMetrics_vkK0, 122, A.CharacterMetrics_7gF9, 126, A.CharacterMetrics_LfA0, 168, A.CharacterMetrics_dQ139, 176, A.CharacterMetrics_dQ141, 180, A.CharacterMetrics_dQ139, 184, A.CharacterMetrics_aiS3, 305, A.CharacterMetrics_7gF10, 567, A.CharacterMetrics_M3G0, 710, A.CharacterMetrics_dQ139, 711, A.CharacterMetrics_7eI, 713, A.CharacterMetrics_DMV, 728, A.CharacterMetrics_dQ139, 729, A.CharacterMetrics_dQ138, 730, A.CharacterMetrics_dQ141, 732, A.CharacterMetrics_dQ139, 733, A.CharacterMetrics_dQ139, 915, A.CharacterMetrics_dQ147, 916, A.CharacterMetrics_dQ153, 920, A.CharacterMetrics_dQ154, 923, A.CharacterMetrics_dQ149, 926, A.CharacterMetrics_dQ141, 928, A.CharacterMetrics_dQ143, 931, A.CharacterMetrics_dQ143, 933, A.CharacterMetrics_dQ154, 934, A.CharacterMetrics_dQ143, 936, A.CharacterMetrics_dQ154, 937, A.CharacterMetrics_dQ143, 8211, A.CharacterMetrics_w1Z, 8212, A.CharacterMetrics_w1Z0, 8216, A.CharacterMetrics_dQ138, 8217, A.CharacterMetrics_dQ138, 8220, A.CharacterMetrics_dQ136, 8221, A.CharacterMetrics_dQ136], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_S57 = new B.CharacterMetrics(0, 0.69444, 0.05733, 0);
    A.CharacterMetrics_tKU = new B.CharacterMetrics(0, 0.69444, 0.00316, 0);
    A.CharacterMetrics_fYA = new B.CharacterMetrics(0.19444, 0.69444, 0.05087, 0);
    A.CharacterMetrics_0Gz = new B.CharacterMetrics(0.05556, 0.75, 0.11156, 0);
    A.CharacterMetrics_l46 = new B.CharacterMetrics(0.05556, 0.75, 0.03126, 0);
    A.CharacterMetrics_aQT = new B.CharacterMetrics(0, 0.69444, 0.03058, 0);
    A.CharacterMetrics_Efc = new B.CharacterMetrics(0, 0.69444, 0.07816, 0);
    A.CharacterMetrics_tke = new B.CharacterMetrics(0.25, 0.75, 0.13164, 0);
    A.CharacterMetrics_sdv = new B.CharacterMetrics(0.25, 0.75, 0.02536, 0);
    A.CharacterMetrics_B0M = new B.CharacterMetrics(0, 0.75, 0.11775, 0);
    A.CharacterMetrics_ULq = new B.CharacterMetrics(0.08333, 0.58333, 0.02536, 0);
    A.CharacterMetrics_GN6 = new B.CharacterMetrics(0.125, 0.08333, 0, 0);
    A.CharacterMetrics_zWU = new B.CharacterMetrics(0, 0.44444, 0.01946, 0);
    A.CharacterMetrics_od9 = new B.CharacterMetrics(0, 0.08333, 0, 0);
    A.CharacterMetrics_tke0 = new B.CharacterMetrics(0.25, 0.75, 0.13164, 0);
    A.CharacterMetrics_YTX = new B.CharacterMetrics(0, 0.65556, 0.11156, 0);
    A.CharacterMetrics_KzF = new B.CharacterMetrics(0, 0.44444, 0.02502, 0);
    A.CharacterMetrics_GV6 = new B.CharacterMetrics(0.125, 0.44444, 0.02502, 0);
    A.CharacterMetrics_c8j = new B.CharacterMetrics(-0.13, 0.37, 0.05087, 0);
    A.CharacterMetrics_WLF = new B.CharacterMetrics(0, 0.69444, 0.11809, 0);
    A.CharacterMetrics_0rJ = new B.CharacterMetrics(0, 0.69444, 0.07555, 0);
    A.CharacterMetrics_dQ155 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_Zex = new B.CharacterMetrics(0, 0.69444, 0.08293, 0);
    A.CharacterMetrics_oOT = new B.CharacterMetrics(0, 0.69444, 0.11983, 0);
    A.CharacterMetrics_0rJ0 = new B.CharacterMetrics(0, 0.69444, 0.07555, 0);
    A.CharacterMetrics_oOT0 = new B.CharacterMetrics(0, 0.69444, 0.11983, 0);
    A.CharacterMetrics_xsN = new B.CharacterMetrics(0, 0.69444, 0.13372, 0);
    A.CharacterMetrics_oOT1 = new B.CharacterMetrics(0, 0.69444, 0.11983, 0);
    A.CharacterMetrics_hBb = new B.CharacterMetrics(0, 0.69444, 0.08094, 0);
    A.CharacterMetrics_xsN0 = new B.CharacterMetrics(0, 0.69444, 0.13372, 0);
    A.CharacterMetrics_hBb0 = new B.CharacterMetrics(0, 0.69444, 0.08094, 0);
    A.CharacterMetrics_oOT2 = new B.CharacterMetrics(0, 0.69444, 0.11983, 0);
    A.CharacterMetrics_dQ156 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_hBb1 = new B.CharacterMetrics(0, 0.69444, 0.08094, 0);
    A.CharacterMetrics_0rJ1 = new B.CharacterMetrics(0, 0.69444, 0.07555, 0);
    A.CharacterMetrics_Zex0 = new B.CharacterMetrics(0, 0.69444, 0.08293, 0);
    A.CharacterMetrics_J3e = new B.CharacterMetrics(0.125, 0.69444, 0.07555, 0);
    A.CharacterMetrics_Zex1 = new B.CharacterMetrics(0, 0.69444, 0.08293, 0);
    A.CharacterMetrics_j7q = new B.CharacterMetrics(0, 0.69444, 0.09205, 0);
    A.CharacterMetrics_xsN1 = new B.CharacterMetrics(0, 0.69444, 0.13372, 0);
    A.CharacterMetrics_hBb2 = new B.CharacterMetrics(0, 0.69444, 0.08094, 0);
    A.CharacterMetrics_I4g = new B.CharacterMetrics(0, 0.69444, 0.1615, 0);
    A.CharacterMetrics_I4g0 = new B.CharacterMetrics(0, 0.69444, 0.1615, 0);
    A.CharacterMetrics_xsN2 = new B.CharacterMetrics(0, 0.69444, 0.13372, 0);
    A.CharacterMetrics_BiO = new B.CharacterMetrics(0, 0.69444, 0.17261, 0);
    A.CharacterMetrics_oOT3 = new B.CharacterMetrics(0, 0.69444, 0.11983, 0);
    A.CharacterMetrics_tT2 = new B.CharacterMetrics(0.25, 0.75, 0.15942, 0);
    A.CharacterMetrics_ZJ0 = new B.CharacterMetrics(0.25, 0.75, 0.08719, 0);
    A.CharacterMetrics_hqT = new B.CharacterMetrics(0, 0.69444, 0.0799, 0);
    A.CharacterMetrics_aWy = new B.CharacterMetrics(0.35, 0.09444, 0.08616, 0);
    A.CharacterMetrics_R6W = new B.CharacterMetrics(0, 0.44444, 0.00981, 0);
    A.CharacterMetrics_pYP = new B.CharacterMetrics(0, 0.69444, 0.03057, 0);
    A.CharacterMetrics_oQX = new B.CharacterMetrics(0, 0.44444, 0.08336, 0);
    A.CharacterMetrics_bzF = new B.CharacterMetrics(0, 0.69444, 0.09483, 0);
    A.CharacterMetrics_58O = new B.CharacterMetrics(0, 0.44444, 0.06778, 0);
    A.CharacterMetrics_d3I = new B.CharacterMetrics(0, 0.69444, 0.21705, 0);
    A.CharacterMetrics_Fmy = new B.CharacterMetrics(0.19444, 0.44444, 0.10836, 0);
    A.CharacterMetrics_Ull = new B.CharacterMetrics(0, 0.69444, 0.01778, 0);
    A.CharacterMetrics_JNn = new B.CharacterMetrics(0, 0.67937, 0.09718, 0);
    A.CharacterMetrics_Ww2 = new B.CharacterMetrics(0.19444, 0.67937, 0.09162, 0);
    A.CharacterMetrics_q9T = new B.CharacterMetrics(0, 0.69444, 0.08336, 0);
    A.CharacterMetrics_bzF0 = new B.CharacterMetrics(0, 0.69444, 0.09483, 0);
    A.CharacterMetrics_1Kw = new B.CharacterMetrics(0, 0.44444, 0.01778, 0);
    A.CharacterMetrics_1Kw0 = new B.CharacterMetrics(0, 0.44444, 0.01778, 0);
    A.CharacterMetrics_kgG = new B.CharacterMetrics(0, 0.44444, 0.06613, 0);
    A.CharacterMetrics_MTJ = new B.CharacterMetrics(0.19444, 0.44444, 0.0389, 0);
    A.CharacterMetrics_nFN = new B.CharacterMetrics(0.19444, 0.44444, 0.04169, 0);
    A.CharacterMetrics_8q5 = new B.CharacterMetrics(0, 0.44444, 0.10836, 0);
    A.CharacterMetrics_MCU = new B.CharacterMetrics(0, 0.44444, 0.0778, 0);
    A.CharacterMetrics_RLN = new B.CharacterMetrics(0, 0.57143, 0.07225, 0);
    A.CharacterMetrics_PGI = new B.CharacterMetrics(0, 0.44444, 0.04169, 0);
    A.CharacterMetrics_8q50 = new B.CharacterMetrics(0, 0.44444, 0.10836, 0);
    A.CharacterMetrics_8q51 = new B.CharacterMetrics(0, 0.44444, 0.10836, 0);
    A.CharacterMetrics_iGP = new B.CharacterMetrics(0, 0.44444, 0.09169, 0);
    A.CharacterMetrics_Fmy0 = new B.CharacterMetrics(0.19444, 0.44444, 0.10836, 0);
    A.CharacterMetrics_I3Q = new B.CharacterMetrics(0, 0.44444, 0.08752, 0);
    A.CharacterMetrics_1xL = new B.CharacterMetrics(0.35, 0.32659, 0.08826, 0);
    A.CharacterMetrics_eVa = new B.CharacterMetrics(0, 0.67937, 0.06385, 0);
    A.CharacterMetrics_dQ157 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_PGI0 = new B.CharacterMetrics(0, 0.44444, 0.04169, 0);
    A.CharacterMetrics_nFN0 = new B.CharacterMetrics(0.19444, 0.44444, 0.04169, 0);
    A.CharacterMetrics_6Iy = new B.CharacterMetrics(0, 0.63194, 0.08432, 0);
    A.CharacterMetrics_s3f = new B.CharacterMetrics(0, 0.60889, 0.08776, 0);
    A.CharacterMetrics_j7q0 = new B.CharacterMetrics(0, 0.69444, 0.09205, 0);
    A.CharacterMetrics_bzF1 = new B.CharacterMetrics(0, 0.69444, 0.09483, 0);
    A.CharacterMetrics_LKQ = new B.CharacterMetrics(0, 0.67937, 0.07774, 0);
    A.CharacterMetrics_5GT = new B.CharacterMetrics(0, 0.67659, 0.08826, 0);
    A.CharacterMetrics_xsN3 = new B.CharacterMetrics(0, 0.69444, 0.13372, 0);
    A.CharacterMetrics_dQ158 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_0rJ2 = new B.CharacterMetrics(0, 0.69444, 0.07555, 0);
    A.CharacterMetrics_l7Q = new B.CharacterMetrics(0, 0.69444, 0.12816, 0);
    A.CharacterMetrics_oOT4 = new B.CharacterMetrics(0, 0.69444, 0.11983, 0);
    A.CharacterMetrics_E3n = new B.CharacterMetrics(0, 0.69444, 0.09031, 0);
    A.CharacterMetrics_3d7 = new B.CharacterMetrics(0, 0.69444, 0.04603, 0);
    A.CharacterMetrics_Zex2 = new B.CharacterMetrics(0, 0.69444, 0.08293, 0);
    A.CharacterMetrics_inl = new B.CharacterMetrics(0, 0.44444, 0.08616, 0);
    A.CharacterMetrics_inl0 = new B.CharacterMetrics(0, 0.44444, 0.08616, 0);
    A.CharacterMetrics_QdE = new B.CharacterMetrics(0, 0.69444, 0.14205, 0);
    A.Map_uKL2n = new C.GeneralConstantMap([33, A.CharacterMetrics_S57, 34, A.CharacterMetrics_tKU, 35, A.CharacterMetrics_fYA, 36, A.CharacterMetrics_0Gz, 37, A.CharacterMetrics_l46, 38, A.CharacterMetrics_aQT, 39, A.CharacterMetrics_Efc, 40, A.CharacterMetrics_tke, 41, A.CharacterMetrics_sdv, 42, A.CharacterMetrics_B0M, 43, A.CharacterMetrics_ULq, 44, A.CharacterMetrics_GN6, 45, A.CharacterMetrics_zWU, 46, A.CharacterMetrics_od9, 47, A.CharacterMetrics_tke0, 48, A.CharacterMetrics_YTX, 49, A.CharacterMetrics_YTX, 50, A.CharacterMetrics_YTX, 51, A.CharacterMetrics_YTX, 52, A.CharacterMetrics_YTX, 53, A.CharacterMetrics_YTX, 54, A.CharacterMetrics_YTX, 55, A.CharacterMetrics_YTX, 56, A.CharacterMetrics_YTX, 57, A.CharacterMetrics_YTX, 58, A.CharacterMetrics_KzF, 59, A.CharacterMetrics_GV6, 61, A.CharacterMetrics_c8j, 63, A.CharacterMetrics_WLF, 64, A.CharacterMetrics_0rJ, 65, A.CharacterMetrics_dQ155, 66, A.CharacterMetrics_Zex, 67, A.CharacterMetrics_oOT, 68, A.CharacterMetrics_0rJ0, 69, A.CharacterMetrics_oOT0, 70, A.CharacterMetrics_xsN, 71, A.CharacterMetrics_oOT1, 72, A.CharacterMetrics_hBb, 73, A.CharacterMetrics_xsN0, 74, A.CharacterMetrics_hBb0, 75, A.CharacterMetrics_oOT2, 76, A.CharacterMetrics_dQ156, 77, A.CharacterMetrics_hBb1, 78, A.CharacterMetrics_hBb, 79, A.CharacterMetrics_0rJ1, 80, A.CharacterMetrics_Zex0, 81, A.CharacterMetrics_J3e, 82, A.CharacterMetrics_Zex1, 83, A.CharacterMetrics_j7q, 84, A.CharacterMetrics_xsN1, 85, A.CharacterMetrics_hBb2, 86, A.CharacterMetrics_I4g, 87, A.CharacterMetrics_I4g0, 88, A.CharacterMetrics_xsN2, 89, A.CharacterMetrics_BiO, 90, A.CharacterMetrics_oOT3, 91, A.CharacterMetrics_tT2, 93, A.CharacterMetrics_ZJ0, 94, A.CharacterMetrics_hqT, 95, A.CharacterMetrics_aWy, 97, A.CharacterMetrics_R6W, 98, A.CharacterMetrics_pYP, 99, A.CharacterMetrics_oQX, 100, A.CharacterMetrics_bzF, 101, A.CharacterMetrics_58O, 102, A.CharacterMetrics_d3I, 103, A.CharacterMetrics_Fmy, 104, A.CharacterMetrics_Ull, 105, A.CharacterMetrics_JNn, 106, A.CharacterMetrics_Ww2, 107, A.CharacterMetrics_q9T, 108, A.CharacterMetrics_bzF0, 109, A.CharacterMetrics_1Kw, 110, A.CharacterMetrics_1Kw0, 111, A.CharacterMetrics_kgG, 112, A.CharacterMetrics_MTJ, 113, A.CharacterMetrics_nFN, 114, A.CharacterMetrics_8q5, 115, A.CharacterMetrics_MCU, 116, A.CharacterMetrics_RLN, 117, A.CharacterMetrics_PGI, 118, A.CharacterMetrics_8q50, 119, A.CharacterMetrics_8q51, 120, A.CharacterMetrics_iGP, 121, A.CharacterMetrics_Fmy0, 122, A.CharacterMetrics_I3Q, 126, A.CharacterMetrics_1xL, 168, A.CharacterMetrics_eVa, 176, A.CharacterMetrics_dQ157, 184, A.CharacterMetrics_aiS2, 305, A.CharacterMetrics_PGI0, 567, A.CharacterMetrics_nFN0, 710, A.CharacterMetrics_hqT, 711, A.CharacterMetrics_6Iy, 713, A.CharacterMetrics_s3f, 714, A.CharacterMetrics_j7q0, 715, A.CharacterMetrics_dQ120, 728, A.CharacterMetrics_bzF1, 729, A.CharacterMetrics_LKQ, 730, A.CharacterMetrics_dQ157, 732, A.CharacterMetrics_5GT, 733, A.CharacterMetrics_j7q0, 915, A.CharacterMetrics_xsN3, 916, A.CharacterMetrics_dQ158, 920, A.CharacterMetrics_0rJ2, 923, A.CharacterMetrics_dQ127, 926, A.CharacterMetrics_l7Q, 928, A.CharacterMetrics_hBb, 931, A.CharacterMetrics_oOT4, 933, A.CharacterMetrics_E3n, 934, A.CharacterMetrics_3d7, 936, A.CharacterMetrics_E3n, 937, A.CharacterMetrics_Zex2, 8211, A.CharacterMetrics_inl, 8212, A.CharacterMetrics_inl0, 8216, A.CharacterMetrics_Efc, 8217, A.CharacterMetrics_Efc, 8220, A.CharacterMetrics_QdE, 8221, A.CharacterMetrics_tKU], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_dQ159 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ160 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p28 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_OSV = new B.CharacterMetrics(0, 0.65556, 0, 0);
    A.CharacterMetrics_58p29 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_Zx3 = new B.CharacterMetrics(0.125, 0.44444, 0, 0);
    A.CharacterMetrics_OsD = new B.CharacterMetrics(-0.13, 0.37, 0, 0);
    A.CharacterMetrics_dQ161 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ162 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ163 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ164 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ165 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ166 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_ciD = new B.CharacterMetrics(0.125, 0.69444, 0, 0);
    A.CharacterMetrics_dQ167 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ168 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ169 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_WmO = new B.CharacterMetrics(0, 0.69444, 0.01389, 0);
    A.CharacterMetrics_WmO0 = new B.CharacterMetrics(0, 0.69444, 0.01389, 0);
    A.CharacterMetrics_2Gj = new B.CharacterMetrics(0, 0.69444, 0.025, 0);
    A.CharacterMetrics_Nd512 = new B.CharacterMetrics(0.25, 0.75, 0, 0);
    A.CharacterMetrics_cZn = new B.CharacterMetrics(0.35, 0.09444, 0.02778, 0);
    A.CharacterMetrics_58p30 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_dQ170 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p31 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_lkz = new B.CharacterMetrics(0, 0.69444, 0.06944, 0);
    A.CharacterMetrics_hMb = new B.CharacterMetrics(0.19444, 0.44444, 0.01389, 0);
    A.CharacterMetrics_Lau = new B.CharacterMetrics(0, 0.67937, 0, 0);
    A.CharacterMetrics_27o = new B.CharacterMetrics(0.19444, 0.67937, 0, 0);
    A.CharacterMetrics_dQ171 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_dQ172 = new B.CharacterMetrics(0, 0.69444, 0, 0);
    A.CharacterMetrics_58p32 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p33 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_58p34 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_7CM9 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_rOO = new B.CharacterMetrics(0, 0.44444, 0.01389, 0);
    A.CharacterMetrics_uoi = new B.CharacterMetrics(0, 0.57143, 0, 0);
    A.CharacterMetrics_rOO0 = new B.CharacterMetrics(0, 0.44444, 0.01389, 0);
    A.CharacterMetrics_rOO1 = new B.CharacterMetrics(0, 0.44444, 0.01389, 0);
    A.CharacterMetrics_58p35 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_hMb0 = new B.CharacterMetrics(0.19444, 0.44444, 0.01389, 0);
    A.CharacterMetrics_58p36 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_kDo = new B.CharacterMetrics(0.35, 0.32659, 0, 0);
    A.CharacterMetrics_Lau0 = new B.CharacterMetrics(0, 0.67937, 0, 0);
    A.CharacterMetrics_58p37 = new B.CharacterMetrics(0, 0.44444, 0, 0);
    A.CharacterMetrics_7CM10 = new B.CharacterMetrics(0.19444, 0.44444, 0, 0);
    A.CharacterMetrics_xJj0 = new B.CharacterMetrics(0, 0.63194, 0, 0);
    A.CharacterMetrics_Ou2 = new B.CharacterMetrics(0, 0.60889, 0, 0);
    A.CharacterMetrics_Lau1 = new B.CharacterMetrics(0, 0.67937, 0, 0);
    A.CharacterMetrics_Uuz = new B.CharacterMetrics(0, 0.67659, 0, 0);
    A.CharacterMetrics_uOI0 = new B.CharacterMetrics(0, 0.44444, 0.02778, 0);
    A.CharacterMetrics_uOI1 = new B.CharacterMetrics(0, 0.44444, 0.02778, 0);
    A.Map_uKsm0 = new C.GeneralConstantMap([33, A.CharacterMetrics_dQ159, 34, A.CharacterMetrics_dQ120, 35, A.CharacterMetrics_f3e9, 36, A.CharacterMetrics_Z0j1, 37, A.CharacterMetrics_Z0j2, 38, A.CharacterMetrics_dQ160, 39, A.CharacterMetrics_dQ119, 40, A.CharacterMetrics_Nd54, 41, A.CharacterMetrics_Nd54, 42, A.CharacterMetrics_Coa1, 43, A.CharacterMetrics_FTd, 44, A.CharacterMetrics_GN6, 45, A.CharacterMetrics_58p28, 46, A.CharacterMetrics_od9, 47, A.CharacterMetrics_Nd55, 48, A.CharacterMetrics_OSV, 49, A.CharacterMetrics_OSV, 50, A.CharacterMetrics_OSV, 51, A.CharacterMetrics_OSV, 52, A.CharacterMetrics_OSV, 53, A.CharacterMetrics_OSV, 54, A.CharacterMetrics_OSV, 55, A.CharacterMetrics_OSV, 56, A.CharacterMetrics_OSV, 57, A.CharacterMetrics_OSV, 58, A.CharacterMetrics_58p29, 59, A.CharacterMetrics_Zx3, 61, A.CharacterMetrics_OsD, 63, A.CharacterMetrics_dQ122, 64, A.CharacterMetrics_dQ155, 65, A.CharacterMetrics_dQ155, 66, A.CharacterMetrics_dQ155, 67, A.CharacterMetrics_dQ15, 68, A.CharacterMetrics_dQ161, 69, A.CharacterMetrics_dQ18, 70, A.CharacterMetrics_dQ162, 71, A.CharacterMetrics_dQ155, 72, A.CharacterMetrics_dQ163, 73, A.CharacterMetrics_dQ119, 74, A.CharacterMetrics_dQ122, 75, A.CharacterMetrics_dQ164, 76, A.CharacterMetrics_dQ156, 77, A.CharacterMetrics_dQ165, 78, A.CharacterMetrics_dQ163, 79, A.CharacterMetrics_dQ166, 80, A.CharacterMetrics_dQ15, 81, A.CharacterMetrics_ciD, 82, A.CharacterMetrics_dQ167, 83, A.CharacterMetrics_dQ123, 84, A.CharacterMetrics_dQ168, 85, A.CharacterMetrics_dQ169, 86, A.CharacterMetrics_WmO, 87, A.CharacterMetrics_WmO0, 88, A.CharacterMetrics_dQ155, 89, A.CharacterMetrics_2Gj, 90, A.CharacterMetrics_dQ127, 91, A.CharacterMetrics_Nd512, 93, A.CharacterMetrics_Nd512, 94, A.CharacterMetrics_dQ120, 95, A.CharacterMetrics_cZn, 97, A.CharacterMetrics_58p30, 98, A.CharacterMetrics_dQ170, 99, A.CharacterMetrics_58p31, 100, A.CharacterMetrics_dQ170, 101, A.CharacterMetrics_58p31, 102, A.CharacterMetrics_lkz, 103, A.CharacterMetrics_hMb, 104, A.CharacterMetrics_dQ170, 105, A.CharacterMetrics_Lau, 106, A.CharacterMetrics_27o, 107, A.CharacterMetrics_dQ171, 108, A.CharacterMetrics_dQ172, 109, A.CharacterMetrics_58p32, 110, A.CharacterMetrics_58p33, 111, A.CharacterMetrics_58p34, 112, A.CharacterMetrics_7CM9, 113, A.CharacterMetrics_7CM9, 114, A.CharacterMetrics_rOO, 115, A.CharacterMetrics_58p, 116, A.CharacterMetrics_uoi, 117, A.CharacterMetrics_58p33, 118, A.CharacterMetrics_rOO0, 119, A.CharacterMetrics_rOO1, 120, A.CharacterMetrics_58p35, 121, A.CharacterMetrics_hMb0, 122, A.CharacterMetrics_58p36, 126, A.CharacterMetrics_kDo, 168, A.CharacterMetrics_Lau0, 176, A.CharacterMetrics_dQ155, 184, A.CharacterMetrics_aiS2, 305, A.CharacterMetrics_58p37, 567, A.CharacterMetrics_7CM10, 710, A.CharacterMetrics_dQ120, 711, A.CharacterMetrics_xJj0, 713, A.CharacterMetrics_Ou2, 714, A.CharacterMetrics_dQ120, 715, A.CharacterMetrics_dQ120, 728, A.CharacterMetrics_dQ120, 729, A.CharacterMetrics_Lau1, 730, A.CharacterMetrics_dQ155, 732, A.CharacterMetrics_Uuz, 733, A.CharacterMetrics_dQ120, 915, A.CharacterMetrics_dQ156, 916, A.CharacterMetrics_dQ158, 920, A.CharacterMetrics_dQ121, 923, A.CharacterMetrics_dQ127, 926, A.CharacterMetrics_dQ155, 928, A.CharacterMetrics_dQ163, 931, A.CharacterMetrics_dQ126, 933, A.CharacterMetrics_dQ121, 934, A.CharacterMetrics_dQ126, 936, A.CharacterMetrics_dQ121, 937, A.CharacterMetrics_dQ126, 8211, A.CharacterMetrics_uOI0, 8212, A.CharacterMetrics_uOI1, 8216, A.CharacterMetrics_dQ119, 8217, A.CharacterMetrics_dQ119, 8220, A.CharacterMetrics_dQ120, 8221, A.CharacterMetrics_dQ120], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_IcE = new B.CharacterMetrics(0, 0.7, 0.22925, 0);
    A.CharacterMetrics_VZd = new B.CharacterMetrics(0, 0.7, 0.04087, 0);
    A.CharacterMetrics_Us1 = new B.CharacterMetrics(0, 0.7, 0.1689, 0);
    A.CharacterMetrics_hTP = new B.CharacterMetrics(0, 0.7, 0.09371, 0);
    A.CharacterMetrics_kBQ = new B.CharacterMetrics(0, 0.7, 0.18583, 0);
    A.CharacterMetrics_JYw = new B.CharacterMetrics(0, 0.7, 0.13634, 0);
    A.CharacterMetrics_wk3 = new B.CharacterMetrics(0, 0.7, 0.17322, 0);
    A.CharacterMetrics_SnM = new B.CharacterMetrics(0, 0.7, 0.29694, 0);
    A.CharacterMetrics_b5r = new B.CharacterMetrics(0, 0.7, 0.19189, 0);
    A.CharacterMetrics_Pko = new B.CharacterMetrics(0.27778, 0.7, 0.19189, 0);
    A.CharacterMetrics_yGP = new B.CharacterMetrics(0, 0.7, 0.31259, 0);
    A.CharacterMetrics_b5r0 = new B.CharacterMetrics(0, 0.7, 0.19189, 0);
    A.CharacterMetrics_4qE = new B.CharacterMetrics(0, 0.7, 0.15981, 0);
    A.CharacterMetrics_OiL = new B.CharacterMetrics(0, 0.7, 0.3525, 0);
    A.CharacterMetrics_O6B = new B.CharacterMetrics(0, 0.7, 0.08078, 0);
    A.CharacterMetrics_O6B0 = new B.CharacterMetrics(0, 0.7, 0.08078, 0);
    A.CharacterMetrics_EXH = new B.CharacterMetrics(0, 0.7, 0.03305, 0);
    A.CharacterMetrics_zZw = new B.CharacterMetrics(0, 0.7, 0.06259, 0);
    A.CharacterMetrics_b5r1 = new B.CharacterMetrics(0, 0.7, 0.19189, 0);
    A.CharacterMetrics_WGi = new B.CharacterMetrics(0, 0.7, 0.29087, 0);
    A.CharacterMetrics_e6x = new B.CharacterMetrics(0, 0.7, 0.25815, 0);
    A.CharacterMetrics_N8h = new B.CharacterMetrics(0, 0.7, 0.27523, 0);
    A.CharacterMetrics_N8h0 = new B.CharacterMetrics(0, 0.7, 0.27523, 0);
    A.CharacterMetrics_KYM = new B.CharacterMetrics(0, 0.7, 0.26006, 0);
    A.CharacterMetrics_7D9 = new B.CharacterMetrics(0, 0.7, 0.2939, 0);
    A.CharacterMetrics_kLR = new B.CharacterMetrics(0, 0.7, 0.24037, 0);
    A.Map_UXc7q = new C.GeneralConstantMap([65, A.CharacterMetrics_IcE, 66, A.CharacterMetrics_VZd, 67, A.CharacterMetrics_Us1, 68, A.CharacterMetrics_hTP, 69, A.CharacterMetrics_kBQ, 70, A.CharacterMetrics_JYw, 71, A.CharacterMetrics_wk3, 72, A.CharacterMetrics_SnM, 73, A.CharacterMetrics_b5r, 74, A.CharacterMetrics_Pko, 75, A.CharacterMetrics_yGP, 76, A.CharacterMetrics_b5r0, 77, A.CharacterMetrics_4qE, 78, A.CharacterMetrics_OiL, 79, A.CharacterMetrics_O6B, 80, A.CharacterMetrics_O6B0, 81, A.CharacterMetrics_EXH, 82, A.CharacterMetrics_zZw, 83, A.CharacterMetrics_b5r1, 84, A.CharacterMetrics_WGi, 85, A.CharacterMetrics_e6x, 86, A.CharacterMetrics_N8h, 87, A.CharacterMetrics_N8h0, 88, A.CharacterMetrics_KYM, 89, A.CharacterMetrics_7D9, 90, A.CharacterMetrics_kLR], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_X1k = new B.CharacterMetrics(0.35001, 0.85, 0, 0);
    A.CharacterMetrics_X1k0 = new B.CharacterMetrics(0.35001, 0.85, 0, 0);
    A.CharacterMetrics_X1k1 = new B.CharacterMetrics(0.35001, 0.85, 0, 0);
    A.CharacterMetrics_X1k2 = new B.CharacterMetrics(0.35001, 0.85, 0, 0);
    A.CharacterMetrics_teZ = new B.CharacterMetrics(0, 0.72222, 0, 0);
    A.CharacterMetrics_3Hx = new B.CharacterMetrics(-0.00099, 0.601, 0, 0);
    A.CharacterMetrics_496 = new B.CharacterMetrics(0.00001, 0.6, 0, 0);
    A.CharacterMetrics_4960 = new B.CharacterMetrics(0.00001, 0.6, 0, 0);
    A.CharacterMetrics_BQU = new B.CharacterMetrics(0.25001, 0.75, 0, 0);
    A.CharacterMetrics_BQU0 = new B.CharacterMetrics(0.25001, 0.75, 0, 0);
    A.CharacterMetrics_X1k3 = new B.CharacterMetrics(0.35001, 0.85, 0, 0);
    A.CharacterMetrics_Ds6 = new B.CharacterMetrics(-0.00599, 0.606, 0, 0);
    A.CharacterMetrics_Ds60 = new B.CharacterMetrics(-0.00599, 0.606, 0, 0);
    A.CharacterMetrics_3yK = new B.CharacterMetrics(0.30612, 0.805, 0.19445, 0);
    A.CharacterMetrics_XNe = new B.CharacterMetrics(0.306, 0.805, 0.19445, 0);
    A.CharacterMetrics_BQU1 = new B.CharacterMetrics(0.25001, 0.75, 0, 0);
    A.CharacterMetrics_X1k4 = new B.CharacterMetrics(0.35001, 0.85, 0, 0);
    A.CharacterMetrics_3Hx0 = new B.CharacterMetrics(-0.00099, 0.601, 0, 0);
    A.CharacterMetrics_BQU2 = new B.CharacterMetrics(0.25001, 0.75, 0, 0);
    A.Map_BZr4s = new C.GeneralConstantMap([40, A.CharacterMetrics_X1k, 41, A.CharacterMetrics_X1k, 47, A.CharacterMetrics_X1k0, 91, A.CharacterMetrics_X1k1, 92, A.CharacterMetrics_X1k0, 93, A.CharacterMetrics_X1k1, 123, A.CharacterMetrics_X1k2, 125, A.CharacterMetrics_X1k2, 710, A.CharacterMetrics_teZ, 732, A.CharacterMetrics_teZ, 770, A.CharacterMetrics_teZ, 771, A.CharacterMetrics_teZ, 8214, A.CharacterMetrics_3Hx, 8593, A.CharacterMetrics_496, 8595, A.CharacterMetrics_496, 8657, A.CharacterMetrics_4960, 8659, A.CharacterMetrics_4960, 8719, A.CharacterMetrics_BQU, 8720, A.CharacterMetrics_BQU, 8721, A.CharacterMetrics_BQU0, 8730, A.CharacterMetrics_X1k3, 8739, A.CharacterMetrics_Ds6, 8741, A.CharacterMetrics_Ds60, 8747, A.CharacterMetrics_3yK, 8748, A.CharacterMetrics_XNe, 8749, A.CharacterMetrics_XNe, 8750, A.CharacterMetrics_3yK, 8896, A.CharacterMetrics_BQU1, 8897, A.CharacterMetrics_BQU1, 8898, A.CharacterMetrics_BQU1, 8899, A.CharacterMetrics_BQU1, 8968, A.CharacterMetrics_X1k4, 8969, A.CharacterMetrics_X1k4, 8970, A.CharacterMetrics_X1k4, 8971, A.CharacterMetrics_X1k4, 9168, A.CharacterMetrics_3Hx0, 10216, A.CharacterMetrics_X1k4, 10217, A.CharacterMetrics_X1k4, 10752, A.CharacterMetrics_BQU2, 10753, A.CharacterMetrics_BQU2, 10754, A.CharacterMetrics_BQU2, 10756, A.CharacterMetrics_BQU1, 10758, A.CharacterMetrics_BQU1], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_kzH = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_kzH0 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_kzH1 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_kzH2 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_Coa4 = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_1Up = new B.CharacterMetrics(0.55001, 1.05, 0, 0);
    A.CharacterMetrics_1Up0 = new B.CharacterMetrics(0.55001, 1.05, 0, 0);
    A.CharacterMetrics_kzH3 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_F9q = new B.CharacterMetrics(0.86225, 1.36, 0.44445, 0);
    A.CharacterMetrics_8sG = new B.CharacterMetrics(0.862, 1.36, 0.44445, 0);
    A.CharacterMetrics_1Up1 = new B.CharacterMetrics(0.55001, 1.05, 0, 0);
    A.CharacterMetrics_kzH4 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_kzH5 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_1Up2 = new B.CharacterMetrics(0.55001, 1.05, 0, 0);
    A.Map_OO0fg = new C.GeneralConstantMap([40, A.CharacterMetrics_kzH, 41, A.CharacterMetrics_kzH, 47, A.CharacterMetrics_kzH0, 91, A.CharacterMetrics_kzH1, 92, A.CharacterMetrics_kzH0, 93, A.CharacterMetrics_kzH1, 123, A.CharacterMetrics_kzH2, 125, A.CharacterMetrics_kzH2, 710, A.CharacterMetrics_Coa4, 732, A.CharacterMetrics_Coa4, 770, A.CharacterMetrics_Coa4, 771, A.CharacterMetrics_Coa4, 8719, A.CharacterMetrics_1Up, 8720, A.CharacterMetrics_1Up, 8721, A.CharacterMetrics_1Up0, 8730, A.CharacterMetrics_kzH3, 8747, A.CharacterMetrics_F9q, 8748, A.CharacterMetrics_8sG, 8749, A.CharacterMetrics_8sG, 8750, A.CharacterMetrics_F9q, 8896, A.CharacterMetrics_1Up1, 8897, A.CharacterMetrics_1Up1, 8898, A.CharacterMetrics_1Up1, 8899, A.CharacterMetrics_1Up1, 8968, A.CharacterMetrics_kzH4, 8969, A.CharacterMetrics_kzH4, 8970, A.CharacterMetrics_kzH4, 8971, A.CharacterMetrics_kzH4, 10216, A.CharacterMetrics_kzH5, 10217, A.CharacterMetrics_kzH5, 10752, A.CharacterMetrics_1Up2, 10753, A.CharacterMetrics_1Up2, 10754, A.CharacterMetrics_1Up2, 10756, A.CharacterMetrics_1Up1, 10758, A.CharacterMetrics_1Up1], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_fSX = new B.CharacterMetrics(0.95003, 1.45, 0, 0);
    A.CharacterMetrics_fSX0 = new B.CharacterMetrics(0.95003, 1.45, 0, 0);
    A.CharacterMetrics_fSX1 = new B.CharacterMetrics(0.95003, 1.45, 0, 0);
    A.CharacterMetrics_fSX2 = new B.CharacterMetrics(0.95003, 1.45, 0, 0);
    A.CharacterMetrics_Coa5 = new B.CharacterMetrics(0, 0.75, 0, 0);
    A.CharacterMetrics_fSX3 = new B.CharacterMetrics(0.95003, 1.45, 0, 0);
    A.CharacterMetrics_fSX4 = new B.CharacterMetrics(0.95003, 1.45, 0, 0);
    A.Map_1nFCo = new C.GeneralConstantMap([40, A.CharacterMetrics_fSX, 41, A.CharacterMetrics_fSX, 47, A.CharacterMetrics_fSX0, 91, A.CharacterMetrics_fSX1, 92, A.CharacterMetrics_fSX0, 93, A.CharacterMetrics_fSX1, 123, A.CharacterMetrics_fSX2, 125, A.CharacterMetrics_fSX2, 710, A.CharacterMetrics_Coa5, 732, A.CharacterMetrics_Coa5, 770, A.CharacterMetrics_Coa5, 771, A.CharacterMetrics_Coa5, 8730, A.CharacterMetrics_fSX3, 8968, A.CharacterMetrics_fSX4, 8969, A.CharacterMetrics_fSX4, 8970, A.CharacterMetrics_fSX4, 8971, A.CharacterMetrics_fSX4, 10216, A.CharacterMetrics_fSX2, 10217, A.CharacterMetrics_fSX2], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_Tmd = new B.CharacterMetrics(1.25003, 1.75, 0, 0);
    A.CharacterMetrics_Tmd0 = new B.CharacterMetrics(1.25003, 1.75, 0, 0);
    A.CharacterMetrics_Tmd1 = new B.CharacterMetrics(1.25003, 1.75, 0, 0);
    A.CharacterMetrics_Tmd2 = new B.CharacterMetrics(1.25003, 1.75, 0, 0);
    A.CharacterMetrics_xB71 = new B.CharacterMetrics(0, 0.825, 0, 0);
    A.CharacterMetrics_Tmd3 = new B.CharacterMetrics(1.25003, 1.75, 0, 0);
    A.CharacterMetrics_Tmd4 = new B.CharacterMetrics(1.25003, 1.75, 0, 0);
    A.CharacterMetrics_pUq = new B.CharacterMetrics(0.64502, 1.155, 0, 0);
    A.CharacterMetrics_4961 = new B.CharacterMetrics(0.00001, 0.6, 0, 0);
    A.CharacterMetrics_pUq0 = new B.CharacterMetrics(0.64502, 1.155, 0, 0);
    A.CharacterMetrics_Uvd = new B.CharacterMetrics(0.00001, 0.9, 0, 0);
    A.CharacterMetrics_kzH6 = new B.CharacterMetrics(0.65002, 1.15, 0, 0);
    A.CharacterMetrics_jDc = new B.CharacterMetrics(0.90001, 0, 0, 0);
    A.CharacterMetrics_FQL = new B.CharacterMetrics(0, 0.3, 0, 0);
    A.CharacterMetrics_RZM = new B.CharacterMetrics(0.88502, 0.915, 0, 0);
    A.CharacterMetrics_iX5 = new B.CharacterMetrics(-0.00499, 0.605, 0, 0);
    A.CharacterMetrics_QyK0 = new B.CharacterMetrics(0, 0.12, 0, 0);
    A.Map_rCPmE = new C.GeneralConstantMap([40, A.CharacterMetrics_Tmd, 41, A.CharacterMetrics_Tmd, 47, A.CharacterMetrics_Tmd0, 91, A.CharacterMetrics_Tmd1, 92, A.CharacterMetrics_Tmd0, 93, A.CharacterMetrics_Tmd1, 123, A.CharacterMetrics_Tmd2, 125, A.CharacterMetrics_Tmd2, 710, A.CharacterMetrics_xB71, 732, A.CharacterMetrics_xB71, 770, A.CharacterMetrics_xB71, 771, A.CharacterMetrics_xB71, 8730, A.CharacterMetrics_Tmd3, 8968, A.CharacterMetrics_Tmd4, 8969, A.CharacterMetrics_Tmd4, 8970, A.CharacterMetrics_Tmd4, 8971, A.CharacterMetrics_Tmd4, 9115, A.CharacterMetrics_pUq, 9116, A.CharacterMetrics_4961, 9117, A.CharacterMetrics_pUq, 9118, A.CharacterMetrics_pUq, 9119, A.CharacterMetrics_4961, 9120, A.CharacterMetrics_pUq, 9121, A.CharacterMetrics_pUq0, 9122, A.CharacterMetrics_3Hx0, 9123, A.CharacterMetrics_pUq0, 9124, A.CharacterMetrics_pUq0, 9125, A.CharacterMetrics_3Hx0, 9126, A.CharacterMetrics_pUq0, 9127, A.CharacterMetrics_Uvd, 9128, A.CharacterMetrics_kzH6, 9129, A.CharacterMetrics_jDc, 9130, A.CharacterMetrics_FQL, 9131, A.CharacterMetrics_Uvd, 9132, A.CharacterMetrics_kzH6, 9133, A.CharacterMetrics_jDc, 9143, A.CharacterMetrics_RZM, 10216, A.CharacterMetrics_Tmd2, 10217, A.CharacterMetrics_Tmd2, 57344, A.CharacterMetrics_iX5, 57345, A.CharacterMetrics_iX5, 57680, A.CharacterMetrics_QyK0, 57681, A.CharacterMetrics_QyK0, 57682, A.CharacterMetrics_QyK0, 57683, A.CharacterMetrics_QyK0], type$.GeneralConstantMap_int_CharacterMetrics);
    A.CharacterMetrics_0_0_0_01 = new B.CharacterMetrics(0, 0, 0, 0);
    A.CharacterMetrics_I0N = new B.CharacterMetrics(0, 0.61111, 0, 0);
    A.CharacterMetrics_e8D = new B.CharacterMetrics(0.08333, 0.69444, 0, 0);
    A.CharacterMetrics_GW9 = new B.CharacterMetrics(0, 0.52083, 0, 0);
    A.CharacterMetrics_9wo = new B.CharacterMetrics(-0.08056, 0.53055, 0, 0);
    A.CharacterMetrics_HaH = new B.CharacterMetrics(0.13889, 0.125, 0, 0);
    A.CharacterMetrics_KR0 = new B.CharacterMetrics(0, 0.125, 0, 0);
    A.CharacterMetrics_Nyz17 = new B.CharacterMetrics(0, 0.43056, 0, 0);
    A.CharacterMetrics_03I = new B.CharacterMetrics(0.13889, 0.43056, 0, 0);
    A.CharacterMetrics_xre = new B.CharacterMetrics(-0.05556, 0.55556, 0, 0);
    A.CharacterMetrics_PHW = new B.CharacterMetrics(-0.19549, 0.41562, 0, 0);
    A.CharacterMetrics_UgO = new B.CharacterMetrics(0.13889, 0.61111, 0, 0);
    A.CharacterMetrics_bcX = new B.CharacterMetrics(0.09514, 0, 0, 0);
    A.CharacterMetrics_d8G = new B.CharacterMetrics(0.22222, 0.43056, 0, 0);
    A.CharacterMetrics_d3b = new B.CharacterMetrics(0.22222, 0.61111, 0, 0);
    A.CharacterMetrics_6rJ = new B.CharacterMetrics(0, 0.55358, 0, 0);
    A.CharacterMetrics_29G = new B.CharacterMetrics(0.19445, 0, 0, 0);
    A.CharacterMetrics_BDh = new B.CharacterMetrics(0, 0.56597, 0, 0);
    A.CharacterMetrics_fEG = new B.CharacterMetrics(0, 0.56555, 0, 0);
    A.CharacterMetrics_JR8 = new B.CharacterMetrics(0.11111, 0.21944, 0, 0);
    A.Map_jFnux = new C.GeneralConstantMap([32, A.CharacterMetrics_0_0_0_01, 33, A.CharacterMetrics_I0N, 34, A.CharacterMetrics_I0N, 35, A.CharacterMetrics_I0N, 36, A.CharacterMetrics_e8D, 37, A.CharacterMetrics_e8D, 38, A.CharacterMetrics_I0N, 39, A.CharacterMetrics_I0N, 40, A.CharacterMetrics_e8D, 41, A.CharacterMetrics_e8D, 42, A.CharacterMetrics_GW9, 43, A.CharacterMetrics_9wo, 44, A.CharacterMetrics_HaH, 45, A.CharacterMetrics_9wo, 46, A.CharacterMetrics_KR0, 47, A.CharacterMetrics_e8D, 48, A.CharacterMetrics_I0N, 49, A.CharacterMetrics_I0N, 50, A.CharacterMetrics_I0N, 51, A.CharacterMetrics_I0N, 52, A.CharacterMetrics_I0N, 53, A.CharacterMetrics_I0N, 54, A.CharacterMetrics_I0N, 55, A.CharacterMetrics_I0N, 56, A.CharacterMetrics_I0N, 57, A.CharacterMetrics_I0N, 58, A.CharacterMetrics_Nyz17, 59, A.CharacterMetrics_03I, 60, A.CharacterMetrics_xre, 61, A.CharacterMetrics_PHW, 62, A.CharacterMetrics_xre, 63, A.CharacterMetrics_I0N, 64, A.CharacterMetrics_I0N, 65, A.CharacterMetrics_I0N, 66, A.CharacterMetrics_I0N, 67, A.CharacterMetrics_I0N, 68, A.CharacterMetrics_I0N, 69, A.CharacterMetrics_I0N, 70, A.CharacterMetrics_I0N, 71, A.CharacterMetrics_I0N, 72, A.CharacterMetrics_I0N, 73, A.CharacterMetrics_I0N, 74, A.CharacterMetrics_I0N, 75, A.CharacterMetrics_I0N, 76, A.CharacterMetrics_I0N, 77, A.CharacterMetrics_I0N, 78, A.CharacterMetrics_I0N, 79, A.CharacterMetrics_I0N, 80, A.CharacterMetrics_I0N, 81, A.CharacterMetrics_UgO, 82, A.CharacterMetrics_I0N, 83, A.CharacterMetrics_I0N, 84, A.CharacterMetrics_I0N, 85, A.CharacterMetrics_I0N, 86, A.CharacterMetrics_I0N, 87, A.CharacterMetrics_I0N, 88, A.CharacterMetrics_I0N, 89, A.CharacterMetrics_I0N, 90, A.CharacterMetrics_I0N, 91, A.CharacterMetrics_e8D, 92, A.CharacterMetrics_e8D, 93, A.CharacterMetrics_e8D, 94, A.CharacterMetrics_I0N, 95, A.CharacterMetrics_bcX, 96, A.CharacterMetrics_I0N, 97, A.CharacterMetrics_Nyz17, 98, A.CharacterMetrics_I0N, 99, A.CharacterMetrics_Nyz17, 100, A.CharacterMetrics_I0N, 101, A.CharacterMetrics_Nyz17, 102, A.CharacterMetrics_I0N, 103, A.CharacterMetrics_d8G, 104, A.CharacterMetrics_I0N, 105, A.CharacterMetrics_I0N, 106, A.CharacterMetrics_d3b, 107, A.CharacterMetrics_I0N, 108, A.CharacterMetrics_I0N, 109, A.CharacterMetrics_Nyz17, 110, A.CharacterMetrics_Nyz17, 111, A.CharacterMetrics_Nyz17, 112, A.CharacterMetrics_d8G, 113, A.CharacterMetrics_d8G, 114, A.CharacterMetrics_Nyz17, 115, A.CharacterMetrics_Nyz17, 116, A.CharacterMetrics_6rJ, 117, A.CharacterMetrics_Nyz17, 118, A.CharacterMetrics_Nyz17, 119, A.CharacterMetrics_Nyz17, 120, A.CharacterMetrics_Nyz17, 121, A.CharacterMetrics_d8G, 122, A.CharacterMetrics_Nyz17, 123, A.CharacterMetrics_e8D, 124, A.CharacterMetrics_e8D, 125, A.CharacterMetrics_e8D, 126, A.CharacterMetrics_I0N, 127, A.CharacterMetrics_I0N, 160, A.CharacterMetrics_0_0_0_01, 176, A.CharacterMetrics_I0N, 184, A.CharacterMetrics_29G, 305, A.CharacterMetrics_Nyz17, 567, A.CharacterMetrics_d8G, 711, A.CharacterMetrics_BDh, 713, A.CharacterMetrics_fEG, 714, A.CharacterMetrics_I0N, 715, A.CharacterMetrics_I0N, 728, A.CharacterMetrics_I0N, 730, A.CharacterMetrics_I0N, 770, A.CharacterMetrics_I0N, 771, A.CharacterMetrics_I0N, 776, A.CharacterMetrics_I0N, 915, A.CharacterMetrics_I0N, 916, A.CharacterMetrics_I0N, 920, A.CharacterMetrics_I0N, 923, A.CharacterMetrics_I0N, 926, A.CharacterMetrics_I0N, 928, A.CharacterMetrics_I0N, 931, A.CharacterMetrics_I0N, 933, A.CharacterMetrics_I0N, 934, A.CharacterMetrics_I0N, 936, A.CharacterMetrics_I0N, 937, A.CharacterMetrics_I0N, 8216, A.CharacterMetrics_I0N, 8217, A.CharacterMetrics_I0N, 8242, A.CharacterMetrics_I0N, 9251, A.CharacterMetrics_JR8], type$.GeneralConstantMap_int_CharacterMetrics);
    A.Map_uvILB = new C.ConstantStringMap(A.Object_lwg, [A.Map_AQWi1, A.Map_lyvP9, A.Map_yJz2H, A.Map_JckB2, A.Map_F3AqH, A.Map_YJCUq, A.Map_SJfYb, A.Map_c3uZN, A.Map_c3GaC, A.Map_8fPR5, A.Map_uKL2n, A.Map_uKsm0, A.Map_UXc7q, A.Map_BZr4s, A.Map_OO0fg, A.Map_1nFCo, A.Map_rCPmE, A.Map_jFnux], C.findType("ConstantStringMap<String,Map<int,CharacterMetrics>>"));
    A.List_array_darray = C._setArrayType(makeConstList(["array", "darray"]), type$.JSArray_String);
    A.List_z9r = C._setArrayType(makeConstList(["matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix"]), type$.JSArray_String);
    A.List_smallmatrix = C._setArrayType(makeConstList(["smallmatrix"]), type$.JSArray_String);
    A.List_subarray = C._setArrayType(makeConstList(["subarray"]), type$.JSArray_String);
    A.EnvSpec__arrayHandler = new B.EnvSpec(B.array___arrayHandler$closure());
    A.EnvSpec__matrixHandler = new B.EnvSpec(B.array___matrixHandler$closure());
    A.EnvSpec__smallMatrixHandler = new B.EnvSpec(B.array___smallMatrixHandler$closure());
    A.EnvSpec__subArrayHandler = new B.EnvSpec(B.array___subArrayHandler$closure());
    A.Map_x0wTk = new C.GeneralConstantMap([A.List_array_darray, A.EnvSpec__arrayHandler, A.List_z9r, A.EnvSpec__matrixHandler, A.List_smallmatrix, A.EnvSpec__smallMatrixHandler, A.List_subarray, A.EnvSpec__subArrayHandler], type$.GeneralConstantMap_of_List_String_and_EnvSpec);
    A.Object_s5A = {"\u220f": 0, "\u2210": 1, "\u2211": 2, "\u22c0": 3, "\u22c1": 4, "\u22c2": 5, "\u22c3": 6, "\u2a00": 7, "\u2a01": 8, "\u2a02": 9, "\u2a04": 10, "\u2a06": 11};
    A.Map_xHZD8 = new C.ConstantStringMap(A.Object_s5A, ["\\prod", "\\coprod", "\\sum", "\\bigwedge", "\\bigvee", "\\bigcap", "\\bigcup", "\\bigodot", "\\bigoplus", "\\bigotimes", "\\biguplus", "\\bigsqcup"], type$.ConstantStringMap_String_String);
    A.Measurement_3_Unit_14 = new B.Measurement(3, A.Unit_14);
    A.Map_DNF5Z = new C.GeneralConstantMap([A.AtomType_1, A.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_s3IGj = new C.GeneralConstantMap([A.AtomType_0, A.Measurement_3_Unit_14, A.AtomType_1, A.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_empty10 = new C.ConstantStringMap(D.Object_empty, [], C.findType("ConstantStringMap<AtomType,Measurement>"));
    A.Map_xSVzb = new C.GeneralConstantMap([A.AtomType_0, A.Map_DNF5Z, A.AtomType_1, A.Map_s3IGj, A.AtomType_2, A.Map_empty10, A.AtomType_3, A.Map_empty10, A.AtomType_4, A.Map_empty10, A.AtomType_5, A.Map_DNF5Z, A.AtomType_6, A.Map_empty10, A.AtomType_7, A.Map_DNF5Z, A.AtomType_8, A.Map_empty10], type$.GeneralConstantMap_of_AtomType_and_Map_AtomType_Measurement);
    A.Measurement_4_Unit_14 = new B.Measurement(4, A.Unit_14);
    A.Measurement_5_Unit_14 = new B.Measurement(5, A.Unit_14);
    A.Map_g10WG = new C.GeneralConstantMap([A.AtomType_1, A.Measurement_3_Unit_14, A.AtomType_2, A.Measurement_4_Unit_14, A.AtomType_3, A.Measurement_5_Unit_14, A.AtomType_7, A.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_72gdL = new C.GeneralConstantMap([A.AtomType_0, A.Measurement_3_Unit_14, A.AtomType_1, A.Measurement_3_Unit_14, A.AtomType_3, A.Measurement_5_Unit_14, A.AtomType_7, A.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_DsyTR = new C.GeneralConstantMap([A.AtomType_0, A.Measurement_4_Unit_14, A.AtomType_1, A.Measurement_4_Unit_14, A.AtomType_4, A.Measurement_4_Unit_14, A.AtomType_7, A.Measurement_4_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_Dslf8 = new C.GeneralConstantMap([A.AtomType_0, A.Measurement_5_Unit_14, A.AtomType_1, A.Measurement_5_Unit_14, A.AtomType_4, A.Measurement_5_Unit_14, A.AtomType_7, A.Measurement_5_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_TquCC = new C.GeneralConstantMap([A.AtomType_0, A.Measurement_3_Unit_14, A.AtomType_1, A.Measurement_3_Unit_14, A.AtomType_3, A.Measurement_5_Unit_14, A.AtomType_4, A.Measurement_3_Unit_14, A.AtomType_5, A.Measurement_3_Unit_14, A.AtomType_6, A.Measurement_3_Unit_14, A.AtomType_7, A.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_brsjQ = new C.GeneralConstantMap([A.AtomType_0, A.Measurement_3_Unit_14, A.AtomType_1, A.Measurement_3_Unit_14, A.AtomType_2, A.Measurement_4_Unit_14, A.AtomType_3, A.Measurement_5_Unit_14, A.AtomType_4, A.Measurement_3_Unit_14, A.AtomType_6, A.Measurement_3_Unit_14, A.AtomType_7, A.Measurement_3_Unit_14], type$.GeneralConstantMap_AtomType_Measurement);
    A.Map_xSiqr = new C.GeneralConstantMap([A.AtomType_0, A.Map_g10WG, A.AtomType_1, A.Map_72gdL, A.AtomType_2, A.Map_DsyTR, A.AtomType_3, A.Map_Dslf8, A.AtomType_4, A.Map_empty10, A.AtomType_5, A.Map_g10WG, A.AtomType_6, A.Map_TquCC, A.AtomType_7, A.Map_brsjQ, A.AtomType_8, A.Map_empty10], type$.GeneralConstantMap_of_AtomType_and_Map_AtomType_Measurement);
    A.List_gku = C._setArrayType(makeConstList(["\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overleftharpoon", "\\overrightharpoon", "\\overline"]), type$.JSArray_String);
    A.List_Txf = C._setArrayType(makeConstList(["\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\r", "\\H", "\\v"]), type$.JSArray_String);
    A.List_ROh = C._setArrayType(makeConstList(["\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\utilde", "\\underline"]), type$.JSArray_String);
    A.List_RPo = C._setArrayType(makeConstList(["\\xleftarrow", "\\xrightarrow", "\\xLeftarrow", "\\xRightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xrightharpoondown", "\\xrightharpoonup", "\\xleftharpoondown", "\\xleftharpoonup", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xlongequal", "\\xtwoheadrightarrow", "\\xtwoheadleftarrow", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium"]), type$.JSArray_String);
    A.List_ZU2 = C._setArrayType(makeConstList(["\\hline", "\\hdashline"]), type$.JSArray_String);
    A.List_ADQ = C._setArrayType(makeConstList(["\\nobreak", "\\allowbreak"]), type$.JSArray_String);
    A.List_Wqc = C._setArrayType(makeConstList(["\\@char"]), type$.JSArray_String);
    A.List_4gu = C._setArrayType(makeConstList(["\\textcolor"]), type$.JSArray_String);
    A.List_err = C._setArrayType(makeConstList(["\\color"]), type$.JSArray_String);
    A.List_RaS = C._setArrayType(makeConstList(["\\cr", "\\newline"]), type$.JSArray_String);
    A.List_PP9 = C._setArrayType(makeConstList(["\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg"]), type$.JSArray_String);
    A.List_CW7 = C._setArrayType(makeConstList(["\\right"]), type$.JSArray_String);
    A.List_LmN = C._setArrayType(makeConstList(["\\left"]), type$.JSArray_String);
    A.List_ma7 = C._setArrayType(makeConstList(["\\middle"]), type$.JSArray_String);
    A.List_B8N = C._setArrayType(makeConstList(["\\colorbox"]), type$.JSArray_String);
    A.List_TFB = C._setArrayType(makeConstList(["\\fcolorbox"]), type$.JSArray_String);
    A.List_VSU = C._setArrayType(makeConstList(["\\fbox"]), type$.JSArray_String);
    A.List_MxR = C._setArrayType(makeConstList(["\\cancel", "\\bcancel", "\\xcancel", "\\sout"]), type$.JSArray_String);
    A.List_k7K = C._setArrayType(makeConstList(["\\begin", "\\end"]), type$.JSArray_String);
    A.List_LoD = C._setArrayType(makeConstList(["\\mathrm", "\\mathit", "\\mathbf", "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", "\\Bbb", "\\bold", "\\frak"]), type$.JSArray_String);
    A.List_YOx = C._setArrayType(makeConstList(["\\boldsymbol", "\\bm"]), type$.JSArray_String);
    A.List_5CW = C._setArrayType(makeConstList(["\\rm", "\\sf", "\\tt", "\\bf", "\\it", "\\cal"]), type$.JSArray_String);
    A.List_QJU = C._setArrayType(makeConstList(["\\cfrac", "\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac", "\\\\bracefrac", "\\\\brackfrac"]), type$.JSArray_String);
    A.List_LZ2 = C._setArrayType(makeConstList(["\\over", "\\choose", "\\atop", "\\brace", "\\brack"]), type$.JSArray_String);
    A.List_Rbh = C._setArrayType(makeConstList(["\\genfrac"]), type$.JSArray_String);
    A.List_iaF = C._setArrayType(makeConstList(["\\above"]), type$.JSArray_String);
    A.List_Rya = C._setArrayType(makeConstList(["\\\\abovefrac"]), type$.JSArray_String);
    A.List_UEz = C._setArrayType(makeConstList(["\\overbrace", "\\underbrace"]), type$.JSArray_String);
    A.List_xwf = C._setArrayType(makeConstList(["\\kern", "\\mkern", "\\hskip", "\\mskip"]), type$.JSArray_String);
    A.List_F2C = C._setArrayType(makeConstList(["\\(", "$"]), type$.JSArray_String);
    A.List_NPE = C._setArrayType(makeConstList(["\\)", "\\]"]), type$.JSArray_String);
    A.List_ZCD = C._setArrayType(makeConstList(["\\mathop", "\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner"]), type$.JSArray_String);
    A.List_C5i = C._setArrayType(makeConstList(["\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "\u220f", "\u2210", "\u2211", "\u22c0", "\u22c1", "\u22c2", "\u22c3", "\u2a00", "\u2a01", "\u2a02", "\u2a04", "\u2a06"]), type$.JSArray_String);
    A.List_qLh = C._setArrayType(makeConstList(["\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th"]), type$.JSArray_String);
    A.List_fmF = C._setArrayType(makeConstList(["\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup"]), type$.JSArray_String);
    A.List_KkM = C._setArrayType(makeConstList(["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "\u222b", "\u222c", "\u222d", "\u222e", "\u222f", "\u2230"]), type$.JSArray_String);
    A.List_mms = C._setArrayType(makeConstList(["\\operatorname", "\\operatorname*"]), type$.JSArray_String);
    A.List_r76 = C._setArrayType(makeConstList(["\\phantom", "\\hphantom", "\\vphantom"]), type$.JSArray_String);
    A.List_BRF = C._setArrayType(makeConstList(["\\raisebox"]), type$.JSArray_String);
    A.List_1eA = C._setArrayType(makeConstList(["\\rule"]), type$.JSArray_String);
    A.List_kij = C._setArrayType(makeConstList(["\\sqrt"]), type$.JSArray_String);
    A.List_6bH = C._setArrayType(makeConstList(["\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle"]), type$.JSArray_String);
    A.List_8hl = C._setArrayType(makeConstList(["\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textbf", "\\textmd", "\\textit", "\\textup"]), type$.JSArray_String);
    A.List_di4 = C._setArrayType(makeConstList(["\\stackrel", "\\overset", "\\underset"]), type$.JSArray_String);
    A.FunctionSpec_4Ls = new B.FunctionSpec(1, false, true, false, B.katex_base___accentHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_u4Y = new B.FunctionSpec(1, true, false, false, B.katex_base___textAccentHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_inf = new B.FunctionSpec(1, false, true, false, B.katex_base___accentUnderHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_wSn = new B.FunctionSpec(1, false, true, false, B.katex_base___arrowHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_9Uy = new B.FunctionSpec(1, true, true, false, B.katex_base___throwExceptionHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_Pvt = new B.FunctionSpec(1, false, true, false, B.katex_base___breakHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_uya = new B.FunctionSpec(1, true, true, false, B.katex_base___charHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_zof = new B.FunctionSpec(3, true, true, false, B.katex_base___textcolorHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_brx = new B.FunctionSpec(3, true, true, false, B.katex_base___colorHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_cKQ = new B.FunctionSpec(1, true, true, false, B.katex_base___crHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_P2q = new B.FunctionSpec(1, false, true, false, B.katex_base___delimSizeHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_ykJ = new B.FunctionSpec(1, false, true, false, B.katex_base___rightHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_Tdv = new B.FunctionSpec(1, false, true, false, B.katex_base___leftHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_25S = new B.FunctionSpec(1, false, true, false, B.katex_base___middleHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_BjH = new B.FunctionSpec(3, true, true, false, B.katex_base___colorboxHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_cLF = new B.FunctionSpec(3, true, true, false, B.katex_base___fcolorboxHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_tAL = new B.FunctionSpec(1, true, true, false, B.katex_base___fboxHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_WmQ = new B.FunctionSpec(1, false, true, false, B.katex_base___cancelHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_ad1 = new B.FunctionSpec(1, false, true, false, B.katex_base___enviromentHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_k3h = new B.FunctionSpec(2, false, true, false, B.katex_base___fontHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_3cC = new B.FunctionSpec(2, false, true, false, B.katex_base___boldSymbolHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_jw9 = new B.FunctionSpec(1, true, true, false, B.katex_base___textFontHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_2WJ = new B.FunctionSpec(2, false, true, false, B.katex_base___fracHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_Tig = new B.FunctionSpec(1, false, true, true, B.katex_base___overHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_EJ7 = new B.FunctionSpec(6, false, true, false, B.katex_base___genfracHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_Anv = new B.FunctionSpec(1, false, true, true, B.katex_base___aboveHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_p6s = new B.FunctionSpec(1, false, true, false, B.katex_base___aboveFracHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_pZP = new B.FunctionSpec(1, false, true, false, B.katex_base___horizBraceHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_equ = new B.FunctionSpec(1, true, true, false, B.katex_base___kernHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_DVM = new B.FunctionSpec(1, true, false, false, B.katex_base___mathLeftHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_dI8 = new B.FunctionSpec(1, true, false, false, B.katex_base___mathRightHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_4Wz = new B.FunctionSpec(1, false, true, false, B.katex_base___mclassHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_4RE = new B.FunctionSpec(1, false, true, false, B.katex_base___bigOpHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_yvs = new B.FunctionSpec(1, false, true, false, B.katex_base___mathFunctionHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_p2o = new B.FunctionSpec(1, false, true, false, B.katex_base___mathLimitsHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_pox = new B.FunctionSpec(1, false, true, false, B.katex_base___integralHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_Upa = new B.FunctionSpec(1, false, true, false, B.katex_base___operatorNameHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_mBZ = new B.FunctionSpec(1, true, true, false, B.katex_base___phantomHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_hdl = new B.FunctionSpec(1, true, true, false, B.katex_base___raiseBoxHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_2Ab = new B.FunctionSpec(1, false, true, false, B.katex_base___ruleHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_qwr = new B.FunctionSpec(1, true, true, false, B.katex_base___sizingHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_Ime = new B.FunctionSpec(1, false, true, false, B.katex_base___sqrtHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_IkB = new B.FunctionSpec(1, true, true, false, B.katex_base___stylingHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_mB7 = new B.FunctionSpec(2, true, true, false, B.katex_base___textHandler$closure(), type$.FunctionSpec_GreenNode);
    A.FunctionSpec_S6H = new B.FunctionSpec(1, false, true, false, B.katex_base___underOverHandler$closure(), type$.FunctionSpec_GreenNode);
    A.Map_yHnJl = new C.GeneralConstantMap([A.List_gku, A.FunctionSpec_4Ls, A.List_Txf, A.FunctionSpec_u4Y, A.List_ROh, A.FunctionSpec_inf, A.List_RPo, A.FunctionSpec_wSn, A.List_ZU2, A.FunctionSpec_9Uy, A.List_ADQ, A.FunctionSpec_Pvt, A.List_Wqc, A.FunctionSpec_uya, A.List_4gu, A.FunctionSpec_zof, A.List_err, A.FunctionSpec_brx, A.List_RaS, A.FunctionSpec_cKQ, A.List_PP9, A.FunctionSpec_P2q, A.List_CW7, A.FunctionSpec_ykJ, A.List_LmN, A.FunctionSpec_Tdv, A.List_ma7, A.FunctionSpec_25S, A.List_B8N, A.FunctionSpec_BjH, A.List_TFB, A.FunctionSpec_cLF, A.List_VSU, A.FunctionSpec_tAL, A.List_MxR, A.FunctionSpec_WmQ, A.List_k7K, A.FunctionSpec_ad1, A.List_LoD, A.FunctionSpec_k3h, A.List_YOx, A.FunctionSpec_3cC, A.List_5CW, A.FunctionSpec_jw9, A.List_QJU, A.FunctionSpec_2WJ, A.List_LZ2, A.FunctionSpec_Tig, A.List_Rbh, A.FunctionSpec_EJ7, A.List_iaF, A.FunctionSpec_Anv, A.List_Rya, A.FunctionSpec_p6s, A.List_UEz, A.FunctionSpec_pZP, A.List_xwf, A.FunctionSpec_equ, A.List_F2C, A.FunctionSpec_DVM, A.List_NPE, A.FunctionSpec_dI8, A.List_ZCD, A.FunctionSpec_4Wz, A.List_C5i, A.FunctionSpec_4RE, A.List_qLh, A.FunctionSpec_yvs, A.List_fmF, A.FunctionSpec_p2o, A.List_KkM, A.FunctionSpec_pox, A.List_mms, A.FunctionSpec_Upa, A.List_r76, A.FunctionSpec_mBZ, A.List_BRF, A.FunctionSpec_hdl, A.List_1eA, A.FunctionSpec_2Ab, A.List_RJL, A.FunctionSpec_qwr, A.List_kij, A.FunctionSpec_Ime, A.List_6bH, A.FunctionSpec_IkB, A.List_8hl, A.FunctionSpec_mB7, A.List_di4, A.FunctionSpec_S6H], type$.GeneralConstantMap_of_List_String_and_FunctionSpec_GreenNode);
    A.Object_SUj = {"\xc5": 0, "\xc7": 1, "\xd0": 2, "\xde": 3, "\xe5": 4, "\xe7": 5, "\xf0": 6, "\xfe": 7, "\u0410": 8, "\u0411": 9, "\u0412": 10, "\u0413": 11, "\u0414": 12, "\u0415": 13, "\u0416": 14, "\u0417": 15, "\u0418": 16, "\u0419": 17, "\u041a": 18, "\u041b": 19, "\u041c": 20, "\u041d": 21, "\u041e": 22, "\u041f": 23, "\u0420": 24, "\u0421": 25, "\u0422": 26, "\u0423": 27, "\u0424": 28, "\u0425": 29, "\u0426": 30, "\u0427": 31, "\u0428": 32, "\u0429": 33, "\u042a": 34, "\u042b": 35, "\u042c": 36, "\u042d": 37, "\u042e": 38, "\u042f": 39, "\u0430": 40, "\u0431": 41, "\u0432": 42, "\u0433": 43, "\u0434": 44, "\u0435": 45, "\u0436": 46, "\u0437": 47, "\u0438": 48, "\u0439": 49, "\u043a": 50, "\u043b": 51, "\u043c": 52, "\u043d": 53, "\u043e": 54, "\u043f": 55, "\u0440": 56, "\u0441": 57, "\u0442": 58, "\u0443": 59, "\u0444": 60, "\u0445": 61, "\u0446": 62, "\u0447": 63, "\u0448": 64, "\u0449": 65, "\u044a": 66, "\u044b": 67, "\u044c": 68, "\u044d": 69, "\u044e": 70, "\u044f": 71};
    A.Map_yfgyh = new C.ConstantStringMap(A.Object_SUj, ["A", "C", "D", "o", "a", "c", "d", "o", "A", "B", "B", "F", "A", "E", "K", "3", "N", "N", "K", "N", "M", "H", "O", "N", "P", "C", "T", "y", "O", "X", "U", "h", "W", "W", "B", "X", "B", "3", "X", "R", "a", "b", "a", "r", "y", "e", "m", "e", "n", "n", "n", "n", "m", "n", "o", "n", "p", "c", "o", "y", "b", "x", "n", "n", "w", "w", "a", "m", "a", "e", "m", "r"], type$.ConstantStringMap_String_String);
    A.Object_UBn = {"\u2190": 0, "\u2192": 1, "\u2194": 2, "\u21d0": 3, "\u21d2": 4, "\u21d4": 5, "\u2208": 6, "\u220b": 7, "\u2223": 8, "\u2225": 9, "\u223c": 10, "~": 11, "\u2243": 12, "\u2245": 13, "\u2248": 14, "\u224d": 15, "=": 16, "\u2261": 17, "<": 18, ">": 19, "\u2264": 20, "\u2265": 21, "\u2272": 22, "\u2273": 23, "\u2276": 24, "\u2277": 25, "\u227a": 26, "\u227b": 27, "\u2282": 28, "\u2283": 29, "\u2286": 30, "\u2287": 31, "\u22a2": 32, "\u22a8": 33, "\u22a9": 34, "\u22ab": 35, "\u227c": 36, "\u227d": 37, "\u2291": 38, "\u2292": 39, "\u22b2": 40, "\u22b3": 41, "\u22b4": 42, "\u22b5": 43, "\u2203": 44};
    A.Map_z17bk = new C.ConstantStringMap(A.Object_UBn, ["\u219a", "\u219b", "\u21ae", "\u21cd", "\u21cf", "\u21ce", "\u2209", "\u220c", "\u2224", "\u2226", "\u2241", "\u2241", "\u2244", "\u2247", "\u2249", "\u226d", "\u2260", "\u2262", "\u226e", "\u226f", "\u2270", "\u2271", "\u2274", "\u2275", "\u2278", "\u2279", "\u2280", "\u2281", "\u2284", "\u2285", "\u2288", "\u2289", "\u22ac", "\u22ad", "\u22ae", "\u22af", "\u22e0", "\u22e1", "\u22e2", "\u22e3", "\u22ea", "\u22eb", "\u22ec", "\u22ed", "\u2204"], type$.ConstantStringMap_String_String);
    A.Object_v3P = {matrix: 0, pmatrix: 1, bmatrix: 2, Bmatrix: 3, vmatrix: 4, Vmatrix: 5};
    A.List_Qyp = C._setArrayType(makeConstList(["(", ")"]), type$.JSArray_String);
    A.List_gcW = C._setArrayType(makeConstList(["[", "]"]), type$.JSArray_String);
    A.List_FEJ = C._setArrayType(makeConstList(["{", "}"]), type$.JSArray_String);
    A.List_jME = C._setArrayType(makeConstList(["|", "|"]), type$.JSArray_String);
    A.List_Dl2 = C._setArrayType(makeConstList(["\u2223", "\u2223"]), type$.JSArray_String);
    A.Map_z9QPz = new C.ConstantStringMap(A.Object_v3P, [null, A.List_Qyp, A.List_gcW, A.List_FEJ, A.List_jME, A.List_Dl2], C.findType("ConstantStringMap<String,List<String>?>"));
    A.Object_0ph = {"\u222b": 0, "\u222c": 1, "\u222d": 2, "\u222e": 3, "\u222f": 4, "\u2230": 5};
    A.Map_zBg4B = new C.ConstantStringMap(A.Object_0ph, ["\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint"], type$.ConstantStringMap_String_String);
    A.MathStyleDiff_0 = new B.MathStyleDiff(0, "sub");
    A.MathStyleDiff_1 = new B.MathStyleDiff(1, "sup");
    A.MathStyleDiff_2 = new B.MathStyleDiff(2, "fracNum");
    A.MathStyleDiff_3 = new B.MathStyleDiff(3, "fracDen");
    A.MathStyleDiff_4 = new B.MathStyleDiff(4, "cramp");
    A.MathStyleDiff_5 = new B.MathStyleDiff(5, "text");
    A.MatrixSeparatorStyle_2 = new B.MatrixSeparatorStyle(2, "none");
    A.Measurement_0_Unit_0 = new B.Measurement(0, A.Unit_0);
    A.Measurement_5_Unit_0 = new B.Measurement(5, A.Unit_0);
    A.Measurement_83w = new B.Measurement(0.12, A.Unit_16);
    A.Offset_5ck = new C.Offset(2.6999999999999997, 8.1);
    A.Offset_5tR = new C.Offset(3.6, 9);
    A.Offset_9_9 = new C.Offset(9, 9);
    A.Offset_ATs = new C.Offset(14.4, 9);
    A.Offset_FK3 = new C.Offset(7.2, 12.6);
    A.Offset_R50 = new C.Offset(15.299999999999999, 4.5);
    A.OvalBorder_0SS = new B.OvalBorder(1, F.BorderSide_Ah5);
    A.PaintingStyle_00 = new B.PaintingStyle0(0, "fill");
    A.PaintingStyle_10 = new B.PaintingStyle0(1, "stroke");
    A.PathCommandType_0 = new B.PathCommandType(0, "move");
    A.PathCommandType_1 = new B.PathCommandType(1, "line");
    A.PathCommandType_2 = new B.PathCommandType(2, "cubic");
    A.PathFillType_00 = new B.PathFillType0(0, "nonZero");
    A.PathFillType_10 = new B.PathFillType0(1, "evenOdd");
    A.Point_0_0 = new B.Point(0, 0);
    A.XmlAttributeType_BDu = new B.XmlAttributeType('"', 1, "DOUBLE_QUOTE");
    A.Record2_wb7 = new C._Record_2("", A.XmlAttributeType_BDu);
    A.Rect_0_0_0_00 = new B.Rect0(0, 0, 0, 0);
    A.Rect_NUV0 = new B.Rect0(-1000000000, -1000000000, 1000000000, 1000000000);
    A.RenderingStrategy_0 = new B.RenderingStrategy(0, "raster");
    A.RenderingStrategy_1 = new B.RenderingStrategy(1, "picture");
    A.Set_1ZnLs = new C.ConstantStringSet(A.Object_s5A, 12, type$.ConstantStringSet_String);
    A.Object_ZC2 = {"\u27e8": 0, "\u27e9": 1, "/": 2};
    A.Set_6NNqz = new C.ConstantStringSet(A.Object_ZC2, 3, type$.ConstantStringSet_String);
    A.Set_APva8 = new C.GeneralConstantSet([A.AtomType_3, A.AtomType_5, A.AtomType_6, null], type$.GeneralConstantSet_nullable_AtomType);
    A.Object_PvY = {"\\acute": 0, "\\grave": 1, "\\ddot": 2, "\\tilde": 3, "\\bar": 4, "\\breve": 5, "\\check": 6, "\\hat": 7, "\\vec": 8, "\\dot": 9, "\\mathring": 10};
    A.Set_H6XGa = new C.ConstantStringSet(A.Object_PvY, 11, type$.ConstantStringSet_String);
    A.Object_1MX = {"writing-mode": 0, "glyph-orientation-vertical": 1, "glyph-orientation-horizontal": 2, direction: 3, "text-anchor": 4, "font-family": 5, "font-style": 6, "font-variant": 7, "font-weight": 8, "font-stretch": 9, "font-size": 10, "font-size-adjust": 11, font: 12, kerning: 13, "letter-spacing": 14, "word-spacing": 15, fill: 16, "fill-rule": 17, "fill-opacity": 18, stroke: 19, "stroke-width": 20, "stroke-linecap": 21, "stroke-linejoin": 22, "stroke-miterlimit": 23, "stroke-dasharray": 24, "stroke-dashoffset": 25, "stroke-opacity": 26, visibility: 27, "marker-start": 28, marker: 29, "color-interpolation": 30, "color-interpolation-filters": 31, "color-rendering": 32, "shape-rendering": 33, "text-rendering": 34, "image-rendering": 35, color: 36, "color-profile": 37, "clip-rule": 38, "pointer-events": 39, cursor: 40};
    A.Set_N2bSi = new C.ConstantStringSet(A.Object_1MX, 41, type$.ConstantStringSet_String);
    A.Object_zY8 = {widehat: 0, widecheck: 1, widetilde: 2, utilde: 3};
    A.Set_SjXog = new C.ConstantStringSet(A.Object_zY8, 4, type$.ConstantStringSet_String);
    A.Object_b2r = {"\u2259": 0, "\u225a": 1, "\u225b": 2, "\u225d": 3, "\u225e": 4, "\u225f": 5};
    A.Set_Vj9Rm = new C.ConstantStringSet(A.Object_b2r, 6, type$.ConstantStringSet_String);
    A.Object_X2P = {"\\widehat": 0, "\\widetilde": 1, "\\widecheck": 2};
    A.Set_hM5f1 = new C.ConstantStringSet(A.Object_X2P, 3, type$.ConstantStringSet_String);
    A.Set_ifAq1 = new C.GeneralConstantSet([A.AtomType_2, A.AtomType_4, A.AtomType_3, A.AtomType_1, A.AtomType_6, null], type$.GeneralConstantSet_nullable_AtomType);
    A.Object_JZj = {"\xc7": 0, "\xd0": 1, "\xde": 2, "\xe7": 3, "\xfe": 4};
    A.Set_jXWE3 = new C.ConstantStringSet(A.Object_JZj, 5, type$.ConstantStringSet_String);
    A.Object_4ba = {"\\relax": 0, "^": 1, _: 2, "\\limits": 3, "\\nolimits": 4};
    A.Set_oV20z = new C.ConstantStringSet(A.Object_4ba, 5, type$.ConstantStringSet_String);
    A.Object_0Y0 = {"}": 0, "\\endgroup": 1, "\\end": 2, "\\right": 3, "&": 4};
    A.Set_u2wkf = new C.ConstantStringSet(A.Object_0Y0, 5, type$.ConstantStringSet_String);
    A.Object_fFn = {"(": 0, ")": 1, "[": 2, "]": 3, "{": 4, "}": 5, "\u230a": 6, "\u230b": 7, "\u2308": 8, "\u2309": 9, "\u221a": 10};
    A.Set_yInQh = new C.ConstantStringSet(A.Object_fFn, 11, type$.ConstantStringSet_String);
    A.Size_18_18 = new C.Size(18, 18);
    A.Size_80_80 = new C.Size(80, 80);
    A.Spacer_null = new B.Spacer(null);
    A.Strict_1 = new B.Strict(1, "warn");
    A.Strict_3 = new B.Strict(3, "function");
    A.StrokeCap_00 = new B.StrokeCap0(0, "butt");
    A.StrokeCap_10 = new B.StrokeCap0(1, "round");
    A.StrokeCap_2 = new B.StrokeCap0(2, "square");
    A.StrokeJoin_00 = new B.StrokeJoin0(0, "miter");
    A.StrokeJoin_10 = new B.StrokeJoin0(1, "round");
    A.StrokeJoin_2 = new B.StrokeJoin0(2, "bevel");
    A.StrutStyle_ilT = new E.StrutStyle(null, null, null, null, null, null, null, null, null, null);
    A.SvgAttributes_781 = new B.SvgAttributes(A8.Map_empty11, null, null, A.ColorOrNone_false_null, null, null, A.AffineMatrix_qrl, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    A.SvgPathSegType_0 = new B.SvgPathSegType(0, "unknown");
    A.Strict_0 = new B.Strict(0, "ignore");
    A.TexParserSettings_Strict_0 = new B.TexParserSettings(A.Strict_0);
    A.TexParserSettings_Strict_1 = new B.TexParserSettings(A.Strict_1);
    A.TextDecorationStyle_0 = new B.TextDecorationStyle0(0, "solid");
    A.TextDecorationStyle_1 = new B.TextDecorationStyle0(1, "double");
    A.TextDecorationStyle_2 = new B.TextDecorationStyle0(2, "dotted");
    A.TextDecorationStyle_3 = new B.TextDecorationStyle0(3, "dashed");
    A.TextDecorationStyle_4 = new B.TextDecorationStyle0(4, "wavy");
    A.TextDecoration_00 = new B.TextDecoration0(0);
    A.TextDecoration_10 = new B.TextDecoration0(1);
    A.TextDecoration_20 = new B.TextDecoration0(2);
    A.TextDecoration_40 = new B.TextDecoration0(4);
    A.TextRange_0_m1 = new C.TextRange(0, -1);
    A.TextStyle_mI6 = new E.TextStyle(true, null, null, null, null, null, 0, null, null, null, null, null, 0, null, null, null, null, null, null, null, null, null, null, null, null, null);
    A.TextSpan_0ck = new E.TextSpan("\n ", null, D.C__DeferringMouseCursor, A.TextStyle_mI6);
    A.TextSpan_DuQ = new E.TextSpan(null, null, D.C__DeferringMouseCursor, null);
    A.TextStyle_HPw = new E.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, D.TextDecoration_4, null, null, null, null, null, null, null, null);
    A.Text_mo4 = new H.Text("This widget should not appear. It means one of FlutterMath's AST nodes forgot to handle the case for TransparentNodes", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    A.TileMode_00 = new B.TileMode0(0, "clamp");
    A.TileMode_10 = new B.TileMode0(1, "repeated");
    A.TileMode_20 = new B.TileMode0(2, "mirror");
    A.XmlAttributeType_Ugh = new B.XmlAttributeType("'", 0, "SINGLE_QUOTE");
    A.XmlNodeType_1 = new B.XmlNodeType(1, "CDATA");
    A.XmlNodeType_10 = new B.XmlNodeType(10, "PROCESSING");
    A.XmlNodeType_11 = new B.XmlNodeType(11, "TEXT");
    A.XmlNodeType_2 = new B.XmlNodeType(2, "COMMENT");
    A.XmlNodeType_3 = new B.XmlNodeType(3, "DECLARATION");
    A.XmlNodeType_4 = new B.XmlNodeType(4, "DOCUMENT_TYPE");
    A.XmlNodeType_7 = new B.XmlNodeType(7, "ELEMENT");
    A._CheckboxType_0 = new B._CheckboxType(0, "material");
    A._CurrentSection_0 = new B._CurrentSection(0, "size");
    A._CurrentSection_1 = new B._CurrentSection(1, "images");
    A._CurrentSection_2 = new B._CurrentSection(2, "shaders");
    A._CurrentSection_3 = new B._CurrentSection(3, "paints");
    A._CurrentSection_4 = new B._CurrentSection(4, "paths");
    A._CurrentSection_5 = new B._CurrentSection(5, "textPositions");
    A._CurrentSection_6 = new B._CurrentSection(6, "text");
    A._CurrentSection_7 = new B._CurrentSection(7, "commands");
    A._FracPos_0 = new B._FracPos(0, "numer");
    A._FracPos_1 = new B._FracPos(1, "denom");
    A._PathOffset_0_0 = new B._PathOffset(0, 0);
    A._RadioType_0 = new B._RadioType(0, "material");
    A._ScriptPos_0 = new B._ScriptPos(0, "base");
    A._ScriptPos_1 = new B._ScriptPos(1, "sub");
    A._ScriptPos_2 = new B._ScriptPos(2, "sup");
    A._ScriptPos_3 = new B._ScriptPos(3, "presub");
    A._ScriptPos_4 = new B._ScriptPos(4, "presup");
    A._SqrtPos_0 = new B._SqrtPos(0, "base");
    A._SqrtPos_1 = new B._SqrtPos(1, "ind");
    A._SqrtPos_2 = new B._SqrtPos(2, "surd");
  })();
  (function staticFields() {
    $.compactedCompositeSymbolTypes = C.LinkedHashMap_LinkedHashMap$_literal(["\u2237", A.AtomType_3, "\u2254", A.AtomType_3, "\u2255", A.AtomType_3, "\u2239", A.AtomType_3, "\u27e6", A.AtomType_4, "\u27e7", A.AtomType_5, "\u2983", A.AtomType_4, "\u2984", A.AtomType_5], type$.String, C.findType("AtomType"));
    $._environments = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.EnvSpec);
    $._pendingDecodes = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("BytesLoader"), C.findType("Completer<~>"));
    $._cachedUseHtmlRenderObject = null;
    $.RenderVectorGraphic__liveRasterCache = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("RasterKey"), C.findType("RasterData"));
    $._VectorGraphicWidgetState__livePictureCache = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("_PictureKey"), type$._PictureData);
    $._VectorGraphicWidgetState__pendingPictures = C.LinkedHashMap_LinkedHashMap$_empty(C.findType("_PictureKey"), C.findType("Future<_PictureData>"));
    $.SvgParser__kTextSizeMap = C.LinkedHashMap_LinkedHashMap$_literal(["xx-small", 10, "x-small", 12, "small", 14, "medium", 18, "large", 22, "x-large", 26, "xx-large", 32], type$.String, type$.double);
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "compactedCompositeSymbolSpacings", "$get$compactedCompositeSymbolSpacings", () => C.LinkedHashMap_LinkedHashMap$_literal(["\u2237", B.MeasurementExtOnNum_get_mu(-0.9), "\u2254", B.MeasurementExtOnNum_get_mu(-1.2), "\u2255", B.MeasurementExtOnNum_get_mu(-3.2), "\u2239", B.MeasurementExtOnNum_get_mu(-3.2), "\u27e6", B.MeasurementExtOnNum_get_mu(-3.2), "\u27e7", B.MeasurementExtOnNum_get_mu(-3.2), "\u2983", B.MeasurementExtOnNum_get_mu(-3.2), "\u2984", B.MeasurementExtOnNum_get_mu(-3.2)], type$.String, type$.Measurement));
    _lazyFinal($, "textFontMetrics", "$get$textFontMetrics", () => {
      var t1 = B.FontMetrics_fromMap(A.Map_1bfGT.map$2$1(0, new B.textFontMetrics_closure(), type$.String, type$.double));
      t1.toString;
      return t1;
    });
    _lazyFinal($, "scriptFontMetrics", "$get$scriptFontMetrics", () => {
      var t1 = B.FontMetrics_fromMap(A.Map_1bfGT.map$2$1(0, new B.scriptFontMetrics_closure(), type$.String, type$.double));
      t1.toString;
      return t1;
    });
    _lazyFinal($, "scriptscriptFontMetrics", "$get$scriptscriptFontMetrics", () => {
      var t1 = B.FontMetrics_fromMap(A.Map_1bfGT.map$2$1(0, new B.scriptscriptFontMetrics_closure(), type$.String, type$.double));
      t1.toString;
      return t1;
    });
    _lazyFinal($, "allBlocks", "$get$allBlocks", () => {
      var t1 = A.Map_h25Ly.get$entries(A.Map_h25Ly);
      return t1.expand$1$1(t1, new B.allBlocks_closure(), type$.List_int).toList$1$growable(0, false);
    });
    _lazyFinal($, "_environmentsEntries", "$get$_environmentsEntries", () => {
      var t1 = C.LinkedHashMap_LinkedHashMap$of(A.Map_x0wTk, type$.List_String, type$.EnvSpec);
      t1.addAll$1(0, A.Map_2fcbp);
      return t1;
    });
    _lazyFinal($, "functions", "$get$functions", () => {
      var t1 = C.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FunctionSpec_GreenNode);
      B.RegisterFunctionExt_registerFunctions(t1, A.Map_yHnJl);
      B.RegisterFunctionExt_registerFunctions(t1, A.Map_V9azN);
      B.RegisterFunctionExt_registerFunctions(t1, A.Map_fe18k);
      return t1;
    });
    _lazyFinal($, "_delimiterSymbols", "$get$_delimiterSymbols", () => D.JSArray_methods.map$1$1(A.List_U02, new B._delimiterSymbols_closure(), type$.TexSymbolConfig).toList$1$growable(0, false));
    _lazyFinal($, "controlWordWhitespaceRegex", "$get$controlWordWhitespaceRegex", () => C.RegExp_RegExp("^(\\\\[a-zA-Z@]+)[ \r\n\t]*$", true, false, false, false));
    _lazyFinal($, "combiningDiacriticalMarksEndRegex", "$get$combiningDiacriticalMarksEndRegex", () => C.RegExp_RegExp("[\u0300-\u036f]+$", true, false, false, false));
    _lazyFinal($, "Lexer_tokenRegex", "$get$Lexer_tokenRegex", () => C.RegExp_RegExp("([ \r\n\t]+)|([!-\\[\\]-\u2027\u202a-\ud7ff\uf900-\uffff][\u0300-\u036f]*|[\ud800-\udbff][\udc00-\udfff][\u0300-\u036f]*|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\operatorname\\*|\\\\[a-zA-Z@]+[ \r\n\t]*|\\\\[^\ud800-\udfff])", true, false, true, false));
    _lazyFinal($, "MacroExpansion__strippedRegex", "$get$MacroExpansion__strippedRegex", () => C.RegExp_RegExp("##", true, false, true, false));
    _lazyFinal($, "latexRaiseA", "$get$latexRaiseA", () => "0.20499900000000004em");
    _lazyFinal($, "builtinMacros", "$get$builtinMacros", () => {
      var _s15_ = "\\textregistered",
        _s6_ = "\\relax",
        _s9_ = "\\dblcolon",
        _s8_ = "\\eqcolon",
        _s9_0 = "\\coloneqq",
        _s9_1 = "\\eqqcolon",
        _s10_ = "\\Downarrow",
        _s8_0 = "\\Uparrow",
        _s10_0 = "\\mathbb{N}",
        _s10_1 = "\\mathbb{R}",
        _s10_2 = "\\mathbb{C}",
        _s15_0 = "\\leftrightarrow",
        _s15_1 = "\\Leftrightarrow",
        _s10_3 = "\\Leftarrow",
        _s11_ = "\\Rightarrow",
        _s33_ = "}{\\scriptstyle A}\\kern-.15em\\TeX}",
        t1 = B.MacroDefinition$(new B.builtinMacros_closure(), false),
        t2 = B.MacroDefinition$(new B.builtinMacros_closure0(), false),
        t3 = B.MacroDefinition$(new B.builtinMacros_closure1(), false),
        t4 = B.MacroDefinition$(new B.builtinMacros_closure2(), false),
        t5 = B.MacroDefinition$(new B.builtinMacros_closure3(), false),
        t6 = B.MacroDefinition$fromString("\\@ifnextchar *{\\@firstoftwo{#1}}"),
        t7 = B.MacroDefinition$(new B.builtinMacros_closure4(), false),
        t8 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure5()),
        t9 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure6()),
        t10 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure7()),
        t11 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure8()),
        t12 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure9()),
        t13 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure10()),
        t14 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure11()),
        t15 = B.MacroDefinition$fromString("{"),
        t16 = B.MacroDefinition$fromString("}"),
        t17 = B.MacroDefinition$fromString("`"),
        t18 = B.MacroDefinition$fromString("'"),
        t19 = B.MacroDefinition$fromString("\\mathscr{B}"),
        t20 = B.MacroDefinition$fromString("\\mathscr{E}"),
        t21 = B.MacroDefinition$fromString("\\mathscr{F}"),
        t22 = B.MacroDefinition$fromString("\\mathscr{H}"),
        t23 = B.MacroDefinition$fromString("\\mathscr{I}"),
        t24 = B.MacroDefinition$fromString("\\mathscr{L}"),
        t25 = B.MacroDefinition$fromString("\\mathscr{M}"),
        t26 = B.MacroDefinition$fromString("\\mathscr{R}"),
        t27 = B.MacroDefinition$fromString("\\mathfrak{C}"),
        t28 = B.MacroDefinition$fromString("\\mathfrak{H}"),
        t29 = B.MacroDefinition$fromString("\\mathfrak{Z}"),
        t30 = B.MacroDefinition$fromString("\\Bbb{k}"),
        t31 = B.MacroDefinition$fromString("\\cdotp"),
        t32 = B.MacroDefinition$fromString("\\neq"),
        t33 = B.MacroDefinition$fromString("\\neq"),
        t34 = B.MacroDefinition$fromString("\\notin"),
        t35 = B.MacroDefinition$fromString("\\perp"),
        t36 = B.MacroDefinition$fromString("\\mathclose{!\\mkern-0.8mu!}"),
        t37 = B.MacroDefinition$fromString("\\notni"),
        t38 = B.MacroDefinition$fromString("\\ulcorner"),
        t39 = B.MacroDefinition$fromString("\\urcorner"),
        t40 = B.MacroDefinition$fromString("\\llcorner"),
        t41 = B.MacroDefinition$fromString("\\lrcorner"),
        t42 = B.MacroDefinition$fromString("\\copyright"),
        t43 = B.MacroDefinition$fromString(_s15_),
        t44 = B.MacroDefinition$fromString(_s15_),
        t45 = B.MacroDefinition$fromString("\\@ulcorner"),
        t46 = B.MacroDefinition$fromString("\\@urcorner"),
        t47 = B.MacroDefinition$fromString("\\@llcorner"),
        t48 = B.MacroDefinition$fromString("\\@lrcorner"),
        t49 = B.MacroDefinition$fromString("\\mathord{\\varvdots\\rule{0pt}{15pt}}"),
        t50 = B.MacroDefinition$fromString("\\vdots"),
        t51 = B.MacroDefinition$fromString("\\mathit{\\Gamma}"),
        t52 = B.MacroDefinition$fromString("\\mathit{\\Delta}"),
        t53 = B.MacroDefinition$fromString("\\mathit{\\Theta}"),
        t54 = B.MacroDefinition$fromString("\\mathit{\\Lambda}"),
        t55 = B.MacroDefinition$fromString("\\mathit{\\Xi}"),
        t56 = B.MacroDefinition$fromString("\\mathit{\\Pi}"),
        t57 = B.MacroDefinition$fromString("\\mathit{\\Sigma}"),
        t58 = B.MacroDefinition$fromString("\\mathit{\\Upsilon}"),
        t59 = B.MacroDefinition$fromString("\\mathit{\\Phi}"),
        t60 = B.MacroDefinition$fromString("\\mathit{\\Psi}"),
        t61 = B.MacroDefinition$fromString("\\mathit{\\Omega}"),
        t62 = B.MacroDefinition$fromString("\\begin{subarray}{c}#1\\end{subarray}"),
        t63 = B.MacroDefinition$fromString("\\fbox{$\\displaystyle{#1}$}"),
        t64 = B.MacroDefinition$fromString("\\DOTSB\\;\\Longleftrightarrow\\;"),
        t65 = B.MacroDefinition$fromString("\\DOTSB\\;\\Longrightarrow\\;"),
        t66 = B.MacroDefinition$fromString("\\DOTSB\\;\\Longleftarrow\\;"),
        t67 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure12()),
        t68 = B.MacroDefinition$fromString("\\ldots"),
        t69 = B.MacroDefinition$fromString("\\ldots"),
        t70 = B.MacroDefinition$fromString("\\@cdots"),
        t71 = B.MacroDefinition$fromString("\\cdots"),
        t72 = B.MacroDefinition$fromString("\\cdots"),
        t73 = B.MacroDefinition$fromString("\\!\\cdots"),
        t74 = B.MacroDefinition$fromString("\\ldots\\,"),
        t75 = B.MacroDefinition$fromString(_s6_),
        t76 = B.MacroDefinition$fromString(_s6_),
        t77 = B.MacroDefinition$fromString(_s6_),
        t78 = B.MacroDefinition$fromString("\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"),
        t79 = B.MacroDefinition$fromString("\\tmspace+{3mu}{.1667em}"),
        t80 = B.MacroDefinition$fromString("\\,"),
        t81 = B.MacroDefinition$fromString("\\mskip{4mu}"),
        t82 = B.MacroDefinition$fromString("\\tmspace+{4mu}{.2222em}"),
        t83 = B.MacroDefinition$fromString("\\:"),
        t84 = B.MacroDefinition$fromString("\\tmspace+{5mu}{.2777em}"),
        t85 = B.MacroDefinition$fromString("\\;"),
        t86 = B.MacroDefinition$fromString("\\tmspace-{3mu}{.1667em}"),
        t87 = B.MacroDefinition$fromString("\\!"),
        t88 = B.MacroDefinition$fromString("\\tmspace-{4mu}{.2222em}"),
        t89 = B.MacroDefinition$fromString("\\tmspace-{5mu}{.277em}"),
        t90 = B.MacroDefinition$fromString("\\kern.5em "),
        t91 = B.MacroDefinition$fromString("\\hskip.5em\\relax"),
        t92 = B.MacroDefinition$fromString("\\hskip1em\\relax"),
        t93 = B.MacroDefinition$fromString("\\hskip2em\\relax"),
        t94 = B.MacroDefinition$fromString("\\@ifstar\\tag@literal\\tag@paren"),
        t95 = B.MacroDefinition$fromString("\\tag@literal{({#1})}"),
        t96 = B.MacroDefinition$fromCtxString(new B.builtinMacros_closure13()),
        t97 = B.MacroDefinition$fromString("\\mskip5mu\\mathbin{\\rm mod}\\mskip5mu"),
        t98 = B.MacroDefinition$fromString("\\allowbreak\\mkern8mu(#1)"),
        t99 = B.MacroDefinition$fromString("\\pod{{\\rm mod}\\mkern6mu#1}"),
        t100 = B.MacroDefinition$fromString("\\allowbreak\\mkern18mu{\\rm mod}\\,\\,#1"),
        t101 = B.MacroDefinition$fromString("\\newline"),
        t102 = B.MacroDefinition$fromString("\\textrm{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}"),
        t103 = $.$get$latexRaiseA();
      return C.LinkedHashMap_LinkedHashMap$_literal(["\\noexpand", t1, "\\expandafter", t2, "\\@firstoftwo", t3, "\\@secondoftwo", t4, "\\@ifnextchar", t5, "\\@ifstar", t6, "\\TextOrMath", t7, "\\char", t8, "\\newcommand", t9, "\\renewcommand", t10, "\\providecommand", t11, "\\message", t12, "\\errmessage", t13, "\\show", t14, "\\bgroup", t15, "\\egroup", t16, "\\lq", t17, "\\rq", t18, "\u212c", t19, "\u2130", t20, "\u2131", t21, "\u210b", t22, "\u2110", t23, "\u2112", t24, "\u2133", t25, "\u211b", t26, "\u212d", t27, "\u210c", t28, "\u2128", t29, "\\Bbbk", t30, "\xb7", t31, "\\ne", t32, "\u2260", t33, "\u2209", t34, "\u27c2", t35, "\u203c", t36, "\u220c", t37, "\u231c", t38, "\u231d", t39, "\u231e", t40, "\u231f", t41, "\xa9", t42, "\xae", t43, "\ufe0f", t44, "\\ulcorner", t45, "\\urcorner", t46, "\\llcorner", t47, "\\lrcorner", t48, "\\vdots", t49, "\u22ee", t50, "\\varGamma", t51, "\\varDelta", t52, "\\varTheta", t53, "\\varLambda", t54, "\\varXi", t55, "\\varPi", t56, "\\varSigma", t57, "\\varUpsilon", t58, "\\varPhi", t59, "\\varPsi", t60, "\\varOmega", t61, "\\substack", t62, "\\boxed", t63, "\\iff", t64, "\\implies", t65, "\\impliedby", t66, "\\dots", t67, "\\dotso", t68, "\\dotsc", t69, "\\cdots", t70, "\\dotsb", t71, "\\dotsm", t72, "\\dotsi", t73, "\\dotsx", t74, "\\DOTSI", t75, "\\DOTSB", t76, "\\DOTSX", t77, "\\tmspace", t78, "\\,", t79, "\\thinspace", t80, "\\>", t81, "\\:", t82, "\\medspace", t83, "\\;", t84, "\\thickspace", t85, "\\!", t86, "\\negthinspace", t87, "\\negmedspace", t88, "\\negthickspace", t89, "\\enspace", t90, "\\enskip", t91, "\\quad", t92, "\\qquad", t93, "\\tag", t94, "\\tag@paren", t95, "\\tag@literal", t96, "\\bmod", t97, "\\pod", t98, "\\pmod", t99, "\\mod", t100, "\\\\", t101, "\\TeX", t102, "\\LaTeX", B.MacroDefinition$fromString("\\textrm{L\\kern-.36em\\raisebox{" + t103 + _s33_), "\\KaTeX", B.MacroDefinition$fromString("\\textrm{K\\kern-.17em\\raisebox{" + t103 + _s33_), "\\hspace", B.MacroDefinition$fromString("\\hskip #1\\relax"), "\\ordinarycolon", B.MacroDefinition$fromString(":"), "\\vcentcolon", B.MacroDefinition$fromString("\\mathrel{\\mathop\\ordinarycolon}"), "\u2237", B.MacroDefinition$fromString(_s9_), "\u2239", B.MacroDefinition$fromString(_s8_), "\u2254", B.MacroDefinition$fromString(_s9_0), "\u2255", B.MacroDefinition$fromString(_s9_1), "\\ratio", B.MacroDefinition$fromString("\\vcentcolon"), "\\coloncolon", B.MacroDefinition$fromString(_s9_), "\\colonequals", B.MacroDefinition$fromString(_s9_0), "\\equalscolon", B.MacroDefinition$fromString(_s9_1), "\\minuscolon", B.MacroDefinition$fromString(_s8_), "\\limsup", B.MacroDefinition$fromString("\\DOTSB\\operatorname*{lim\\,sup}"), "\\liminf", B.MacroDefinition$fromString("\\DOTSB\\operatorname*{lim\\,inf}"), "\\darr", B.MacroDefinition$fromString("\\downarrow"), "\\dArr", B.MacroDefinition$fromString(_s10_), "\\Darr", B.MacroDefinition$fromString(_s10_), "\\lang", B.MacroDefinition$fromString("\\langle"), "\\rang", B.MacroDefinition$fromString("\\rangle"), "\\uarr", B.MacroDefinition$fromString("\\uparrow"), "\\uArr", B.MacroDefinition$fromString(_s8_0), "\\Uarr", B.MacroDefinition$fromString(_s8_0), "\\N", B.MacroDefinition$fromString(_s10_0), "\\R", B.MacroDefinition$fromString(_s10_1), "\\Z", B.MacroDefinition$fromString("\\mathbb{Z}"), "\\alef", B.MacroDefinition$fromString("\\aleph"), "\\alefsym", B.MacroDefinition$fromString("\\aleph"), "\\Alpha", B.MacroDefinition$fromString("\\mathrm{A}"), "\\Beta", B.MacroDefinition$fromString("\\mathrm{B}"), "\\bull", B.MacroDefinition$fromString("\\bullet"), "\\Chi", B.MacroDefinition$fromString("\\mathrm{X}"), "\\clubs", B.MacroDefinition$fromString("\\clubsuit"), "\\cnums", B.MacroDefinition$fromString(_s10_2), "\\Complex", B.MacroDefinition$fromString(_s10_2), "\\Dagger", B.MacroDefinition$fromString("\\ddagger"), "\\diamonds", B.MacroDefinition$fromString("\\diamondsuit"), "\\empty", B.MacroDefinition$fromString("\\emptyset"), "\\Epsilon", B.MacroDefinition$fromString("\\mathrm{E}"), "\\Eta", B.MacroDefinition$fromString("\\mathrm{H}"), "\\exist", B.MacroDefinition$fromString("\\exists"), "\\harr", B.MacroDefinition$fromString(_s15_0), "\\hArr", B.MacroDefinition$fromString(_s15_1), "\\Harr", B.MacroDefinition$fromString(_s15_1), "\\hearts", B.MacroDefinition$fromString("\\heartsuit"), "\\image", B.MacroDefinition$fromString("\\Im"), "\\infin", B.MacroDefinition$fromString("\\infty"), "\\Iota", B.MacroDefinition$fromString("\\mathrm{I}"), "\\isin", B.MacroDefinition$fromString("\\in"), "\\Kappa", B.MacroDefinition$fromString("\\mathrm{K}"), "\\larr", B.MacroDefinition$fromString("\\leftarrow"), "\\lArr", B.MacroDefinition$fromString(_s10_3), "\\Larr", B.MacroDefinition$fromString(_s10_3), "\\lrarr", B.MacroDefinition$fromString(_s15_0), "\\lrArr", B.MacroDefinition$fromString(_s15_1), "\\Lrarr", B.MacroDefinition$fromString(_s15_1), "\\Mu", B.MacroDefinition$fromString("\\mathrm{M}"), "\\natnums", B.MacroDefinition$fromString(_s10_0), "\\Nu", B.MacroDefinition$fromString("\\mathrm{N}"), "\\Omicron", B.MacroDefinition$fromString("\\mathrm{O}"), "\\plusmn", B.MacroDefinition$fromString("\\pm"), "\\rarr", B.MacroDefinition$fromString("\\rightarrow"), "\\rArr", B.MacroDefinition$fromString(_s11_), "\\Rarr", B.MacroDefinition$fromString(_s11_), "\\real", B.MacroDefinition$fromString("\\Re"), "\\reals", B.MacroDefinition$fromString(_s10_1), "\\Reals", B.MacroDefinition$fromString(_s10_1), "\\Rho", B.MacroDefinition$fromString("\\mathrm{P}"), "\\sdot", B.MacroDefinition$fromString("\\cdot"), "\\sect", B.MacroDefinition$fromString("\\S"), "\\spades", B.MacroDefinition$fromString("\\spadesuit"), "\\sub", B.MacroDefinition$fromString("\\subset"), "\\sube", B.MacroDefinition$fromString("\\subseteq"), "\\supe", B.MacroDefinition$fromString("\\supseteq"), "\\Tau", B.MacroDefinition$fromString("\\mathrm{T}"), "\\thetasym", B.MacroDefinition$fromString("\\vartheta"), "\\weierp", B.MacroDefinition$fromString("\\wp"), "\\Zeta", B.MacroDefinition$fromString("\\mathrm{Z}"), "\\argmin", B.MacroDefinition$fromString("\\DOTSB\\operatorname*{arg\\,min}"), "\\argmax", B.MacroDefinition$fromString("\\DOTSB\\operatorname*{arg\\,max}"), "\\plim", B.MacroDefinition$fromString("\\DOTSB\\operatorname*{plim}\\limits"), "\\bra", B.MacroDefinition$fromString("\\mathinner{\\langle{#1}|}"), "\\ket", B.MacroDefinition$fromString("\\mathinner{|{#1}\\rangle}"), "\\braket", B.MacroDefinition$fromString("\\mathinner{\\langle{#1}\\rangle}"), "\\Bra", B.MacroDefinition$fromString("\\left\\langle#1\\right|"), "\\Ket", B.MacroDefinition$fromString("\\left|#1\\right\\rangle"), "\\blue", B.MacroDefinition$fromString("\\textcolor{##6495ed}{#1}"), "\\orange", B.MacroDefinition$fromString("\\textcolor{##ffa500}{#1}"), "\\pink", B.MacroDefinition$fromString("\\textcolor{##ff00af}{#1}"), "\\red", B.MacroDefinition$fromString("\\textcolor{##df0030}{#1}"), "\\green", B.MacroDefinition$fromString("\\textcolor{##28ae7b}{#1}"), "\\gray", B.MacroDefinition$fromString("\\textcolor{gray}{#1}"), "\\purple", B.MacroDefinition$fromString("\\textcolor{##9d38bd}{#1}"), "\\blueA", B.MacroDefinition$fromString("\\textcolor{##ccfaff}{#1}"), "\\blueB", B.MacroDefinition$fromString("\\textcolor{##80f6ff}{#1}"), "\\blueC", B.MacroDefinition$fromString("\\textcolor{##63d9ea}{#1}"), "\\blueD", B.MacroDefinition$fromString("\\textcolor{##11accd}{#1}"), "\\blueE", B.MacroDefinition$fromString("\\textcolor{##0c7f99}{#1}"), "\\tealA", B.MacroDefinition$fromString("\\textcolor{##94fff5}{#1}"), "\\tealB", B.MacroDefinition$fromString("\\textcolor{##26edd5}{#1}"), "\\tealC", B.MacroDefinition$fromString("\\textcolor{##01d1c1}{#1}"), "\\tealD", B.MacroDefinition$fromString("\\textcolor{##01a995}{#1}"), "\\tealE", B.MacroDefinition$fromString("\\textcolor{##208170}{#1}"), "\\greenA", B.MacroDefinition$fromString("\\textcolor{##b6ffb0}{#1}"), "\\greenB", B.MacroDefinition$fromString("\\textcolor{##8af281}{#1}"), "\\greenC", B.MacroDefinition$fromString("\\textcolor{##74cf70}{#1}"), "\\greenD", B.MacroDefinition$fromString("\\textcolor{##1fab54}{#1}"), "\\greenE", B.MacroDefinition$fromString("\\textcolor{##0d923f}{#1}"), "\\goldA", B.MacroDefinition$fromString("\\textcolor{##ffd0a9}{#1}"), "\\goldB", B.MacroDefinition$fromString("\\textcolor{##ffbb71}{#1}"), "\\goldC", B.MacroDefinition$fromString("\\textcolor{##ff9c39}{#1}"), "\\goldD", B.MacroDefinition$fromString("\\textcolor{##e07d10}{#1}"), "\\goldE", B.MacroDefinition$fromString("\\textcolor{##a75a05}{#1}"), "\\redA", B.MacroDefinition$fromString("\\textcolor{##fca9a9}{#1}"), "\\redB", B.MacroDefinition$fromString("\\textcolor{##ff8482}{#1}"), "\\redC", B.MacroDefinition$fromString("\\textcolor{##f9685d}{#1}"), "\\redD", B.MacroDefinition$fromString("\\textcolor{##e84d39}{#1}"), "\\redE", B.MacroDefinition$fromString("\\textcolor{##bc2612}{#1}"), "\\maroonA", B.MacroDefinition$fromString("\\textcolor{##ffbde0}{#1}"), "\\maroonB", B.MacroDefinition$fromString("\\textcolor{##ff92c6}{#1}"), "\\maroonC", B.MacroDefinition$fromString("\\textcolor{##ed5fa6}{#1}"), "\\maroonD", B.MacroDefinition$fromString("\\textcolor{##ca337c}{#1}"), "\\maroonE", B.MacroDefinition$fromString("\\textcolor{##9e034e}{#1}"), "\\purpleA", B.MacroDefinition$fromString("\\textcolor{##ddd7ff}{#1}"), "\\purpleB", B.MacroDefinition$fromString("\\textcolor{##c6b9fc}{#1}"), "\\purpleC", B.MacroDefinition$fromString("\\textcolor{##aa87ff}{#1}"), "\\purpleD", B.MacroDefinition$fromString("\\textcolor{##7854ab}{#1}"), "\\purpleE", B.MacroDefinition$fromString("\\textcolor{##543b78}{#1}"), "\\mintA", B.MacroDefinition$fromString("\\textcolor{##f5f9e8}{#1}"), "\\mintB", B.MacroDefinition$fromString("\\textcolor{##edf2df}{#1}"), "\\mintC", B.MacroDefinition$fromString("\\textcolor{##e0e5cc}{#1}"), "\\grayA", B.MacroDefinition$fromString("\\textcolor{##f6f7f7}{#1}"), "\\grayB", B.MacroDefinition$fromString("\\textcolor{##f0f1f2}{#1}"), "\\grayC", B.MacroDefinition$fromString("\\textcolor{##e3e5e6}{#1}"), "\\grayD", B.MacroDefinition$fromString("\\textcolor{##d6d8da}{#1}"), "\\grayE", B.MacroDefinition$fromString("\\textcolor{##babec2}{#1}"), "\\grayF", B.MacroDefinition$fromString("\\textcolor{##888d93}{#1}"), "\\grayG", B.MacroDefinition$fromString("\\textcolor{##626569}{#1}"), "\\grayH", B.MacroDefinition$fromString("\\textcolor{##3b3e40}{#1}"), "\\grayI", B.MacroDefinition$fromString("\\textcolor{##21242c}{#1}"), "\\kaBlue", B.MacroDefinition$fromString("\\textcolor{##314453}{#1}"), "\\kaGreen", B.MacroDefinition$fromString("\\textcolor{##71B307}{#1}")], type$.String, type$.MacroDefinition);
    });
    _lazyFinal($, "TexParser__parseColorRegex1", "$get$TexParser__parseColorRegex1", () => C.RegExp_RegExp("^#([a-f0-9])([a-f0-9])([a-f0-9])$", false, false, false, false));
    _lazyFinal($, "TexParser__parseColorRegex2", "$get$TexParser__parseColorRegex2", () => C.RegExp_RegExp("^#?([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$", false, false, false, false));
    _lazyFinal($, "TexParser__parseColorRegex3", "$get$TexParser__parseColorRegex3", () => C.RegExp_RegExp("^([a-z]+)$", false, false, false, false));
    _lazyFinal($, "TexParser__parseSizeRegex", "$get$TexParser__parseSizeRegex", () => C.RegExp_RegExp("^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$", true, false, false, false));
    _lazyFinal($, "TexParser__parseMeasurementRegex", "$get$TexParser__parseMeasurementRegex", () => C.RegExp_RegExp("([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})", true, false, false, false));
    _lazyFinal($, "TexParser__parseVerbRegex", "$get$TexParser__parseVerbRegex", () => C.RegExp_RegExp("^\\\\verb[^a-zA-Z]", true, false, false, false));
    _lazyFinal($, "_alignmentToString", "$get$_alignmentToString", () => C.LinkedHashMap_LinkedHashMap$_literal([K.Alignment_m1_m1, "xMinYMin", S.Alignment_0_m1, "xMidYMin", A.Alignment_1_m1, "xMaxYMin", I.Alignment_m1_0, "xMinYMid", F.Alignment_0_0, "xMidYMid", S.Alignment_1_0, "xMaxYMid", A.Alignment_m1_1, "xMinYMax", Aw.Alignment_0_1, "xMidYMax", Am.Alignment_1_1, "xMaxYMax"], C.findType("Alignment"), type$.String));
    _lazyFinal($, "svg", "$get$svg", () => {
      var t1 = type$.Object;
      return new B.Svg(new B.Cache0(C.LinkedHashMap_LinkedHashMap$_empty(t1, C.findType("Future<ByteData>")), C.LinkedHashMap_LinkedHashMap$_empty(t1, type$.ByteData)));
    });
    _lazyFinal($, "MarkdownComponent_inlineComponents", "$get$MarkdownComponent_inlineComponents", () => C._setArrayType([new B.ATagMd(), new B.ImageMd(), B.TableMd$(), new B.StrikeMd(), new B.BoldMd(), new B.ItalicMd(), new B.UnderLineMd(), new B.LatexMath(), B.LatexMathMultiLine$(), new B.HighlightedText(), new B.SourceTag()], type$.JSArray_MarkdownComponent));
    _lazyFinal($, "Token__newlineParser", "$get$Token__newlineParser", () => new B.NewlineParser("newline expected"));
    _lazyFinal($, "_single", "$get$_single", () => B.MapParserExtension_map(B.any(), new B._single_closure(), false, type$.String, type$.RangeCharPredicate));
    _lazyFinal($, "_range", "$get$_range", () => {
      var t1 = type$.String;
      return B.RecordParserExtension3_map3(B.SequenceParser3$(B.any(), B.char("-", null), B.any(), t1, t1, t1), new B._range_closure(), t1, t1, t1, type$.RangeCharPredicate);
    });
    _lazyFinal($, "_sequence", "$get$_sequence", () => {
      var t1 = type$.RangeCharPredicate;
      return B.MapParserExtension_map(B.PossessiveRepeatingParserExtension_star(B.ChoiceIterableExtension_toChoiceParser(C._setArrayType([$.$get$_range(), $.$get$_single()], C.findType("JSArray<Parser<RangeCharPredicate>>")), null, t1), t1), B.optimize__optimizedRanges$closure(), false, C.findType("List<RangeCharPredicate>"), type$.CharacterPredicate);
    });
    _lazyFinal($, "_pattern", "$get$_pattern", () => {
      var t1 = type$.nullable_String,
        t2 = type$.CharacterPredicate;
      return B.RecordParserExtension2_map2(B.SequenceParser2$(B.OptionalParserExtension_optional(B.char("^", null), type$.String), $.$get$_sequence(), t1, t2), new B._pattern_closure(), t1, t2, t2);
    });
    _lazyFinal($, "FlutterVectorGraphicsListener__emptyPaint", "$get$FlutterVectorGraphicsListener__emptyPaint", () => C.Paint_Paint());
    _lazyFinal($, "FlutterVectorGraphicsListener__grayscaleDstInPaint", "$get$FlutterVectorGraphicsListener__grayscaleDstInPaint", () => {
      var t1 = C.Paint_Paint();
      t1.set$blendMode(D.BlendMode_6);
      t1.set$colorFilter(A.EngineColorFilter_fTn);
      return t1;
    });
    _lazyFinal($, "_VectorGraphicWidgetState__webRenderObject", "$get$_VectorGraphicWidgetState__webRenderObject", () => B.useHtmlRenderObject());
    _lazyFinal($, "FP32_DENORMAL_FLOAT", "$get$FP32_DENORMAL_FLOAT", () => {
      var t1 = C.NativeByteData_NativeByteData(4);
      D.NativeByteData_methods.setUint32$2(t1, 0, 1056964608);
      return t1;
    });
    _lazyFinal($, "VectorGraphicsBuffer__zeroBuffer", "$get$VectorGraphicsBuffer__zeroBuffer", () => C.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "_whitespacePattern", "$get$_whitespacePattern", () => C.RegExp_RegExp("\\s", true, false, false, false));
    _lazyFinal($, "SvgParser__contiguousSpaceMatcher", "$get$SvgParser__contiguousSpaceMatcher", () => C.RegExp_RegExp(" +", true, false, false, false));
    _lazyFinal($, "_transformValidator", "$get$_transformValidator", () => C.RegExp_RegExp("^( *,?([^(]+)\\(([^)]*)\\))*$", true, false, false, false));
    _lazyFinal($, "_transformCommand", "$get$_transformCommand", () => C.RegExp_RegExp(" *,?([^(]+)\\(([^)]*)\\)", true, false, false, false));
    _lazyFinal($, "_textPattern", "$get$_textPattern", () => C.RegExp_RegExp("[&<\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]|]]>", true, false, false, false));
    _lazyFinal($, "_singeQuoteAttributePattern", "$get$_singeQuoteAttributePattern", () => C.RegExp_RegExp("['&<\\n\\r\\t\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]", true, false, false, false));
    _lazyFinal($, "_doubleQuoteAttributePattern", "$get$_doubleQuoteAttributePattern", () => C.RegExp_RegExp('["&<\\n\\r\\t\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]', true, false, false, false));
    _lazyFinal($, "eventParserCache", "$get$eventParserCache", () => new B.XmlCache(new B.eventParserCache_closure(), 5, C.LinkedHashMap_LinkedHashMap$_empty(type$.XmlEntityMapping, C.findType("Parser<XmlEvent>")), C.findType("XmlCache<XmlEntityMapping,Parser<XmlEvent>>")));
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_186", e: "endPart", h: h});
})($__dart_deferred_initializers__, "1spTpvRBrKoZ+MO2cXc4tL1Ngug=");
;
//# sourceMappingURL=main.dart.js_186.part.js.map
