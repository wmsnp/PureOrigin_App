// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_218", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, B, C, A_, Ax, A4, Ag, Ay, Az, AA, Ah, AB, AC, N, Ai, M, O, A2, V, Aj, AD, AE, W, Ak, Aa, AF, AG, AH, Al, Am, AI, An, Ao, A5, Ab, A0, AJ, Ac, AK, AL, Ap, AM, AN, AO, AP, AQ, H, F, A6, Aq, AR, AS, AT,
  A = {MyChatController: function MyChatController(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.cSM = t0;
      _._messages = t1;
      _._operationController = t2;
      _.sSM = t3;
      _.uSM = t4;
      _._pendingImagePaths = t5;
      _.__MyChatController_dio_F = t6;
      _.ScrollToMessageMixin__scrollToMessageId = t7;
      _.ScrollToMessageMixin__scrollToIndex = t8;
      _.UploadProgressMixin__progressControllers = t9;
    }, MyChatController_insertMessage_closure: function MyChatController_insertMessage_closure(t0) {
      this.message = t0;
    }, MyChatController_updateMessage_closure: function MyChatController_updateMessage_closure(t0) {
      this.oldMessage = t0;
    }, MyChatController_handleSendMessage_closure: function MyChatController_handleSendMessage_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.streamId = t2;
      _.customs = t3;
    }, MyChatController_handleSendMessage_closure1: function MyChatController_handleSendMessage_closure1(t0, t1) {
      this.$this = t0;
      this.streamId = t1;
    }, MyChatController_handleSendMessage_closure0: function MyChatController_handleSendMessage_closure0(t0, t1, t2) {
      this.$this = t0;
      this.streamId = t1;
      this.customs = t2;
    }, MyChatController_handleSendMessage__closure: function MyChatController_handleSendMessage__closure(t0) {
      this.streamId = t0;
    }, MyChatController_handleAttachmentTap_closure: function MyChatController_handleAttachmentTap_closure(t0, t1) {
      this.$this = t0;
      this.onUpdate = t1;
    }, MyChatController_handleAttachmentTap__closure: function MyChatController_handleAttachmentTap__closure(t0, t1, t2) {
      this.$this = t0;
      this.context = t1;
      this.onUpdate = t2;
    }, _MyChatController_Object_UploadProgressMixin: function _MyChatController_Object_UploadProgressMixin() {
    }, _MyChatController_Object_UploadProgressMixin_ScrollToMessageMixin: function _MyChatController_Object_UploadProgressMixin_ScrollToMessageMixin() {
    },
    ChatPage$() {
      return new A.ChatPage(null);
    },
    ChatPage: function ChatPage(t0) {
      this.key = t0;
    },
    _ChatPageState: function _ChatPageState(t0, t1) {
      var _ = this;
      _.___ChatPageState__hDM_A = _.___ChatPageState__cC_A = $;
      _._chat_page$_initialized = false;
      _.TickerProviderStateMixin__tickers = t0;
      _.TickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework$_element = _._widget = null;
    },
    _ChatPageState__initAsync_closure: function _ChatPageState__initAsync_closure() {
    },
    _ChatPageState__initAsync_closure0: function _ChatPageState__initAsync_closure0(t0) {
      this.$this = t0;
    },
    _ChatPageState__switchSession_closure: function _ChatPageState__switchSession_closure(t0, t1) {
      this.$this = t0;
      this.sessionId = t1;
    },
    _ChatPageState__deleteSession_closure: function _ChatPageState__deleteSession_closure(t0, t1) {
      this.$this = t0;
      this.sessionId = t1;
    },
    _ChatPageState__deleteSession__closure: function _ChatPageState__deleteSession__closure(t0) {
      this.$this = t0;
    },
    _ChatPageState__deleteSession__closure0: function _ChatPageState__deleteSession__closure0(t0, t1) {
      this.$this = t0;
      this.sessionId = t1;
    },
    _ChatPageState__showSessionSwitchDialog_closure: function _ChatPageState__showSessionSwitchDialog_closure(t0, t1, t2) {
      this.$this = t0;
      this.date = t1;
      this.sessions = t2;
    },
    _ChatPageState__showSessionSwitchDialog__closure: function _ChatPageState__showSessionSwitchDialog__closure(t0, t1, t2) {
      this.$this = t0;
      this.date = t1;
      this.sessions = t2;
    },
    _ChatPageState__showSessionSwitchDialog___closure0: function _ChatPageState__showSessionSwitchDialog___closure0(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.setState = t1;
      _.date = t2;
      _.context = t3;
    },
    _ChatPageState__showSessionSwitchDialog____closure: function _ChatPageState__showSessionSwitchDialog____closure(t0, t1, t2) {
      this.$this = t0;
      this.date = t1;
      this.context = t2;
    },
    _ChatPageState__showSessionSwitchDialog___closure: function _ChatPageState__showSessionSwitchDialog___closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.sessions = t1;
      _.context = t2;
      _.setState = t3;
    },
    _ChatPageState__showSessionSwitchDialog____closure1: function _ChatPageState__showSessionSwitchDialog____closure1(t0, t1, t2) {
      this.$this = t0;
      this.session = t1;
      this.context = t2;
    },
    _ChatPageState__showSessionSwitchDialog____closure0: function _ChatPageState__showSessionSwitchDialog____closure0(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.session = t1;
      _.setState = t2;
      _.sessions = t3;
      _.index = t4;
    },
    _ChatPageState__showSessionSwitchDialog_____closure: function _ChatPageState__showSessionSwitchDialog_____closure(t0, t1) {
      this.sessions = t0;
      this.index = t1;
    },
    _ChatPageState__showCalendarDialog_closure: function _ChatPageState__showCalendarDialog_closure() {
    },
    _ChatPageState__showCalendarDialog_calendar: function _ChatPageState__showCalendarDialog_calendar(t0, t1, t2) {
      this.$this = t0;
      this.tileSize = t1;
      this.sessionMap = t2;
    },
    _ChatPageState__showCalendarDialog_calendar_closure0: function _ChatPageState__showCalendarDialog_calendar_closure0(t0, t1) {
      this.$this = t0;
      this.sessionMap = t1;
    },
    _ChatPageState__showCalendarDialog_calendar_closure1: function _ChatPageState__showCalendarDialog_calendar_closure1(t0, t1) {
      this.$this = t0;
      this.sessionMap = t1;
    },
    _ChatPageState__showCalendarDialog_calendar_closure: function _ChatPageState__showCalendarDialog_calendar_closure(t0, t1, t2) {
      this.sessionMap = t0;
      this.scores = t1;
      this.tileSize = t2;
    },
    _ChatPageState__showCalendarDialog_closure0: function _ChatPageState__showCalendarDialog_closure0(t0, t1) {
      this.$this = t0;
      this.calendar = t1;
    },
    _ChatPageState__showCalendarDialog__closure: function _ChatPageState__showCalendarDialog__closure(t0, t1) {
      this.$this = t0;
      this.calendar = t1;
    },
    _ChatPageState__showCalendarDialog___closure: function _ChatPageState__showCalendarDialog___closure(t0, t1) {
      this._box_0 = t0;
      this.calendar = t1;
    },
    _ChatPageState__showCalendarDialog____closure: function _ChatPageState__showCalendarDialog____closure(t0, t1) {
      this.context = t0;
      this.snapshot = t1;
    },
    _ChatPageState__buildPendingImagesPreview_closure: function _ChatPageState__buildPendingImagesPreview_closure(t0) {
      this.$this = t0;
    },
    _ChatPageState__buildPendingImagesPreview__closure: function _ChatPageState__buildPendingImagesPreview__closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _ChatPageState__buildPendingImagesPreview___closure: function _ChatPageState__buildPendingImagesPreview___closure(t0, t1) {
      this.$this = t0;
      this.index = t1;
    },
    _ChatPageState_build_closure: function _ChatPageState_build_closure(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure0: function _ChatPageState_build_closure0(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure1: function _ChatPageState_build_closure1(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure10: function _ChatPageState_build_closure10(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure9: function _ChatPageState_build_closure9(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ChatPageState_build__closure: function _ChatPageState_build__closure(t0) {
      this.$this = t0;
    },
    _ChatPageState_build___closure: function _ChatPageState_build___closure() {
    },
    _ChatPageState_build__closure0: function _ChatPageState_build__closure0(t0) {
      this.context = t0;
    },
    _ChatPageState_build_closure8: function _ChatPageState_build_closure8(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ChatPageState_build__closure1: function _ChatPageState_build__closure1(t0) {
      this.$this = t0;
    },
    _ChatPageState_build___closure0: function _ChatPageState_build___closure0() {
    },
    _ChatPageState_build_closure6: function _ChatPageState_build_closure6(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure7: function _ChatPageState_build_closure7() {
    },
    _ChatPageState_build_closure2: function _ChatPageState_build_closure2(t0) {
      this.constraints = t0;
    },
    _ChatPageState_build_closure3: function _ChatPageState_build_closure3() {
    },
    _ChatPageState_build__closure3: function _ChatPageState_build__closure3(t0, t1) {
      this.msg = t0;
      this.i = t1;
    },
    _ChatPageState_build_closure4: function _ChatPageState_build_closure4(t0) {
      this.$this = t0;
    },
    _ChatPageState_build_closure5: function _ChatPageState_build_closure5(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ChatPageState_build__closure2: function _ChatPageState_build__closure2(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ChatPageState_build___closure1: function _ChatPageState_build___closure1(t0) {
      this.$this = t0;
    },
    _ChatPageState_build____closure: function _ChatPageState_build____closure() {
    },
    _ChatPageState_build___closure2: function _ChatPageState_build___closure2(t0) {
      this.context = t0;
    },
    __ChatPageState_State_TickerProviderStateMixin: function __ChatPageState_State_TickerProviderStateMixin() {
    },
    pickMediaPaths() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.List_String),
        $async$returnValue, t1, completer, t2, t3, t4;
      var $async$pickMediaPaths = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new B._Future($.Zone__current, type$._Future_List_String);
              completer = new B._AsyncCompleter(t1, type$._AsyncCompleter_List_String);
              t2 = $.$get$wx();
              t3 = new A.ChooseMediaOption();
              t4 = B.JSObject$("Object");
              t3.__ChooseMediaOption_$$context$$_A = t4;
              t4 = t4.jsObject;
              t4.$indexSet(0, "count", B.JSObject_transformToBrowserJSObject(9));
              t4.$indexSet(0, "mediaType", B.JSObject_transformToBrowserJSObject(["image"]));
              t4.$indexSet(0, "sourceType", B.JSObject_transformToBrowserJSObject(["album", "camera"]));
              t4.$indexSet(0, "maxDuration", B.JSObject_transformToBrowserJSObject(30));
              t4.$indexSet(0, "camera", B.JSObject_transformToBrowserJSObject("front"));
              t3.set$success(new A.pickMediaPaths_closure(completer));
              t3.set$fail(new A.pickMediaPaths_closure0(completer));
              t4 = type$.ChooseMediaOption;
              B.checkTypeBound(t4, t4, "T", "chooseMedia");
              t2 = t2.__Wx_$$context$$_A;
              t2 === $ && B.throwLateFieldNI("$$context$$");
              B.ChooseMediaSuccessCallbackResult$(type$.nullable_JSObject._as(t2.callMethod$2("chooseMedia", [t3.__ChooseMediaOption_$$context$$_A])));
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$pickMediaPaths, $async$completer);
    },
    pickMediaPaths_closure: function pickMediaPaths_closure(t0) {
      this.completer = t0;
    },
    pickMediaPaths__closure: function pickMediaPaths__closure() {
    },
    pickMediaPaths_closure0: function pickMediaPaths_closure0(t0) {
      this.completer = t0;
    },
    FormData: function FormData(t0, t1) {
      var _ = this;
      _.__FormData__boundary_A = $;
      _.fields = t0;
      _.files = t1;
      _._isFinalized = false;
    },
    FormData__init_closure: function FormData__init_closure(t0) {
      this.$this = t0;
    },
    FormData__headerForFile_closure: function FormData__headerForFile_closure(t0) {
      this._box_0 = t0;
    },
    FormData_finalize_writeLine: function FormData_finalize_writeLine(t0) {
      this.controller = t0;
    },
    FormData_finalize_writeUtf8: function FormData_finalize_writeUtf8(t0) {
      this.controller = t0;
    },
    FormData_finalize_closure: function FormData_finalize_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.writeUtf8 = t1;
      _.controller = t2;
      _.writeLine = t3;
    },
    FormData_finalize_closure0: function FormData_finalize_closure0(t0, t1) {
      this.$this = t0;
      this.writeUtf8 = t1;
    },
    FormData_finalize_closure1: function FormData_finalize_closure1(t0) {
      this.controller = t0;
    },
    writeStreamToSink(stream, sink, $T) {
      var t1 = new B._Future($.Zone__current, type$._Future_void);
      stream.listen$3$onDone$onError($T._eval$1("~(0)")._as(sink.get$add(sink)), new A.writeStreamToSink_closure(new B._AsyncCompleter(t1, type$._AsyncCompleter_void)), sink.get$addError());
      return t1;
    },
    writeStreamToSink_closure: function writeStreamToSink_closure(t0) {
      this.completer = t0;
    },
    _BottomSheetLayoutWithSizeListener: function _BottomSheetLayoutWithSizeListener(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.onChildSizeChanged = t0;
      _.animationValue = t1;
      _.isScrollControlled = t2;
      _.scrollControlDisabledMaxHeightRatio = t3;
      _.child = t4;
      _.key = t5;
    },
    _RenderBottomSheetLayoutWithSizeListener: function _RenderBottomSheetLayoutWithSizeListener(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._lastSize = t0;
      _._onChildSizeChanged = t1;
      _._animationValue = t2;
      _._isScrollControlled = t3;
      _._scrollControlDisabledMaxHeightRatio = t4;
      _.RenderObjectWithChildMixin__child = t5;
      _._layoutCacheStorage = t6;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t7;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _ModalBottomSheet: function _ModalBottomSheet(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.route = t0;
      _.isScrollControlled = t1;
      _.scrollControlDisabledMaxHeightRatio = t2;
      _.backgroundColor = t3;
      _.elevation = t4;
      _.shape = t5;
      _.clipBehavior = t6;
      _.constraints = t7;
      _.enableDrag = t8;
      _.showDragHandle = t9;
      _.key = t10;
      _.$ti = t11;
    },
    _ModalBottomSheetState: function _ModalBottomSheetState(t0, t1) {
      var _ = this;
      _.animationCurve = t0;
      _._framework$_element = _._widget = null;
      _.$ti = t1;
    },
    _ModalBottomSheetState_build_closure0: function _ModalBottomSheetState_build_closure0(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _ModalBottomSheetState_build_closure: function _ModalBottomSheetState_build_closure(t0, t1) {
      this.$this = t0;
      this.routeLabel = t1;
    },
    _ModalBottomSheetState_build__closure: function _ModalBottomSheetState_build__closure(t0) {
      this.$this = t0;
    },
    ModalBottomSheetRoute: function ModalBottomSheetRoute(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37) {
      var _ = this;
      _.builder = t0;
      _.capturedThemes = t1;
      _.isScrollControlled = t2;
      _.scrollControlDisabledMaxHeightRatio = t3;
      _.backgroundColor = t4;
      _.elevation = t5;
      _.shape = t6;
      _.clipBehavior = t7;
      _.constraints = t8;
      _.modalBarrierColor = t9;
      _.isDismissible = t10;
      _.enableDrag = t11;
      _.showDragHandle = t12;
      _.transitionAnimationController = t13;
      _.anchorPoint = t14;
      _.useSafeArea = t15;
      _.sheetAnimationStyle = t16;
      _.barrierOnTapHint = t17;
      _._bottom_sheet$_clipDetailsNotifier = t18;
      _.barrierLabel = t19;
      _._bottom_sheet$_animationController = null;
      _.filter = t20;
      _.traversalEdgeBehavior = t21;
      _.receivedTransition = null;
      _._offstage = false;
      _._secondaryAnimationProxy = _._animationProxy = null;
      _._willPopCallbacks = t22;
      _._popEntries = t23;
      _._scopeKey = t24;
      _._subtreeKey = t25;
      _._storageBucket = t26;
      _.__ModalRoute__modalBarrier_A = $;
      _._modalScopeCache = null;
      _.__ModalRoute__modalScope_A = $;
      _.LocalHistoryRoute__localHistory = t27;
      _.LocalHistoryRoute__entriesImpliesAppBarDismissal = t28;
      _._transitionCompleter = t29;
      _._performanceModeRequestHandle = null;
      _._popFinalized = false;
      _._routes$_controller = _._routes$_animation = null;
      _._secondaryAnimation = t30;
      _.willDisposeAnimationController = true;
      _._trainHoppingListenerRemover = _._result = _._routes$_simulation = null;
      _._overlayEntries = t31;
      _._requestFocus = t32;
      _._navigator$_navigator = null;
      _._settings = t33;
      _._restorationScopeId = t34;
      _._popCompleter = t35;
      _._disposeCompleter = t36;
      _.$ti = t37;
    },
    ModalBottomSheetRoute_buildPage_closure: function ModalBottomSheetRoute_buildPage_closure(t0) {
      this.$this = t0;
    },
    CircleAvatar: function CircleAvatar(t0, t1, t2, t3) {
      var _ = this;
      _.child = t0;
      _.backgroundColor = t1;
      _.radius = t2;
      _.key = t3;
    },
    BorderRadiusDirectional: function BorderRadiusDirectional(t0, t1, t2, t3) {
      var _ = this;
      _.topStart = t0;
      _.topEnd = t1;
      _.bottomStart = t2;
      _.bottomEnd = t3;
    },
    ResizeImage_resizeIfNeeded(cacheWidth, cacheHeight, provider) {
      return provider;
    },
    FileImage: function FileImage(t0, t1) {
      this.file = t0;
      this.scale = t1;
    },
    FileImage_loadBuffer_closure: function FileImage_loadBuffer_closure(t0) {
      this.$this = t0;
    },
    FileImage_loadImage_closure: function FileImage_loadImage_closure(t0) {
      this.$this = t0;
    },
    RenderShaderMask: function RenderShaderMask(t0, t1, t2, t3, t4) {
      var _ = this;
      _._shaderCallback = t0;
      _._blendMode = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    RenderSliverFillViewport: function RenderSliverFillViewport(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._sliver_fill0$_viewportFraction = t0;
      _.__RenderSliverFixedExtentBoxAdaptor__currentLayoutDimensions_A = $;
      _._childManager = t1;
      _._keepAliveBucket = t2;
      _.ContainerRenderObjectMixin__childCount = t3;
      _.ContainerRenderObjectMixin__firstChild = t4;
      _.ContainerRenderObjectMixin__lastChild = t5;
      _.parentData = _._geometry = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t6;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    AlignmentGeometryTween: function AlignmentGeometryTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    ShaderMask: function ShaderMask(t0, t1, t2, t3) {
      var _ = this;
      _.shaderCallback = t0;
      _.blendMode = t1;
      _.child = t2;
      _.key = t3;
    },
    BoxConstraintsTween: function BoxConstraintsTween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    Matrix4Tween: function Matrix4Tween(t0, t1) {
      this.begin = t0;
      this.end = t1;
    },
    AnimatedContainer: function AnimatedContainer(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.child = t0;
      _.decoration = t1;
      _.foregroundDecoration = t2;
      _.constraints = t3;
      _.curve = t4;
      _.duration = t5;
      _.onEnd = t6;
      _.key = t7;
    },
    _AnimatedContainerState: function _AnimatedContainerState(t0, t1) {
      var _ = this;
      _._transformAlignment = _._implicit_animations$_transform = _._implicit_animations$_margin = _._implicit_animations$_constraints = _._foregroundDecoration = _._implicit_animations$_decoration = _._implicit_animations$_padding = _._implicit_animations$_alignment = null;
      _.__ImplicitlyAnimatedWidgetState__animation_AI = _.__ImplicitlyAnimatedWidgetState_controller_FI = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework$_element = _._widget = null;
    },
    _AnimatedContainerState_forEachTween_closure: function _AnimatedContainerState_forEachTween_closure() {
    },
    _AnimatedContainerState_forEachTween_closure0: function _AnimatedContainerState_forEachTween_closure0() {
    },
    _AnimatedContainerState_forEachTween_closure1: function _AnimatedContainerState_forEachTween_closure1() {
    },
    _AnimatedContainerState_forEachTween_closure2: function _AnimatedContainerState_forEachTween_closure2() {
    },
    _AnimatedContainerState_forEachTween_closure3: function _AnimatedContainerState_forEachTween_closure3() {
    },
    _AnimatedContainerState_forEachTween_closure4: function _AnimatedContainerState_forEachTween_closure4() {
    },
    _AnimatedContainerState_forEachTween_closure5: function _AnimatedContainerState_forEachTween_closure5() {
    },
    _AnimatedContainerState_forEachTween_closure6: function _AnimatedContainerState_forEachTween_closure6() {
    },
    MediaQuery_withNoTextScaling(child) {
      return new T.Builder(new A.MediaQuery_withNoTextScaling_closure(child), null);
    },
    MediaQuery_withNoTextScaling_closure: function MediaQuery_withNoTextScaling_closure(t0) {
      this.child = t0;
    },
    PageController$(initialPage) {
      return new A.PageController(initialPage, null, null, B._setArrayType([], type$.JSArray_ScrollPosition), $.$get$ChangeNotifier__emptyListeners());
    },
    PageController: function PageController(t0, t1, t2, t3, t4) {
      var _ = this;
      _.initialPage = t0;
      _.onAttach = t1;
      _.onDetach = t2;
      _._positions = t3;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t4;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    PageMetrics: function PageMetrics(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.viewportFraction = t0;
      _._scroll_metrics$_minScrollExtent = t1;
      _._scroll_metrics$_maxScrollExtent = t2;
      _._scroll_metrics$_pixels = t3;
      _._scroll_metrics$_viewportDimension = t4;
      _.axisDirection = t5;
      _.devicePixelRatio = t6;
    },
    _PagePosition: function _PagePosition(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._pageToUseOnStartup = t0;
      _._cachedPage = null;
      _._viewportFraction = t1;
      _._heldPreviousVelocity = 0;
      _._userScrollDirection = t2;
      _._currentDrag = null;
      _.physics = t3;
      _.context = t4;
      _.keepScrollOffset = t5;
      _.debugLabel = t6;
      _._maxScrollExtent = _._minScrollExtent = null;
      _._impliedVelocity = 0;
      _._viewportDimension = _._pixels = null;
      _._haveDimensions = false;
      _._didChangeViewportDimensionOrReceiveCorrection = true;
      _._pendingDimensions = false;
      _._scroll_position$_lastMetrics = null;
      _._haveScheduledUpdateNotification = false;
      _._semanticActions = _._lastAxis = null;
      _.isScrollingNotifier = t7;
      _._activity = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t8;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _ForceImplicitScrollPhysics: function _ForceImplicitScrollPhysics(t0, t1) {
      this.allowImplicitScrolling = t0;
      this.parent = t1;
    },
    PageScrollPhysics: function PageScrollPhysics(t0) {
      this.parent = t0;
    },
    PageView: function PageView(t0, t1, t2, t3) {
      var _ = this;
      _.controller = t0;
      _.onPageChanged = t1;
      _.childrenDelegate = t2;
      _.key = t3;
    },
    _PageViewState: function _PageViewState() {
      var _ = this;
      _._lastReportedPage = 0;
      _.___PageViewState__controller_A = $;
      _._framework$_element = _._widget = null;
    },
    _PageViewState_build_closure: function _PageViewState_build_closure(t0) {
      this.$this = t0;
    },
    _PageViewState_build_closure0: function _PageViewState_build_closure0(t0, t1) {
      this.$this = t0;
      this.axisDirection = t1;
    },
    SliverFillViewport: function SliverFillViewport(t0, t1, t2, t3) {
      var _ = this;
      _.viewportFraction = t0;
      _.padEnds = t1;
      _.delegate = t2;
      _.key = t3;
    },
    _SliverFillViewportRenderObjectWidget: function _SliverFillViewportRenderObjectWidget(t0, t1, t2) {
      this.viewportFraction = t0;
      this.delegate = t1;
      this.key = t2;
    },
    _SliverFractionalPadding: function _SliverFractionalPadding(t0, t1, t2) {
      this.viewportFraction = t0;
      this.child = t1;
      this.key = t2;
    },
    _RenderSliverFractionalPadding: function _RenderSliverFractionalPadding(t0, t1, t2) {
      var _ = this;
      _._lastResolvedConstraints = null;
      _._sliver_fill$_viewportFraction = t0;
      _._sliver_fill$_resolvedPadding = null;
      _.RenderObjectWithChildMixin__child = t1;
      _.parentData = _._geometry = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t2;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    ChatOperation: function ChatOperation(t0, t1, t2, t3, t4) {
      var _ = this;
      _.type = t0;
      _.oldMessage = t1;
      _.message = t2;
      _.index = t3;
      _.messages = t4;
    },
    ScrollToMessageMixin: function ScrollToMessageMixin() {
    },
    UploadProgressMixin: function UploadProgressMixin() {
    },
    TextMessage$(authorId, createdAt, deletedAt, deliveredAt, editedAt, failedAt, id, linkPreviewData, metadata, pinned, reactions, replyToMessageId, seenAt, sentAt, $status, text, updatedAt) {
      return new A.TextMessage(id, authorId, replyToMessageId, createdAt, deletedAt, failedAt, sentAt, deliveredAt, seenAt, updatedAt, editedAt, reactions, pinned, metadata, $status, text, linkPreviewData, "text");
    },
    TextStreamMessage$(authorId, createdAt, deletedAt, deliveredAt, failedAt, id, metadata, pinned, reactions, replyToMessageId, seenAt, sentAt, $status, streamId, updatedAt) {
      return new A.TextStreamMessage(id, authorId, replyToMessageId, createdAt, deletedAt, failedAt, sentAt, deliveredAt, seenAt, updatedAt, reactions, pinned, metadata, $status, streamId, "textStream");
    },
    ImageMessage$(authorId, blurhash, createdAt, deletedAt, deliveredAt, failedAt, hasOverlay, height, id, metadata, pinned, reactions, replyToMessageId, seenAt, sentAt, size, source, $status, text, thumbhash, updatedAt, width) {
      return new A.ImageMessage(id, authorId, replyToMessageId, createdAt, deletedAt, failedAt, sentAt, deliveredAt, seenAt, updatedAt, reactions, pinned, metadata, $status, source, text, thumbhash, blurhash, width, height, size, hasOverlay, "image");
    },
    TextMessage: function TextMessage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17) {
      var _ = this;
      _.id = t0;
      _.authorId = t1;
      _.replyToMessageId = t2;
      _.createdAt = t3;
      _.deletedAt = t4;
      _.failedAt = t5;
      _.sentAt = t6;
      _.deliveredAt = t7;
      _.seenAt = t8;
      _.updatedAt = t9;
      _.editedAt = t10;
      _._reactions = t11;
      _.pinned = t12;
      _._metadata = t13;
      _.status = t14;
      _.text = t15;
      _.linkPreviewData = t16;
      _.$$type = t17;
    },
    TextStreamMessage: function TextStreamMessage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.id = t0;
      _.authorId = t1;
      _.replyToMessageId = t2;
      _.createdAt = t3;
      _.deletedAt = t4;
      _.failedAt = t5;
      _.sentAt = t6;
      _.deliveredAt = t7;
      _.seenAt = t8;
      _.updatedAt = t9;
      _._reactions = t10;
      _.pinned = t11;
      _._metadata = t12;
      _.status = t13;
      _.streamId = t14;
      _.$$type = t15;
    },
    ImageMessage: function ImageMessage(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.id = t0;
      _.authorId = t1;
      _.replyToMessageId = t2;
      _.createdAt = t3;
      _.deletedAt = t4;
      _.failedAt = t5;
      _.sentAt = t6;
      _.deliveredAt = t7;
      _.seenAt = t8;
      _.updatedAt = t9;
      _._reactions = t10;
      _.pinned = t11;
      _._metadata = t12;
      _.status = t13;
      _.source = t14;
      _.text = t15;
      _.thumbhash = t16;
      _.blurhash = t17;
      _.width = t18;
      _.height = t19;
      _.size = t20;
      _.hasOverlay = t21;
      _.$$type = t22;
    },
    _$ImageMessageCopyWithImpl: function _$ImageMessageCopyWithImpl(t0, t1, t2) {
      this._self = t0;
      this._then = t1;
      this.$ti = t2;
    },
    User: function User() {
    },
    _$User: function _$User() {
    },
    _User: function _User(t0, t1) {
      this.id = t0;
      this.name = t1;
    },
    _User_Object__$User: function _User_Object__$User() {
    },
    FValueNotifier: function FValueNotifier() {
    },
    FCalendar: function FCalendar(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.style = t0;
      _.controller = t1;
      _.dayBuilder = t2;
      _.start = t3;
      _.end = t4;
      _.today = t5;
      _.onPress = t6;
      _.onLongPress = t7;
      _._initialType = t8;
      _._initialMonth = t9;
      _.key = t10;
    },
    _State1: function _State1() {
      var _ = this;
      _.___State__month_A = _.___State__type_A = $;
      _._framework$_element = _._widget = null;
    },
    _State_build_closure0: function _State_build_closure0(t0, t1) {
      this.$this = t0;
      this.style = t1;
    },
    _State_build_closure1: function _State_build_closure1(t0, t1) {
      this.$this = t0;
      this.style = t1;
    },
    _State_build__closure2: function _State_build__closure2(t0) {
      this.$this = t0;
    },
    _State_build__closure3: function _State_build__closure3(t0) {
      this.$this = t0;
    },
    _State_build__closure0: function _State_build__closure0(t0) {
      this.$this = t0;
    },
    _State_build__closure1: function _State_build__closure1(t0) {
      this.$this = t0;
    },
    _State_build__closure: function _State_build__closure(t0) {
      this.$this = t0;
    },
    _true(__wc0_formal) {
      type$.DateTime._as(__wc0_formal);
      return true;
    },
    FCalendarController: function FCalendarController() {
    },
    _AutoDateController: function _AutoDateController(t0, t1, t2, t3) {
      var _ = this;
      _._selectable = t0;
      _._notifiers$_listeners = t1;
      _._change_notifier$_value = t2;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    DayPicker: function DayPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.style = t0;
      _.localization = t1;
      _.dayBuilder = t2;
      _.month = t3;
      _.today = t4;
      _.focused = t5;
      _.selectable = t6;
      _.selected = t7;
      _.onPress = t8;
      _.onLongPress = t9;
      _.key = t10;
    },
    _DayPickerState: function _DayPickerState(t0) {
      this._days = t0;
      this._framework$_element = this._widget = null;
    },
    _GridDelegate: function _GridDelegate(t0) {
      this.tileSize = t0;
    },
    PagedDayPicker$(dayBuilder, end, initial, onLongPress, onMonthChange, onPress, selectable, selected, start, style, today) {
      return new A.PagedDayPicker(selected, onMonthChange, onPress, onLongPress, dayBuilder, style, start, end, today, initial, new A.PagedPicker_closure(start, end, selectable), null);
    },
    PagedDayPicker: function PagedDayPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _.selected = t0;
      _.onMonthChange = t1;
      _.onPress = t2;
      _.onLongPress = t3;
      _.dayBuilder = t4;
      _.style = t5;
      _.start = t6;
      _.end = t7;
      _.today = t8;
      _.initial = t9;
      _.selectable = t10;
      _.key = t11;
    },
    _PagedDayPickerState: function _PagedDayPickerState() {
      var _ = this;
      _._gridFocused = false;
      _.focusedDate = null;
      _.__PagedPickerState__focusNode_A = _.__PagedPickerState__actions_A = _.__PagedPickerState__key_A = _.__PagedPickerState__controller_A = _.__PagedPickerState_textDirection_A = _.__PagedPickerState_current_A = $;
      _._framework$_element = _._widget = null;
    },
    _PagedDayPickerState_buildItem_closure: function _PagedDayPickerState_buildItem_closure(t0) {
      this.$this = t0;
    },
    _PagedDayPickerState_buildItem__closure: function _PagedDayPickerState_buildItem__closure(t0, t1) {
      this.$this = t0;
      this.date = t1;
    },
    _PagedDayPickerState_onPageChange_closure: function _PagedDayPickerState_onPageChange_closure(t0, t1) {
      this.$this = t0;
      this.page = t1;
    },
    _PagedDayPickerState_onGridFocusChange_closure: function _PagedDayPickerState_onGridFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    MonthPicker: function MonthPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.yearMonthStyle = t0;
      _.dayStyle = t1;
      _.currentYear = t2;
      _.start = t3;
      _.end = t4;
      _.today = t5;
      _.focused = t6;
      _.onPress = t7;
      _.key = t8;
    },
    _MonthPickerState: function _MonthPickerState() {
      this.___MonthPickerState__months_A = $;
      this._framework$_element = this._widget = null;
    },
    _MonthPickerState_build_closure: function _MonthPickerState_build_closure(t0) {
      this.context = t0;
    },
    PagedMonthPicker$(end, initial, onPress, start, style, today) {
      return new A.PagedMonthPicker(onPress, style, start, end, today, initial, new A.PagedPicker_closure(start, end, null), null);
    },
    PagedMonthPicker: function PagedMonthPicker(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPress = t0;
      _.style = t1;
      _.start = t2;
      _.end = t3;
      _.today = t4;
      _.initial = t5;
      _.selectable = t6;
      _.key = t7;
    },
    _PagedMonthPickerState: function _PagedMonthPickerState() {
      var _ = this;
      _.focusedDate = null;
      _.__PagedPickerState__focusNode_A = _.__PagedPickerState__actions_A = _.__PagedPickerState__key_A = _.__PagedPickerState__controller_A = _.__PagedPickerState_textDirection_A = _.__PagedPickerState_current_A = $;
      _._framework$_element = _._widget = null;
    },
    _PagedMonthPickerState_onGridFocusChange_closure: function _PagedMonthPickerState_onGridFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    Entry_Entry$day(current, date, dayBuilder, focusNode, localizations, onLongPress, onPress, selectable, selected, style, today) {
      var canSelect = selectable.call$1(date),
        isSelected = selected.call$1(date),
        entryStyle = current ? style.current : style.enclosing,
        t1 = new A.Entry_Entry$day_builder(isSelected, selected, date, entryStyle, dayBuilder, style, current, today, canSelect);
      return canSelect ? A._SelectableEntry$(t1, date, focusNode, onLongPress, onPress, isSelected, K.DateFormat$yMMMMd(null).format$1(date._native), entryStyle) : new A._UnselectableEntry(isSelected, entryStyle, t1, null);
    },
    Entry_Entry$yearMonth(current, date, focusNode, format, onPress, selectable, style) {
      var t1 = new A.Entry_Entry$yearMonth_builder(style, format, date, selectable, current);
      return selectable ? A._SelectableEntry$(t1, date, focusNode, null, onPress, true, format.call$1(date), style) : new A._UnselectableEntry(false, style, t1, null);
    },
    _SelectableEntry$(builder, date, focusNode, onLongPress, onPress, selected, semanticsLabel, style) {
      return new A._SelectableEntry(focusNode, date, semanticsLabel, selected, onPress, onLongPress, style, builder, null);
    },
    Entry0: function Entry0() {
    },
    Entry_Entry$day_builder: function Entry_Entry$day_builder(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.isSelected = t0;
      _.selected = t1;
      _.date = t2;
      _.entryStyle = t3;
      _.dayBuilder = t4;
      _.style = t5;
      _.current = t6;
      _.today = t7;
      _.canSelect = t8;
    },
    Entry_Entry$yearMonth_builder: function Entry_Entry$yearMonth_builder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.style = t0;
      _.format = t1;
      _.date = t2;
      _.selectable = t3;
      _.current = t4;
    },
    _SelectableEntry: function _SelectableEntry(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.focusNode = t0;
      _.date = t1;
      _.semanticsLabel = t2;
      _.selected = t3;
      _.onPress = t4;
      _.onLongPress = t5;
      _.style = t6;
      _.builder = t7;
      _.key = t8;
    },
    _SelectableEntry_build_closure0: function _SelectableEntry_build_closure0(t0) {
      this.$this = t0;
    },
    _SelectableEntry_build_closure: function _SelectableEntry_build_closure(t0) {
      this.$this = t0;
    },
    _UnselectableEntry: function _UnselectableEntry(t0, t1, t2, t3) {
      var _ = this;
      _.selected = t0;
      _.style = t1;
      _.builder = t2;
      _.key = t3;
    },
    EntryContent: function EntryContent(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.style = t0;
      _.borderRadius = t1;
      _.text = t2;
      _.states = t3;
      _.current = t4;
      _.key = t5;
    },
    FCalendarPickerType: function FCalendarPickerType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Header: function Header(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.type = t1;
      _.month = t2;
      _.key = t3;
    },
    _HeaderState: function _HeaderState(t0, t1) {
      var _ = this;
      _.___HeaderState__controller_A = $;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework$_element = _._widget = null;
    },
    _HeaderState_build_closure0: function _HeaderState_build_closure0(t0) {
      this.$this = t0;
    },
    _HeaderState_build_closure: function _HeaderState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    Navigation: function Navigation(t0, t1, t2, t3) {
      var _ = this;
      _.style = t0;
      _.onPrevious = t1;
      _.onNext = t2;
      _.key = t3;
    },
    __HeaderState_State_SingleTickerProviderStateMixin: function __HeaderState_State_SingleTickerProviderStateMixin() {
    },
    PagedPicker: function PagedPicker() {
    },
    PagedPicker_closure: function PagedPicker_closure(t0, t1, t2) {
      this.start = t0;
      this.end = t1;
      this.selectable = t2;
    },
    PagedPickerState: function PagedPickerState() {
    },
    PagedPickerState__onDirectionFocus_closure: function PagedPickerState__onDirectionFocus_closure(t0, t1) {
      this.$this = t0;
      this.intent = t1;
    },
    PagedYearPicker$(end, initial, onPress, start, style, today) {
      return new A.PagedYearPicker(onPress, style, start, end, today, initial, new A.PagedPicker_closure(start, end, null), null);
    },
    PagedYearPicker: function PagedYearPicker(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onPress = t0;
      _.style = t1;
      _.start = t2;
      _.end = t3;
      _.today = t4;
      _.initial = t5;
      _.selectable = t6;
      _.key = t7;
    },
    _PagedYearPickerState: function _PagedYearPickerState() {
      var _ = this;
      _.focusedDate = null;
      _.__PagedPickerState__focusNode_A = _.__PagedPickerState__actions_A = _.__PagedPickerState__key_A = _.__PagedPickerState__controller_A = _.__PagedPickerState_textDirection_A = _.__PagedPickerState_current_A = $;
      _._framework$_element = _._widget = null;
    },
    _PagedYearPickerState_onGridFocusChange_closure: function _PagedYearPickerState_onGridFocusChange_closure(t0, t1) {
      this.$this = t0;
      this.focused = t1;
    },
    _PagedYearPickerState_onPageChange_closure: function _PagedYearPickerState_onPageChange_closure(t0, t1) {
      this.$this = t0;
      this.page = t1;
    },
    YearPicker: function YearPicker(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.yearMonthStyle = t0;
      _.dayStyle = t1;
      _.startYear = t2;
      _.start = t3;
      _.end = t4;
      _.today = t5;
      _.focused = t6;
      _.onPress = t7;
      _.key = t8;
    },
    _YearPickerState: function _YearPickerState() {
      this.___YearPickerState__years_A = $;
      this._framework$_element = this._widget = null;
    },
    _YearPickerState_build_closure: function _YearPickerState_build_closure(t0) {
      this.context = t0;
    },
    YearMonthPicker: function YearMonthPicker(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.style = t0;
      _.start = t1;
      _.end = t2;
      _.today = t3;
      _.month = t4;
      _.type = t5;
      _.key = t6;
    },
    _YearMonthPickerState: function _YearMonthPickerState() {
      this._year = true;
      this._framework$_element = this._widget = null;
    },
    _YearMonthPickerState_build_closure: function _YearMonthPickerState_build_closure(t0) {
      this.$this = t0;
    },
    _YearMonthPickerState_build__closure: function _YearMonthPickerState_build__closure(t0) {
      this.$this = t0;
    },
    _YearMonthPickerState_build_closure0: function _YearMonthPickerState_build_closure0(t0) {
      this.$this = t0;
    },
    _FRootHeader: function _FRootHeader(t0, t1, t2) {
      this.suffixes = t0;
      this.title = t1;
      this.key = t2;
    },
    _FRootHeader_build_closure: function _FRootHeader_build_closure(t0) {
      this.style = t0;
    },
    ChooseMediaOption: function ChooseMediaOption() {
      this.__ChooseMediaOption_$$context$$_A = $;
    },
    ChooseMediaOption_fail_closure: function ChooseMediaOption_fail_closure(t0) {
      this.value = t0;
    },
    ChooseMediaOption_success_closure: function ChooseMediaOption_success_closure(t0) {
      this.value = t0;
    },
    StyledList_toStack(_this, alignment) {
      return new E.Stack(alignment, null, L.StackFit_0, C.Clip_1, _this, null);
    },
    StyledWidget_positioned(_this, bottom, right, $top) {
      var _null = null,
        t1 = I.Positioned$(bottom, _this, _null, _null, _null, right, $top, _null);
      return t1;
    },
    StyledWidget_gestures(_this, onTap) {
      var _null = null;
      return T.GestureDetector$(_null, _this, G.DragStartBehavior_1, false, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, new A.StyledWidget_gestures_closure(onTap, _null), new A.StyledWidget_gestures_closure0(_null, _null), new A.StyledWidget_gestures_closure1(_null, _null), _null, _null, _null, _null, _null, _null);
    },
    StyledWidget_gestures_closure1: function StyledWidget_gestures_closure1(t0, t1) {
      this.onTapDown = t0;
      this.onTapChange = t1;
    },
    StyledWidget_gestures_closure0: function StyledWidget_gestures_closure0(t0, t1) {
      this.onTapCancel = t0;
      this.onTapChange = t1;
    },
    StyledWidget_gestures_closure: function StyledWidget_gestures_closure(t0, t1) {
      this.onTap = t0;
      this.onTapChange = t1;
    },
    Orderable: function Orderable() {
    },
    Date: function Date() {
    },
    LocalDate: function LocalDate(t0) {
      this._date$_string = null;
      this._native = t0;
    },
    _LocalDate_Date_Orderable: function _LocalDate_Date_Orderable() {
    },
    DateTimes_plus(_this, days, months, years) {
      return A.DateTimeCopyWith_copyWith(_this, B.Primitives_getDay(_this) + days, B.Primitives_getHours(_this), _this._microsecond, B.Primitives_getMilliseconds(_this), B.Primitives_getMinutes(_this), B.Primitives_getMonth(_this) + months, B.Primitives_getSeconds(_this), B.Primitives_getYear(_this) + years);
    },
    DateTimes_minus(_this, days, months, years) {
      return A.DateTimeCopyWith_copyWith(_this, B.Primitives_getDay(_this) - days, B.Primitives_getHours(_this), _this._microsecond, B.Primitives_getMilliseconds(_this), B.Primitives_getMinutes(_this), B.Primitives_getMonth(_this) - months, B.Primitives_getSeconds(_this), B.Primitives_getYear(_this) - years);
    },
    DateTimes_truncate(_this, to) {
      return A.DateTimes__adjust(_this, to, new A.DateTimes_truncate_closure());
    },
    DateTimes__adjust(_this, unit, apply) {
      var t1, _null = null;
      switch (unit) {
        case D.DateUnit_0:
          t1 = A.DateTimeCopyWith_copyWith(_this, 1, 0, 0, 0, 0, 1, 0, apply.call$1(B.Primitives_getYear(_this)));
          break;
        case D.DateUnit_1:
          t1 = A.DateTimeCopyWith_copyWith(_this, 1, 0, 0, 0, 0, apply.call$1(B.Primitives_getMonth(_this)), 0, _null);
          break;
        case D.DateUnit_2:
          t1 = A.DateTimeCopyWith_copyWith(_this, apply.call$1(B.Primitives_getDay(_this)), 0, 0, 0, 0, _null, 0, _null);
          break;
        case D.TimeUnit_0:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, apply.call$1(B.Primitives_getHours(_this)), 0, 0, 0, _null, 0, _null);
          break;
        case D.TimeUnit_1:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, 0, 0, apply.call$1(B.Primitives_getMinutes(_this)), _null, 0, _null);
          break;
        case D.TimeUnit_2:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, 0, 0, _null, _null, apply.call$1(B.Primitives_getSeconds(_this)), _null);
          break;
        case D.TimeUnit_3:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, 0, apply.call$1(B.Primitives_getMilliseconds(_this)), _null, _null, _null, _null);
          break;
        case D.TimeUnit_4:
          t1 = A.DateTimeCopyWith_copyWith(_this, _null, _null, apply.call$1(_this._microsecond), _null, _null, _null, _null, _null);
          break;
        default:
          t1 = _null;
      }
      return t1;
    },
    DateTimes_truncate_closure: function DateTimes_truncate_closure() {
    },
    Period: function Period(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.years = t0;
      _.months = t1;
      _.days = t2;
      _.hours = t3;
      _.minutes = t4;
      _.seconds = t5;
      _.milliseconds = t6;
      _.microseconds = t7;
    },
    DateUnit: function DateUnit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TimeUnit: function TimeUnit(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDConfirmDialog: function TDConfirmDialog(t0, t1, t2, t3, t4) {
      var _ = this;
      _.title = t0;
      _.contentWidget = t1;
      _.buttonText = t2;
      _.action = t3;
      _.key = t4;
    },
    TDConfirmDialog__buildButton_closure: function TDConfirmDialog__buildButton_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    TDConfirmDialog_build_closure: function TDConfirmDialog_build_closure(t0) {
      this.$this = t0;
    },
    TDSkeleton_TDSkeleton(animation, theme) {
      var t1, t2, i, _null = null;
      switch (theme.index) {
        case 0:
          return new A.TDSkeleton(animation, 0, new A.TDSkeletonRowCol(D.List_ZUH), _null);
        case 1:
          return new A.TDSkeleton(animation, 0, new A.TDSkeletonRowCol(D.List_JGW), _null);
        case 2:
          return new A.TDSkeleton(animation, 0, new A.TDSkeletonRowCol(D.List_xWd), _null);
        case 3:
          t1 = B._setArrayType([], type$.JSArray_List_TDSkeletonRowColObj);
          for (t2 = type$.JSArray_TDSkeletonRowColObj, i = 0; i < 3; ++i)
            t1.push(B._setArrayType([D.TDSkeletonRowColObj_msG], t2));
          t1.push(D.List_GbC);
          return new A.TDSkeleton(animation, 0, new A.TDSkeletonRowCol(t1), _null);
      }
    },
    TDSkeletonAnimation: function TDSkeletonAnimation(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDSkeletonTheme: function TDSkeletonTheme(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TDSkeleton: function TDSkeleton(t0, t1, t2, t3) {
      var _ = this;
      _.animation = t0;
      _.delay = t1;
      _.rowCol = t2;
      _.key = t3;
    },
    _TDSkeletonState: function _TDSkeletonState(t0, t1) {
      var _ = this;
      _.___TDSkeletonState__animation_F = _.___TDSkeletonState__controller_F = $;
      _._td_skeleton$_isLoading = true;
      _.SingleTickerProviderStateMixin__ticker = t0;
      _.SingleTickerProviderStateMixin__tickerModeNotifier = t1;
      _._framework$_element = _._widget = null;
    },
    _TDSkeletonState_initState_closure: function _TDSkeletonState_initState_closure(t0) {
      this.$this = t0;
    },
    _TDSkeletonState_initState__closure1: function _TDSkeletonState_initState__closure1() {
    },
    _TDSkeletonState_initState_closure0: function _TDSkeletonState_initState_closure0(t0) {
      this.$this = t0;
    },
    _TDSkeletonState_initState__closure0: function _TDSkeletonState_initState__closure0() {
    },
    _TDSkeletonState_initState_closure1: function _TDSkeletonState_initState_closure1(t0) {
      this.$this = t0;
    },
    _TDSkeletonState_initState__closure: function _TDSkeletonState_initState__closure(t0) {
      this.$this = t0;
    },
    _TDSkeletonState__buildObj_closure: function _TDSkeletonState__buildObj_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState__buildObj__closure: function _TDSkeletonState__buildObj__closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState_build_closure: function _TDSkeletonState_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState_build_closure0: function _TDSkeletonState_build_closure0(t0, t1) {
      this.$this = t0;
      this.context = t1;
    },
    _TDSkeletonState_build_closure1: function _TDSkeletonState_build_closure1() {
    },
    _TDSkeletonState_build__closure: function _TDSkeletonState_build__closure() {
    },
    __TDSkeletonState_State_SingleTickerProviderStateMixin: function __TDSkeletonState_State_SingleTickerProviderStateMixin() {
    },
    TDSkeletonRowColStyle__defaultRowSpacing(context) {
      var t1 = A_.TDTheme_of(type$.BuildContext._as(context)).__TDThemeData_spacerMap_A;
      t1 === $ && B.throwLateFieldNI("spacerMap");
      t1 = t1.$index(0, "spacer16");
      return t1 == null ? 16 : t1;
    },
    TDSkeletonRowColObjStyle__defaultBackground(context) {
      return H.TDColors_get_grayColor1(A_.TDTheme_of(type$.BuildContext._as(context)));
    },
    TDSkeletonRowColObjStyle__transparentBackground(context) {
      type$.BuildContext._as(context);
      return C.Color_Edl;
    },
    TDSkeletonRowColObjStyle__circleBorderRadius(context) {
      var t1 = A_.TDTheme_of(type$.BuildContext._as(context)).__TDThemeData_radiusMap_A;
      t1 === $ && B.throwLateFieldNI("radiusMap");
      t1 = t1.$index(0, "radiusCircle");
      return t1 == null ? 9999 : t1;
    },
    TDSkeletonRowColObjStyle__rectBorderRadius(context) {
      return Aj.TDRadius_get_radiusDefault(A_.TDTheme_of(type$.BuildContext._as(context)));
    },
    TDSkeletonRowColObjStyle__textBorderRadius(context) {
      var t1 = A_.TDTheme_of(type$.BuildContext._as(context)).__TDThemeData_radiusMap_A;
      t1 === $ && B.throwLateFieldNI("radiusMap");
      t1 = t1.$index(0, "radiusSmall");
      return t1 == null ? 3 : t1;
    },
    TDSkeletonRowColStyle: function TDSkeletonRowColStyle() {
    },
    TDSkeletonRowCol: function TDSkeletonRowCol(t0) {
      this.objects = t0;
    },
    TDSkeletonRowCol_visualHeight_closure: function TDSkeletonRowCol_visualHeight_closure() {
    },
    TDSkeletonRowCol_visualHeight__closure: function TDSkeletonRowCol_visualHeight__closure() {
    },
    TDSkeletonRowCol_visualHeight_closure0: function TDSkeletonRowCol_visualHeight_closure0() {
    },
    TDSkeletonRowColObjStyle: function TDSkeletonRowColObjStyle(t0, t1) {
      this.background = t0;
      this.borderRadius = t1;
    },
    TDSkeletonRowColObj: function TDSkeletonRowColObj(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.flex = t2;
      _.style = t3;
    },
    Quaternion_Quaternion$identity() {
      var t1 = new Float64Array(4);
      t1[3] = 1;
      return new A.Quaternion(t1);
    },
    Quaternion: function Quaternion(t0) {
      this._qStorage = t0;
    },
    MultipartFile_fromFile(filePath) {
      return A.multipartFileFromPath(filePath, null, null, null);
    },
    DateTime___new_tearOff(year, month, day, hour, minute, second, millisecond, microsecond) {
      return N.DateTime$(year, month, day, hour, minute, second, millisecond, microsecond);
    },
    DateTime___utc_tearOff(year, month, day, hour, minute, second, millisecond, microsecond) {
      return O.DateTime$utc(year, month, day, hour, minute, second, millisecond, microsecond);
    },
    DateTimeCopyWith_copyWith(_this, day, hour, microsecond, millisecond, minute, month, second, year) {
      var t1 = _this.isUtc ? A.core_DateTime___utc_tearOff$closure() : A.core_DateTime___new_tearOff$closure(),
        t2 = year == null ? B.Primitives_getYear(_this) : year,
        t3 = month == null ? B.Primitives_getMonth(_this) : month,
        t4 = day == null ? B.Primitives_getDay(_this) : day,
        t5 = hour == null ? B.Primitives_getHours(_this) : hour,
        t6 = minute == null ? B.Primitives_getMinutes(_this) : minute,
        t7 = second == null ? B.Primitives_getSeconds(_this) : second,
        t8 = millisecond == null ? B.Primitives_getMilliseconds(_this) : millisecond;
      return t1.call$8(t2, t3, t4, t5, t6, t7, t8, microsecond);
    },
    colorForScore(score) {
      switch (score) {
        case 1:
          return G.MaterialColor_nI1;
        case 2:
          return B_.MaterialColor_VpP;
        case 3:
          return D.MaterialColor_gyN;
        case 4:
          return D.MaterialColor_7bM;
        case 5:
          return AS.MaterialColor_vIZ;
        default:
          return C.Color_Edl;
      }
    },
    multipartFileFromPath(filePath, contentType, filename, headers) {
      return B.throwExpression($.$get$_err());
    },
    GridView$(children, gridDelegate, padding) {
      var _null = null,
        t1 = K.SliverChildListDelegate$(children, true, true, true),
        t2 = children.length;
      return new H.GridView(gridDelegate, t1, padding, C.Axis_1, false, _null, _null, Aw.AlwaysScrollableScrollPhysics_null, _null, false, _null, 0, _null, t2, G.DragStartBehavior_1, At.ScrollViewKeyboardDismissBehavior_0, _null, C.Clip_1, L.HitTestBehavior_1, _null);
    },
    FDateTimeLocalizations_get_firstDayOfWeek(_this) {
      var t1 = _this.localeName;
      return t1 === "" ? 7 : K.DateFormat$yMMMMd(t1).get$dateSymbols().FIRSTDAYOFWEEK + 1;
    },
    Dates_leapYear(year) {
      var t1;
      if (C.JSInt_methods.$mod(year, 4) === 0)
        t1 = C.JSInt_methods.$mod(year, 100) !== 0 || C.JSInt_methods.$mod(year, 400) === 0;
      else
        t1 = false;
      return t1;
    }
  },
  D, Q, R, Ar, Y, Ad, Ae, Af, Z, T, AU, AV, A7, AW, AX, AY, I, AZ, As, G, B_, A8, At, B0, A9, E, A1, B1, Au, Av, S, X, B2, L, B3, A3, B4, U, Aw, K, P;
  J = holdersList[1];
  B = holdersList[0];
  C = holdersList[2];
  A_ = holdersList[66];
  Ax = holdersList[87];
  A4 = holdersList[124];
  Ag = holdersList[94];
  Ay = holdersList[147];
  Az = holdersList[57];
  AA = holdersList[175];
  Ah = holdersList[76];
  AB = holdersList[179];
  AC = holdersList[56];
  N = holdersList[63];
  Ai = holdersList[164];
  M = holdersList[171];
  O = holdersList[75];
  A2 = holdersList[88];
  V = holdersList[62];
  Aj = holdersList[55];
  AD = holdersList[174];
  AE = holdersList[105];
  W = holdersList[132];
  Ak = holdersList[67];
  Aa = holdersList[166];
  AF = holdersList[153];
  AG = holdersList[157];
  AH = holdersList[108];
  Al = holdersList[54];
  Am = holdersList[90];
  AI = holdersList[167];
  An = holdersList[12];
  Ao = holdersList[33];
  A5 = holdersList[23];
  Ab = holdersList[163];
  A0 = holdersList[131];
  AJ = holdersList[42];
  Ac = holdersList[129];
  AK = holdersList[14];
  AL = holdersList[34];
  Ap = holdersList[178];
  AM = holdersList[39];
  AN = holdersList[15];
  AO = holdersList[176];
  AP = holdersList[24];
  AQ = holdersList[13];
  H = holdersList[22];
  F = holdersList[170];
  A6 = holdersList[154];
  Aq = holdersList[52];
  AR = holdersList[32];
  AS = holdersList[181];
  AT = holdersList[6];
  A = hunkHelpers.updateHolder(holdersList[7], A);
  D = holdersList[165];
  Q = holdersList[16];
  R = holdersList[143];
  Ar = holdersList[21];
  Y = holdersList[120];
  Ad = holdersList[149];
  Ae = holdersList[79];
  Af = holdersList[139];
  Z = holdersList[74];
  T = holdersList[130];
  AU = holdersList[122];
  AV = holdersList[141];
  A7 = holdersList[123];
  AW = holdersList[48];
  AX = holdersList[138];
  AY = holdersList[144];
  I = holdersList[135];
  AZ = holdersList[84];
  As = holdersList[119];
  G = holdersList[145];
  B_ = holdersList[180];
  A8 = holdersList[114];
  At = holdersList[172];
  B0 = holdersList[20];
  A9 = holdersList[97];
  E = holdersList[136];
  A1 = holdersList[126];
  B1 = holdersList[169];
  Au = holdersList[117];
  Av = holdersList[151];
  S = holdersList[102];
  X = holdersList[89];
  B2 = holdersList[168];
  L = holdersList[137];
  B3 = holdersList[103];
  A3 = holdersList[121];
  B4 = holdersList[115];
  U = holdersList[98];
  Aw = holdersList[177];
  K = holdersList[44];
  P = holdersList[173];
  A.MyChatController.prototype = {
    get$messages() {
      return B.List_List$unmodifiable(this._messages, type$.Message);
    },
    get$operationsStream() {
      var t1 = this._operationController;
      return new B._BroadcastStream(t1, B._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    loadMessagesFromStorage$1(context) {
      return this.loadMessagesFromStorage$body$MyChatController(context);
    },
    loadMessagesFromStorage$body$MyChatController(context) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, sessionId, serverMessages, newMessages, rmsg, msg, e, t1, t2, t3, t4, t5, t6, t7, t8, t9, exception, $async$exception;
      var $async$loadMessagesFromStorage$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                $async$handler = 4;
                t1 = $async$self.cSM;
                sessionId = t1.get$currentSessionId();
                t2 = $async$self.uSM;
                $async$goto = 7;
                return B._asyncAwait(t1.sessionConversation$2(sessionId, t2.get$currentToken()), $async$loadMessagesFromStorage$1);
              case 7:
                // returning from await.
                serverMessages = $async$result;
                $async$goto = J.get$isEmpty$asx(serverMessages) ? 8 : 9;
                break;
              case 8:
                // then
                $async$goto = 10;
                return B._asyncAwait($async$self.setMessages$1(B._setArrayType([], type$.JSArray_Message)), $async$loadMessagesFromStorage$1);
              case 10:
                // returning from await.
                t1 = $async$result;
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              case 9:
                // join
                newMessages = B._setArrayType([], type$.JSArray_Message);
                $label0$0:
                  for (t1 = J.get$iterator$ax(serverMessages), t3 = type$.nullable_Map_String_dynamic, t4 = $async$self.__MyChatController_dio_F; t1.moveNext$0();) {
                    rmsg = t1.get$current(t1);
                    if (rmsg.text.length === 0)
                      continue $label0$0;
                    msg = null;
                    switch (rmsg.messageType) {
                      case "text":
                        t5 = rmsg.id;
                        t6 = rmsg.authorId;
                        t7 = rmsg.createdAt;
                        t8 = rmsg.text;
                        if (0 >= t8.length) {
                          $async$returnValue = B.ioore(t8, 0);
                          // goto return
                          $async$goto = 1;
                          break $async$outer;
                        }
                        t8 = t8[0];
                        msg = new A.TextMessage(t5, t6, null, t7, null, null, null, null, null, null, null, null, null, null, null, t8, null, "text");
                        break;
                      case "image":
                        t5 = rmsg.id;
                        t6 = rmsg.createdAt;
                        t4 === $ && B.throwLateFieldNI("dio");
                        t7 = t4.DioMixin___DioMixin_options_A;
                        t7 === $ && B.throwLateFieldNI("options");
                        t7 = t7.OptionsMixin___OptionsMixin__baseUrl_A;
                        t7 === $ && B.throwLateFieldNI("_baseUrl");
                        t8 = t2.get$currentUserId();
                        t9 = rmsg.text;
                        if (0 >= t9.length) {
                          $async$returnValue = B.ioore(t9, 0);
                          // goto return
                          $async$goto = 1;
                          break $async$outer;
                        }
                        t9 = t9[0];
                        msg = new A.ImageMessage(t5, "user", null, t6, null, null, null, null, null, null, null, null, null, null, t7 + "/chat/resources/image?filename=user_" + t8 + "/" + t9, null, null, null, null, null, null, null, "image");
                        break;
                      case "custom":
                      case "artifact":
                      case "func":
                        t5 = rmsg.id;
                        t6 = rmsg.authorId;
                        t7 = rmsg.createdAt;
                        t8 = rmsg.text;
                        if (0 >= t8.length) {
                          $async$returnValue = B.ioore(t8, 0);
                          // goto return
                          $async$goto = 1;
                          break $async$outer;
                        }
                        t8 = t3._as(C.C_JsonCodec.decode$1(0, t8[0]));
                        msg = new H.CustomMessage(t5, t6, null, t7, null, null, null, null, null, null, null, null, t8, null, "custom");
                        break;
                      default:
                        continue $label0$0;
                    }
                    J.add$1$ax(newMessages, msg);
                  }
                $async$goto = 11;
                return B._asyncAwait($async$self.setMessages$1(newMessages), $async$loadMessagesFromStorage$1);
              case 11:
                // returning from await.
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$errorStack.pop();
                e = B.unwrapException($async$exception);
                if (context._widget != null)
                  V.showError(context, e);
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return B._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
            }
      });
      return B._asyncStartSync($async$loadMessagesFromStorage$1, $async$completer);
    },
    insertMessage$1(message) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$insertMessage$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
              if (C.JSArray_methods.any$1(t1, new A.MyChatController_insertMessage_closure(message))) {
                // goto return
                $async$goto = 1;
                break;
              }
              C.JSArray_methods.add$1(t1, message);
              $async$self._operationController.add$1(0, new A.ChatOperation(Ab.ChatOperationType_0, null, message, t1.length - 1, null));
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$insertMessage$1, $async$completer);
    },
    updateMessage$2(oldMessage, newMessage) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, actualOld, t1, index;
      var $async$updateMessage$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._messages;
              index = C.JSArray_methods.indexWhere$1(t1, new A.MyChatController_updateMessage_closure(oldMessage));
              if (index !== -1) {
                if (!(index >= 0 && index < t1.length)) {
                  $async$returnValue = B.ioore(t1, index);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                actualOld = t1[index];
                if (actualOld.$eq(0, newMessage)) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                C.JSArray_methods.$indexSet(t1, index, newMessage);
                $async$self._operationController.add$1(0, new A.ChatOperation(Ab.ChatOperationType_2, actualOld, newMessage, index, null));
              }
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$updateMessage$2, $async$completer);
    },
    setMessages$1(messages) {
      return this.setMessages$body$MyChatController(type$.List_Message._as(messages));
    },
    setMessages$body$MyChatController(messages) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, ids, uniqueMessages;
      var $async$setMessages$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              ids = B.LinkedHashSet_LinkedHashSet$_empty(type$.String);
              uniqueMessages = B._setArrayType([], type$.JSArray_Message);
              for (t1 = J.get$iterator$ax(messages); t1.moveNext$0();) {
                t2 = t1.get$current(t1);
                if (ids.add$1(0, t2.get$id(t2)))
                  C.JSArray_methods.add$1(uniqueMessages, t2);
              }
              t1 = $async$self._messages;
              C.JSArray_methods.clear$0(t1);
              C.JSArray_methods.addAll$1(t1, uniqueMessages);
              $async$self._operationController.add$1(0, new A.ChatOperation(Ab.ChatOperationType_4, null, null, null, t1));
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$setMessages$1, $async$completer);
    },
    handleSendMessage$3(msg, onUpdate, onError) {
      return this.handleSendMessage$body$MyChatController(msg, type$.void_Function._as(onUpdate), type$.dynamic_Function_String._as(onError));
    },
    handleSendMessage$body$MyChatController(msg, onUpdate, onError) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$errorStack = [], $async$self = this, customs, t1, path, stream, e, t2, t3, _i, path0, t4, t5, exception, _box_0, streamId, text, $async$exception, $async$temp1, $async$temp2;
      var $async$handleSendMessage$3 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              streamId = R.C_Uuid.v4$0();
              text = "";
              _box_0.accumulatedText = "";
              $async$goto = typeof msg == "string" ? 3 : 5;
              break;
            case 3:
              // then
              text = msg;
              t2 = C.JSString_methods.trim$0(msg).length === 0;
              if (t2 && $async$self._pendingImagePaths.length === 0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = !t2 ? 6 : 7;
              break;
            case 6:
              // then
              t2 = R.C_Uuid.v4$0();
              $async$goto = 8;
              return B._asyncAwait($async$self.insertMessage$1(A.TextMessage$("user", new B.DateTime(Date.now(), 0, false).toUtc$0(), null, null, null, null, t2, null, null, null, null, null, null, null, null, msg, null)), $async$handleSendMessage$3);
            case 8:
              // returning from await.
            case 7:
              // join
              t2 = $async$self._pendingImagePaths, t3 = t2.length, _i = 0;
            case 9:
              // for condition
              if (!(_i < t2.length)) {
                // goto after for
                $async$goto = 11;
                break;
              }
              path0 = t2[_i];
              t4 = R.C_Uuid.v4$0();
              t5 = new B.DateTime(Date.now(), 0, false).toUtc$0();
              $async$goto = 12;
              return B._asyncAwait($async$self.insertMessage$1(new A.ImageMessage(t4, "user", null, t5, null, null, null, null, null, null, null, null, null, null, path0, null, null, null, null, null, null, null, "image")), $async$handleSendMessage$3);
            case 12:
              // returning from await.
            case 10:
              // for update
              t2.length === t3 || (0, B.throwConcurrentModificationError)(t2), ++_i;
              // goto for condition
              $async$goto = 9;
              break;
            case 11:
              // after for
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = msg instanceof H.CustomMessage ? 13 : 14;
              break;
            case 13:
              // then
              text = "<CUSTOM_MESSAGE>" + C.C_JsonCodec.encode$2$toEncodable(msg.get$metadata(0), null);
              $async$goto = 15;
              return B._asyncAwait($async$self.insertMessage$1(msg), $async$handleSendMessage$3);
            case 15:
              // returning from await.
            case 14:
              // join
            case 4:
              // join
              $async$goto = 16;
              return B._asyncAwait($async$self.insertMessage$1(A.TextStreamMessage$("server", new B.DateTime(Date.now(), 0, false).toUtc$0(), null, null, null, streamId, null, null, null, null, null, null, null, streamId, null)), $async$handleSendMessage$3);
            case 16:
              // returning from await.
              customs = B._setArrayType([], type$.JSArray_Map_String_dynamic);
              $async$handler = 18;
              t2 = text;
              t3 = $async$self.cSM.get$currentSessionId();
              t1 = B._setArrayType([], type$.JSArray_MultipartFile);
              t4 = $async$self._pendingImagePaths, t5 = t4.length, _i = 0;
            case 21:
              // for condition
              if (!(_i < t4.length)) {
                // goto after for
                $async$goto = 23;
                break;
              }
              path = t4[_i];
              $async$temp1 = J;
              $async$temp2 = t1;
              $async$goto = 24;
              return B._asyncAwait(A.MultipartFile_fromFile(path), $async$handleSendMessage$3);
            case 24:
              // returning from await.
              $async$temp1.add$1$ax($async$temp2, $async$result);
            case 22:
              // for update
              t4.length === t5 || (0, B.throwConcurrentModificationError)(t4), ++_i;
              // goto for condition
              $async$goto = 21;
              break;
            case 23:
              // after for
              stream = $async$self.sendMessageStream$3$images$query$sessionId(t1, t2, t3);
              C.JSArray_methods.clear$0(t4);
              onUpdate.call$0();
              stream.listen$3$onDone$onError(new A.MyChatController_handleSendMessage_closure(_box_0, $async$self, streamId, customs), new A.MyChatController_handleSendMessage_closure0($async$self, streamId, customs), new A.MyChatController_handleSendMessage_closure1($async$self, streamId));
              $async$handler = 2;
              // goto after finally
              $async$goto = 20;
              break;
            case 18:
              // catch
              $async$handler = 17;
              $async$exception = $async$errorStack.pop();
              e = B.unwrapException($async$exception);
              onError.call$1(J.toString$0$(e));
              // goto after finally
              $async$goto = 20;
              break;
            case 17:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 20:
              // after finally
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$handleSendMessage$3, $async$completer);
    },
    handleAttachmentTap$2(context, onUpdate) {
      return this.handleAttachmentTap$body$MyChatController(context, type$.void_Function._as(onUpdate));
    },
    handleAttachmentTap$body$MyChatController(context, onUpdate) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, $navigator, t1;
      var $async$handleAttachmentTap$2 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $navigator = S.Navigator_of(context, false);
              t1 = I.Localizations_of(context, G.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
              t1.toString;
              t2 = $navigator._framework$_element;
              t2.toString;
              t2 = A3.InheritedTheme_capture(context, t2);
              t3 = t1.get$scrimLabel();
              t1 = t1.scrimOnTapHint$1(t1.get$bottomSheetLabel());
              t4 = I.Theme_of(context);
              t5 = $.$get$ChangeNotifier__emptyListeners();
              t6 = B._setArrayType([], type$.JSArray_of_Future_bool_Function);
              t7 = $.Zone__current;
              t8 = type$._Future_dynamic;
              t9 = type$._AsyncCompleter_dynamic;
              t10 = I.ProxyAnimation$(G.C__AlwaysDismissedAnimation);
              t11 = B._setArrayType([], type$.JSArray_OverlayEntry);
              t12 = $.Zone__current;
              $async$goto = 2;
              return B._asyncAwait($navigator.push$1$1(new A.ModalBottomSheetRoute(new A.MyChatController_handleAttachmentTap_closure($async$self, onUpdate), t2, false, 0.5625, null, null, null, C.Clip_1, null, t4.bottomSheetTheme.modalBarrierColor, true, true, null, null, null, false, null, t1, new B.ValueNotifier(C.EdgeInsets_0_0_0_0, t5, type$.ValueNotifier_EdgeInsets), t3, null, null, t6, B.LinkedHashSet_LinkedHashSet$_empty(type$.PopEntry_nullable_Object), new I.LabeledGlobalKey(null, type$.LabeledGlobalKey__ModalScopeState_dynamic), new I.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget), new Ag.PageStorageBucket(), null, 0, new B._AsyncCompleter(new B._Future(t7, t8), t9), t10, t11, null, Ay.RouteSettings_null_null, new B.ValueNotifier(null, t5, type$.ValueNotifier_nullable_String), new B._AsyncCompleter(new B._Future(t12, t8), t9), new B._AsyncCompleter(new B._Future(t12, t8), t9), type$.ModalBottomSheetRoute_dynamic), type$.dynamic), $async$handleAttachmentTap$2);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$handleAttachmentTap$2, $async$completer);
    },
    sendMessageStream$3$images$query$sessionId(images, query, sessionId) {
      return this.sendMessageStream$body$MyChatController(type$.List_MultipartFile._as(images), query, sessionId);
    },
    sendMessageStream$body$MyChatController(images, query, sessionId) {
      var $async$sendMessageStream$3$images$query$sessionId = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        switch ($async$errorCode) {
          case 2:
            $async$next = $async$nextWhenCanceled;
            $async$goto = $async$next.pop();
            break;
          case 1:
            $async$errorStack.push($async$result);
            $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
              t1.$indexSet(0, "session_id", sessionId);
              t1.$indexSet(0, "query", query);
              t2 = B._setArrayType([], type$.JSArray_MapEntry_String_String);
              t3 = type$.JSArray_MapEntry_String_MultipartFile;
              t4 = B._setArrayType([], t3);
              formData = new A.FormData(t2, t4);
              formData._form_data$_init$2$fromMap$listFormat(t1, Ai.ListFormat_4);
              t3 = B._setArrayType([], t3);
              for (t1 = images.length, t2 = type$.MapEntry_String_MultipartFile, _i = 0; _i < images.length; images.length === t1 || (0, B.throwConcurrentModificationError)(images), ++_i)
                t3.push(new B.MapEntry("images", images[_i], t2));
              C.JSArray_methods.addAll$1(t4, t3);
              t1 = $async$self.__MyChatController_dio_F;
              t1 === $ && B.throwLateFieldNI("dio");
              $async$goto = 3;
              return Q._asyncStarHelper(t1.post$1$3$data$options("/chat/send", formData, N.Options$(null, null, Ai.ResponseType_1), type$.ResponseBody), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 3:
              // returning from await.
              response = $async$result;
              if (response.statusCode !== 200 || response.data == null)
                throw B.wrapException(B.Exception_Exception("\u8bf7\u6c42\u5931\u8d25: " + B.S(response.statusCode)));
              t1 = response.data.stream;
              t2 = B._instanceType(t1)._eval$1("CastStream<Stream.T,List<int>>");
              t1 = new B._StreamIterator(B.checkNotNullable(t2._eval$1("StreamTransformer<Stream.T,String>")._as(C.Utf8Decoder_false).bind$1(new B.CastStream(t1, t2)), "stream", type$.Object), type$._StreamIterator_String);
              $async$handler = 4;
              t2 = type$.Map_String_dynamic;
            case 7:
              // for condition
              $async$temp1 = B;
              $async$goto = 9;
              return Q._asyncStarHelper(t1.moveNext$0(), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 9:
              // returning from await.
              if (!$async$temp1.boolConversionCheck($async$result)) {
                // goto after for
                $async$goto = 8;
                break;
              }
              chunk = t1.get$current(0);
              t3 = J.split$1$s(chunk, "\n"), t4 = t3.length, _i = 0;
            case 10:
              // for condition
              if (!(_i < t3.length)) {
                // goto after for
                $async$goto = 12;
                break;
              }
              line = t3[_i];
              if (J.trim$0$s(line).length === 0) {
                // goto for update
                $async$goto = 11;
                break;
              }
              $async$handler = 14;
              $async$goto = 17;
              $async$nextWhenCanceled = [1, 5];
              return Q._asyncStarHelper(Q._IterationMarker_yieldSingle(t2._as(C.C_JsonCodec.decode$1(0, line))), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 17:
              // after yield
              $async$handler = 4;
              // goto after finally
              $async$goto = 16;
              break;
            case 14:
              // catch
              $async$handler = 13;
              $async$exception = $async$errorStack.pop();
              t2 = B.Exception_Exception("\u89e3\u6790\u5931\u8d25: " + B.S(line));
              throw B.wrapException(t2);
              // goto after finally
              $async$goto = 16;
              break;
            case 13:
              // uncaught
              // goto uncaught
              $async$goto = 4;
              break;
            case 16:
              // after finally
            case 11:
              // for update
              t3.length === t4 || (0, B.throwConcurrentModificationError)(t3), ++_i;
              // goto for condition
              $async$goto = 10;
              break;
            case 12:
              // after for
              // goto for condition
              $async$goto = 7;
              break;
            case 8:
              // after for
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              $async$goto = 18;
              return Q._asyncStarHelper(t1.cancel$0(0), $async$sendMessageStream$3$images$query$sessionId, $async$controller);
            case 18:
              // returning from await.
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
            case 1:
              // return
              return Q._asyncStarHelper(null, 0, $async$controller);
            case 2:
              // rethrow
              return Q._asyncStarHelper($async$errorStack.at(-1), 1, $async$controller);
          }
      });
      var $async$goto = 0,
        $async$controller = Q._makeAsyncStarStreamController($async$sendMessageStream$3$images$query$sessionId, type$.Map_String_dynamic),
        $async$nextWhenCanceled, $async$handler = 2, $async$errorStack = [], $async$next = [], $async$self = this, response, chunk, line, t2, t3, t4, formData, _i, exception, t1, $async$exception, $async$temp1;
      return Q._streamOfController($async$controller);
    },
    $isChatController: 1
  };
  A._MyChatController_Object_UploadProgressMixin.prototype = {};
  A._MyChatController_Object_UploadProgressMixin_ScrollToMessageMixin.prototype = {};
  A.ChatPage.prototype = {
    createState$0() {
      return new A._ChatPageState(null, null);
    }
  };
  A._ChatPageState.prototype = {
    initState$0() {
      this.super$State$initState();
      this._chat_page$_initAsync$0();
    },
    dispose$0() {
      var t1 = this.___ChatPageState__cC_A;
      t1 === $ && B.throwLateFieldNI("_cC");
      t1._operationController.close$0(0);
      t1.disposeUploadProgress$0();
      t1.set$_scroll_to_message_mixin$_scrollToMessageId(null);
      t1.set$_scroll_to_message_mixin$_scrollToIndex(null);
      this.super$__ChatPageState_State_TickerProviderStateMixin$dispose();
    },
    _chat_page$_initAsync$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, userSessionManager, chatSessionManager, e, streamManager, t2, exception, t3, todaySessions, t1, $async$exception;
      var $async$_chat_page$_initAsync$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._framework$_element;
              t1.toString;
              userSessionManager = A4.Provider_of(t1, false, type$.UserSessionManager);
              t1 = $async$self._framework$_element;
              t1.toString;
              chatSessionManager = A4.Provider_of(t1, false, type$.ChatSessionManager);
              t1 = $async$self._framework$_element;
              t1.toString;
              streamManager = A4.Provider_of(t1, false, type$.StreamStateManager);
              t1 = $async$self._framework$_element;
              t1.toString;
              t2 = type$.HealthDataManager;
              $async$self.___ChatPageState__hDM_A = t2._as(A4.Provider_of(t1, false, t2));
              $async$goto = 2;
              return B._asyncAwait(B.loadDeferredLibrary("chat_ui", ""), $async$_chat_page$_initAsync$0);
            case 2:
              // returning from await.
              $async$goto = 3;
              return B._asyncAwait(B.loadDeferredLibrary("fimage", ""), $async$_chat_page$_initAsync$0);
            case 3:
              // returning from await.
              $async$goto = 4;
              return B._asyncAwait(B.loadDeferredLibrary("ftext", ""), $async$_chat_page$_initAsync$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return B._asyncAwait(B.loadDeferredLibrary("fstream", ""), $async$_chat_page$_initAsync$0);
            case 5:
              // returning from await.
              $async$goto = 6;
              return B._asyncAwait(B.loadDeferredLibrary("fcustom", ""), $async$_chat_page$_initAsync$0);
            case 6:
              // returning from await.
              $async$handler = 8;
              $async$goto = 11;
              return B._asyncAwait(chatSessionManager.init$1(userSessionManager.get$currentToken()), $async$_chat_page$_initAsync$0);
            case 11:
              // returning from await.
              $async$handler = 1;
              // goto after finally
              $async$goto = 10;
              break;
            case 8:
              // catch
              $async$handler = 7;
              $async$exception = $async$errorStack.pop();
              e = B.unwrapException($async$exception);
              t1 = $async$self._framework$_element;
              if (t1 != null)
                V.showError(t1, e);
              // goto after finally
              $async$goto = 10;
              break;
            case 7:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 10:
              // after finally
              t1 = userSessionManager;
              t1 = new A.MyChatController(chatSessionManager, B._setArrayType([], type$.JSArray_Message), B.StreamController_StreamController$broadcast(false, type$.ChatOperation), streamManager, t1, B._setArrayType([], type$.JSArray_String), t1.get$dio(), null, null, B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.StreamController_double));
              $async$self.___ChatPageState__cC_A = t1;
              t2 = $async$self._framework$_element;
              $async$goto = t2 != null ? 12 : 13;
              break;
            case 12:
              // then
              $async$goto = 14;
              return B._asyncAwait(t1.loadMessagesFromStorage$1(t2), $async$_chat_page$_initAsync$0);
            case 14:
              // returning from await.
            case 13:
              // join
              t1 = $async$self.___ChatPageState__cC_A.cSM.get$localSessions();
              t2 = B._arrayInstanceType(t1);
              t3 = t2._eval$1("WhereIterable<1>");
              todaySessions = B.List_List$of(new B.WhereIterable(t1, t2._eval$1("bool(1)")._as(new A._ChatPageState__initAsync_closure()), t3), true, t3._eval$1("Iterable.E"));
              if (todaySessions.length !== 0)
                $async$self._switchSession$1(C.JSArray_methods.get$first(todaySessions).sessionId);
              $async$self.setState$1(new A._ChatPageState__initAsync_closure0($async$self));
              // implicit return
              return B._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$_chat_page$_initAsync$0, $async$completer);
    },
    _switchSession$1(sessionId) {
      return this.setState$1(new A._ChatPageState__switchSession_closure(this, sessionId));
    },
    _createSession$1(_, date) {
      return this._createSession$body$_ChatPageState(0, date);
    },
    _createSession$body$_ChatPageState(_, date) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, token, newSessionId, exception, t1, $async$exception;
      var $async$_createSession$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.___ChatPageState__cC_A;
              t1 === $ && B.throwLateFieldNI("_cC");
              token = t1.uSM.get$currentToken();
              $async$handler = 3;
              $async$goto = 6;
              return B._asyncAwait($async$self.___ChatPageState__cC_A.cSM.sessionCreate$2(token, date), $async$_createSession$1);
            case 6:
              // returning from await.
              newSessionId = $async$result;
              $async$goto = 7;
              return B._asyncAwait($async$self.___ChatPageState__cC_A.cSM.init$1(token), $async$_createSession$1);
            case 7:
              // returning from await.
              $async$self._switchSession$1(newSessionId);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              t1 = $async$self._framework$_element;
              if (t1 != null)
                V.showError(t1, "\u521b\u5efa\u4f1a\u8bdd\u5931\u8d25");
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return B._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$_createSession$1, $async$completer);
    },
    _deleteSession$1(sessionId) {
      var t1 = this._framework$_element;
      t1.toString;
      return A2.showDialog(new A._ChatPageState__deleteSession_closure(this, sessionId), t1, type$.bool);
    },
    _showSessionSwitchDialog$3(context, sessions, date) {
      return A2.showDialog(new A._ChatPageState__showSessionSwitchDialog_closure(this, date, type$.List_SessionInfo._as(sessions)), context, type$.void);
    },
    _showCalendarDialog$1(sessions) {
      return this._showCalendarDialog$body$_ChatPageState(type$.List_SessionInfo._as(sessions));
    },
    _showCalendarDialog$body$_ChatPageState(sessions) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, tileSize, sessionMap, t1;
      var $async$_showCalendarDialog$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              sessionMap = N.groupBy(sessions, new A._ChatPageState__showCalendarDialog_closure(), type$.SessionInfo, type$.DateTime);
              t1 = $async$self._framework$_element;
              t1.toString;
              t1 = B.InheritedModel_inheritFrom(t1, null, type$.MediaQuery).data;
              t2 = $async$self._framework$_element;
              t2.toString;
              tileSize = Math.min(t1.size._dx * 0.65 / 7, Z.FTheme_of(t2).calendarStyle.dayPickerStyle.tileSize);
              t2 = $async$self._framework$_element;
              t2.toString;
              A2.showDialog(new A._ChatPageState__showCalendarDialog_closure0($async$self, new A._ChatPageState__showCalendarDialog_calendar($async$self, tileSize, sessionMap)), t2, type$.dynamic);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$_showCalendarDialog$1, $async$completer);
    },
    _buildPendingImagesPreview$0() {
      var t2, _null = null,
        t1 = this.___ChatPageState__cC_A;
      t1 === $ && B.throwLateFieldNI("_cC");
      t2 = type$.String;
      if (B.List_List$unmodifiable(t1._pendingImagePaths, t2).length !== 0)
        return new E.SizedBox(_null, 80, Aq.ListView$builder(_null, _null, new A._ChatPageState__buildPendingImagesPreview_closure(this), B.List_List$unmodifiable(this.___ChatPageState__cC_A._pendingImagePaths, t2).length, _null, _null, C.Axis_0, false), _null);
      else
        return AY.SizedBox_0_0_null_null;
    },
    build$1(context) {
      var t1, t2, i, size, isWide, cd, calendar, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, _this = this, _null = null;
      if (_this._chat_page$_initialized) {
        t1 = _this.___ChatPageState__cC_A;
        t1 === $ && B.throwLateFieldNI("_cC");
        t1 = t1.cSM.get$currentSessionId().length === 0;
      } else
        t1 = true;
      if (t1) {
        t1 = B._setArrayType([], type$.JSArray_TDSkeleton);
        for (t2 = type$.MediaQuery, i = 0; i < C.JSNumber_methods.ceil$0(B.InheritedModel_inheritFrom(context, _null, t2).data.size._dy / 200); ++i)
          t1.push(A.TDSkeleton_TDSkeleton(D.TDSkeletonAnimation_1, D.TDSkeletonTheme_3));
        return Al.StyledWidget_padding(A9.StyledList_toColumn(t1, G.CrossAxisAlignment_2, G.MainAxisAlignment_3, G.MainAxisSize_1), _null, 40, 40);
      }
      size = B.InheritedModel_inheritFrom(context, _null, type$.MediaQuery).data.size;
      t1 = size._dx;
      isWide = t1 > size._dy;
      t1 = isWide ? t1 * 0.6 : t1 * 0.9;
      t2 = _this.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      cd = t2.cSM.get$currentSessionDate();
      calendar = K.FButton$icon(D.Icon_5Oy, new A._ChatPageState_build_closure(_this), Aa.Variant_3);
      t2 = isWide ? W.Text$("" + B.Primitives_getYear(cd) + "\u5e74" + B.Primitives_getMonth(cd) + "\u6708" + B.Primitives_getDay(cd) + "\u65e5", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null) : Ax.StyledList_toRow(B._setArrayType([calendar, new E.SizedBox(16, _null, _null, _null), W.Text$("" + B.Primitives_getMonth(cd) + "\u6708" + B.Primitives_getDay(cd) + "\u65e5", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null)], type$.JSArray_Widget), G.CrossAxisAlignment_1, G.MainAxisAlignment_0, G.MainAxisSize_1, _null);
      t3 = type$.JSArray_Widget;
      t3 = !isWide ? B._setArrayType([], t3) : B._setArrayType([K.FButton$icon(D.Icon_qkB, new A._ChatPageState_build_closure0(_this), Aa.Variant_3), K.FButton$icon(D.Icon_Qoy, new A._ChatPageState_build_closure1(_this), Aa.Variant_3), calendar], t3);
      B.checkDeferredIsLoaded("chat_ui");
      t4 = I.Theme_of(context);
      t5 = t4.colorScheme;
      t6 = t5.surface;
      t7 = t5._surfaceContainerLow;
      if (t7 == null)
        t7 = t6;
      t8 = t5._surfaceContainer;
      if (t8 == null)
        t8 = t6;
      t9 = t5._surfaceContainerHigh;
      if (t9 == null)
        t9 = t6;
      t4 = t4.textTheme;
      t10 = t4.bodyLarge;
      t10.toString;
      t11 = t4.bodyMedium;
      t11.toString;
      t12 = t4.bodySmall;
      t12.toString;
      t13 = t4.labelLarge;
      t13.toString;
      t14 = t4.labelMedium;
      t14.toString;
      t4 = t4.labelSmall;
      t4.toString;
      return K.FScaffold$(H.StyledWidget_toMaterial(An.Chat$(new A5._Builders(new A._ChatPageState_build_closure2(new B.BoxConstraints(0, t1, 0, 1 / 0)), new A._ChatPageState_build_closure3(), new A._ChatPageState_build_closure4(_this), new A._ChatPageState_build_closure5(_this, context), new A._ChatPageState_build_closure6(_this), new A._ChatPageState_build_closure7()), _this.___ChatPageState__cC_A, "user", new A._ChatPageState_build_closure8(_this, context), new A._ChatPageState_build_closure9(_this, context), new A._ChatPageState_build_closure10(_this), new A5._ChatTheme(new A5._ChatColors(t5.primary, t5.onPrimary, t6, t5.onSurface, t8, t7, t9), new A5._ChatTypography(t10, t11, t12, t13, t14, t4), AI.BorderRadius_UYD))), new A._FRootHeader(t3, t2, _null));
    },
    $isTickerProvider: 1
  };
  A.__ChatPageState_State_TickerProviderStateMixin.prototype = {
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTickers$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this.TickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTickers());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    }
  };
  A.FormData.prototype = {
    _form_data$_init$2$fromMap$listFormat(fromMap, listFormat) {
      type$.nullable_Map_String_dynamic._as(fromMap);
      this.__FormData__boundary_A = "--dio-boundary-" + C.JSString_methods.padLeft$2(C.JSInt_methods.toString$0($.$get$_random().nextInt$1(4294967296)), 10, "0");
      N.encodeMap(fromMap, new A.FormData__init_closure(this), false, false, listFormat);
    },
    get$boundary() {
      var t1 = this.__FormData__boundary_A;
      t1 === $ && B.throwLateFieldNI("_boundary");
      return t1;
    },
    _headerForFile$1(entry) {
      var file, header, t1 = {};
      type$.MapEntry_String_MultipartFile._as(entry);
      file = entry.value;
      header = 'content-disposition: form-data; name="' + B.S(this._browserEncode$1(entry.key)) + '"';
      t1.header = header;
      file.get$filename(file);
      header = header + '; filename="' + B.S(this._browserEncode$1(file.get$filename(file))) + '"';
      t1.header = header;
      t1.header = header + "\r\ncontent-type: " + B.S(file.get$contentType(file));
      file.get$headers(file);
      file.get$headers(file).forEach$1(0, new A.FormData__headerForFile_closure(t1));
      return t1.header + "\r\n\r\n";
    },
    _browserEncode$1(value) {
      var t1 = B.RegExp_RegExp("\\r\\n|\\r|\\n", true, false, false, false);
      t1 = B.stringReplaceAllUnchecked(value, t1, "%0D%0A");
      t1 = B.stringReplaceAllUnchecked(t1, '"', "%22");
      return t1;
    },
    get$length(_) {
      var t1, t2, $length, _i, entry, t3, t4, t5, t6, file, _this = this,
        _s9_ = "_boundary";
      for (t1 = _this.fields, t2 = t1.length, $length = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        t3 = _this.__FormData__boundary_A;
        t3 === $ && B.throwLateFieldNI(_s9_);
        t4 = B._asString(entry.key);
        t5 = B._asString(entry.value);
        t6 = B.RegExp_RegExp("\\r\\n|\\r|\\n", true, false, false, false);
        t4 = B.stringReplaceAllUnchecked(t4, t6, "%0D%0A");
        t4 = B.stringReplaceAllUnchecked(t4, '"', "%22");
        $length += 2 + t3.length + 2 + C.C_Utf8Encoder.convert$1('content-disposition: form-data; name="' + B.S(t4) + '"\r\n\r\n').length + C.C_Utf8Encoder.convert$1(t5).length + 2;
      }
      for (t1 = _this.files, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        file = t1[_i];
        t3 = _this.__FormData__boundary_A;
        t3 === $ && B.throwLateFieldNI(_s9_);
        $length += C.JSInt_methods.$add(2 + t3.length + 2 + C.C_Utf8Encoder.convert$1(_this._headerForFile$1(file)).length, J.get$length$asx(file.value)) + 2;
      }
      t1 = _this.__FormData__boundary_A;
      t1 === $ && B.throwLateFieldNI(_s9_);
      return $length + 2 + t1.length + 4;
    },
    finalize$0() {
      var controller, writeLine, writeUtf8, t1, t2, _i, entry, t3, t4, t5, _this = this, _null = null;
      if (_this._isFinalized)
        throw B.wrapException(B.StateError$("The FormData has already been finalized. This typically means you are using the same FormData in repeated requests."));
      _this._isFinalized = true;
      controller = B.StreamController_StreamController(_null, _null, _null, false, type$.Uint8List);
      writeLine = new A.FormData_finalize_writeLine(controller);
      writeUtf8 = new A.FormData_finalize_writeUtf8(controller);
      for (t1 = _this.fields, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        t3 = _this.__FormData__boundary_A;
        t3 === $ && B.throwLateFieldNI("_boundary");
        writeUtf8.call$1("--" + t3 + "\r\n");
        t3 = B._asString(entry.key);
        t4 = B._asString(entry.value);
        t5 = B.RegExp_RegExp("\\r\\n|\\r|\\n", true, false, false, false);
        t3 = B.stringReplaceAllUnchecked(t3, t5, "%0D%0A");
        t3 = B.stringReplaceAllUnchecked(t3, '"', "%22");
        writeUtf8.call$1('content-disposition: form-data; name="' + B.S(t3) + '"\r\n\r\n');
        writeUtf8.call$1(t4);
        writeLine.call$0();
      }
      B.Future_Future(new A.FormData_finalize_closure(_this, writeUtf8, controller, writeLine), type$.void).then$1$1(0, new A.FormData_finalize_closure0(_this, writeUtf8), type$.Null).whenComplete$1(new A.FormData_finalize_closure1(controller));
      return new B._ControllerStream(controller, B._instanceType(controller)._eval$1("_ControllerStream<1>"));
    }
  };
  A._BottomSheetLayoutWithSizeListener.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderBottomSheetLayoutWithSizeListener(C.Size_0_0, this.onChildSizeChanged, this.animationValue, false, this.scrollControlDisabledMaxHeightRatio, null, new B._LayoutCacheStorage(), B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderBottomSheetLayoutWithSizeListener._as(renderObject);
      renderObject.set$onChildSizeChanged(this.onChildSizeChanged);
      renderObject.set$animationValue(this.animationValue);
      renderObject.set$isScrollControlled(false);
      renderObject.set$scrollControlDisabledMaxHeightRatio(this.scrollControlDisabledMaxHeightRatio);
    }
  };
  A._RenderBottomSheetLayoutWithSizeListener.prototype = {
    set$onChildSizeChanged(newCallback) {
      type$.void_Function_Size._as(newCallback);
      if (J.$eq$(this._onChildSizeChanged, newCallback))
        return;
      this.set$_onChildSizeChanged(newCallback);
      this.markNeedsLayout$0();
    },
    set$animationValue(newValue) {
      if (this._animationValue === newValue)
        return;
      this._animationValue = newValue;
      this.markNeedsLayout$0();
    },
    set$isScrollControlled(newValue) {
      return;
    },
    set$scrollControlDisabledMaxHeightRatio(newValue) {
      if (this._scrollControlDisabledMaxHeightRatio === newValue)
        return;
      this._scrollControlDisabledMaxHeightRatio = newValue;
      this.markNeedsLayout$0();
    },
    computeMinIntrinsicWidth$1(height) {
      B._asDouble(height);
      return 0;
    },
    computeMaxIntrinsicWidth$1(height) {
      B._asDouble(height);
      return 0;
    },
    computeMinIntrinsicHeight$1(width) {
      B._asDouble(width);
      return 0;
    },
    computeMaxIntrinsicHeight$1(width) {
      B._asDouble(width);
      return 0;
    },
    computeDryLayout$1(constraints) {
      return new B.Size(B.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), B.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight));
    },
    computeDryBaseline$2(constraints, baseline) {
      var child, childConstraints, result, t2, t3, childSize,
        t1 = type$.BoxConstraints;
      t1._as(constraints);
      type$.TextBaseline._as(baseline);
      child = this.RenderObjectWithChildMixin__child;
      if (child == null)
        return null;
      childConstraints = this._getConstraintsForChild$1(constraints);
      result = child.getDryBaseline$2(childConstraints, baseline);
      if (result == null)
        return null;
      t2 = childConstraints.minWidth;
      t3 = childConstraints.maxWidth;
      childSize = t2 >= t3 && childConstraints.minHeight >= childConstraints.maxHeight ? new B.Size(B.clampDouble(0, t2, t3), B.clampDouble(0, childConstraints.minHeight, childConstraints.maxHeight)) : child._computeIntrinsics$2$3(C.C__DryLayout, childConstraints, child.get$_computeDryLayout(), t1, type$.Size);
      return result + this._getPositionForChild$2(new B.Size(B.clampDouble(1 / 0, constraints.minWidth, constraints.maxWidth), B.clampDouble(1 / 0, constraints.minHeight, constraints.maxHeight)), childSize)._dy;
    },
    _getConstraintsForChild$1(constraints) {
      var t1 = constraints.maxWidth,
        t2 = this._scrollControlDisabledMaxHeightRatio;
      return new B.BoxConstraints(t1, t1, 0, constraints.maxHeight * t2);
    },
    _getPositionForChild$2(size, childSize) {
      return new B.Offset(0, size._dy - childSize._dy * this._animationValue);
    },
    performLayout$0() {
      var child, childConstraints, t3, t4, childSize, _this = this,
        t1 = type$.BoxConstraints,
        t2 = t1._as(B.RenderObject.prototype.get$constraints.call(_this));
      _this._box$_size = new B.Size(B.clampDouble(1 / 0, t2.minWidth, t2.maxWidth), B.clampDouble(1 / 0, t2.minHeight, t2.maxHeight));
      child = _this.RenderObjectWithChildMixin__child;
      if (child == null)
        return;
      childConstraints = _this._getConstraintsForChild$1(t1._as(B.RenderObject.prototype.get$constraints.call(_this)));
      t1 = childConstraints.minWidth;
      t2 = childConstraints.maxWidth;
      t3 = t1 >= t2;
      child.layout$2$parentUsesSize(childConstraints, !(t3 && childConstraints.minHeight >= childConstraints.maxHeight));
      t4 = child.parentData;
      t4.toString;
      type$.BoxParentData._as(t4);
      childSize = t3 && childConstraints.minHeight >= childConstraints.maxHeight ? new B.Size(B.clampDouble(0, t1, t2), B.clampDouble(0, childConstraints.minHeight, childConstraints.maxHeight)) : child.get$size(0);
      t4.offset = _this._getPositionForChild$2(_this.get$size(0), childSize);
      if (!_this._lastSize.$eq(0, childSize)) {
        _this._lastSize = childSize;
        _this._onChildSizeChanged.call$1(childSize);
      }
    },
    set$_onChildSizeChanged(_onChildSizeChanged) {
      this._onChildSizeChanged = type$.void_Function_Size._as(_onChildSizeChanged);
    }
  };
  A._ModalBottomSheet.prototype = {
    createState$0() {
      return new A._ModalBottomSheetState(D.Cubic_C8c, this.$ti._eval$1("_ModalBottomSheetState<1>"));
    }
  };
  A._ModalBottomSheetState.prototype = {
    _getRouteLabel$1(localizations) {
      var t1 = this._framework$_element;
      t1.toString;
      switch (I.Theme_of(t1).platform.index) {
        case 2:
        case 4:
          return "";
        case 0:
        case 1:
        case 3:
        case 5:
          return localizations.get$dialogLabel();
      }
    },
    handleDragStart$1(details) {
      this.set$animationCurve(L.C__Linear);
    },
    handleDragEnd$2$isClosing(details, isClosing) {
      this.set$animationCurve(new X.Split(this._widget.route._animationProxy.get$value(0), D.Cubic_C8c));
    },
    handleDragEnd$1(details) {
      return this.handleDragEnd$2$isClosing(details, null);
    },
    build$1(context) {
      var routeLabel, t2, t3, t4, t5, t6, t7, _this = this,
        t1 = I.Localizations_of(context, G.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
      t1.toString;
      routeLabel = _this._getRouteLabel$1(t1);
      t1 = _this._widget;
      t2 = t1.route;
      t3 = t2._animationProxy;
      t3.toString;
      t4 = t2._bottom_sheet$_animationController;
      t5 = t1.backgroundColor;
      t6 = t1.elevation;
      t7 = t1.shape;
      return I.AnimatedBuilder$(t3, new A._ModalBottomSheetState_build_closure(_this, routeLabel), X.BottomSheet$(t4, t5, t2.builder, t1.clipBehavior, t1.constraints, t6, true, new A._ModalBottomSheetState_build_closure0(_this, context), _this.get$handleDragEnd(), _this.get$handleDragStart(), t7, t1.showDragHandle));
    },
    set$animationCurve(animationCurve) {
      this.animationCurve = type$.ParametricCurve_double._as(animationCurve);
    }
  };
  A.ModalBottomSheetRoute.prototype = {
    dispose$0() {
      var t1 = this._bottom_sheet$_clipDetailsNotifier;
      t1.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      t1.ChangeNotifier__count = 0;
      this.super$TransitionRoute$dispose();
    },
    _didChangeBarrierSemanticsClip$1(newClipDetails) {
      var t1 = this._bottom_sheet$_clipDetailsNotifier;
      if (J.$eq$(t1._change_notifier$_value, newClipDetails))
        return false;
      t1.set$value(0, newClipDetails);
      return true;
    },
    get$transitionDuration(_) {
      return B2.Duration_250000;
    },
    get$reverseTransitionDuration() {
      return C.Duration_200000;
    },
    get$barrierDismissible() {
      return true;
    },
    get$barrierColor() {
      var t1 = this.modalBarrierColor;
      return t1 == null ? G.Color_NzJ : t1;
    },
    createAnimationController$0() {
      var t1 = this._navigator$_navigator;
      t1.toString;
      t1 = X.BottomSheet_createAnimationController(t1, this.sheetAnimationStyle);
      this._bottom_sheet$_animationController = t1;
      return t1;
    },
    buildPage$3(context, animation, secondaryAnimation) {
      var bottomSheet,
        t1 = type$.Animation_double;
      t1._as(animation);
      t1._as(secondaryAnimation);
      bottomSheet = A9.MediaQuery$removePadding(new A2.DisplayFeatureSubScreen(this.anchorPoint, new T.Builder(new A.ModalBottomSheetRoute_buildPage_closure(this), null), null), context, false, false, false, true);
      t1 = new A3._CaptureAll(this.capturedThemes._themes, bottomSheet, null);
      return t1;
    },
    buildModalBarrier$0() {
      var t3, t4, _this = this,
        t1 = _this.modalBarrierColor,
        t2 = t1 == null;
      if ((t2 ? G.Color_NzJ : t1).a !== 0 && !_this._offstage) {
        t3 = _this._animationProxy;
        t3.toString;
        t4 = (t2 ? G.Color_NzJ : t1).withValues$1$alpha(0);
        if (t2)
          t1 = G.Color_NzJ;
        t2 = type$.ColorTween._eval$1("_ChainedEvaluation<Animatable.T>");
        t1 = type$.Animatable_nullable_Color._as(new E._ChainedEvaluation(type$.Animatable_double._as(new I.CurveTween(C.Cubic_glB)), new T.ColorTween(t4, t1), t2));
        t4 = type$.Animation_double;
        return Ag.AnimatedModalBarrier$(true, _this._bottom_sheet$_clipDetailsNotifier, new E._AnimatedEvaluation(t4._as(t4._as(t3)), t1, t2._eval$1("_AnimatedEvaluation<Animatable.T>")), true, _this.barrierLabel, _this.barrierOnTapHint);
      } else
        return S.ModalBarrier$(true, _this._bottom_sheet$_clipDetailsNotifier, null, true, null, _this.barrierLabel, _this.barrierOnTapHint);
    },
    get$barrierLabel() {
      return this.barrierLabel;
    }
  };
  A.CircleAvatar.prototype = {
    get$_minDiameter() {
      var t1 = this.radius;
      return 2 * t1;
    },
    get$_maxDiameter() {
      var t1 = this.radius;
      return 2 * t1;
    },
    build$1(context) {
      var textStyle, effectiveBackgroundColor, minDiameter, maxDiameter, _this = this, _null = null,
        theme = I.Theme_of(context),
        effectiveForegroundColor = _null,
        t1 = theme.colorScheme,
        t2 = t1._onPrimaryContainer;
      t1 = t2 == null ? t1.onPrimary : t2;
      effectiveForegroundColor = t1;
      textStyle = theme.textTheme.titleMedium.copyWith$1$color(effectiveForegroundColor);
      effectiveBackgroundColor = _this.backgroundColor;
      if (effectiveForegroundColor == null) {
        switch (I.ThemeData_estimateBrightnessForColor(effectiveBackgroundColor).index) {
          case 0:
            t1 = textStyle.copyWith$1$color(theme.primaryColorLight);
            break;
          case 1:
            t1 = textStyle.copyWith$1$color(theme.primaryColorDark);
            break;
          default:
            t1 = _null;
        }
        textStyle = t1;
      }
      minDiameter = _this.get$_minDiameter();
      maxDiameter = _this.get$_maxDiameter();
      t1 = theme.iconTheme.copyWith$1$color(textStyle.color);
      t1 = E.Center$(A.MediaQuery_withNoTextScaling(Au.IconTheme$(E.DefaultTextStyle$(_this.child, _null, _null, L.TextOverflow_0, true, textStyle, _null, _null, L.TextWidthBasis_0), t1, _null)), _null, _null, _null);
      return new A.AnimatedContainer(t1, new E.BoxDecoration(effectiveBackgroundColor, _null, _null, _null, _null, _null, _null, L.BoxShape_1), _null, new B.BoxConstraints(minDiameter, maxDiameter, minDiameter, maxDiameter), L.C__Linear, C.Duration_200000, _null, _null);
    }
  };
  A.BorderRadiusDirectional.prototype = {
    get$_topStart() {
      return this.topStart;
    },
    get$_topEnd() {
      return this.topEnd;
    },
    get$_bottomStart() {
      return this.bottomStart;
    },
    get$_bottomEnd() {
      return this.bottomEnd;
    },
    get$_topLeft() {
      return C.Radius_0_0;
    },
    get$_topRight() {
      return C.Radius_0_0;
    },
    get$_bottomLeft() {
      return C.Radius_0_0;
    },
    get$_bottomRight() {
      return C.Radius_0_0;
    },
    subtract$1(other) {
      if (other instanceof A.BorderRadiusDirectional)
        return this.$sub(0, other);
      return this.super$BorderRadiusGeometry$subtract(other);
    },
    add$1(_, other) {
      if (other instanceof A.BorderRadiusDirectional)
        return this.$add(0, other);
      return this.super$BorderRadiusGeometry$add(0, other);
    },
    $sub(_, other) {
      var _this = this;
      type$.BorderRadiusDirectional._as(other);
      return new A.BorderRadiusDirectional(_this.topStart.$sub(0, other.topStart), _this.topEnd.$sub(0, other.topEnd), _this.bottomStart.$sub(0, other.bottomStart), _this.bottomEnd.$sub(0, other.bottomEnd));
    },
    $add(_, other) {
      var _this = this;
      type$.BorderRadiusDirectional._as(other);
      return new A.BorderRadiusDirectional(_this.topStart.$add(0, other.topStart), _this.topEnd.$add(0, other.topEnd), _this.bottomStart.$add(0, other.bottomStart), _this.bottomEnd.$add(0, other.bottomEnd));
    },
    $mul(_, other) {
      var _this = this;
      return new A.BorderRadiusDirectional(_this.topStart.$mul(0, other), _this.topEnd.$mul(0, other), _this.bottomStart.$mul(0, other), _this.bottomEnd.$mul(0, other));
    },
    resolve$1(direction) {
      var _this = this;
      switch (direction.index) {
        case 0:
          return new E.BorderRadius(_this.topEnd, _this.topStart, _this.bottomEnd, _this.bottomStart);
        case 1:
          return new E.BorderRadius(_this.topStart, _this.topEnd, _this.bottomStart, _this.bottomEnd);
      }
    }
  };
  A.FileImage.prototype = {
    obtainKey$1(configuration) {
      return new B.SynchronousFuture(this, type$.SynchronousFuture_FileImage);
    },
    loadBuffer$2(key, decode) {
      type$.FileImage._as(key);
      return Ah.MultiFrameImageStreamCompleter$(null, this._image_provider$_loadAsync$2$decode(key, type$.Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int._as(decode)), key.file._io$_path, new A.FileImage_loadBuffer_closure(this), key.scale);
    },
    loadImage$2(key, decode) {
      type$.FileImage._as(key);
      return Ah.MultiFrameImageStreamCompleter$(null, this._image_provider$_loadAsync$2$decode(key, type$.Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int._as(decode)), key.file._io$_path, new A.FileImage_loadImage_closure(this), key.scale);
    },
    _image_provider$_loadAsync$2$decode(key, decode) {
      return this._loadAsync$body$FileImage(key, type$.Future_Codec_Function_ImmutableBuffer._as(decode));
    },
    _loadAsync$body$FileImage(key, decode) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Codec),
        $async$self = this;
      var $async$_image_provider$_loadAsync$2$decode = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait($async$self.file.length$0(0), $async$_image_provider$_loadAsync$2$decode);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$_image_provider$_loadAsync$2$decode, $async$completer);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== B.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.FileImage && other.file._io$_path === this.file._io$_path && other.scale === this.scale;
    },
    get$hashCode(_) {
      return B.Object_hash(this.file._io$_path, this.scale, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      return 'FileImage("' + this.file._io$_path + '", scale: ' + C.JSInt_methods.toStringAsFixed$1(this.scale, 1) + ")";
    }
  };
  A.RenderShaderMask.prototype = {
    set$shaderCallback(value) {
      type$.Shader_Function_Rect._as(value);
      if (J.$eq$(this._shaderCallback, value))
        return;
      this.set$_shaderCallback(value);
      this.markNeedsPaint$0();
    },
    set$blendMode(value) {
      if (this._blendMode === value)
        return;
      this._blendMode = value;
      this.markNeedsPaint$0();
    },
    get$alwaysNeedsCompositing() {
      return this.RenderObjectWithChildMixin__child != null;
    },
    paint$2(context, offset) {
      var t1, t2, t3, t4, t5, _this = this;
      if (_this.RenderObjectWithChildMixin__child != null) {
        t1 = type$.nullable_ShaderMaskLayer;
        if (t1._as(B.RenderObject.prototype.get$layer.call(_this, 0)) == null)
          _this._layerHandle.set$layer(0, AP.ShaderMaskLayer$());
        t2 = t1._as(B.RenderObject.prototype.get$layer.call(_this, 0));
        t2.toString;
        t3 = _this.get$size(0);
        t2.set$shader(_this._shaderCallback.call$1(new B.Rect(0, 0, 0 + t3._dx, 0 + t3._dy)));
        t3 = _this.get$size(0);
        t4 = offset._dx;
        t5 = offset._dy;
        t2.set$maskRect(new B.Rect(t4, t5, t4 + t3._dx, t5 + t3._dy));
        t2.set$blendMode(_this._blendMode);
        t1 = t1._as(B.RenderObject.prototype.get$layer.call(_this, 0));
        t1.toString;
        context.pushLayer$3(t1, B.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
      } else
        _this._layerHandle.set$layer(0, null);
    },
    set$_shaderCallback(_shaderCallback) {
      this._shaderCallback = type$.Shader_Function_Rect._as(_shaderCallback);
    }
  };
  A.RenderSliverFillViewport.prototype = {
    get$itemExtent() {
      return type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(this)).viewportMainAxisExtent * this._sliver_fill0$_viewportFraction;
    },
    set$viewportFraction(value) {
      if (this._sliver_fill0$_viewportFraction === value)
        return;
      this._sliver_fill0$_viewportFraction = value;
      this.markNeedsLayout$0();
    }
  };
  A.AlignmentGeometryTween.prototype = {
    lerp$1(t) {
      return AM.AlignmentGeometry_lerp(this.begin, this.end, t);
    }
  };
  A.ShaderMask.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderShaderMask(this.shaderCallback, this.blendMode, null, new B._LayoutCacheStorage(), B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderShaderMask._as(renderObject);
      renderObject.set$shaderCallback(this.shaderCallback);
      renderObject.set$blendMode(this.blendMode);
    }
  };
  A.BoxConstraintsTween.prototype = {
    lerp$1(t) {
      var t1 = Q.BoxConstraints_lerp(this.begin, this.end, t);
      t1.toString;
      return t1;
    }
  };
  A.Matrix4Tween.prototype = {
    lerp$1(t) {
      var t1, lerpTranslation, t2, t3, lerpRotation, lerpScale, x, y, z, w, x2, y2, z2, xx, xy, xz, yy, yz, zz, wx, wy, wz, arg0Storage,
        beginTranslation = new B.Vector3(new Float64Array(3)),
        endTranslation = new B.Vector3(new Float64Array(3)),
        beginRotation = A.Quaternion_Quaternion$identity(),
        endRotation = A.Quaternion_Quaternion$identity(),
        beginScale = new B.Vector3(new Float64Array(3)),
        endScale = new B.Vector3(new Float64Array(3));
      this.begin.decompose$3(beginTranslation, beginRotation, beginScale);
      this.end.decompose$3(endTranslation, endRotation, endScale);
      t1 = 1 - t;
      lerpTranslation = beginTranslation.scaled$1(t1).$add(0, endTranslation.scaled$1(t));
      t2 = beginRotation.scaled$1(t1).$add(0, endRotation.scaled$1(t));
      t3 = new Float64Array(4);
      lerpRotation = new A.Quaternion(t3);
      lerpRotation.setFrom$1(t2);
      lerpRotation.normalize$0(0);
      lerpScale = beginScale.scaled$1(t1).$add(0, endScale.scaled$1(t));
      t1 = new Float64Array(16);
      t2 = new B.Matrix40(t1);
      x = t3[0];
      y = t3[1];
      z = t3[2];
      w = t3[3];
      x2 = x + x;
      y2 = y + y;
      z2 = z + z;
      xx = x * x2;
      xy = x * y2;
      xz = x * z2;
      yy = y * y2;
      yz = y * z2;
      zz = z * z2;
      wx = w * x2;
      wy = w * y2;
      wz = w * z2;
      arg0Storage = lerpTranslation._v3storage;
      t1[0] = 1 - (yy + zz);
      t1[1] = xy + wz;
      t1[2] = xz - wy;
      t1[3] = 0;
      t1[4] = xy - wz;
      t1[5] = 1 - (xx + zz);
      t1[6] = yz + wx;
      t1[7] = 0;
      t1[8] = xz + wy;
      t1[9] = yz - wx;
      t1[10] = 1 - (xx + yy);
      t1[11] = 0;
      t1[12] = arg0Storage[0];
      t1[13] = arg0Storage[1];
      t1[14] = arg0Storage[2];
      t1[15] = 1;
      t2.scale$1(0, lerpScale);
      return t2;
    }
  };
  A.AnimatedContainer.prototype = {
    createState$0() {
      return new A._AnimatedContainerState(null, null);
    }
  };
  A._AnimatedContainerState.prototype = {
    forEachTween$1(visitor) {
      var t1, t2, t3, _this = this, _null = null;
      type$.nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic._as(visitor);
      t1 = _this._implicit_animations$_alignment;
      _this._widget.toString;
      t2 = type$.nullable_AlignmentGeometryTween;
      _this._implicit_animations$_alignment = t2._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure()));
      t1 = _this._implicit_animations$_padding;
      _this._widget.toString;
      t3 = type$.nullable_EdgeInsetsGeometryTween;
      _this._implicit_animations$_padding = t3._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure0()));
      t1 = type$.nullable_DecorationTween;
      _this._implicit_animations$_decoration = t1._as(visitor.call$3(_this._implicit_animations$_decoration, _this._widget.decoration, new A._AnimatedContainerState_forEachTween_closure1()));
      _this._foregroundDecoration = t1._as(visitor.call$3(_this._foregroundDecoration, _this._widget.foregroundDecoration, new A._AnimatedContainerState_forEachTween_closure2()));
      _this._implicit_animations$_constraints = type$.nullable_BoxConstraintsTween._as(visitor.call$3(_this._implicit_animations$_constraints, _this._widget.constraints, new A._AnimatedContainerState_forEachTween_closure3()));
      t1 = _this._implicit_animations$_margin;
      _this._widget.toString;
      _this._implicit_animations$_margin = t3._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure4()));
      t1 = _this._implicit_animations$_transform;
      _this._widget.toString;
      _this._implicit_animations$_transform = type$.nullable_Matrix4Tween._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure5()));
      t1 = _this._transformAlignment;
      _this._widget.toString;
      _this._transformAlignment = t2._as(visitor.call$3(t1, _null, new A._AnimatedContainerState_forEachTween_closure6()));
    },
    build$1(context) {
      var t2, t3, t4, t5, t6, t7, t8, _this = this, _null = null,
        animation = _this.get$_implicit_animations$_animation(),
        t1 = _this._implicit_animations$_alignment;
      t1 = t1 == null ? _null : t1.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t2 = _this._implicit_animations$_padding;
      t2 = t2 == null ? _null : t2.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t3 = _this._implicit_animations$_decoration;
      t3 = t3 == null ? _null : t3.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t4 = _this._foregroundDecoration;
      t4 = t4 == null ? _null : t4.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t5 = _this._implicit_animations$_constraints;
      t5 = t5 == null ? _null : t5.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t6 = _this._implicit_animations$_margin;
      t6 = t6 == null ? _null : t6.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t7 = _this._implicit_animations$_transform;
      t7 = t7 == null ? _null : t7.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      t8 = _this._transformAlignment;
      t8 = t8 == null ? _null : t8.transform$1(0, type$.Animation_double._as(animation).get$value(0));
      return E.Container$(t1, _this._widget.child, C.Clip_0, _null, t5, t3, t4, _null, _null, t6, t2, t7, t8, _null);
    }
  };
  A.PageController.prototype = {
    animateToPage$3$curve$duration(page, curve, duration) {
      var position = type$._PagePosition._as(C.JSArray_methods.get$single(this._positions));
      if (position._cachedPage != null) {
        position._cachedPage = page;
        return B.Future_Future$value(null, type$.void);
      }
      if (position._viewportDimension == null) {
        position._pageToUseOnStartup = page;
        return B.Future_Future$value(null, type$.void);
      }
      return position.animateTo$3$curve$duration(position.getPixelsFromPage$1(page), curve, duration);
    },
    createScrollPosition$3(physics, context, oldPosition) {
      var _null = null,
        t1 = $.$get$ChangeNotifier__emptyListeners();
      t1 = new A._PagePosition(this.initialPage, 1, B1.ScrollDirection_0, physics, context, true, _null, new B.ValueNotifier(false, t1, type$.ValueNotifier_bool), t1);
      t1.ScrollPosition$5$context$debugLabel$keepScrollOffset$oldPosition$physics(context, _null, true, oldPosition, physics);
      t1.ScrollPositionWithSingleContext$6$context$debugLabel$initialPixels$keepScrollOffset$oldPosition$physics(context, _null, _null, true, oldPosition, physics);
      return t1;
    },
    attach$1(position) {
      this.super$ScrollController$attach(position);
      type$._PagePosition._as(position).set$viewportFraction(1);
    }
  };
  A.PageMetrics.prototype = {};
  A._PagePosition.prototype = {
    ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(object, alignment, alignmentPolicy, curve, duration, targetRenderObject) {
      return this.super$ScrollPosition$ensureVisible(object, alignment, alignmentPolicy, curve, duration, null);
    },
    set$viewportFraction(value) {
      var oldPage, _this = this;
      if (_this._viewportFraction === value)
        return;
      oldPage = _this.get$page(0);
      _this._viewportFraction = value;
      if (oldPage != null)
        _this.forcePixels$1(_this.getPixelsFromPage$1(oldPage));
    },
    get$_initialPageOffset() {
      var t1 = this._viewportDimension;
      t1.toString;
      return Math.max(0, t1 * (this._viewportFraction - 1) / 2);
    },
    getPageFromPixels$2(pixels, viewportDimension) {
      var actual = Math.max(0, pixels - this.get$_initialPageOffset()) / (viewportDimension * this._viewportFraction),
        round = C.JSNumber_methods.roundToDouble$0(actual);
      if (Math.abs(actual - round) < 1e-10)
        return round;
      return actual;
    },
    getPixelsFromPage$1(page) {
      var t1 = this._viewportDimension;
      t1.toString;
      return page * t1 * this._viewportFraction + this.get$_initialPageOffset();
    },
    get$page(_) {
      var t2, t3, _this = this,
        t1 = _this._pixels;
      if (t1 == null)
        return null;
      t2 = _this._minScrollExtent;
      if (t2 != null && _this._maxScrollExtent != null || _this._haveDimensions) {
        t3 = _this._cachedPage;
        if (t3 == null) {
          t2.toString;
          t3 = _this._maxScrollExtent;
          t3.toString;
          t3 = B.clampDouble(t1, t2, t3);
          t2 = _this._viewportDimension;
          t2.toString;
          t2 = _this.getPageFromPixels$2(t3, t2);
          t1 = t2;
        } else
          t1 = t3;
      } else
        t1 = null;
      return t1;
    },
    saveScrollOffset$0() {
      var t3, t4, _this = this,
        t1 = _this.context,
        t2 = t1._framework$_element;
      t2.toString;
      t2 = A1.PageStorage_maybeOf(t2);
      if (t2 != null) {
        t1 = t1._framework$_element;
        t1.toString;
        t3 = _this._cachedPage;
        if (t3 == null) {
          t3 = _this._pixels;
          t3.toString;
          t4 = _this._viewportDimension;
          t4.toString;
          t4 = _this.getPageFromPixels$2(t3, t4);
          t3 = t4;
        }
        t2.writeState$2(t1, t3);
      }
    },
    restoreScrollOffset$0() {
      var t1, t2, value;
      if (this._pixels == null) {
        t1 = this.context;
        t2 = t1._framework$_element;
        t2.toString;
        t2 = A1.PageStorage_maybeOf(t2);
        if (t2 == null)
          value = null;
        else {
          t1 = t1._framework$_element;
          t1.toString;
          value = t2.readState$1(t1);
        }
        if (value != null)
          this._pageToUseOnStartup = value;
      }
    },
    saveOffset$0() {
      var t2, _this = this,
        t1 = _this._cachedPage;
      if (t1 == null) {
        t1 = _this._pixels;
        t1.toString;
        t2 = _this._viewportDimension;
        t2.toString;
        t2 = _this.getPageFromPixels$2(t1, t2);
        t1 = t2;
      }
      _this.context._persistedScrollOffset.set$value(0, t1);
      t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__restorationManager_A;
      t1 === $ && B.throwLateFieldNI("_restorationManager");
      t1.flushData$0();
    },
    restoreOffset$2$initialRestore(offset, initialRestore) {
      if (initialRestore)
        this._pageToUseOnStartup = offset;
      else
        this.jumpTo$1(this.getPixelsFromPage$1(offset));
    },
    applyViewportDimension$1(viewportDimension) {
      var oldPixels, page, t1, newPixels, _this = this,
        oldViewportDimensions = _this._viewportDimension;
      oldViewportDimensions = oldViewportDimensions != null ? oldViewportDimensions : null;
      if (viewportDimension === oldViewportDimensions)
        return true;
      _this.super$ScrollPosition$applyViewportDimension(viewportDimension);
      oldPixels = _this._pixels;
      oldPixels = oldPixels != null ? oldPixels : null;
      if (oldPixels == null)
        page = _this._pageToUseOnStartup;
      else if (oldViewportDimensions === 0) {
        t1 = _this._cachedPage;
        t1.toString;
        page = t1;
      } else {
        oldViewportDimensions.toString;
        page = _this.getPageFromPixels$2(oldPixels, oldViewportDimensions);
      }
      newPixels = _this.getPixelsFromPage$1(page);
      _this._cachedPage = viewportDimension === 0 ? page : null;
      if (newPixels !== oldPixels) {
        _this._pixels = newPixels;
        return false;
      }
      return true;
    },
    absorb$1(other) {
      var t1;
      this.super$ScrollPositionWithSingleContext$absorb(other);
      if (!(other instanceof A._PagePosition))
        return;
      t1 = other._cachedPage;
      if (t1 != null)
        this._cachedPage = t1;
    },
    applyContentDimensions$2(minScrollExtent, maxScrollExtent) {
      var newMinScrollExtent = minScrollExtent + this.get$_initialPageOffset();
      return this.super$ScrollPosition$applyContentDimensions(newMinScrollExtent, Math.max(newMinScrollExtent, maxScrollExtent - this.get$_initialPageOffset()));
    },
    copyWith$0() {
      var t3, t4, t5, t6, t7, _this = this, _null = null,
        t1 = _null,
        t2 = _this._minScrollExtent;
      if (t2 != null && _this._maxScrollExtent != null) {
        t2.toString;
        t1 = t2;
      }
      t2 = _null;
      if (_this._minScrollExtent != null && _this._maxScrollExtent != null) {
        t2 = _this._maxScrollExtent;
        t2.toString;
      }
      t3 = _this._pixels;
      t3 = t3 != null ? t3 : _null;
      t4 = _this._viewportDimension;
      t4 = t4 != null ? t4 : _null;
      t5 = _this.context;
      t6 = t5._widget.axisDirection;
      t7 = _this._viewportFraction;
      t5 = t5.__ScrollableState__devicePixelRatio_A;
      t5 === $ && B.throwLateFieldNI("_devicePixelRatio");
      return new A.PageMetrics(t7, t1, t2, t3, t4, t6, t5);
    },
    $isPageMetrics: 1
  };
  A._ForceImplicitScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A._ForceImplicitScrollPhysics(false, this.buildParent$1(ancestor));
    },
    get$allowImplicitScrolling() {
      return this.allowImplicitScrolling;
    }
  };
  A.PageScrollPhysics.prototype = {
    applyTo$1(ancestor) {
      return new A.PageScrollPhysics(this.buildParent$1(ancestor));
    },
    _getPage$1(position) {
      var t1, t2;
      if (position instanceof A._PagePosition) {
        t1 = position.get$page(0);
        t1.toString;
        return t1;
      }
      t1 = position._pixels;
      t1.toString;
      t2 = position._viewportDimension;
      t2.toString;
      return t1 / t2;
    },
    _getPixels$2(position, page) {
      var t1;
      if (position instanceof A._PagePosition)
        return position.getPixelsFromPage$1(page);
      t1 = position._viewportDimension;
      t1.toString;
      return page * t1;
    },
    createBallisticSimulation$2(position, velocity) {
      var t1, t2, tolerance, page, target, _this = this;
      if (velocity <= 0) {
        t1 = position._pixels;
        t1.toString;
        t2 = position._minScrollExtent;
        t2.toString;
        t2 = t1 <= t2;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        if (velocity >= 0) {
          t1 = position._pixels;
          t1.toString;
          t2 = position._maxScrollExtent;
          t2.toString;
          t2 = t1 >= t2;
          t1 = t2;
        } else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return _this.super$ScrollPhysics$createBallisticSimulation(position, velocity);
      tolerance = _this.toleranceFor$1(position);
      page = _this._getPage$1(position);
      t1 = tolerance.velocity;
      if (velocity < -t1)
        page -= 0.5;
      else if (velocity > t1)
        page += 0.5;
      target = _this._getPixels$2(position, C.JSNumber_methods.roundToDouble$0(page));
      t1 = position._pixels;
      t1.toString;
      if (target !== t1) {
        t1 = _this.get$spring();
        t2 = position._pixels;
        t2.toString;
        return new T.ScrollSpringSimulation(target, E._SpringSolution__SpringSolution(t1, t2 - target, velocity), tolerance);
      }
      return null;
    },
    get$allowImplicitScrolling() {
      return false;
    }
  };
  A.PageView.prototype = {
    createState$0() {
      return new A._PageViewState();
    }
  };
  A._PageViewState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this._initController$0();
      t1 = _this.___PageViewState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      _this._lastReportedPage = t1.initialPage;
    },
    dispose$0() {
      this._widget.toString;
      this.super$State$dispose();
    },
    _initController$0() {
      var t1 = this._widget.controller;
      this.___PageViewState__controller_A = t1;
    },
    didUpdateWidget$1(oldWidget) {
      type$.PageView._as(oldWidget);
      if (oldWidget.controller !== this._widget.controller)
        this._initController$0();
      this.super$State$didUpdateWidget(oldWidget);
    },
    _getDirection$1(context) {
      var axisDirection;
      this._widget.toString;
      switch (0) {
        case 0:
          axisDirection = A8.textDirectionToAxisDirection(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
          this._widget.toString;
          return axisDirection;
      }
    },
    build$1(context) {
      var t1, t2, t3, _this = this, _null = null,
        axisDirection = _this._getDirection$1(context);
      _this._widget.toString;
      t1 = new A.PageScrollPhysics(D.PageScrollPhysics_null.buildParent$1(_null));
      t1 = new A._ForceImplicitScrollPhysics(false, _null).buildParent$1(t1);
      _this._widget.toString;
      t2 = _this.___PageViewState__controller_A;
      t2 === $ && B.throwLateFieldNI("_controller");
      t3 = T.ScrollConfiguration_of(context).copyWith$1$scrollbars(false);
      return new T.NotificationListener(new A._PageViewState_build_closure(_this), A8.Scrollable$(axisDirection, C.Clip_1, t2, G.DragStartBehavior_1, false, L.HitTestBehavior_1, _null, new A._ForceImplicitScrollPhysics(false, t1), _null, t3, _null, new A._PageViewState_build_closure0(_this, axisDirection)), _null, type$.NotificationListener_ScrollNotification);
    }
  };
  A.SliverFillViewport.prototype = {
    build$1(context) {
      var t1 = this.viewportFraction,
        t2 = B.clampDouble(1 - t1, 0, 1);
      return new A._SliverFractionalPadding(t2 / 2, new A._SliverFillViewportRenderObjectWidget(t1, this.delegate, null), null);
    }
  };
  A._SliverFillViewportRenderObjectWidget.prototype = {
    createRenderObject$1(context) {
      var t1 = new A.RenderSliverFillViewport(this.viewportFraction, type$.SliverMultiBoxAdaptorElement._as(context), B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.RenderBox), 0, null, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$.RenderSliverFillViewport._as(renderObject).set$viewportFraction(this.viewportFraction);
    }
  };
  A._SliverFractionalPadding.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderSliverFractionalPadding(this.viewportFraction, null, B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderSliverFractionalPadding._as(renderObject).set$viewportFraction(this.viewportFraction);
    }
  };
  A._RenderSliverFractionalPadding.prototype = {
    set$viewportFraction(newValue) {
      var _this = this;
      if (_this._sliver_fill$_viewportFraction === newValue)
        return;
      _this._sliver_fill$_viewportFraction = newValue;
      _this._sliver_fill$_resolvedPadding = null;
      _this.markNeedsLayout$0();
    },
    get$resolvedPadding() {
      return this._sliver_fill$_resolvedPadding;
    },
    _sliver_fill$_resolve$0() {
      var t1, paddingValue, _this = this;
      if (_this._sliver_fill$_resolvedPadding != null && J.$eq$(_this._lastResolvedConstraints, type$.SliverConstraints._as(B.RenderObject.prototype.get$constraints.call(_this))))
        return;
      t1 = type$.SliverConstraints;
      paddingValue = t1._as(B.RenderObject.prototype.get$constraints.call(_this)).viewportMainAxisExtent * _this._sliver_fill$_viewportFraction;
      _this._lastResolvedConstraints = t1._as(B.RenderObject.prototype.get$constraints.call(_this));
      switch (B.axisDirectionToAxis(t1._as(B.RenderObject.prototype.get$constraints.call(_this)).axisDirection).index) {
        case 0:
          t1 = new B.EdgeInsets(paddingValue, 0, paddingValue, 0);
          break;
        case 1:
          t1 = new B.EdgeInsets(0, paddingValue, 0, paddingValue);
          break;
        default:
          t1 = null;
      }
      _this._sliver_fill$_resolvedPadding = t1;
      return;
    },
    performLayout$0() {
      this._sliver_fill$_resolve$0();
      this.super$RenderSliverEdgeInsetsPadding$performLayout();
    }
  };
  A.ChatOperation.prototype = {};
  A.ScrollToMessageMixin.prototype = {
    attachScrollMethods$2$scrollToIndex$scrollToMessageId(scrollToIndex, scrollToMessageId) {
      type$.Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(scrollToMessageId);
      type$.Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(scrollToIndex);
      this.set$_scroll_to_message_mixin$_scrollToMessageId(scrollToMessageId);
      this.set$_scroll_to_message_mixin$_scrollToIndex(scrollToIndex);
    },
    detachScrollMethods$0() {
      this.set$_scroll_to_message_mixin$_scrollToMessageId(null);
      this.set$_scroll_to_message_mixin$_scrollToIndex(null);
    },
    set$_scroll_to_message_mixin$_scrollToMessageId(_scrollToMessageId) {
      this.ScrollToMessageMixin__scrollToMessageId = type$.nullable_Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(_scrollToMessageId);
    },
    set$_scroll_to_message_mixin$_scrollToIndex(_scrollToIndex) {
      this.ScrollToMessageMixin__scrollToIndex = type$.nullable_Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double._as(_scrollToIndex);
    }
  };
  A.UploadProgressMixin.prototype = {
    getUploadProgress$1(id) {
      var controller,
        t1 = this.UploadProgressMixin__progressControllers;
      if (t1.containsKey$1(0, id)) {
        t1 = t1.$index(0, id);
        t1.toString;
        return new B._BroadcastStream(t1, B._instanceType(t1)._eval$1("_BroadcastStream<1>"));
      }
      controller = B.StreamController_StreamController$broadcast(false, type$.double);
      controller.add$1(0, 0);
      t1.$indexSet(0, id, controller);
      return new B._BroadcastStream(controller, B._instanceType(controller)._eval$1("_BroadcastStream<1>"));
    },
    disposeUploadProgress$0() {
      var t1, t2, t3;
      for (t1 = this.UploadProgressMixin__progressControllers, t2 = new B.LinkedHashMapValueIterator(t1, t1._modifications, t1._first, B._instanceType(t1)._eval$1("LinkedHashMapValueIterator<2>")); t2.moveNext$0();) {
        t3 = t2.__js_helper$_current;
        if (!t3.get$isClosed())
          t3.close$0(0);
      }
      t1.clear$0(0);
    }
  };
  A.TextMessage.prototype = {
    get$reactions() {
      var value = this._reactions;
      if (value == null)
        return null;
      if (value instanceof H.EqualUnmodifiableMapView)
        return value;
      return new H.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_of_String_and_List_String);
    },
    get$metadata(_) {
      var value = this._metadata;
      if (value == null)
        return null;
      if (value instanceof H.EqualUnmodifiableMapView)
        return value;
      return new H.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_String_dynamic);
    },
    toJson$0() {
      var _0_0, t2, t3, t4, _1_0, _2_0, _3_0, _4_0, _5_0, _6_0, _7_0, _8_0, _9_0, _10_0, _11_0, _12_0, _this = this,
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "id", _this.id);
      t1.$indexSet(0, "authorId", _this.authorId);
      _0_0 = _this.replyToMessageId;
      if (_0_0 != null)
        t1.$indexSet(0, "replyToMessageId", _0_0);
      t2 = F.C_EpochDateTimeConverter.get$toJson();
      t3 = type$.int;
      t4 = type$.DateTime;
      _1_0 = H._$JsonConverterToJson(_this.createdAt, t2, t3, t4);
      if (_1_0 != null)
        t1.$indexSet(0, "createdAt", _1_0);
      _2_0 = H._$JsonConverterToJson(_this.deletedAt, t2, t3, t4);
      if (_2_0 != null)
        t1.$indexSet(0, "deletedAt", _2_0);
      _3_0 = H._$JsonConverterToJson(_this.failedAt, t2, t3, t4);
      if (_3_0 != null)
        t1.$indexSet(0, "failedAt", _3_0);
      _4_0 = H._$JsonConverterToJson(_this.sentAt, t2, t3, t4);
      if (_4_0 != null)
        t1.$indexSet(0, "sentAt", _4_0);
      _5_0 = H._$JsonConverterToJson(_this.deliveredAt, t2, t3, t4);
      if (_5_0 != null)
        t1.$indexSet(0, "deliveredAt", _5_0);
      _6_0 = H._$JsonConverterToJson(_this.seenAt, t2, t3, t4);
      if (_6_0 != null)
        t1.$indexSet(0, "seenAt", _6_0);
      _7_0 = H._$JsonConverterToJson(_this.updatedAt, t2, t3, t4);
      if (_7_0 != null)
        t1.$indexSet(0, "updatedAt", _7_0);
      _8_0 = H._$JsonConverterToJson(_this.editedAt, t2, t3, t4);
      if (_8_0 != null)
        t1.$indexSet(0, "editedAt", _8_0);
      _9_0 = _this.get$reactions();
      if (_9_0 != null)
        t1.$indexSet(0, "reactions", _9_0);
      _10_0 = _this.pinned;
      if (_10_0 != null)
        t1.$indexSet(0, "pinned", _10_0);
      _11_0 = _this.get$metadata(0);
      if (_11_0 != null)
        t1.$indexSet(0, "metadata", _11_0);
      _12_0 = F.Map_f1RYh.$index(0, _this.status);
      if (_12_0 != null)
        t1.$indexSet(0, "status", _12_0);
      t1.$indexSet(0, "text", _this.text);
      t1.$indexSet(0, "type", _this.$$type);
      return t1;
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === B.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.TextMessage) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.authorId === _this.authorId;
              if (t2 || t2) {
                t2 = other.replyToMessageId == _this.replyToMessageId;
                if (t2 || t2) {
                  t2 = other.createdAt;
                  t3 = _this.createdAt;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.deletedAt;
                    t3 = _this.deletedAt;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.failedAt;
                      t3 = _this.failedAt;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.sentAt;
                        t3 = _this.sentAt;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.deliveredAt;
                          t3 = _this.deliveredAt;
                          if (t2 == t3 || J.$eq$(t2, t3)) {
                            t2 = other.seenAt;
                            t3 = _this.seenAt;
                            if (t2 == t3 || J.$eq$(t2, t3)) {
                              t2 = other.updatedAt;
                              t3 = _this.updatedAt;
                              if (t2 == t3 || J.$eq$(t2, t3)) {
                                t2 = other.editedAt;
                                t3 = _this.editedAt;
                                if (t2 == t3 || J.$eq$(t2, t3))
                                  if (M.DeepCollectionEquality_false.equals$2(other._reactions, _this._reactions)) {
                                    t2 = other.pinned == _this.pinned;
                                    if (t2 || t2)
                                      if (M.DeepCollectionEquality_false.equals$2(other._metadata, _this._metadata)) {
                                        t2 = other.status == _this.status;
                                        if (t2 || t2) {
                                          t1 = other.text === _this.text;
                                          t1 = t1 || t1;
                                        }
                                      }
                                  }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(B.getRuntimeTypeOfDartObject(_this), _this.id, _this.authorId, _this.replyToMessageId, _this.createdAt, _this.deletedAt, _this.failedAt, _this.sentAt, _this.deliveredAt, _this.seenAt, _this.updatedAt, _this.editedAt, M.DeepCollectionEquality_false.hash$1(0, _this._reactions), _this.pinned, M.DeepCollectionEquality_false.hash$1(0, _this._metadata), _this.status, _this.text, _this.linkPreviewData, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Message.text(id: " + _this.id + ", authorId: " + _this.authorId + ", replyToMessageId: " + B.S(_this.replyToMessageId) + ", createdAt: " + B.S(_this.createdAt) + ", deletedAt: " + B.S(_this.deletedAt) + ", failedAt: " + B.S(_this.failedAt) + ", sentAt: " + B.S(_this.sentAt) + ", deliveredAt: " + B.S(_this.deliveredAt) + ", seenAt: " + B.S(_this.seenAt) + ", updatedAt: " + B.S(_this.updatedAt) + ", editedAt: " + B.S(_this.editedAt) + ", reactions: " + B.S(_this.get$reactions()) + ", pinned: " + B.S(_this.pinned) + ", metadata: " + B.S(_this.get$metadata(0)) + ", status: " + B.S(_this.status) + ", text: " + _this.text + ", linkPreviewData: " + B.S(_this.linkPreviewData) + ")";
    },
    get$id(receiver) {
      return this.id;
    },
    get$authorId() {
      return this.authorId;
    },
    get$replyToMessageId() {
      return this.replyToMessageId;
    },
    get$createdAt() {
      return this.createdAt;
    },
    get$deletedAt() {
      return this.deletedAt;
    },
    get$failedAt() {
      return this.failedAt;
    },
    get$sentAt() {
      return this.sentAt;
    },
    get$deliveredAt() {
      return this.deliveredAt;
    },
    get$seenAt() {
      return this.seenAt;
    },
    get$updatedAt() {
      return this.updatedAt;
    },
    get$pinned() {
      return this.pinned;
    },
    get$status(receiver) {
      return this.status;
    }
  };
  A.TextStreamMessage.prototype = {
    get$reactions() {
      var value = this._reactions;
      if (value == null)
        return null;
      if (value instanceof H.EqualUnmodifiableMapView)
        return value;
      return new H.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_of_String_and_List_String);
    },
    get$metadata(_) {
      var value = this._metadata;
      if (value == null)
        return null;
      if (value instanceof H.EqualUnmodifiableMapView)
        return value;
      return new H.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_String_dynamic);
    },
    toJson$0() {
      var _0_0, t2, t3, t4, _1_0, _2_0, _3_0, _4_0, _5_0, _6_0, _7_0, _8_0, _9_0, _10_0, _11_0, _this = this,
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "id", _this.id);
      t1.$indexSet(0, "authorId", _this.authorId);
      _0_0 = _this.replyToMessageId;
      if (_0_0 != null)
        t1.$indexSet(0, "replyToMessageId", _0_0);
      t2 = F.C_EpochDateTimeConverter.get$toJson();
      t3 = type$.int;
      t4 = type$.DateTime;
      _1_0 = H._$JsonConverterToJson(_this.createdAt, t2, t3, t4);
      if (_1_0 != null)
        t1.$indexSet(0, "createdAt", _1_0);
      _2_0 = H._$JsonConverterToJson(_this.deletedAt, t2, t3, t4);
      if (_2_0 != null)
        t1.$indexSet(0, "deletedAt", _2_0);
      _3_0 = H._$JsonConverterToJson(_this.failedAt, t2, t3, t4);
      if (_3_0 != null)
        t1.$indexSet(0, "failedAt", _3_0);
      _4_0 = H._$JsonConverterToJson(_this.sentAt, t2, t3, t4);
      if (_4_0 != null)
        t1.$indexSet(0, "sentAt", _4_0);
      _5_0 = H._$JsonConverterToJson(_this.deliveredAt, t2, t3, t4);
      if (_5_0 != null)
        t1.$indexSet(0, "deliveredAt", _5_0);
      _6_0 = H._$JsonConverterToJson(_this.seenAt, t2, t3, t4);
      if (_6_0 != null)
        t1.$indexSet(0, "seenAt", _6_0);
      _7_0 = H._$JsonConverterToJson(_this.updatedAt, t2, t3, t4);
      if (_7_0 != null)
        t1.$indexSet(0, "updatedAt", _7_0);
      _8_0 = _this.get$reactions();
      if (_8_0 != null)
        t1.$indexSet(0, "reactions", _8_0);
      _9_0 = _this.pinned;
      if (_9_0 != null)
        t1.$indexSet(0, "pinned", _9_0);
      _10_0 = _this.get$metadata(0);
      if (_10_0 != null)
        t1.$indexSet(0, "metadata", _10_0);
      _11_0 = F.Map_f1RYh.$index(0, _this.status);
      if (_11_0 != null)
        t1.$indexSet(0, "status", _11_0);
      t1.$indexSet(0, "streamId", _this.streamId);
      t1.$indexSet(0, "type", _this.$$type);
      return t1;
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === B.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.TextStreamMessage) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.authorId === _this.authorId;
              if (t2 || t2) {
                t2 = other.replyToMessageId == _this.replyToMessageId;
                if (t2 || t2) {
                  t2 = other.createdAt;
                  t3 = _this.createdAt;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.deletedAt;
                    t3 = _this.deletedAt;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.failedAt;
                      t3 = _this.failedAt;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.sentAt;
                        t3 = _this.sentAt;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.deliveredAt;
                          t3 = _this.deliveredAt;
                          if (t2 == t3 || J.$eq$(t2, t3)) {
                            t2 = other.seenAt;
                            t3 = _this.seenAt;
                            if (t2 == t3 || J.$eq$(t2, t3)) {
                              t2 = other.updatedAt;
                              t3 = _this.updatedAt;
                              if (t2 == t3 || J.$eq$(t2, t3))
                                if (M.DeepCollectionEquality_false.equals$2(other._reactions, _this._reactions)) {
                                  t2 = other.pinned == _this.pinned;
                                  if (t2 || t2)
                                    if (M.DeepCollectionEquality_false.equals$2(other._metadata, _this._metadata)) {
                                      t2 = other.status == _this.status;
                                      if (t2 || t2) {
                                        t1 = other.streamId === _this.streamId;
                                        t1 = t1 || t1;
                                      }
                                    }
                                }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(B.getRuntimeTypeOfDartObject(_this), _this.id, _this.authorId, _this.replyToMessageId, _this.createdAt, _this.deletedAt, _this.failedAt, _this.sentAt, _this.deliveredAt, _this.seenAt, _this.updatedAt, M.DeepCollectionEquality_false.hash$1(0, _this._reactions), _this.pinned, M.DeepCollectionEquality_false.hash$1(0, _this._metadata), _this.status, _this.streamId, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Message.textStream(id: " + _this.id + ", authorId: " + _this.authorId + ", replyToMessageId: " + B.S(_this.replyToMessageId) + ", createdAt: " + B.S(_this.createdAt) + ", deletedAt: " + B.S(_this.deletedAt) + ", failedAt: " + B.S(_this.failedAt) + ", sentAt: " + B.S(_this.sentAt) + ", deliveredAt: " + B.S(_this.deliveredAt) + ", seenAt: " + B.S(_this.seenAt) + ", updatedAt: " + B.S(_this.updatedAt) + ", reactions: " + B.S(_this.get$reactions()) + ", pinned: " + B.S(_this.pinned) + ", metadata: " + B.S(_this.get$metadata(0)) + ", status: " + B.S(_this.status) + ", streamId: " + _this.streamId + ")";
    },
    get$id(receiver) {
      return this.id;
    },
    get$authorId() {
      return this.authorId;
    },
    get$replyToMessageId() {
      return this.replyToMessageId;
    },
    get$createdAt() {
      return this.createdAt;
    },
    get$deletedAt() {
      return this.deletedAt;
    },
    get$failedAt() {
      return this.failedAt;
    },
    get$sentAt() {
      return this.sentAt;
    },
    get$deliveredAt() {
      return this.deliveredAt;
    },
    get$seenAt() {
      return this.seenAt;
    },
    get$updatedAt() {
      return this.updatedAt;
    },
    get$pinned() {
      return this.pinned;
    },
    get$status(receiver) {
      return this.status;
    }
  };
  A.ImageMessage.prototype = {
    get$reactions() {
      var value = this._reactions;
      if (value == null)
        return null;
      if (value instanceof H.EqualUnmodifiableMapView)
        return value;
      return new H.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_of_String_and_List_String);
    },
    get$metadata(_) {
      var value = this._metadata;
      if (value == null)
        return null;
      if (value instanceof H.EqualUnmodifiableMapView)
        return value;
      return new H.EqualUnmodifiableMapView(value, value, type$.EqualUnmodifiableMapView_String_dynamic);
    },
    get$copyWith() {
      return new A._$ImageMessageCopyWithImpl(this, D.CONSTANT0, type$._$ImageMessageCopyWithImpl_ImageMessage);
    },
    toJson$0() {
      var _0_0, t2, t3, t4, _1_0, _2_0, _3_0, _4_0, _5_0, _6_0, _7_0, _8_0, _9_0, _10_0, _11_0, _12_0, _13_0, _14_0, _15_0, _16_0, _17_0, _18_0, _this = this,
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "id", _this.id);
      t1.$indexSet(0, "authorId", _this.authorId);
      _0_0 = _this.replyToMessageId;
      if (_0_0 != null)
        t1.$indexSet(0, "replyToMessageId", _0_0);
      t2 = F.C_EpochDateTimeConverter.get$toJson();
      t3 = type$.int;
      t4 = type$.DateTime;
      _1_0 = H._$JsonConverterToJson(_this.createdAt, t2, t3, t4);
      if (_1_0 != null)
        t1.$indexSet(0, "createdAt", _1_0);
      _2_0 = H._$JsonConverterToJson(_this.deletedAt, t2, t3, t4);
      if (_2_0 != null)
        t1.$indexSet(0, "deletedAt", _2_0);
      _3_0 = H._$JsonConverterToJson(_this.failedAt, t2, t3, t4);
      if (_3_0 != null)
        t1.$indexSet(0, "failedAt", _3_0);
      _4_0 = H._$JsonConverterToJson(_this.sentAt, t2, t3, t4);
      if (_4_0 != null)
        t1.$indexSet(0, "sentAt", _4_0);
      _5_0 = H._$JsonConverterToJson(_this.deliveredAt, t2, t3, t4);
      if (_5_0 != null)
        t1.$indexSet(0, "deliveredAt", _5_0);
      _6_0 = H._$JsonConverterToJson(_this.seenAt, t2, t3, t4);
      if (_6_0 != null)
        t1.$indexSet(0, "seenAt", _6_0);
      _7_0 = H._$JsonConverterToJson(_this.updatedAt, t2, t3, t4);
      if (_7_0 != null)
        t1.$indexSet(0, "updatedAt", _7_0);
      _8_0 = _this.get$reactions();
      if (_8_0 != null)
        t1.$indexSet(0, "reactions", _8_0);
      _9_0 = _this.pinned;
      if (_9_0 != null)
        t1.$indexSet(0, "pinned", _9_0);
      _10_0 = _this.get$metadata(0);
      if (_10_0 != null)
        t1.$indexSet(0, "metadata", _10_0);
      _11_0 = F.Map_f1RYh.$index(0, _this.status);
      if (_11_0 != null)
        t1.$indexSet(0, "status", _11_0);
      t1.$indexSet(0, "source", _this.source);
      _12_0 = _this.text;
      if (_12_0 != null)
        t1.$indexSet(0, "text", _12_0);
      _13_0 = _this.thumbhash;
      if (_13_0 != null)
        t1.$indexSet(0, "thumbhash", _13_0);
      _14_0 = _this.blurhash;
      if (_14_0 != null)
        t1.$indexSet(0, "blurhash", _14_0);
      _15_0 = _this.width;
      if (_15_0 != null)
        t1.$indexSet(0, "width", _15_0);
      _16_0 = _this.height;
      if (_16_0 != null)
        t1.$indexSet(0, "height", _16_0);
      _17_0 = _this.size;
      if (_17_0 != null)
        t1.$indexSet(0, "size", _17_0);
      _18_0 = _this.hasOverlay;
      if (_18_0 != null)
        t1.$indexSet(0, "hasOverlay", _18_0);
      t1.$indexSet(0, "type", _this.$$type);
      return t1;
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === B.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A.ImageMessage) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.authorId === _this.authorId;
              if (t2 || t2) {
                t2 = other.replyToMessageId == _this.replyToMessageId;
                if (t2 || t2) {
                  t2 = other.createdAt;
                  t3 = _this.createdAt;
                  if (t2 == t3 || J.$eq$(t2, t3)) {
                    t2 = other.deletedAt;
                    t3 = _this.deletedAt;
                    if (t2 == t3 || J.$eq$(t2, t3)) {
                      t2 = other.failedAt;
                      t3 = _this.failedAt;
                      if (t2 == t3 || J.$eq$(t2, t3)) {
                        t2 = other.sentAt;
                        t3 = _this.sentAt;
                        if (t2 == t3 || J.$eq$(t2, t3)) {
                          t2 = other.deliveredAt;
                          t3 = _this.deliveredAt;
                          if (t2 == t3 || J.$eq$(t2, t3)) {
                            t2 = other.seenAt;
                            t3 = _this.seenAt;
                            if (t2 == t3 || J.$eq$(t2, t3)) {
                              t2 = other.updatedAt;
                              t3 = _this.updatedAt;
                              if (t2 == t3 || J.$eq$(t2, t3))
                                if (M.DeepCollectionEquality_false.equals$2(other._reactions, _this._reactions)) {
                                  t2 = other.pinned == _this.pinned;
                                  if (t2 || t2)
                                    if (M.DeepCollectionEquality_false.equals$2(other._metadata, _this._metadata)) {
                                      t2 = other.status == _this.status;
                                      if (t2 || t2) {
                                        t2 = other.source === _this.source;
                                        if (t2 || t2) {
                                          t2 = other.text == _this.text;
                                          if (t2 || t2) {
                                            t2 = other.thumbhash == _this.thumbhash;
                                            if (t2 || t2) {
                                              t2 = other.blurhash == _this.blurhash;
                                              if (t2 || t2) {
                                                t2 = other.width == _this.width;
                                                if (t2 || t2) {
                                                  t2 = other.height == _this.height;
                                                  if (t2 || t2) {
                                                    t2 = other.size == _this.size;
                                                    if (t2 || t2) {
                                                      t1 = other.hasOverlay == _this.hasOverlay;
                                                      t1 = t1 || t1;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hashAll([B.getRuntimeTypeOfDartObject(_this), _this.id, _this.authorId, _this.replyToMessageId, _this.createdAt, _this.deletedAt, _this.failedAt, _this.sentAt, _this.deliveredAt, _this.seenAt, _this.updatedAt, M.DeepCollectionEquality_false.hash$1(0, _this._reactions), _this.pinned, M.DeepCollectionEquality_false.hash$1(0, _this._metadata), _this.status, _this.source, _this.text, _this.thumbhash, _this.blurhash, _this.width, _this.height, _this.size, _this.hasOverlay]);
    },
    toString$0(_) {
      var _this = this;
      return "Message.image(id: " + _this.id + ", authorId: " + _this.authorId + ", replyToMessageId: " + B.S(_this.replyToMessageId) + ", createdAt: " + B.S(_this.createdAt) + ", deletedAt: " + B.S(_this.deletedAt) + ", failedAt: " + B.S(_this.failedAt) + ", sentAt: " + B.S(_this.sentAt) + ", deliveredAt: " + B.S(_this.deliveredAt) + ", seenAt: " + B.S(_this.seenAt) + ", updatedAt: " + B.S(_this.updatedAt) + ", reactions: " + B.S(_this.get$reactions()) + ", pinned: " + B.S(_this.pinned) + ", metadata: " + B.S(_this.get$metadata(0)) + ", status: " + B.S(_this.status) + ", source: " + _this.source + ", text: " + B.S(_this.text) + ", thumbhash: " + B.S(_this.thumbhash) + ", blurhash: " + B.S(_this.blurhash) + ", width: " + B.S(_this.width) + ", height: " + B.S(_this.height) + ", size: " + B.S(_this.size) + ", hasOverlay: " + B.S(_this.hasOverlay) + ")";
    },
    copyWith$2$height$width(arg0, arg1) {
      return this.get$copyWith().call$2$height$width(arg0, arg1);
    },
    get$id(receiver) {
      return this.id;
    },
    get$authorId() {
      return this.authorId;
    },
    get$replyToMessageId() {
      return this.replyToMessageId;
    },
    get$createdAt() {
      return this.createdAt;
    },
    get$deletedAt() {
      return this.deletedAt;
    },
    get$failedAt() {
      return this.failedAt;
    },
    get$sentAt() {
      return this.sentAt;
    },
    get$deliveredAt() {
      return this.deliveredAt;
    },
    get$seenAt() {
      return this.seenAt;
    },
    get$updatedAt() {
      return this.updatedAt;
    },
    get$pinned() {
      return this.pinned;
    },
    get$status(receiver) {
      return this.status;
    }
  };
  A._$ImageMessageCopyWithImpl.prototype = {
    call$16$authorId$createdAt$deletedAt$deliveredAt$failedAt$height$id$metadata$pinned$reactions$replyToMessageId$seenAt$sentAt$status$updatedAt$width(authorId, createdAt, deletedAt, deliveredAt, failedAt, height, id, metadata, pinned, reactions, replyToMessageId, seenAt, sentAt, $status, updatedAt, width) {
      var _this = this,
        t1 = id == null ? _this._self.id : B._asString(id),
        t2 = authorId == null ? _this._self.authorId : B._asString(authorId),
        t3 = F.C_Freezed === replyToMessageId ? _this._self.replyToMessageId : B._asStringQ(replyToMessageId),
        t4 = F.C_Freezed === createdAt ? _this._self.createdAt : type$.nullable_DateTime._as(createdAt),
        t5 = F.C_Freezed === deletedAt ? _this._self.deletedAt : type$.nullable_DateTime._as(deletedAt),
        t6 = F.C_Freezed === failedAt ? _this._self.failedAt : type$.nullable_DateTime._as(failedAt),
        t7 = F.C_Freezed === sentAt ? _this._self.sentAt : type$.nullable_DateTime._as(sentAt),
        t8 = F.C_Freezed === deliveredAt ? _this._self.deliveredAt : type$.nullable_DateTime._as(deliveredAt),
        t9 = F.C_Freezed === seenAt ? _this._self.seenAt : type$.nullable_DateTime._as(seenAt),
        t10 = F.C_Freezed === updatedAt ? _this._self.updatedAt : type$.nullable_DateTime._as(updatedAt),
        t11 = F.C_Freezed === reactions ? _this._self._reactions : type$.nullable_Map_of_String_and_List_String._as(reactions),
        t12 = F.C_Freezed === pinned ? _this._self.pinned : B._asBoolQ(pinned),
        t13 = F.C_Freezed === metadata ? _this._self._metadata : type$.nullable_Map_String_dynamic._as(metadata),
        t14 = F.C_Freezed === $status ? _this._self.status : type$.nullable_MessageStatus._as($status),
        t15 = _this._self,
        t16 = F.C_Freezed === width ? t15.width : B._asDoubleQ(width),
        t17 = F.C_Freezed === height ? t15.height : B._asDoubleQ(height);
      return _this._then.call$1(A.ImageMessage$(t2, t15.blurhash, t4, t5, t8, t6, t15.hasOverlay, t17, t1, t13, t12, t11, t3, t9, t7, t15.size, t15.source, t14, t15.text, t15.thumbhash, t10, t16));
    },
    call$0() {
      return this.call$16$authorId$createdAt$deletedAt$deliveredAt$failedAt$height$id$metadata$pinned$reactions$replyToMessageId$seenAt$sentAt$status$updatedAt$width(null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed);
    },
    call$1$height(height) {
      return this.call$16$authorId$createdAt$deletedAt$deliveredAt$failedAt$height$id$metadata$pinned$reactions$replyToMessageId$seenAt$sentAt$status$updatedAt$width(null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, height, null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed);
    },
    call$2$height$width(height, width) {
      return this.call$16$authorId$createdAt$deletedAt$deliveredAt$failedAt$height$id$metadata$pinned$reactions$replyToMessageId$seenAt$sentAt$status$updatedAt$width(null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, height, null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, width);
    },
    call$1$width(width) {
      return this.call$16$authorId$createdAt$deletedAt$deliveredAt$failedAt$height$id$metadata$pinned$reactions$replyToMessageId$seenAt$sentAt$status$updatedAt$width(null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, null, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, F.C_Freezed, width);
    }
  };
  A.User.prototype = {};
  A._$User.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === B.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._User) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.name === _this.name;
              if (t2 || t2)
                t1 = M.DeepCollectionEquality_false.equals$2(other.get$metadata(0), _this.get$metadata(0));
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return B.Object_hash(B.getRuntimeTypeOfDartObject(_this), _this.id, _this.name, null, null, M.DeepCollectionEquality_false.hash$1(0, _this.get$metadata(0)), C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      return "User(id: " + this.id + ", name: " + this.name + string$.__imag + B.S(this.get$metadata(0)) + ")";
    }
  };
  A._User.prototype = {
    get$metadata(_) {
      return null;
    },
    toJson$0() {
      var _3_0,
        t1 = B.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t1.$indexSet(0, "id", this.id);
      t1.$indexSet(0, "name", this.name);
      _3_0 = this.get$metadata(0);
      if (_3_0 != null)
        t1.$indexSet(0, "metadata", _3_0);
      return t1;
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (J.get$runtimeType$(other) === B.getRuntimeTypeOfDartObject(_this))
          if (other instanceof A._User) {
            t2 = other.id === _this.id;
            if (t2 || t2) {
              t2 = other.name === _this.name;
              if (t2 || t2)
                t1 = M.DeepCollectionEquality_false.equals$2(null, null);
            }
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.Object_hash(B.getRuntimeTypeOfDartObject(this), this.id, this.name, null, null, M.DeepCollectionEquality_false.hash$1(0, null), C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue, C.C_SentinelValue);
    },
    toString$0(_) {
      return "User(id: " + this.id + ", name: " + this.name + string$.__imag + B.S(this.get$metadata(0)) + ")";
    }
  };
  A._User_Object__$User.prototype = {};
  A.FValueNotifier.prototype = {
    notifyListeners$0() {
      var t1, t2, _i;
      this.super$ChangeNotifier$notifyListeners();
      for (t1 = this._notifiers$_listeners, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].call$1(this._change_notifier$_value);
    },
    dispose$0() {
      C.JSArray_methods.clear$0(this._notifiers$_listeners);
      this.super$ChangeNotifier$dispose();
    }
  };
  A.FCalendar.prototype = {
    createState$0() {
      return new A._State1();
    }
  };
  A._State1.prototype = {
    initState$0() {
      var t1, t2, t3, _this = this;
      _this.super$State$initState();
      t1 = _this._widget._initialType;
      t2 = $.$get$ChangeNotifier__emptyListeners();
      t3 = type$.ValueNotifier_FCalendarPickerType;
      _this.set$___State__type_A(t3._as(new B.ValueNotifier(t1, t2, t3)));
      t3 = type$.ValueNotifier_LocalDate;
      _this.set$___State__month_A(t3._as(new B.ValueNotifier(_this._widget._initialMonth, t2, t3)));
    },
    build$1(context) {
      var t3, _this = this, _null = null,
        style = _this._widget.style,
        t1 = 7 * style.dayPickerStyle.tileSize,
        t2 = _this.___State__month_A;
      t2 === $ && B.throwLateFieldNI("_month");
      t2 = Ao.ValueListenableBuilder$(new A._State_build_closure0(_this, style), t2, type$.LocalDate);
      t3 = _this.___State__type_A;
      t3 === $ && B.throwLateFieldNI("_type");
      return E.DecoratedBox$(new E.Padding(style.padding, new E.SizedBox(t1, t1 + 31 + 5, new E.Stack(AV.Alignment_0_m1, _null, L.StackFit_0, C.Clip_1, B._setArrayType([t2, Ao.ValueListenableBuilder$(new A._State_build_closure1(_this, style), t3, type$.FCalendarPickerType)], type$.JSArray_Widget), _null), _null), _null), style.decoration, L.DecorationPosition_0);
    },
    set$___State__type_A(___State__type_A) {
      this.___State__type_A = type$.ValueNotifier_FCalendarPickerType._as(___State__type_A);
    },
    set$___State__month_A(___State__month_A) {
      this.___State__month_A = type$.ValueNotifier_LocalDate._as(___State__month_A);
    }
  };
  A.FCalendarController.prototype = {};
  A._AutoDateController.prototype = {
    selectable$1(date) {
      return this._selectable.call$1(O.DateTime$utc(B.Primitives_getYear(date), B.Primitives_getMonth(date), B.Primitives_getDay(date), 0, 0, 0, 0, 0));
    },
    selected$1(_, date) {
      return J.$eq$(this._change_notifier$_value, O.DateTime$utc(B.Primitives_getYear(date), B.Primitives_getMonth(date), B.Primitives_getDay(date), 0, 0, 0, 0, 0));
    },
    select$1(_, date) {
      date = O.DateTime$utc(B.Primitives_getYear(date), B.Primitives_getMonth(date), B.Primitives_getDay(date), 0, 0, 0, 0, 0);
      this.super$ValueNotifier$value(0, J.$eq$(this._change_notifier$_value, date) ? null : date);
    }
  };
  A.DayPicker.prototype = {
    createState$0() {
      return new A._DayPickerState(U.SplayTreeMap$(null, type$.LocalDate, type$.FocusNode));
    }
  };
  A._DayPickerState.prototype = {
    initState$0() {
      var firstDayOfWeek, t1, difference, first, lastDayOfWeek, t2, t3, last, date, _1_0, _this = this, _null = null;
      _this.super$State$initState();
      firstDayOfWeek = A.FDateTimeLocalizations_get_firstDayOfWeek(_this._widget.localization);
      t1 = A.DateTimeCopyWith_copyWith(_this._widget.month._native, 1, 0, 0, 0, 0, _null, 0, _null);
      difference = B.Primitives_getWeekday(t1) - firstDayOfWeek;
      if (difference < 0)
        difference += 7;
      first = new A.LocalDate(t1).minus$1$days(difference);
      lastDayOfWeek = firstDayOfWeek === 1 ? 7 : firstDayOfWeek - 1;
      t1 = _this._widget.month._native;
      t2 = A.Dates_leapYear(B.Primitives_getYear(t1)) ? D.List_Qv3 : D.List_fKm;
      t3 = B.Primitives_getMonth(t1) - 1;
      if (!(t3 >= 0 && t3 < t2.length))
        return B.ioore(t2, t3);
      t3 = A.DateTimeCopyWith_copyWith(t1, t2[t3], 0, 0, 0, 0, _null, 0, _null);
      difference = lastDayOfWeek - B.Primitives_getWeekday(t3);
      t1 = A.DateTimes_plus(t3, difference < 0 ? difference + 7 : difference, 0, 0);
      last = new A.LocalDate(t1);
      for (t2 = _this._days, date = first; B._instanceType(date)._eval$1("Orderable.T")._as(last), t3 = date._native, C.JSInt_methods.compareTo$1(1000 * t3._core$_value + t3._microsecond, 1000 * t1._core$_value + t1._microsecond) <= 0; date = new A.LocalDate(A.DateTimes_plus(t3, 1, 0, 0)))
        t2.$indexSet(0, date, B.FocusNode$(true, date.toString$0(0), true, true, _null, _null, true));
      _1_0 = t2.$index(0, _this._widget.focused);
      if (_1_0 != null)
        _1_0.requestFocus$0();
    },
    build$1(context) {
      var t3, t4, date, focusNode, t5, t6, t7, t8, t9, t10, t11, t12, t13, _this = this, _null = null,
        t1 = _this._widget.style.tileSize,
        t2 = B.List_List$of(_this._headers$1(context), true, type$.Widget);
      for (t3 = _this._days, t4 = t3.$ti, t4 = new U._SplayTreeMapEntryIterator(t3, B._setArrayType([], t4._eval$1("JSArray<_SplayTreeMapNode<1,2>>")), t3._splayCount, t4._eval$1("_SplayTreeMapEntryIterator<1,2>")); t4.set$_collection$_current(_null), t4.super$_SplayTreeIterator$moveNext();) {
        t3 = t4.get$current(0);
        date = t3.key;
        focusNode = t3.value;
        t3 = _this._widget;
        t5 = t3.style;
        t6 = t3.localization;
        t7 = t3.dayBuilder;
        t8 = date._native;
        t9 = t3.month;
        t3 = t3.today;
        if (date !== t3) {
          t10 = false;
          if (B._instanceType(date)._eval$1("Orderable.T")._is(t3))
            if (B.getRuntimeTypeOfDartObject(date) === B.getRuntimeTypeOfDartObject(t3)) {
              t3 = t3._native;
              t3 = C.JSInt_methods.compareTo$1(1000 * t8._core$_value + t8._microsecond, 1000 * t3._core$_value + t3._microsecond) === 0;
            } else
              t3 = t10;
          else
            t3 = t10;
        } else
          t3 = true;
        t10 = _this._widget;
        t11 = t10.selectable;
        t12 = t10.selected;
        t13 = t10.onPress;
        t2.push(A.Entry_Entry$day(B.Primitives_getMonth(t8) === B.Primitives_getMonth(t9._native), date, t7, focusNode, t6, t10.onLongPress, t13, t11, t12, t5, t3));
      }
      t2 = K.SliverChildListDelegate$(t2, true, false, true);
      return new E.SizedBox(7 * t1, _null, new H.GridView(new A._GridDelegate(t1), t2, C.EdgeInsets_0_0_0_0, C.Axis_1, false, _null, _null, F.NeverScrollableScrollPhysics_null, _null, true, _null, 0, _null, _null, G.DragStartBehavior_1, At.ScrollViewKeyboardDismissBehavior_0, _null, C.Clip_1, L.HitTestBehavior_1, _null), _null);
    },
    _headers$1(__wc0_formal) {
      var t2, i, j, t3, _null = null,
        firstDayOfWeek = A.FDateTimeLocalizations_get_firstDayOfWeek(this._widget.localization),
        t1 = this._widget.localization.localeName,
        narrowWeekdays = t1 === "" || C.JSString_methods.startsWith$1(t1, "en") ? D.List_F11 : K.DateFormat$yMMMMd(t1).get$dateSymbols().STANDALONENARROWWEEKDAYS;
      t1 = B._setArrayType([], type$.JSArray_Widget);
      for (t2 = narrowWeekdays.length, i = firstDayOfWeek, j = 0; j < 7; ++i, ++j) {
        t3 = C.JSInt_methods.$mod(i, 7);
        if (!(t3 < t2))
          return B.ioore(narrowWeekdays, t3);
        t1.push(new E.ExcludeSemantics(true, new E.Center(L.Alignment_0_0, _null, _null, new I.Text(narrowWeekdays[t3], _null, this._widget.style.headerTextStyle, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), _null), _null));
      }
      return t1;
    },
    didUpdateWidget$1(old) {
      var _0_0, t1, focusNode, _this = this;
      type$.DayPicker._as(old);
      _this.super$State$didUpdateWidget(old);
      _0_0 = _this._days.$index(0, _this._widget.focused);
      if (_0_0 != null) {
        t1 = !J.$eq$(old.focused, _this._widget.focused);
        focusNode = _0_0;
      } else {
        focusNode = null;
        t1 = false;
      }
      if (t1)
        focusNode.requestFocus$0();
    },
    dispose$0() {
      var result, t4,
        t1 = this._days,
        t2 = t1.$ti,
        t3 = B._setArrayType([], t2._eval$1("JSArray<_SplayTreeMapNode<1,2>>"));
      t2 = new U._SplayTreeValueIterator(t1, t3, t1._splayCount, t2._eval$1("_SplayTreeValueIterator<1,2>"));
      while (true) {
        result = t2.super$_SplayTreeIterator$moveNext();
        t2.set$_collection$_current(result ? C.JSArray_methods.get$last(t3).value : null);
        if (!result)
          break;
        t1 = t2.get$current(0);
        t4 = t1._attachment;
        if (t4 != null)
          t4.detach$0(0);
        t1.super$ChangeNotifier$dispose();
      }
      this.super$State$dispose();
    }
  };
  A._GridDelegate.prototype = {
    getLayout$1(constraints) {
      var t1 = this.tileSize;
      return new H.SliverGridRegularTileLayout(7, t1, t1, t1, t1, T.axisDirectionIsReversed(constraints.crossAxisDirection));
    },
    shouldRelayout$1(oldDelegate) {
      return this.tileSize !== type$._GridDelegate._as(oldDelegate).tileSize;
    }
  };
  A.PagedDayPicker.prototype = {
    createState$0() {
      return new A._PagedDayPickerState();
    },
    onPress$1(arg0) {
      return this.onPress.call$1(arg0);
    }
  };
  A._PagedDayPickerState.prototype = {
    buildItem$2(context, page) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      B._asInt(page);
      t1 = _this._widget.style;
      t2 = I.Localizations_of(context, P.Type_FLocalizations_j3D, type$.FLocalizations);
      if (t2 == null)
        t2 = $.$get$FDefaultLocalizations__localizations();
      t3 = _this._widget;
      t4 = t3.dayBuilder;
      t3 = A.DateTimes_plus(A.DateTimes_truncate(t3.start._native, D.DateUnit_1), 0, page, 0);
      t5 = _this._widget;
      return new A.DayPicker(t1.dayPickerStyle, t2, t4, new A.LocalDate(t3), t5.today, _this.focusedDate, t5.selectable, t5.selected, new A._PagedDayPickerState_buildItem_closure(_this), t5.onLongPress, null);
    },
    onPageChange$1(page) {
      this.setState$1(new A._PagedDayPickerState_onPageChange_closure(this, B._asInt(page)));
    },
    onGridFocusChange$1(focused) {
      this.setState$1(new A._PagedDayPickerState_onGridFocusChange_closure(this, B._asBool(focused)));
    },
    _focusableDayForMonth$2(month, preferredDay) {
      var newFocus,
        t1 = month._native,
        t2 = A.Dates_leapYear(B.Primitives_getYear(t1)) ? D.List_Qv3 : D.List_fKm,
        t3 = B.Primitives_getMonth(t1) - 1;
      if (!(t3 >= 0 && t3 < t2.length))
        return B.ioore(t2, t3);
      if (preferredDay <= t2[t3]) {
        newFocus = month.copyWith$1$day(preferredDay);
        if (B.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      }
      for (newFocus = month; t2 = newFocus._native, B.Primitives_getMonth(t2) === B.Primitives_getMonth(t1); newFocus = new A.LocalDate(A.DateTimes_plus(t2, 1, 0, 0)))
        if (B.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      return null;
    },
    delta$2(start, end) {
      var t1 = end._native,
        t2 = start._native;
      return (B.Primitives_getYear(t1) - B.Primitives_getYear(t2)) * 12 + B.Primitives_getMonth(t1) - B.Primitives_getMonth(t2);
    },
    get$directionOffset() {
      return D.Map_u8oBS;
    }
  };
  A.MonthPicker.prototype = {
    createState$0() {
      return new A._MonthPickerState();
    }
  };
  A._MonthPickerState.prototype = {
    initState$0() {
      var _list, i, t1, t2, _this = this;
      _this.super$State$initState();
      _list = J.JSArray_JSArray$allocateGrowable(12, type$.FocusNode);
      for (i = 0; i < 12; ++i)
        _list[i] = B.FocusNode$(true, "" + i, true, true, null, null, true);
      _this.set$___MonthPickerState__months_A(type$.List_FocusNode._as(_list));
      t1 = _this._widget.focused;
      if (t1 != null) {
        t2 = _this.___MonthPickerState__months_A;
        t2 === $ && B.throwLateFieldNI("_months");
        t1 = B.Primitives_getMonth(t1._native) - 1;
        if (!(t1 >= 0 && t1 < 12))
          return B.ioore(t2, t1);
        t2[t1].requestFocus$0();
      }
    },
    build$1(context) {
      var month, i, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this._widget.dayStyle,
        t2 = B._setArrayType([], type$.JSArray_Widget);
      for (month = _this._widget.currentYear, i = 0; i < 12; month = new A.LocalDate(A.DateTimes_plus(t7, 0, 1, 0)), ++i) {
        t3 = _this._widget;
        t4 = t3.yearMonthStyle;
        t5 = _this.___MonthPickerState__months_A;
        t5 === $ && B.throwLateFieldNI("_months");
        t5 = t5[i];
        t3 = new A.LocalDate(A.DateTimes_truncate(t3.today._native, D.DateUnit_1)).$eq(0, month);
        t6 = _this._widget;
        t7 = t6.start;
        t8 = t7._native;
        t7 = B._instanceType(t7)._eval$1("Orderable.T")._as(month)._native;
        t9 = 1000 * t7._core$_value + t7._microsecond;
        if (C.JSInt_methods.compareTo$1(1000 * t8._core$_value + t8._microsecond, t9) <= 0) {
          t8 = B._instanceType(month)._eval$1("Orderable.T")._as(t6.end)._native;
          t8 = C.JSInt_methods.compareTo$1(t9, 1000 * t8._core$_value + t8._microsecond) <= 0;
        } else
          t8 = false;
        t2.push(A.Entry_Entry$yearMonth(t3, month, t5, new A._MonthPickerState_build_closure(context), t6.onPress, t8, t4));
      }
      return new E.Padding(Af.EdgeInsets_0_5_0_0, A.GridView$(t2, new H.SliverGridDelegateWithFixedCrossAxisCount(3, 5, 0, (t1.tileSize - 5) * 7 / 5), C.EdgeInsets_0_0_0_0), null);
    },
    didUpdateWidget$1(old) {
      var t1, focused, t2, t3, _0_0, _this = this;
      type$.MonthPicker._as(old);
      _this.super$State$didUpdateWidget(old);
      t1 = _this._widget;
      focused = t1.focused;
      t2 = true;
      if (focused != null) {
        t1 = B._instanceType(focused)._eval$1("Orderable.T")._as(t1.currentYear);
        t3 = focused._native;
        t3 = 1000 * t3._core$_value + t3._microsecond;
        t1 = t1._native;
        if (C.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) >= 0) {
          t1 = A.DateTimes_plus(t1, 0, 0, 1);
          type$.LocalDate._eval$1("Orderable.T")._as(focused);
          t3 = C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0;
          t1 = t3;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return;
      t1 = _this.___MonthPickerState__months_A;
      t1 === $ && B.throwLateFieldNI("_months");
      t2 = B.Primitives_getMonth(focused._native) - 1;
      if (!(t2 >= 0 && t2 < 12))
        return B.ioore(t1, t2);
      _0_0 = t1[t2];
      t1 = J.$eq$(old.focused, _this._widget.focused);
      if (!t1)
        _0_0.requestFocus$0();
    },
    dispose$0() {
      var _i, node, t2,
        t1 = this.___MonthPickerState__months_A;
      t1 === $ && B.throwLateFieldNI("_months");
      _i = 0;
      for (; _i < 12; ++_i) {
        node = t1[_i];
        t2 = node._attachment;
        if (t2 != null)
          t2.detach$0(0);
        node.super$ChangeNotifier$dispose();
      }
      this.super$State$dispose();
    },
    set$___MonthPickerState__months_A(___MonthPickerState__months_A) {
      this.___MonthPickerState__months_A = type$.List_FocusNode._as(___MonthPickerState__months_A);
    }
  };
  A.PagedMonthPicker.prototype = {
    createState$0() {
      return new A._PagedMonthPickerState();
    }
  };
  A._PagedMonthPickerState.prototype = {
    buildItem$2(context, page) {
      var t1, t2;
      type$.BuildContext._as(context);
      B._asInt(page);
      t1 = this._widget;
      t2 = t1.style;
      return new A.MonthPicker(t2.yearMonthPickerStyle, t2.dayPickerStyle, t1.initial, t1.start, t1.end, t1.today, this.focusedDate, t1.onPress, null);
    },
    onPageChange$1(page) {
      B._asInt(page);
    },
    onGridFocusChange$1(focused) {
      this.setState$1(new A._PagedMonthPickerState_onGridFocusChange_closure(this, B._asBool(focused)));
    },
    _focusableMonth$1(preferredMonth) {
      var t1 = A.DateTimes_plus(this._widget.initial._native, 0, 0, 1),
        end = new A.LocalDate(t1),
        newFocus = this._widget.initial,
        t2 = newFocus._native,
        t3 = B._instanceType(newFocus)._eval$1("Orderable.T")._as(preferredMonth)._native;
      t3 = 1000 * t3._core$_value + t3._microsecond;
      if (C.JSInt_methods.compareTo$1(1000 * t2._core$_value + t2._microsecond, t3) <= 0) {
        B._instanceType(preferredMonth)._eval$1("Orderable.T")._as(end);
        t2 = C.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) < 0;
      } else
        t2 = false;
      if (t2)
        return preferredMonth;
      for (; B._instanceType(newFocus)._eval$1("Orderable.T")._as(end), t2 = newFocus._native, C.JSInt_methods.compareTo$1(1000 * t2._core$_value + t2._microsecond, 1000 * t1._core$_value + t1._microsecond) < 0; newFocus = new A.LocalDate(A.DateTimes_plus(t2, 0, 1, 0)))
        if (B.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      return null;
    },
    delta$2(start, end) {
      return 0;
    },
    get$directionOffset() {
      return D.Map_u8guQ;
    }
  };
  A.Entry0.prototype = {};
  A._SelectableEntry.prototype = {
    build$1(__wc0_formal) {
      var _this = this, _null = null;
      return Ak.AnimatedTappable$(false, _this.builder, _null, true, _this.focusNode, _null, _null, _null, new A._SelectableEntry_build_closure(_this), new A._SelectableEntry_build_closure0(_this), _null, _this.selected, _this.semanticsLabel, _null);
    }
  };
  A._UnselectableEntry.prototype = {
    build$1(context) {
      var t1 = B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      if (this.selected)
        t1.add$1(0, L.WidgetState_4);
      return new E.ExcludeSemantics(true, this.builder.call$3(context, t1, null), null);
    }
  };
  A.EntryContent.prototype = {
    build$1(__wc1_formal) {
      var borderColor, t3, _this = this, _null = null,
        t1 = _this.style,
        t2 = _this.states,
        textStyle = t1.textStyle.resolve$1(t2);
      if (_this.current)
        textStyle = textStyle.copyWith$1$decoration(C.TextDecoration_1);
      borderColor = t1.borderColor.resolve$1(t2);
      t3 = borderColor == null ? _null : AU.Border_Border$all(borderColor, 1);
      t2 = t1.backgroundColor.resolve$1(t2);
      return E.DecoratedBox$(E.Center$(W.Text$(_this.text, _null, _null, _null, _null, _null, _null, _null, textStyle, _null, _null, _null, _null, _null), _null, _null, _null), new E.BoxDecoration(t2, _null, t3, _this.borderRadius, _null, _null, _null, L.BoxShape_0), L.DecorationPosition_0);
    }
  };
  A.FCalendarPickerType.prototype = {
    _enumToString$0() {
      return "FCalendarPickerType." + this._name;
    }
  };
  A.Header.prototype = {
    createState$0() {
      return new A._HeaderState(null, null);
    }
  };
  A._HeaderState.prototype = {
    initState$0() {
      var t1, _this = this;
      _this.super$State$initState();
      _this._widget.type.addListener$1(0, _this.get$_header$_animate(_this));
      _this._widget.toString;
      t1 = E.AnimationController$(null, C.Duration_200000, null, null, _this);
      _this.___HeaderState__controller_A = t1;
      t1.set$value(0, _this._widget.type._change_notifier$_value === D.FCalendarPickerType_0 ? 0 : 1);
    },
    build$1(context) {
      var _null = null;
      return Ak.AnimatedTappable$(false, new A._HeaderState_build_closure(this, context), _null, true, _null, this._widget.style.focusedOutlineStyle, _null, _null, _null, new A._HeaderState_build_closure0(this), _null, false, _null, _null);
    },
    didUpdateWidget$1(old) {
      var t1, _this = this;
      type$.Header._as(old);
      _this.super$State$didUpdateWidget(old);
      t1 = _this.get$_header$_animate(_this);
      old.type.removeListener$1(0, t1);
      _this._widget.type.addListener$1(0, t1);
    },
    dispose$0() {
      var t1, _this = this;
      _this._widget.type.removeListener$1(0, _this.get$_header$_animate(_this));
      t1 = _this.___HeaderState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1.dispose$0();
      _this.super$__HeaderState_State_SingleTickerProviderStateMixin$dispose();
    },
    _header$_animate$0(_) {
      var _0_1, t1, _0_4, _0_4_isSet, _0_40, _this = this;
      $label0$0: {
        _0_1 = _this._widget.type._change_notifier$_value;
        t1 = _this.___HeaderState__controller_A;
        t1 === $ && B.throwLateFieldNI("_controller");
        _0_4 = t1.get$status(0) === L.AnimationStatus_3;
        _0_4_isSet = D.FCalendarPickerType_1 === _0_1;
        if (_0_4_isSet) {
          t1 = !_0_4;
          _0_40 = _0_4;
        } else {
          _0_40 = null;
          t1 = false;
        }
        if (t1) {
          _this.___HeaderState__controller_A.forward$0(0);
          break $label0$0;
        }
        if (D.FCalendarPickerType_0 === _0_1)
          t1 = true === (_0_4_isSet ? _0_40 : _0_4);
        else
          t1 = false;
        if (t1) {
          _this.___HeaderState__controller_A.reverse$0(0);
          break $label0$0;
        }
      }
    },
    $isTickerProvider: 1
  };
  A.Navigation.prototype = {
    build$1(__wc0_formal) {
      var _null = null,
        t1 = this.style.buttonStyle;
      return new E.Padding(Af.EdgeInsets_0_0_0_5, new E.SizedBox(_null, 31, A0.Row$(B._setArrayType([new E.Padding(D.EdgeInsetsDirectional_7_0_0_0, K.FButton$icon(D.Icon_TfW, this.onPrevious, t1), _null), D.Expanded_3Qw, new E.Padding(D.EdgeInsetsDirectional_0_0_7_0, K.FButton$icon(P.Icon_wFE, this.onNext, t1), _null)], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_3, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1), _null), _null);
    }
  };
  A.__HeaderState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.PagedPicker.prototype = {
    selectable$1(arg0) {
      return this.selectable.call$1(arg0);
    }
  };
  A.PagedPickerState.prototype = {
    initState$0() {
      var t1, t2, _this = this;
      _this.super$State$initState();
      t1 = _this._widget;
      t2 = t1.initial;
      _this.__PagedPickerState_current_A = t2;
      _this.__PagedPickerState__controller_A = A.PageController$(_this.delta$2(t1.start, t2));
      t2 = _this._widget;
      _this.__PagedPickerState__key_A = new As.ValueKey(new B._Record_2(t2.start, t2.end), type$.ValueKey_Record_2_LocalDate_and_LocalDate);
      t2 = type$.JSArray_of_void_Function_Action_Intent;
      t1 = type$.ObserverList_of_void_Function_Action_Intent;
      _this.set$__PagedPickerState__actions_A(type$.Map_of_Type_and_Action_Intent._as(B.LinkedHashMap_LinkedHashMap$_literal([R.Type_NextFocusIntent_OLT, new A7.CallbackAction(_this.get$_onGridNextFocus(), new E.ObserverList(B._setArrayType([], t2), t1), type$.CallbackAction_NextFocusIntent), R.Type_PreviousFocusIntent_HI0, new A7.CallbackAction(_this.get$_onGridPreviousFocus(), new E.ObserverList(B._setArrayType([], t2), t1), type$.CallbackAction_PreviousFocusIntent), Av.Type_DirectionalFocusIntent_oIa, new A7.CallbackAction(_this.get$_onDirectionFocus(), new E.ObserverList(B._setArrayType([], t2), t1), type$.CallbackAction_DirectionalFocusIntent)], type$.Type, type$.Action_Intent)));
      _this.__PagedPickerState__focusNode_A = B.FocusNode$(true, null, true, true, null, null, false);
    },
    didUpdateWidget$1(old) {
      var t1, t2, _this = this;
      B._instanceType(_this)._eval$1("PagedPickerState.T")._as(old);
      _this.super$State$didUpdateWidget(old);
      if (!_this._widget.start.$eq(0, old.start) || !_this._widget.end.$eq(0, old.end)) {
        t1 = _this.__PagedPickerState__controller_A;
        t1 === $ && B.throwLateFieldNI("_controller");
        t1.dispose$0();
        t1 = _this._widget.start;
        t2 = _this.__PagedPickerState_current_A;
        t2 === $ && B.throwLateFieldNI("current");
        _this.__PagedPickerState__controller_A = A.PageController$(_this.delta$2(t1, t2));
        t2 = _this._widget;
        _this.__PagedPickerState__key_A = new As.ValueKey(new B._Record_2(t2.start, t2.end), type$.ValueKey_Record_2_LocalDate_and_LocalDate);
      }
    },
    build$1(__wc0_formal) {
      var t3, t4, t5, t6, t7, t8, t9, t10, _this = this, _null = null,
        t1 = _this._widget,
        t2 = t1.style;
      t1 = t1.start;
      t3 = _this.__PagedPickerState_current_A;
      t3 === $ && B.throwLateFieldNI("current");
      t1 = _this.delta$2(t1, t3) === 0 ? _null : _this.get$_onPrevious();
      t3 = _this.get$_paged_picker$_last() ? _null : _this.get$_onNext();
      t4 = _this.__PagedPickerState__actions_A;
      t4 === $ && B.throwLateFieldNI("_actions");
      t5 = _this.__PagedPickerState__focusNode_A;
      t5 === $ && B.throwLateFieldNI("_focusNode");
      t6 = _this.get$onGridFocusChange();
      t7 = _this.__PagedPickerState__key_A;
      t7 === $ && B.throwLateFieldNI("_key");
      t8 = _this.__PagedPickerState__controller_A;
      t8 === $ && B.throwLateFieldNI("_controller");
      t9 = _this.get$buildItem();
      t10 = _this._widget;
      t10 = _this.delta$2(t10.start, t10.end);
      return A3.Column$(B._setArrayType([new A.Navigation(t2.headerStyle, t1, t3, _null), Y.Expanded$(A8.FocusableActionDetector$(t4, false, new A.PageView(t8, _this.get$onPageChange(), new U.SliverChildBuilderDelegate(t9, t10 + 1, true, true, true, U.scroll_delegate___kDefaultSemanticIndexCallback$closure(), _null), t7), true, t5, true, C.C__DeferringMouseCursor, t6, _null, _null, D.Map_LMMuq), 1, _null)], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1);
    },
    didChangeDependencies$0() {
      this.super$State$didChangeDependencies();
      this.__PagedPickerState_textDirection_A = this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
    },
    dispose$0() {
      var t1 = this.__PagedPickerState__controller_A;
      t1 === $ && B.throwLateFieldNI("_controller");
      t1.dispose$0();
      t1 = this.__PagedPickerState__focusNode_A;
      t1 === $ && B.throwLateFieldNI("_focusNode");
      t1.dispose$0();
      this.super$State$dispose();
    },
    _onNext$0() {
      var t1, t2, t3;
      if (!this.get$_paged_picker$_last()) {
        t1 = this.__PagedPickerState__controller_A;
        t1 === $ && B.throwLateFieldNI("_controller");
        t2 = this._widget.style;
        t3 = type$._PagePosition._as(C.JSArray_methods.get$single(t1._positions)).get$page(0);
        t3.toString;
        t1.animateToPage$3$curve$duration(C.JSNumber_methods.round$0(t3) + 1, C.Cubic_glB, t2.pageAnimationDuration);
      }
    },
    _onPrevious$0() {
      var t3, _this = this,
        t1 = _this._widget.start,
        t2 = _this.__PagedPickerState_current_A;
      t2 === $ && B.throwLateFieldNI("current");
      if (_this.delta$2(t1, t2) !== 0) {
        t1 = _this.__PagedPickerState__controller_A;
        t1 === $ && B.throwLateFieldNI("_controller");
        t2 = _this._widget.style;
        t3 = type$._PagePosition._as(C.JSArray_methods.get$single(t1._positions)).get$page(0);
        t3.toString;
        t1.animateToPage$3$curve$duration(C.JSNumber_methods.round$0(t3) - 1, C.Cubic_glB, t2.pageAnimationDuration);
      }
    },
    get$_paged_picker$_last() {
      var _this = this,
        t1 = _this._widget.start,
        t2 = _this.__PagedPickerState_current_A;
      t2 === $ && B.throwLateFieldNI("current");
      t2 = _this.delta$2(t1, t2);
      t1 = _this._widget;
      return t2 === _this.delta$2(t1.start, t1.end);
    },
    _onGridNextFocus$1(intent) {
      var t1, t2;
      type$.NextFocusIntent._as(intent);
      t1 = this.__PagedPickerState__focusNode_A;
      t1 === $ && B.throwLateFieldNI("_focusNode");
      t1.requestFocus$0();
      t2 = t1._focus_manager$_context;
      t2.toString;
      B.FocusTraversalGroup_maybeOf(t2)._moveFocus$2$forward(t1, true);
    },
    _onGridPreviousFocus$1(intent) {
      var t1, t2;
      type$.PreviousFocusIntent._as(intent);
      t1 = this.__PagedPickerState__focusNode_A;
      t1 === $ && B.throwLateFieldNI("_focusNode");
      t1.requestFocus$0();
      t2 = t1._focus_manager$_context;
      t2.toString;
      B.FocusTraversalGroup_maybeOf(t2)._moveFocus$2$forward(t1, false);
    },
    _onDirectionFocus$1(intent) {
      this.setState$1(new A.PagedPickerState__onDirectionFocus_closure(this, type$.DirectionalFocusIntent._as(intent)));
    },
    _nextDate$2(date, direction) {
      var _0_6_isSet, _0_6, t2, next, t3, t4, t5, t6, t7,
        textDirection = this._framework$_element.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        t1 = this.get$directionOffset();
      $label0$0: {
        _0_6_isSet = C.TraversalDirection_3 === direction;
        if (_0_6_isSet) {
          _0_6 = C.TextDirection_0 === textDirection;
          t2 = _0_6;
        } else {
          _0_6 = null;
          t2 = false;
        }
        if (t2) {
          t2 = C.TraversalDirection_1;
          break $label0$0;
        }
        if (C.TraversalDirection_1 === direction)
          t2 = B.boolConversionCheck(_0_6_isSet ? _0_6 : C.TextDirection_0 === textDirection);
        else
          t2 = false;
        if (t2) {
          t2 = C.TraversalDirection_3;
          break $label0$0;
        }
        t2 = direction;
        break $label0$0;
      }
      t2 = t1.$index(0, t2);
      t2.toString;
      next = date.$add(0, t2);
      t1 = date._native;
      t3 = t2.years;
      t4 = t2.months;
      t2 = t2.days;
      while (true) {
        t5 = this._widget;
        t6 = t5.start;
        t7 = t6._native;
        t6 = B._instanceType(t6)._eval$1("Orderable.T")._as(next)._native;
        t6 = 1000 * t6._core$_value + t6._microsecond;
        if (C.JSInt_methods.compareTo$1(1000 * t7._core$_value + t7._microsecond, t6) <= 0) {
          t7 = B._instanceType(next)._eval$1("Orderable.T")._as(t5.end)._native;
          t7 = C.JSInt_methods.compareTo$1(t6, 1000 * t7._core$_value + t7._microsecond) <= 0;
          t6 = t7;
        } else
          t6 = false;
        if (!t6)
          break;
        if (B.boolConversionCheck(t5.selectable$1(next)))
          return next;
        next = new A.LocalDate(A.DateTimes_plus(t1, t2, t4, t3));
      }
      return null;
    },
    set$__PagedPickerState__actions_A(__PagedPickerState__actions_A) {
      this.__PagedPickerState__actions_A = type$.Map_of_Type_and_Action_Intent._as(__PagedPickerState__actions_A);
    }
  };
  A.PagedYearPicker.prototype = {
    createState$0() {
      return new A._PagedYearPickerState();
    }
  };
  A._PagedYearPickerState.prototype = {
    buildItem$2(__wc0_formal, page) {
      var t1, t2, t3;
      type$.BuildContext._as(__wc0_formal);
      B._asInt(page);
      t1 = this._widget;
      t2 = t1.style;
      t1 = A.DateTimes_plus(A.DateTimes_truncate(t1.start._native, D.DateUnit_0), 0, 0, page * 15);
      t3 = this._widget;
      return new A.YearPicker(t2.yearMonthPickerStyle, t2.dayPickerStyle, new A.LocalDate(t1), t3.start, t3.end, t3.today, this.focusedDate, t3.onPress, null);
    },
    onGridFocusChange$1(focused) {
      this.setState$1(new A._PagedYearPickerState_onGridFocusChange_closure(this, B._asBool(focused)));
    },
    onPageChange$1(page) {
      this.setState$1(new A._PagedYearPickerState_onPageChange_closure(this, B._asInt(page)));
    },
    _focusableYear$2(startYear, preferredYear) {
      var newFocus,
        t1 = startYear._native,
        t2 = A.DateTimes_plus(t1, 0, 0, 15),
        endYear = new A.LocalDate(t2),
        t3 = B._instanceType(startYear)._eval$1("Orderable.T")._as(preferredYear)._native;
      t3 = 1000 * t3._core$_value + t3._microsecond;
      if (C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0) {
        B._instanceType(preferredYear)._eval$1("Orderable.T")._as(endYear);
        t1 = C.JSInt_methods.compareTo$1(t3, 1000 * t2._core$_value + t2._microsecond) < 0;
      } else
        t1 = false;
      if (t1)
        return preferredYear;
      for (newFocus = startYear; B._instanceType(newFocus)._eval$1("Orderable.T")._as(endYear), t1 = newFocus._native, C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond) < 0; newFocus = new A.LocalDate(A.DateTimes_plus(t1, 0, 0, 1)))
        if (B.boolConversionCheck(this._widget.selectable$1(newFocus)))
          return newFocus;
      return null;
    },
    delta$2(start, end) {
      return C.JSNumber_methods.floor$0((B.Primitives_getYear(end._native) - B.Primitives_getYear(start._native)) / 15);
    },
    get$directionOffset() {
      return D.Map_u8zac;
    }
  };
  A.YearPicker.prototype = {
    createState$0() {
      return new A._YearPickerState();
    }
  };
  A._YearPickerState.prototype = {
    initState$0() {
      var _list, i, t1, focused, t2, t3, _this = this;
      _this.super$State$initState();
      _list = J.JSArray_JSArray$allocateGrowable(15, type$.FocusNode);
      for (i = 0; i < 15; ++i)
        _list[i] = B.FocusNode$(true, "" + i, true, true, null, null, true);
      _this.set$___YearPickerState__years_A(type$.List_FocusNode._as(_list));
      t1 = _this._widget;
      focused = t1.focused;
      t2 = true;
      if (focused != null) {
        t1 = B._instanceType(focused)._eval$1("Orderable.T")._as(t1.startYear);
        t3 = focused._native;
        t3 = 1000 * t3._core$_value + t3._microsecond;
        t1 = t1._native;
        if (C.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) >= 0) {
          t1 = A.DateTimes_plus(t1, 0, 0, 15);
          type$.LocalDate._eval$1("Orderable.T")._as(focused);
          t3 = C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0;
          t1 = t3;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return;
      t1 = _this.___YearPickerState__years_A;
      t1 === $ && B.throwLateFieldNI("_years");
      t2 = B.Primitives_getYear(focused._native) - B.Primitives_getYear(_this._widget.startYear._native);
      if (!(t2 >= 0 && t2 < t1.length))
        return B.ioore(t1, t2);
      t1[t2].requestFocus$0();
    },
    build$1(context) {
      var year, i, t3, t4, t5, t6, t7, t8, t9, _this = this,
        t1 = _this._widget.dayStyle,
        t2 = B._setArrayType([], type$.JSArray_Widget);
      for (year = _this._widget.startYear, i = 0; i < 15; year = new A.LocalDate(A.DateTimes_plus(t7, 0, 0, 1)), ++i) {
        t3 = _this._widget;
        t4 = t3.yearMonthStyle;
        t5 = _this.___YearPickerState__years_A;
        t5 === $ && B.throwLateFieldNI("_years");
        if (!(i < t5.length))
          return B.ioore(t5, i);
        t5 = t5[i];
        t6 = t3.today;
        t7 = year._native;
        t8 = t3.start;
        B._instanceType(t8)._eval$1("Orderable.T")._as(year);
        t8 = t8._native;
        t9 = 1000 * t7._core$_value + t7._microsecond;
        if (C.JSInt_methods.compareTo$1(1000 * t8._core$_value + t8._microsecond, t9) <= 0) {
          t8 = B._instanceType(year)._eval$1("Orderable.T")._as(t3.end)._native;
          t8 = C.JSInt_methods.compareTo$1(t9, 1000 * t8._core$_value + t8._microsecond) <= 0;
        } else
          t8 = false;
        t2.push(A.Entry_Entry$yearMonth(B.Primitives_getYear(t6._native) === B.Primitives_getYear(t7), year, t5, new A._YearPickerState_build_closure(context), t3.onPress, t8, t4));
      }
      return new E.Padding(Af.EdgeInsets_0_5_0_0, A.GridView$(t2, new H.SliverGridDelegateWithFixedCrossAxisCount(3, 5, 0, (t1.tileSize - 5) * 7 / 5), C.EdgeInsets_0_0_0_0), null);
    },
    didUpdateWidget$1(old) {
      var t1, focused, t2, t3, _0_0, _this = this;
      type$.YearPicker._as(old);
      _this.super$State$didUpdateWidget(old);
      t1 = _this._widget;
      focused = t1.focused;
      t2 = true;
      if (focused != null) {
        t1 = B._instanceType(focused)._eval$1("Orderable.T")._as(t1.startYear);
        t3 = focused._native;
        t3 = 1000 * t3._core$_value + t3._microsecond;
        t1 = t1._native;
        if (C.JSInt_methods.compareTo$1(t3, 1000 * t1._core$_value + t1._microsecond) >= 0) {
          t1 = A.DateTimes_plus(t1, 0, 0, 15);
          type$.LocalDate._eval$1("Orderable.T")._as(focused);
          t3 = C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, t3) <= 0;
          t1 = t3;
        } else
          t1 = t2;
      } else
        t1 = t2;
      if (t1)
        return;
      t1 = _this.___YearPickerState__years_A;
      t1 === $ && B.throwLateFieldNI("_years");
      t2 = focused._native;
      t3 = _this._widget;
      t2 = B.Primitives_getYear(t2) - B.Primitives_getYear(t3.startYear._native);
      if (!(t2 >= 0 && t2 < t1.length))
        return B.ioore(t1, t2);
      _0_0 = t1[t2];
      t1 = J.$eq$(old.focused, t3.focused);
      if (!t1)
        _0_0.requestFocus$0();
    },
    dispose$0() {
      var t2, _i, node, t3,
        t1 = this.___YearPickerState__years_A;
      t1 === $ && B.throwLateFieldNI("_years");
      t2 = t1.length;
      _i = 0;
      for (; _i < t1.length; t1.length === t2 || (0, B.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        t3 = node._attachment;
        if (t3 != null)
          t3.detach$0(0);
        node.super$ChangeNotifier$dispose();
      }
      this.super$State$dispose();
    },
    set$___YearPickerState__years_A(___YearPickerState__years_A) {
      this.___YearPickerState__years_A = type$.List_FocusNode._as(___YearPickerState__years_A);
    }
  };
  A.YearMonthPicker.prototype = {
    createState$0() {
      return new A._YearMonthPickerState();
    }
  };
  A._YearMonthPickerState.prototype = {
    build$1(__wc0_formal) {
      var t3, t4, t5, _this = this,
        t1 = _this._year,
        t2 = _this._widget;
      if (t1) {
        t1 = t2.style;
        t2 = A.DateTimes_truncate(t2.start._native, D.DateUnit_0);
        t3 = A.DateTimes_truncate(_this._widget.end._native, D.DateUnit_0);
        t4 = _this._widget;
        t5 = t4.today;
        return A.PagedYearPicker$(new A.LocalDate(t3), new A.LocalDate(A.DateTimes_truncate(t4.month._change_notifier$_value._native, D.DateUnit_0)), new A._YearMonthPickerState_build_closure(_this), new A.LocalDate(t2), t1, t5);
      } else {
        t1 = t2.style;
        t2 = A.DateTimes_truncate(t2.start._native, D.DateUnit_1);
        t3 = A.DateTimes_truncate(_this._widget.end._native, D.DateUnit_1);
        t4 = _this._widget;
        t5 = t4.today;
        return A.PagedMonthPicker$(new A.LocalDate(t3), new A.LocalDate(A.DateTimes_truncate(t4.month._change_notifier$_value._native, D.DateUnit_0)), new A._YearMonthPickerState_build_closure0(_this), new A.LocalDate(t2), t1, t5);
      }
    }
  };
  A._FRootHeader.prototype = {
    build$1(context) {
      var _null = null,
        style = Z.FTheme_of(context).headerStyle.rootStyle,
        t1 = this.suffixes,
        t2 = B._arrayInstanceType(t1),
        t3 = t2._eval$1("ExpandIterable<1,Widget>");
      t3 = A0.Row$(B._setArrayType([Y.Expanded$(U.DefaultTextStyle_merge(this.title, 1, L.TextOverflow_1, false, style.titleTextStyle, _null, _null), 1, _null), K.FHeaderData$(style.actionStyle, A0.Row$(B.List_List$of(new B.ExpandIterable(t1, t2._eval$1("Iterable<Widget>(1)")._as(new A._FRootHeader_build_closure(style)), t3), true, t3._eval$1("Iterable.E")), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1))], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_3, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1);
      return A9.SafeArea$(false, new B.Semantics(B.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, new E.Padding(style.padding, t3, _null), _null), _null, true, C.EdgeInsets_0_0_0_0, true, true);
    }
  };
  A.ChooseMediaOption.prototype = {
    set$fail(value) {
      var t1;
      type$.nullable_void_Function_GeneralCallbackResult._as(value);
      t1 = this.__ChooseMediaOption_$$context$$_A;
      t1 === $ && B.throwLateFieldNI("$$context$$");
      t1.jsObject.$indexSet(0, "fail", B.JSObject_transformToBrowserJSObject(new A.ChooseMediaOption_fail_closure(value)));
    },
    set$success(value) {
      var t1;
      type$.nullable_void_Function_ChooseMediaSuccessCallbackResult._as(value);
      t1 = this.__ChooseMediaOption_$$context$$_A;
      t1 === $ && B.throwLateFieldNI("$$context$$");
      t1.jsObject.$indexSet(0, "success", B.JSObject_transformToBrowserJSObject(new A.ChooseMediaOption_success_closure(value)));
    }
  };
  A.Orderable.prototype = {
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this !== other) {
        t1 = false;
        if (B._instanceType(_this)._eval$1("Orderable.T")._is(other))
          if (B.getRuntimeTypeOfDartObject(_this) === B.getRuntimeTypeOfDartObject(other)) {
            t1 = _this._native;
            t2 = other._native;
            t2 = C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond) === 0;
            t1 = t2;
          }
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._native;
      return (B.Primitives_objectHashCode(B.getRuntimeTypeOfDartObject(this)) ^ 1000 * t1._core$_value + t1._microsecond) >>> 0;
    }
  };
  A.Date.prototype = {};
  A.LocalDate.prototype = {
    minus$1$days(days) {
      return new A.LocalDate(A.DateTimes_minus(this._native, days, 0, 0));
    },
    $add(_, period) {
      type$.Period._as(period);
      return new A.LocalDate(A.DateTimes_plus(this._native, period.days, period.months, period.years));
    },
    $sub(_, period) {
      type$.Period._as(period);
      return new A.LocalDate(A.DateTimes_minus(this._native, period.days, period.months, period.years));
    },
    copyWith$3$day$month$year(day, month, year) {
      var t1 = year == null ? B.Primitives_getYear(this._native) : year,
        t2 = month == null ? B.Primitives_getMonth(this._native) : month;
      return new A.LocalDate(O.DateTime$utc(t1, t2, day == null ? B.Primitives_getDay(this._native) : day, 0, 0, 0, 0, 0));
    },
    copyWith$1$month(month) {
      return this.copyWith$3$day$month$year(null, month, null);
    },
    copyWith$1$year(year) {
      return this.copyWith$3$day$month$year(null, null, year);
    },
    copyWith$1$day(day) {
      return this.copyWith$3$day$month$year(day, null, null);
    },
    compareTo$1(_, other) {
      var t1 = this._native,
        t2 = type$.LocalDate._as(other)._native;
      return C.JSInt_methods.compareTo$1(1000 * t1._core$_value + t1._microsecond, 1000 * t2._core$_value + t2._microsecond);
    },
    toString$0(_) {
      var t2, sign,
        t1 = this._date$_string;
      if (t1 == null) {
        t1 = this._native;
        t2 = B.Primitives_getYear(t1);
        sign = t2 < 0 ? "-" : "";
        t1 = this._date$_string = sign + C.JSString_methods.padLeft$2(C.JSInt_methods.toString$0(Math.abs(t2)), 4, "0") + "-" + C.JSString_methods.padLeft$2(C.JSInt_methods.toString$0(B.Primitives_getMonth(t1)), 2, "0") + "-" + C.JSString_methods.padLeft$2(C.JSInt_methods.toString$0(B.Primitives_getDay(t1)), 2, "0");
      }
      return t1;
    },
    $isComparable: 1
  };
  A._LocalDate_Date_Orderable.prototype = {};
  A.Period.prototype = {
    $add(_, other) {
      var _this = this;
      type$.Period._as(other);
      return new A.Period(_this.years + other.years, _this.months + other.months, _this.days + other.days, _this.hours + other.hours, _this.minutes + other.minutes, _this.seconds + other.seconds, _this.milliseconds + other.milliseconds, _this.microseconds + other.microseconds);
    },
    $sub(_, other) {
      var _this = this;
      type$.Period._as(other);
      return new A.Period(_this.years - other.years, _this.months - other.months, _this.days - other.days, _this.hours - other.hours, _this.minutes - other.minutes, _this.seconds - other.seconds, _this.milliseconds - other.milliseconds, _this.microseconds - other.microseconds);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this !== other)
        t1 = other instanceof A.Period && B.getRuntimeTypeOfDartObject(_this) === B.getRuntimeTypeOfDartObject(other) && _this.years === other.years && _this.months === other.months && _this.days === other.days && _this.hours === other.hours && _this.minutes === other.minutes && _this.seconds === other.seconds && _this.milliseconds === other.milliseconds && _this.microseconds === other.microseconds;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return C.JSInt_methods.get$hashCode(_this.years) ^ C.JSInt_methods.get$hashCode(_this.months) ^ C.JSInt_methods.get$hashCode(_this.days) ^ C.JSInt_methods.get$hashCode(_this.hours) ^ C.JSInt_methods.get$hashCode(_this.minutes) ^ C.JSInt_methods.get$hashCode(_this.seconds) ^ C.JSInt_methods.get$hashCode(_this.milliseconds) ^ C.JSInt_methods.get$hashCode(_this.microseconds);
    },
    toString$0(_) {
      var _this = this;
      return "Period[" + _this.years + " years, " + _this.months + " months, " + _this.days + " days, " + _this.hours + " hours, " + _this.minutes + " minutes, " + _this.seconds + " seconds, " + _this.milliseconds + " milliseconds, " + _this.microseconds + " microseconds]";
    }
  };
  A.DateUnit.prototype = {
    _enumToString$0() {
      return "DateUnit." + this._name;
    }
  };
  A.TimeUnit.prototype = {
    _enumToString$0() {
      return "TimeUnit." + this._name;
    }
  };
  A.TDConfirmDialog.prototype = {
    _buildButton$1(context) {
      var _null = null;
      return E.Container$(_null, K.TDDialogButton$(_null, this.buttonText, _null, L.FontWeight_5, _null, AD.TDButtonTheme_1, _null, 40, new A.TDConfirmDialog__buildButton_closure(this, context)), C.Clip_0, _null, _null, _null, _null, _null, _null, _null, D.EdgeInsets_24_24_24_24, _null, _null, _null);
    },
    build$1(context) {
      return new K.TDDialogScaffold(new B4.LayoutBuilder(new A.TDConfirmDialog_build_closure(this), null), null, L.Color_wst, 12, null);
    }
  };
  A.TDSkeletonAnimation.prototype = {
    _enumToString$0() {
      return "TDSkeletonAnimation." + this._name;
    }
  };
  A.TDSkeletonTheme.prototype = {
    _enumToString$0() {
      return "TDSkeletonTheme." + this._name;
    }
  };
  A.TDSkeleton.prototype = {
    createState$0() {
      return new A._TDSkeletonState(null, null);
    }
  };
  A._TDSkeletonState.prototype = {
    initState$0() {
      var t1, t2, _this = this, _null = null,
        _s11_ = "_controller",
        _s10_ = "_animation";
      _this.super$State$initState();
      switch (_this._widget.animation.index) {
        case 0:
          t1 = E.AnimationController$(_null, Av.Duration_1500000, _null, _null, _this);
          t1.repeat$0(0);
          _this.___TDSkeletonState__controller_F !== $ && B.throwLateFieldAI(_s11_);
          _this.___TDSkeletonState__controller_F = t1;
          t2 = type$.Tween_double;
          type$.Animation_double._as(t1);
          t1.addListener$1(0, type$.void_Function._as(new A._TDSkeletonState_initState_closure(_this)));
          t2 = type$.nullable_Animation_double._as(new E._AnimatedEvaluation(t1, new E.Tween(-1, 1, t2), t2._eval$1("_AnimatedEvaluation<Animatable.T>")));
          _this.___TDSkeletonState__animation_F !== $ && B.throwLateFieldAI(_s10_);
          _this.set$___TDSkeletonState__animation_F(t2);
          break;
        case 1:
          t1 = E.AnimationController$(_null, C.Duration_1000000, _null, _null, _this);
          t1.repeat$1$reverse(0, true);
          _this.___TDSkeletonState__controller_F !== $ && B.throwLateFieldAI(_s11_);
          _this.___TDSkeletonState__controller_F = t1;
          t2 = type$.Tween_double;
          type$.Animation_double._as(t1);
          t1.addListener$1(0, type$.void_Function._as(new A._TDSkeletonState_initState_closure0(_this)));
          t2 = type$.nullable_Animation_double._as(new E._AnimatedEvaluation(t1, new E.Tween(1, 0.3, t2), t2._eval$1("_AnimatedEvaluation<Animatable.T>")));
          _this.___TDSkeletonState__animation_F !== $ && B.throwLateFieldAI(_s10_);
          _this.set$___TDSkeletonState__animation_F(t2);
          break;
        default:
          _this.___TDSkeletonState__controller_F !== $ && B.throwLateFieldAI(_s11_);
          _this.___TDSkeletonState__controller_F = null;
          _this.___TDSkeletonState__animation_F !== $ && B.throwLateFieldAI(_s10_);
          _this.set$___TDSkeletonState__animation_F(_null);
      }
      B.Future_Future$delayed(B.Duration$(0, _this._widget.delay), new A._TDSkeletonState_initState_closure1(_this), type$.void);
    },
    _buildObj$1(context) {
      return new A._TDSkeletonState__buildObj_closure(this, context);
    },
    build$1(context) {
      var t1, t2, t3, skeletonRows, skeletonRowCol, _this = this, _null = null;
      if (_this._td_skeleton$_isLoading)
        return $.$get$_TDSkeletonState__loadingWidget();
      t1 = _this._widget.rowCol.objects;
      if (t1.length === 1) {
        if (C.JSArray_methods.get$first(t1).length === 1)
          t1 = _this._buildObj$1(context).call$1(C.JSArray_methods.get$first(C.JSArray_methods.get$first(_this._widget.rowCol.objects)));
        else {
          t1 = C.JSArray_methods.get$first(_this._widget.rowCol.objects);
          t2 = B._arrayInstanceType(t1);
          t3 = t2._eval$1("MappedListIterable<1,Widget>");
          t3 = new Y.Flexible(1, G.FlexFit_1, A0.Row$(B.List_List$of(new B.MappedListIterable(t1, t2._eval$1("Widget(1)")._as(_this._buildObj$1(context)), t3), true, t3._eval$1("ListIterable.E")), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1), _null);
          t1 = t3;
        }
        return t1;
      }
      t2 = B._arrayInstanceType(t1);
      t3 = t2._eval$1("MappedListIterable<1,Row>");
      skeletonRows = B.List_List$of(new B.MappedListIterable(t1, t2._eval$1("Row(1)")._as(new A._TDSkeletonState_build_closure(_this, context)), t3), true, t3._eval$1("ListIterable.E"));
      _this._widget.toString;
      t1 = A.TDSkeletonRowColStyle__defaultRowSpacing(context);
      if (typeof t1 !== "number")
        return t1.$gt();
      if (t1 > 0) {
        t1 = B._arrayInstanceType(skeletonRows);
        t2 = t1._eval$1("ExpandIterable<1,Widget>");
        skeletonRows = B.List_List$of(new B.ExpandIterable(skeletonRows, t1._eval$1("Iterable<Widget>(1)")._as(new A._TDSkeletonState_build_closure0(_this, context)), t2), true, t2._eval$1("Iterable.E"));
        C.JSArray_methods.removeLast$0(skeletonRows);
      }
      skeletonRowCol = A3.Column$(skeletonRows, G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, _null, _null, G.VerticalDirection_1);
      return C.JSArray_methods.any$1(_this._widget.rowCol.objects, new A._TDSkeletonState_build_closure1()) ? new Y.Flexible(1, G.FlexFit_1, E.Container$(_null, skeletonRowCol, C.Clip_0, _null, new B.BoxConstraints(0, 1 / 0, 0, _this._widget.rowCol.visualHeight$1(context)), _null, _null, _null, _null, _null, _null, _null, _null, _null), _null) : skeletonRowCol;
    },
    dispose$0() {
      var t1 = this.___TDSkeletonState__controller_F;
      t1 === $ && B.throwLateFieldNI("_controller");
      if (t1 != null)
        t1.dispose$0();
      this.super$__TDSkeletonState_State_SingleTickerProviderStateMixin$dispose();
    },
    set$___TDSkeletonState__animation_F(___TDSkeletonState__animation_F) {
      this.___TDSkeletonState__animation_F = type$.nullable_Animation_double._as(___TDSkeletonState__animation_F);
    },
    $isTickerProvider: 1
  };
  A.__TDSkeletonState_State_SingleTickerProviderStateMixin.prototype = {
    dispose$0() {
      var _this = this,
        t1 = _this.SingleTickerProviderStateMixin__tickerModeNotifier;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_updateTicker());
      _this.set$_tickerModeNotifier(null);
      _this.super$State$dispose();
    },
    activate$0() {
      this.super$State$activate();
      this._updateTickerModeNotifier$0();
      this._updateTicker$0();
    }
  };
  A.TDSkeletonRowColStyle.prototype = {};
  A.TDSkeletonRowCol.prototype = {
    visualHeight$1(context) {
      var t1, t2,
        rowSpacing = A.TDSkeletonRowColStyle__defaultRowSpacing(context);
      if (rowSpacing < 0)
        rowSpacing = 0;
      t1 = this.objects;
      t2 = B._arrayInstanceType(t1);
      return new B.MappedListIterable(t1, t2._eval$1("double(1)")._as(new A.TDSkeletonRowCol_visualHeight_closure()), t2._eval$1("MappedListIterable<1,double>")).fold$1$2(0, 0, new A.TDSkeletonRowCol_visualHeight_closure0(), type$.double) + rowSpacing * (t1.length - 1);
    }
  };
  A.TDSkeletonRowColObjStyle.prototype = {};
  A.TDSkeletonRowColObj.prototype = {
    get$visualHeight() {
      var t1 = this.height;
      return t1 == null ? 0 : t1;
    }
  };
  A.Quaternion.prototype = {
    setFrom$1(source) {
      var sourceStorage = source._qStorage,
        t1 = this._qStorage,
        t2 = sourceStorage[0];
      t1.$flags & 2 && B.throwUnsupportedOperation(t1);
      t1[0] = t2;
      t1[1] = sourceStorage[1];
      t1[2] = sourceStorage[2];
      t1[3] = sourceStorage[3];
    },
    setFromRotation$1(rotationMatrix) {
      var s, i, j, k, t4, t5, t6,
        rotationMatrixStorage = rotationMatrix._m3storage,
        t1 = rotationMatrixStorage[0],
        t2 = rotationMatrixStorage[4],
        t3 = rotationMatrixStorage[8],
        t = 0 + t1 + t2 + t3;
      if (t > 0) {
        s = Math.sqrt(t + 1);
        t1 = this._qStorage;
        t1.$flags & 2 && B.throwUnsupportedOperation(t1);
        t1[3] = s * 0.5;
        s = 0.5 / s;
        t1[0] = (rotationMatrixStorage[5] - rotationMatrixStorage[7]) * s;
        t1[1] = (rotationMatrixStorage[6] - rotationMatrixStorage[2]) * s;
        t1[2] = (rotationMatrixStorage[1] - rotationMatrixStorage[3]) * s;
      } else {
        if (t1 < t2)
          i = t2 < t3 ? 2 : 1;
        else
          i = t1 < t3 ? 2 : 0;
        j = (i + 1) % 3;
        k = (i + 2) % 3;
        t1 = i * 3;
        t2 = t1 + i;
        if (!(t2 < 9))
          return B.ioore(rotationMatrixStorage, t2);
        t2 = rotationMatrixStorage[t2];
        t3 = j * 3;
        t4 = t3 + j;
        if (!(t4 < 9))
          return B.ioore(rotationMatrixStorage, t4);
        t4 = rotationMatrixStorage[t4];
        t5 = k * 3;
        t6 = t5 + k;
        if (!(t6 < 9))
          return B.ioore(rotationMatrixStorage, t6);
        s = Math.sqrt(t2 - t4 - rotationMatrixStorage[t6] + 1);
        t6 = this._qStorage;
        t6.$flags & 2 && B.throwUnsupportedOperation(t6);
        t6[i] = s * 0.5;
        s = 0.5 / s;
        t4 = t3 + k;
        if (!(t4 < 9))
          return B.ioore(rotationMatrixStorage, t4);
        t4 = rotationMatrixStorage[t4];
        t2 = t5 + j;
        if (!(t2 < 9))
          return B.ioore(rotationMatrixStorage, t2);
        t6[3] = (t4 - rotationMatrixStorage[t2]) * s;
        t2 = t1 + j;
        if (!(t2 < 9))
          return B.ioore(rotationMatrixStorage, t2);
        t2 = rotationMatrixStorage[t2];
        t3 += i;
        if (!(t3 < 9))
          return B.ioore(rotationMatrixStorage, t3);
        t6[j] = (t2 + rotationMatrixStorage[t3]) * s;
        t1 += k;
        if (!(t1 < 9))
          return B.ioore(rotationMatrixStorage, t1);
        t1 = rotationMatrixStorage[t1];
        t5 += i;
        if (!(t5 < 9))
          return B.ioore(rotationMatrixStorage, t5);
        t6[k] = (t1 + rotationMatrixStorage[t5]) * s;
      }
    },
    normalize$0(_) {
      var d, t1, t2,
        l = Math.sqrt(this.get$length2());
      if (l === 0)
        return 0;
      d = 1 / l;
      t1 = this._qStorage;
      t2 = t1[0];
      t1.$flags & 2 && B.throwUnsupportedOperation(t1);
      t1[0] = t2 * d;
      t1[1] = t1[1] * d;
      t1[2] = t1[2] * d;
      t1[3] = t1[3] * d;
      return l;
    },
    get$length2() {
      var t1 = this._qStorage,
        x = t1[0],
        y = t1[1],
        z = t1[2],
        w = t1[3];
      return x * x + y * y + z * z + w * w;
    },
    get$length(_) {
      var t1 = this._qStorage,
        x = t1[0],
        y = t1[1],
        z = t1[2],
        w = t1[3];
      return Math.sqrt(x * x + y * y + z * z + w * w);
    },
    scaled$1(scale) {
      var t1 = new Float64Array(4),
        t2 = new A.Quaternion(t1);
      t2.setFrom$1(this);
      t1[3] = t1[3] * scale;
      t1[2] = t1[2] * scale;
      t1[1] = t1[1] * scale;
      t1[0] = t1[0] * scale;
      return t2;
    },
    $mul(_, other) {
      var t1, _w, _z, _y, _x, otherStorage, ow, oz, oy, ox, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
      type$.Quaternion._as(other);
      t1 = this._qStorage;
      _w = t1[3];
      _z = t1[2];
      _y = t1[1];
      _x = t1[0];
      otherStorage = other.get$_qStorage();
      ow = otherStorage.$index(0, 3);
      oz = otherStorage.$index(0, 2);
      oy = otherStorage.$index(0, 1);
      ox = otherStorage.$index(0, 0);
      t1 = C.JSNumber_methods.$mul(_w, ox);
      t2 = C.JSNumber_methods.$mul(_x, ow);
      t3 = C.JSNumber_methods.$mul(_y, oz);
      t4 = C.JSNumber_methods.$mul(_z, oy);
      t5 = C.JSNumber_methods.$mul(_w, oy);
      t6 = C.JSNumber_methods.$mul(_y, ow);
      t7 = C.JSNumber_methods.$mul(_z, ox);
      t8 = C.JSNumber_methods.$mul(_x, oz);
      t9 = C.JSNumber_methods.$mul(_w, oz);
      t10 = C.JSNumber_methods.$mul(_z, ow);
      t11 = C.JSNumber_methods.$mul(_x, oy);
      t12 = C.JSNumber_methods.$mul(_y, ox);
      t13 = C.JSNumber_methods.$mul(_w, ow);
      t14 = C.JSNumber_methods.$mul(_x, ox);
      t15 = C.JSNumber_methods.$mul(_y, oy);
      t16 = C.JSNumber_methods.$mul(_z, oz);
      t17 = new Float64Array(4);
      t17[0] = t1 + t2 + t3 - t4;
      t17[1] = t5 + t6 + t7 - t8;
      t17[2] = t9 + t10 + t11 - t12;
      t17[3] = t13 - t14 - t15 - t16;
      return new A.Quaternion(t17);
    },
    $add(_, other) {
      var t1, t2, argStorage;
      type$.Quaternion._as(other);
      t1 = new Float64Array(4);
      t2 = new A.Quaternion(t1);
      t2.setFrom$1(this);
      argStorage = other._qStorage;
      t1[0] = t1[0] + argStorage[0];
      t1[1] = t1[1] + argStorage[1];
      t1[2] = t1[2] + argStorage[2];
      t1[3] = t1[3] + argStorage[3];
      return t2;
    },
    $sub(_, other) {
      var t1, t2, argStorage;
      type$.Quaternion._as(other);
      t1 = new Float64Array(4);
      t2 = new A.Quaternion(t1);
      t2.setFrom$1(this);
      argStorage = other._qStorage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      t1[3] = t1[3] - argStorage[3];
      return t2;
    },
    $index(_, i) {
      var t1;
      B._asInt(i);
      t1 = this._qStorage;
      if (!(i < 4))
        return B.ioore(t1, i);
      return t1[i];
    },
    $indexSet(_, i, arg) {
      C.NativeFloat64List_methods.$indexSet(this._qStorage, B._asInt(i), B._asDouble(arg));
    },
    toString$0(_) {
      var t1 = this._qStorage;
      return B.S(t1[0]) + ", " + B.S(t1[1]) + ", " + B.S(t1[2]) + " @ " + B.S(t1[3]);
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["~(LocalDate)", "double(double)", "~()", "double(BuildContext)", "~(int)", "bool(Message)", "bool(LocalDate)", "Widget(BuildContext,int)", "~(bool)", "Color(BuildContext)", "StatefulBuilder(BuildContext)", "AlignmentGeometryTween(@)", "EdgeInsetsGeometryTween(@)", "DecorationTween(@)", "DateTime(int[int,int,int,int,int,int,int])", "String(LocalDate)", "Widget(BuildContext,Set<WidgetState>,Widget?)", "Future<~>(CustomMessage,String)", "bool(SessionInfo)", "~(GeneralCallbackResult)", "TDConfirmDialog(BuildContext,~(~()))", "~(DragStartDetails)", "~(DragEndDetails{isClosing:bool?})", "Material(BuildContext,int)", "DateTime(SessionInfo)", "FCalendar(Map<DateTime,int>)", "BoxConstraintsTween(@)", "Matrix4Tween(@)", "bool(ScrollNotification)", "Viewport(BuildContext,ViewportOffset)", "SizedBox(BuildContext,+current,date,selectable,selected,style,today(bool,DateTime,bool,bool,FCalendarDayPickerStyle,bool),Widget?)", "Header(BuildContext,LocalDate,Widget?)", "StatefulWidget(BuildContext,FCalendarPickerType,Widget?)", "TDAlertDialog(BuildContext)", "FDialog(BuildContext,AsyncSnapshot<Map<DateTime,int>>)", "Future<User>(String)", "Composer(BuildContext)", "FlyerChatTextMessage(BuildContext,TextMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "Consumer<StreamStateManager>(BuildContext,TextStreamMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "FlyerChatTextStreamMessage(BuildContext,StreamStateManager,Widget?)", "SizedBox(BuildContext,Set<WidgetState>,Widget?)", "~(NextFocusIntent)", "~(PreviousFocusIntent)", "~(DirectionalFocusIntent)", "~(TapDownDetails)", "Column(BuildContext,BoxConstraints)", "Widget(TDSkeletonRowColObj)", "Row(List<TDSkeletonRowColObj>)", "bool(List<TDSkeletonRowColObj>)", "bool(TDSkeletonRowColObj)", "double(List<TDSkeletonRowColObj>)", "double(double,TDSkeletonRowColObj)", "bool(DateTime)", "FlyerChatImageMessage(BuildContext,ImageMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "ChatCustomMessage(BuildContext,CustomMessage,int{groupStatus:MessageGroupStatus?,isSentByMe!bool})", "FutureBuilder<Map<DateTime,int>>(BuildContext,~(~()))"]);
  A.MyChatController_insertMessage_closure.prototype = {
    call$1(m) {
      var t1;
      type$.Message._as(m);
      t1 = this.message;
      return m.get$id(m) === t1.get$id(t1);
    },
    $signature: typesOffset + 5
  };
  A.MyChatController_updateMessage_closure.prototype = {
    call$1(m) {
      var t1;
      type$.Message._as(m);
      t1 = this.oldMessage;
      return m.get$id(m) === t1.get$id(t1);
    },
    $signature: typesOffset + 5
  };
  A.MyChatController_handleSendMessage_closure.prototype = {
    call$1(msg) {
      return this.$call$body$MyChatController_handleSendMessage_closure(type$.Map_String_dynamic._as(msg));
    },
    $call$body$MyChatController_handleSendMessage_closure(msg) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, token, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx(msg);
              switch (t1.$index(msg, "event")) {
                case "message":
                  token = B._asString(t1.$index(msg, "data"));
                  t1 = $async$self._box_0;
                  t1.accumulatedText = C.JSString_methods.$add(t1.accumulatedText, token);
                  if (J.get$length$asx(token) !== 0)
                    $async$self.$this.sSM.update$2(0, $async$self.streamId, t1.accumulatedText);
                  break;
                default:
                  C.JSArray_methods.add$1($async$self.customs, msg);
              }
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 339
  };
  A.MyChatController_handleSendMessage_closure1.prototype = {
    call$1(err) {
      var t1 = err == null ? type$.Object._as(err) : err;
      this.$this.sSM.error$2(0, this.streamId, t1);
    },
    $signature: 4
  };
  A.MyChatController_handleSendMessage_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, finalMessage, custom, qMessage, t5, _i, t6, t7, t1, t2, t3, finalText, t4, index;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = t1.sSM;
              t3 = $async$self.streamId;
              finalText = t2.getText$1(t3);
              t4 = t1._messages;
              index = C.JSArray_methods.indexWhere$1(t4, new A.MyChatController_handleSendMessage__closure(t3));
              $async$goto = !J.$eq$(index, -1) ? 2 : 3;
              break;
            case 2:
              // then
              finalMessage = A.TextMessage$("server", new B.DateTime(Date.now(), 0, false).toUtc$0(), null, null, null, null, t3, null, null, null, null, null, null, null, null, finalText, null);
              $async$goto = 4;
              return B._asyncAwait(t1.updateMessage$2(C.JSArray_methods.$index(t4, index), finalMessage), $async$call$0);
            case 4:
              // returning from await.
            case 3:
              // join
              t4 = $async$self.customs, t5 = t4.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t4.length)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              custom = t4[_i];
              t6 = R.C_Uuid.v4$0();
              t7 = new B.DateTime(Date.now(), 0, false).toUtc$0();
              qMessage = new H.CustomMessage(t6, "server", null, t7, null, null, null, null, null, null, null, null, custom, null, "custom");
              $async$goto = 8;
              return B._asyncAwait(t1.insertMessage$1(qMessage), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              t4.length === t5 || (0, B.throwConcurrentModificationError)(t4), ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              t2.reset$1(0, t3);
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 5
  };
  A.MyChatController_handleSendMessage__closure.prototype = {
    call$1(m) {
      type$.Message._as(m);
      return m.get$id(m) === this.streamId;
    },
    $signature: typesOffset + 5
  };
  A.MyChatController_handleAttachmentTap_closure.prototype = {
    call$1(context) {
      var _null = null;
      return B0.StyledWidget_safeArea(H.Wrap$(F.WrapAlignment_0, B._setArrayType([Ar.ListTile$(D.Icon_Sl6, _null, new A.MyChatController_handleAttachmentTap__closure(this.$this, type$.BuildContext._as(context), this.onUpdate), _null, D.Text_4Da)], type$.JSArray_ListTile), C.Clip_0, F.WrapCrossAlignment_0, C.Axis_0, _null, F.WrapAlignment_0, 0, 0, _null, G.VerticalDirection_1));
    },
    $signature: 16
  };
  A.MyChatController_handleAttachmentTap__closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$errorStack = [], $async$self = this, exception, t1, $async$exception, $async$temp1, $async$temp2;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.context;
              S.Navigator_of(t1, false).pop$1$1(null, type$.nullable_Object);
              $async$handler = 3;
              $async$temp1 = C.JSArray_methods;
              $async$temp2 = $async$self.$this._pendingImagePaths;
              $async$goto = 6;
              return B._asyncAwait(A.pickMediaPaths(), $async$call$0);
            case 6:
              // returning from await.
              $async$temp1.addAll$1($async$temp2, $async$result);
              $async$self.onUpdate.call$0();
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              if (t1._widget != null)
                V.showError(t1, "\u4e0a\u4f20\u5931\u8d25");
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return B._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 5
  };
  A._ChatPageState__initAsync_closure.prototype = {
    call$1(s) {
      var t2,
        t1 = type$.SessionInfo._as(s).date;
      t1 = N.DateTime$(B.Primitives_getYear(t1), B.Primitives_getMonth(t1), B.Primitives_getDay(t1), 0, 0, 0, 0, 0);
      t2 = new B.DateTime(Date.now(), 0, false);
      return t1.$eq(0, N.DateTime$(B.Primitives_getYear(t2), B.Primitives_getMonth(t2), B.Primitives_getDay(t2), 0, 0, 0, 0, 0));
    },
    $signature: typesOffset + 18
  };
  A._ChatPageState__initAsync_closure0.prototype = {
    call$0() {
      return this.$this._chat_page$_initialized = true;
    },
    $signature: 0
  };
  A._ChatPageState__switchSession_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      t2.cSM.switchSession$1(this.sessionId);
      t2 = t1.___ChatPageState__cC_A;
      t1 = t1._framework$_element;
      t1.toString;
      t2.loadMessagesFromStorage$1(t1);
    },
    $signature: 0
  };
  A._ChatPageState__deleteSession_closure.prototype = {
    call$1(__wc0_formal) {
      var t1;
      type$.BuildContext._as(__wc0_formal);
      t1 = this.$this;
      return K.TDAlertDialog$("\u786e\u5b9a\u8981\u5220\u9664\u8be5\u4f1a\u8bdd\u5417\uff1f", new A._ChatPageState__deleteSession__closure(t1), new A._ChatPageState__deleteSession__closure0(t1, this.sessionId), "\u786e\u8ba4\u5220\u9664\uff1f");
    },
    $signature: typesOffset + 33
  };
  A._ChatPageState__deleteSession__closure.prototype = {
    call$0() {
      var t1 = this.$this._framework$_element;
      t1.toString;
      S.Navigator_of(t1, false).pop$1$1(false, type$.bool);
      return null;
    },
    $signature: 0
  };
  A._ChatPageState__deleteSession__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.Null),
        $async$handler = 1, $async$errorStack = [], $async$self = this, e, t1, t2, exception, $async$exception;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$errorStack.push($async$result);
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              t1 = $async$self.$this;
              t2 = t1.___ChatPageState__cC_A;
              t2 === $ && B.throwLateFieldNI("_cC");
              $async$goto = 6;
              return B._asyncAwait(t2.cSM.deleteSession$2(t2.uSM.get$currentToken(), $async$self.sessionId), $async$call$0);
            case 6:
              // returning from await.
              t1._switchSession$1(t1.___ChatPageState__cC_A.cSM.get$currentSessionId());
              t1 = t1._framework$_element;
              if (t1 != null)
                S.Navigator_of(t1, false).pop$1$1(true, type$.bool);
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$errorStack.pop();
              e = B.unwrapException($async$exception);
              t1 = $async$self.$this._framework$_element;
              if (t1 != null)
                V.showError(t1, e);
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return B._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return B._asyncRethrow($async$errorStack.at(-1), $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 28
  };
  A._ChatPageState__showSessionSwitchDialog_closure.prototype = {
    call$1(__wc0_formal) {
      type$.BuildContext._as(__wc0_formal);
      return new X.StatefulBuilder(new A._ChatPageState__showSessionSwitchDialog__closure(this.$this, this.date, this.sessions), null);
    },
    $signature: typesOffset + 10
  };
  A._ChatPageState__showSessionSwitchDialog__closure.prototype = {
    call$2(context, setState) {
      var t1, t2, t3, t4, _null = null;
      type$.BuildContext._as(context);
      type$.void_Function_void_Function._as(setState);
      t1 = this.$this;
      t2 = this.sessions;
      t3 = J.getInterceptor$asx(t2);
      t4 = Aq.ListView$builder(_null, _null, new A._ChatPageState__showSessionSwitchDialog___closure(t1, t2, context, setState), t3.get$length(t2), _null, _null, C.Axis_1, false);
      return new A.TDConfirmDialog("\u9009\u62e9\u4f1a\u8bdd", A9.StyledList_toColumn(B._setArrayType([new E.SizedBox(320, t3.get$length(t2) > 5 ? 300 : t3.get$length(t2) * 60, t4, _null)], type$.JSArray_SizedBox), G.CrossAxisAlignment_2, G.MainAxisAlignment_0, G.MainAxisSize_0), "\u65b0\u589e\u4f1a\u8bdd", new A._ChatPageState__showSessionSwitchDialog___closure0(t1, setState, this.date, context), _null);
    },
    $signature: typesOffset + 20
  };
  A._ChatPageState__showSessionSwitchDialog___closure0.prototype = {
    call$0() {
      var _this = this;
      return _this.setState.call$1(new A._ChatPageState__showSessionSwitchDialog____closure(_this.$this, _this.date, _this.context));
    },
    $signature: 0
  };
  A._ChatPageState__showSessionSwitchDialog____closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.date,
        t3 = N.DateTime$(B.Primitives_getYear(t2), B.Primitives_getMonth(t2), B.Primitives_getDay(t2), 0, 0, 0, 0, 0),
        t4 = new B.DateTime(Date.now(), 0, false);
      t1._createSession$1(0, t3.$eq(0, N.DateTime$(B.Primitives_getYear(t4), B.Primitives_getMonth(t4), B.Primitives_getDay(t4), 0, 0, 0, 0, 0)) ? null : t2);
      if (t1._framework$_element != null)
        S.Navigator_of(_this.context, false).pop$1$1(null, type$.nullable_Object);
      if (t1._framework$_element != null)
        S.Navigator_of(_this.context, false).pop$1$1(null, type$.nullable_Object);
    },
    $signature: 0
  };
  A._ChatPageState__showSessionSwitchDialog___closure.prototype = {
    call$2(__wc1_formal, index) {
      var t1, session, t2, t3, t4, _this = this, _null = null;
      type$.BuildContext._as(__wc1_formal);
      B._asInt(index);
      t1 = _this.sessions;
      session = J.$index$asx(t1, index);
      t2 = _this.$this;
      t3 = t2.___ChatPageState__cC_A;
      t3 === $ && B.throwLateFieldNI("_cC");
      t3 = t3.cSM.get$currentSessionId();
      t4 = W.Text$(session.date.toString$0(0), _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
      return H.StyledWidget_toMaterial(Ar.ListTile$(E.Icon$(session.sessionId === t3 ? D.IconData_58627_MaterialIcons_null_false : D.IconData_58628_MaterialIcons_null_false, _null, _null, _null), new A._ChatPageState__showSessionSwitchDialog____closure0(t2, session, _this.setState, t1, index), new A._ChatPageState__showSessionSwitchDialog____closure1(t2, session, _this.context), _null, t4));
    },
    $signature: typesOffset + 23
  };
  A._ChatPageState__showSessionSwitchDialog____closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._switchSession$1(this.session.sessionId);
      if (t1._framework$_element != null)
        S.Navigator_of(this.context, false).pop$1$1(null, type$.nullable_Object);
    },
    $signature: 0
  };
  A._ChatPageState__showSessionSwitchDialog____closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return B._asyncAwait($async$self.$this._deleteSession$1($async$self.session.sessionId), $async$call$0);
            case 2:
              // returning from await.
              t1 = $async$result;
              if (B.boolConversionCheck(t1 == null ? false : t1))
                $async$self.setState.call$1(new A._ChatPageState__showSessionSwitchDialog_____closure($async$self.sessions, $async$self.index));
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 5
  };
  A._ChatPageState__showSessionSwitchDialog_____closure.prototype = {
    call$0() {
      return J.removeAt$1$ax(this.sessions, this.index);
    },
    $signature: 0
  };
  A._ChatPageState__showCalendarDialog_closure.prototype = {
    call$1(s) {
      var t1 = type$.SessionInfo._as(s).date;
      return N.DateTime$(B.Primitives_getYear(t1), B.Primitives_getMonth(t1), B.Primitives_getDay(t1), 0, 0, 0, 0, 0);
    },
    $signature: typesOffset + 24
  };
  A._ChatPageState__showCalendarDialog_calendar.prototype = {
    call$1(scores) {
      var t1, t2, initialSelection, t3, t4, t5, t6, t7, t8, t9, t10;
      type$.Map_DateTime_int._as(scores);
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      t2 = t2.cSM.get$currentSessionDate();
      initialSelection = O.DateTime$utc(B.Primitives_getYear(t2), B.Primitives_getMonth(t2), B.Primitives_getDay(t2), 0, 0, 0, 0, 0);
      t2 = new A._AutoDateController(A.calendar_controller___true$closure(), B._setArrayType([], type$.JSArray_of_void_Function_nullable_DateTime), initialSelection, $.$get$ChangeNotifier__emptyListeners());
      t3 = t1.___ChatPageState__cC_A.cSM.get$currentSessionDate();
      t4 = N.DateTime$(2025, 1, 1, 0, 0, 0, 0, 0);
      t5 = Date.now();
      t6 = Date.now();
      t7 = t1._framework$_element;
      t7.toString;
      t7 = Z.FTheme_of(t7).calendarStyle;
      t8 = t1._framework$_element;
      t8.toString;
      t8 = Z.FTheme_of(t8).calendarStyle.dayPickerStyle;
      t9 = this.tileSize;
      t10 = this.sessionMap;
      return new A.FCalendar(new Ae.FCalendarStyle(t7.headerStyle, new Ae.FCalendarDayPickerStyle(t8.headerTextStyle, t8.current, t8.enclosing, t8.startDayOfWeek, t9), t7.yearMonthPickerStyle, t7.decoration, t7.padding, t7.pageAnimationDuration), t2, new A._ChatPageState__showCalendarDialog_calendar_closure(t10, scores, t9), t4, new B.DateTime(t5, 0, false), new B.DateTime(t6, 0, false), new A._ChatPageState__showCalendarDialog_calendar_closure0(t1, t10), new A._ChatPageState__showCalendarDialog_calendar_closure1(t1, t10), D.FCalendarPickerType_0, new A.LocalDate(A.DateTimes_truncate(O.DateTime$utc(B.Primitives_getYear(t3), B.Primitives_getMonth(t3), B.Primitives_getDay(t3), 0, 0, 0, 0, 0), D.DateUnit_1)), null);
    },
    $signature: typesOffset + 25
  };
  A._ChatPageState__showCalendarDialog_calendar_closure0.prototype = {
    call$1(date) {
      return this.$call$body$_ChatPageState__showCalendarDialog_calendar_closure0(type$.DateTime._as(date));
    },
    $call$body$_ChatPageState__showCalendarDialog_calendar_closure0(date) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, matching;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              matching = $async$self.sessionMap.$index(0, N.DateTime$(B.Primitives_getYear(date), B.Primitives_getMonth(date), B.Primitives_getDay(date), 0, 0, 0, 0, 0));
              if (matching == null)
                matching = B._setArrayType([], type$.JSArray_SessionInfo);
              t1 = J.getInterceptor$asx(matching);
              if (t1.get$isEmpty(matching)) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = t1.get$length(matching) > 1 ? 3 : 5;
              break;
            case 3:
              // then
              t1 = $async$self.$this;
              t2 = t1._framework$_element;
              t2.toString;
              $async$goto = 6;
              return B._asyncAwait(t1._showSessionSwitchDialog$3(t2, matching, date), $async$call$1);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              if (t1.get$length(matching) === 1)
                $async$self.$this._switchSession$1(t1.get$first(matching).sessionId);
            case 4:
              // join
              t1 = $async$self.$this._framework$_element;
              if (t1 != null)
                S.Navigator_of(t1, false).pop$1$1(null, type$.nullable_Object);
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 148
  };
  A._ChatPageState__showCalendarDialog_calendar_closure1.prototype = {
    call$1(date) {
      return this.$call$body$_ChatPageState__showCalendarDialog_calendar_closure(type$.DateTime._as(date));
    },
    $call$body$_ChatPageState__showCalendarDialog_calendar_closure(date) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, matching;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              matching = $async$self.sessionMap.$index(0, N.DateTime$(B.Primitives_getYear(date), B.Primitives_getMonth(date), B.Primitives_getDay(date), 0, 0, 0, 0, 0));
              if (matching == null)
                matching = B._setArrayType([], type$.JSArray_SessionInfo);
              t1 = $async$self.$this;
              t2 = t1._framework$_element;
              t2.toString;
              $async$goto = 2;
              return B._asyncAwait(t1._showSessionSwitchDialog$3(t2, matching, date), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 148
  };
  A._ChatPageState__showCalendarDialog_calendar_closure.prototype = {
    call$3(context, data, child) {
      var t1, day, matching, score, t2, t3, t4, t5, _null = null;
      type$.BuildContext._as(context);
      type$.Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today._as(data);
      type$.nullable_Widget._as(child);
      t1 = data._values[1];
      day = N.DateTime$(B.Primitives_getYear(t1), B.Primitives_getMonth(t1), B.Primitives_getDay(t1), 0, 0, 0, 0, 0);
      matching = this.sessionMap.$index(0, day);
      if (matching == null)
        matching = B._setArrayType([], type$.JSArray_SessionInfo);
      score = J.$index$asx(this.scores, day);
      if (child instanceof A.EntryContent && J.get$isEmpty$asx(matching)) {
        t1 = child.style;
        t2 = child.borderRadius;
        t3 = child.text;
        t4 = child.current;
        t5 = B.LinkedHashSet_LinkedHashSet$of(child.states, type$.WidgetState);
        t5.add$1(0, Ad.WidgetState_6);
        child = new A.EntryContent(t1, t2, t3, t5, t4, _null);
      }
      child.toString;
      t1 = score == null;
      t2 = t1 ? _null : C.JSInt_methods.toString$0(score);
      if (t2 == null)
        t2 = "";
      t2 = B._setArrayType([child, A.StyledWidget_positioned(W.Text$(t2, _null, _null, _null, _null, _null, _null, _null, E.TextStyle$(_null, _null, !t1 ? A.colorForScore(score) : C.Color_Edl, _null, _null, _null, _null, _null, _null, _null, _null, 10, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null), _null, _null, _null, _null, _null), 0, _null, _null)], type$.JSArray_Widget);
      t1 = J.getInterceptor$asx(matching);
      if (t1.get$length(matching) > 1)
        t2.push(A.StyledWidget_positioned(W.Text$(C.JSInt_methods.toString$0(t1.get$length(matching)), _null, _null, _null, _null, _null, _null, _null, D.TextStyle_iiK, _null, _null, _null, _null, _null), _null, 2, 2));
      t1 = this.tileSize;
      return new E.SizedBox(t1, t1, A.StyledList_toStack(t2, L.Alignment_0_0), _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 30
  };
  A._ChatPageState__showCalendarDialog_closure0.prototype = {
    call$1(__wc0_formal) {
      type$.BuildContext._as(__wc0_formal);
      return new X.StatefulBuilder(new A._ChatPageState__showCalendarDialog__closure(this.$this, this.calendar), null);
    },
    $signature: typesOffset + 10
  };
  A._ChatPageState__showCalendarDialog__closure.prototype = {
    call$2(context, setState) {
      var t2, t1 = {};
      type$.BuildContext._as(context);
      type$.void_Function_void_Function._as(setState);
      t1.scores = B.LinkedHashMap_LinkedHashMap$_empty(type$.DateTime, type$.int);
      t2 = this.$this.___ChatPageState__hDM_A;
      t2 === $ && B.throwLateFieldNI("_hDM");
      return K.FutureBuilder$(new A._ChatPageState__showCalendarDialog___closure(t1, this.calendar), t2.getScores$0(), type$.Map_DateTime_int);
    },
    $signature: typesOffset + 55
  };
  A._ChatPageState__showCalendarDialog___closure.prototype = {
    call$2(context, snapshot) {
      var t1, t2, t3;
      type$.AsyncSnapshot_Map_DateTime_int._as(snapshot);
      if (snapshot.connectionState === AA.ConnectionState_3 && snapshot.data != null) {
        t1 = snapshot.data;
        t1.toString;
        this._box_0.scores = t1;
      } else if (snapshot.error != null) {
        t1 = $.WidgetsBinding__instance;
        t1.toString;
        C.JSArray_methods.add$1(t1.SchedulerBinding__postFrameCallbacks, type$.void_Function_Duration._as(new A._ChatPageState__showCalendarDialog____closure(context, snapshot)));
      }
      t1 = B._setArrayType([], type$.JSArray_Widget);
      t2 = this.calendar.call$1(this._box_0.scores);
      t3 = Z.FTheme_of(context).dialogStyle;
      return AR.FDialog$(t1, t2, C.Axis_1, new Ae.FDialogStyle(t3.decoration, t3.insetAnimationDuration, t3.insetAnimationCurve, new B.EdgeInsets(0, 0, 0, 0), t3.horizontalStyle, t3.verticalStyle));
    },
    $signature: typesOffset + 34
  };
  A._ChatPageState__showCalendarDialog____closure.prototype = {
    call$1(__wc1_formal) {
      type$.Duration._as(__wc1_formal);
      return V.showError(this.context, this.snapshot.error);
    },
    $signature: 2
  };
  A._ChatPageState__buildPendingImagesPreview_closure.prototype = {
    call$2(context, index) {
      var t1, t2, t3, _null = null;
      type$.BuildContext._as(context);
      B._asInt(index);
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      t2 = B.List_List$unmodifiable(t2._pendingImagePaths, type$.String);
      if (!(index >= 0 && index < t2.length))
        return B.ioore(t2, index);
      t2 = Al.StyledWidget_padding(new AW.Image(A.ResizeImage_resizeIfNeeded(_null, _null, new A.FileImage(Q.File_File(t2[index]), 1)), _null, _null, _null, 70, 70, AX.BoxFit_2, _null, _null), 4, _null, _null);
      t3 = Z.FTheme_of(context);
      return A.StyledList_toStack(B._setArrayType([t2, A.StyledWidget_positioned(A.StyledWidget_gestures(new A.CircleAvatar(E.Icon$(AF.IconData_57706_MaterialIcons_null_false, Z.FTheme_of(context).colors.background, _null, 16), t3.colors.foreground, 10, _null), new A._ChatPageState__buildPendingImagesPreview__closure(t1, index)), _null, 0, 0)], type$.JSArray_Widget), L.AlignmentDirectional_m1_m1);
    },
    $signature: 86
  };
  A._ChatPageState__buildPendingImagesPreview__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.setState$1(new A._ChatPageState__buildPendingImagesPreview___closure(t1, this.index));
    },
    $signature: 0
  };
  A._ChatPageState__buildPendingImagesPreview___closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && B.throwLateFieldNI("_cC");
      t2 = this.index;
      return t2 >= 0 && t2 < t1._pendingImagePaths.length ? C.JSArray_methods.removeAt$1(t1._pendingImagePaths, t2) : null;
    },
    $signature: 0
  };
  A._ChatPageState_build_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      return t1._showCalendarDialog$1(t2.cSM.get$localSessions());
    },
    $signature: 0
  };
  A._ChatPageState_build_closure0.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      return t1._deleteSession$1(t2.cSM.get$currentSessionId());
    },
    $signature: 0
  };
  A._ChatPageState_build_closure1.prototype = {
    call$0() {
      return this.$this._createSession$1(0, null);
    },
    $signature: 0
  };
  A._ChatPageState_build_closure10.prototype = {
    call$1(id) {
      return this.$call$body$_ChatPageState_build_closure(B._asString(id));
    },
    $call$body$_ChatPageState_build_closure(id) {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.User),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.___ChatPageState__cC_A;
              t1 === $ && B.throwLateFieldNI("_cC");
              $async$returnValue = new A._User(id, t1.uSM.get$currentUserName());
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return B._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: typesOffset + 35
  };
  A._ChatPageState_build_closure9.prototype = {
    call$1(t) {
      var t1, t2;
      B._asString(t);
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      return t2.handleSendMessage$3(t, new A._ChatPageState_build__closure(t1), new A._ChatPageState_build__closure0(this.context));
    },
    $signature: 23
  };
  A._ChatPageState_build__closure.prototype = {
    call$0() {
      return this.$this.setState$1(new A._ChatPageState_build___closure());
    },
    $signature: 0
  };
  A._ChatPageState_build___closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ChatPageState_build__closure0.prototype = {
    call$1(msg) {
      return V.showError(this.context, msg);
    },
    $signature: 23
  };
  A._ChatPageState_build_closure8.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      return t2.handleAttachmentTap$2(this.context, new A._ChatPageState_build__closure1(t1));
    },
    $signature: 0
  };
  A._ChatPageState_build__closure1.prototype = {
    call$0() {
      return this.$this.setState$1(new A._ChatPageState_build___closure0());
    },
    $signature: 0
  };
  A._ChatPageState_build___closure0.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ChatPageState_build_closure6.prototype = {
    call$1(__wc0_formal) {
      type$.BuildContext._as(__wc0_formal);
      B.checkDeferredIsLoaded("chat_ui");
      return An.Composer$("\u8f93\u5165\u6d88\u606f...", this.$this._buildPendingImagesPreview$0());
    },
    $signature: typesOffset + 36
  };
  A._ChatPageState_build_closure7.prototype = {
    call$1(__wc1_formal) {
      var _null = null;
      type$.BuildContext._as(__wc1_formal);
      return K.StyledWidget_center(W.Text$("\u6682\u65e0\u6d88\u606f", _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null));
    },
    $signature: 16
  };
  A._ChatPageState_build_closure2.prototype = {
    call$5$groupStatus$isSentByMe(__wc2_formal, msg, i, groupStatus, isSentByMe) {
      type$.BuildContext._as(__wc2_formal);
      type$.TextMessage._as(msg);
      B._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      B._asBool(isSentByMe);
      B.checkDeferredIsLoaded("ftext");
      return AK.FlyerChatTextMessage$(this.constraints, i, msg);
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: C.C__Required};
    },
    $signature: typesOffset + 37
  };
  A._ChatPageState_build_closure3.prototype = {
    call$5$groupStatus$isSentByMe(__wc3_formal, msg, i, groupStatus, isSentByMe) {
      type$.BuildContext._as(__wc3_formal);
      type$.TextStreamMessage._as(msg);
      B._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      B._asBool(isSentByMe);
      return new AJ.Consumer(new A._ChatPageState_build__closure3(msg, i), null, null, type$.Consumer_StreamStateManager);
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: C.C__Required};
    },
    $signature: typesOffset + 38
  };
  A._ChatPageState_build__closure3.prototype = {
    call$3(__wc4_formal, manager, __wc5_formal) {
      var t1, t2;
      type$.BuildContext._as(__wc4_formal);
      type$.StreamStateManager._as(manager);
      type$.nullable_Widget._as(__wc5_formal);
      B.checkDeferredIsLoaded("fstream");
      t1 = this.msg;
      t2 = manager.getState$1(0, t1.streamId);
      B.checkDeferredIsLoaded("fstream");
      return AN.FlyerChatTextStreamMessage$(this.i, t1, AO.C_Deferred, false, t2);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 39
  };
  A._ChatPageState_build_closure4.prototype = {
    call$5$groupStatus$isSentByMe(__wc6_formal, msg, i, groupStatus, isSentByMe) {
      var t1;
      type$.BuildContext._as(__wc6_formal);
      type$.ImageMessage._as(msg);
      B._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      B._asBool(isSentByMe);
      B.checkDeferredIsLoaded("fimage");
      t1 = this.$this.___ChatPageState__cC_A;
      t1 === $ && B.throwLateFieldNI("_cC");
      return AQ.FlyerChatImageMessage$(new Az.CachedNetworkImage(msg.source, AC.CrossCache$(N.BaseOptions$("", B.LinkedHashMap_LinkedHashMap$_literal(["Authorization", "Bearer " + t1.uSM.get$currentToken()], type$.String, type$.dynamic))), null), i, msg);
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: C.C__Required};
    },
    $signature: typesOffset + 53
  };
  A._ChatPageState_build_closure5.prototype = {
    call$5$groupStatus$isSentByMe(__wc7_formal, msg, i, groupStatus, isSentByMe) {
      var t1, t2;
      type$.BuildContext._as(__wc7_formal);
      type$.CustomMessage._as(msg);
      B._asInt(i);
      type$.nullable_MessageGroupStatus._as(groupStatus);
      B._asBool(isSentByMe);
      B.checkDeferredIsLoaded("fcustom");
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      return AT.ChatCustomMessage$(i, msg, new A._ChatPageState_build__closure2(t1, this.context), t2.cSM.get$currentSessionId());
    },
    "call*": "call$5$groupStatus$isSentByMe",
    $requiredArgCount: 3,
    $defaultValues() {
      return {groupStatus: null, isSentByMe: C.C__Required};
    },
    $signature: typesOffset + 54
  };
  A._ChatPageState_build__closure2.prototype = {
    call$2(message, sessionId) {
      var t1, t2;
      type$.CustomMessage._as(message);
      B._asString(sessionId);
      t1 = this.$this;
      t2 = t1.___ChatPageState__cC_A;
      t2 === $ && B.throwLateFieldNI("_cC");
      return t2.handleSendMessage$3(message, new A._ChatPageState_build___closure1(t1), new A._ChatPageState_build___closure2(this.context));
    },
    $signature: typesOffset + 17
  };
  A._ChatPageState_build___closure1.prototype = {
    call$0() {
      return this.$this.setState$1(new A._ChatPageState_build____closure());
    },
    $signature: 0
  };
  A._ChatPageState_build____closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._ChatPageState_build___closure2.prototype = {
    call$1(msg) {
      return V.showError(this.context, msg);
    },
    $signature: 23
  };
  A.pickMediaPaths_closure.prototype = {
    call$1(res) {
      var t1 = res.get$tempFiles(),
        t2 = B._arrayInstanceType(t1),
        t3 = t2._eval$1("MappedListIterable<1,String>");
      this.completer.complete$1(0, B.List_List$of(new B.MappedListIterable(t1, t2._eval$1("String(1)")._as(new A.pickMediaPaths__closure()), t3), true, t3._eval$1("ListIterable.E")));
    },
    $signature: 342
  };
  A.pickMediaPaths__closure.prototype = {
    call$1(f) {
      var t1 = type$.MediaFile._as(f).__MediaFile_$$context$$_A;
      t1 === $ && B.throwLateFieldNI("$$context$$");
      return B._asString(B.JSObject_transformToMPJSObject(t1.jsObject.$index(0, "tempFilePath")));
    },
    $signature: 343
  };
  A.pickMediaPaths_closure0.prototype = {
    call$1(err) {
      var t1 = err.__GeneralCallbackResult_$$context$$_A;
      t1 === $ && B.throwLateFieldNI("$$context$$");
      this.completer.completeError$1(new B._Exception("\u9009\u62e9\u5931\u8d25: " + B._asString(B.JSObject_transformToMPJSObject(t1.jsObject.$index(0, "errMsg")))));
    },
    $signature: typesOffset + 19
  };
  A.FormData__init_closure.prototype = {
    call$2(key, value) {
      var t1 = value == null ? null : J.toString$0$(value);
      if (t1 == null)
        t1 = "";
      C.JSArray_methods.add$1(this.$this.fields, new B.MapEntry(key, t1, type$.MapEntry_String_String));
      return null;
    },
    $signature: 344
  };
  A.FormData__headerForFile_closure.prototype = {
    call$2(key, values) {
      var t1, t2, value;
      type$.List_String._as(values);
      for (t1 = values.get$iterator(values), t2 = this._box_0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        t2.header = t2.header + "\r\n" + B.S(key) + ": " + B.S(value);
      }
    },
    $signature: 132
  };
  A.FormData_finalize_writeLine.prototype = {
    call$0() {
      return this.controller.add$1(0, $.$get$_rnU8());
    },
    $signature: 0
  };
  A.FormData_finalize_writeUtf8.prototype = {
    call$1(s) {
      var t1 = C.C_Utf8Encoder.convert$1(s);
      return this.controller.add$1(0, t1);
    },
    $signature: 23
  };
  A.FormData_finalize_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = B._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, t4, t5, t6, t7, _i, file, t8;
      var $async$call$0 = B._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return B._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this, t2 = t1.files, t3 = t2.length, t4 = $async$self.writeUtf8, t5 = $async$self.controller, t6 = type$.Uint8List, t7 = $async$self.writeLine, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2.length)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              file = t2[_i];
              t8 = t1.__FormData__boundary_A;
              t8 === $ && B.throwLateFieldNI("_boundary");
              t4.call$1("--" + t8 + "\r\n");
              t4.call$1(t1._headerForFile$1(file));
              $async$goto = 5;
              return B._asyncAwait(A.writeStreamToSink(file.value.finalize$0(), t5, t6), $async$call$0);
            case 5:
              // returning from await.
              t7.call$0();
            case 3:
              // for update
              t2.length === t3 || (0, B.throwConcurrentModificationError)(t2), ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return B._asyncReturn(null, $async$completer);
          }
      });
      return B._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 5
  };
  A.FormData_finalize_closure0.prototype = {
    call$1(_) {
      var t1 = this.$this.__FormData__boundary_A;
      t1 === $ && B.throwLateFieldNI("_boundary");
      this.writeUtf8.call$1("--" + t1 + "--\r\n");
    },
    $signature: 9
  };
  A.FormData_finalize_closure1.prototype = {
    call$0() {
      this.controller.close$0(0);
    },
    $signature: 3
  };
  A.writeStreamToSink_closure.prototype = {
    call$0() {
      return this.completer.complete$0(0);
    },
    $signature: 0
  };
  A._ModalBottomSheetState_build_closure0.prototype = {
    call$0() {
      if (this.$this._widget.route.get$isCurrent())
        S.Navigator_of(this.context, false).pop$1$1(null, type$.nullable_Object);
    },
    $signature: 0
  };
  A._ModalBottomSheetState_build_closure.prototype = {
    call$2(context, child) {
      var t1, _null = null;
      type$.BuildContext._as(context);
      type$.nullable_Widget._as(child);
      t1 = this.$this;
      t1 = AH.ClipRect$(new A._BottomSheetLayoutWithSizeListener(new A._ModalBottomSheetState_build__closure(t1), t1.animationCurve.transform$1(0, t1._widget.route._animationProxy.get$value(0)), false, t1._widget.scrollControlDisabledMaxHeightRatio, child, _null), C.Clip_1);
      return new B.Semantics(B.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, this.routeLabel, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, true, false, false, t1, _null);
    },
    $signature: 149
  };
  A._ModalBottomSheetState_build__closure.prototype = {
    call$1(size) {
      type$.Size._as(size);
      this.$this._widget.route._didChangeBarrierSemanticsClip$1(new B.EdgeInsets(0, 0, 0, size._dy));
    },
    $signature: 346
  };
  A.ModalBottomSheetRoute_buildPage_closure.prototype = {
    call$1(context) {
      var sheetTheme, defaults, t1, t2, t3, t4;
      type$.BuildContext._as(context);
      sheetTheme = I.Theme_of(context).bottomSheetTheme;
      I.Theme_of(context);
      defaults = X._BottomSheetDefaultsM3$(context);
      t1 = this.$this;
      t2 = sheetTheme.modalBackgroundColor;
      if (t2 == null)
        t2 = sheetTheme.backgroundColor;
      if (t2 == null)
        t2 = defaults.get$backgroundColor(0);
      t3 = sheetTheme.modalElevation;
      if (t3 == null)
        t3 = sheetTheme.elevation;
      if (t3 == null)
        t3 = defaults.modalElevation;
      t4 = t1.showDragHandle;
      t4 = false;
      return new A._ModalBottomSheet(t1, false, t1.scrollControlDisabledMaxHeightRatio, t2, t3, t1.shape, t1.clipBehavior, t1.constraints, true, t4, null, t1.$ti._eval$1("_ModalBottomSheet<1>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("_ModalBottomSheet<1>(BuildContext)");
    }
  };
  A.FileImage_loadBuffer_closure.prototype = {
    call$0() {
      return B._setArrayType([B.ErrorDescription$("Path: " + this.$this.file._io$_path)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 14
  };
  A.FileImage_loadImage_closure.prototype = {
    call$0() {
      return B._setArrayType([B.ErrorDescription$("Path: " + this.$this.file._io$_path)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 14
  };
  A._AnimatedContainerState_forEachTween_closure.prototype = {
    call$1(value) {
      return new A.AlignmentGeometryTween(type$.AlignmentGeometry._as(value), null);
    },
    $signature: typesOffset + 11
  };
  A._AnimatedContainerState_forEachTween_closure0.prototype = {
    call$1(value) {
      return new Am.EdgeInsetsGeometryTween(type$.EdgeInsetsGeometry._as(value), null);
    },
    $signature: typesOffset + 12
  };
  A._AnimatedContainerState_forEachTween_closure1.prototype = {
    call$1(value) {
      return new I.DecorationTween(type$.Decoration._as(value), null);
    },
    $signature: typesOffset + 13
  };
  A._AnimatedContainerState_forEachTween_closure2.prototype = {
    call$1(value) {
      return new I.DecorationTween(type$.Decoration._as(value), null);
    },
    $signature: typesOffset + 13
  };
  A._AnimatedContainerState_forEachTween_closure3.prototype = {
    call$1(value) {
      return new A.BoxConstraintsTween(type$.BoxConstraints._as(value), null);
    },
    $signature: typesOffset + 26
  };
  A._AnimatedContainerState_forEachTween_closure4.prototype = {
    call$1(value) {
      return new Am.EdgeInsetsGeometryTween(type$.EdgeInsetsGeometry._as(value), null);
    },
    $signature: typesOffset + 12
  };
  A._AnimatedContainerState_forEachTween_closure5.prototype = {
    call$1(value) {
      return new A.Matrix4Tween(type$.Matrix4._as(value), null);
    },
    $signature: typesOffset + 27
  };
  A._AnimatedContainerState_forEachTween_closure6.prototype = {
    call$1(value) {
      return new A.AlignmentGeometryTween(type$.AlignmentGeometry._as(value), null);
    },
    $signature: typesOffset + 11
  };
  A.MediaQuery_withNoTextScaling_closure.prototype = {
    call$1(context) {
      return B.MediaQuery$(this.child, B.InheritedModel_inheritFrom(type$.BuildContext._as(context), null, type$.MediaQuery).data.copyWith$1$textScaler(C._LinearTextScaler_1));
    },
    $signature: 150
  };
  A._PageViewState_build_closure.prototype = {
    call$1(notification) {
      var t1, metrics, t2, t3, currentPage;
      type$.ScrollNotification._as(notification);
      if (notification.ViewportNotificationMixin__depth === 0) {
        this.$this._widget.toString;
        t1 = notification instanceof A1.ScrollUpdateNotification;
      } else
        t1 = false;
      if (t1) {
        metrics = type$.PageMetrics._as(notification.metrics);
        t1 = metrics._scroll_metrics$_pixels;
        t1.toString;
        t2 = metrics._scroll_metrics$_minScrollExtent;
        t2.toString;
        t3 = metrics._scroll_metrics$_maxScrollExtent;
        t3.toString;
        t3 = Math.max(0, B.clampDouble(t1, t2, t3));
        t2 = metrics._scroll_metrics$_viewportDimension;
        t2.toString;
        currentPage = C.JSNumber_methods.round$0(t3 / Math.max(1, t2 * metrics.viewportFraction));
        t1 = this.$this;
        if (currentPage !== t1._lastReportedPage) {
          t1._lastReportedPage = currentPage;
          t1._widget.onPageChanged.call$1(currentPage);
        }
      }
      return false;
    },
    $signature: typesOffset + 28
  };
  A._PageViewState_build_closure0.prototype = {
    call$2(context, position) {
      var t1, t2;
      type$.BuildContext._as(context);
      type$.ViewportOffset._as(position);
      t1 = this.$this;
      t2 = t1._widget;
      t2.toString;
      t1.___PageViewState__controller_A === $ && B.throwLateFieldNI("_controller");
      return U.Viewport$(0, this.axisDirection, 0, Aw.CacheExtentStyle_1, null, C.Clip_1, position, B._setArrayType([new A.SliverFillViewport(1, true, t2.childrenDelegate, null)], type$.JSArray_Widget));
    },
    $signature: typesOffset + 29
  };
  A._State_build_closure0.prototype = {
    call$3(__wc0_formal, month, __wc1_formal) {
      var t1;
      type$.LocalDate._as(month);
      t1 = this.$this.___State__type_A;
      t1 === $ && B.throwLateFieldNI("_type");
      return new A.Header(this.style.headerStyle, t1, month, null);
    },
    $signature: typesOffset + 31
  };
  A._State_build_closure1.prototype = {
    call$3(__wc2_formal, value, __wc3_formal) {
      var t1, t2, t3, t4, t5, t6, _this = this;
      switch (type$.FCalendarPickerType._as(value).index) {
        case 0:
          t1 = _this.$this;
          t2 = t1._widget;
          t3 = t2.dayBuilder;
          t2 = t2.start;
          t2 = O.DateTime$utc(B.Primitives_getYear(t2), B.Primitives_getMonth(t2), B.Primitives_getDay(t2), 0, 0, 0, 0, 0);
          t4 = t1._widget.end;
          t4 = O.DateTime$utc(B.Primitives_getYear(t4), B.Primitives_getMonth(t4), B.Primitives_getDay(t4), 0, 0, 0, 0, 0);
          t5 = t1._widget.today;
          t5 = O.DateTime$utc(B.Primitives_getYear(t5), B.Primitives_getMonth(t5), B.Primitives_getDay(t5), 0, 0, 0, 0, 0);
          t6 = t1.___State__month_A;
          t6 === $ && B.throwLateFieldNI("_month");
          t5 = A.PagedDayPicker$(t3, new A.LocalDate(t4), t6._change_notifier$_value, new A._State_build__closure(t1), new A._State_build__closure0(t1), new A._State_build__closure1(t1), new A._State_build__closure2(t1), new A._State_build__closure3(t1), new A.LocalDate(t2), _this.style, new A.LocalDate(t5));
          t1 = t5;
          break;
        case 1:
          t1 = _this.$this;
          t2 = t1._widget.start;
          t2 = O.DateTime$utc(B.Primitives_getYear(t2), B.Primitives_getMonth(t2), B.Primitives_getDay(t2), 0, 0, 0, 0, 0);
          t3 = t1._widget.end;
          t3 = O.DateTime$utc(B.Primitives_getYear(t3), B.Primitives_getMonth(t3), B.Primitives_getDay(t3), 0, 0, 0, 0, 0);
          t4 = t1._widget.today;
          t4 = O.DateTime$utc(B.Primitives_getYear(t4), B.Primitives_getMonth(t4), B.Primitives_getDay(t4), 0, 0, 0, 0, 0);
          t5 = t1.___State__month_A;
          t5 === $ && B.throwLateFieldNI("_month");
          t1 = t1.___State__type_A;
          t1 === $ && B.throwLateFieldNI("_type");
          t1 = new A.YearMonthPicker(_this.style, new A.LocalDate(t2), new A.LocalDate(t3), new A.LocalDate(t4), t5, t1, null);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: typesOffset + 32
  };
  A._State_build__closure2.prototype = {
    call$1(date) {
      return this.$this._widget.controller.selectable$1(date._native);
    },
    $signature: typesOffset + 6
  };
  A._State_build__closure3.prototype = {
    call$1(date) {
      type$.LocalDate._as(date);
      return this.$this._widget.controller.selected$1(0, date._native);
    },
    $signature: typesOffset + 6
  };
  A._State_build__closure0.prototype = {
    call$1(date) {
      var t1, t2;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t2 = t1.___State__month_A;
      t2 === $ && B.throwLateFieldNI("_month");
      t2.set$value(0, date);
      t1._widget.toString;
    },
    $signature: typesOffset + 0
  };
  A._State_build__closure1.prototype = {
    call$1(date) {
      var native = type$.LocalDate._as(date)._native,
        t1 = this.$this;
      t1._widget.controller.select$1(0, native);
      t1._widget.onPress.call$1(native);
    },
    $signature: typesOffset + 0
  };
  A._State_build__closure.prototype = {
    call$1(date) {
      var t1;
      type$.LocalDate._as(date);
      t1 = this.$this._widget.onLongPress.call$1(date._native);
      return t1;
    },
    $signature: typesOffset + 0
  };
  A._PagedDayPickerState_buildItem_closure.prototype = {
    call$1(date) {
      var t1;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t1.setState$1(new A._PagedDayPickerState_buildItem__closure(t1, date));
      t1._widget.onPress$1(date);
    },
    $signature: typesOffset + 0
  };
  A._PagedDayPickerState_buildItem__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._gridFocused)
        t1.focusedDate = this.date;
    },
    $signature: 0
  };
  A._PagedDayPickerState_onPageChange_closure.prototype = {
    call$0() {
      var _0_0,
        t1 = this.$this,
        changed = new A.LocalDate(A.DateTimes_plus(A.DateTimes_truncate(t1._widget.start._native, D.DateUnit_1), 0, this.page, 0)),
        t2 = t1.__PagedPickerState_current_A;
      t2 === $ && B.throwLateFieldNI("current");
      if (t2.$eq(0, changed))
        return;
      t1.__PagedPickerState_current_A = changed;
      t1._widget.onMonthChange.call$1(changed);
      _0_0 = t1.focusedDate;
      if (_0_0 != null)
        t2 = new A.LocalDate(A.DateTimes_truncate(_0_0._native, D.DateUnit_1)).$eq(0, t1.__PagedPickerState_current_A);
      else
        t2 = false;
      if (t2)
        t1.focusedDate = t1._focusableDayForMonth$2(t1.__PagedPickerState_current_A, B.Primitives_getDay(t1.focusedDate._native));
      t2 = t1._framework$_element;
      t2.toString;
      if (I.Localizations_of(t2, P.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      t2 = t1.__PagedPickerState_current_A;
      t2 = K.DateFormat$yMMMMd(null).format$1(t2._native);
      t1 = t1.__PagedPickerState_textDirection_A;
      t1 === $ && B.throwLateFieldNI("textDirection");
      K.SemanticsService_announce(t2, t1, P.Assertiveness_00);
    },
    $signature: 0
  };
  A._PagedDayPickerState_onGridFocusChange_closure.prototype = {
    call$0() {
      var t3, preferred,
        t1 = this.$this,
        t2 = t1._gridFocused = this.focused;
      if (t2 && t1.focusedDate == null) {
        t2 = A.DateTimes_truncate(t1._widget.today._native, D.DateUnit_1);
        t3 = t1.__PagedPickerState_current_A;
        t3 === $ && B.throwLateFieldNI("current");
        preferred = new A.LocalDate(t2).$eq(0, t3) ? B.Primitives_getDay(t1._widget.today._native) : 1;
        t1.focusedDate = t1._focusableDayForMonth$2(t1.__PagedPickerState_current_A, preferred);
      } else if (!t2)
        t1.focusedDate = null;
    },
    $signature: 0
  };
  A._MonthPickerState_build_closure.prototype = {
    call$1(date) {
      if (I.Localizations_of(this.context, P.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      return K.DateFormat$MMM().format$1(date._native);
    },
    $signature: typesOffset + 15
  };
  A._PagedMonthPickerState_onGridFocusChange_closure.prototype = {
    call$0() {
      var t1, currentMonth, t2;
      if (this.focused && this.$this.focusedDate == null) {
        t1 = this.$this;
        currentMonth = new A.LocalDate(A.DateTimes_truncate(t1._widget.today._native, D.DateUnit_1));
        t2 = t1._widget;
        if (B.Primitives_getYear(t2.initial._native) === B.Primitives_getYear(t2.today._native))
          t2 = currentMonth;
        else {
          t2 = t1.__PagedPickerState_current_A;
          t2 === $ && B.throwLateFieldNI("current");
        }
        t1.focusedDate = t1._focusableMonth$1(t2);
      }
    },
    $signature: 0
  };
  A.Entry_Entry$day_builder.prototype = {
    call$3(context, states, __wc0_formal) {
      var t1, yesterday, tomorrow, t2, t3, t4, t5, t6, _this = this;
      type$.BuildContext._as(context);
      type$.Set_WidgetState._as(states);
      type$.nullable_Widget._as(__wc0_formal);
      t1 = _this.isSelected;
      yesterday = t1 && B.boolConversionCheck(_this.selected.call$1(_this.date.minus$1$days(1))) ? C.Radius_0_0 : _this.entryStyle.radius;
      tomorrow = t1 && B.boolConversionCheck(_this.selected.call$1(new A.LocalDate(A.DateTimes_plus(_this.date._native, 1, 0, 0)))) ? C.Radius_0_0 : _this.entryStyle.radius;
      t2 = _this.date._native;
      t3 = _this.today;
      t4 = _this.canSelect;
      if (I.Localizations_of(context, P.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      t5 = K.DateFormat$d(null).format$1(t2);
      t6 = B.LinkedHashSet_LinkedHashSet$of(states, type$.WidgetState);
      if (!t4)
        t6.add$1(0, Ad.WidgetState_6);
      return _this.dayBuilder.call$3(context, new B._Record_6_current_date_selectable_selected_style_today([_this.current, t2, t4, t1, _this.style, t3]), new A.EntryContent(_this.entryStyle, new A.BorderRadiusDirectional(yesterday, tomorrow, yesterday, tomorrow), t5, t6, t3, null));
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 16
  };
  A.Entry_Entry$yearMonth_builder.prototype = {
    call$3(__wc0_formal, states, __wc1_formal) {
      var t1, t2, t3, t4, _this = this;
      type$.BuildContext._as(__wc0_formal);
      type$.Set_WidgetState._as(states);
      type$.nullable_Widget._as(__wc1_formal);
      t1 = _this.style;
      t2 = E.BorderRadius$all(t1.radius);
      t3 = _this.format.call$1(_this.date);
      t4 = B.LinkedHashSet_LinkedHashSet$of(states, type$.WidgetState);
      if (!_this.selectable)
        t4.add$1(0, Ad.WidgetState_6);
      return new A.EntryContent(t1, t2, t3, t4, _this.current, null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 16
  };
  A._SelectableEntry_build_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.onPress.call$1(t1.date);
    },
    $signature: 0
  };
  A._SelectableEntry_build_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.onLongPress;
      return t2 == null ? null : t2.call$1(t1.date);
    },
    $signature: 0
  };
  A._HeaderState_build_closure0.prototype = {
    call$0() {
      var t2,
        t1 = this.$this._widget.type;
      switch (t1._change_notifier$_value) {
        case D.FCalendarPickerType_0:
          t2 = D.FCalendarPickerType_1;
          break;
        case D.FCalendarPickerType_1:
          t2 = D.FCalendarPickerType_0;
          break;
        default:
          t2 = null;
      }
      t1.set$value(0, t2);
      return t2;
    },
    $signature: 0
  };
  A._HeaderState_build_closure.prototype = {
    call$3(__wc0_formal, states, __wc1_formal) {
      var t1, t2, t3, t4, t5, _null = null;
      type$.BuildContext._as(__wc0_formal);
      type$.Set_WidgetState._as(states);
      type$.nullable_Widget._as(__wc1_formal);
      t1 = this.context;
      if (I.Localizations_of(t1, P.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      t2 = this.$this;
      t3 = t2._widget.month;
      t3 = W.Text$(K.DateFormat$yMMMM(_null).format$1(t3._native), _null, _null, _null, _null, _null, _null, _null, t2._widget.style.headerTextStyle, _null, _null, _null, _null, _null);
      t1 = B.Directionality_maybeOf(t1) === C.TextDirection_0 ? -0.25 : 0.25;
      t4 = type$.Tween_double;
      t5 = t2.___HeaderState__controller_A;
      t5 === $ && B.throwLateFieldNI("_controller");
      type$.Animation_double._as(t5);
      return new E.SizedBox(_null, 31, new E.Padding(D.EdgeInsets_15_0_15_0, A0.Row$(B._setArrayType([t3, X.RotationTransition$(new E.Padding(Ap.EdgeInsets_2_2_2_2, Au.IconTheme$(D.Icon_pPk, t2._widget.style.buttonStyle.iconContentStyle.iconStyle.resolve$1(states).copyWith$1$color(t2._widget.style.headerTextStyle.color), _null), _null), new E._AnimatedEvaluation(t5, new E.Tween(0, t1, t4), t4._eval$1("_AnimatedEvaluation<Animatable.T>")))], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_2, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1), _null), _null);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: typesOffset + 40
  };
  A.PagedPicker_closure.prototype = {
    call$1(date) {
      var t1, t2, t3;
      type$.LocalDate._as(date);
      t1 = this.start;
      t2 = t1._native;
      t1 = B._instanceType(t1)._eval$1("Orderable.T")._as(date)._native;
      t1 = 1000 * t1._core$_value + t1._microsecond;
      t3 = false;
      if (C.JSInt_methods.compareTo$1(1000 * t2._core$_value + t2._microsecond, t1) <= 0) {
        t2 = B._instanceType(date)._eval$1("Orderable.T")._as(this.end)._native;
        if (C.JSInt_methods.compareTo$1(t1, 1000 * t2._core$_value + t2._microsecond) <= 0) {
          t1 = this.selectable;
          t1 = t1 == null ? null : t1.call$1(date);
          t1 = B.boolConversionCheck(t1 == null ? true : t1);
        } else
          t1 = t3;
      } else
        t1 = t3;
      return t1;
    },
    $signature: typesOffset + 6
  };
  A.PagedPickerState__onDirectionFocus_closure.prototype = {
    call$0() {
      var _0_0, t3, t4, page,
        t1 = this.$this,
        t2 = t1.focusedDate;
      t2.toString;
      _0_0 = t1._nextDate$2(t2, this.intent.direction);
      if (_0_0 != null) {
        t1.focusedDate = _0_0;
        t2 = t1.delta$2(t1._widget.start, _0_0);
        t3 = t1._widget.start;
        t4 = t1.__PagedPickerState_current_A;
        t4 === $ && B.throwLateFieldNI("current");
        if (t2 !== t1.delta$2(t3, t4)) {
          t2 = t1.focusedDate;
          t2.toString;
          page = t1.delta$2(t1._widget.start, t2);
          t2 = t1.__PagedPickerState__controller_A;
          t2 === $ && B.throwLateFieldNI("_controller");
          t2.animateToPage$3$curve$duration(page, C.Cubic_glB, t1._widget.style.pageAnimationDuration);
        }
      }
    },
    $signature: 0
  };
  A._PagedYearPickerState_onGridFocusChange_closure.prototype = {
    call$0() {
      var t1, currentYear, t2;
      if (this.focused && this.$this.focusedDate == null) {
        t1 = this.$this;
        currentYear = new A.LocalDate(A.DateTimes_truncate(t1._widget.today._native, D.DateUnit_0));
        t2 = t1.__PagedPickerState_current_A;
        t2 === $ && B.throwLateFieldNI("current");
        t1.focusedDate = t1._focusableYear$2(t2, currentYear.$eq(0, t2) ? currentYear : t1.__PagedPickerState_current_A);
      }
    },
    $signature: 0
  };
  A._PagedYearPickerState_onPageChange_closure.prototype = {
    call$0() {
      var _0_0, t3,
        t1 = this.$this,
        changed = new A.LocalDate(A.DateTimes_plus(A.DateTimes_truncate(t1._widget.start._native, D.DateUnit_0), 0, 0, this.page * 15)),
        t2 = t1.__PagedPickerState_current_A;
      t2 === $ && B.throwLateFieldNI("current");
      if (t2.$eq(0, changed))
        return;
      t1.__PagedPickerState_current_A = changed;
      _0_0 = t1.focusedDate;
      if (_0_0 != null)
        t2 = new A.LocalDate(A.DateTimes_truncate(_0_0._native, D.DateUnit_0)).$eq(0, t1.__PagedPickerState_current_A);
      else
        t2 = false;
      if (t2) {
        t2 = t1.__PagedPickerState_current_A;
        t3 = t1.focusedDate;
        t3.toString;
        t1.focusedDate = t1._focusableYear$2(t2, t3);
      }
      t2 = t1.__PagedPickerState_current_A.toString$0(0);
      t1 = t1.__PagedPickerState_textDirection_A;
      t1 === $ && B.throwLateFieldNI("textDirection");
      K.SemanticsService_announce(t2, t1, P.Assertiveness_00);
    },
    $signature: 0
  };
  A._YearPickerState_build_closure.prototype = {
    call$1(date) {
      if (I.Localizations_of(this.context, P.Type_FLocalizations_j3D, type$.FLocalizations) == null)
        $.$get$FDefaultLocalizations__localizations();
      return K.DateFormat$y(null).format$1(date._native);
    },
    $signature: typesOffset + 15
  };
  A._YearMonthPickerState_build_closure.prototype = {
    call$1(date) {
      var t1, t2, _0_0, t3, t4, t5, t6;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t2 = t1._widget.month;
      _0_0 = t2._change_notifier$_value.copyWith$1$year(B.Primitives_getYear(date._native));
      $label0$0: {
        t3 = t1._widget;
        t4 = B._instanceType(_0_0)._eval$1("Orderable.T")._as(t3.start);
        t5 = _0_0._native;
        t5 = 1000 * t5._core$_value + t5._microsecond;
        t6 = t4._native;
        t6 = C.JSInt_methods.compareTo$1(t5, 1000 * t6._core$_value + t6._microsecond);
        if (t6 < 0) {
          t3 = t4;
          break $label0$0;
        }
        t3 = t3.end;
        B._instanceType(t3)._eval$1("Orderable.T")._as(_0_0);
        t4 = t3._native;
        t5 = C.JSInt_methods.compareTo$1(1000 * t4._core$_value + t4._microsecond, t5);
        if (t5 < 0)
          break $label0$0;
        t3 = _0_0;
        break $label0$0;
      }
      t2.set$value(0, t3);
      t1.setState$1(new A._YearMonthPickerState_build__closure(t1));
    },
    $signature: typesOffset + 0
  };
  A._YearMonthPickerState_build__closure.prototype = {
    call$0() {
      this.$this._year = false;
    },
    $signature: 0
  };
  A._YearMonthPickerState_build_closure0.prototype = {
    call$1(date) {
      var t1, t2, _1_0, t3, t4, t5, t6;
      type$.LocalDate._as(date);
      t1 = this.$this;
      t2 = t1._widget.month;
      _1_0 = t2._change_notifier$_value.copyWith$1$month(B.Primitives_getMonth(date._native));
      $label1$1: {
        t3 = t1._widget;
        t4 = B._instanceType(_1_0)._eval$1("Orderable.T")._as(t3.start);
        t5 = _1_0._native;
        t5 = 1000 * t5._core$_value + t5._microsecond;
        t6 = t4._native;
        t6 = C.JSInt_methods.compareTo$1(t5, 1000 * t6._core$_value + t6._microsecond);
        if (t6 < 0) {
          t3 = t4;
          break $label1$1;
        }
        t3 = t3.end;
        B._instanceType(t3)._eval$1("Orderable.T")._as(_1_0);
        t4 = t3._native;
        t5 = C.JSInt_methods.compareTo$1(1000 * t4._core$_value + t4._microsecond, t5);
        if (t5 < 0)
          break $label1$1;
        t3 = _1_0;
        break $label1$1;
      }
      t2.set$value(0, t3);
      t1._widget.type.set$value(0, D.FCalendarPickerType_0);
    },
    $signature: typesOffset + 0
  };
  A._FRootHeader_build_closure.prototype = {
    call$1(action) {
      return B._setArrayType([new E.SizedBox(10, null, null, null), type$.Widget._as(action)], type$.JSArray_Widget);
    },
    $signature: 151
  };
  A.ChooseMediaOption_fail_closure.prototype = {
    call$1(res) {
      this.value.call$1(K.GeneralCallbackResult$(type$.nullable_JSObject._as(res)));
    },
    $signature: 4
  };
  A.ChooseMediaOption_success_closure.prototype = {
    call$1(result) {
      this.value.call$1(B.ChooseMediaSuccessCallbackResult$(type$.nullable_JSObject._as(result)));
    },
    $signature: 4
  };
  A.StyledWidget_gestures_closure1.prototype = {
    call$1(tapDownDetails) {
    },
    $signature: typesOffset + 44
  };
  A.StyledWidget_gestures_closure0.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.StyledWidget_gestures_closure.prototype = {
    call$0() {
      this.onTap.call$0();
    },
    $signature: 0
  };
  A.DateTimes_truncate_closure.prototype = {
    call$1(time) {
      return time;
    },
    $signature: 34
  };
  A.TDConfirmDialog__buildButton_closure.prototype = {
    call$0() {
      this.$this.action.call$0();
    },
    $signature: 3
  };
  A.TDConfirmDialog_build_closure.prototype = {
    call$2(context, constraints) {
      var t1, _null = null;
      type$.BoxConstraints._as(constraints);
      t1 = this.$this;
      return A3.Column$(B._setArrayType([new Y.Flexible(1, G.FlexFit_1, AE.SingleChildScrollView$(K.TDDialogInfoWidget$(_null, _null, constraints.maxHeight * 0.6, t1.contentWidget, P.EdgeInsets_24_32_24_0, t1.title, _null, AB.Color_PYr), _null, G.DragStartBehavior_1, _null, P.ClampingScrollPhysics_null, C.Axis_1), _null), t1._buildButton$1(context)], type$.JSArray_Widget), G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1);
    },
    $signature: typesOffset + 45
  };
  A._TDSkeletonState_initState_closure.prototype = {
    call$0() {
      return this.$this.setState$1(new A._TDSkeletonState_initState__closure1());
    },
    $signature: 0
  };
  A._TDSkeletonState_initState__closure1.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._TDSkeletonState_initState_closure0.prototype = {
    call$0() {
      return this.$this.setState$1(new A._TDSkeletonState_initState__closure0());
    },
    $signature: 0
  };
  A._TDSkeletonState_initState__closure0.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A._TDSkeletonState_initState_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.setState$1(new A._TDSkeletonState_initState__closure(t1));
    },
    $signature: 0
  };
  A._TDSkeletonState_initState__closure.prototype = {
    call$0() {
      return this.$this._td_skeleton$_isLoading = false;
    },
    $signature: 0
  };
  A._TDSkeletonState__buildObj_closure.prototype = {
    call$1(obj) {
      var t1, t2, skeletonObj, _null = null;
      type$.TDSkeletonRowColObj._as(obj);
      t1 = obj.style;
      t2 = this.context;
      skeletonObj = E.Container$(_null, _null, C.Clip_0, _null, _null, new E.BoxDecoration(t1.background.call$1(t2), _null, _null, E.BorderRadius$circular(t1.borderRadius.call$1(t2)), _null, _null, _null, L.BoxShape_0), _null, obj.height, _null, C.EdgeInsets_0_0_0_0, _null, _null, _null, obj.width);
      t1 = this.$this;
      switch (t1._widget.animation.index) {
        case 0:
          skeletonObj = new A.ShaderMask(new A._TDSkeletonState__buildObj__closure(t1, t2), C.BlendMode_9, skeletonObj, _null);
          break;
        case 1:
          t1 = t1.___TDSkeletonState__animation_F;
          t1 === $ && B.throwLateFieldNI("_animation");
          t2 = t1._evaluatable;
          t1 = type$.Animation_double._as(t1.parent);
          skeletonObj = A8.Opacity$(skeletonObj, t2.transform$1(0, t1.get$value(t1)));
          break;
      }
      t1 = obj.flex;
      return t1 == null ? skeletonObj : new Y.Flexible(t1, G.FlexFit_1, skeletonObj, _null);
    },
    $signature: typesOffset + 46
  };
  A._TDSkeletonState__buildObj__closure.prototype = {
    call$1(bounds) {
      var t1, t2, t3, t4;
      type$.Rect._as(bounds);
      t1 = B._setArrayType([C.Color_Edl, Aj.TDColors_get_grayColor4(A_.TDTheme_of(this.context)), C.Color_Edl], type$.JSArray_Color);
      t2 = bounds.right - bounds.left;
      t3 = this.$this.___TDSkeletonState__animation_F;
      t3 === $ && B.throwLateFieldNI("_animation");
      t4 = t3._evaluatable;
      t3 = type$.Animation_double._as(t3.parent);
      t3 = t4.transform$1(0, t3.get$value(t3));
      if (typeof t3 !== "number")
        return B.iae(t3);
      t3 = t2 * t3;
      return new AL.LinearGradient(D.Alignment_yfV, D.Alignment_Q0E, C.TileMode_0, t1, null, null).createShader$1(0, new B.Rect(t3, 0, t3 + t2, 0 + (bounds.bottom - bounds.top)));
    },
    $signature: 349
  };
  A._TDSkeletonState_build_closure.prototype = {
    call$1(row) {
      var t1 = J.map$1$1$ax(type$.List_TDSkeletonRowColObj._as(row), this.$this._buildObj$1(this.context), type$.Widget);
      return A0.Row$(B.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")), G.CrossAxisAlignment_2, null, G.MainAxisAlignment_0, G.MainAxisSize_1, 0, null, null, G.VerticalDirection_1);
    },
    $signature: typesOffset + 47
  };
  A._TDSkeletonState_build_closure0.prototype = {
    call$1(row) {
      type$.Widget._as(row);
      this.$this._widget.toString;
      return B._setArrayType([row, new E.SizedBox(null, A.TDSkeletonRowColStyle__defaultRowSpacing(this.context), null, null)], type$.JSArray_Widget);
    },
    $signature: 151
  };
  A._TDSkeletonState_build_closure1.prototype = {
    call$1(row) {
      return J.any$1$ax(type$.List_TDSkeletonRowColObj._as(row), new A._TDSkeletonState_build__closure());
    },
    $signature: typesOffset + 48
  };
  A._TDSkeletonState_build__closure.prototype = {
    call$1(obj) {
      return type$.TDSkeletonRowColObj._as(obj).flex != null;
    },
    $signature: typesOffset + 49
  };
  A.TDSkeletonRowCol_visualHeight_closure.prototype = {
    call$1(row) {
      return J.fold$1$2$ax(type$.List_TDSkeletonRowColObj._as(row), 0, new A.TDSkeletonRowCol_visualHeight__closure(), type$.double);
    },
    $signature: typesOffset + 50
  };
  A.TDSkeletonRowCol_visualHeight__closure.prototype = {
    call$2(a, b) {
      B._asDouble(a);
      type$.TDSkeletonRowColObj._as(b);
      return a > b.get$visualHeight() ? a : b.get$visualHeight();
    },
    $signature: typesOffset + 51
  };
  A.TDSkeletonRowCol_visualHeight_closure0.prototype = {
    call$2(a, b) {
      return B._asDouble(a) + B._asDouble(b);
    },
    $signature: 85
  };
  (function aliases() {
    var _ = A.__ChatPageState_State_TickerProviderStateMixin.prototype;
    _.super$__ChatPageState_State_TickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__HeaderState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__HeaderState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
    _ = A.__TDSkeletonState_State_SingleTickerProviderStateMixin.prototype;
    _.super$__TDSkeletonState_State_SingleTickerProviderStateMixin$dispose = _.dispose$0;
  })();
  (function installTearOffs() {
    var _instance_1_u = hunkHelpers._instance_1u,
      _instance = hunkHelpers.installInstanceTearOff,
      _instance_0_u = hunkHelpers._instance_0u,
      _static_1 = hunkHelpers._static_1,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_i = hunkHelpers._instance_0i,
      _static = hunkHelpers.installStaticTearOff;
    var _;
    _instance_1_u(_ = A._RenderBottomSheetLayoutWithSizeListener.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 1);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 1);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 1);
    _instance_1_u(_ = A._ModalBottomSheetState.prototype, "get$handleDragStart", "handleDragStart$1", 21);
    _instance(_, "get$handleDragEnd", 0, 1, null, ["call$2$isClosing", "call$1"], ["handleDragEnd$2$isClosing", "handleDragEnd$1"], 22, 0, 0);
    _instance_0_u(A.FValueNotifier.prototype, "get$dispose", "dispose$0", 2);
    _static_1(A, "calendar_controller___true$closure", "_true", 52);
    _instance_2_u(_ = A._PagedDayPickerState.prototype, "get$buildItem", "buildItem$2", 7);
    _instance_1_u(_, "get$onPageChange", "onPageChange$1", 4);
    _instance_1_u(_, "get$onGridFocusChange", "onGridFocusChange$1", 8);
    _instance_2_u(_ = A._PagedMonthPickerState.prototype, "get$buildItem", "buildItem$2", 7);
    _instance_1_u(_, "get$onPageChange", "onPageChange$1", 4);
    _instance_1_u(_, "get$onGridFocusChange", "onGridFocusChange$1", 8);
    _instance_0_i(A._HeaderState.prototype, "get$_header$_animate", "_header$_animate$0", 2);
    _instance_0_u(_ = A.PagedPickerState.prototype, "get$_onNext", "_onNext$0", 2);
    _instance_0_u(_, "get$_onPrevious", "_onPrevious$0", 2);
    _instance_1_u(_, "get$_onGridNextFocus", "_onGridNextFocus$1", 41);
    _instance_1_u(_, "get$_onGridPreviousFocus", "_onGridPreviousFocus$1", 42);
    _instance_1_u(_, "get$_onDirectionFocus", "_onDirectionFocus$1", 43);
    _instance_2_u(_ = A._PagedYearPickerState.prototype, "get$buildItem", "buildItem$2", 7);
    _instance_1_u(_, "get$onGridFocusChange", "onGridFocusChange$1", 8);
    _instance_1_u(_, "get$onPageChange", "onPageChange$1", 4);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColStyle__defaultRowSpacing$closure", "TDSkeletonRowColStyle__defaultRowSpacing", 3);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure", "TDSkeletonRowColObjStyle__defaultBackground", 9);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__transparentBackground$closure", "TDSkeletonRowColObjStyle__transparentBackground", 9);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__circleBorderRadius$closure", "TDSkeletonRowColObjStyle__circleBorderRadius", 3);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__rectBorderRadius$closure", "TDSkeletonRowColObjStyle__rectBorderRadius", 3);
    _static_1(A, "td_skeleton_rowcol_TDSkeletonRowColObjStyle__textBorderRadius$closure", "TDSkeletonRowColObjStyle__textBorderRadius", 3);
    _static(A, "core_DateTime___new_tearOff$closure", 1, null, ["call$8", "call$1", "call$2", "call$3", "call$4", "call$5", "call$6"], ["DateTime___new_tearOff", function(year) {
      return A.DateTime___new_tearOff(year, 1, 1, 0, 0, 0, 0, 0);
    }, function(year, month) {
      return A.DateTime___new_tearOff(year, month, 1, 0, 0, 0, 0, 0);
    }, function(year, month, day) {
      return A.DateTime___new_tearOff(year, month, day, 0, 0, 0, 0, 0);
    }, function(year, month, day, hour) {
      return A.DateTime___new_tearOff(year, month, day, hour, 0, 0, 0, 0);
    }, function(year, month, day, hour, minute) {
      return A.DateTime___new_tearOff(year, month, day, hour, minute, 0, 0, 0);
    }, function(year, month, day, hour, minute, second) {
      return A.DateTime___new_tearOff(year, month, day, hour, minute, second, 0, 0);
    }], 14, 0);
    _static(A, "core_DateTime___utc_tearOff$closure", 1, null, ["call$8", "call$1", "call$2", "call$3", "call$4", "call$5", "call$6"], ["DateTime___utc_tearOff", function(year) {
      return A.DateTime___utc_tearOff(year, 1, 1, 0, 0, 0, 0, 0);
    }, function(year, month) {
      return A.DateTime___utc_tearOff(year, month, 1, 0, 0, 0, 0, 0);
    }, function(year, month, day) {
      return A.DateTime___utc_tearOff(year, month, day, 0, 0, 0, 0, 0);
    }, function(year, month, day, hour) {
      return A.DateTime___utc_tearOff(year, month, day, hour, 0, 0, 0, 0);
    }, function(year, month, day, hour, minute) {
      return A.DateTime___utc_tearOff(year, month, day, hour, minute, 0, 0, 0);
    }, function(year, month, day, hour, minute, second) {
      return A.DateTime___utc_tearOff(year, month, day, hour, minute, second, 0, 0);
    }], 14, 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(B.Object, [A._MyChatController_Object_UploadProgressMixin, A.FormData, A.ChatOperation, A.ScrollToMessageMixin, A.UploadProgressMixin, A._$ImageMessageCopyWithImpl, A._User_Object__$User, A._$User, A.ChooseMediaOption, A.Orderable, A.Date, A.Period, A.TDSkeletonRowColStyle, A.TDSkeletonRowCol, A.TDSkeletonRowColObjStyle, A.TDSkeletonRowColObj, A.Quaternion]);
    _inherit(A._MyChatController_Object_UploadProgressMixin_ScrollToMessageMixin, A._MyChatController_Object_UploadProgressMixin);
    _inherit(A.MyChatController, A._MyChatController_Object_UploadProgressMixin_ScrollToMessageMixin);
    _inheritMany(B.Closure, [A.MyChatController_insertMessage_closure, A.MyChatController_updateMessage_closure, A.MyChatController_handleSendMessage_closure, A.MyChatController_handleSendMessage_closure1, A.MyChatController_handleSendMessage__closure, A.MyChatController_handleAttachmentTap_closure, A._ChatPageState__initAsync_closure, A._ChatPageState__deleteSession_closure, A._ChatPageState__showSessionSwitchDialog_closure, A._ChatPageState__showCalendarDialog_closure, A._ChatPageState__showCalendarDialog_calendar, A._ChatPageState__showCalendarDialog_calendar_closure0, A._ChatPageState__showCalendarDialog_calendar_closure1, A._ChatPageState__showCalendarDialog_calendar_closure, A._ChatPageState__showCalendarDialog_closure0, A._ChatPageState__showCalendarDialog____closure, A._ChatPageState_build_closure10, A._ChatPageState_build_closure9, A._ChatPageState_build__closure0, A._ChatPageState_build_closure6, A._ChatPageState_build_closure7, A._ChatPageState_build_closure2, A._ChatPageState_build_closure3, A._ChatPageState_build__closure3, A._ChatPageState_build_closure4, A._ChatPageState_build_closure5, A._ChatPageState_build___closure2, A.pickMediaPaths_closure, A.pickMediaPaths__closure, A.pickMediaPaths_closure0, A.FormData_finalize_writeUtf8, A.FormData_finalize_closure0, A._ModalBottomSheetState_build__closure, A.ModalBottomSheetRoute_buildPage_closure, A._AnimatedContainerState_forEachTween_closure, A._AnimatedContainerState_forEachTween_closure0, A._AnimatedContainerState_forEachTween_closure1, A._AnimatedContainerState_forEachTween_closure2, A._AnimatedContainerState_forEachTween_closure3, A._AnimatedContainerState_forEachTween_closure4, A._AnimatedContainerState_forEachTween_closure5, A._AnimatedContainerState_forEachTween_closure6, A.MediaQuery_withNoTextScaling_closure, A._PageViewState_build_closure, A._State_build_closure0, A._State_build_closure1, A._State_build__closure2, A._State_build__closure3, A._State_build__closure0, A._State_build__closure1, A._State_build__closure, A._PagedDayPickerState_buildItem_closure, A._MonthPickerState_build_closure, A.Entry_Entry$day_builder, A.Entry_Entry$yearMonth_builder, A._HeaderState_build_closure, A.PagedPicker_closure, A._YearPickerState_build_closure, A._YearMonthPickerState_build_closure, A._YearMonthPickerState_build_closure0, A._FRootHeader_build_closure, A.ChooseMediaOption_fail_closure, A.ChooseMediaOption_success_closure, A.StyledWidget_gestures_closure1, A.DateTimes_truncate_closure, A._TDSkeletonState__buildObj_closure, A._TDSkeletonState__buildObj__closure, A._TDSkeletonState_build_closure, A._TDSkeletonState_build_closure0, A._TDSkeletonState_build_closure1, A._TDSkeletonState_build__closure, A.TDSkeletonRowCol_visualHeight_closure]);
    _inheritMany(B.Closure0Args, [A.MyChatController_handleSendMessage_closure0, A.MyChatController_handleAttachmentTap__closure, A._ChatPageState__initAsync_closure0, A._ChatPageState__switchSession_closure, A._ChatPageState__deleteSession__closure, A._ChatPageState__deleteSession__closure0, A._ChatPageState__showSessionSwitchDialog___closure0, A._ChatPageState__showSessionSwitchDialog____closure, A._ChatPageState__showSessionSwitchDialog____closure1, A._ChatPageState__showSessionSwitchDialog____closure0, A._ChatPageState__showSessionSwitchDialog_____closure, A._ChatPageState__buildPendingImagesPreview__closure, A._ChatPageState__buildPendingImagesPreview___closure, A._ChatPageState_build_closure, A._ChatPageState_build_closure0, A._ChatPageState_build_closure1, A._ChatPageState_build__closure, A._ChatPageState_build___closure, A._ChatPageState_build_closure8, A._ChatPageState_build__closure1, A._ChatPageState_build___closure0, A._ChatPageState_build___closure1, A._ChatPageState_build____closure, A.FormData_finalize_writeLine, A.FormData_finalize_closure, A.FormData_finalize_closure1, A.writeStreamToSink_closure, A._ModalBottomSheetState_build_closure0, A.FileImage_loadBuffer_closure, A.FileImage_loadImage_closure, A._PagedDayPickerState_buildItem__closure, A._PagedDayPickerState_onPageChange_closure, A._PagedDayPickerState_onGridFocusChange_closure, A._PagedMonthPickerState_onGridFocusChange_closure, A._SelectableEntry_build_closure0, A._SelectableEntry_build_closure, A._HeaderState_build_closure0, A.PagedPickerState__onDirectionFocus_closure, A._PagedYearPickerState_onGridFocusChange_closure, A._PagedYearPickerState_onPageChange_closure, A._YearMonthPickerState_build__closure, A.StyledWidget_gestures_closure0, A.StyledWidget_gestures_closure, A.TDConfirmDialog__buildButton_closure, A._TDSkeletonState_initState_closure, A._TDSkeletonState_initState__closure1, A._TDSkeletonState_initState_closure0, A._TDSkeletonState_initState__closure0, A._TDSkeletonState_initState_closure1, A._TDSkeletonState_initState__closure]);
    _inheritMany(B.StatefulWidget, [A.ChatPage, A._ModalBottomSheet, A.PageView, A.FCalendar, A.DayPicker, A.PagedPicker, A.MonthPicker, A.Header, A.YearPicker, A.YearMonthPicker, A.TDSkeleton]);
    _inheritMany(B.State, [A.__ChatPageState_State_TickerProviderStateMixin, A._ModalBottomSheetState, A._PageViewState, A._State1, A._DayPickerState, A.PagedPickerState, A._MonthPickerState, A.__HeaderState_State_SingleTickerProviderStateMixin, A._YearPickerState, A._YearMonthPickerState, A.__TDSkeletonState_State_SingleTickerProviderStateMixin]);
    _inherit(A._ChatPageState, A.__ChatPageState_State_TickerProviderStateMixin);
    _inheritMany(B.Closure2Args, [A._ChatPageState__showSessionSwitchDialog__closure, A._ChatPageState__showSessionSwitchDialog___closure, A._ChatPageState__showCalendarDialog__closure, A._ChatPageState__showCalendarDialog___closure, A._ChatPageState__buildPendingImagesPreview_closure, A._ChatPageState_build__closure2, A.FormData__init_closure, A.FormData__headerForFile_closure, A._ModalBottomSheetState_build_closure, A._PageViewState_build_closure0, A.TDConfirmDialog_build_closure, A.TDSkeletonRowCol_visualHeight__closure, A.TDSkeletonRowCol_visualHeight_closure0]);
    _inheritMany(B.SingleChildRenderObjectWidget, [A._BottomSheetLayoutWithSizeListener, A.ShaderMask, A._SliverFractionalPadding]);
    _inherit(A._RenderBottomSheetLayoutWithSizeListener, E.RenderShiftedBox);
    _inherit(A.ModalBottomSheetRoute, A2.PopupRoute);
    _inheritMany(B.StatelessWidget, [A.CircleAvatar, A.SliverFillViewport, A.Entry0, A.EntryContent, A.Navigation, A.TDConfirmDialog]);
    _inherit(A.BorderRadiusDirectional, E.BorderRadiusGeometry);
    _inherit(A.FileImage, AZ.ImageProvider);
    _inherit(A.RenderShaderMask, B.RenderProxyBox);
    _inherit(A.RenderSliverFillViewport, X.RenderSliverFixedExtentBoxAdaptor);
    _inheritMany(E.Tween, [A.AlignmentGeometryTween, A.BoxConstraintsTween, A.Matrix4Tween]);
    _inherit(A.AnimatedContainer, Ac.ImplicitlyAnimatedWidget);
    _inherit(A._AnimatedContainerState, A7.AnimatedWidgetBaseState);
    _inherit(A.PageController, A1.ScrollController);
    _inherit(A.PageMetrics, A1.FixedScrollMetrics);
    _inherit(A._PagePosition, A1.ScrollPositionWithSingleContext);
    _inheritMany(T.ScrollPhysics, [A._ForceImplicitScrollPhysics, A.PageScrollPhysics]);
    _inherit(A._SliverFillViewportRenderObjectWidget, U.SliverMultiBoxAdaptorWidget);
    _inherit(A._RenderSliverFractionalPadding, U.RenderSliverEdgeInsetsPadding);
    _inheritMany(H.Message, [A.TextMessage, A.TextStreamMessage, A.ImageMessage]);
    _inherit(A.User, A._User_Object__$User);
    _inherit(A._User, A.User);
    _inherit(A.FValueNotifier, B.ValueNotifier);
    _inherit(A.FCalendarController, A.FValueNotifier);
    _inherit(A._AutoDateController, A.FCalendarController);
    _inherit(A._GridDelegate, H.SliverGridDelegate);
    _inheritMany(A.PagedPicker, [A.PagedDayPicker, A.PagedMonthPicker, A.PagedYearPicker]);
    _inheritMany(A.PagedPickerState, [A._PagedDayPickerState, A._PagedMonthPickerState, A._PagedYearPickerState]);
    _inheritMany(A.Entry0, [A._SelectableEntry, A._UnselectableEntry]);
    _inheritMany(B._Enum, [A.FCalendarPickerType, A.DateUnit, A.TimeUnit, A.TDSkeletonAnimation, A.TDSkeletonTheme]);
    _inherit(A._HeaderState, A.__HeaderState_State_SingleTickerProviderStateMixin);
    _inherit(A._FRootHeader, K.FHeader);
    _inherit(A._LocalDate_Date_Orderable, A.Date);
    _inherit(A.LocalDate, A._LocalDate_Date_Orderable);
    _inherit(A._TDSkeletonState, A.__TDSkeletonState_State_SingleTickerProviderStateMixin);
    _mixin(A._MyChatController_Object_UploadProgressMixin, A.UploadProgressMixin);
    _mixin(A._MyChatController_Object_UploadProgressMixin_ScrollToMessageMixin, A.ScrollToMessageMixin);
    _mixinHard(A.__ChatPageState_State_TickerProviderStateMixin, E.TickerProviderStateMixin);
    _mixin(A._User_Object__$User, A._$User);
    _mixinHard(A.__HeaderState_State_SingleTickerProviderStateMixin, Ac.SingleTickerProviderStateMixin);
    _mixin(A._LocalDate_Date_Orderable, A.Orderable);
    _mixinHard(A.__TDSkeletonState_State_SingleTickerProviderStateMixin, Ac.SingleTickerProviderStateMixin);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"MyChatController":{"ChatController":[]},"ChatPage":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ChatPageState":{"TickerProviderStateMixin":["ChatPage"],"State":["ChatPage"],"TickerProvider":[],"State.T":"ChatPage"},"_ModalBottomSheet":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_BottomSheetLayoutWithSizeListener":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderBottomSheetLayoutWithSizeListener":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_ModalBottomSheetState":{"State":["_ModalBottomSheet<1>"],"State.T":"_ModalBottomSheet<1>"},"ModalBottomSheetRoute":{"ModalRoute":["1"],"_ModalRoute_TransitionRoute_LocalHistoryRoute":["1"],"TransitionRoute":["1"],"OverlayRoute":["1"],"LocalHistoryRoute":["1"],"Route":["1"],"_RoutePlaceholder":[]},"CircleAvatar":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BorderRadiusDirectional":{"BorderRadiusGeometry":[]},"FileImage":{"ImageProvider":["FileImage"],"ImageProvider.T":"FileImage"},"RenderShaderMask":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"RenderSliverFillViewport":{"RenderSliverMultiBoxAdaptor":[],"RenderSliver":[],"ContainerRenderObjectMixin":["RenderBox","SliverMultiBoxAdaptorParentData"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"ContainerRenderObjectMixin.1":"SliverMultiBoxAdaptorParentData","ContainerRenderObjectMixin.0":"RenderBox"},"AlignmentGeometryTween":{"Tween":["AlignmentGeometry?"],"Animatable":["AlignmentGeometry?"],"Animatable.T":"AlignmentGeometry?","Tween.T":"AlignmentGeometry?"},"ShaderMask":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"BoxConstraintsTween":{"Tween":["BoxConstraints"],"Animatable":["BoxConstraints"],"Animatable.T":"BoxConstraints","Tween.T":"BoxConstraints"},"Matrix4Tween":{"Tween":["Matrix40"],"Animatable":["Matrix40"],"Animatable.T":"Matrix40","Tween.T":"Matrix40"},"AnimatedContainer":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_AnimatedContainerState":{"ImplicitlyAnimatedWidgetState":["AnimatedContainer"],"State":["AnimatedContainer"],"TickerProvider":[],"State.T":"AnimatedContainer","ImplicitlyAnimatedWidgetState.T":"AnimatedContainer"},"PageView":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"PageController":{"ScrollController":[],"ChangeNotifier":[],"Listenable":[]},"PageMetrics":{"ScrollMetrics":[]},"_PagePosition":{"ScrollPosition":[],"PageMetrics":[],"ViewportOffset":[],"ChangeNotifier":[],"Listenable":[],"ScrollMetrics":[],"ScrollActivityDelegate":[]},"_ForceImplicitScrollPhysics":{"ScrollPhysics":[]},"PageScrollPhysics":{"ScrollPhysics":[]},"_PageViewState":{"State":["PageView"],"State.T":"PageView"},"SliverFillViewport":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverFillViewportRenderObjectWidget":{"SliverMultiBoxAdaptorWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SliverFractionalPadding":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderSliverFractionalPadding":{"RenderSliver":[],"RenderObjectWithChildMixin":["RenderSliver"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderSliver"},"TextMessage":{"Message":[]},"TextStreamMessage":{"Message":[]},"ImageMessage":{"Message":[]},"_User":{"User":[]},"FValueNotifier":{"ValueNotifier":["1"],"ChangeNotifier":[],"ValueListenable":["1"],"Listenable":[]},"FCalendar":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_State1":{"State":["FCalendar"],"State.T":"FCalendar"},"FCalendarController":{"FValueNotifier":["1"],"ValueNotifier":["1"],"ChangeNotifier":[],"ValueListenable":["1"],"Listenable":[]},"_AutoDateController":{"FCalendarController":["DateTime?"],"FValueNotifier":["DateTime?"],"ValueNotifier":["DateTime?"],"ChangeNotifier":[],"ValueListenable":["DateTime?"],"Listenable":[],"ValueNotifier.T":"DateTime?","FValueNotifier.T":"DateTime?"},"DayPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_DayPickerState":{"State":["DayPicker"],"State.T":"DayPicker"},"_GridDelegate":{"SliverGridDelegate":[]},"PagedDayPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PagedDayPickerState":{"PagedPickerState":["PagedDayPicker"],"State":["PagedDayPicker"],"State.T":"PagedDayPicker","PagedPickerState.T":"PagedDayPicker"},"MonthPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_MonthPickerState":{"State":["MonthPicker"],"State.T":"MonthPicker"},"PagedMonthPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PagedMonthPickerState":{"PagedPickerState":["PagedMonthPicker"],"State":["PagedMonthPicker"],"State.T":"PagedMonthPicker","PagedPickerState.T":"PagedMonthPicker"},"Entry0":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_SelectableEntry":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_UnselectableEntry":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"EntryContent":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"FCalendarPickerType":{"Enum":[]},"Header":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_HeaderState":{"State":["Header"],"TickerProvider":[],"State.T":"Header"},"Navigation":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"PagedPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"PagedPickerState":{"State":["1"]},"PagedYearPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_PagedYearPickerState":{"PagedPickerState":["PagedYearPicker"],"State":["PagedYearPicker"],"State.T":"PagedYearPicker","PagedPickerState.T":"PagedYearPicker"},"YearPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_YearPickerState":{"State":["YearPicker"],"State.T":"YearPicker"},"YearMonthPicker":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_YearMonthPickerState":{"State":["YearMonthPicker"],"State.T":"YearMonthPicker"},"_FRootHeader":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"LocalDate":{"Orderable":["LocalDate"],"Comparable":["LocalDate"],"Orderable.T":"LocalDate"},"DateUnit":{"Enum":[]},"TimeUnit":{"Enum":[]},"TDConfirmDialog":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"TDSkeleton":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"TDSkeletonAnimation":{"Enum":[]},"TDSkeletonTheme":{"Enum":[]},"_TDSkeletonState":{"State":["TDSkeleton"],"TickerProvider":[],"State.T":"TDSkeleton"}}'));
  var string$ = {
    __imag: ", imageSource: null, createdAt: null, metadata: "
  };
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      Action_Intent: findType("Action<Intent>"),
      AlignmentGeometry: findType("AlignmentGeometry"),
      Animatable_double: findType("Animatable<double>"),
      Animatable_nullable_Color: findType("Animatable<Color?>"),
      Animation_double: findType("Animation<double>"),
      AsyncSnapshot_Map_DateTime_int: findType("AsyncSnapshot<Map<DateTime,int>>"),
      BorderRadiusDirectional: findType("BorderRadiusDirectional"),
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      BuildContext: findType("BuildContext"),
      CallbackAction_DirectionalFocusIntent: findType("CallbackAction<DirectionalFocusIntent>"),
      CallbackAction_NextFocusIntent: findType("CallbackAction<NextFocusIntent>"),
      CallbackAction_PreviousFocusIntent: findType("CallbackAction<PreviousFocusIntent>"),
      ChatOperation: findType("ChatOperation"),
      ChatSessionManager: findType("ChatSessionManager"),
      ChooseMediaOption: findType("ChooseMediaOption"),
      Codec: findType("Codec0"),
      ColorTween: findType("ColorTween"),
      Consumer_StreamStateManager: findType("Consumer<StreamStateManager>"),
      ContainerLayer: findType("ContainerLayer0"),
      CustomMessage: findType("CustomMessage"),
      DateTime: findType("DateTime"),
      DayPicker: findType("DayPicker"),
      Decoration: findType("Decoration"),
      DirectionalFocusIntent: findType("DirectionalFocusIntent"),
      Directionality: findType("Directionality"),
      Duration: findType("Duration"),
      EdgeInsetsGeometry: findType("EdgeInsetsGeometry"),
      EqualUnmodifiableMapView_String_dynamic: findType("EqualUnmodifiableMapView<String,@>"),
      EqualUnmodifiableMapView_of_String_and_List_String: findType("EqualUnmodifiableMapView<String,List<String>>"),
      FCalendarPickerType: findType("FCalendarPickerType"),
      FLocalizations: findType("FLocalizations"),
      FileImage: findType("FileImage"),
      FocusNode: findType("FocusNode"),
      Future_Codec_Function_ImmutableBuffer: findType("Future<Codec0>(ImmutableBuffer)"),
      Future_Codec_Function_ImmutableBuffer_$named_allowUpscaling_bool_and_cacheHeight_nullable_int_and_cacheWidth_nullable_int: findType("Future<Codec0>(ImmutableBuffer{allowUpscaling:bool,cacheHeight:int?,cacheWidth:int?})"),
      Future_Codec_Function_ImmutableBuffer_$named_getTargetSize_nullable_TargetImageSize_Function_int_int: findType("Future<Codec0>(ImmutableBuffer{getTargetSize:TargetImageSize(int,int)?})"),
      Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(String{alignment:double,curve:Curve,duration:Duration,offset:double})"),
      Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(int{alignment:double,curve:Curve,duration:Duration,offset:double})"),
      GeneralConstantMap_TraversalDirection_Period: findType("GeneralConstantMap<TraversalDirection,Period>"),
      GeneralConstantMap_int_Color: findType("GeneralConstantMap<int,Color>"),
      Header: findType("Header"),
      HealthDataManager: findType("HealthDataManager"),
      ImageMessage: findType("ImageMessage"),
      JSArray_Color: findType("JSArray<Color>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_ListTile: findType("JSArray<ListTile>"),
      JSArray_List_TDSkeletonRowColObj: findType("JSArray<List<TDSkeletonRowColObj>>"),
      JSArray_MapEntry_String_MultipartFile: findType("JSArray<MapEntry<String,MultipartFile>>"),
      JSArray_MapEntry_String_String: findType("JSArray<MapEntry<String,String>>"),
      JSArray_Map_String_dynamic: findType("JSArray<Map<String,@>>"),
      JSArray_Message: findType("JSArray<Message>"),
      JSArray_MultipartFile: findType("JSArray<MultipartFile>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_SessionInfo: findType("JSArray<SessionInfo>"),
      JSArray_SizedBox: findType("JSArray<SizedBox>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_TDSkeleton: findType("JSArray<TDSkeleton>"),
      JSArray_TDSkeletonRowColObj: findType("JSArray<TDSkeletonRowColObj>"),
      JSArray_Widget: findType("JSArray<Widget>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_of_Future_bool_Function: findType("JSArray<Future<bool>()>"),
      JSArray_of_void_Function_Action_Intent: findType("JSArray<~(Action<Intent>)>"),
      JSArray_of_void_Function_nullable_DateTime: findType("JSArray<~(DateTime?)>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      LabeledGlobalKey__ModalScopeState_dynamic: findType("LabeledGlobalKey<_ModalScopeState<@>>"),
      List_FocusNode: findType("List<FocusNode>"),
      List_Message: findType("List<Message>"),
      List_MultipartFile: findType("List<MultipartFile>"),
      List_SessionInfo: findType("List<SessionInfo>"),
      List_String: findType("List<String>"),
      List_TDSkeletonRowColObj: findType("List<TDSkeletonRowColObj>"),
      LocalDate: findType("LocalDate"),
      MapEntry_String_MultipartFile: findType("MapEntry<String,MultipartFile>"),
      MapEntry_String_String: findType("MapEntry<String,String>"),
      Map_DateTime_int: findType("Map<DateTime,int>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_of_Type_and_Action_Intent: findType("Map<Type,Action<Intent>>"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      Matrix4: findType("Matrix40"),
      MediaFile: findType("MediaFile"),
      MediaQuery: findType("MediaQuery"),
      Message: findType("Message"),
      ModalBottomSheetRoute_dynamic: findType("ModalBottomSheetRoute<@>"),
      MonthPicker: findType("MonthPicker"),
      NextFocusIntent: findType("NextFocusIntent"),
      NotificationListener_ScrollNotification: findType("NotificationListener<ScrollNotification>"),
      Null: findType("Null"),
      Object: findType("Object"),
      ObserverList_of_void_Function_Action_Intent: findType("ObserverList<~(Action<Intent>)>"),
      PageMetrics: findType("PageMetrics"),
      PageView: findType("PageView"),
      ParametricCurve_double: findType("ParametricCurve<double>"),
      Period: findType("Period"),
      PopEntry_nullable_Object: findType("PopEntry<Object?>"),
      PreviousFocusIntent: findType("PreviousFocusIntent"),
      Quaternion: findType("Quaternion"),
      Record_6_bool_current_and_DateTime_date_and_bool_selectable_and_bool_selected_and_FCalendarDayPickerStyle_style_and_bool_today: findType("+current,date,selectable,selected,style,today(bool,DateTime,bool,bool,FCalendarDayPickerStyle,bool)"),
      Rect: findType("Rect"),
      RenderBox: findType("RenderBox"),
      RenderShaderMask: findType("RenderShaderMask"),
      RenderSliverFillViewport: findType("RenderSliverFillViewport"),
      ResponseBody: findType("ResponseBody"),
      ScrollNotification: findType("ScrollNotification"),
      SessionInfo: findType("SessionInfo"),
      Set_WidgetState: findType("Set<WidgetState>"),
      Shader_Function_Rect: findType("Shader(Rect)"),
      Size: findType("Size"),
      SliverConstraints: findType("SliverConstraints"),
      SliverMultiBoxAdaptorElement: findType("SliverMultiBoxAdaptorElement"),
      StreamController_double: findType("StreamController<double>"),
      StreamStateManager: findType("StreamStateManager"),
      String: findType("String"),
      SynchronousFuture_FileImage: findType("SynchronousFuture<FileImage>"),
      TDSkeletonRowColObj: findType("TDSkeletonRowColObj"),
      TextBaseline: findType("TextBaseline"),
      TextMessage: findType("TextMessage"),
      TextStreamMessage: findType("TextStreamMessage"),
      Tween_double: findType("Tween<double>"),
      Type: findType("Type"),
      Uint8List: findType("Uint8List"),
      User: findType("User"),
      UserSessionManager: findType("UserSessionManager"),
      ValueKey_Record_2_LocalDate_and_LocalDate: findType("ValueKey<+(LocalDate,LocalDate)>"),
      ValueNotifier_EdgeInsets: findType("ValueNotifier<EdgeInsets>"),
      ValueNotifier_FCalendarPickerType: findType("ValueNotifier<FCalendarPickerType>"),
      ValueNotifier_LocalDate: findType("ValueNotifier<LocalDate>"),
      ValueNotifier_bool: findType("ValueNotifier<bool>"),
      ValueNotifier_nullable_String: findType("ValueNotifier<String?>"),
      ViewportOffset: findType("ViewportOffset"),
      Widget: findType("Widget"),
      WidgetState: findType("WidgetState"),
      YearPicker: findType("YearPicker"),
      _$ImageMessageCopyWithImpl_ImageMessage: findType("_$ImageMessageCopyWithImpl<ImageMessage>"),
      _AsyncCompleter_List_String: findType("_AsyncCompleter<List<String>>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Future_List_String: findType("_Future<List<String>>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_void: findType("_Future<~>"),
      _GridDelegate: findType("_GridDelegate"),
      _PagePosition: findType("_PagePosition"),
      _RenderBottomSheetLayoutWithSizeListener: findType("_RenderBottomSheetLayoutWithSizeListener"),
      _RenderSliverFractionalPadding: findType("_RenderSliverFractionalPadding"),
      _StreamIterator_String: findType("_StreamIterator<String>"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_String: findType("@(String)"),
      int: findType("int"),
      nullable_AlignmentGeometryTween: findType("AlignmentGeometryTween?"),
      nullable_Animation_double: findType("Animation<double>?"),
      nullable_BoxConstraintsTween: findType("BoxConstraintsTween?"),
      nullable_DateTime: findType("DateTime?"),
      nullable_DecorationTween: findType("DecorationTween?"),
      nullable_EdgeInsetsGeometryTween: findType("EdgeInsetsGeometryTween?"),
      nullable_Future_void_Function_String_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(String{alignment:double,curve:Curve,duration:Duration,offset:double})?"),
      nullable_Future_void_Function_int_$named_alignment_double_and_curve_Curve_and_duration_Duration_and_offset_double: findType("Future<~>(int{alignment:double,curve:Curve,duration:Duration,offset:double})?"),
      nullable_JSObject: findType("JSObject?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_of_String_and_List_String: findType("Map<String,List<String>>?"),
      nullable_Matrix4Tween: findType("Matrix4Tween?"),
      nullable_MessageGroupStatus: findType("MessageGroupStatus?"),
      nullable_MessageStatus: findType("MessageStatus?"),
      nullable_Object: findType("Object?"),
      nullable_ShaderMaskLayer: findType("ShaderMaskLayer?"),
      nullable_Tween_dynamic_Function_3_nullable_Tween_dynamic_and_dynamic_and_Tween_dynamic_Function_dynamic: findType("Tween<@>?(Tween<@>?,@,Tween<@>(@))"),
      nullable_Widget: findType("Widget?"),
      nullable_void_Function_ChooseMediaSuccessCallbackResult: findType("~(ChooseMediaSuccessCallbackResult)?"),
      nullable_void_Function_GeneralCallbackResult: findType("~(GeneralCallbackResult)?"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_Size: findType("~(Size)"),
      void_Function_void_Function: findType("~(~())")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    D.Alignment_Q0E = new E.Alignment(1, 0.268);
    D.Alignment_yfV = new E.Alignment(-1, -0.268);
    D.CONSTANT0 = new B3.Instantiation1(H.message___$identity$closure(), B.findType("Instantiation1<ImageMessage>"));
    D.C_TDSkeletonRowColStyle = new A.TDSkeletonRowColStyle();
    D.Cubic_C8c = new B.Cubic(0, 0, 0.2, 1);
    D.DateUnit_0 = new A.DateUnit(0, "years");
    D.DateUnit_1 = new A.DateUnit(1, "months");
    D.DateUnit_2 = new A.DateUnit(2, "days");
    D.EdgeInsetsDirectional_0_0_7_0 = new E.EdgeInsetsDirectional(0, 0, 7, 0);
    D.EdgeInsetsDirectional_7_0_0_0 = new E.EdgeInsetsDirectional(7, 0, 0, 0);
    D.EdgeInsets_15_0_15_0 = new B.EdgeInsets(15, 0, 15, 0);
    D.EdgeInsets_24_24_24_24 = new B.EdgeInsets(24, 24, 24, 24);
    D.Expanded_3Qw = new Y.Expanded(1, G.FlexFit_0, AG.SizedBox_null_null_null_null, null);
    D.FCalendarPickerType_0 = new A.FCalendarPickerType(0, "day");
    D.FCalendarPickerType_1 = new A.FCalendarPickerType(1, "yearMonth");
    D.IconData_58627_MaterialIcons_null_false = new E.IconData(58627, "MaterialIcons", null, false);
    D.IconData_58628_MaterialIcons_null_false = new E.IconData(58628, "MaterialIcons", null, false);
    D.IconData_984763_MaterialIcons_null_false = new E.IconData(984763, "MaterialIcons", null, false);
    D.Icon_5Oy = new E.Icon(D.IconData_984763_MaterialIcons_null_false, null, null, null, null);
    D.IconData_57415_MaterialIcons_null_false = new E.IconData(57415, "MaterialIcons", null, false);
    D.Icon_Qoy = new E.Icon(D.IconData_57415_MaterialIcons_null_false, null, null, null, null);
    D.Icon_Sl6 = new E.Icon(Ap.IconData_58162_MaterialIcons_null_false, null, null, null, null);
    D.IconData_57694_MaterialIcons_null_true = new E.IconData(57694, "MaterialIcons", null, true);
    D.Icon_TfW = new E.Icon(D.IconData_57694_MaterialIcons_null_true, null, null, null, null);
    D.Icon_pPk = new E.Icon(P.IconData_57695_MaterialIcons_null_true, 15, null, null, null);
    D.IconData_57785_MaterialIcons_null_false = new E.IconData(57785, "MaterialIcons", null, false);
    D.Icon_qkB = new E.Icon(D.IconData_57785_MaterialIcons_null_false, null, null, null, null);
    D.List_F11 = B._setArrayType(makeConstList(["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]), type$.JSArray_String);
    D.TDSkeletonRowColObjStyle_hCS = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__textBorderRadius$closure());
    D.TDSkeletonRowColObj_OwY = new A.TDSkeletonRowColObj(null, 16, 55, D.TDSkeletonRowColObjStyle_hCS);
    D.TDSkeletonRowColObjStyle_4AR = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__transparentBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__textBorderRadius$closure());
    D.TDSkeletonRowColObj_9q2 = new A.TDSkeletonRowColObj(null, null, 45, D.TDSkeletonRowColObjStyle_4AR);
    D.List_GbC = B._setArrayType(makeConstList([D.TDSkeletonRowColObj_OwY, D.TDSkeletonRowColObj_9q2]), type$.JSArray_TDSkeletonRowColObj);
    D.TDSkeletonRowColObjStyle_U0q = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__rectBorderRadius$closure());
    D.TDSkeletonRowColObj_jhk = new A.TDSkeletonRowColObj(72, 72, null, D.TDSkeletonRowColObjStyle_U0q);
    D.List_bIy = B._setArrayType(makeConstList([D.TDSkeletonRowColObj_jhk]), type$.JSArray_TDSkeletonRowColObj);
    D.List_JGW = B._setArrayType(makeConstList([D.List_bIy]), type$.JSArray_List_TDSkeletonRowColObj);
    D.List_Qv3 = B._setArrayType(makeConstList([31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]), type$.JSArray_int);
    D.TDSkeletonRowColObjStyle_l6T = new A.TDSkeletonRowColObjStyle(A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__defaultBackground$closure(), A.td_skeleton_rowcol_TDSkeletonRowColObjStyle__circleBorderRadius$closure());
    D.TDSkeletonRowColObj_uDe = new A.TDSkeletonRowColObj(48, 48, null, D.TDSkeletonRowColObjStyle_l6T);
    D.List_2YC = B._setArrayType(makeConstList([D.TDSkeletonRowColObj_uDe]), type$.JSArray_TDSkeletonRowColObj);
    D.List_ZUH = B._setArrayType(makeConstList([D.List_2YC]), type$.JSArray_List_TDSkeletonRowColObj);
    D.List_fKm = B._setArrayType(makeConstList([31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]), type$.JSArray_int);
    D.TDSkeletonRowColObj_RCS = new A.TDSkeletonRowColObj(null, 16, 24, D.TDSkeletonRowColObjStyle_hCS);
    D.TDSkeletonRowColObj_2Jc = new A.TDSkeletonRowColObj(16, null, null, D.TDSkeletonRowColObjStyle_4AR);
    D.TDSkeletonRowColObj_BOv = new A.TDSkeletonRowColObj(null, 16, 76, D.TDSkeletonRowColObjStyle_hCS);
    D.List_m1t = B._setArrayType(makeConstList([D.TDSkeletonRowColObj_RCS, D.TDSkeletonRowColObj_2Jc, D.TDSkeletonRowColObj_BOv]), type$.JSArray_TDSkeletonRowColObj);
    D.TDSkeletonRowColObj_msG = new A.TDSkeletonRowColObj(null, 16, 1, D.TDSkeletonRowColObjStyle_hCS);
    D.List_bFo = B._setArrayType(makeConstList([D.TDSkeletonRowColObj_msG]), type$.JSArray_TDSkeletonRowColObj);
    D.List_xWd = B._setArrayType(makeConstList([D.List_m1t, D.List_bFo]), type$.JSArray_List_TDSkeletonRowColObj);
    D.Map_LMMuq = new B.GeneralConstantMap([A6.SingleActivator_uUl2, R.DirectionalFocusIntent_TraversalDirection_3, A6.SingleActivator_uUl3, R.DirectionalFocusIntent_TraversalDirection_1, A6.SingleActivator_uUl5, R.DirectionalFocusIntent_TraversalDirection_2, A6.SingleActivator_uUl4, R.DirectionalFocusIntent_TraversalDirection_0], B.findType("GeneralConstantMap<SingleActivator,DirectionalFocusIntent>"));
    D.Period_iv9 = new A.Period(0, -3, 0, 0, 0, 0, 0, 0);
    D.Period_2rS = new A.Period(0, 1, 0, 0, 0, 0, 0, 0);
    D.Period_WWj = new A.Period(0, 3, 0, 0, 0, 0, 0, 0);
    D.Period_Cto = new A.Period(0, -1, 0, 0, 0, 0, 0, 0);
    D.Map_u8guQ = new B.GeneralConstantMap([C.TraversalDirection_0, D.Period_iv9, C.TraversalDirection_1, D.Period_2rS, C.TraversalDirection_2, D.Period_WWj, C.TraversalDirection_3, D.Period_Cto], type$.GeneralConstantMap_TraversalDirection_Period);
    D.Period_qkM = new A.Period(0, 0, -7, 0, 0, 0, 0, 0);
    D.Period_MtU = new A.Period(0, 0, 1, 0, 0, 0, 0, 0);
    D.Period_2sn = new A.Period(0, 0, 7, 0, 0, 0, 0, 0);
    D.Period_YW2 = new A.Period(0, 0, -1, 0, 0, 0, 0, 0);
    D.Map_u8oBS = new B.GeneralConstantMap([C.TraversalDirection_0, D.Period_qkM, C.TraversalDirection_1, D.Period_MtU, C.TraversalDirection_2, D.Period_2sn, C.TraversalDirection_3, D.Period_YW2], type$.GeneralConstantMap_TraversalDirection_Period);
    D.Period_ios = new A.Period(-3, 0, 0, 0, 0, 0, 0, 0);
    D.Period_6fG = new A.Period(1, 0, 0, 0, 0, 0, 0, 0);
    D.Period_fS1 = new A.Period(3, 0, 0, 0, 0, 0, 0, 0);
    D.Period_E6W = new A.Period(-1, 0, 0, 0, 0, 0, 0, 0);
    D.Map_u8zac = new B.GeneralConstantMap([C.TraversalDirection_0, D.Period_ios, C.TraversalDirection_1, D.Period_6fG, C.TraversalDirection_2, D.Period_fS1, C.TraversalDirection_3, D.Period_E6W], type$.GeneralConstantMap_TraversalDirection_Period);
    D.Color_1kO = new B.Color(1, 0.9450980392156862, 0.9725490196078431, 0.9137254901960784, C.ColorSpace_0);
    D.Color_77g = new B.Color(1, 0.8627450980392157, 0.9294117647058824, 0.7843137254901961, C.ColorSpace_0);
    D.Color_fMt = new B.Color(1, 0.7725490196078432, 0.8823529411764706, 0.6470588235294118, C.ColorSpace_0);
    D.Color_COn = new B.Color(1, 0.6823529411764706, 0.8352941176470589, 0.5058823529411764, C.ColorSpace_0);
    D.Color_OuA = new B.Color(1, 0.611764705882353, 0.8, 0.396078431372549, C.ColorSpace_0);
    D.Color_ZRN = new B.Color(1, 0.5450980392156862, 0.7647058823529411, 0.2901960784313726, C.ColorSpace_0);
    D.Color_vq2 = new B.Color(1, 0.48627450980392156, 0.7019607843137254, 0.25882352941176473, C.ColorSpace_0);
    D.Color_Uwi = new B.Color(1, 0.40784313725490196, 0.6235294117647059, 0.2196078431372549, C.ColorSpace_0);
    D.Color_A3s = new B.Color(1, 0.3333333333333333, 0.5450980392156862, 0.1843137254901961, C.ColorSpace_0);
    D.Color_gCG = new B.Color(1, 0.2, 0.4117647058823529, 0.11764705882352941, C.ColorSpace_0);
    D.Map_tFRc8 = new B.GeneralConstantMap([50, D.Color_1kO, 100, D.Color_77g, 200, D.Color_fMt, 300, D.Color_COn, 400, D.Color_OuA, 500, D.Color_ZRN, 600, D.Color_vq2, 700, D.Color_Uwi, 800, D.Color_A3s, 900, D.Color_gCG], type$.GeneralConstantMap_int_Color);
    D.MaterialColor_7bM = new I.MaterialColor(D.Map_tFRc8, 1, 0.5450980392156862, 0.7647058823529411, 0.2901960784313726, C.ColorSpace_0);
    D.Color_REe = new B.Color(1, 1, 0.9921568627450981, 0.9058823529411765, C.ColorSpace_0);
    D.Color_zqk = new B.Color(1, 1, 0.9764705882352941, 0.7686274509803922, C.ColorSpace_0);
    D.Color_bL2 = new B.Color(1, 1, 0.9607843137254902, 0.615686274509804, C.ColorSpace_0);
    D.Color_oJ2 = new B.Color(1, 1, 0.9450980392156862, 0.4627450980392157, C.ColorSpace_0);
    D.Color_z6X = new B.Color(1, 1, 0.9333333333333333, 0.34509803921568627, C.ColorSpace_0);
    D.Color_1HC = new B.Color(1, 1, 0.9215686274509803, 0.23137254901960785, C.ColorSpace_0);
    D.Color_qbs = new B.Color(1, 0.9921568627450981, 0.8470588235294118, 0.20784313725490197, C.ColorSpace_0);
    D.Color_YGC = new B.Color(1, 0.984313725490196, 0.7529411764705882, 0.17647058823529413, C.ColorSpace_0);
    D.Color_XYe = new B.Color(1, 0.9764705882352941, 0.6588235294117647, 0.1450980392156863, C.ColorSpace_0);
    D.Color_OeE = new B.Color(1, 0.9607843137254902, 0.4980392156862745, 0.09019607843137255, C.ColorSpace_0);
    D.Map_tF4di = new B.GeneralConstantMap([50, D.Color_REe, 100, D.Color_zqk, 200, D.Color_bL2, 300, D.Color_oJ2, 400, D.Color_z6X, 500, D.Color_1HC, 600, D.Color_qbs, 700, D.Color_YGC, 800, D.Color_XYe, 900, D.Color_OeE], type$.GeneralConstantMap_int_Color);
    D.MaterialColor_gyN = new I.MaterialColor(D.Map_tF4di, 1, 1, 0.9215686274509803, 0.23137254901960785, C.ColorSpace_0);
    D.PageScrollPhysics_null = new A.PageScrollPhysics(null);
    D.TDSkeletonAnimation_1 = new A.TDSkeletonAnimation(1, "flashed");
    D.TDSkeletonTheme_2 = new A.TDSkeletonTheme(2, "text");
    D.TDSkeletonTheme_3 = new A.TDSkeletonTheme(3, "paragraph");
    D.Color_U2m = new B.Color(1, 0.9254901960784314, 0.9372549019607843, 0.9450980392156862, C.ColorSpace_0);
    D.Color_KQg = new B.Color(1, 0.8117647058823529, 0.8470588235294118, 0.8627450980392157, C.ColorSpace_0);
    D.Color_Y3G = new B.Color(1, 0.6901960784313725, 0.7450980392156863, 0.7725490196078432, C.ColorSpace_0);
    D.Color_VRs = new B.Color(1, 0.5647058823529412, 0.6431372549019608, 0.6823529411764706, C.ColorSpace_0);
    D.Color_85T = new B.Color(1, 0.47058823529411764, 0.5647058823529412, 0.611764705882353, C.ColorSpace_0);
    D.Color_7wc = new B.Color(1, 0.3764705882352941, 0.49019607843137253, 0.5450980392156862, C.ColorSpace_0);
    D.Color_hjN = new B.Color(1, 0.32941176470588235, 0.43137254901960786, 0.47843137254901963, C.ColorSpace_0);
    D.Color_PJw = new B.Color(1, 0.27058823529411763, 0.35294117647058826, 0.39215686274509803, C.ColorSpace_0);
    D.Color_j79 = new B.Color(1, 0.21568627450980393, 0.2784313725490196, 0.30980392156862746, C.ColorSpace_0);
    D.Color_gqh = new B.Color(1, 0.14901960784313725, 0.19607843137254902, 0.2196078431372549, C.ColorSpace_0);
    D.Map_tFl43 = new B.GeneralConstantMap([50, D.Color_U2m, 100, D.Color_KQg, 200, D.Color_Y3G, 300, D.Color_VRs, 400, D.Color_85T, 500, D.Color_7wc, 600, D.Color_hjN, 700, D.Color_PJw, 800, D.Color_j79, 900, D.Color_gqh], type$.GeneralConstantMap_int_Color);
    D.MaterialColor_M34 = new I.MaterialColor(D.Map_tFl43, 1, 0.3764705882352941, 0.49019607843137253, 0.5450980392156862, C.ColorSpace_0);
    D.TextStyle_iiK = new E.TextStyle(true, D.MaterialColor_M34, null, null, null, null, 8, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.Text_4Da = new I.Text("\u9009\u62e9\u56fe\u7247", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    D.TimeUnit_0 = new A.TimeUnit(0, "hours");
    D.TimeUnit_1 = new A.TimeUnit(1, "minutes");
    D.TimeUnit_2 = new A.TimeUnit(2, "seconds");
    D.TimeUnit_3 = new A.TimeUnit(3, "milliseconds");
    D.TimeUnit_4 = new A.TimeUnit(4, "microseconds");
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "_rnU8", "$get$_rnU8", () => B.NativeUint8List_NativeUint8List$fromList(B._setArrayType([13, 10], type$.JSArray_int)));
    _lazyFinal($, "_random", "$get$_random", () => I.Random_Random(null));
    _lazyFinal($, "_err", "$get$_err", () => B.UnsupportedError$("MultipartFile is only supported where dart:io is available."));
    _lazyFinal($, "_TDSkeletonState__loadingWidget", "$get$_TDSkeletonState__loadingWidget", () => {
      var _null = null;
      return E.Container$(_null, _null, C.Clip_0, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null);
    });
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_218", e: "endPart", h: h});
})($__dart_deferred_initializers__, "1RRpMpIeqqgRwQ/nEHM0AAczLks=");
;
//# sourceMappingURL=main.dart.js_218.part.js.map
