// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_138", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var B, D,
  A = {_ActionButton: function _ActionButton() {
    }, _ActionButton_build_closure: function _ActionButton_build_closure(t0, t1) {
      this.$this = t0;
      this.context = t1;
    }, _ActionIcon: function _ActionIcon(t0, t1, t2, t3) {
      var _ = this;
      _.iconBuilderCallback = t0;
      _.getIcon = t1;
      _.getAndroidSemanticsLabel = t2;
      _.key = t3;
    }, BackButtonIcon: function BackButtonIcon(t0) {
      this.key = t0;
    }, BackButtonIcon_build_closure: function BackButtonIcon_build_closure() {
    }, BackButtonIcon_build_closure0: function BackButtonIcon_build_closure0() {
    }, BackButtonIcon_build_closure1: function BackButtonIcon_build_closure1() {
    }, BackButton: function BackButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.standardComponent = t0;
      _.iconSize = t1;
      _.padding = t2;
      _.icon = t3;
      _.color = t4;
      _.onPressed = t5;
      _.tooltip = t6;
      _.constraints = t7;
      _.style = t8;
      _.key = t9;
    }, DrawerButtonIcon: function DrawerButtonIcon(t0) {
      this.key = t0;
    }, DrawerButtonIcon_build_closure: function DrawerButtonIcon_build_closure() {
    }, DrawerButtonIcon_build_closure0: function DrawerButtonIcon_build_closure0() {
    }, DrawerButtonIcon_build_closure1: function DrawerButtonIcon_build_closure1() {
    }, DrawerButton: function DrawerButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.standardComponent = t0;
      _.iconSize = t1;
      _.padding = t2;
      _.icon = t3;
      _.color = t4;
      _.onPressed = t5;
      _.tooltip = t6;
      _.constraints = t7;
      _.style = t8;
      _.key = t9;
    }, EndDrawerButtonIcon: function EndDrawerButtonIcon(t0) {
      this.key = t0;
    }, EndDrawerButtonIcon_build_closure: function EndDrawerButtonIcon_build_closure() {
    }, EndDrawerButtonIcon_build_closure0: function EndDrawerButtonIcon_build_closure0() {
    }, EndDrawerButtonIcon_build_closure1: function EndDrawerButtonIcon_build_closure1() {
    }, EndDrawerButton: function EndDrawerButton(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.standardComponent = t0;
      _.iconSize = t1;
      _.padding = t2;
      _.icon = t3;
      _.color = t4;
      _.onPressed = t5;
      _.tooltip = t6;
      _.constraints = t7;
      _.style = t8;
      _.key = t9;
    },
    AppBar$(actions, centerTitle, title) {
      return new A.AppBar(title, actions, centerTitle, new A._PreferredAppBarSize(null, null, 1 / 0, 56), null);
    },
    _ToolbarContainerLayout: function _ToolbarContainerLayout(t0) {
      this.toolbarHeight = t0;
    },
    _PreferredAppBarSize: function _PreferredAppBarSize(t0, t1, t2, t3) {
      var _ = this;
      _.toolbarHeight = t0;
      _.bottomHeight = t1;
      _._dx = t2;
      _._dy = t3;
    },
    AppBar: function AppBar(t0, t1, t2, t3, t4) {
      var _ = this;
      _.title = t0;
      _.actions = t1;
      _.centerTitle = t2;
      _.preferredSize = t3;
      _.key = t4;
    },
    AppBar__getEffectiveCenterTitle_platformCenter: function AppBar__getEffectiveCenterTitle_platformCenter(t0, t1) {
      this.$this = t0;
      this.theme = t1;
    },
    _AppBarState: function _AppBarState() {
      var _ = this;
      _._app_bar$_scrollNotificationObserver = null;
      _._scrolledUnder = false;
      _._framework$_element = _._widget = null;
    },
    _AppBarState__handleScrollNotification_closure: function _AppBarState__handleScrollNotification_closure() {
    },
    _AppBarTitleBox: function _AppBarTitleBox(t0, t1) {
      this.child = t0;
      this.key = t1;
    },
    _RenderAppBarTitleBox: function _RenderAppBarTitleBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _._resolvedAlignment = null;
      _._shifted_box$_alignment = t0;
      _._shifted_box$_textDirection = t1;
      _.RenderObjectWithChildMixin__child = t2;
      _._layoutCacheStorage = t3;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t4;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _AppBarDefaultsM3: function _AppBarDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _.context = t0;
      _.___AppBarDefaultsM3__textTheme_FI = _.___AppBarDefaultsM3__colors_FI = _.___AppBarDefaultsM3__theme_FI = $;
      _.backgroundColor = t1;
      _.foregroundColor = t2;
      _.elevation = t3;
      _.scrolledUnderElevation = t4;
      _.shadowColor = t5;
      _.surfaceTintColor = t6;
      _.shape = t7;
      _.iconTheme = t8;
      _.actionsIconTheme = t9;
      _.centerTitle = t10;
      _.titleSpacing = t11;
      _.toolbarHeight = t12;
      _.toolbarTextStyle = t13;
      _.titleTextStyle = t14;
      _.systemOverlayStyle = t15;
      _.actionsPadding = t16;
    },
    AnnotationEntry: function AnnotationEntry(t0, t1, t2) {
      this.annotation = t0;
      this.localPosition = t1;
      this.$ti = t2;
    },
    AnnotatedRegionLayer: function AnnotatedRegionLayer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.size = t1;
      _.offset = t2;
      _._lastChild = _._firstChild = null;
      _._callbacks = t3;
      _._compositionCallbackCount = 0;
      _._parentHandle = t4;
      _._refCount = 0;
      _._layer$_parent = null;
      _._needsAddToScene = true;
      _._layer$_owner = _._engineLayer = null;
      _._layer$_depth = 0;
      _._previousSibling = _._nextSibling = null;
      _.$ti = t5;
    },
    RenderAnnotatedRegion: function RenderAnnotatedRegion(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._proxy_box$_value = t0;
      _._sized = t1;
      _._proxy_box$_layerHandle = t2;
      _.RenderObjectWithChildMixin__child = t3;
      _._layoutCacheStorage = t4;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t5;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
      _.$ti = t6;
    },
    AnnotatedRegion: function AnnotatedRegion(t0, t1, t2, t3) {
      var _ = this;
      _.value = t0;
      _.child = t1;
      _.key = t2;
      _.$ti = t3;
    },
    MediaQuery_withClampedTextScaling(child, maxScaleFactor) {
      return new O.Builder(new A.MediaQuery_withClampedTextScaling_closure(0, maxScaleFactor, child), null);
    },
    MediaQuery_withClampedTextScaling_closure: function MediaQuery_withClampedTextScaling_closure(t0, t1, t2) {
      this.minScaleFactor = t0;
      this.maxScaleFactor = t1;
      this.child = t2;
    },
    NavigationToolbar: function NavigationToolbar(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.leading = t0;
      _.middle = t1;
      _.trailing = t2;
      _.centerMiddle = t3;
      _.middleSpacing = t4;
      _.key = t5;
    },
    _ToolbarSlot: function _ToolbarSlot(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _ToolbarLayout: function _ToolbarLayout(t0, t1, t2) {
      var _ = this;
      _.centerMiddle = t0;
      _.middleSpacing = t1;
      _.textDirection = t2;
      _._idToChild = null;
    }
  },
  C, S, T, O, U, M, V, E, W, G, L, X, F, H, P, K, Y, I, N, Q, R;
  B = holdersList[0];
  D = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[68], A);
  C = holdersList[234];
  S = holdersList[108];
  T = holdersList[131];
  O = holdersList[130];
  U = holdersList[141];
  M = holdersList[123];
  V = holdersList[144];
  E = holdersList[135];
  W = holdersList[119];
  G = holdersList[145];
  L = holdersList[111];
  X = holdersList[97];
  F = holdersList[136];
  H = holdersList[77];
  P = holdersList[126];
  K = holdersList[117];
  Y = holdersList[102];
  I = holdersList[137];
  N = holdersList[106];
  Q = holdersList[193];
  R = holdersList[98];
  A._ActionButton.prototype = {
    build$1(context) {
      var _this = this, _null = null,
        t1 = _this.standardComponent;
      t1 = t1 == null ? _null : new W.ValueKey(t1, type$.ValueKey_StandardComponentType);
      return L.IconButton$(_this.color, _null, _this.icon, _null, t1, new A._ActionButton_build_closure(_this, context), _null, _this.style, _this._getTooltip$1(context));
    }
  };
  A._ActionIcon.prototype = {
    build$1(context) {
      var t1, iconBuilder, data, semanticsLabel;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.ActionIconTheme);
      t1 = E.Theme_of(context);
      iconBuilder = this.iconBuilderCallback.call$1(t1.actionIconTheme);
      if (iconBuilder != null)
        return iconBuilder.call$1(context);
      data = this.getIcon.call$1(context);
      semanticsLabel = null;
      switch (B.defaultTargetPlatform().index) {
        case 0:
          t1 = E.Localizations_of(context, G.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
          t1.toString;
          semanticsLabel = this.getAndroidSemanticsLabel.call$1(t1);
          break;
        case 1:
        case 3:
        case 5:
        case 2:
        case 4:
          break;
      }
      return F.Icon$(data, null, semanticsLabel, null);
    }
  };
  A.BackButtonIcon.prototype = {
    build$1(context) {
      return new A._ActionIcon(new A.BackButtonIcon_build_closure(), new A.BackButtonIcon_build_closure0(), new A.BackButtonIcon_build_closure1(), null);
    }
  };
  A.BackButton.prototype = {
    _onPressedCallback$1(context) {
      return Y.Navigator_maybePop(context, type$.nullable_Object);
    },
    _getTooltip$1(context) {
      var t1 = E.Localizations_of(context, G.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
      t1.toString;
      return t1.get$backButtonTooltip();
    }
  };
  A.DrawerButtonIcon.prototype = {
    build$1(context) {
      return new A._ActionIcon(new A.DrawerButtonIcon_build_closure(), new A.DrawerButtonIcon_build_closure0(), new A.DrawerButtonIcon_build_closure1(), null);
    }
  };
  A.DrawerButton.prototype = {
    _onPressedCallback$1(context) {
      var t3, t4,
        t1 = H.Scaffold_of(context),
        t2 = t1._endDrawerKey;
      if (t2.get$currentState() != null) {
        t3 = t1._endDrawerOpened;
        t4 = t3._restoration_properties$_value;
        t3 = B.boolConversionCheck(t4 == null ? B._instanceType(t3)._eval$1("RestorableValue.T")._as(t4) : t4);
      } else
        t3 = false;
      if (t3)
        t2.get$currentState().close$0(0);
      t1 = t1._drawerKey.get$currentState();
      if (t1 != null)
        t1.open$0(0);
      return null;
    },
    _getTooltip$1(context) {
      var t1 = E.Localizations_of(context, G.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
      t1.toString;
      return t1.get$openAppDrawerTooltip();
    }
  };
  A.EndDrawerButtonIcon.prototype = {
    build$1(context) {
      return new A._ActionIcon(new A.EndDrawerButtonIcon_build_closure(), new A.EndDrawerButtonIcon_build_closure0(), new A.EndDrawerButtonIcon_build_closure1(), null);
    }
  };
  A.EndDrawerButton.prototype = {
    _onPressedCallback$1(context) {
      var t3, t4,
        t1 = H.Scaffold_of(context),
        t2 = t1._drawerKey;
      if (t2.get$currentState() != null) {
        t3 = t1._drawerOpened;
        t4 = t3._restoration_properties$_value;
        t3 = B.boolConversionCheck(t4 == null ? B._instanceType(t3)._eval$1("RestorableValue.T")._as(t4) : t4);
      } else
        t3 = false;
      if (t3)
        t2.get$currentState().close$0(0);
      t1 = t1._endDrawerKey.get$currentState();
      if (t1 != null)
        t1.open$0(0);
      return null;
    },
    _getTooltip$1(context) {
      var t1 = E.Localizations_of(context, G.Type_MaterialLocalizations_nEU, type$.MaterialLocalizations);
      t1.toString;
      return t1.get$openAppDrawerTooltip();
    }
  };
  A._ToolbarContainerLayout.prototype = {
    getConstraintsForChild$1(constraints) {
      return constraints.tighten$1$height(this.toolbarHeight);
    },
    getSize$1(constraints) {
      return new B.Size(constraints.maxWidth, this.toolbarHeight);
    },
    getPositionForChild$2(size, childSize) {
      return new B.Offset(0, size._dy - childSize._dy);
    },
    shouldRelayout$1(oldDelegate) {
      return this.toolbarHeight !== type$._ToolbarContainerLayout._as(oldDelegate).toolbarHeight;
    }
  };
  A._PreferredAppBarSize.prototype = {};
  A.AppBar.prototype = {
    _getEffectiveCenterTitle$1(theme) {
      var t1 = this.centerTitle;
      if (t1 == null)
        t1 = theme.appBarTheme.centerTitle;
      return t1 == null ? new A.AppBar__getEffectiveCenterTitle_platformCenter(this, theme).call$0() : t1;
    },
    createState$0() {
      return new A._AppBarState();
    },
    $isPreferredSizeWidget: 1,
    notificationPredicate$1(arg0) {
      return O.scroll_notification__defaultScrollNotificationPredicate$closure().call$1(arg0);
    },
    get$preferredSize() {
      return this.preferredSize;
    }
  };
  A._AppBarState.prototype = {
    didChangeDependencies$0() {
      var t1, scaffoldState, t2, _this = this;
      _this.super$State$didChangeDependencies();
      t1 = _this._app_bar$_scrollNotificationObserver;
      if (t1 != null)
        t1.removeListener$1(0, _this.get$_app_bar$_handleScrollNotification());
      scaffoldState = _this._framework$_element.findAncestorStateOfType$1$0(type$.ScaffoldState);
      if (scaffoldState != null) {
        t1 = scaffoldState._drawerOpened;
        t2 = t1._restoration_properties$_value;
        if (!(t2 == null ? B._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2)) {
          t1 = scaffoldState._endDrawerOpened;
          t2 = t1._restoration_properties$_value;
          t1 = t2 == null ? B._instanceType(t1)._eval$1("RestorableValue.T")._as(t2) : t2;
        } else
          t1 = true;
      } else
        t1 = false;
      if (t1)
        return;
      t1 = _this._framework$_element;
      t1.toString;
      t1 = _this._app_bar$_scrollNotificationObserver = N.ScrollNotificationObserver_maybeOf(t1);
      if (t1 != null) {
        t2 = type$.void_Function_ScrollNotification._as(_this.get$_app_bar$_handleScrollNotification());
        t1 = t1._scroll_notification_observer$_listeners;
        t1.toString;
        t2 = t1.$ti._precomputed1._as(new H._ListenerEntry(t2));
        t1._insertBefore$3$updateFirst(t1._collection$_first, t2, false);
      }
    },
    dispose$0() {
      var _this = this,
        t1 = _this._app_bar$_scrollNotificationObserver;
      if (t1 != null) {
        t1.removeListener$1(0, _this.get$_app_bar$_handleScrollNotification());
        _this._app_bar$_scrollNotificationObserver = null;
      }
      _this.super$State$dispose();
    },
    _app_bar$_handleScrollNotification$1(notification) {
      var oldScrolledUnder, metrics, t1, _this = this;
      type$.ScrollNotification._as(notification);
      if (notification instanceof P.ScrollUpdateNotification && B.boolConversionCheck(_this._widget.notificationPredicate$1(notification))) {
        oldScrolledUnder = _this._scrolledUnder;
        metrics = notification.metrics;
        switch (metrics.axisDirection.index) {
          case 0:
            t1 = _this._scrolledUnder = Math.max(metrics.get$maxScrollExtent() - metrics.get$pixels(), 0) > 0;
            break;
          case 2:
            t1 = _this._scrolledUnder = Math.max(metrics.get$pixels() - metrics.get$minScrollExtent(), 0) > 0;
            break;
          case 1:
          case 3:
            t1 = oldScrolledUnder;
            break;
          default:
            t1 = oldScrolledUnder;
        }
        if (t1 !== oldScrolledUnder)
          _this.setState$1(new A._AppBarState__handleScrollNotification_closure());
      }
    },
    _resolveColor$4(states, widgetColor, themeColor, defaultColor) {
      var t1, t2;
      type$.Set_WidgetState._as(states);
      t1 = type$.nullable_Color;
      t2 = M.WidgetStateProperty_resolveAs(widgetColor, states, t1);
      t1 = t2 == null ? M.WidgetStateProperty_resolveAs(themeColor, states, t1) : t2;
      return t1 == null ? M.WidgetStateProperty_resolveAs(defaultColor, states, type$.Color) : t1;
    },
    build$1(context) {
      var t1, t2, t3, toolbarHeight, t4, backgroundColor, t5, t6, scrolledUnderBackground, effectiveBackgroundColor, actionForegroundColor, foregroundColor, elevation, effectiveElevation, overallIconTheme, overallIconTheme0, actionsIconTheme, actionsPadding, toolbarTextStyle, titleTextStyle, leading, effectiveIconButtonTheme, leadingIconButtonStyle, title, title0, _0_0, actions, effectiveActionsIconButtonTheme, actionsIconButtonStyle, appBar, style, overlayStyle, _this = this, _null = null,
        theme = E.Theme_of(context),
        iconButtonTheme = L.IconButtonTheme_of(context),
        appBarTheme = E.Theme_of(context).appBarTheme,
        defaults = new A._AppBarDefaultsM3(context, _null, _null, 0, 3, _null, _null, _null, _null, _null, _null, 16, 64, _null, _null, _null, _null),
        scaffold = context.findAncestorStateOfType$1$0(type$.ScaffoldState),
        parentRoute = P.ModalRoute__of(context, _null, type$.nullable_Object);
      context.dependOnInheritedWidgetOfExactType$1$0(type$.FlexibleSpaceBarSettings);
      t1 = B.LinkedHashSet_LinkedHashSet$_empty(type$.WidgetState);
      t2 = _this._scrolledUnder;
      if (t2)
        t1.add$1(0, C.WidgetState_5);
      t2 = scaffold == null;
      if (t2)
        t3 = _null;
      else {
        scaffold._widget.toString;
        t3 = false;
      }
      if (t2)
        t2 = _null;
      else {
        scaffold._widget.toString;
        t2 = false;
      }
      _this._widget.toString;
      toolbarHeight = appBarTheme.toolbarHeight;
      if (toolbarHeight == null)
        toolbarHeight = 56;
      t4 = appBarTheme.backgroundColor;
      backgroundColor = _this._resolveColor$4(t1, _null, t4, defaults.get$backgroundColor(0));
      _this._widget.toString;
      t5 = E.Theme_of(context).colorScheme;
      t6 = t5._surfaceContainer;
      scrolledUnderBackground = _this._resolveColor$4(t1, _null, t4, t6 == null ? t5.surface : t6);
      effectiveBackgroundColor = t1.contains$1(0, C.WidgetState_5) ? scrolledUnderBackground : backgroundColor;
      _this._widget.toString;
      actionForegroundColor = appBarTheme.foregroundColor;
      foregroundColor = actionForegroundColor == null ? defaults.get$foregroundColor() : actionForegroundColor;
      _this._widget.toString;
      elevation = appBarTheme.elevation;
      if (elevation == null) {
        t4 = defaults.elevation;
        t4.toString;
        elevation = t4;
      }
      if (t1.contains$1(0, C.WidgetState_5)) {
        _this._widget.toString;
        t1 = appBarTheme.scrolledUnderElevation;
        if (t1 == null)
          t1 = defaults.scrolledUnderElevation;
        effectiveElevation = t1 == null ? elevation : t1;
      } else
        effectiveElevation = elevation;
      _this._widget.toString;
      overallIconTheme = appBarTheme.iconTheme;
      overallIconTheme0 = overallIconTheme == null ? defaults.get$iconTheme().copyWith$1$color(foregroundColor) : overallIconTheme;
      _this._widget.toString;
      t1 = appBarTheme.actionsIconTheme;
      if (t1 == null)
        t1 = _null;
      if (t1 == null)
        t1 = overallIconTheme;
      if (t1 == null) {
        t1 = defaults.get$actionsIconTheme().copyWith$1$color(actionForegroundColor);
        actionsIconTheme = t1;
      } else
        actionsIconTheme = t1;
      if (actionsIconTheme == null)
        actionsIconTheme = overallIconTheme0;
      _this._widget.toString;
      actionsPadding = appBarTheme.actionsPadding;
      if (actionsPadding == null)
        actionsPadding = defaults.get$actionsPadding();
      _this._widget.toString;
      toolbarTextStyle = appBarTheme.toolbarTextStyle;
      if (toolbarTextStyle == null) {
        t1 = defaults.get$toolbarTextStyle();
        toolbarTextStyle = t1 == null ? _null : t1.copyWith$1$color(foregroundColor);
      }
      _this._widget.toString;
      titleTextStyle = appBarTheme.titleTextStyle;
      if (titleTextStyle == null) {
        t1 = defaults.get$titleTextStyle();
        titleTextStyle = t1 == null ? _null : t1.copyWith$1$color(foregroundColor);
      }
      _this._widget.toString;
      leading = _null;
      if (t3 === true) {
        t1 = overallIconTheme0.size;
        leading = new A.DrawerButton(C.StandardComponentType_3, _null, _null, C.DrawerButtonIcon_null, _null, _null, _null, _null, K.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, t1 == null ? 24 : t1, _null, _null, _null, _null), _null);
      } else {
        t1 = parentRoute == null ? _null : parentRoute.get$impliesAppBarDismissal();
        if (t1 === true)
          leading = C.BackButton_6Oi;
      }
      if (leading != null) {
        if (overallIconTheme0.$eq(0, defaults.get$iconTheme()))
          effectiveIconButtonTheme = iconButtonTheme;
        else {
          leadingIconButtonStyle = K.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, overallIconTheme0.color, _null, _null, overallIconTheme0.size, _null, _null, _null, _null);
          t1 = iconButtonTheme.style;
          effectiveIconButtonTheme = new E.IconButtonThemeData(t1 == null ? _null : t1.copyWith$3$foregroundColor$iconSize$overlayColor(leadingIconButtonStyle.foregroundColor, leadingIconButtonStyle.iconSize, leadingIconButtonStyle.overlayColor));
        }
        t1 = F.Center$(leading, _null, _null, _null);
        leading = R.IconButtonTheme$(t1, effectiveIconButtonTheme);
        _this._widget.toString;
        leading = new F.ConstrainedBox(F.BoxConstraints$tightFor(_null, 56), leading, _null);
      }
      t1 = _this._widget;
      title = t1.title;
      title0 = new A._AppBarTitleBox(title, _null);
      _0_0 = theme.platform;
      $label0$0: {
        t3 = _null;
        if (D.TargetPlatform_0 === _0_0 || D.TargetPlatform_1 === _0_0 || D.TargetPlatform_3 === _0_0 || D.TargetPlatform_5 === _0_0) {
          t3 = true;
          break $label0$0;
        }
        if (D.TargetPlatform_2 === _0_0 || D.TargetPlatform_4 === _0_0)
          break $label0$0;
      }
      title = new B.Semantics(B.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, t3, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, title0, _null);
      titleTextStyle.toString;
      title = A.MediaQuery_withClampedTextScaling(F.DefaultTextStyle$(title, _null, _null, I.TextOverflow_2, false, titleTextStyle, _null, _null, I.TextWidthBasis_0), 1.34);
      t1 = t1.actions;
      if (t1 != null)
        actions = new F.Padding(actionsPadding, T.Row$(t1, G.CrossAxisAlignment_2, _null, G.MainAxisAlignment_0, G.MainAxisSize_0, 0, _null, _null, G.VerticalDirection_1), _null);
      else if (t2 === true) {
        t1 = overallIconTheme0.size;
        actions = new A.EndDrawerButton(_null, _null, _null, C.EndDrawerButtonIcon_null, _null, _null, _null, _null, K.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, _null, _null, _null, t1 == null ? 24 : t1, _null, _null, _null, _null), _null);
      } else
        actions = _null;
      if (actions != null) {
        if (actionsIconTheme.$eq(0, defaults.get$actionsIconTheme()))
          effectiveActionsIconButtonTheme = iconButtonTheme;
        else {
          actionsIconButtonStyle = K.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, actionsIconTheme.color, _null, _null, actionsIconTheme.size, _null, _null, _null, _null);
          t1 = iconButtonTheme.style;
          effectiveActionsIconButtonTheme = new E.IconButtonThemeData(t1 == null ? _null : t1.copyWith$3$foregroundColor$iconSize$overlayColor(actionsIconButtonStyle.foregroundColor, actionsIconButtonStyle.iconSize, actionsIconButtonStyle.overlayColor));
        }
        actions = R.IconButtonTheme$(K.IconTheme_merge(actions, actionsIconTheme), effectiveActionsIconButtonTheme);
      }
      t1 = _this._widget._getEffectiveCenterTitle$1(theme);
      _this._widget.toString;
      t2 = appBarTheme.titleSpacing;
      if (t2 == null)
        t2 = 16;
      toolbarTextStyle.toString;
      appBar = S.ClipRect$(new L.CustomSingleChildLayout(new A._ToolbarContainerLayout(toolbarHeight), K.IconTheme_merge(F.DefaultTextStyle$(new A.NavigationToolbar(leading, title, actions, t1, t2, _null), _null, _null, I.TextOverflow_0, true, toolbarTextStyle, _null, _null, I.TextWidthBasis_0), overallIconTheme0), _null), D.Clip_1);
      appBar = X.SafeArea$(false, appBar, _null, true, D.EdgeInsets_0_0_0_0, true, true);
      t1 = E.ThemeData_estimateBrightnessForColor(effectiveBackgroundColor);
      style = t1 === D.Brightness_0 ? C.SystemUiOverlayStyle_PSv : C.SystemUiOverlayStyle_4qY;
      overlayStyle = new B.SystemUiOverlayStyle(_null, _null, _null, _null, D.Color_Edl, style.statusBarBrightness, style.statusBarIconBrightness, style.systemStatusBarContrastEnforced);
      _this._widget.toString;
      t1 = appBarTheme.shadowColor;
      if (t1 == null)
        t1 = defaults.get$shadowColor(0);
      _this._widget.toString;
      t2 = appBarTheme.surfaceTintColor;
      if (t2 == null) {
        t2 = theme.colorScheme;
        t3 = t2._surfaceTint;
        t2 = t3 == null ? t2.primary : t3;
      }
      t3 = appBarTheme.shape;
      if (t3 == null)
        t3 = defaults.shape;
      t1 = M.Material$(D.Duration_200000, true, _null, new B.Semantics(B.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), false, true, false, false, new F.Align(U.Alignment_0_m1, _null, _null, appBar, _null), _null), D.Clip_0, effectiveBackgroundColor, effectiveElevation, _null, t1, t3, t2, _null, V.MaterialType_0);
      return new B.Semantics(B.SemanticsProperties$(_null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null), true, false, false, false, new A.AnnotatedRegion(overlayStyle, t1, _null, type$.AnnotatedRegion_SystemUiOverlayStyle), _null);
    }
  };
  A._AppBarTitleBox.prototype = {
    createRenderObject$1(context) {
      var t1 = new A._RenderAppBarTitleBox(I.Alignment_0_0, context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection, null, new B._LayoutCacheStorage(), B.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      type$._RenderAppBarTitleBox._as(renderObject).set$textDirection(context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection);
    }
  };
  A._RenderAppBarTitleBox.prototype = {
    computeDryLayout$1(constraints) {
      var innerConstraints = constraints.copyWith$1$maxHeight(1 / 0),
        t1 = this.RenderObjectWithChildMixin__child;
      return constraints.constrain$1(t1._computeIntrinsics$2$3(D.C__DryLayout, innerConstraints, t1.get$_computeDryLayout(), type$.BoxConstraints, type$.Size));
    },
    computeDryBaseline$2(constraints, baseline) {
      var innerConstraints, child, result, t2, childSize, _this = this,
        t1 = type$.BoxConstraints;
      t1._as(constraints);
      type$.TextBaseline._as(baseline);
      innerConstraints = constraints.copyWith$1$maxHeight(1 / 0);
      child = _this.RenderObjectWithChildMixin__child;
      if (child == null)
        return null;
      result = child.getDryBaseline$2(innerConstraints, baseline);
      if (result == null)
        return null;
      t2 = type$.Size;
      childSize = child._computeIntrinsics$2$3(D.C__DryLayout, innerConstraints, child.get$_computeDryLayout(), t1, t2);
      return result + _this.get$resolvedAlignment().alongOffset$1(type$.Offset._as(_this._computeIntrinsics$2$3(D.C__DryLayout, constraints, _this.get$_computeDryLayout(), t1, t2).$sub(0, childSize)))._dy;
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints,
        innerConstraints = t1._as(B.RenderObject.prototype.get$constraints.call(_this)).copyWith$1$maxHeight(1 / 0);
      _this.RenderObjectWithChildMixin__child.layout$2$parentUsesSize(innerConstraints, true);
      _this._box$_size = t1._as(B.RenderObject.prototype.get$constraints.call(_this)).constrain$1(_this.RenderObjectWithChildMixin__child.get$size(0));
      _this.alignChild$0();
    }
  };
  A._AppBarDefaultsM3.prototype = {
    get$_app_bar$_theme() {
      var result, _this = this,
        value = _this.___AppBarDefaultsM3__theme_FI;
      if (value === $) {
        result = E.Theme_of(_this.context);
        _this.___AppBarDefaultsM3__theme_FI !== $ && B.throwLateFieldADI("_theme");
        _this.___AppBarDefaultsM3__theme_FI = result;
        value = result;
      }
      return value;
    },
    get$_app_bar$_colors() {
      var t1, _this = this,
        value = _this.___AppBarDefaultsM3__colors_FI;
      if (value === $) {
        t1 = _this.get$_app_bar$_theme();
        _this.___AppBarDefaultsM3__colors_FI !== $ && B.throwLateFieldADI("_colors");
        value = _this.___AppBarDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$_app_bar$_textTheme() {
      var t1, _this = this,
        value = _this.___AppBarDefaultsM3__textTheme_FI;
      if (value === $) {
        t1 = _this.get$_app_bar$_theme();
        _this.___AppBarDefaultsM3__textTheme_FI !== $ && B.throwLateFieldADI("_textTheme");
        value = _this.___AppBarDefaultsM3__textTheme_FI = t1.textTheme;
      }
      return value;
    },
    get$backgroundColor(_) {
      return this.get$_app_bar$_colors().surface;
    },
    get$foregroundColor() {
      return this.get$_app_bar$_colors().onSurface;
    },
    get$shadowColor(_) {
      return D.Color_Edl;
    },
    get$surfaceTintColor() {
      return D.Color_Edl;
    },
    get$iconTheme() {
      var _null = null;
      return new F.IconThemeData(24, _null, _null, _null, _null, this.get$_app_bar$_colors().onSurface, _null, _null, _null);
    },
    get$actionsIconTheme() {
      var _null = null,
        t1 = this.get$_app_bar$_colors(),
        t2 = t1._onSurfaceVariant;
      return new F.IconThemeData(24, _null, _null, _null, _null, t2 == null ? t1.onSurface : t2, _null, _null, _null);
    },
    get$toolbarTextStyle() {
      return this.get$_app_bar$_textTheme().bodyMedium;
    },
    get$titleTextStyle() {
      return this.get$_app_bar$_textTheme().titleLarge;
    },
    get$actionsPadding() {
      return D.EdgeInsets_0_0_0_0;
    }
  };
  A.AnnotationEntry.prototype = {
    toString$0(_) {
      return "AnnotationEntry(annotation: " + this.annotation.toString$0(0) + ", localPosition: " + this.localPosition.toString$0(0) + ")";
    }
  };
  A.AnnotatedRegionLayer.prototype = {
    findAnnotations$1$3$onlyFirst(result, localPosition, onlyFirst, $S) {
      var isAbsorbed, t1, t2, t3, t4, _this = this;
      B.checkTypeBound($S, type$.Object, "S", "findAnnotations");
      $S._eval$1("AnnotationResult<0>")._as(result);
      isAbsorbed = _this.super$ContainerLayer$findAnnotations(result, localPosition, true, $S);
      t1 = result._layer$_entries;
      t2 = t1.length;
      if (t2 !== 0)
        return isAbsorbed;
      t2 = _this.size;
      if (t2 != null) {
        t3 = _this.offset;
        t4 = t3._dx;
        t3 = t3._dy;
        t2 = !new B.Rect(t4, t3, t4 + t2._dx, t3 + t2._dy).contains$1(0, localPosition);
      } else
        t2 = false;
      if (t2)
        return isAbsorbed;
      if (B.createRuntimeType(_this.$ti._precomputed1) === B.createRuntimeType($S))
        D.JSArray_methods.add$1(t1, result.$ti._eval$1("AnnotationEntry<1>")._as(new A.AnnotationEntry($S._as(_this.value), localPosition.$sub(0, _this.offset), $S._eval$1("AnnotationEntry<0>"))));
      return isAbsorbed;
    }
  };
  A.RenderAnnotatedRegion.prototype = {
    set$value(_, newValue) {
      var _this = this;
      _this.$ti._precomputed1._as(newValue);
      if (_this._proxy_box$_value.$eq(0, newValue))
        return;
      _this.set$_proxy_box$_value(newValue);
      _this.markNeedsPaint$0();
    },
    set$sized(value) {
      return;
    },
    paint$2(context, offset) {
      var _this = this,
        t1 = _this._proxy_box$_value,
        t2 = _this.get$size(0),
        layer = new A.AnnotatedRegionLayer(t1, t2, offset, B.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.void_Function), B.LayerHandle$(type$.Layer), _this.$ti._eval$1("AnnotatedRegionLayer<1>"));
      _this._proxy_box$_layerHandle.set$layer(0, layer);
      context.pushLayer$3(layer, B.RenderProxyBoxMixin.prototype.get$paint.call(_this), offset);
    },
    dispose$0() {
      this._proxy_box$_layerHandle.set$layer(0, null);
      this.super$RenderObject$dispose();
    },
    set$_proxy_box$_value(_value) {
      this._proxy_box$_value = this.$ti._precomputed1._as(_value);
    },
    get$alwaysNeedsCompositing() {
      return true;
    }
  };
  A.AnnotatedRegion.prototype = {
    createRenderObject$1(context) {
      var t1 = this.$ti;
      t1 = new A.RenderAnnotatedRegion(this.value, true, B.LayerHandle$(t1._eval$1("AnnotatedRegionLayer<1>")), null, new B._LayoutCacheStorage(), B.LayerHandle$(type$.ContainerLayer), t1._eval$1("RenderAnnotatedRegion<1>"));
      t1.RenderObject$0();
      t1.set$child(null);
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      this.$ti._eval$1("RenderAnnotatedRegion<1>")._as(renderObject);
      renderObject.set$value(0, this.value);
      renderObject.set$sized(true);
    }
  };
  A.NavigationToolbar.prototype = {
    build$1(context) {
      var _this = this,
        textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection,
        t1 = B._setArrayType([], type$.JSArray_Widget),
        t2 = _this.leading;
      if (t2 != null)
        t1.push(H.LayoutId$(t2, C._ToolbarSlot_0));
      t2 = _this.middle;
      if (t2 != null)
        t1.push(H.LayoutId$(t2, C._ToolbarSlot_1));
      t2 = _this.trailing;
      if (t2 != null)
        t1.push(H.LayoutId$(t2, C._ToolbarSlot_2));
      return new H.CustomMultiChildLayout(new A._ToolbarLayout(_this.centerMiddle, _this.middleSpacing, textDirection), t1, null);
    }
  };
  A._ToolbarSlot.prototype = {
    _enumToString$0() {
      return "_ToolbarSlot." + this._name;
    }
  };
  A._ToolbarLayout.prototype = {
    performLayout$1(size) {
      var t1, t2, leadingWidth, trailingSize, trailingWidth, maxWidth, middleSize, middleStartMargin, t3, middleStart, t4, _this = this;
      if (_this._idToChild.$index(0, C._ToolbarSlot_0) != null) {
        t1 = size._dx;
        t2 = size._dy;
        leadingWidth = _this.layoutChild$2(C._ToolbarSlot_0, new B.BoxConstraints(0, t1, t2, t2))._dx;
        switch (_this.textDirection.index) {
          case 0:
            t1 -= leadingWidth;
            break;
          case 1:
            t1 = 0;
            break;
          default:
            t1 = null;
        }
        _this.positionChild$2(C._ToolbarSlot_0, new B.Offset(t1, 0));
      } else
        leadingWidth = 0;
      if (_this._idToChild.$index(0, C._ToolbarSlot_2) != null) {
        trailingSize = _this.layoutChild$2(C._ToolbarSlot_2, N.BoxConstraints$loose(size));
        switch (_this.textDirection.index) {
          case 0:
            t1 = 0;
            break;
          case 1:
            t1 = size._dx - trailingSize._dx;
            break;
          default:
            t1 = null;
        }
        trailingWidth = trailingSize._dx;
        _this.positionChild$2(C._ToolbarSlot_2, new B.Offset(t1, (size._dy - trailingSize._dy) / 2));
      } else
        trailingWidth = 0;
      if (_this._idToChild.$index(0, C._ToolbarSlot_1) != null) {
        t1 = size._dx;
        t2 = _this.middleSpacing;
        maxWidth = Math.max(t1 - leadingWidth - trailingWidth - t2 * 2, 0);
        middleSize = _this.layoutChild$2(C._ToolbarSlot_1, N.BoxConstraints$loose(size).copyWith$1$maxWidth(maxWidth));
        middleStartMargin = leadingWidth + t2;
        if (_this.centerMiddle) {
          t3 = middleSize._dx;
          middleStart = (t1 - t3) / 2;
          t4 = t1 - trailingWidth;
          if (middleStart + t3 > t4)
            middleStart = t4 - t3 - t2;
          else if (middleStart < middleStartMargin)
            middleStart = middleStartMargin;
        } else
          middleStart = middleStartMargin;
        switch (_this.textDirection.index) {
          case 0:
            t1 = t1 - middleSize._dx - middleStart;
            break;
          case 1:
            t1 = middleStart;
            break;
          default:
            t1 = null;
        }
        _this.positionChild$2(C._ToolbarSlot_1, new B.Offset(t1, (size._dy - middleSize._dy) / 2));
      }
    },
    shouldRelayout$1(oldDelegate) {
      type$._ToolbarLayout._as(oldDelegate);
      return oldDelegate.centerMiddle !== this.centerMiddle || oldDelegate.middleSpacing !== this.middleSpacing || oldDelegate.textDirection !== this.textDirection;
    }
  };
  var typesOffset = hunkHelpers.updateTypes(["Widget(BuildContext)?(ActionIconThemeData?)", "IconData(BuildContext)", "String(MaterialLocalizations)", "~(ScrollNotification)"]);
  A._ActionButton_build_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.onPressed;
      if (t2 != null)
        t2.call$0();
      else
        t1._onPressedCallback$1(this.context);
    },
    $signature: 0
  };
  A.BackButtonIcon_build_closure.prototype = {
    call$1(actionIconTheme) {
      type$.nullable_ActionIconThemeData._as(actionIconTheme);
      return actionIconTheme == null ? null : actionIconTheme.backButtonIconBuilder;
    },
    $signature: typesOffset + 0
  };
  A.BackButtonIcon_build_closure0.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      return Q.IconData_57490_MaterialIcons_null_true;
    },
    $signature: typesOffset + 1
  };
  A.BackButtonIcon_build_closure1.prototype = {
    call$1(materialLocalization) {
      return type$.MaterialLocalizations._as(materialLocalization).get$backButtonTooltip();
    },
    $signature: typesOffset + 2
  };
  A.DrawerButtonIcon_build_closure.prototype = {
    call$1(actionIconTheme) {
      type$.nullable_ActionIconThemeData._as(actionIconTheme);
      return actionIconTheme == null ? null : actionIconTheme.drawerButtonIconBuilder;
    },
    $signature: typesOffset + 0
  };
  A.DrawerButtonIcon_build_closure0.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      return C.IconData_58332_MaterialIcons_null_false;
    },
    $signature: typesOffset + 1
  };
  A.DrawerButtonIcon_build_closure1.prototype = {
    call$1(materialLocalization) {
      return type$.MaterialLocalizations._as(materialLocalization).get$openAppDrawerTooltip();
    },
    $signature: typesOffset + 2
  };
  A.EndDrawerButtonIcon_build_closure.prototype = {
    call$1(actionIconTheme) {
      type$.nullable_ActionIconThemeData._as(actionIconTheme);
      return actionIconTheme == null ? null : actionIconTheme.endDrawerButtonIconBuilder;
    },
    $signature: typesOffset + 0
  };
  A.EndDrawerButtonIcon_build_closure0.prototype = {
    call$1(context) {
      type$.BuildContext._as(context);
      return C.IconData_58332_MaterialIcons_null_false;
    },
    $signature: typesOffset + 1
  };
  A.EndDrawerButtonIcon_build_closure1.prototype = {
    call$1(materialLocalization) {
      return type$.MaterialLocalizations._as(materialLocalization).get$openAppDrawerTooltip();
    },
    $signature: typesOffset + 2
  };
  A.AppBar__getEffectiveCenterTitle_platformCenter.prototype = {
    call$0() {
      switch (this.theme.platform.index) {
        case 0:
        case 1:
        case 3:
        case 5:
          return false;
        case 2:
        case 4:
          return true;
      }
    },
    $signature: 43
  };
  A._AppBarState__handleScrollNotification_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.MediaQuery_withClampedTextScaling_closure.prototype = {
    call$1(context) {
      var data = B.InheritedModel_inheritFrom(type$.BuildContext._as(context), null, type$.MediaQuery).data;
      return B.MediaQuery$(this.child, data.copyWith$1$textScaler(data.get$textScaler().clamp$2$maxScaleFactor$minScaleFactor(0, this.maxScaleFactor, this.minScaleFactor)));
    },
    $signature: 150
  };
  (function installTearOffs() {
    var _instance_1_u = hunkHelpers._instance_1u;
    _instance_1_u(A._AppBarState.prototype, "get$_app_bar$_handleScrollNotification", "_app_bar$_handleScrollNotification$1", 3);
  })();
  (function inheritance() {
    var _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A._ActionButton, L.IconButton);
    _inheritMany(B.Closure0Args, [A._ActionButton_build_closure, A.AppBar__getEffectiveCenterTitle_platformCenter, A._AppBarState__handleScrollNotification_closure]);
    _inheritMany(B.StatelessWidget, [A._ActionIcon, A.BackButtonIcon, A.DrawerButtonIcon, A.EndDrawerButtonIcon, A.NavigationToolbar]);
    _inheritMany(B.Closure, [A.BackButtonIcon_build_closure, A.BackButtonIcon_build_closure0, A.BackButtonIcon_build_closure1, A.DrawerButtonIcon_build_closure, A.DrawerButtonIcon_build_closure0, A.DrawerButtonIcon_build_closure1, A.EndDrawerButtonIcon_build_closure, A.EndDrawerButtonIcon_build_closure0, A.EndDrawerButtonIcon_build_closure1, A.MediaQuery_withClampedTextScaling_closure]);
    _inheritMany(A._ActionButton, [A.BackButton, A.DrawerButton, A.EndDrawerButton]);
    _inherit(A._ToolbarContainerLayout, L.SingleChildLayoutDelegate);
    _inherit(A._PreferredAppBarSize, B.Size);
    _inherit(A.AppBar, B.StatefulWidget);
    _inherit(A._AppBarState, B.State);
    _inheritMany(B.SingleChildRenderObjectWidget, [A._AppBarTitleBox, A.AnnotatedRegion]);
    _inherit(A._RenderAppBarTitleBox, F.RenderAligningShiftedBox);
    _inherit(A._AppBarDefaultsM3, E.AppBarTheme);
    _inherit(A.AnnotationEntry, B.Object);
    _inherit(A.AnnotatedRegionLayer, B.ContainerLayer0);
    _inherit(A.RenderAnnotatedRegion, B.RenderProxyBox);
    _inherit(A._ToolbarSlot, B._Enum);
    _inherit(A._ToolbarLayout, H.MultiChildLayoutDelegate);
  })();
  B._Universe_addRules(init.typeUniverse, JSON.parse('{"_ActionButton":{"IconButton":[],"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ActionIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BackButtonIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"BackButton":{"IconButton":[],"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerButtonIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"DrawerButton":{"IconButton":[],"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"EndDrawerButtonIcon":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"EndDrawerButton":{"IconButton":[],"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"AppBar":{"StatefulWidget":[],"PreferredSizeWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ToolbarContainerLayout":{"SingleChildLayoutDelegate":[]},"_PreferredAppBarSize":{"Size":[],"OffsetBase":[]},"_AppBarState":{"State":["AppBar"],"State.T":"AppBar"},"_AppBarTitleBox":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"_RenderAppBarTitleBox":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"_AppBarDefaultsM3":{"AppBarTheme":[]},"AnnotatedRegionLayer":{"ContainerLayer0":[],"Layer0":[],"DiagnosticableTree":[]},"RenderAnnotatedRegion":{"RenderBox":[],"RenderObjectWithChildMixin":["RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"RenderObjectWithChildMixin.0":"RenderBox"},"AnnotatedRegion":{"SingleChildRenderObjectWidget":[],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[]},"NavigationToolbar":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ToolbarSlot":{"Enum":[]},"_ToolbarLayout":{"MultiChildLayoutDelegate":[]},"ActionIconTheme":{"InheritedTheme":[],"InheritedWidget":[],"ProxyWidget":[],"Widget":[],"DiagnosticableTree":[]}}'));
  var type$ = (function rtii() {
    var findType = B.findType;
    return {
      ActionIconTheme: findType("ActionIconTheme"),
      AnnotatedRegion_SystemUiOverlayStyle: findType("AnnotatedRegion<SystemUiOverlayStyle>"),
      BoxConstraints: findType("BoxConstraints"),
      BuildContext: findType("BuildContext"),
      Color: findType("Color"),
      ContainerLayer: findType("ContainerLayer0"),
      Directionality: findType("Directionality"),
      FlexibleSpaceBarSettings: findType("FlexibleSpaceBarSettings"),
      JSArray_Widget: findType("JSArray<Widget>"),
      Layer: findType("Layer0"),
      MaterialLocalizations: findType("MaterialLocalizations"),
      MediaQuery: findType("MediaQuery"),
      Object: findType("Object"),
      Offset: findType("Offset"),
      ScaffoldState: findType("ScaffoldState"),
      ScrollNotification: findType("ScrollNotification"),
      Set_WidgetState: findType("Set<WidgetState>"),
      Size: findType("Size"),
      TextBaseline: findType("TextBaseline"),
      ValueKey_StandardComponentType: findType("ValueKey<StandardComponentType>"),
      WidgetState: findType("WidgetState"),
      _RenderAppBarTitleBox: findType("_RenderAppBarTitleBox"),
      _ToolbarContainerLayout: findType("_ToolbarContainerLayout"),
      _ToolbarLayout: findType("_ToolbarLayout"),
      int: findType("int"),
      nullable_ActionIconThemeData: findType("ActionIconThemeData?"),
      nullable_Color: findType("Color?"),
      nullable_Object: findType("Object?"),
      void_Function: findType("~()"),
      void_Function_ScrollNotification: findType("~(ScrollNotification)")
    };
  })();
  (function constants() {
    C.BackButtonIcon_null = new A.BackButtonIcon(null);
    C.BackButton_6Oi = new A.BackButton(Q.StandardComponentType_0, null, null, C.BackButtonIcon_null, null, null, null, null, null, null);
    C.DrawerButtonIcon_null = new A.DrawerButtonIcon(null);
    C.EndDrawerButtonIcon_null = new A.EndDrawerButtonIcon(null);
    C.IconData_58332_MaterialIcons_null_false = new F.IconData(58332, "MaterialIcons", null, false);
    C.StandardComponentType_3 = new N.StandardComponentType(3, "drawerButton");
    C.SystemUiOverlayStyle_4qY = new B.SystemUiOverlayStyle(I.Color_vnR, null, D.Brightness_1, null, null, D.Brightness_1, D.Brightness_0, null);
    C.SystemUiOverlayStyle_PSv = new B.SystemUiOverlayStyle(I.Color_vnR, null, D.Brightness_1, null, null, D.Brightness_0, D.Brightness_1, null);
    C.WidgetState_5 = new F.WidgetState(5, "scrolledUnder");
    C._ToolbarSlot_0 = new A._ToolbarSlot(0, "leading");
    C._ToolbarSlot_1 = new A._ToolbarSlot(1, "middle");
    C._ToolbarSlot_2 = new A._ToolbarSlot(2, "trailing");
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_138", e: "endPart", h: h});
})($__dart_deferred_initializers__, "kob+0g6xUCPxud/g/9ZakPhOzHA=");
;
//# sourceMappingURL=main.dart.js_138.part.js.map
