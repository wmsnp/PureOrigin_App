// Generated by dart2js (NullSafetyMode.sound, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.7.2.
((s, d, e) => {
  s[d] = s[d] || {};
  s[d][e] = s[d][e] || [];
  s[d][e].push({p: "main.dart.js_220", e: "beginPart"});
})(self, "$__dart_deferred_initializers__", "eventLog");
$__dart_deferred_initializers__.current = function(hunkHelpers, init, holdersList, $) {
  var J, C, D,
  A = {Ink: function Ink(t0, t1, t2) {
      this.child = t0;
      this.decoration = t1;
      this.key = t2;
    }, _InkState: function _InkState(t0) {
      var _ = this;
      _._boxKey = t0;
      _._framework$_element = _._widget = _._ink = null;
    }, InkDecoration: function InkDecoration(t0, t1, t2, t3) {
      var _ = this;
      _._ink_decoration$_decoration = _._ink_decoration$_painter = null;
      _._ink_decoration$_isVisible = true;
      _._ink_decoration$_configuration = t0;
      _._material$_controller = t1;
      _.referenceBox = t2;
      _.onRemoved = t3;
    },
    ListTile$(leading, onLongPress, onTap, subtitle, title) {
      return new A.ListTile(leading, title, subtitle, onTap, onLongPress, null);
    },
    _RenderListTile__positionBox(box, offset) {
      var t1 = box.parentData;
      t1.toString;
      type$.BoxParentData._as(t1).offset = offset;
    },
    ListTileTitleAlignment: function ListTileTitleAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ListTile: function ListTile(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.leading = t0;
      _.title = t1;
      _.subtitle = t2;
      _.onTap = t3;
      _.onLongPress = t4;
      _.key = t5;
    },
    ListTile_build_resolveColor: function ListTile_build_resolveColor(t0) {
      this.states = t0;
    },
    _IndividualOverrides: function _IndividualOverrides(t0, t1, t2, t3) {
      var _ = this;
      _.explicitColor = t0;
      _.enabledColor = t1;
      _.selectedColor = t2;
      _.disabledColor = t3;
    },
    _ListTileSlot: function _ListTileSlot(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _ListTile: function _ListTile(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _.leading = t0;
      _.title = t1;
      _.subtitle = t2;
      _.trailing = t3;
      _.isThreeLine = t4;
      _.isDense = t5;
      _.visualDensity = t6;
      _.textDirection = t7;
      _.titleBaselineType = t8;
      _.subtitleBaselineType = t9;
      _.horizontalTitleGap = t10;
      _.minVerticalPadding = t11;
      _.minLeadingWidth = t12;
      _.minTileHeight = t13;
      _.titleAlignment = t14;
      _.key = t15;
    },
    _RenderListTile: function _RenderListTile(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _._isDense = t0;
      _._visualDensity = t1;
      _._isThreeLine = t2;
      _._list_tile$_textDirection = t3;
      _._titleBaselineType = t4;
      _._subtitleBaselineType = t5;
      _._horizontalTitleGap = t6;
      _._minVerticalPadding = t7;
      _._minLeadingWidth = t8;
      _._minTileHeight = t9;
      _._titleAlignment = t10;
      _.SlottedContainerRenderObjectMixin__slotToChild = t11;
      _._layoutCacheStorage = t12;
      _.parentData = _._box$_size = null;
      _._depth = 0;
      _._object$_owner = _._object$_parent = null;
      _._needsLayout = true;
      _._relayoutBoundary = null;
      _._doingThisLayoutWithCallback = false;
      _._constraints = null;
      _.__RenderObject__wasRepaintBoundary_A = $;
      _._layerHandle = t13;
      _._needsCompositingBitsUpdate = false;
      _.__RenderObject__needsCompositing_A = $;
      _._needsPaint = true;
      _._needsCompositedLayerUpdate = false;
      _._cachedSemanticsConfiguration = null;
      _._needsSemanticsUpdate = true;
      _._semantics = null;
    },
    _RenderListTile_paint_doPaint: function _RenderListTile_paint_doPaint(t0, t1) {
      this.context = t0;
      this.offset = t1;
    },
    _RenderListTile_hitTestChildren_closure: function _RenderListTile_hitTestChildren_closure(t0) {
      this.child = t0;
    },
    _LisTileDefaultsM3: function _LisTileDefaultsM3(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21) {
      var _ = this;
      _.context = t0;
      _.___LisTileDefaultsM3__textTheme_FI = _.___LisTileDefaultsM3__colors_FI = _.___LisTileDefaultsM3__theme_FI = $;
      _.dense = t1;
      _.shape = t2;
      _.style = t3;
      _.selectedColor = t4;
      _.iconColor = t5;
      _.textColor = t6;
      _.titleTextStyle = t7;
      _.subtitleTextStyle = t8;
      _.leadingAndTrailingTextStyle = t9;
      _.contentPadding = t10;
      _.tileColor = t11;
      _.selectedTileColor = t12;
      _.horizontalTitleGap = t13;
      _.minVerticalPadding = t14;
      _.minLeadingWidth = t15;
      _.minTileHeight = t16;
      _.enableFeedback = t17;
      _.mouseCursor = t18;
      _.visualDensity = t19;
      _.titleAlignment = t20;
      _.controlAffinity = t21;
    },
    __RenderListTile_RenderBox_SlottedContainerRenderObjectMixin: function __RenderListTile_RenderBox_SlottedContainerRenderObjectMixin() {
    },
    Visibility_of(context) {
      var t1, ancestor, isVisible, _box_0 = {};
      _box_0.ancestorContext = context;
      t1 = type$._VisibilityScope;
      ancestor = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      isVisible = true;
      while (true) {
        if (!(isVisible && ancestor != null))
          break;
        isVisible = t1._as(context.dependOnInheritedElement$1(ancestor)).isVisible;
        ancestor.visitAncestorElements$1(new A.Visibility_of_closure(_box_0));
        ancestor = _box_0.ancestorContext.getElementForInheritedWidgetOfExactType$1$0(t1);
      }
      return isVisible;
    },
    Visibility_of_closure: function Visibility_of_closure(t0) {
      this._box_0 = t0;
    },
    WidgetStateProperty: function WidgetStateProperty() {
    }
  },
  B, L, M, F, N, G, O, P, Q, E, K, R, H, I;
  J = holdersList[1];
  C = holdersList[0];
  D = holdersList[2];
  A = hunkHelpers.updateHolder(holdersList[21], A);
  B = holdersList[216];
  L = holdersList[149];
  M = holdersList[130];
  F = holdersList[123];
  N = holdersList[144];
  G = holdersList[135];
  O = holdersList[114];
  P = holdersList[172];
  Q = holdersList[97];
  E = holdersList[136];
  K = holdersList[117];
  R = holdersList[89];
  H = holdersList[137];
  I = holdersList[98];
  A.Ink.prototype = {
    get$_ink_decoration$_paddingIncludingDecoration() {
      var _0_40, _0_5, t2, padding,
        t1 = this.decoration,
        _0_4 = t1 == null ? null : t1.get$padding(t1);
      $label0$0: {
        _0_40 = null;
        _0_5 = _0_4 == null;
        t2 = _0_5;
        C.boolConversionCheck(t2);
        if (t2) {
          t1 = D.EdgeInsets_0_0_0_0;
          break $label0$0;
        }
        t2 = _0_4 instanceof C.EdgeInsetsGeometry;
        if (t2) {
          padding = _0_4 == null ? type$.EdgeInsetsGeometry._as(_0_4) : _0_4;
          t1 = padding;
          break $label0$0;
        }
        null.toString;
        t1 = null.add$1(0, t1.get$padding(t1));
        break $label0$0;
      }
      return t1;
    },
    createState$0() {
      return new A._InkState(new G.LabeledGlobalKey(null, type$.LabeledGlobalKey_State_StatefulWidget));
    }
  };
  A._InkState.prototype = {
    _handleRemoved$0() {
      this._ink = null;
    },
    deactivate$0() {
      var t1 = this._ink;
      if (t1 != null)
        t1.dispose$0();
      this.super$State$deactivate();
    },
    _build$1(context) {
      var t1, t2, t3, t4, t5, _this = this;
      type$.BuildContext._as(context);
      t1 = _this._ink;
      t2 = _this._widget;
      if (t1 == null) {
        t1 = t2.decoration;
        t2 = A.Visibility_of(context);
        t3 = E.createLocalImageConfiguration(context, null);
        t4 = F.LookupBoundary_findAncestorRenderObjectOfType(context, type$._RenderInkFeatures);
        t4.toString;
        t5 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, _this._boxKey).get$renderObject();
        t5.toString;
        t5 = new A.InkDecoration(t3, t4, type$.RenderBox._as(t5), _this.get$_handleRemoved());
        t5.set$decoration(t1);
        t5.set$isVisible(t2);
        t4.addInkFeature$1(t5);
        _this._ink = t5;
      } else {
        t1.set$decoration(t2.decoration);
        t1 = _this._ink;
        t1.toString;
        t1.set$isVisible(A.Visibility_of(context));
        t1 = _this._ink;
        t1.toString;
        t1.set$configuration(E.createLocalImageConfiguration(context, null));
      }
      t1 = _this._widget.child;
      return t1;
    },
    build$1(context) {
      var _this = this,
        t1 = _this._widget.get$_ink_decoration$_paddingIncludingDecoration();
      _this._widget.toString;
      return new E.Padding(t1, new M.Builder(_this.get$_build(), null), _this._boxKey);
    }
  };
  A.InkDecoration.prototype = {
    set$decoration(value) {
      var t1, _this = this;
      if (J.$eq$(value, _this._ink_decoration$_decoration))
        return;
      _this._ink_decoration$_decoration = value;
      t1 = _this._ink_decoration$_painter;
      if (t1 != null)
        t1.dispose$0();
      t1 = _this._ink_decoration$_decoration;
      _this._ink_decoration$_painter = t1 == null ? null : t1.createBoxPainter$1(_this.get$_handleChanged());
      _this._material$_controller.markNeedsPaint$0();
    },
    set$isVisible(value) {
      if (value === this._ink_decoration$_isVisible)
        return;
      this._ink_decoration$_isVisible = value;
      this._material$_controller.markNeedsPaint$0();
    },
    set$configuration(value) {
      if (value.$eq(0, this._ink_decoration$_configuration))
        return;
      this._ink_decoration$_configuration = value;
      this._material$_controller.markNeedsPaint$0();
    },
    _handleChanged$0() {
      this._material$_controller.markNeedsPaint$0();
    },
    dispose$0() {
      var t1 = this._ink_decoration$_painter;
      if (t1 != null)
        t1.dispose$0();
      this.super$InkFeature$dispose();
    },
    paintFeature$2(canvas, transform) {
      var originOffset, sizedConfiguration, _this = this;
      if (_this._ink_decoration$_painter == null || !_this._ink_decoration$_isVisible)
        return;
      originOffset = C.MatrixUtils_getAsTranslation(transform);
      sizedConfiguration = _this._ink_decoration$_configuration.copyWith$1$size(_this.referenceBox.get$size(0));
      if (originOffset == null) {
        canvas.save$0(0);
        canvas.transform$1(0, transform._vector_math_64$_m4storage);
        _this._ink_decoration$_painter.paint$3(canvas, D.Offset_0_0, sizedConfiguration);
        canvas.restore$0(0);
      } else
        _this._ink_decoration$_painter.paint$3(canvas, originOffset, sizedConfiguration);
    }
  };
  A.ListTileTitleAlignment.prototype = {
    _enumToString$0() {
      return "ListTileTitleAlignment." + this._name;
    },
    _yOffsetFor$4(childHeight, tileHeight, listTile, isLeading) {
      var t1, _0_4, _this = this;
      $label0$0: {
        if (B.ListTileTitleAlignment_0 === _this) {
          t1 = B.ListTileTitleAlignment_3._yOffsetFor$4(childHeight, tileHeight, listTile, isLeading);
          break $label0$0;
        }
        _0_4 = B.ListTileTitleAlignment_1 === _this;
        if (_0_4 && tileHeight > 72) {
          t1 = 16;
          break $label0$0;
        }
        if (_0_4) {
          t1 = (tileHeight - childHeight) / 2;
          if (isLeading)
            t1 = Math.min(t1, 16);
          break $label0$0;
        }
        if (B.ListTileTitleAlignment_2 === _this) {
          t1 = listTile._minVerticalPadding;
          break $label0$0;
        }
        if (B.ListTileTitleAlignment_3 === _this) {
          t1 = (tileHeight - childHeight) / 2;
          break $label0$0;
        }
        if (B.ListTileTitleAlignment_4 === _this) {
          t1 = tileHeight - childHeight - listTile._minVerticalPadding;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    }
  };
  A.ListTile.prototype = {
    _isDenseLayout$2(theme, tileTheme) {
      return false;
    },
    build$1(context) {
      var t4, effectiveIconColor, effectiveColor, leadingAndTrailingStyle, leadingIcon, titleStyle, titleText, subtitleStyle, subtitleText, textDirection, resolvedContentPadding, effectiveMouseCursor, color, t5, t6, t7, t8, t9, _this = this, _null = null,
        theme = G.Theme_of(context),
        tileTheme = R.ListTileTheme_of(context),
        defaults = new A._LisTileDefaultsM3(context, _null, N.RoundedRectangleBorder_Ggx, _null, _null, _null, _null, _null, _null, _null, B.EdgeInsetsDirectional_16_0_24_0, _null, _null, _null, 8, 24, _null, _null, _null, _null, _null, _null),
        t1 = type$.WidgetState,
        t2 = new A.ListTile_build_resolveColor(C.LinkedHashSet_LinkedHashSet$_empty(t1)),
        t3 = t2.call$3(_null, _null, _null);
      if (t3 == null) {
        t3 = tileTheme.iconColor;
        t3 = t2.call$3(t3, tileTheme.selectedColor, t3);
      }
      if (t3 == null) {
        t3 = theme.listTileTheme;
        t4 = t3.iconColor;
        t4 = t2.call$3(t4, t3.selectedColor, t4);
        effectiveIconColor = t4;
      } else
        effectiveIconColor = t3;
      if (effectiveIconColor == null)
        effectiveIconColor = t2.call$4(defaults.get$iconColor(), defaults.get$selectedColor(), defaults.get$iconColor(), theme.disabledColor);
      t3 = t2.call$3(_null, _null, _null);
      if (t3 == null) {
        t3 = tileTheme.textColor;
        t3 = t2.call$3(t3, tileTheme.selectedColor, t3);
      }
      if (t3 == null) {
        t3 = theme.listTileTheme;
        t4 = t3.textColor;
        t4 = t2.call$3(t4, t3.selectedColor, t4);
        effectiveColor = t4;
      } else
        effectiveColor = t3;
      if (effectiveColor == null) {
        t3 = defaults.textColor;
        effectiveColor = t2.call$4(t3, defaults.get$selectedColor(), t3, theme.disabledColor);
      }
      t2 = K.IconButton_styleFrom(_null, _null, _null, _null, _null, _null, effectiveIconColor, _null, _null, _null, _null, _null, _null, _null);
      leadingAndTrailingStyle = tileTheme.leadingAndTrailingTextStyle;
      leadingAndTrailingStyle = (leadingAndTrailingStyle == null ? defaults.get$leadingAndTrailingTextStyle() : leadingAndTrailingStyle).copyWith$1$color(effectiveColor);
      leadingAndTrailingStyle.toString;
      leadingIcon = F.AnimatedDefaultTextStyle$(_this.leading, H.C__Linear, D.Duration_200000, leadingAndTrailingStyle);
      titleStyle = tileTheme.titleTextStyle;
      if (titleStyle == null)
        titleStyle = defaults.get$titleTextStyle();
      _this._isDenseLayout$2(theme, tileTheme);
      titleStyle = titleStyle.copyWith$2$color$fontSize(effectiveColor, _null);
      titleText = F.AnimatedDefaultTextStyle$(_this.title, H.C__Linear, D.Duration_200000, titleStyle);
      t3 = _this.subtitle;
      if (t3 != null) {
        subtitleStyle = tileTheme.subtitleTextStyle;
        if (subtitleStyle == null)
          subtitleStyle = defaults.get$subtitleTextStyle();
        _this._isDenseLayout$2(theme, tileTheme);
        subtitleStyle = subtitleStyle.copyWith$2$color$fontSize(effectiveColor, _null);
        subtitleText = F.AnimatedDefaultTextStyle$(t3, H.C__Linear, D.Duration_200000, subtitleStyle);
      } else {
        subtitleStyle = _null;
        subtitleText = subtitleStyle;
      }
      textDirection = context.dependOnInheritedWidgetOfExactType$1$0(type$.Directionality).textDirection;
      t3 = tileTheme.contentPadding;
      t3 = t3 == null ? _null : t3.resolve$1(textDirection);
      resolvedContentPadding = t3;
      if (resolvedContentPadding == null)
        resolvedContentPadding = defaults.contentPadding.resolve$1(textDirection);
      t1 = C.LinkedHashSet_LinkedHashSet$_empty(t1);
      t3 = F.WidgetStateProperty_resolveAs(_null, t1, type$.nullable_MouseCursor);
      if (t3 == null)
        effectiveMouseCursor = _null;
      else
        effectiveMouseCursor = t3;
      if (effectiveMouseCursor == null)
        effectiveMouseCursor = F.WidgetStateMouseCursor__clickable(type$.Set_WidgetState._as(t1));
      t1 = tileTheme.shape;
      t3 = t1 == null ? P.Border_pk4 : t1;
      t4 = tileTheme.tileColor;
      color = t4 == null ? theme.listTileTheme.tileColor : t4;
      t4 = color == null ? defaults.get$tileColor() : color;
      _this._isDenseLayout$2(theme, tileTheme);
      t5 = titleStyle.textBaseline;
      if (t5 == null) {
        t5 = defaults.get$titleTextStyle().textBaseline;
        t5.toString;
      }
      t6 = subtitleStyle == null ? _null : subtitleStyle.textBaseline;
      if (t6 == null) {
        t6 = defaults.get$subtitleTextStyle().textBaseline;
        t6.toString;
      }
      t7 = tileTheme.horizontalTitleGap;
      if (t7 == null)
        t7 = 16;
      t8 = tileTheme.minVerticalPadding;
      if (t8 == null) {
        t8 = defaults.minVerticalPadding;
        t8.toString;
      }
      t9 = tileTheme.minLeadingWidth;
      if (t9 == null) {
        t9 = defaults.minLeadingWidth;
        t9.toString;
      }
      t2 = Q.SafeArea$(false, K.IconTheme_merge(I.IconButtonTheme$(new A._ListTile(leadingIcon, titleText, subtitleText, _null, false, false, theme.visualDensity, textDirection, t5, t6, t7, t8, t9, tileTheme.minTileHeight, B.ListTileTitleAlignment_0, _null), new G.IconButtonThemeData(t2)), new E.IconThemeData(_null, _null, _null, _null, _null, effectiveIconColor, _null, _null, _null)), _null, true, resolvedContentPadding, true, false);
      return F.InkWell$(false, _null, true, new C.Semantics(C.SemanticsProperties$(_null, _null, _null, _null, _null, true, _null, _null, _null, _null, true, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, _null, false, _null, _null, _null, _null, _null, _null, _null, _null), false, false, false, false, new A.Ink(t2, new O.ShapeDecoration(t4, _null, _null, _null, t3), _null), _null), t1, true, _null, _null, _null, _null, effectiveMouseCursor, _null, _null, _null, _this.onLongPress, _this.onTap, _null, _null, _null, _null);
    }
  };
  A._IndividualOverrides.prototype = {
    resolve$1(states) {
      var t1, _this = this;
      type$.Set_WidgetState._as(states);
      t1 = _this.explicitColor;
      if (t1 instanceof G._WidgetStateColor)
        return F.WidgetStateProperty_resolveAs(t1, states, type$.nullable_Color);
      if (states.contains$1(0, L.WidgetState_6))
        return _this.disabledColor;
      if (states.contains$1(0, H.WidgetState_4))
        return _this.selectedColor;
      return _this.enabledColor;
    }
  };
  A._ListTileSlot.prototype = {
    _enumToString$0() {
      return "_ListTileSlot." + this._name;
    }
  };
  A._ListTile.prototype = {
    get$slots() {
      return B.List_Vf6;
    },
    childForSlot$1(slot) {
      var t1, _this = this;
      switch (type$._ListTileSlot._as(slot).index) {
        case 0:
          t1 = _this.leading;
          break;
        case 1:
          t1 = _this.title;
          break;
        case 2:
          t1 = _this.subtitle;
          break;
        case 3:
          t1 = _this.trailing;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    createRenderObject$1(context) {
      var _this = this,
        t1 = new A._RenderListTile(false, _this.visualDensity, false, _this.textDirection, _this.titleBaselineType, _this.subtitleBaselineType, _this.horizontalTitleGap, _this.minVerticalPadding, _this.minLeadingWidth, _this.minTileHeight, _this.titleAlignment, C.LinkedHashMap_LinkedHashMap$_empty(type$._ListTileSlot, type$.RenderBox), new C._LayoutCacheStorage(), C.LayerHandle$(type$.ContainerLayer));
      t1.RenderObject$0();
      return t1;
    },
    updateRenderObject$2(context, renderObject) {
      var _this = this;
      type$._RenderListTile._as(renderObject);
      renderObject.set$isThreeLine(false);
      renderObject.set$isDense(false);
      renderObject.set$visualDensity(_this.visualDensity);
      renderObject.set$textDirection(_this.textDirection);
      renderObject.set$titleBaselineType(_this.titleBaselineType);
      renderObject.set$subtitleBaselineType(_this.subtitleBaselineType);
      renderObject.set$horizontalTitleGap(_this.horizontalTitleGap);
      renderObject.set$minLeadingWidth(_this.minLeadingWidth);
      renderObject.set$minTileHeight(_this.minTileHeight);
      renderObject.set$minVerticalPadding(_this.minVerticalPadding);
      renderObject.set$titleAlignment(_this.titleAlignment);
    }
  };
  A._RenderListTile.prototype = {
    get$children(_) {
      var t4,
        t1 = C._instanceType(this)._eval$1("SlottedContainerRenderObjectMixin.0"),
        t2 = this.SlottedContainerRenderObjectMixin__slotToChild,
        title = t2.$index(0, t1._as(B._ListTileSlot_1)),
        t3 = C._setArrayType([], type$.JSArray_RenderBox);
      t1._as(B._ListTileSlot_0);
      if (t2.$index(0, B._ListTileSlot_0) != null) {
        t4 = t2.$index(0, B._ListTileSlot_0);
        t4.toString;
        t3.push(t4);
      }
      if (title != null)
        t3.push(title);
      t1._as(B._ListTileSlot_2);
      if (t2.$index(0, B._ListTileSlot_2) != null) {
        t4 = t2.$index(0, B._ListTileSlot_2);
        t4.toString;
        t3.push(t4);
      }
      t1._as(B._ListTileSlot_3);
      if (t2.$index(0, B._ListTileSlot_3) != null) {
        t1 = t2.$index(0, B._ListTileSlot_3);
        t1.toString;
        t3.push(t1);
      }
      return t3;
    },
    set$isDense(value) {
      return;
    },
    set$visualDensity(value) {
      if (this._visualDensity.$eq(0, value))
        return;
      this._visualDensity = value;
      this.markNeedsLayout$0();
    },
    set$isThreeLine(value) {
      return;
    },
    set$textDirection(value) {
      if (this._list_tile$_textDirection === value)
        return;
      this._list_tile$_textDirection = value;
      this.markNeedsLayout$0();
    },
    set$titleBaselineType(value) {
      if (this._titleBaselineType === value)
        return;
      this._titleBaselineType = value;
      this.markNeedsLayout$0();
    },
    set$subtitleBaselineType(value) {
      if (this._subtitleBaselineType === value)
        return;
      this._subtitleBaselineType = value;
      this.markNeedsLayout$0();
    },
    get$_effectiveHorizontalTitleGap() {
      return this._horizontalTitleGap + this._visualDensity.horizontal * 2;
    },
    set$horizontalTitleGap(value) {
      if (this._horizontalTitleGap === value)
        return;
      this._horizontalTitleGap = value;
      this.markNeedsLayout$0();
    },
    set$minVerticalPadding(value) {
      if (this._minVerticalPadding === value)
        return;
      this._minVerticalPadding = value;
      this.markNeedsLayout$0();
    },
    set$minLeadingWidth(value) {
      if (this._minLeadingWidth === value)
        return;
      this._minLeadingWidth = value;
      this.markNeedsLayout$0();
    },
    set$minTileHeight(value) {
      if (this._minTileHeight == value)
        return;
      this._minTileHeight = value;
      this.markNeedsLayout$0();
    },
    set$titleAlignment(value) {
      if (this._titleAlignment === value)
        return;
      this._titleAlignment = value;
      this.markNeedsLayout$0();
    },
    get$sizedByParent() {
      return false;
    },
    computeMinIntrinsicWidth$1(height) {
      var t1, t2, t3, t4, leadingWidth, t5, _this = this;
      C._asDouble(height);
      t1 = C._instanceType(_this)._eval$1("SlottedContainerRenderObjectMixin.0");
      t1._as(B._ListTileSlot_0);
      t2 = _this.SlottedContainerRenderObjectMixin__slotToChild;
      if (t2.$index(0, B._ListTileSlot_0) != null) {
        t3 = t2.$index(0, B._ListTileSlot_0);
        t4 = type$.double;
        leadingWidth = Math.max(t3._computeIntrinsics$2$3(D._IntrinsicDimension_0, height, t3.get$computeMinIntrinsicWidth(), t4, t4), _this._minLeadingWidth) + _this.get$_effectiveHorizontalTitleGap();
      } else
        leadingWidth = 0;
      t3 = t2.$index(0, t1._as(B._ListTileSlot_1));
      t3.toString;
      t4 = type$.double;
      t3 = t3._computeIntrinsics$2$3(D._IntrinsicDimension_0, height, t3.get$computeMinIntrinsicWidth(), t4, t4);
      t5 = t2.$index(0, t1._as(B._ListTileSlot_2));
      t5 = t5 == null ? 0 : t5._computeIntrinsics$2$3(D._IntrinsicDimension_0, height, t5.get$computeMinIntrinsicWidth(), t4, t4);
      t5 = Math.max(t3, t5);
      t1 = t2.$index(0, t1._as(B._ListTileSlot_3));
      t1 = t1 == null ? 0 : t1._computeIntrinsics$2$3(D._IntrinsicDimension_1, height, t1.get$computeMaxIntrinsicWidth(), t4, t4);
      return leadingWidth + t5 + t1;
    },
    computeMaxIntrinsicWidth$1(height) {
      var t1, t2, t3, t4, leadingWidth, t5, _this = this;
      C._asDouble(height);
      t1 = C._instanceType(_this)._eval$1("SlottedContainerRenderObjectMixin.0");
      t1._as(B._ListTileSlot_0);
      t2 = _this.SlottedContainerRenderObjectMixin__slotToChild;
      if (t2.$index(0, B._ListTileSlot_0) != null) {
        t3 = t2.$index(0, B._ListTileSlot_0);
        t4 = type$.double;
        leadingWidth = Math.max(t3._computeIntrinsics$2$3(D._IntrinsicDimension_1, height, t3.get$computeMaxIntrinsicWidth(), t4, t4), _this._minLeadingWidth) + _this.get$_effectiveHorizontalTitleGap();
      } else
        leadingWidth = 0;
      t3 = t2.$index(0, t1._as(B._ListTileSlot_1));
      t3.toString;
      t4 = type$.double;
      t3 = t3._computeIntrinsics$2$3(D._IntrinsicDimension_1, height, t3.get$computeMaxIntrinsicWidth(), t4, t4);
      t5 = t2.$index(0, t1._as(B._ListTileSlot_2));
      t5 = t5 == null ? 0 : t5._computeIntrinsics$2$3(D._IntrinsicDimension_1, height, t5.get$computeMaxIntrinsicWidth(), t4, t4);
      t5 = Math.max(t3, t5);
      t1 = t2.$index(0, t1._as(B._ListTileSlot_3));
      t1 = t1 == null ? 0 : t1._computeIntrinsics$2$3(D._IntrinsicDimension_1, height, t1.get$computeMaxIntrinsicWidth(), t4, t4);
      return leadingWidth + t5 + t1;
    },
    get$_defaultTileHeight() {
      var _0_6, t2, _0_40, _null = null,
        t1 = this._visualDensity,
        baseDensity = new C.Offset(t1.horizontal, t1.vertical).$mul(0, 4),
        _0_4 = this.SlottedContainerRenderObjectMixin__slotToChild.$index(0, C._instanceType(this)._eval$1("SlottedContainerRenderObjectMixin.0")._as(B._ListTileSlot_2)) != null;
      $label0$0: {
        _0_6 = true;
        t1 = true;
        C.boolConversionCheck(t1);
        if (t1) {
          t2 = _0_4;
          _0_40 = t2;
        } else {
          _0_40 = _null;
          t2 = false;
        }
        if (t2) {
          t1 = 72;
          break $label0$0;
        }
        if (C.boolConversionCheck(_0_6)) {
          t2 = false === (t1 ? _0_40 : _0_4);
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          t1 = 56;
          break $label0$0;
        }
        t1 = _null;
      }
      if (typeof t1 !== "number")
        return C.iae(t1);
      return baseDensity._dy + t1;
    },
    computeMinIntrinsicHeight$1(width) {
      var t1, t2, t3, t4, t5, _this = this;
      C._asDouble(width);
      t1 = _this._minTileHeight;
      if (t1 == null)
        t1 = _this.get$_defaultTileHeight();
      t2 = C._instanceType(_this)._eval$1("SlottedContainerRenderObjectMixin.0");
      t3 = _this.SlottedContainerRenderObjectMixin__slotToChild;
      t4 = t3.$index(0, t2._as(B._ListTileSlot_1));
      t4.toString;
      t5 = type$.double;
      t4 = t4._computeIntrinsics$2$3(D._IntrinsicDimension_2, width, t4.get$computeMinIntrinsicHeight(), t5, t5);
      t2 = t3.$index(0, t2._as(B._ListTileSlot_2));
      t2 = t2 == null ? null : t2._computeIntrinsics$2$3(D._IntrinsicDimension_2, width, t2.get$computeMinIntrinsicHeight(), t5, t5);
      return Math.max(t1, t4 + (t2 == null ? 0 : t2));
    },
    computeMaxIntrinsicHeight$1(width) {
      var t1 = type$.double;
      return this._computeIntrinsics$2$3(D._IntrinsicDimension_2, C._asDouble(width), this.get$computeMinIntrinsicHeight(), t1, t1);
    },
    computeDistanceToActualBaseline$1(baseline) {
      var t1, t2;
      type$.TextBaseline._as(baseline);
      C._instanceType(this)._eval$1("SlottedContainerRenderObjectMixin.0")._as(B._ListTileSlot_1);
      t1 = this.SlottedContainerRenderObjectMixin__slotToChild;
      t2 = t1.$index(0, B._ListTileSlot_1);
      t2.toString;
      t2 = t2.parentData;
      t2.toString;
      type$.BoxParentData._as(t2);
      t1 = t1.$index(0, B._ListTileSlot_1);
      t1.toString;
      return E.BaselineOffset__(t1.getDistanceToActualBaseline$1(baseline), t2.offset._dy);
    },
    _computeSizes$4$positionChild(getBaseline, getSize, constraints, positionChild) {
      var t1, looseConstraints, t2, iconConstraints, t3, t4, t5, t6, leadingSize, t7, trailingSize, t8, titleStart, t9, adjustedTrailingWidth, textConstraints, t10, titleHeight, tileHeight, titleY, subtitleHeight, t11, titleBaseline, subtitleBaseline, targetTitleY, targetSubtitleY, halfOverlap, idealTitleY, idealSubtitleY, t12, compact, _this = this;
      type$.nullable_double_Function_RenderBox_BoxConstraints_TextBaseline._as(getBaseline);
      type$.Size_Function_RenderBox_BoxConstraints._as(getSize);
      type$.nullable_void_Function_RenderBox_Offset._as(positionChild);
      t1 = constraints.maxWidth;
      looseConstraints = new C.BoxConstraints(0, t1, 0, constraints.maxHeight);
      t2 = _this._visualDensity;
      iconConstraints = looseConstraints.enforce$1(new C.BoxConstraints(0, 1 / 0, 0, 56 + new C.Offset(t2.horizontal, t2.vertical).$mul(0, 4)._dy));
      t2 = C._instanceType(_this)._eval$1("SlottedContainerRenderObjectMixin.0");
      t3 = _this.SlottedContainerRenderObjectMixin__slotToChild;
      t4 = t3.$index(0, t2._as(B._ListTileSlot_0));
      t5 = t3.$index(0, t2._as(B._ListTileSlot_3));
      t6 = t4 == null;
      leadingSize = t6 ? null : getSize.call$2(t4, iconConstraints);
      t7 = t5 == null;
      trailingSize = t7 ? null : getSize.call$2(t5, iconConstraints);
      t8 = leadingSize == null;
      titleStart = t8 ? 0 : Math.max(_this._minLeadingWidth, leadingSize._dx) + _this.get$_effectiveHorizontalTitleGap();
      t9 = trailingSize == null;
      adjustedTrailingWidth = t9 ? 0 : Math.max(trailingSize._dx + _this.get$_effectiveHorizontalTitleGap(), 32);
      textConstraints = looseConstraints.tighten$1$width(t1 - titleStart - adjustedTrailingWidth);
      t10 = t3.$index(0, t2._as(B._ListTileSlot_2));
      t2._as(B._ListTileSlot_1);
      t2 = t3.$index(0, B._ListTileSlot_1);
      t2.toString;
      titleHeight = getSize.call$2(t2, textConstraints)._dy;
      switch (_this._list_tile$_textDirection.index) {
        case 1:
          t2 = true;
          break;
        case 0:
          t2 = false;
          break;
        default:
          t2 = null;
      }
      if (t10 == null) {
        t10 = _this._minTileHeight;
        if (t10 == null)
          t10 = _this.get$_defaultTileHeight();
        tileHeight = Math.max(t10, titleHeight + 2 * _this._minVerticalPadding);
        titleY = (tileHeight - titleHeight) / 2;
      } else {
        subtitleHeight = getSize.call$2(t10, textConstraints)._dy;
        t11 = t3.$index(0, B._ListTileSlot_1);
        t11.toString;
        titleBaseline = getBaseline.call$3(t11, textConstraints, _this._titleBaselineType);
        if (titleBaseline == null)
          titleBaseline = titleHeight;
        subtitleBaseline = getBaseline.call$3(t10, textConstraints, _this._subtitleBaselineType);
        if (subtitleBaseline == null)
          subtitleBaseline = subtitleHeight;
        targetTitleY = 32 - titleBaseline;
        targetSubtitleY = 52 + _this._visualDensity.vertical * 2 - subtitleBaseline;
        halfOverlap = Math.max(targetTitleY + titleHeight - targetSubtitleY, 0) / 2;
        idealTitleY = targetTitleY - halfOverlap;
        idealSubtitleY = targetSubtitleY + halfOverlap;
        t11 = _this._minVerticalPadding;
        if (!(idealTitleY < t11)) {
          t12 = _this._minTileHeight;
          if (t12 == null)
            t12 = _this.get$_defaultTileHeight();
          compact = idealSubtitleY + subtitleHeight + t11 > t12;
        } else
          compact = true;
        if (positionChild != null) {
          t11 = t2 ? titleStart : adjustedTrailingWidth;
          positionChild.call$2(t10, new C.Offset(t11, compact ? _this._minVerticalPadding + titleHeight : idealSubtitleY));
        }
        if (compact)
          tileHeight = 2 * _this._minVerticalPadding + titleHeight + subtitleHeight;
        else {
          t10 = _this._minTileHeight;
          tileHeight = t10 == null ? _this.get$_defaultTileHeight() : t10;
        }
        titleY = compact ? _this._minVerticalPadding : idealTitleY;
      }
      if (positionChild != null) {
        t3 = t3.$index(0, B._ListTileSlot_1);
        t3.toString;
        positionChild.call$2(t3, new C.Offset(t2 ? titleStart : adjustedTrailingWidth, titleY));
        if (!t6 && !t8) {
          t3 = t2 ? 0 : t1 - leadingSize._dx;
          positionChild.call$2(t4, new C.Offset(t3, _this._titleAlignment._yOffsetFor$4(leadingSize._dy, tileHeight, _this, true)));
        }
        if (!t7 && !t9) {
          t2 = t2 ? t1 - trailingSize._dx : 0;
          positionChild.call$2(t5, new C.Offset(t2, _this._titleAlignment._yOffsetFor$4(trailingSize._dy, tileHeight, _this, false)));
        }
      }
      return new C._Record_3_tex78tConstraints_tileSize_titleY(textConstraints, new C.Size(t1, tileHeight), titleY);
    },
    _computeSizes$3(getBaseline, getSize, constraints) {
      return this._computeSizes$4$positionChild(getBaseline, getSize, constraints, null);
    },
    computeDryBaseline$2(constraints, baseline) {
      var sizes, t1;
      type$.BoxConstraints._as(constraints);
      type$.TextBaseline._as(baseline);
      sizes = this._computeSizes$3(E.layout_helper_ChildLayoutHelper_getDryBaseline$closure(), E.layout_helper_ChildLayoutHelper_dryLayoutChild$closure(), constraints);
      t1 = this.SlottedContainerRenderObjectMixin__slotToChild.$index(0, C._instanceType(this)._eval$1("SlottedContainerRenderObjectMixin.0")._as(B._ListTileSlot_1));
      t1.toString;
      return E.BaselineOffset__(t1.getDryBaseline$2(sizes._0, baseline), sizes._2);
    },
    computeDryLayout$1(constraints) {
      return constraints.constrain$1(this._computeSizes$3(E.layout_helper_ChildLayoutHelper_getDryBaseline$closure(), E.layout_helper_ChildLayoutHelper_dryLayoutChild$closure(), constraints)._1);
    },
    performLayout$0() {
      var _this = this,
        t1 = type$.BoxConstraints,
        t2 = _this._computeSizes$4$positionChild(E.layout_helper_ChildLayoutHelper_getBaseline$closure(), E.layout_helper_ChildLayoutHelper_layoutChild$closure(), t1._as(C.RenderObject.prototype.get$constraints.call(_this)), A.list_tile__RenderListTile__positionBox$closure());
      _this._box$_size = t1._as(C.RenderObject.prototype.get$constraints.call(_this)).constrain$1(t2._1);
    },
    paint$2(context, offset) {
      var t4,
        t1 = new A._RenderListTile_paint_doPaint(context, offset),
        t2 = C._instanceType(this)._eval$1("SlottedContainerRenderObjectMixin.0"),
        t3 = this.SlottedContainerRenderObjectMixin__slotToChild;
      t1.call$1(t3.$index(0, t2._as(B._ListTileSlot_0)));
      t4 = t3.$index(0, t2._as(B._ListTileSlot_1));
      t4.toString;
      t1.call$1(t4);
      t1.call$1(t3.$index(0, t2._as(B._ListTileSlot_2)));
      t1.call$1(t3.$index(0, t2._as(B._ListTileSlot_3)));
    },
    hitTestSelf$1(position) {
      return true;
    },
    hitTestChildren$2$position(result, position) {
      var t1, t2, t3, _i, child, t4;
      for (t1 = this.get$children(0), t2 = t1.length, t3 = type$.BoxParentData, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t4 = child.parentData;
        t4.toString;
        if (result.addWithPaintOffset$3$hitTest$offset$position(new A._RenderListTile_hitTestChildren_closure(child), t3._as(t4).offset, position))
          return true;
      }
      return false;
    }
  };
  A._LisTileDefaultsM3.prototype = {
    get$_list_tile$_theme() {
      var result, _this = this,
        value = _this.___LisTileDefaultsM3__theme_FI;
      if (value === $) {
        result = G.Theme_of(_this.context);
        _this.___LisTileDefaultsM3__theme_FI !== $ && C.throwLateFieldADI("_theme");
        _this.___LisTileDefaultsM3__theme_FI = result;
        value = result;
      }
      return value;
    },
    get$_list_tile$_colors() {
      var t1, _this = this,
        value = _this.___LisTileDefaultsM3__colors_FI;
      if (value === $) {
        t1 = _this.get$_list_tile$_theme();
        _this.___LisTileDefaultsM3__colors_FI !== $ && C.throwLateFieldADI("_colors");
        value = _this.___LisTileDefaultsM3__colors_FI = t1.colorScheme;
      }
      return value;
    },
    get$_list_tile$_textTheme() {
      var t1, _this = this,
        value = _this.___LisTileDefaultsM3__textTheme_FI;
      if (value === $) {
        t1 = _this.get$_list_tile$_theme();
        _this.___LisTileDefaultsM3__textTheme_FI !== $ && C.throwLateFieldADI("_textTheme");
        value = _this.___LisTileDefaultsM3__textTheme_FI = t1.textTheme;
      }
      return value;
    },
    get$tileColor() {
      return D.Color_Edl;
    },
    get$titleTextStyle() {
      var t1 = this.get$_list_tile$_textTheme().bodyLarge;
      t1.toString;
      return t1.copyWith$1$color(this.get$_list_tile$_colors().onSurface);
    },
    get$subtitleTextStyle() {
      var t2, t3,
        t1 = this.get$_list_tile$_textTheme().bodyMedium;
      t1.toString;
      t2 = this.get$_list_tile$_colors();
      t3 = t2._onSurfaceVariant;
      return t1.copyWith$1$color(t3 == null ? t2.onSurface : t3);
    },
    get$leadingAndTrailingTextStyle() {
      var t2, t3,
        t1 = this.get$_list_tile$_textTheme().labelSmall;
      t1.toString;
      t2 = this.get$_list_tile$_colors();
      t3 = t2._onSurfaceVariant;
      return t1.copyWith$1$color(t3 == null ? t2.onSurface : t3);
    },
    get$selectedColor() {
      return this.get$_list_tile$_colors().primary;
    },
    get$iconColor() {
      var t1 = this.get$_list_tile$_colors(),
        t2 = t1._onSurfaceVariant;
      return t2 == null ? t1.onSurface : t2;
    }
  };
  A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin.prototype = {
    attach$1(owner) {
      var t1, t2, _i;
      this.super$RenderObject$attach(owner);
      for (t1 = this.get$children(0), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].attach$1(owner);
    },
    detach$0(_) {
      var t1, t2, _i;
      this.super$RenderObject$detach(0);
      for (t1 = this.get$children(0), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, C.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].detach$0(0);
    }
  };
  A.WidgetStateProperty.prototype = {};
  var typesOffset = hunkHelpers.updateTypes(["double(double)", "~()", "Widget(BuildContext)", "~(RenderBox,Offset)"]);
  A.ListTile_build_resolveColor.prototype = {
    call$4(explicitColor, selectedColor, enabledColor, disabledColor) {
      return new A._IndividualOverrides(explicitColor, enabledColor, selectedColor, disabledColor).resolve$1(this.states);
    },
    call$3(explicitColor, selectedColor, enabledColor) {
      return this.call$4(explicitColor, selectedColor, enabledColor, null);
    },
    $signature: 383
  };
  A._RenderListTile_paint_doPaint.prototype = {
    call$1(child) {
      var t1;
      if (child != null) {
        t1 = child.parentData;
        t1.toString;
        this.context.paintChild$2(child, type$.BoxParentData._as(t1).offset.$add(0, this.offset));
      }
    },
    $signature: 158
  };
  A._RenderListTile_hitTestChildren_closure.prototype = {
    call$2(result, transformed) {
      return this.child.hitTest$2$position(result, transformed);
    },
    $signature: 8
  };
  A.Visibility_of_closure.prototype = {
    call$1($parent) {
      this._box_0.ancestorContext = $parent;
      return false;
    },
    $signature: 15
  };
  (function installTearOffs() {
    var _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _static_2 = hunkHelpers._static_2;
    var _;
    _instance_0_u(_ = A._InkState.prototype, "get$_handleRemoved", "_handleRemoved$0", 1);
    _instance_1_u(_, "get$_build", "_build$1", 2);
    _instance_0_u(A.InkDecoration.prototype, "get$_handleChanged", "_handleChanged$0", 1);
    _static_2(A, "list_tile__RenderListTile__positionBox$closure", "_RenderListTile__positionBox", 3);
    _instance_1_u(_ = A._RenderListTile.prototype, "get$computeMinIntrinsicWidth", "computeMinIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicWidth", "computeMaxIntrinsicWidth$1", 0);
    _instance_1_u(_, "get$computeMinIntrinsicHeight", "computeMinIntrinsicHeight$1", 0);
    _instance_1_u(_, "get$computeMaxIntrinsicHeight", "computeMaxIntrinsicHeight$1", 0);
  })();
  (function inheritance() {
    var _mixinHard = hunkHelpers.mixinHard,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Ink, C.StatefulWidget);
    _inherit(A._InkState, C.State);
    _inherit(A.InkDecoration, G.InkFeature);
    _inheritMany(C._Enum, [A.ListTileTitleAlignment, A._ListTileSlot]);
    _inherit(A.ListTile, C.StatelessWidget);
    _inheritMany(C.Closure, [A.ListTile_build_resolveColor, A._RenderListTile_paint_doPaint, A.Visibility_of_closure]);
    _inherit(A.WidgetStateProperty, C.Object);
    _inherit(A._IndividualOverrides, A.WidgetStateProperty);
    _inherit(A._ListTile, I.SlottedMultiChildRenderObjectWidget);
    _inherit(A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin, C.RenderBox);
    _inherit(A._RenderListTile, A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin);
    _inherit(A._RenderListTile_hitTestChildren_closure, C.Closure2Args);
    _inherit(A._LisTileDefaultsM3, G.ListTileThemeData);
    _mixinHard(A.__RenderListTile_RenderBox_SlottedContainerRenderObjectMixin, I.SlottedContainerRenderObjectMixin);
  })();
  C._Universe_addRules(init.typeUniverse, JSON.parse('{"Ink":{"StatefulWidget":[],"Widget":[],"DiagnosticableTree":[]},"_InkState":{"State":["Ink"],"State.T":"Ink"},"InkDecoration":{"InkFeature":[]},"ListTile":{"StatelessWidget":[],"Widget":[],"DiagnosticableTree":[]},"_ListTileSlot":{"Enum":[]},"ListTileTitleAlignment":{"Enum":[]},"_IndividualOverrides":{"WidgetStateProperty":["Color?"]},"_ListTile":{"SlottedMultiChildRenderObjectWidgetMixin":["_ListTileSlot","RenderBox"],"RenderObjectWidget":[],"Widget":[],"DiagnosticableTree":[],"SlottedMultiChildRenderObjectWidgetMixin.0":"_ListTileSlot","SlottedMultiChildRenderObjectWidgetMixin.1":"RenderBox"},"_RenderListTile":{"RenderBox":[],"SlottedContainerRenderObjectMixin":["_ListTileSlot","RenderBox"],"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[],"SlottedContainerRenderObjectMixin.1":"RenderBox","SlottedContainerRenderObjectMixin.0":"_ListTileSlot"},"_LisTileDefaultsM3":{"ListTileThemeData":[]}}'));
  var type$ = (function rtii() {
    var findType = C.findType;
    return {
      BoxConstraints: findType("BoxConstraints"),
      BoxParentData: findType("BoxParentData"),
      BuildContext: findType("BuildContext"),
      ContainerLayer: findType("ContainerLayer0"),
      Directionality: findType("Directionality"),
      EdgeInsetsGeometry: findType("EdgeInsetsGeometry"),
      JSArray_RenderBox: findType("JSArray<RenderBox>"),
      LabeledGlobalKey_State_StatefulWidget: findType("LabeledGlobalKey<State<StatefulWidget>>"),
      RenderBox: findType("RenderBox"),
      Set_WidgetState: findType("Set<WidgetState>"),
      Size_Function_RenderBox_BoxConstraints: findType("Size(RenderBox,BoxConstraints)"),
      TextBaseline: findType("TextBaseline"),
      WidgetState: findType("WidgetState"),
      _ListTileSlot: findType("_ListTileSlot"),
      _RenderInkFeatures: findType("_RenderInkFeatures"),
      _RenderListTile: findType("_RenderListTile"),
      _VisibilityScope: findType("_VisibilityScope"),
      double: findType("double"),
      nullable_Color: findType("Color?"),
      nullable_MouseCursor: findType("MouseCursor?"),
      nullable_double_Function_RenderBox_BoxConstraints_TextBaseline: findType("double?(RenderBox,BoxConstraints,TextBaseline)"),
      nullable_void_Function_RenderBox_Offset: findType("~(RenderBox,Offset)?")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.EdgeInsetsDirectional_16_0_24_0 = new E.EdgeInsetsDirectional(16, 0, 24, 0);
    B.ListTileTitleAlignment_0 = new A.ListTileTitleAlignment(0, "threeLine");
    B.ListTileTitleAlignment_1 = new A.ListTileTitleAlignment(1, "titleHeight");
    B.ListTileTitleAlignment_2 = new A.ListTileTitleAlignment(2, "top");
    B.ListTileTitleAlignment_3 = new A.ListTileTitleAlignment(3, "center");
    B.ListTileTitleAlignment_4 = new A.ListTileTitleAlignment(4, "bottom");
    B._ListTileSlot_0 = new A._ListTileSlot(0, "leading");
    B._ListTileSlot_1 = new A._ListTileSlot(1, "title");
    B._ListTileSlot_2 = new A._ListTileSlot(2, "subtitle");
    B._ListTileSlot_3 = new A._ListTileSlot(3, "trailing");
    B.List_Vf6 = C._setArrayType(makeConstList([B._ListTileSlot_0, B._ListTileSlot_1, B._ListTileSlot_2, B._ListTileSlot_3]), C.findType("JSArray<_ListTileSlot>"));
  })();
};
;
((d, h) => {
  d[h] = d.current;
  d.eventLog.push({p: "main.dart.js_220", e: "endPart", h: h});
})($__dart_deferred_initializers__, "l0dJpjkbBq5jXPkSjISMSBj32X8=");
;
//# sourceMappingURL=main.dart.js_220.part.js.map
